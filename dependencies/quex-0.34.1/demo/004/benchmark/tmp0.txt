
acct_parm

RESUME

acct_parm

SUSPEND

acct_parm

ACCT_TIMEOUT

acct_parm

static

void

do_acct_process

file

acct_glbs

spinlock_t

lock

volatile

active

volatile

needcheck

file

file

timer_list

timer

static

acct_glbs

acct_globals

__cacheline_aligned

__SPIN_LOCK_UNLOCKED

acct_globals

lock

static

void

acct_timeout

unused

acct_globals

needcheck

static

check_free_space

file

file

kstatfs

sbuf

res

act

sector_t

resume

sector_t

suspend

spin_lock

acct_globals

lock

res

acct_globals

active

file

acct_globals

needcheck

goto

out

spin_unlock

acct_globals

lock

vfs_statfs

file

f_path

dentry

sbuf

return

res

suspend

sbuf

f_blocks

SUSPEND

resume

sbuf

f_blocks

RESUME

sector_div

suspend

sector_div

resume

sbuf

f_bavail

suspend

act

sbuf

f_bavail

resume

act

act

spin_lock

acct_globals

lock

file

acct_globals

file

act

res

act

goto

out

acct_globals

active

act

acct_globals

active

printk

KERN_INFO

act

acct_globals

active

printk

KERN_INFO

del_timer

acct_globals

timer

acct_globals

needcheck

acct_globals

timer

expires

jiffies

ACCT_TIMEOUT

HZ

add_timer

acct_globals

timer

res

acct_globals

active

out

spin_unlock

acct_globals

lock

return

res

static

void

acct_file_reopen

file

file

file

old_acct

NULL

acct_globals

file

old_acct

acct_globals

file

del_timer

acct_globals

timer

acct_globals

active

acct_globals

needcheck

acct_globals

file

NULL

file

acct_globals

file

file

acct_globals

needcheck

acct_globals

active

init_timer

acct_globals

timer

acct_globals

timer

function

acct_timeout

acct_globals

timer

expires

jiffies

ACCT_TIMEOUT

HZ

add_timer

acct_globals

timer

old_acct

mnt_unpin

old_acct

f_path

mnt

spin_unlock

acct_globals

lock

do_acct_process

old_acct

filp_close

old_acct

NULL

spin_lock

acct_globals

lock

static

acct_on

name

file

file

error

file

filp_open

name

O_WRONLY

O_APPEND

O_LARGEFILE

IS_ERR

file

return

PTR_ERR

file

S_ISREG

file

f_path

dentry

d_inode

i_mode

filp_close

file

NULL

return

EACCES

file

f_op

write

filp_close

file

NULL

return

EIO

error

security_acct

file

error

filp_close

file

NULL

return

error

spin_lock

acct_globals

lock

mnt_pin

file

f_path

mnt

acct_file_reopen

file

spin_unlock

acct_globals

lock

mntput

file

f_path

mnt

return

asmlinkage

sys_acct

__user

name

error

capable

CAP_SYS_PACCT

return

EPERM

name

tmp

getname

name

IS_ERR

tmp

return

PTR_ERR

tmp

error

acct_on

tmp

putname

tmp

error

security_acct

NULL

error

spin_lock

acct_globals

lock

acct_file_reopen

NULL

spin_unlock

acct_globals

lock

return

error

void

acct_auto_close_mnt

vfsmount

m

spin_lock

acct_globals

lock

acct_globals

file

acct_globals

file

f_path

mnt

m

acct_file_reopen

NULL

spin_unlock

acct_globals

lock

void

acct_auto_close

super_block

sb

spin_lock

acct_globals

lock

acct_globals

file

acct_globals

file

f_path

mnt

mnt_sb

sb

acct_file_reopen

NULL

spin_unlock

acct_globals

lock

MANTSIZE

EXPSIZE

MAXFRACT

MANTSIZE

static

comp_t

encode_comp_t

value

exp

rnd

exp

rnd

value

MAXFRACT

rnd

value

EXPSIZE

value

EXPSIZE

exp

rnd

value

MAXFRACT

value

EXPSIZE

exp

exp

MANTSIZE

exp

value

return

exp

ACCT_VERSION

ACCT_VERSION

MANTSIZE2

EXPSIZE2

MAXFRACT2

ul

MANTSIZE2

MAXEXP2

EXPSIZE2

static

comp2_t

encode_comp2_t

u64

value

exp

rnd

exp

value

MAXFRACT2

rnd

value

MAXFRACT2

rnd

value

value

exp

rnd

value

MAXFRACT2

value

exp

exp

MAXEXP2

return

ul

MANTSIZE2

EXPSIZE2

return

value

MAXFRACT2

exp

MANTSIZE2

ACCT_VERSION

static

u32

encode_float

u64

value

exp

u

value

return

s64

value

value

exp

u

u32

value

x7fffffu

return

u

exp

static

void

do_acct_process

file

file

pacct_struct

pacct

current

signal

pacct

acct_t

ac

mm_segment_t

fs

flim

u64

elapsed

u64

run_time

timespec

uptime

tty_struct

tty

check_free_space

file

return

memset

caddr_t

ac

sizeof

acct_t

ac

ac_version

ACCT_VERSION

ACCT_BYTEORDER

strlcpy

ac

ac_comm

current

comm

sizeof

ac

ac_comm

do_posix_clock_monotonic_gettime

uptime

run_time

u64

uptime

tv_sec

NSEC_PER_SEC

uptime

tv_nsec

run_time

u64

current

group_leader

start_time

tv_sec

NSEC_PER_SEC

current

group_leader

start_time

tv_nsec

elapsed

nsec_to_AHZ

run_time

ACCT_VERSION

ac

ac_etime

encode_float

elapsed

ac

ac_etime

encode_comp_t

elapsed

l

elapsed

l

ACCT_VERSION

ACCT_VERSION

comp2_t

etime

encode_comp2_t

elapsed

ac

ac_etime_hi

etime

ac

ac_etime_lo

u16

etime

do_div

elapsed

AHZ

ac

ac_btime

xtime

tv_sec

elapsed

ac

ac_uid

current

uid

ac

ac_gid

current

gid

ACCT_VERSION

ac

ac_ahz

AHZ

ACCT_VERSION

ACCT_VERSION

ac

ac_uid16

current

uid

ac

ac_gid16

current

gid

ACCT_VERSION

ac

ac_pid

current

tgid

ac

ac_ppid

current

parent

tgid

spin_lock_irq

current

sighand

siglock

tty

current

signal

tty

ac

ac_tty

tty

old_encode_dev

tty_devnum

tty

ac

ac_utime

encode_comp_t

jiffies_to_AHZ

cputime_to_jiffies

pacct

ac_utime

ac

ac_stime

encode_comp_t

jiffies_to_AHZ

cputime_to_jiffies

pacct

ac_stime

ac

ac_flag

pacct

ac_flag

ac

ac_mem

encode_comp_t

pacct

ac_mem

ac

ac_minflt

encode_comp_t

pacct

ac_minflt

ac

ac_majflt

encode_comp_t

pacct

ac_majflt

ac

ac_exitcode

pacct

ac_exitcode

spin_unlock_irq

current

sighand

siglock

ac

ac_io

encode_comp_t

ac

ac_rw

encode_comp_t

ac

ac_io

ac

ac_swaps

encode_comp_t

fs

get_fs

set_fs

KERNEL_DS

flim

current

signal

rlim

RLIMIT_FSIZE

rlim_cur

current

signal

rlim

RLIMIT_FSIZE

rlim_cur

RLIM_INFINITY

file

f_op

write

file

ac

sizeof

acct_t

file

f_pos

current

signal

rlim

RLIMIT_FSIZE

rlim_cur

flim

set_fs

fs

void

acct_init_pacct

pacct_struct

pacct

memset

pacct

sizeof

pacct_struct

pacct

ac_utime

pacct

ac_stime

cputime_zero

void

acct_collect

exitcode

group_dead

pacct_struct

pacct

current

signal

pacct

vsize

group_dead

current

mm

vm_area_struct

vma

down_read

current

mm

mmap_sem

vma

current

mm

mmap

vma

vsize

vma

vm_end

vma

vm_start

vma

vma

vm_next

up_read

current

mm

mmap_sem

spin_lock_irq

current

sighand

siglock

group_dead

pacct

ac_mem

vsize

thread_group_leader

current

pacct

ac_exitcode

exitcode

current

flags

PF_FORKNOEXEC

pacct

ac_flag

AFORK

current

flags

PF_SUPERPRIV

pacct

ac_flag

ASU

current

flags

PF_DUMPCORE

pacct

ac_flag

ACORE

current

flags

PF_SIGNALED

pacct

ac_flag

AXSIG

pacct

ac_utime

cputime_add

pacct

ac_utime

current

utime

pacct

ac_stime

cputime_add

pacct

ac_stime

current

stime

pacct

ac_minflt

current

min_flt

pacct

ac_majflt

current

maj_flt

spin_unlock_irq

current

sighand

siglock

void

acct_process

void

file

file

NULL

acct_globals

file

return

spin_lock

acct_globals

lock

file

acct_globals

file

unlikely

file

spin_unlock

acct_globals

lock

return

get_file

file

spin_unlock

acct_globals

lock

do_acct_process

file

fput

file

static

audit_initialized

audit_enabled

static

audit_default

static

audit_failure

AUDIT_FAIL_PRINTK

audit_pid

static

audit_rate_limit

static

audit_backlog_limit

static

audit_backlog_wait_time

HZ

static

audit_backlog_wait_overflow

uid_t

audit_sig_uid

pid_t

audit_sig_pid

u32

audit_sig_sid

static

atomic_t

audit_lost

ATOMIC_INIT

static

sock

audit_sock

inotify_handle

audit_ih

list_head

audit_inode_hash

AUDIT_INODE_BUCKETS

static

DEFINE_SPINLOCK

audit_freelist_lock

static

audit_freelist_count

static

LIST_HEAD

audit_freelist

static

sk_buff_head

audit_skb_queue

static

task_struct

kauditd_task

static

DECLARE_WAIT_QUEUE_HEAD

kauditd_wait

static

DECLARE_WAIT_QUEUE_HEAD

audit_backlog_wait

static

DEFINE_MUTEX

audit_cmd_mutex

AUDIT_BUFSIZ

AUDIT_MAXFREE

NR_CPUS

audit_buffer

list_head

list

sk_buff

skb

audit_context

ctx

gfp_t

gfp_mask

static

void

audit_set_pid

audit_buffer

ab

pid_t

pid

nlmsghdr

nlh

nlmsg_hdr

ab

skb

nlh

nlmsg_pid

pid

void

audit_panic

message

audit_failure

case

AUDIT_FAIL_SILENT

case

AUDIT_FAIL_PRINTK

printk

KERN_ERR

message

case

AUDIT_FAIL_PANIC

panic

message

static

inline

audit_rate_check

void

static

last_check

static

messages

static

DEFINE_SPINLOCK

lock

flags

now

elapsed

retval

audit_rate_limit

return

spin_lock_irqsave

lock

flags

messages

audit_rate_limit

retval

now

jiffies

elapsed

now

last_check

elapsed

HZ

last_check

now

messages

retval

spin_unlock_irqrestore

lock

flags

return

retval

void

audit_log_lost

message

static

last_msg

static

DEFINE_SPINLOCK

lock

flags

now

print

atomic_inc

audit_lost

print

audit_failure

AUDIT_FAIL_PANIC

audit_rate_limit

print

spin_lock_irqsave

lock

flags

now

jiffies

now

last_msg

HZ

print

last_msg

now

spin_unlock_irqrestore

lock

flags

print

printk

KERN_WARNING

atomic_read

audit_lost

audit_rate_limit

audit_backlog_limit

audit_panic

message

static

audit_set_rate_limit

limit

uid_t

loginuid

u32

sid

res

rc

old

audit_rate_limit

audit_enabled

res

res

sid

ctx

NULL

u32

len

rc

selinux_sid_to_string

sid

ctx

len

audit_log

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

limit

old

loginuid

ctx

res

kfree

ctx

res

audit_log

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

limit

old

loginuid

res

res

audit_rate_limit

limit

rc

rc

EPERM

return

rc

static

audit_set_backlog_limit

limit

uid_t

loginuid

u32

sid

res

rc

old

audit_backlog_limit

audit_enabled

res

res

sid

ctx

NULL

u32

len

rc

selinux_sid_to_string

sid

ctx

len

audit_log

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

limit

old

loginuid

ctx

res

kfree

ctx

res

audit_log

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

limit

old

loginuid

res

res

audit_backlog_limit

limit

rc

rc

EPERM

return

rc

static

audit_set_enabled

state

uid_t

loginuid

u32

sid

res

rc

old

audit_enabled

state

state

return

EINVAL

audit_enabled

res

res

sid

ctx

NULL

u32

len

rc

selinux_sid_to_string

sid

ctx

len

audit_log

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

state

old

loginuid

ctx

res

kfree

ctx

res

audit_log

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

state

old

loginuid

res

res

audit_enabled

state

rc

rc

EPERM

return

rc

static

audit_set_failure

state

uid_t

loginuid

u32

sid

res

rc

old

audit_failure

state

AUDIT_FAIL_SILENT

state

AUDIT_FAIL_PRINTK

state

AUDIT_FAIL_PANIC

return

EINVAL

audit_enabled

res

res

sid

ctx

NULL

u32

len

rc

selinux_sid_to_string

sid

ctx

len

audit_log

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

state

old

loginuid

ctx

res

kfree

ctx

res

audit_log

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

state

old

loginuid

res

res

audit_failure

state

rc

rc

EPERM

return

rc

static

kauditd_thread

void

dummy

sk_buff

skb

kthread_should_stop

skb

skb_dequeue

audit_skb_queue

wake_up

audit_backlog_wait

skb

audit_pid

err

netlink_unicast

audit_sock

skb

audit_pid

err

BUG_ON

err

ECONNREFUSED

printk

KERN_ERR

audit_pid

audit_pid

printk

KERN_NOTICE

skb

data

NLMSG_SPACE

kfree_skb

skb

DECLARE_WAITQUEUE

wait

current

set_current_state

TASK_INTERRUPTIBLE

add_wait_queue

kauditd_wait

wait

skb_queue_len

audit_skb_queue

try_to_freeze

schedule

__set_current_state

TASK_RUNNING

remove_wait_queue

kauditd_wait

wait

return

audit_send_list

void

_dest

audit_netlink_list

dest

_dest

pid

dest

pid

sk_buff

skb

mutex_lock

audit_cmd_mutex

mutex_unlock

audit_cmd_mutex

skb

__skb_dequeue

dest

q

NULL

netlink_unicast

audit_sock

skb

pid

kfree

dest

return

sk_buff

audit_make_reply

pid

seq

type

done

multi

void

payload

size

sk_buff

skb

nlmsghdr

nlh

len

NLMSG_SPACE

size

void

data

flags

multi

NLM_F_MULTI

t

done

NLMSG_DONE

type

skb

alloc_skb

len

GFP_KERNEL

skb

return

NULL

nlh

NLMSG_PUT

skb

pid

seq

t

size

nlh

nlmsg_flags

flags

data

NLMSG_DATA

nlh

memcpy

data

payload

size

return

skb

nlmsg_failure

skb

kfree_skb

skb

return

NULL

void

audit_send_reply

pid

seq

type

done

multi

void

payload

size

sk_buff

skb

skb

audit_make_reply

pid

seq

type

done

multi

payload

size

skb

return

netlink_unicast

audit_sock

skb

pid

return

static

audit_netlink_ok

sk_buff

skb

u16

msg_type

err

msg_type

case

AUDIT_GET

case

AUDIT_LIST

case

AUDIT_LIST_RULES

case

AUDIT_SET

case

AUDIT_ADD

case

AUDIT_ADD_RULE

case

AUDIT_DEL

case

AUDIT_DEL_RULE

case

AUDIT_SIGNAL_INFO

security_netlink_recv

skb

CAP_AUDIT_CONTROL

err

EPERM

case

AUDIT_USER

case

AUDIT_FIRST_USER_MSG

AUDIT_LAST_USER_MSG

case

AUDIT_FIRST_USER_MSG2

AUDIT_LAST_USER_MSG2

security_netlink_recv

skb

CAP_AUDIT_WRITE

err

EPERM

default

err

EINVAL

return

err

static

audit_receive_msg

sk_buff

skb

nlmsghdr

nlh

u32

uid

pid

seq

sid

void

data

audit_status

status_get

status_set

err

audit_buffer

ab

u16

msg_type

nlh

nlmsg_type

uid_t

loginuid

audit_sig_info

sig_data

ctx

u32

len

err

audit_netlink_ok

skb

msg_type

err

return

err

kauditd_task

kauditd_task

kthread_run

kauditd_thread

NULL

IS_ERR

kauditd_task

err

PTR_ERR

kauditd_task

kauditd_task

NULL

return

err

pid

NETLINK_CREDS

skb

pid

uid

NETLINK_CREDS

skb

uid

loginuid

NETLINK_CB

skb

loginuid

sid

NETLINK_CB

skb

sid

seq

nlh

nlmsg_seq

data

NLMSG_DATA

nlh

msg_type

case

AUDIT_GET

status_set

enabled

audit_enabled

status_set

failure

audit_failure

status_set

pid

audit_pid

status_set

rate_limit

audit_rate_limit

status_set

backlog_limit

audit_backlog_limit

status_set

lost

atomic_read

audit_lost

status_set

backlog

skb_queue_len

audit_skb_queue

audit_send_reply

NETLINK_CB

skb

pid

seq

AUDIT_GET

status_set

sizeof

status_set

case

AUDIT_SET

nlh

nlmsg_len

sizeof

audit_status

return

EINVAL

status_get

audit_status

data

status_get

mask

AUDIT_STATUS_ENABLED

err

audit_set_enabled

status_get

enabled

loginuid

sid

err

return

err

status_get

mask

AUDIT_STATUS_FAILURE

err

audit_set_failure

status_get

failure

loginuid

sid

err

return

err

status_get

mask

AUDIT_STATUS_PID

old

audit_pid

sid

err

selinux_sid_to_string

sid

ctx

len

return

err

audit_log

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

status_get

pid

old

loginuid

ctx

kfree

ctx

audit_log

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

status_get

pid

old

loginuid

audit_pid

status_get

pid

status_get

mask

AUDIT_STATUS_RATE_LIMIT

err

audit_set_rate_limit

status_get

rate_limit

loginuid

sid

status_get

mask

AUDIT_STATUS_BACKLOG_LIMIT

err

audit_set_backlog_limit

status_get

backlog_limit

loginuid

sid

case

AUDIT_USER

case

AUDIT_FIRST_USER_MSG

AUDIT_LAST_USER_MSG

case

AUDIT_FIRST_USER_MSG2

AUDIT_LAST_USER_MSG2

audit_enabled

msg_type

AUDIT_USER_AVC

return

err

audit_filter_user

NETLINK_CB

skb

msg_type

err

err

ab

audit_log_start

NULL

GFP_KERNEL

msg_type

ab

audit_log_format

ab

pid

uid

loginuid

sid

selinux_sid_to_string

sid

ctx

len

audit_log_format

ab

sid

audit_log_format

ab

ctx

kfree

ctx

audit_log_format

ab

data

audit_set_pid

ab

pid

audit_log_end

ab

case

AUDIT_ADD

case

AUDIT_DEL

nlmsg_len

nlh

sizeof

audit_rule

return

EINVAL

audit_enabled

ab

audit_log_start

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

ab

audit_log_format

ab

pid

uid

loginuid

sid

selinux_sid_to_string

sid

ctx

len

audit_log_format

ab

sid

audit_log_format

ab

ctx

kfree

ctx

audit_log_format

ab

audit_enabled

audit_log_end

ab

return

EPERM

case

AUDIT_LIST

err

audit_receive_filter

nlh

nlmsg_type

NETLINK_CB

skb

pid

uid

seq

data

nlmsg_len

nlh

loginuid

sid

case

AUDIT_ADD_RULE

case

AUDIT_DEL_RULE

nlmsg_len

nlh

sizeof

audit_rule_data

return

EINVAL

audit_enabled

ab

audit_log_start

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

ab

audit_log_format

ab

pid

uid

loginuid

sid

selinux_sid_to_string

sid

ctx

len

audit_log_format

ab

sid

audit_log_format

ab

ctx

kfree

ctx

audit_log_format

ab

audit_enabled

audit_log_end

ab

return

EPERM

case

AUDIT_LIST_RULES

err

audit_receive_filter

nlh

nlmsg_type

NETLINK_CB

skb

pid

uid

seq

data

nlmsg_len

nlh

loginuid

sid

case

AUDIT_SIGNAL_INFO

err

selinux_sid_to_string

audit_sig_sid

ctx

len

err

return

err

sig_data

kmalloc

sizeof

sig_data

len

GFP_KERNEL

sig_data

kfree

ctx

return

ENOMEM

sig_data

uid

audit_sig_uid

sig_data

pid

audit_sig_pid

memcpy

sig_data

ctx

ctx

len

kfree

ctx

audit_send_reply

NETLINK_CB

skb

pid

seq

AUDIT_SIGNAL_INFO

sig_data

sizeof

sig_data

len

kfree

sig_data

default

err

EINVAL

return

err

err

static

void

audit_receive_skb

sk_buff

skb

err

nlmsghdr

nlh

u32

rlen

skb

len

NLMSG_SPACE

nlh

nlmsg_hdr

skb

nlh

nlmsg_len

sizeof

nlh

skb

len

nlh

nlmsg_len

return

rlen

NLMSG_ALIGN

nlh

nlmsg_len

rlen

skb

len

rlen

skb

len

err

audit_receive_msg

skb

nlh

netlink_ack

skb

nlh

err

nlh

nlmsg_flags

NLM_F_ACK

netlink_ack

skb

nlh

skb_pull

skb

rlen

static

void

audit_receive

sock

sk

length

sk_buff

skb

qlen

mutex_lock

audit_cmd_mutex

qlen

skb_queue_len

sk

sk_receive_queue

qlen

qlen

skb

skb_dequeue

sk

sk_receive_queue

audit_receive_skb

skb

kfree_skb

skb

mutex_unlock

audit_cmd_mutex

CONFIG_AUDITSYSCALL

static

inotify_operations

audit_inotify_ops

handle_event

audit_handle_ievent

destroy_watch

audit_free_parent

static

__init

audit_init

void

i

printk

KERN_INFO

audit_default

audit_sock

netlink_kernel_create

NETLINK_AUDIT

audit_receive

NULL

THIS_MODULE

audit_sock

audit_panic

audit_sock

sk_sndtimeo

MAX_SCHEDULE_TIMEOUT

skb_queue_head_init

audit_skb_queue

audit_initialized

audit_enabled

audit_default

selinux_audit_set_callback

selinux_audit_rule_update

audit_log

NULL

GFP_KERNEL

AUDIT_KERNEL

CONFIG_AUDITSYSCALL

audit_ih

inotify_init

audit_inotify_ops

IS_ERR

audit_ih

audit_panic

i

i

AUDIT_INODE_BUCKETS

i

INIT_LIST_HEAD

audit_inode_hash

i

return

__initcall

audit_init

static

__init

audit_enable

str

audit_default

simple_strtol

str

NULL

printk

KERN_INFO

audit_default

audit_initialized

audit_initialized

audit_enabled

audit_default

return

__setup

audit_enable

static

void

audit_buffer_free

audit_buffer

ab

flags

ab

return

ab

skb

kfree_skb

ab

skb

spin_lock_irqsave

audit_freelist_lock

flags

audit_freelist_count

AUDIT_MAXFREE

kfree

ab

audit_freelist_count

list_add

ab

list

audit_freelist

spin_unlock_irqrestore

audit_freelist_lock

flags

static

audit_buffer

audit_buffer_alloc

audit_context

ctx

gfp_t

gfp_mask

type

flags

audit_buffer

ab

NULL

nlmsghdr

nlh

spin_lock_irqsave

audit_freelist_lock

flags

list_empty

audit_freelist

ab

list_entry

audit_freelist

next

audit_buffer

list

list_del

ab

list

audit_freelist_count

spin_unlock_irqrestore

audit_freelist_lock

flags

ab

ab

kmalloc

sizeof

ab

gfp_mask

ab

goto

err

ab

skb

alloc_skb

AUDIT_BUFSIZ

gfp_mask

ab

skb

goto

err

ab

ctx

ctx

ab

gfp_mask

gfp_mask

nlh

nlmsghdr

skb_put

ab

skb

NLMSG_SPACE

nlh

nlmsg_type

type

nlh

nlmsg_flags

nlh

nlmsg_pid

nlh

nlmsg_seq

return

ab

err

audit_buffer_free

ab

return

NULL

audit_serial

void

static

DEFINE_SPINLOCK

serial_lock

static

serial

flags

ret

spin_lock_irqsave

serial_lock

flags

ret

serial

unlikely

ret

spin_unlock_irqrestore

serial_lock

flags

return

ret

static

inline

void

audit_get_stamp

audit_context

ctx

timespec

t

serial

ctx

auditsc_get_stamp

ctx

t

serial

t

CURRENT_TIME

serial

audit_serial

audit_buffer

audit_log_start

audit_context

ctx

gfp_t

gfp_mask

type

audit_buffer

ab

NULL

timespec

t

serial

reserve

timeout_start

jiffies

audit_initialized

return

NULL

unlikely

audit_filter_type

type

return

NULL

gfp_mask

__GFP_WAIT

reserve

reserve

audit_backlog_limit

skb_queue_len

audit_skb_queue

audit_backlog_limit

reserve

gfp_mask

__GFP_WAIT

audit_backlog_wait_time

time_before

jiffies

timeout_start

audit_backlog_wait_time

DECLARE_WAITQUEUE

wait

current

set_current_state

TASK_INTERRUPTIBLE

add_wait_queue

audit_backlog_wait

wait

audit_backlog_limit

skb_queue_len

audit_skb_queue

audit_backlog_limit

schedule_timeout

timeout_start

audit_backlog_wait_time

jiffies

__set_current_state

TASK_RUNNING

remove_wait_queue

audit_backlog_wait

wait

audit_rate_check

printk

KERN_WARNING

skb_queue_len

audit_skb_queue

audit_backlog_limit

audit_log_lost

audit_backlog_wait_time

audit_backlog_wait_overflow

wake_up

audit_backlog_wait

return

NULL

ab

audit_buffer_alloc

ctx

gfp_mask

type

ab

audit_log_lost

return

NULL

audit_get_stamp

ab

ctx

t

serial

audit_log_format

ab

t

tv_sec

t

tv_nsec

serial

return

ab

static

inline

audit_expand

audit_buffer

ab

extra

sk_buff

skb

ab

skb

ret

pskb_expand_head

skb

skb_headroom

skb

extra

ab

gfp_mask

ret

audit_log_lost

return

return

skb_tailroom

skb

void

audit_log_vformat

audit_buffer

ab

fmt

va_list

args

len

avail

sk_buff

skb

va_list

args2

ab

return

BUG_ON

ab

skb

skb

ab

skb

avail

skb_tailroom

skb

avail

avail

audit_expand

ab

AUDIT_BUFSIZ

avail

goto

out

va_copy

args2

args

len

vsnprintf

skb_tail_pointer

skb

avail

fmt

args

len

avail

avail

audit_expand

ab

max_t

AUDIT_BUFSIZ

len

avail

avail

goto

out

len

vsnprintf

skb_tail_pointer

skb

avail

fmt

args2

len

skb_put

skb

len

out

return

void

audit_log_format

audit_buffer

ab

fmt

va_list

args

ab

return

va_start

args

fmt

audit_log_vformat

ab

fmt

args

va_end

args

void

audit_log_hex

audit_buffer

ab

buf

size_t

len

i

avail

new_len

ptr

sk_buff

skb

static

hex

ab

return

BUG_ON

ab

skb

skb

ab

skb

avail

skb_tailroom

skb

new_len

len

new_len

avail

new_len

AUDIT_BUFSIZ

new_len

avail

AUDIT_BUFSIZ

avail

audit_expand

ab

new_len

avail

return

ptr

skb_tail_pointer

skb

i

i

len

i

ptr

hex

buf

i

xF0

ptr

hex

buf

i

x0F

ptr

skb_put

skb

len

static

void

audit_log_n_string

audit_buffer

ab

size_t

slen

string

avail

new_len

ptr

sk_buff

skb

ab

return

BUG_ON

ab

skb

skb

ab

skb

avail

skb_tailroom

skb

new_len

slen

new_len

avail

avail

audit_expand

ab

new_len

avail

return

ptr

skb_tail_pointer

skb

ptr

memcpy

ptr

string

slen

ptr

slen

ptr

ptr

skb_put

skb

slen

audit_log_n_untrustedstring

audit_buffer

ab

size_t

len

string

p

string

p

p

p

x21

p

x7f

audit_log_hex

ab

string

len

return

string

len

p

audit_log_n_string

ab

len

string

return

p

audit_log_untrustedstring

audit_buffer

ab

string

return

audit_log_n_untrustedstring

ab

strlen

string

string

void

audit_log_d_path

audit_buffer

ab

prefix

dentry

dentry

vfsmount

vfsmnt

p

path

prefix

audit_log_format

ab

prefix

path

kmalloc

PATH_MAX

ab

gfp_mask

path

audit_log_format

ab

return

p

d_path

dentry

vfsmnt

path

PATH_MAX

IS_ERR

p

audit_log_format

ab

audit_log_untrustedstring

ab

p

kfree

path

void

audit_log_end

audit_buffer

ab

ab

return

audit_rate_check

audit_log_lost

audit_pid

nlmsghdr

nlh

nlmsg_hdr

ab

skb

nlh

nlmsg_len

ab

skb

len

NLMSG_SPACE

skb_queue_tail

audit_skb_queue

ab

skb

ab

skb

NULL

wake_up_interruptible

kauditd_wait

printk

KERN_NOTICE

ab

skb

data

NLMSG_SPACE

audit_buffer_free

ab

void

audit_log

audit_context

ctx

gfp_t

gfp_mask

type

fmt

audit_buffer

ab

va_list

args

ab

audit_log_start

ctx

gfp_mask

type

ab

va_start

args

fmt

audit_log_vformat

ab

fmt

args

va_end

args

audit_log_end

ab

EXPORT_SYMBOL

audit_log_start

EXPORT_SYMBOL

audit_log_end

EXPORT_SYMBOL

audit_log_format

EXPORT_SYMBOL

audit_log

EXPORT_SYMBOL_GPL

audit_log_vformat

EXPORT_SYMBOL_GPL

audit_log_untrustedstring

EXPORT_SYMBOL_GPL

audit_log_d_path

audit_parent

list_head

ilist

list_head

watches

inotify_watch

wdata

flags

AUDIT_PARENT_INVALID

x001

list_head

audit_filter_list

AUDIT_NR_FILTERS

LIST_HEAD_INIT

audit_filter_list

LIST_HEAD_INIT

audit_filter_list

LIST_HEAD_INIT

audit_filter_list

LIST_HEAD_INIT

audit_filter_list

LIST_HEAD_INIT

audit_filter_list

LIST_HEAD_INIT

audit_filter_list

AUDIT_NR_FILTERS

Fix

audit_filter_list

initialiser

static

DEFINE_MUTEX

audit_filter_mutex

extern

inotify_handle

audit_ih

AUDIT_IN_WATCH

IN_MOVE

IN_CREATE

IN_DELETE

IN_DELETE_SELF

IN_MOVE_SELF

void

audit_free_parent

inotify_watch

i_watch

audit_parent

parent

parent

container_of

i_watch

audit_parent

wdata

WARN_ON

list_empty

parent

watches

kfree

parent

static

inline

void

audit_get_watch

audit_watch

watch

atomic_inc

watch

count

static

void

audit_put_watch

audit_watch

watch

atomic_dec_and_test

watch

count

WARN_ON

watch

parent

WARN_ON

list_empty

watch

rules

kfree

watch

path

kfree

watch

static

void

audit_remove_watch

audit_watch

watch

list_del

watch

wlist

put_inotify_watch

watch

parent

wdata

watch

parent

NULL

audit_put_watch

watch

static

inline

void

audit_free_rule

audit_entry

e

i

e

rule

watch

audit_put_watch

e

rule

watch

e

rule

fields

i

i

e

rule

field_count

i

audit_field

f

e

rule

fields

i

kfree

f

se_str

selinux_audit_rule_free

f

se_rule

kfree

e

rule

fields

kfree

e

rule

filterkey

kfree

e

static

inline

void

audit_free_rule_rcu

rcu_head

head

audit_entry

e

container_of

head

audit_entry

rcu

audit_free_rule

e

static

audit_parent

audit_init_parent

nameidata

ndp

audit_parent

parent

s32

wd

parent

kzalloc

sizeof

parent

GFP_KERNEL

unlikely

parent

return

ERR_PTR

ENOMEM

INIT_LIST_HEAD

parent

watches

parent

flags

inotify_init_watch

parent

wdata

get_inotify_watch

parent

wdata

wd

inotify_add_watch

audit_ih

parent

wdata

ndp

dentry

d_inode

AUDIT_IN_WATCH

wd

audit_free_parent

parent

wdata

return

ERR_PTR

wd

return

parent

static

audit_watch

audit_init_watch

path

audit_watch

watch

watch

kzalloc

sizeof

watch

GFP_KERNEL

unlikely

watch

return

ERR_PTR

ENOMEM

INIT_LIST_HEAD

watch

rules

atomic_set

watch

count

watch

path

path

watch

dev

dev_t

watch

ino

return

watch

static

inline

audit_entry

audit_init_entry

u32

field_count

audit_entry

entry

audit_field

fields

entry

kzalloc

sizeof

entry

GFP_KERNEL

unlikely

entry

return

NULL

fields

kzalloc

sizeof

fields

field_count

GFP_KERNEL

unlikely

fields

kfree

entry

return

NULL

entry

rule

fields

fields

return

entry

static

audit_unpack_string

void

bufp

size_t

remain

size_t

len

str

bufp

len

len

remain

return

ERR_PTR

EINVAL

len

PATH_MAX

return

ERR_PTR

ENAMETOOLONG

str

kmalloc

len

GFP_KERNEL

unlikely

str

return

ERR_PTR

ENOMEM

memcpy

str

bufp

len

str

len

bufp

len

remain

len

return

str

static

inline

audit_to_inode

audit_krule

krule

audit_field

f

krule

listnr

AUDIT_FILTER_EXIT

krule

watch

krule

inode_f

return

EINVAL

krule

inode_f

f

return

static

audit_to_watch

audit_krule

krule

path

len

u32

op

audit_watch

watch

audit_ih

return

EOPNOTSUPP

path

path

len

krule

listnr

AUDIT_FILTER_EXIT

op

AUDIT_EQUAL

krule

inode_f

krule

watch

return

EINVAL

watch

audit_init_watch

path

unlikely

IS_ERR

watch

return

PTR_ERR

watch

audit_get_watch

watch

krule

watch

watch

return

static

__u32

classes

AUDIT_SYSCALL_CLASSES

__init

audit_register_class

class

list

__u32

p

kzalloc

AUDIT_BITMASK_SIZE

sizeof

__u32

GFP_KERNEL

p

return

ENOMEM

list

U

n

list

n

AUDIT_BITMASK_SIZE

AUDIT_SYSCALL_CLASSES

kfree

p

return

EINVAL

p

AUDIT_WORD

n

AUDIT_BIT

n

class

AUDIT_SYSCALL_CLASSES

classes

class

kfree

p

return

EINVAL

classes

class

p

return

audit_match_class

class

syscall

unlikely

syscall

AUDIT_BITMASK_SIZE

sizeof

__u32

return

unlikely

class

AUDIT_SYSCALL_CLASSES

classes

class

return

return

classes

class

AUDIT_WORD

syscall

AUDIT_BIT

syscall

CONFIG_AUDITSYSCALL

static

inline

audit_match_class_bits

class

u32

mask

i

classes

class

i

i

AUDIT_BITMASK_SIZE

i

mask

i

classes

class

i

return

return

static

audit_match_signal

audit_entry

entry

audit_field

arch

entry

rule

arch_f

arch

return

audit_match_class_bits

AUDIT_CLASS_SIGNAL

entry

rule

mask

audit_match_class_bits

AUDIT_CLASS_SIGNAL_32

entry

rule

mask

audit_classify_arch

arch

val

case

return

audit_match_class_bits

AUDIT_CLASS_SIGNAL

entry

rule

mask

case

return

audit_match_class_bits

AUDIT_CLASS_SIGNAL_32

entry

rule

mask

default

return

static

inline

audit_entry

audit_to_entry_common

audit_rule

rule

listnr

audit_entry

entry

i

err

err

EINVAL

listnr

rule

flags

AUDIT_FILTER_PREPEND

listnr

default

goto

exit_err

case

AUDIT_FILTER_USER

case

AUDIT_FILTER_TYPE

CONFIG_AUDITSYSCALL

case

AUDIT_FILTER_ENTRY

case

AUDIT_FILTER_EXIT

case

AUDIT_FILTER_TASK

unlikely

rule

action

AUDIT_POSSIBLE

printk

KERN_ERR

goto

exit_err

rule

action

AUDIT_NEVER

rule

action

AUDIT_ALWAYS

goto

exit_err

rule

field_count

AUDIT_MAX_FIELDS

goto

exit_err

err

ENOMEM

entry

audit_init_entry

rule

field_count

entry

goto

exit_err

entry

rule

flags

rule

flags

AUDIT_FILTER_PREPEND

entry

rule

listnr

listnr

entry

rule

action

rule

action

entry

rule

field_count

rule

field_count

i

i

AUDIT_BITMASK_SIZE

i

entry

rule

mask

i

rule

mask

i

i

i

AUDIT_SYSCALL_CLASSES

i

bit

AUDIT_BITMASK_SIZE

i

__u32

p

entry

rule

mask

AUDIT_WORD

bit

__u32

class

p

AUDIT_BIT

bit

p

AUDIT_BIT

bit

class

classes

i

class

j

j

j

AUDIT_BITMASK_SIZE

j

entry

rule

mask

j

class

j

return

entry

exit_err

return

ERR_PTR

err

static

audit_entry

audit_rule_to_entry

audit_rule

rule

audit_entry

entry

audit_field

f

err

i

entry

audit_to_entry_common

rule

IS_ERR

entry

goto

exit_nofree

i

i

rule

field_count

i

audit_field

f

entry

rule

fields

i

f

op

rule

fields

i

AUDIT_NEGATE

AUDIT_OPERATORS

f

type

rule

fields

i

AUDIT_NEGATE

AUDIT_OPERATORS

f

val

rule

values

i

err

EINVAL

f

type

default

goto

exit_free

case

AUDIT_PID

case

AUDIT_UID

case

AUDIT_EUID

case

AUDIT_SUID

case

AUDIT_FSUID

case

AUDIT_GID

case

AUDIT_EGID

case

AUDIT_SGID

case

AUDIT_FSGID

case

AUDIT_LOGINUID

case

AUDIT_PERS

case

AUDIT_MSGTYPE

case

AUDIT_PPID

case

AUDIT_DEVMAJOR

case

AUDIT_DEVMINOR

case

AUDIT_EXIT

case

AUDIT_SUCCESS

case

AUDIT_ARG0

case

AUDIT_ARG1

case

AUDIT_ARG2

case

AUDIT_ARG3

case

AUDIT_ARCH

f

op

AUDIT_NOT_EQUAL

f

op

AUDIT_EQUAL

f

op

AUDIT_NEGATE

f

op

err

EINVAL

goto

exit_free

entry

rule

arch_f

f

case

AUDIT_PERM

f

val

goto

exit_free

case

AUDIT_INODE

err

audit_to_inode

entry

rule

f

err

goto

exit_free

entry

rule

vers_ops

f

op

AUDIT_OPERATORS

f

op

AUDIT_NEGATE

f

op

AUDIT_NOT_EQUAL

f

op

f

op

AUDIT_EQUAL

f

op

AUDIT_OPERATORS

err

EINVAL

goto

exit_free

f

entry

rule

inode_f

f

f

op

case

AUDIT_NOT_EQUAL

entry

rule

inode_f

NULL

case

AUDIT_EQUAL

default

err

EINVAL

goto

exit_free

exit_nofree

return

entry

exit_free

audit_free_rule

entry

return

ERR_PTR

err

static

audit_entry

audit_data_to_entry

audit_rule_data

data

size_t

datasz

err

audit_entry

entry

audit_field

f

void

bufp

size_t

remain

datasz

sizeof

audit_rule_data

i

str

entry

audit_to_entry_common

audit_rule

data

IS_ERR

entry

goto

exit_nofree

bufp

data

buf

entry

rule

vers_ops

i

i

data

field_count

i

audit_field

f

entry

rule

fields

i

err

EINVAL

data

fieldflags

i

AUDIT_OPERATORS

data

fieldflags

i

AUDIT_OPERATORS

goto

exit_free

f

op

data

fieldflags

i

AUDIT_OPERATORS

f

type

data

fields

i

f

val

data

values

i

f

se_str

NULL

f

se_rule

NULL

f

type

case

AUDIT_PID

case

AUDIT_UID

case

AUDIT_EUID

case

AUDIT_SUID

case

AUDIT_FSUID

case

AUDIT_GID

case

AUDIT_EGID

case

AUDIT_SGID

case

AUDIT_FSGID

case

AUDIT_LOGINUID

case

AUDIT_PERS

case

AUDIT_MSGTYPE

case

AUDIT_PPID

case

AUDIT_DEVMAJOR

case

AUDIT_DEVMINOR

case

AUDIT_EXIT

case

AUDIT_SUCCESS

case

AUDIT_ARG0

case

AUDIT_ARG1

case

AUDIT_ARG2

case

AUDIT_ARG3

case

AUDIT_ARCH

entry

rule

arch_f

f

case

AUDIT_SUBJ_USER

case

AUDIT_SUBJ_ROLE

case

AUDIT_SUBJ_TYPE

case

AUDIT_SUBJ_SEN

case

AUDIT_SUBJ_CLR

case

AUDIT_OBJ_USER

case

AUDIT_OBJ_ROLE

case

AUDIT_OBJ_TYPE

case

AUDIT_OBJ_LEV_LOW

case

AUDIT_OBJ_LEV_HIGH

str

audit_unpack_string

bufp

remain

f

val

IS_ERR

str

goto

exit_free

entry

rule

buflen

f

val

err

selinux_audit_rule_init

f

type

f

op

str

f

se_rule

err

EINVAL

printk

KERN_WARNING

str

err

err

kfree

str

goto

exit_free

f

se_str

str

case

AUDIT_WATCH

str

audit_unpack_string

bufp

remain

f

val

IS_ERR

str

goto

exit_free

entry

rule

buflen

f

val

err

audit_to_watch

entry

rule

str

f

val

f

op

err

kfree

str

goto

exit_free

case

AUDIT_INODE

err

audit_to_inode

entry

rule

f

err

goto

exit_free

case

AUDIT_FILTERKEY

err

EINVAL

entry

rule

filterkey

f

val

AUDIT_MAX_KEY_LEN

goto

exit_free

str

audit_unpack_string

bufp

remain

f

val

IS_ERR

str

goto

exit_free

entry

rule

buflen

f

val

entry

rule

filterkey

str

case

AUDIT_PERM

f

val

goto

exit_free

default

goto

exit_free

f

entry

rule

inode_f

f

f

op

case

AUDIT_NOT_EQUAL

entry

rule

inode_f

NULL

case

AUDIT_EQUAL

default

err

EINVAL

goto

exit_free

exit_nofree

return

entry

exit_free

audit_free_rule

entry

return

ERR_PTR

err

static

inline

size_t

audit_pack_string

void

bufp

str

size_t

len

strlen

str

memcpy

bufp

str

len

bufp

len

return

len

static

audit_rule

audit_krule_to_rule

audit_krule

krule

audit_rule

rule

i

rule

kzalloc

sizeof

rule

GFP_KERNEL

unlikely

rule

return

NULL

rule

flags

krule

flags

krule

listnr

rule

action

krule

action

rule

field_count

krule

field_count

i

i

rule

field_count

i

rule

values

i

krule

fields

i

val

rule

fields

i

krule

fields

i

type

krule

vers_ops

krule

fields

i

op

AUDIT_NOT_EQUAL

rule

fields

i

AUDIT_NEGATE

rule

fields

i

krule

fields

i

op

i

i

AUDIT_BITMASK_SIZE

i

rule

mask

i

krule

mask

i

return

rule

static

audit_rule_data

audit_krule_to_data

audit_krule

krule

audit_rule_data

data

void

bufp

i

data

kmalloc

sizeof

data

krule

buflen

GFP_KERNEL

unlikely

data

return

NULL

memset

data

sizeof

data

data

flags

krule

flags

krule

listnr

data

action

krule

action

data

field_count

krule

field_count

bufp

data

buf

i

i

data

field_count

i

audit_field

f

krule

fields

i

data

fields

i

f

type

data

fieldflags

i

f

op

f

type

case

AUDIT_SUBJ_USER

case

AUDIT_SUBJ_ROLE

case

AUDIT_SUBJ_TYPE

case

AUDIT_SUBJ_SEN

case

AUDIT_SUBJ_CLR

case

AUDIT_OBJ_USER

case

AUDIT_OBJ_ROLE

case

AUDIT_OBJ_TYPE

case

AUDIT_OBJ_LEV_LOW

case

AUDIT_OBJ_LEV_HIGH

data

buflen

data

values

i

audit_pack_string

bufp

f

se_str

case

AUDIT_WATCH

data

buflen

data

values

i

audit_pack_string

bufp

krule

watch

path

case

AUDIT_FILTERKEY

data

buflen

data

values

i

audit_pack_string

bufp

krule

filterkey

default

data

values

i

f

val

i

i

AUDIT_BITMASK_SIZE

i

data

mask

i

krule

mask

i

return

data

static

audit_compare_rule

audit_krule

a

audit_krule

b

i

a

flags

b

flags

a

listnr

b

listnr

a

action

b

action

a

field_count

b

field_count

return

i

i

a

field_count

i

a

fields

i

type

b

fields

i

type

a

fields

i

op

b

fields

i

op

return

a

fields

i

type

case

AUDIT_SUBJ_USER

case

AUDIT_SUBJ_ROLE

case

AUDIT_SUBJ_TYPE

case

AUDIT_SUBJ_SEN

case

AUDIT_SUBJ_CLR

case

AUDIT_OBJ_USER

case

AUDIT_OBJ_ROLE

case

AUDIT_OBJ_TYPE

case

AUDIT_OBJ_LEV_LOW

case

AUDIT_OBJ_LEV_HIGH

strcmp

a

fields

i

se_str

b

fields

i

se_str

return

case

AUDIT_WATCH

strcmp

a

watch

path

b

watch

path

return

case

AUDIT_FILTERKEY

strcmp

a

filterkey

b

filterkey

return

default

a

fields

i

val

b

fields

i

val

return

i

i

AUDIT_BITMASK_SIZE

i

a

mask

i

b

mask

i

return

return

static

audit_watch

audit_dupe_watch

audit_watch

old

path

audit_watch

new

path

kstrdup

old

path

GFP_KERNEL

unlikely

path

return

ERR_PTR

ENOMEM

new

audit_init_watch

path

unlikely

IS_ERR

new

kfree

path

goto

out

new

dev

old

dev

new

ino

old

ino

get_inotify_watch

old

parent

wdata

new

parent

old

parent

out

return

new

static

inline

audit_dupe_selinux_field

audit_field

df

audit_field

sf

ret

se_str

se_str

kstrdup

sf

se_str

GFP_KERNEL

unlikely

se_str

return

ENOMEM

df

se_str

se_str

ret

selinux_audit_rule_init

df

type

df

op

df

se_str

df

se_rule

ret

EINVAL

printk

KERN_WARNING

df

se_str

ret

return

ret

static

audit_entry

audit_dupe_rule

audit_krule

old

audit_watch

watch

u32

fcount

old

field_count

audit_entry

entry

audit_krule

new

fk

i

err

entry

audit_init_entry

fcount

unlikely

entry

return

ERR_PTR

ENOMEM

new

entry

rule

new

vers_ops

old

vers_ops

new

flags

old

flags

new

listnr

old

listnr

new

action

old

action

i

i

AUDIT_BITMASK_SIZE

i

new

mask

i

old

mask

i

new

buflen

old

buflen

new

inode_f

old

inode_f

new

watch

NULL

new

field_count

old

field_count

memcpy

new

fields

old

fields

sizeof

audit_field

fcount

i

i

fcount

i

new

fields

i

type

case

AUDIT_SUBJ_USER

case

AUDIT_SUBJ_ROLE

case

AUDIT_SUBJ_TYPE

case

AUDIT_SUBJ_SEN

case

AUDIT_SUBJ_CLR

case

AUDIT_OBJ_USER

case

AUDIT_OBJ_ROLE

case

AUDIT_OBJ_TYPE

case

AUDIT_OBJ_LEV_LOW

case

AUDIT_OBJ_LEV_HIGH

err

audit_dupe_selinux_field

new

fields

i

old

fields

i

case

AUDIT_FILTERKEY

fk

kstrdup

old

filterkey

GFP_KERNEL

unlikely

fk

err

ENOMEM

new

filterkey

fk

err

audit_free_rule

entry

return

ERR_PTR

err

watch

audit_get_watch

watch

new

watch

watch

return

entry

static

void

audit_update_watch

audit_parent

parent

dname

dev_t

dev

ino

invalidating

audit_watch

owatch

nwatch

nextw

audit_krule

r

nextr

audit_entry

oentry

nentry

audit_buffer

ab

mutex_lock

audit_filter_mutex

list_for_each_entry_safe

owatch

nextw

parent

watches

wlist

audit_compare_dname_path

dname

owatch

path

NULL

invalidating

current

audit_context

audit_filter_inodes

current

current

audit_context

AUDIT_RECORD_CONTEXT

audit_set_auditable

current

audit_context

nwatch

audit_dupe_watch

owatch

unlikely

IS_ERR

nwatch

mutex_unlock

audit_filter_mutex

audit_panic

return

nwatch

dev

dev

nwatch

ino

ino

list_for_each_entry_safe

r

nextr

owatch

rules

rlist

oentry

container_of

r

audit_entry

rule

list_del

oentry

rule

rlist

list_del_rcu

oentry

list

nentry

audit_dupe_rule

oentry

rule

nwatch

unlikely

IS_ERR

nentry

audit_panic

h

audit_hash_ino

u32

ino

list_add

nentry

rule

rlist

nwatch

rules

list_add_rcu

nentry

list

audit_inode_hash

h

call_rcu

oentry

rcu

audit_free_rule_rcu

ab

audit_log_start

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

audit_log_format

ab

audit_log_untrustedstring

ab

owatch

path

audit_log_format

ab

dev

ino

audit_log_format

ab

r

listnr

audit_log_end

ab

audit_remove_watch

owatch

goto

add_watch_to_parent

mutex_unlock

audit_filter_mutex

return

add_watch_to_parent

list_add

nwatch

wlist

parent

watches

mutex_unlock

audit_filter_mutex

return

static

void

audit_remove_parent_watches

audit_parent

parent

audit_watch

w

nextw

audit_krule

r

nextr

audit_entry

e

audit_buffer

ab

mutex_lock

audit_filter_mutex

parent

flags

AUDIT_PARENT_INVALID

list_for_each_entry_safe

w

nextw

parent

watches

wlist

list_for_each_entry_safe

r

nextr

w

rules

rlist

e

container_of

r

audit_entry

rule

ab

audit_log_start

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

audit_log_format

ab

audit_log_untrustedstring

ab

w

path

r

filterkey

audit_log_format

ab

audit_log_untrustedstring

ab

r

filterkey

audit_log_format

ab

audit_log_format

ab

r

listnr

audit_log_end

ab

list_del

r

rlist

list_del_rcu

e

list

call_rcu

e

rcu

audit_free_rule_rcu

audit_remove_watch

w

mutex_unlock

audit_filter_mutex

static

void

audit_inotify_unregister

list_head

in_list

audit_parent

p

n

list_for_each_entry_safe

p

n

in_list

ilist

list_del

p

ilist

inotify_rm_watch

audit_ih

p

wdata

put_inotify_watch

p

wdata

static

audit_entry

audit_find_rule

audit_entry

entry

list_head

list

audit_entry

e

found

NULL

h

entry

rule

watch

h

h

AUDIT_INODE_BUCKETS

h

list

audit_inode_hash

h

list_for_each_entry

e

list

list

audit_compare_rule

entry

rule

e

rule

found

e

goto

out

goto

out

list_for_each_entry

e

list

list

audit_compare_rule

entry

rule

e

rule

found

e

goto

out

out

return

found

static

audit_get_nd

path

nameidata

ndp

nameidata

ndw

nameidata

ndparent

ndwatch

err

ndparent

kmalloc

sizeof

ndparent

GFP_KERNEL

unlikely

ndparent

return

ENOMEM

ndwatch

kmalloc

sizeof

ndwatch

GFP_KERNEL

unlikely

ndwatch

kfree

ndparent

return

ENOMEM

err

path_lookup

path

LOOKUP_PARENT

ndparent

err

kfree

ndparent

kfree

ndwatch

return

err

err

path_lookup

path

ndwatch

err

kfree

ndwatch

ndwatch

NULL

ndp

ndparent

ndw

ndwatch

return

static

void

audit_put_nd

nameidata

ndp

nameidata

ndw

ndp

path_release

ndp

kfree

ndp

ndw

path_release

ndw

kfree

ndw

static

void

audit_add_to_parent

audit_krule

krule

audit_parent

parent

audit_watch

w

watch

krule

watch

watch_found

list_for_each_entry

w

parent

watches

wlist

strcmp

watch

path

w

path

watch_found

audit_put_watch

watch

audit_put_watch

watch

audit_get_watch

w

krule

watch

watch

w

watch_found

get_inotify_watch

parent

wdata

watch

parent

parent

list_add

watch

wlist

parent

watches

list_add

krule

rlist

watch

rules

static

audit_add_watch

audit_krule

krule

nameidata

ndp

nameidata

ndw

audit_watch

watch

krule

watch

inotify_watch

i_watch

audit_parent

parent

ret

ndw

watch

dev

ndw

dentry

d_inode

i_sb

s_dev

watch

ino

ndw

dentry

d_inode

i_ino

mutex_unlock

audit_filter_mutex

inotify_find_watch

audit_ih

ndp

dentry

d_inode

i_watch

parent

audit_init_parent

ndp

IS_ERR

parent

mutex_lock

audit_filter_mutex

return

PTR_ERR

parent

parent

container_of

i_watch

audit_parent

wdata

mutex_lock

audit_filter_mutex

parent

flags

AUDIT_PARENT_INVALID

ret

ENOENT

audit_add_to_parent

krule

parent

put_inotify_watch

parent

wdata

return

ret

static

inline

audit_add_rule

audit_entry

entry

list_head

list

audit_entry

e

audit_field

inode_f

entry

rule

inode_f

audit_watch

watch

entry

rule

watch

nameidata

ndp

ndw

h

err

putnd_needed

CONFIG_AUDITSYSCALL

dont_count

entry

rule

listnr

AUDIT_FILTER_USER

entry

rule

listnr

AUDIT_FILTER_TYPE

dont_count

inode_f

h

audit_hash_ino

inode_f

val

list

audit_inode_hash

h

mutex_lock

audit_filter_mutex

e

audit_find_rule

entry

list

mutex_unlock

audit_filter_mutex

e

err

EEXIST

goto

error

watch

err

audit_get_nd

watch

path

ndp

ndw

err

goto

error

putnd_needed

mutex_lock

audit_filter_mutex

watch

err

audit_add_watch

entry

rule

ndp

ndw

err

mutex_unlock

audit_filter_mutex

goto

error

h

audit_hash_ino

u32

watch

ino

list

audit_inode_hash

h

entry

rule

flags

AUDIT_FILTER_PREPEND

list_add_rcu

entry

list

list

entry

rule

flags

AUDIT_FILTER_PREPEND

list_add_tail_rcu

entry

list

list

CONFIG_AUDITSYSCALL

dont_count

audit_n_rules

audit_match_signal

entry

audit_signals

mutex_unlock

audit_filter_mutex

putnd_needed

audit_put_nd

ndp

ndw

return

error

putnd_needed

audit_put_nd

ndp

ndw

watch

audit_put_watch

watch

return

err

static

inline

audit_del_rule

audit_entry

entry

list_head

list

audit_entry

e

audit_field

inode_f

entry

rule

inode_f

audit_watch

watch

tmp_watch

entry

rule

watch

LIST_HEAD

inotify_list

h

ret

CONFIG_AUDITSYSCALL

dont_count

entry

rule

listnr

AUDIT_FILTER_USER

entry

rule

listnr

AUDIT_FILTER_TYPE

dont_count

inode_f

h

audit_hash_ino

inode_f

val

list

audit_inode_hash

h

mutex_lock

audit_filter_mutex

e

audit_find_rule

entry

list

e

mutex_unlock

audit_filter_mutex

ret

ENOENT

goto

out

watch

e

rule

watch

watch

audit_parent

parent

watch

parent

list_del

e

rule

rlist

list_empty

watch

rules

audit_remove_watch

watch

list_empty

parent

watches

list_add

parent

ilist

inotify_list

get_inotify_watch

parent

wdata

list_del_rcu

e

list

call_rcu

e

rcu

audit_free_rule_rcu

CONFIG_AUDITSYSCALL

dont_count

audit_n_rules

audit_match_signal

entry

audit_signals

mutex_unlock

audit_filter_mutex

list_empty

inotify_list

audit_inotify_unregister

inotify_list

out

tmp_watch

audit_put_watch

tmp_watch

return

ret

static

void

audit_list

pid

seq

sk_buff_head

q

sk_buff

skb

audit_entry

entry

i

i

i

AUDIT_NR_FILTERS

i

list_for_each_entry

entry

audit_filter_list

i

list

audit_rule

rule

rule

audit_krule_to_rule

entry

rule

unlikely

rule

skb

audit_make_reply

pid

seq

AUDIT_LIST

rule

sizeof

rule

skb

skb_queue_tail

q

skb

kfree

rule

i

i

AUDIT_INODE_BUCKETS

i

list_for_each_entry

entry

audit_inode_hash

i

list

audit_rule

rule

rule

audit_krule_to_rule

entry

rule

unlikely

rule

skb

audit_make_reply

pid

seq

AUDIT_LIST

rule

sizeof

rule

skb

skb_queue_tail

q

skb

kfree

rule

skb

audit_make_reply

pid

seq

AUDIT_LIST

NULL

skb

skb_queue_tail

q

skb

static

void

audit_list_rules

pid

seq

sk_buff_head

q

sk_buff

skb

audit_entry

e

i

i

i

AUDIT_NR_FILTERS

i

list_for_each_entry

e

audit_filter_list

i

list

audit_rule_data

data

data

audit_krule_to_data

e

rule

unlikely

data

skb

audit_make_reply

pid

seq

AUDIT_LIST_RULES

data

sizeof

data

data

buflen

skb

skb_queue_tail

q

skb

kfree

data

i

i

AUDIT_INODE_BUCKETS

i

list_for_each_entry

e

audit_inode_hash

i

list

audit_rule_data

data

data

audit_krule_to_data

e

rule

unlikely

data

skb

audit_make_reply

pid

seq

AUDIT_LIST_RULES

data

sizeof

data

data

buflen

skb

skb_queue_tail

q

skb

kfree

data

skb

audit_make_reply

pid

seq

AUDIT_LIST_RULES

NULL

skb

skb_queue_tail

q

skb

static

void

audit_log_rule_change

uid_t

loginuid

u32

sid

action

audit_krule

rule

res

audit_buffer

ab

ab

audit_log_start

NULL

GFP_KERNEL

AUDIT_CONFIG_CHANGE

ab

return

audit_log_format

ab

loginuid

sid

ctx

NULL

u32

len

selinux_sid_to_string

sid

ctx

len

audit_log_format

ab

sid

audit_log_format

ab

ctx

kfree

ctx

audit_log_format

ab

action

rule

filterkey

audit_log_untrustedstring

ab

rule

filterkey

audit_log_format

ab

audit_log_format

ab

rule

listnr

res

audit_log_end

ab

audit_receive_filter

type

pid

uid

seq

void

data

size_t

datasz

uid_t

loginuid

u32

sid

task_struct

tsk

audit_netlink_list

dest

err

audit_entry

entry

type

case

AUDIT_LIST

case

AUDIT_LIST_RULES

dest

kmalloc

sizeof

audit_netlink_list

GFP_KERNEL

dest

return

ENOMEM

dest

pid

pid

skb_queue_head_init

dest

q

mutex_lock

audit_filter_mutex

type

AUDIT_LIST

audit_list

pid

seq

dest

q

audit_list_rules

pid

seq

dest

q

mutex_unlock

audit_filter_mutex

tsk

kthread_run

audit_send_list

dest

IS_ERR

tsk

skb_queue_purge

dest

q

kfree

dest

err

PTR_ERR

tsk

case

AUDIT_ADD

case

AUDIT_ADD_RULE

type

AUDIT_ADD

entry

audit_rule_to_entry

data

entry

audit_data_to_entry

data

datasz

IS_ERR

entry

return

PTR_ERR

entry

err

audit_add_rule

entry

audit_filter_list

entry

rule

listnr

audit_log_rule_change

loginuid

sid

entry

rule

err

err

audit_free_rule

entry

case

AUDIT_DEL

case

AUDIT_DEL_RULE

type

AUDIT_DEL

entry

audit_rule_to_entry

data

entry

audit_data_to_entry

data

datasz

IS_ERR

entry

return

PTR_ERR

entry

err

audit_del_rule

entry

audit_filter_list

entry

rule

listnr

audit_log_rule_change

loginuid

sid

entry

rule

err

audit_free_rule

entry

default

return

EINVAL

return

err

audit_comparator

u32

left

u32

op

u32

right

op

case

AUDIT_EQUAL

return

left

right

case

AUDIT_NOT_EQUAL

return

left

right

case

AUDIT_LESS_THAN

return

left

right

case

AUDIT_LESS_THAN_OR_EQUAL

return

left

right

case

AUDIT_GREATER_THAN

return

left

right

case

AUDIT_GREATER_THAN_OR_EQUAL

return

left

right

BUG

return

audit_compare_dname_path

dname

path

dirlen

dlen

plen

p

dname

path

return

dlen

strlen

dname

plen

strlen

path

plen

dlen

return

p

path

plen

p

p

path

p

p

p

dlen

p

path

return

p

path

p

return

p

dirlen

dirlen

p

path

return

strncmp

p

dname

dlen

static

audit_filter_user_rules

netlink_skb_parms

cb

audit_krule

rule

enum

audit_state

state

i

i

i

rule

field_count

i

audit_field

f

rule

fields

i

result

f

type

case

AUDIT_PID

result

audit_comparator

cb

creds

pid

f

op

f

val

case

AUDIT_UID

result

audit_comparator

cb

creds

uid

f

op

f

val

case

AUDIT_GID

result

audit_comparator

cb

creds

gid

f

op

f

val

case

AUDIT_LOGINUID

result

audit_comparator

cb

loginuid

f

op

f

val

result

return

rule

action

case

AUDIT_NEVER

state

AUDIT_DISABLED

case

AUDIT_ALWAYS

state

AUDIT_RECORD_CONTEXT

return

audit_filter_user

netlink_skb_parms

cb

type

enum

audit_state

state

AUDIT_DISABLED

audit_entry

e

ret

rcu_read_lock

list_for_each_entry_rcu

e

audit_filter_list

AUDIT_FILTER_USER

list

audit_filter_user_rules

cb

e

rule

state

state

AUDIT_DISABLED

ret

rcu_read_unlock

return

ret

audit_filter_type

type

audit_entry

e

result

rcu_read_lock

list_empty

audit_filter_list

AUDIT_FILTER_TYPE

goto

unlock_and_return

list_for_each_entry_rcu

e

audit_filter_list

AUDIT_FILTER_TYPE

list

i

i

i

e

rule

field_count

i

audit_field

f

e

rule

fields

i

f

type

AUDIT_MSGTYPE

result

audit_comparator

type

f

op

f

val

result

result

goto

unlock_and_return

unlock_and_return

rcu_read_unlock

return

result

static

inline

audit_rule_has_selinux

audit_krule

rule

i

i

i

rule

field_count

i

audit_field

f

rule

fields

i

f

type

case

AUDIT_SUBJ_USER

case

AUDIT_SUBJ_ROLE

case

AUDIT_SUBJ_TYPE

case

AUDIT_SUBJ_SEN

case

AUDIT_SUBJ_CLR

case

AUDIT_OBJ_USER

case

AUDIT_OBJ_ROLE

case

AUDIT_OBJ_TYPE

case

AUDIT_OBJ_LEV_LOW

case

AUDIT_OBJ_LEV_HIGH

return

return

selinux_audit_rule_update

void

audit_entry

entry

n

nentry

audit_watch

watch

i

err

mutex_lock

audit_filter_mutex

i

i

AUDIT_NR_FILTERS

i

list_for_each_entry_safe

entry

n

audit_filter_list

i

list

audit_rule_has_selinux

entry

rule

watch

entry

rule

watch

nentry

audit_dupe_rule

entry

rule

watch

unlikely

IS_ERR

nentry

err

err

PTR_ERR

nentry

audit_panic

watch

list_del

entry

rule

rlist

list_del_rcu

entry

list

watch

list_add

nentry

rule

rlist

watch

rules

list_del

entry

rule

rlist

list_replace_rcu

entry

list

nentry

list

call_rcu

entry

rcu

audit_free_rule_rcu

mutex_unlock

audit_filter_mutex

return

err

void

audit_handle_ievent

inotify_watch

i_watch

u32

wd

u32

mask

u32

cookie

dname

inode

inode

audit_parent

parent

parent

container_of

i_watch

audit_parent

wdata

mask

IN_CREATE

IN_MOVED_TO

inode

audit_update_watch

parent

dname

inode

i_sb

s_dev

inode

i_ino

mask

IN_DELETE

IN_MOVED_FROM

audit_update_watch

parent

dname

dev_t

mask

IN_DELETE_SELF

IN_UNMOUNT

audit_remove_parent_watches

parent

mask

IN_MOVE_SELF

audit_remove_parent_watches

parent

inotify_remove_watch_locked

audit_ih

i_watch

mask

IN_IGNORED

put_inotify_watch

i_watch

extern

list_head

audit_filter_list

extern

audit_enabled

AUDIT_NAMES

AUDIT_NAME_FULL

audit_n_rules

audit_signals

audit_names

name

name_len

name_put

ino

dev_t

dev

umode_t

mode

uid_t

uid

gid_t

gid

dev_t

rdev

u32

osid

audit_aux_data

audit_aux_data

next

type

AUDIT_AUX_IPCPERM

AUDIT_AUX_PIDS

audit_aux_data_mq_open

audit_aux_data

d

oflag

mode_t

mode

mq_attr

attr

audit_aux_data_mq_sendrecv

audit_aux_data

d

mqd_t

mqdes

size_t

msg_len

msg_prio

timespec

abs_timeout

audit_aux_data_mq_notify

audit_aux_data

d

mqd_t

mqdes

sigevent

notification

audit_aux_data_mq_getsetattr

audit_aux_data

d

mqd_t

mqdes

mq_attr

mqstat

audit_aux_data_ipcctl

audit_aux_data

d

ipc_perm

p

qbytes

uid_t

uid

gid_t

gid

mode_t

mode

u32

osid

audit_aux_data_execve

audit_aux_data

d

argc

envc

mem

audit_aux_data_socketcall

audit_aux_data

d

nargs

args

audit_aux_data_sockaddr

audit_aux_data

d

len

a

audit_aux_data_fd_pair

audit_aux_data

d

fd

audit_aux_data_path

audit_aux_data

d

dentry

dentry

vfsmount

mnt

audit_aux_data_pids

audit_aux_data

d

pid_t

target_pid

AUDIT_AUX_PIDS

u32

target_sid

AUDIT_AUX_PIDS

pid_count

audit_context

dummy

in_syscall

enum

audit_state

state

serial

timespec

ctime

uid_t

loginuid

major

argv

return_valid

return_code

auditable

name_count

audit_names

names

AUDIT_NAMES

filterkey

dentry

pwd

vfsmount

pwdmnt

audit_context

previous

audit_aux_data

aux

audit_aux_data

aux_pids

pid_t

pid

ppid

uid_t

uid

euid

suid

fsuid

gid_t

gid

egid

sgid

fsgid

personality

arch

pid_t

target_pid

u32

target_sid

AUDIT_DEBUG

put_count

ino_count

ACC_MODE

x

x

O_ACCMODE

static

inline

open_arg

flags

mask

n

ACC_MODE

flags

flags

O_TRUNC

O_CREAT

n

AUDIT_PERM_WRITE

return

n

mask

static

audit_match_perm

audit_context

ctx

mask

n

ctx

major

audit_classify_syscall

ctx

arch

n

case

mask

AUDIT_PERM_WRITE

audit_match_class

AUDIT_CLASS_WRITE

n

return

mask

AUDIT_PERM_READ

audit_match_class

AUDIT_CLASS_READ

n

return

mask

AUDIT_PERM_ATTR

audit_match_class

AUDIT_CLASS_CHATTR

n

return

return

case

mask

AUDIT_PERM_WRITE

audit_match_class

AUDIT_CLASS_WRITE_32

n

return

mask

AUDIT_PERM_READ

audit_match_class

AUDIT_CLASS_READ_32

n

return

mask

AUDIT_PERM_ATTR

audit_match_class

AUDIT_CLASS_CHATTR_32

n

return

return

case

return

mask

ACC_MODE

ctx

argv

case

return

mask

ACC_MODE

ctx

argv

case

return

mask

AUDIT_PERM_WRITE

ctx

argv

SYS_BIND

case

return

mask

AUDIT_PERM_EXEC

default

return

static

audit_filter_rules

task_struct

tsk

audit_krule

rule

audit_context

ctx

audit_names

name

enum

audit_state

state

i

j

need_sid

u32

sid

i

i

rule

field_count

i

audit_field

f

rule

fields

i

result

f

type

case

AUDIT_PID

result

audit_comparator

tsk

pid

f

op

f

val

case

AUDIT_PPID

ctx

ctx

ppid

ctx

ppid

sys_getppid

result

audit_comparator

ctx

ppid

f

op

f

val

case

AUDIT_UID

result

audit_comparator

tsk

uid

f

op

f

val

case

AUDIT_EUID

result

audit_comparator

tsk

euid

f

op

f

val

case

AUDIT_SUID

result

audit_comparator

tsk

suid

f

op

f

val

case

AUDIT_FSUID

result

audit_comparator

tsk

fsuid

f

op

f

val

case

AUDIT_GID

result

audit_comparator

tsk

gid

f

op

f

val

case

AUDIT_EGID

result

audit_comparator

tsk

egid

f

op

f

val

case

AUDIT_SGID

result

audit_comparator

tsk

sgid

f

op

f

val

case

AUDIT_FSGID

result

audit_comparator

tsk

fsgid

f

op

f

val

case

AUDIT_PERS

result

audit_comparator

tsk

personality

f

op

f

val

case

AUDIT_ARCH

ctx

result

audit_comparator

ctx

arch

f

op

f

val

case

AUDIT_EXIT

ctx

ctx

return_valid

result

audit_comparator

ctx

return_code

f

op

f

val

case

AUDIT_SUCCESS

ctx

ctx

return_valid

f

val

result

audit_comparator

ctx

return_valid

f

op

AUDITSC_SUCCESS

result

audit_comparator

ctx

return_valid

f

op

AUDITSC_FAILURE

case

AUDIT_DEVMAJOR

name

result

audit_comparator

MAJOR

name

dev

f

op

f

val

ctx

j

j

ctx

name_count

j

audit_comparator

MAJOR

ctx

names

j

dev

f

op

f

val

result

case

AUDIT_DEVMINOR

name

result

audit_comparator

MINOR

name

dev

f

op

f

val

ctx

j

j

ctx

name_count

j

audit_comparator

MINOR

ctx

names

j

dev

f

op

f

val

result

case

AUDIT_INODE

name

result

name

ino

f

val

ctx

j

j

ctx

name_count

j

audit_comparator

ctx

names

j

ino

f

op

f

val

result

case

AUDIT_WATCH

name

rule

watch

ino

result

name

dev

rule

watch

dev

name

ino

rule

watch

ino

case

AUDIT_LOGINUID

result

ctx

result

audit_comparator

ctx

loginuid

f

op

f

val

case

AUDIT_SUBJ_USER

case

AUDIT_SUBJ_ROLE

case

AUDIT_SUBJ_TYPE

case

AUDIT_SUBJ_SEN

case

AUDIT_SUBJ_CLR

f

se_rule

need_sid

selinux_get_task_sid

tsk

sid

need_sid

result

selinux_audit_rule_match

sid

f

type

f

op

f

se_rule

ctx

case

AUDIT_OBJ_USER

case

AUDIT_OBJ_ROLE

case

AUDIT_OBJ_TYPE

case

AUDIT_OBJ_LEV_LOW

case

AUDIT_OBJ_LEV_HIGH

f

se_rule

name

result

selinux_audit_rule_match

name

osid

f

type

f

op

f

se_rule

ctx

ctx

j

j

ctx

name_count

j

selinux_audit_rule_match

ctx

names

j

osid

f

type

f

op

f

se_rule

ctx

result

ctx

audit_aux_data

aux

aux

ctx

aux

aux

aux

aux

next

aux

type

AUDIT_IPC

audit_aux_data_ipcctl

axi

void

aux

selinux_audit_rule_match

axi

osid

f

type

f

op

f

se_rule

ctx

result

case

AUDIT_ARG0

case

AUDIT_ARG1

case

AUDIT_ARG2

case

AUDIT_ARG3

ctx

result

audit_comparator

ctx

argv

f

type

AUDIT_ARG0

f

op

f

val

case

AUDIT_FILTERKEY

result

case

AUDIT_PERM

result

audit_match_perm

ctx

f

val

result

return

rule

filterkey

ctx

filterkey

kstrdup

rule

filterkey

GFP_ATOMIC

rule

action

case

AUDIT_NEVER

state

AUDIT_DISABLED

case

AUDIT_ALWAYS

state

AUDIT_RECORD_CONTEXT

return

static

enum

audit_state

audit_filter_task

task_struct

tsk

audit_entry

e

enum

audit_state

state

rcu_read_lock

list_for_each_entry_rcu

e

audit_filter_list

AUDIT_FILTER_TASK

list

audit_filter_rules

tsk

e

rule

NULL

NULL

state

rcu_read_unlock

return

state

rcu_read_unlock

return

AUDIT_BUILD_CONTEXT

static

enum

audit_state

audit_filter_syscall

task_struct

tsk

audit_context

ctx

list_head

list

audit_entry

e

enum

audit_state

state

audit_pid

tsk

tgid

audit_pid

return

AUDIT_DISABLED

rcu_read_lock

list_empty

list

word

AUDIT_WORD

ctx

major

bit

AUDIT_BIT

ctx

major

list_for_each_entry_rcu

e

list

list

e

rule

mask

word

bit

bit

audit_filter_rules

tsk

e

rule

ctx

NULL

state

rcu_read_unlock

return

state

rcu_read_unlock

return

AUDIT_BUILD_CONTEXT

enum

audit_state

audit_filter_inodes

task_struct

tsk

audit_context

ctx

i

audit_entry

e

enum

audit_state

state

audit_pid

tsk

tgid

audit_pid

return

AUDIT_DISABLED

rcu_read_lock

i

i

ctx

name_count

i

word

AUDIT_WORD

ctx

major

bit

AUDIT_BIT

ctx

major

audit_names

n

ctx

names

i

h

audit_hash_ino

u32

n

ino

list_head

list

audit_inode_hash

h

list_empty

list

list_for_each_entry_rcu

e

list

list

e

rule

mask

word

bit

bit

audit_filter_rules

tsk

e

rule

ctx

n

state

rcu_read_unlock

return

state

rcu_read_unlock

return

AUDIT_BUILD_CONTEXT

void

audit_set_auditable

audit_context

ctx

ctx

auditable

static

inline

audit_context

audit_get_context

task_struct

tsk

return_valid

return_code

audit_context

context

tsk

audit_context

likely

context

return

NULL

context

return_valid

return_valid

context

return_code

return_code

context

in_syscall

context

dummy

context

auditable

enum

audit_state

state

state

audit_filter_syscall

tsk

context

audit_filter_list

AUDIT_FILTER_EXIT

state

AUDIT_RECORD_CONTEXT

context

auditable

goto

get_context

state

audit_filter_inodes

tsk

context

state

AUDIT_RECORD_CONTEXT

context

auditable

get_context

tsk

audit_context

NULL

return

context

static

inline

void

audit_free_names

audit_context

context

i

AUDIT_DEBUG

context

auditable

context

put_count

context

ino_count

context

name_count

printk

KERN_ERR

__FILE__

__LINE__

context

serial

context

major

context

in_syscall

context

name_count

context

put_count

context

ino_count

i

i

context

name_count

i

printk

KERN_ERR

i

context

names

i

name

context

names

i

name

dump_stack

return

AUDIT_DEBUG

context

put_count

context

ino_count

i

i

context

name_count

i

context

names

i

name

context

names

i

name_put

__putname

context

names

i

name

context

name_count

context

pwd

dput

context

pwd

context

pwdmnt

mntput

context

pwdmnt

context

pwd

NULL

context

pwdmnt

NULL

static

inline

void

audit_free_aux

audit_context

context

audit_aux_data

aux

aux

context

aux

aux

type

AUDIT_AVC_PATH

audit_aux_data_path

axi

void

aux

dput

axi

dentry

mntput

axi

mnt

context

aux

aux

next

kfree

aux

aux

context

aux_pids

context

aux_pids

aux

next

kfree

aux

static

inline

void

audit_zero_context

audit_context

context

enum

audit_state

state

uid_t

loginuid

context

loginuid

memset

context

sizeof

context

context

state

state

context

loginuid

loginuid

static

inline

audit_context

audit_alloc_context

enum

audit_state

state

audit_context

context

context

kmalloc

sizeof

context

GFP_KERNEL

return

NULL

audit_zero_context

context

state

return

context

audit_alloc

task_struct

tsk

audit_context

context

enum

audit_state

state

likely

audit_enabled

return

state

audit_filter_task

tsk

likely

state

AUDIT_DISABLED

return

context

audit_alloc_context

state

audit_log_lost

return

ENOMEM

context

loginuid

current

audit_context

context

loginuid

current

audit_context

loginuid

tsk

audit_context

context

set_tsk_thread_flag

tsk

TIF_SYSCALL_AUDIT

return

static

inline

void

audit_free_context

audit_context

context

audit_context

previous

count

previous

context

previous

previous

count

count

count

printk

KERN_ERR

context

serial

context

major

context

name_count

count

audit_free_names

context

audit_free_aux

context

kfree

context

filterkey

kfree

context

context

previous

context

count

printk

KERN_ERR

count

void

audit_log_task_context

audit_buffer

ab

ctx

NULL

len

error

u32

sid

selinux_get_task_sid

current

sid

sid

return

error

selinux_sid_to_string

sid

ctx

len

error

error

EINVAL

goto

error_path

return

audit_log_format

ab

ctx

kfree

ctx

return

error_path

audit_panic

return

EXPORT_SYMBOL

audit_log_task_context

static

void

audit_log_task_info

audit_buffer

ab

task_struct

tsk

name

sizeof

tsk

comm

mm_struct

mm

tsk

mm

vm_area_struct

vma

get_task_comm

name

tsk

audit_log_format

ab

audit_log_untrustedstring

ab

name

mm

down_read

mm

mmap_sem

vma

mm

mmap

vma

vma

vm_flags

VM_EXECUTABLE

vma

vm_file

audit_log_d_path

ab

vma

vm_file

f_path

dentry

vma

vm_file

f_path

mnt

vma

vma

vm_next

up_read

mm

mmap_sem

audit_log_task_context

ab

static

audit_log_pid_context

audit_context

context

pid_t

pid

u32

sid

audit_buffer

ab

s

NULL

u32

len

rc

ab

audit_log_start

context

GFP_KERNEL

AUDIT_OBJ_PID

ab

return

selinux_sid_to_string

sid

s

len

audit_log_format

ab

pid

rc

audit_log_format

ab

pid

s

audit_log_end

ab

kfree

s

return

rc

static

void

audit_log_exit

audit_context

context

task_struct

tsk

i

call_panic

audit_buffer

ab

audit_aux_data

aux

tty

context

pid

tsk

pid

context

ppid

context

ppid

sys_getppid

context

uid

tsk

uid

context

gid

tsk

gid

context

euid

tsk

euid

context

suid

tsk

suid

context

fsuid

tsk

fsuid

context

egid

tsk

egid

context

sgid

tsk

sgid

context

fsgid

tsk

fsgid

context

personality

tsk

personality

ab

audit_log_start

context

GFP_KERNEL

AUDIT_SYSCALL

ab

return

audit_log_format

ab

context

arch

context

major

context

personality

PER_LINUX

audit_log_format

ab

context

personality

context

return_valid

audit_log_format

ab

context

return_valid

AUDITSC_SUCCESS

context

return_code

mutex_lock

tty_mutex

read_lock

tasklist_lock

tsk

signal

tsk

signal

tty

tsk

signal

tty

name

tty

tsk

signal

tty

name

tty

read_unlock

tasklist_lock

audit_log_format

ab

context

argv

context

argv

context

argv

context

argv

context

name_count

context

ppid

context

pid

context

loginuid

context

uid

context

gid

context

euid

context

suid

context

fsuid

context

egid

context

sgid

context

fsgid

tty

mutex_unlock

tty_mutex

audit_log_task_info

ab

tsk

context

filterkey

audit_log_format

ab

audit_log_untrustedstring

ab

context

filterkey

audit_log_format

ab

audit_log_end

ab

aux

context

aux

aux

aux

aux

next

ab

audit_log_start

context

GFP_KERNEL

aux

type

ab

aux

type

case

AUDIT_MQ_OPEN

audit_aux_data_mq_open

axi

void

aux

audit_log_format

ab

axi

oflag

axi

mode

axi

attr

mq_flags

axi

attr

mq_maxmsg

axi

attr

mq_msgsize

axi

attr

mq_curmsgs

case

AUDIT_MQ_SENDRECV

audit_aux_data_mq_sendrecv

axi

void

aux

audit_log_format

ab

axi

mqdes

axi

msg_len

axi

msg_prio

axi

abs_timeout

tv_sec

axi

abs_timeout

tv_nsec

case

AUDIT_MQ_NOTIFY

audit_aux_data_mq_notify

axi

void

aux

audit_log_format

ab

axi

mqdes

axi

notification

sigev_signo

case

AUDIT_MQ_GETSETATTR

audit_aux_data_mq_getsetattr

axi

void

aux

audit_log_format

ab

axi

mqdes

axi

mqstat

mq_flags

axi

mqstat

mq_maxmsg

axi

mqstat

mq_msgsize

axi

mqstat

mq_curmsgs

case

AUDIT_IPC

audit_aux_data_ipcctl

axi

void

aux

audit_log_format

ab

axi

uid

axi

gid

axi

mode

axi

osid

ctx

NULL

u32

len

selinux_sid_to_string

axi

osid

ctx

len

audit_log_format

ab

axi

osid

call_panic

audit_log_format

ab

ctx

kfree

ctx

case

AUDIT_IPC_SET_PERM

audit_aux_data_ipcctl

axi

void

aux

audit_log_format

ab

axi

qbytes

axi

uid

axi

gid

axi

mode

case

AUDIT_EXECVE

audit_aux_data_execve

axi

void

aux

i

p

i

p

axi

mem

i

axi

argc

i

audit_log_format

ab

i

p

audit_log_untrustedstring

ab

p

audit_log_format

ab

case

AUDIT_SOCKETCALL

i

audit_aux_data_socketcall

axs

void

aux

audit_log_format

ab

axs

nargs

i

i

axs

nargs

i

audit_log_format

ab

i

axs

args

i

case

AUDIT_SOCKADDR

audit_aux_data_sockaddr

axs

void

aux

audit_log_format

ab

audit_log_hex

ab

axs

a

axs

len

case

AUDIT_AVC_PATH

audit_aux_data_path

axi

void

aux

audit_log_d_path

ab

axi

dentry

axi

mnt

case

AUDIT_FD_PAIR

audit_aux_data_fd_pair

axs

void

aux

audit_log_format

ab

axs

fd

axs

fd

audit_log_end

ab

aux

context

aux_pids

aux

aux

aux

next

audit_aux_data_pids

axs

void

aux

i

i

i

axs

pid_count

i

audit_log_pid_context

context

axs

target_pid

i

axs

target_sid

i

call_panic

context

target_pid

audit_log_pid_context

context

context

target_pid

context

target_sid

call_panic

context

pwd

context

pwdmnt

ab

audit_log_start

context

GFP_KERNEL

AUDIT_CWD

ab

audit_log_d_path

ab

context

pwd

context

pwdmnt

audit_log_end

ab

i

i

context

name_count

i

audit_names

n

context

names

i

ab

audit_log_start

context

GFP_KERNEL

AUDIT_PATH

ab

audit_log_format

ab

i

n

name

n

name_len

case

AUDIT_NAME_FULL

audit_log_format

ab

audit_log_untrustedstring

ab

n

name

case

audit_log_d_path

ab

context

pwd

context

pwdmnt

default

audit_log_format

ab

audit_log_n_untrustedstring

ab

n

name_len

n

name

audit_log_format

ab

n

ino

audit_log_format

ab

n

ino

MAJOR

n

dev

MINOR

n

dev

n

mode

n

uid

n

gid

MAJOR

n

rdev

MINOR

n

rdev

n

osid

ctx

NULL

u32

len

selinux_sid_to_string

n

osid

ctx

len

audit_log_format

ab

n

osid

call_panic

audit_log_format

ab

ctx

kfree

ctx

audit_log_end

ab

call_panic

audit_panic

void

audit_free

task_struct

tsk

audit_context

context

context

audit_get_context

tsk

likely

context

return

context

in_syscall

context

auditable

audit_log_exit

context

tsk

audit_free_context

context

void

audit_syscall_entry

arch

major

a1

a2

a3

a4

task_struct

tsk

current

audit_context

context

tsk

audit_context

enum

audit_state

state

BUG_ON

context

context

in_syscall

audit_context

newctx

AUDIT_DEBUG

printk

KERN_ERR

context

serial

tsk

pid

context

major

major

newctx

audit_alloc_context

context

state

newctx

newctx

previous

context

context

newctx

tsk

audit_context

newctx

audit_zero_context

context

context

state

BUG_ON

context

in_syscall

context

name_count

audit_enabled

return

context

arch

arch

context

major

major

context

argv

a1

context

argv

a2

context

argv

a3

context

argv

a4

state

context

state

context

dummy

audit_n_rules

context

dummy

state

AUDIT_SETUP_CONTEXT

state

AUDIT_BUILD_CONTEXT

state

audit_filter_syscall

tsk

context

audit_filter_list

AUDIT_FILTER_ENTRY

likely

state

AUDIT_DISABLED

return

context

serial

context

ctime

CURRENT_TIME

context

in_syscall

context

auditable

state

AUDIT_RECORD_CONTEXT

context

ppid

void

audit_syscall_exit

valid

return_code

task_struct

tsk

current

audit_context

context

context

audit_get_context

tsk

valid

return_code

likely

context

return

context

in_syscall

context

auditable

audit_log_exit

context

tsk

context

in_syscall

context

auditable

context

previous

audit_context

new_context

context

previous

context

previous

NULL

audit_free_context

context

tsk

audit_context

new_context

audit_free_names

context

audit_free_aux

context

context

aux

NULL

context

aux_pids

NULL

context

target_pid

context

target_sid

kfree

context

filterkey

context

filterkey

NULL

tsk

audit_context

context

void

__audit_getname

name

audit_context

context

current

audit_context

IS_ERR

name

name

return

context

in_syscall

AUDIT_DEBUG

printk

KERN_ERR

__FILE__

__LINE__

context

serial

name

dump_stack

return

BUG_ON

context

name_count

AUDIT_NAMES

context

names

context

name_count

name

name

context

names

context

name_count

name_len

AUDIT_NAME_FULL

context

names

context

name_count

name_put

context

names

context

name_count

ino

context

names

context

name_count

osid

context

name_count

context

pwd

read_lock

current

fs

lock

context

pwd

dget

current

fs

pwd

context

pwdmnt

mntget

current

fs

pwdmnt

read_unlock

current

fs

lock

void

audit_putname

name

audit_context

context

current

audit_context

BUG_ON

context

context

in_syscall

AUDIT_DEBUG

printk

KERN_ERR

__FILE__

__LINE__

context

serial

name

context

name_count

i

i

i

context

name_count

i

printk

KERN_ERR

i

context

names

i

name

context

names

i

name

__putname

name

AUDIT_DEBUG

context

put_count

context

put_count

context

name_count

printk

KERN_ERR

__FILE__

__LINE__

context

serial

context

major

context

in_syscall

name

context

name_count

context

put_count

dump_stack

static

audit_inc_name_count

audit_context

context

inode

inode

context

name_count

AUDIT_NAMES

inode

printk

KERN_DEBUG

MAJOR

inode

i_sb

s_dev

MINOR

inode

i_sb

s_dev

inode

i_ino

printk

KERN_DEBUG

return

context

name_count

AUDIT_DEBUG

context

ino_count

return

static

void

audit_copy_inode

audit_names

name

inode

inode

name

ino

inode

i_ino

name

dev

inode

i_sb

s_dev

name

mode

inode

i_mode

name

uid

inode

i_uid

name

gid

inode

i_gid

name

rdev

inode

i_rdev

selinux_get_inode_sid

inode

name

osid

void

__audit_inode

name

inode

inode

idx

audit_context

context

current

audit_context

context

in_syscall

return

context

name_count

context

names

context

name_count

name

context

names

context

name_count

name

name

idx

context

name_count

context

name_count

context

names

context

name_count

name

context

names

context

name_count

name

name

idx

context

name_count

audit_inc_name_count

context

inode

return

idx

context

name_count

context

names

idx

name

NULL

audit_copy_inode

context

names

idx

inode

void

__audit_inode_child

dname

inode

inode

inode

parent

idx

audit_context

context

current

audit_context

found_parent

NULL

found_child

NULL

dirlen

context

in_syscall

return

dname

goto

add_names

idx

idx

context

name_count

idx

audit_names

n

context

names

idx

n

name

n

ino

parent

i_ino

audit_compare_dname_path

dname

n

name

dirlen

n

name_len

dirlen

found_parent

n

name

goto

add_names

idx

idx

context

name_count

idx

audit_names

n

context

names

idx

n

name

strcmp

dname

n

name

audit_compare_dname_path

dname

n

name

dirlen

inode

audit_copy_inode

n

inode

n

ino

found_child

n

name

goto

add_names

add_names

found_parent

audit_inc_name_count

context

parent

return

idx

context

name_count

context

names

idx

name

NULL

audit_copy_inode

context

names

idx

parent

found_child

audit_inc_name_count

context

inode

return

idx

context

name_count

found_parent

context

names

idx

name

found_parent

context

names

idx

name_len

AUDIT_NAME_FULL

context

names

idx

name_put

context

names

idx

name

NULL

inode

audit_copy_inode

context

names

idx

inode

context

names

idx

ino

void

auditsc_get_stamp

audit_context

ctx

timespec

t

serial

ctx

serial

ctx

serial

audit_serial

t

tv_sec

ctx

ctime

tv_sec

t

tv_nsec

ctx

ctime

tv_nsec

serial

ctx

serial

ctx

auditable

audit_set_loginuid

task_struct

task

uid_t

loginuid

audit_context

context

task

audit_context

context

context

in_syscall

audit_buffer

ab

ab

audit_log_start

NULL

GFP_KERNEL

AUDIT_LOGIN

ab

audit_log_format

ab

task

pid

task

uid

context

loginuid

loginuid

audit_log_end

ab

context

loginuid

loginuid

return

uid_t

audit_get_loginuid

audit_context

ctx

return

ctx

ctx

loginuid

EXPORT_SYMBOL

audit_get_loginuid

__audit_mq_open

oflag

mode_t

mode

mq_attr

__user

u_attr

audit_aux_data_mq_open

ax

audit_context

context

current

audit_context

audit_enabled

return

likely

context

return

ax

kmalloc

sizeof

ax

GFP_ATOMIC

ax

return

ENOMEM

u_attr

NULL

copy_from_user

ax

attr

u_attr

sizeof

ax

attr

kfree

ax

return

EFAULT

memset

ax

attr

sizeof

ax

attr

ax

oflag

oflag

ax

mode

mode

ax

d

type

AUDIT_MQ_OPEN

ax

d

next

context

aux

context

aux

void

ax

return

__audit_mq_timedsend

mqd_t

mqdes

size_t

msg_len

msg_prio

timespec

__user

u_abs_timeout

audit_aux_data_mq_sendrecv

ax

audit_context

context

current

audit_context

audit_enabled

return

likely

context

return

ax

kmalloc

sizeof

ax

GFP_ATOMIC

ax

return

ENOMEM

u_abs_timeout

NULL

copy_from_user

ax

abs_timeout

u_abs_timeout

sizeof

ax

abs_timeout

kfree

ax

return

EFAULT

memset

ax

abs_timeout

sizeof

ax

abs_timeout

ax

mqdes

mqdes

ax

msg_len

msg_len

ax

msg_prio

msg_prio

ax

d

type

AUDIT_MQ_SENDRECV

ax

d

next

context

aux

context

aux

void

ax

return

__audit_mq_timedreceive

mqd_t

mqdes

size_t

msg_len

__user

u_msg_prio

timespec

__user

u_abs_timeout

audit_aux_data_mq_sendrecv

ax

audit_context

context

current

audit_context

audit_enabled

return

likely

context

return

ax

kmalloc

sizeof

ax

GFP_ATOMIC

ax

return

ENOMEM

u_msg_prio

NULL

get_user

ax

msg_prio

u_msg_prio

kfree

ax

return

EFAULT

ax

msg_prio

u_abs_timeout

NULL

copy_from_user

ax

abs_timeout

u_abs_timeout

sizeof

ax

abs_timeout

kfree

ax

return

EFAULT

memset

ax

abs_timeout

sizeof

ax

abs_timeout

ax

mqdes

mqdes

ax

msg_len

msg_len

ax

d

type

AUDIT_MQ_SENDRECV

ax

d

next

context

aux

context

aux

void

ax

return

__audit_mq_notify

mqd_t

mqdes

sigevent

__user

u_notification

audit_aux_data_mq_notify

ax

audit_context

context

current

audit_context

audit_enabled

return

likely

context

return

ax

kmalloc

sizeof

ax

GFP_ATOMIC

ax

return

ENOMEM

u_notification

NULL

copy_from_user

ax

notification

u_notification

sizeof

ax

notification

kfree

ax

return

EFAULT

memset

ax

notification

sizeof

ax

notification

ax

mqdes

mqdes

ax

d

type

AUDIT_MQ_NOTIFY

ax

d

next

context

aux

context

aux

void

ax

return

__audit_mq_getsetattr

mqd_t

mqdes

mq_attr

mqstat

audit_aux_data_mq_getsetattr

ax

audit_context

context

current

audit_context

audit_enabled

return

likely

context

return

ax

kmalloc

sizeof

ax

GFP_ATOMIC

ax

return

ENOMEM

ax

mqdes

mqdes

ax

mqstat

mqstat

ax

d

type

AUDIT_MQ_GETSETATTR

ax

d

next

context

aux

context

aux

void

ax

return

__audit_ipc_obj

kern_ipc_perm

ipcp

audit_aux_data_ipcctl

ax

audit_context

context

current

audit_context

ax

kmalloc

sizeof

ax

GFP_ATOMIC

ax

return

ENOMEM

ax

uid

ipcp

uid

ax

gid

ipcp

gid

ax

mode

ipcp

mode

selinux_get_ipc_sid

ipcp

ax

osid

ax

d

type

AUDIT_IPC

ax

d

next

context

aux

context

aux

void

ax

return

__audit_ipc_set_perm

qbytes

uid_t

uid

gid_t

gid

mode_t

mode

audit_aux_data_ipcctl

ax

audit_context

context

current

audit_context

ax

kmalloc

sizeof

ax

GFP_ATOMIC

ax

return

ENOMEM

ax

qbytes

qbytes

ax

uid

uid

ax

gid

gid

ax

mode

mode

ax

d

type

AUDIT_IPC_SET_PERM

ax

d

next

context

aux

context

aux

void

ax

return

audit_bprm

linux_binprm

bprm

audit_aux_data_execve

ax

audit_context

context

current

audit_context

p

next

void

to

likely

audit_enabled

context

context

dummy

return

ax

kmalloc

sizeof

ax

PAGE_SIZE

MAX_ARG_PAGES

bprm

p

GFP_KERNEL

ax

return

ENOMEM

ax

argc

bprm

argc

ax

envc

bprm

envc

p

bprm

p

to

ax

mem

p

MAX_ARG_PAGES

PAGE_SIZE

p

next

page

page

bprm

page

p

PAGE_SIZE

void

kaddr

kmap

page

next

p

PAGE_SIZE

PAGE_SIZE

memcpy

to

kaddr

p

PAGE_SIZE

next

p

to

next

p

kunmap

page

ax

d

type

AUDIT_EXECVE

ax

d

next

context

aux

context

aux

void

ax

return

audit_socketcall

nargs

args

audit_aux_data_socketcall

ax

audit_context

context

current

audit_context

likely

context

context

dummy

return

ax

kmalloc

sizeof

ax

nargs

sizeof

GFP_KERNEL

ax

return

ENOMEM

ax

nargs

nargs

memcpy

ax

args

args

nargs

sizeof

ax

d

type

AUDIT_SOCKETCALL

ax

d

next

context

aux

context

aux

void

ax

return

__audit_fd_pair

fd1

fd2

audit_context

context

current

audit_context

audit_aux_data_fd_pair

ax

likely

context

return

ax

kmalloc

sizeof

ax

GFP_KERNEL

ax

return

ENOMEM

ax

fd

fd1

ax

fd

fd2

ax

d

type

AUDIT_FD_PAIR

ax

d

next

context

aux

context

aux

void

ax

return

audit_sockaddr

len

void

a

audit_aux_data_sockaddr

ax

audit_context

context

current

audit_context

likely

context

context

dummy

return

ax

kmalloc

sizeof

ax

len

GFP_KERNEL

ax

return

ENOMEM

ax

len

len

memcpy

ax

a

a

len

ax

d

type

AUDIT_SOCKADDR

ax

d

next

context

aux

context

aux

void

ax

return

void

__audit_ptrace

task_struct

t

audit_context

context

current

audit_context

context

target_pid

t

pid

selinux_get_task_sid

t

context

target_sid

audit_avc_path

dentry

dentry

vfsmount

mnt

audit_aux_data_path

ax

audit_context

context

current

audit_context

likely

context

return

ax

kmalloc

sizeof

ax

GFP_ATOMIC

ax

return

ENOMEM

ax

dentry

dget

dentry

ax

mnt

mntget

mnt

ax

d

type

AUDIT_AVC_PATH

ax

d

next

context

aux

context

aux

void

ax

return

__audit_signal_info

sig

task_struct

t

audit_aux_data_pids

axp

task_struct

tsk

current

audit_context

ctx

tsk

audit_context

extern

pid_t

audit_sig_pid

extern

uid_t

audit_sig_uid

extern

u32

audit_sig_sid

audit_pid

t

tgid

audit_pid

sig

SIGTERM

sig

SIGHUP

sig

SIGUSR1

audit_sig_pid

tsk

pid

ctx

audit_sig_uid

ctx

loginuid

audit_sig_uid

tsk

uid

selinux_get_task_sid

tsk

audit_sig_sid

audit_signals

audit_dummy_context

return

ctx

target_pid

ctx

target_pid

t

tgid

selinux_get_task_sid

t

ctx

target_sid

return

axp

void

ctx

aux_pids

axp

axp

pid_count

AUDIT_AUX_PIDS

axp

kzalloc

sizeof

axp

GFP_ATOMIC

axp

return

ENOMEM

axp

d

type

AUDIT_OBJ_PID

axp

d

next

ctx

aux_pids

ctx

aux_pids

void

axp

BUG_ON

axp

pid_count

AUDIT_AUX_PIDS

axp

target_pid

axp

pid_count

t

tgid

selinux_get_task_sid

t

axp

target_sid

axp

pid_count

axp

pid_count

return

void

audit_core_dumps

signr

audit_buffer

ab

u32

sid

audit_enabled

return

signr

SIGQUIT

return

ab

audit_log_start

NULL

GFP_KERNEL

AUDIT_ANOM_ABEND

audit_log_format

ab

audit_get_loginuid

current

audit_context

current

uid

current

gid

selinux_get_task_sid

current

sid

sid

ctx

NULL

u32

len

selinux_sid_to_string

sid

ctx

len

audit_log_format

ab

sid

audit_log_format

ab

ctx

kfree

ctx

audit_log_format

ab

current

pid

audit_log_untrustedstring

ab

current

comm

audit_log_format

ab

signr

audit_log_end

ab

securebits

SECUREBITS_DEFAULT

kernel_cap_t

cap_bset

CAP_INIT_EFF_SET

EXPORT_SYMBOL

securebits

EXPORT_SYMBOL

cap_bset

static

DEFINE_SPINLOCK

task_capability_lock

asmlinkage

sys_capget

cap_user_header_t

header

cap_user_data_t

dataptr

ret

pid_t

pid

__u32

version

task_struct

target

__user_cap_data_struct

data

get_user

version

header

version

return

EFAULT

version

_LINUX_CAPABILITY_VERSION

put_user

_LINUX_CAPABILITY_VERSION

header

version

return

EFAULT

return

EINVAL

get_user

pid

header

pid

return

EFAULT

pid

return

EINVAL

spin_lock

task_capability_lock

read_lock

tasklist_lock

pid

pid

current

pid

target

find_task_by_pid

pid

target

ret

ESRCH

goto

out

target

current

ret

security_capget

target

data

effective

data

inheritable

data

permitted

out

read_unlock

tasklist_lock

spin_unlock

task_capability_lock

ret

copy_to_user

dataptr

data

sizeof

data

return

EFAULT

return

ret

static

inline

cap_set_pg

pgrp_nr

kernel_cap_t

effective

kernel_cap_t

inheritable

kernel_cap_t

permitted

task_struct

g

target

ret

EPERM

found

pid

pgrp

pgrp

find_pid

pgrp_nr

do_each_pid_task

pgrp

PIDTYPE_PGID

g

target

g

while_each_thread

g

target

security_capset_check

target

effective

inheritable

permitted

security_capset_set

target

effective

inheritable

permitted

ret

found

while_each_pid_task

pgrp

PIDTYPE_PGID

g

found

ret

return

ret

static

inline

cap_set_all

kernel_cap_t

effective

kernel_cap_t

inheritable

kernel_cap_t

permitted

task_struct

g

target

ret

EPERM

found

do_each_thread

g

target

target

current

is_init

target

found

security_capset_check

target

effective

inheritable

permitted

ret

security_capset_set

target

effective

inheritable

permitted

while_each_thread

g

target

found

ret

return

ret

asmlinkage

sys_capset

cap_user_header_t

header

cap_user_data_t

data

kernel_cap_t

inheritable

permitted

effective

__u32

version

task_struct

target

ret

pid_t

pid

get_user

version

header

version

return

EFAULT

version

_LINUX_CAPABILITY_VERSION

put_user

_LINUX_CAPABILITY_VERSION

header

version

return

EFAULT

return

EINVAL

get_user

pid

header

pid

return

EFAULT

pid

pid

current

pid

capable

CAP_SETPCAP

return

EPERM

copy_from_user

effective

data

effective

sizeof

effective

copy_from_user

inheritable

data

inheritable

sizeof

inheritable

copy_from_user

permitted

data

permitted

sizeof

permitted

return

EFAULT

spin_lock

task_capability_lock

read_lock

tasklist_lock

pid

pid

current

pid

target

find_task_by_pid

pid

target

ret

ESRCH

goto

out

target

current

ret

pid

pid

ret

cap_set_all

effective

inheritable

permitted

ret

cap_set_pg

pid

effective

inheritable

permitted

ret

security_capset_check

target

effective

inheritable

permitted

ret

security_capset_set

target

effective

inheritable

permitted

out

read_unlock

tasklist_lock

spin_unlock

task_capability_lock

return

ret

__capable

task_struct

t

cap

security_capable

t

cap

t

flags

PF_SUPERPRIV

return

return

EXPORT_SYMBOL

__capable

capable

cap

return

__capable

current

cap

EXPORT_SYMBOL

capable

get_compat_timespec

timespec

ts

compat_timespec

__user

cts

return

access_ok

VERIFY_READ

cts

sizeof

cts

__get_user

ts

tv_sec

cts

tv_sec

__get_user

ts

tv_nsec

cts

tv_nsec

EFAULT

put_compat_timespec

timespec

ts

compat_timespec

__user

cts

return

access_ok

VERIFY_WRITE

cts

sizeof

cts

__put_user

ts

tv_sec

cts

tv_sec

__put_user

ts

tv_nsec

cts

tv_nsec

EFAULT

static

compat_nanosleep_restart

restart_block

restart

expire

restart

arg0

now

jiffies

compat_timespec

__user

rmtp

time_after

expire

now

return

expire

schedule_timeout_interruptible

expire

now

expire

return

rmtp

compat_timespec

__user

restart

arg1

rmtp

compat_timespec

ct

timespec

t

jiffies_to_timespec

expire

t

ct

tv_sec

t

tv_sec

ct

tv_nsec

t

tv_nsec

copy_to_user

rmtp

ct

sizeof

ct

return

EFAULT

return

ERESTART_RESTARTBLOCK

asmlinkage

compat_sys_nanosleep

compat_timespec

__user

rqtp

compat_timespec

__user

rmtp

timespec

t

restart_block

restart

expire

get_compat_timespec

t

rqtp

return

EFAULT

t

tv_nsec

L

t

tv_nsec

t

tv_sec

return

EINVAL

expire

timespec_to_jiffies

t

t

tv_sec

t

tv_nsec

expire

schedule_timeout_interruptible

expire

expire

return

rmtp

jiffies_to_timespec

expire

t

put_compat_timespec

t

rmtp

return

EFAULT

restart

current_thread_info

restart_block

restart

fn

compat_nanosleep_restart

restart

arg0

jiffies

expire

restart

arg1

rmtp

return

ERESTART_RESTARTBLOCK

static

inline

get_compat_itimerval

itimerval

o

compat_itimerval

__user

i

return

access_ok

VERIFY_READ

i

sizeof

i

__get_user

o

it_interval

tv_sec

i

it_interval

tv_sec

__get_user

o

it_interval

tv_usec

i

it_interval

tv_usec

__get_user

o

it_value

tv_sec

i

it_value

tv_sec

__get_user

o

it_value

tv_usec

i

it_value

tv_usec

static

inline

put_compat_itimerval

compat_itimerval

__user

o

itimerval

i

return

access_ok

VERIFY_WRITE

o

sizeof

o

__put_user

i

it_interval

tv_sec

o

it_interval

tv_sec

__put_user

i

it_interval

tv_usec

o

it_interval

tv_usec

__put_user

i

it_value

tv_sec

o

it_value

tv_sec

__put_user

i

it_value

tv_usec

o

it_value

tv_usec

asmlinkage

compat_sys_getitimer

which

compat_itimerval

__user

it

itimerval

kit

error

error

do_getitimer

which

kit

error

put_compat_itimerval

it

kit

error

EFAULT

return

error

asmlinkage

compat_sys_setitimer

which

compat_itimerval

__user

in

compat_itimerval

__user

out

itimerval

kin

kout

error

in

get_compat_itimerval

kin

in

return

EFAULT

memset

kin

sizeof

kin

error

do_setitimer

which

kin

out

kout

NULL

error

out

return

error

put_compat_itimerval

out

kout

return

EFAULT

return

asmlinkage

compat_sys_times

compat_tms

__user

tbuf

tbuf

compat_tms

tmp

task_struct

tsk

current

task_struct

t

cputime_t

utime

stime

cutime

cstime

read_lock

tasklist_lock

utime

tsk

signal

utime

stime

tsk

signal

stime

t

tsk

utime

cputime_add

utime

t

utime

stime

cputime_add

stime

t

stime

t

next_thread

t

t

tsk

spin_lock_irq

tsk

sighand

siglock

cutime

tsk

signal

cutime

cstime

tsk

signal

cstime

spin_unlock_irq

tsk

sighand

siglock

read_unlock

tasklist_lock

tmp

tms_utime

compat_jiffies_to_clock_t

cputime_to_jiffies

utime

tmp

tms_stime

compat_jiffies_to_clock_t

cputime_to_jiffies

stime

tmp

tms_cutime

compat_jiffies_to_clock_t

cputime_to_jiffies

cutime

tmp

tms_cstime

compat_jiffies_to_clock_t

cputime_to_jiffies

cstime

copy_to_user

tbuf

tmp

sizeof

tmp

return

EFAULT

return

compat_jiffies_to_clock_t

jiffies

asmlinkage

compat_sys_sigpending

compat_old_sigset_t

__user

set

old_sigset_t

s

ret

mm_segment_t

old_fs

get_fs

set_fs

KERNEL_DS

ret

sys_sigpending

old_sigset_t

__user

s

set_fs

old_fs

ret

ret

put_user

s

set

return

ret

asmlinkage

compat_sys_sigprocmask

how

compat_old_sigset_t

__user

set

compat_old_sigset_t

__user

oset

old_sigset_t

s

ret

mm_segment_t

old_fs

set

get_user

s

set

return

EFAULT

old_fs

get_fs

set_fs

KERNEL_DS

ret

sys_sigprocmask

how

set

old_sigset_t

__user

s

NULL

oset

old_sigset_t

__user

s

NULL

set_fs

old_fs

ret

oset

ret

put_user

s

oset

return

ret

asmlinkage

compat_sys_setrlimit

resource

compat_rlimit

__user

rlim

rlimit

r

ret

mm_segment_t

old_fs

get_fs

resource

RLIM_NLIMITS

return

EINVAL

access_ok

VERIFY_READ

rlim

sizeof

rlim

__get_user

r

rlim_cur

rlim

rlim_cur

__get_user

r

rlim_max

rlim

rlim_max

return

EFAULT

r

rlim_cur

COMPAT_RLIM_INFINITY

r

rlim_cur

RLIM_INFINITY

r

rlim_max

COMPAT_RLIM_INFINITY

r

rlim_max

RLIM_INFINITY

set_fs

KERNEL_DS

ret

sys_setrlimit

resource

rlimit

__user

r

set_fs

old_fs

return

ret

COMPAT_RLIM_OLD_INFINITY

asmlinkage

compat_sys_old_getrlimit

resource

compat_rlimit

__user

rlim

rlimit

r

ret

mm_segment_t

old_fs

get_fs

set_fs

KERNEL_DS

ret

sys_old_getrlimit

resource

r

set_fs

old_fs

ret

r

rlim_cur

COMPAT_RLIM_OLD_INFINITY

r

rlim_cur

COMPAT_RLIM_INFINITY

r

rlim_max

COMPAT_RLIM_OLD_INFINITY

r

rlim_max

COMPAT_RLIM_INFINITY

access_ok

VERIFY_WRITE

rlim

sizeof

rlim

__put_user

r

rlim_cur

rlim

rlim_cur

__put_user

r

rlim_max

rlim

rlim_max

return

EFAULT

return

ret

asmlinkage

compat_sys_getrlimit

resource

compat_rlimit

__user

rlim

rlimit

r

ret

mm_segment_t

old_fs

get_fs

set_fs

KERNEL_DS

ret

sys_getrlimit

resource

rlimit

__user

r

set_fs

old_fs

ret

r

rlim_cur

COMPAT_RLIM_INFINITY

r

rlim_cur

COMPAT_RLIM_INFINITY

r

rlim_max

COMPAT_RLIM_INFINITY

r

rlim_max

COMPAT_RLIM_INFINITY

access_ok

VERIFY_WRITE

rlim

sizeof

rlim

__put_user

r

rlim_cur

rlim

rlim_cur

__put_user

r

rlim_max

rlim

rlim_max

return

EFAULT

return

ret

put_compat_rusage

rusage

r

compat_rusage

__user

ru

access_ok

VERIFY_WRITE

ru

sizeof

ru

__put_user

r

ru_utime

tv_sec

ru

ru_utime

tv_sec

__put_user

r

ru_utime

tv_usec

ru

ru_utime

tv_usec

__put_user

r

ru_stime

tv_sec

ru

ru_stime

tv_sec

__put_user

r

ru_stime

tv_usec

ru

ru_stime

tv_usec

__put_user

r

ru_maxrss

ru

ru_maxrss

__put_user

r

ru_ixrss

ru

ru_ixrss

__put_user

r

ru_idrss

ru

ru_idrss

__put_user

r

ru_isrss

ru

ru_isrss

__put_user

r

ru_minflt

ru

ru_minflt

__put_user

r

ru_majflt

ru

ru_majflt

__put_user

r

ru_nswap

ru

ru_nswap

__put_user

r

ru_inblock

ru

ru_inblock

__put_user

r

ru_oublock

ru

ru_oublock

__put_user

r

ru_msgsnd

ru

ru_msgsnd

__put_user

r

ru_msgrcv

ru

ru_msgrcv

__put_user

r

ru_nsignals

ru

ru_nsignals

__put_user

r

ru_nvcsw

ru

ru_nvcsw

__put_user

r

ru_nivcsw

ru

ru_nivcsw

return

EFAULT

return

asmlinkage

compat_sys_getrusage

who

compat_rusage

__user

ru

rusage

r

ret

mm_segment_t

old_fs

get_fs

set_fs

KERNEL_DS

ret

sys_getrusage

who

rusage

__user

r

set_fs

old_fs

ret

return

ret

put_compat_rusage

r

ru

return

EFAULT

return

asmlinkage

compat_sys_wait4

compat_pid_t

pid

compat_uint_t

__user

stat_addr

options

compat_rusage

__user

ru

ru

return

sys_wait4

pid

stat_addr

options

NULL

rusage

r

ret

status

mm_segment_t

old_fs

get_fs

set_fs

KERNEL_DS

ret

sys_wait4

pid

stat_addr

__user

status

NULL

options

rusage

__user

r

set_fs

old_fs

ret

put_compat_rusage

r

ru

return

EFAULT

stat_addr

put_user

status

stat_addr

return

EFAULT

return

ret

asmlinkage

compat_sys_waitid

which

compat_pid_t

pid

compat_siginfo

__user

uinfo

options

compat_rusage

__user

uru

siginfo_t

info

rusage

ru

ret

mm_segment_t

old_fs

get_fs

memset

info

sizeof

info

set_fs

KERNEL_DS

ret

sys_waitid

which

pid

siginfo_t

__user

info

options

uru

rusage

__user

ru

NULL

set_fs

old_fs

ret

info

si_signo

return

ret

uru

ret

put_compat_rusage

ru

uru

ret

return

ret

BUG_ON

info

si_code

__SI_MASK

info

si_code

__SI_CHLD

return

copy_siginfo_to_user32

uinfo

info

static

compat_get_user_cpu_mask

compat_ulong_t

__user

user_mask_ptr

len

cpumask_t

new_mask

k

len

sizeof

cpumask_t

memset

new_mask

sizeof

cpumask_t

len

sizeof

cpumask_t

len

sizeof

cpumask_t

k

cpus_addr

new_mask

return

compat_get_bitmap

k

user_mask_ptr

len

asmlinkage

compat_sys_sched_setaffinity

compat_pid_t

pid

len

compat_ulong_t

__user

user_mask_ptr

cpumask_t

new_mask

retval

retval

compat_get_user_cpu_mask

user_mask_ptr

len

new_mask

retval

return

retval

return

sched_setaffinity

pid

new_mask

asmlinkage

compat_sys_sched_getaffinity

compat_pid_t

pid

len

compat_ulong_t

__user

user_mask_ptr

ret

cpumask_t

mask

k

min_length

sizeof

cpumask_t

NR_CPUS

BITS_PER_COMPAT_LONG

min_length

sizeof

compat_ulong_t

len

min_length

return

EINVAL

ret

sched_getaffinity

pid

mask

ret

return

ret

k

cpus_addr

mask

ret

compat_put_bitmap

user_mask_ptr

k

min_length

ret

return

ret

return

min_length

get_compat_itimerspec

itimerspec

dst

compat_itimerspec

__user

src

get_compat_timespec

dst

it_interval

src

it_interval

get_compat_timespec

dst

it_value

src

it_value

return

EFAULT

return

put_compat_itimerspec

compat_itimerspec

__user

dst

itimerspec

src

put_compat_timespec

src

it_interval

dst

it_interval

put_compat_timespec

src

it_value

dst

it_value

return

EFAULT

return

compat_sys_timer_create

clockid_t

which_clock

compat_sigevent

__user

timer_event_spec

timer_t

__user

created_timer_id

sigevent

__user

event

NULL

timer_event_spec

sigevent

kevent

event

compat_alloc_user_space

sizeof

event

get_compat_sigevent

kevent

timer_event_spec

copy_to_user

event

kevent

sizeof

event

return

EFAULT

return

sys_timer_create

which_clock

event

created_timer_id

compat_sys_timer_settime

timer_t

timer_id

flags

compat_itimerspec

__user

new

compat_itimerspec

__user

old

err

mm_segment_t

oldfs

itimerspec

newts

oldts

new

return

EINVAL

get_compat_itimerspec

newts

new

return

EFAULT

oldfs

get_fs

set_fs

KERNEL_DS

err

sys_timer_settime

timer_id

flags

itimerspec

__user

newts

itimerspec

__user

oldts

set_fs

oldfs

err

old

put_compat_itimerspec

old

oldts

return

EFAULT

return

err

compat_sys_timer_gettime

timer_t

timer_id

compat_itimerspec

__user

setting

err

mm_segment_t

oldfs

itimerspec

ts

oldfs

get_fs

set_fs

KERNEL_DS

err

sys_timer_gettime

timer_id

itimerspec

__user

ts

set_fs

oldfs

err

put_compat_itimerspec

setting

ts

return

EFAULT

return

err

compat_sys_clock_settime

clockid_t

which_clock

compat_timespec

__user

tp

err

mm_segment_t

oldfs

timespec

ts

get_compat_timespec

ts

tp

return

EFAULT

oldfs

get_fs

set_fs

KERNEL_DS

err

sys_clock_settime

which_clock

timespec

__user

ts

set_fs

oldfs

return

err

compat_sys_clock_gettime

clockid_t

which_clock

compat_timespec

__user

tp

err

mm_segment_t

oldfs

timespec

ts

oldfs

get_fs

set_fs

KERNEL_DS

err

sys_clock_gettime

which_clock

timespec

__user

ts

set_fs

oldfs

err

put_compat_timespec

ts

tp

return

EFAULT

return

err

compat_sys_clock_getres

clockid_t

which_clock

compat_timespec

__user

tp

err

mm_segment_t

oldfs

timespec

ts

oldfs

get_fs

set_fs

KERNEL_DS

err

sys_clock_getres

which_clock

timespec

__user

ts

set_fs

oldfs

err

tp

put_compat_timespec

ts

tp

return

EFAULT

return

err

static

compat_clock_nanosleep_restart

restart_block

restart

err

mm_segment_t

oldfs

timespec

tu

compat_timespec

rmtp

compat_timespec

restart

arg1

restart

arg1

tu

oldfs

get_fs

set_fs

KERNEL_DS

err

clock_nanosleep_restart

restart

set_fs

oldfs

err

ERESTART_RESTARTBLOCK

rmtp

put_compat_timespec

tu

rmtp

return

EFAULT

err

ERESTART_RESTARTBLOCK

restart

fn

compat_clock_nanosleep_restart

restart

arg1

rmtp

return

err

compat_sys_clock_nanosleep

clockid_t

which_clock

flags

compat_timespec

__user

rqtp

compat_timespec

__user

rmtp

err

mm_segment_t

oldfs

timespec

in

out

restart_block

restart

get_compat_timespec

in

rqtp

return

EFAULT

oldfs

get_fs

set_fs

KERNEL_DS

err

sys_clock_nanosleep

which_clock

flags

timespec

__user

in

timespec

__user

out

set_fs

oldfs

err

ERESTART_RESTARTBLOCK

rmtp

put_compat_timespec

out

rmtp

return

EFAULT

err

ERESTART_RESTARTBLOCK

restart

current_thread_info

restart_block

restart

fn

compat_clock_nanosleep_restart

restart

arg1

rmtp

return

err

get_compat_sigevent

sigevent

event

compat_sigevent

__user

u_event

memset

event

sizeof

event

return

access_ok

VERIFY_READ

u_event

sizeof

u_event

__get_user

event

sigev_value

sival_int

u_event

sigev_value

sival_int

__get_user

event

sigev_signo

u_event

sigev_signo

__get_user

event

sigev_notify

u_event

sigev_notify

__get_user

event

sigev_notify_thread_id

u_event

sigev_notify_thread_id

EFAULT

compat_get_bitmap

mask

compat_ulong_t

__user

umask

bitmap_size

i

j

m

compat_ulong_t

um

nr_compat_longs

bitmap_size

ALIGN

bitmap_size

BITS_PER_COMPAT_LONG

access_ok

VERIFY_READ

umask

bitmap_size

return

EFAULT

nr_compat_longs

BITS_TO_COMPAT_LONGS

bitmap_size

i

i

BITS_TO_LONGS

bitmap_size

i

m

j

j

sizeof

m

sizeof

um

j

nr_compat_longs

__get_user

um

umask

return

EFAULT

um

umask

m

um

j

BITS_PER_COMPAT_LONG

mask

m

return

compat_put_bitmap

compat_ulong_t

__user

umask

mask

bitmap_size

i

j

m

compat_ulong_t

um

nr_compat_longs

bitmap_size

ALIGN

bitmap_size

BITS_PER_COMPAT_LONG

access_ok

VERIFY_WRITE

umask

bitmap_size

return

EFAULT

nr_compat_longs

BITS_TO_COMPAT_LONGS

bitmap_size

i

i

BITS_TO_LONGS

bitmap_size

i

m

mask

j

j

sizeof

m

sizeof

um

j

um

m

nr_compat_longs

__put_user

um

umask

return

EFAULT

umask

m

sizeof

um

m

sizeof

um

return

void

sigset_from_compat

sigset_t

set

compat_sigset_t

compat

_NSIG_WORDS

case

set

sig

compat

sig

compat

sig

case

set

sig

compat

sig

compat

sig

case

set

sig

compat

sig

compat

sig

case

set

sig

compat

sig

compat

sig

asmlinkage

compat_sys_rt_sigtimedwait

compat_sigset_t

__user

uthese

compat_siginfo

__user

uinfo

compat_timespec

__user

uts

compat_size_t

sigsetsize

compat_sigset_t

s32

sigset_t

s

sig

timespec

t

siginfo_t

info

ret

timeout

sigsetsize

sizeof

sigset_t

return

EINVAL

copy_from_user

s32

uthese

sizeof

compat_sigset_t

return

EFAULT

sigset_from_compat

s

s32

sigdelsetmask

s

sigmask

SIGKILL

sigmask

SIGSTOP

signotset

s

uts

get_compat_timespec

t

uts

return

EFAULT

t

tv_nsec

L

t

tv_nsec

t

tv_sec

return

EINVAL

spin_lock_irq

current

sighand

siglock

sig

dequeue_signal

current

s

info

sig

timeout

MAX_SCHEDULE_TIMEOUT

uts

timeout

timespec_to_jiffies

t

t

tv_sec

t

tv_nsec

timeout

current

real_blocked

current

blocked

sigandsets

current

blocked

current

blocked

s

recalc_sigpending

spin_unlock_irq

current

sighand

siglock

timeout

schedule_timeout_interruptible

timeout

spin_lock_irq

current

sighand

siglock

sig

dequeue_signal

current

s

info

current

blocked

current

real_blocked

siginitset

current

real_blocked

recalc_sigpending

spin_unlock_irq

current

sighand

siglock

sig

ret

sig

uinfo

copy_siginfo_to_user32

uinfo

info

ret

EFAULT

ret

timeout

EINTR

EAGAIN

return

ret

__ARCH_WANT_COMPAT_SYS_TIME

asmlinkage

compat_sys_time

compat_time_t

__user

tloc

compat_time_t

i

timeval

tv

do_gettimeofday

tv

i

tv

tv_sec

tloc

put_user

i

tloc

i

EFAULT

return

i

asmlinkage

compat_sys_stime

compat_time_t

__user

tptr

timespec

tv

err

get_user

tv

tv_sec

tptr

return

EFAULT

tv

tv_nsec

err

security_settime

tv

NULL

err

return

err

do_settimeofday

tv

return

__ARCH_WANT_COMPAT_SYS_RT_SIGSUSPEND

asmlinkage

compat_sys_rt_sigsuspend

compat_sigset_t

__user

unewset

compat_size_t

sigsetsize

sigset_t

newset

compat_sigset_t

newset32

sigsetsize

sizeof

sigset_t

return

EINVAL

copy_from_user

newset32

unewset

sizeof

compat_sigset_t

return

EFAULT

sigset_from_compat

newset

newset32

sigdelsetmask

newset

sigmask

SIGKILL

sigmask

SIGSTOP

spin_lock_irq

current

sighand

siglock

current

saved_sigmask

current

blocked

current

blocked

newset

recalc_sigpending

spin_unlock_irq

current

sighand

siglock

current

state

TASK_INTERRUPTIBLE

schedule

set_thread_flag

TIF_RESTORE_SIGMASK

return

ERESTARTNOHAND

asmlinkage

compat_sys_adjtimex

compat_timex

__user

utp

timex

txc

ret

memset

txc

sizeof

timex

access_ok

VERIFY_READ

utp

sizeof

compat_timex

__get_user

txc

modes

utp

modes

__get_user

txc

offset

utp

offset

__get_user

txc

freq

utp

freq

__get_user

txc

maxerror

utp

maxerror

__get_user

txc

esterror

utp

esterror

__get_user

txc

status

utp

status

__get_user

txc

constant

utp

constant

__get_user

txc

precision

utp

precision

__get_user

txc

tolerance

utp

tolerance

__get_user

txc

time

tv_sec

utp

time

tv_sec

__get_user

txc

time

tv_usec

utp

time

tv_usec

__get_user

txc

tick

utp

tick

__get_user

txc

ppsfreq

utp

ppsfreq

__get_user

txc

jitter

utp

jitter

__get_user

txc

shift

utp

shift

__get_user

txc

stabil

utp

stabil

__get_user

txc

jitcnt

utp

jitcnt

__get_user

txc

calcnt

utp

calcnt

__get_user

txc

errcnt

utp

errcnt

__get_user

txc

stbcnt

utp

stbcnt

return

EFAULT

ret

do_adjtimex

txc

access_ok

VERIFY_WRITE

utp

sizeof

compat_timex

__put_user

txc

modes

utp

modes

__put_user

txc

offset

utp

offset

__put_user

txc

freq

utp

freq

__put_user

txc

maxerror

utp

maxerror

__put_user

txc

esterror

utp

esterror

__put_user

txc

status

utp

status

__put_user

txc

constant

utp

constant

__put_user

txc

precision

utp

precision

__put_user

txc

tolerance

utp

tolerance

__put_user

txc

time

tv_sec

utp

time

tv_sec

__put_user

txc

time

tv_usec

utp

time

tv_usec

__put_user

txc

tick

utp

tick

__put_user

txc

ppsfreq

utp

ppsfreq

__put_user

txc

jitter

utp

jitter

__put_user

txc

shift

utp

shift

__put_user

txc

stabil

utp

stabil

__put_user

txc

jitcnt

utp

jitcnt

__put_user

txc

calcnt

utp

calcnt

__put_user

txc

errcnt

utp

errcnt

__put_user

txc

stbcnt

utp

stbcnt

ret

EFAULT

return

ret

CONFIG_NUMA

asmlinkage

compat_sys_move_pages

pid_t

pid

nr_pages

compat_uptr_t

__user

pages32

__user

nodes

__user

status

flags

void

__user

__user

pages

i

pages

compat_alloc_user_space

nr_pages

sizeof

void

i

i

nr_pages

i

compat_uptr_t

p

get_user

p

pages32

i

put_user

compat_ptr

p

pages

i

return

EFAULT

return

sys_move_pages

pid

nr_pages

pages

nodes

status

flags

asmlinkage

compat_sys_migrate_pages

compat_pid_t

pid

compat_ulong_t

maxnode

compat_ulong_t

__user

old_nodes

compat_ulong_t

__user

new_nodes

__user

old

NULL

__user

new

NULL

nodemask_t

tmp_mask

nr_bits

size

nr_bits

min_t

maxnode

MAX_NUMNODES

size

ALIGN

nr_bits

BITS_PER_LONG

old_nodes

compat_get_bitmap

nodes_addr

tmp_mask

old_nodes

nr_bits

return

EFAULT

old

compat_alloc_user_space

new_nodes

size

size

new_nodes

new

old

size

sizeof

copy_to_user

old

nodes_addr

tmp_mask

size

return

EFAULT

new_nodes

compat_get_bitmap

nodes_addr

tmp_mask

new_nodes

nr_bits

return

EFAULT

new

NULL

new

compat_alloc_user_space

size

copy_to_user

new

nodes_addr

tmp_mask

size

return

EFAULT

return

sys_migrate_pages

pid

nr_bits

old

new

compat_sysinfo

s32

uptime

u32

loads

u32

totalram

u32

freeram

u32

sharedram

u32

bufferram

u32

totalswap

u32

freeswap

u16

procs

u16

pad

u32

totalhigh

u32

freehigh

u32

mem_unit

_f

sizeof

u32

sizeof

asmlinkage

compat_sys_sysinfo

compat_sysinfo

__user

info

sysinfo

s

do_sysinfo

s

s

totalram

s

totalswap

bitcount

s

mem_unit

PAGE_SIZE

s

mem_unit

bitcount

s

totalram

bitcount

s

freeram

bitcount

s

sharedram

bitcount

s

bufferram

bitcount

s

totalswap

bitcount

s

freeswap

bitcount

s

totalhigh

bitcount

s

freehigh

bitcount

access_ok

VERIFY_WRITE

info

sizeof

compat_sysinfo

__put_user

s

uptime

info

uptime

__put_user

s

loads

info

loads

__put_user

s

loads

info

loads

__put_user

s

loads

info

loads

__put_user

s

totalram

info

totalram

__put_user

s

freeram

info

freeram

__put_user

s

sharedram

info

sharedram

__put_user

s

bufferram

info

bufferram

__put_user

s

totalswap

info

totalswap

__put_user

s

freeswap

info

freeswap

__put_user

s

procs

info

procs

__put_user

s

totalhigh

info

totalhigh

__put_user

s

freehigh

info

freehigh

__put_user

s

mem_unit

info

mem_unit

return

EFAULT

return

MAGIC_START

MAGIC_END

MAGIC_SIZE

sizeof

MAGIC_START

kernel_config_data_size

sizeof

kernel_config_data

MAGIC_SIZE

CONFIG_IKCONFIG_PROC

static

ssize_t

ikconfig_read_current

file

file

__user

buf

size_t

len

loff_t

offset

return

simple_read_from_buffer

buf

len

offset

kernel_config_data

MAGIC_SIZE

kernel_config_data_size

static

file_operations

ikconfig_file_ops

owner

THIS_MODULE

read

ikconfig_read_current

static

__init

ikconfig_init

void

proc_dir_entry

entry

entry

create_proc_entry

S_IFREG

S_IRUGO

proc_root

entry

return

ENOMEM

entry

proc_fops

ikconfig_file_ops

entry

size

kernel_config_data_size

return

static

void

__exit

ikconfig_cleanup

void

remove_proc_entry

proc_root

module_init

ikconfig_init

module_exit

ikconfig_cleanup

MODULE_LICENSE

MODULE_AUTHOR

MODULE_DESCRIPTION

static

DEFINE_MUTEX

cpu_add_remove_lock

static

DEFINE_MUTEX

cpu_bitmask_lock

static

__cpuinitdata

RAW_NOTIFIER_HEAD

cpu_chain

static

cpu_hotplug_disabled

CONFIG_HOTPLUG_CPU

static

task_struct

recursive

static

recursive_depth

void

lock_cpu_hotplug

void

task_struct

tsk

current

tsk

recursive

static

warnings

warnings

printk

KERN_ERR

WARN_ON

warnings

recursive_depth

return

mutex_lock

cpu_bitmask_lock

recursive

tsk

EXPORT_SYMBOL_GPL

lock_cpu_hotplug

void

unlock_cpu_hotplug

void

WARN_ON

recursive

current

recursive_depth

recursive_depth

return

recursive

NULL

mutex_unlock

cpu_bitmask_lock

EXPORT_SYMBOL_GPL

unlock_cpu_hotplug

__cpuinit

register_cpu_notifier

notifier_block

nb

ret

mutex_lock

cpu_add_remove_lock

ret

raw_notifier_chain_register

cpu_chain

nb

mutex_unlock

cpu_add_remove_lock

return

ret

CONFIG_HOTPLUG_CPU

EXPORT_SYMBOL

register_cpu_notifier

void

unregister_cpu_notifier

notifier_block

nb

mutex_lock

cpu_add_remove_lock

raw_notifier_chain_unregister

cpu_chain

nb

mutex_unlock

cpu_add_remove_lock

EXPORT_SYMBOL

unregister_cpu_notifier

static

inline

void

check_for_tasks

cpu

task_struct

p

write_lock_irq

tasklist_lock

for_each_process

p

task_cpu

p

cpu

cputime_eq

p

utime

cputime_zero

cputime_eq

p

stime

cputime_zero

printk

KERN_WARNING

p

comm

p

pid

cpu

p

state

p

flags

write_unlock_irq

tasklist_lock

static

take_cpu_down

void

unused

err

err

__cpu_disable

err

return

err

sched_idle_next

return

static

_cpu_down

cpu

tasks_frozen

err

nr_calls

task_struct

p

cpumask_t

old_allowed

tmp

void

hcpu

void

cpu

mod

tasks_frozen

CPU_TASKS_FROZEN

num_online_cpus

return

EBUSY

cpu_online

cpu

return

EINVAL

raw_notifier_call_chain

cpu_chain

CPU_LOCK_ACQUIRE

hcpu

err

__raw_notifier_call_chain

cpu_chain

CPU_DOWN_PREPARE

mod

hcpu

nr_calls

err

NOTIFY_BAD

__raw_notifier_call_chain

cpu_chain

CPU_DOWN_FAILED

mod

hcpu

nr_calls

NULL

printk

__FUNCTION__

cpu

err

EINVAL

goto

out_release

old_allowed

current

cpus_allowed

tmp

CPU_MASK_ALL

cpu_clear

cpu

tmp

set_cpus_allowed

current

tmp

mutex_lock

cpu_bitmask_lock

p

__stop_machine_run

take_cpu_down

NULL

cpu

mutex_unlock

cpu_bitmask_lock

IS_ERR

p

cpu_online

cpu

raw_notifier_call_chain

cpu_chain

CPU_DOWN_FAILED

mod

hcpu

NOTIFY_BAD

BUG

IS_ERR

p

err

PTR_ERR

p

goto

out_allowed

goto

out_thread

idle_cpu

cpu

yield

__cpu_die

cpu

raw_notifier_call_chain

cpu_chain

CPU_DEAD

mod

hcpu

NOTIFY_BAD

BUG

check_for_tasks

cpu

out_thread

err

kthread_stop

p

out_allowed

set_cpus_allowed

current

old_allowed

out_release

raw_notifier_call_chain

cpu_chain

CPU_LOCK_RELEASE

hcpu

return

err

cpu_down

cpu

err

mutex_lock

cpu_add_remove_lock

cpu_hotplug_disabled

err

EBUSY

err

_cpu_down

cpu

mutex_unlock

cpu_add_remove_lock

return

err

static

__cpuinit

_cpu_up

cpu

tasks_frozen

ret

nr_calls

void

hcpu

void

cpu

mod

tasks_frozen

CPU_TASKS_FROZEN

cpu_online

cpu

cpu_present

cpu

return

EINVAL

raw_notifier_call_chain

cpu_chain

CPU_LOCK_ACQUIRE

hcpu

ret

__raw_notifier_call_chain

cpu_chain

CPU_UP_PREPARE

mod

hcpu

nr_calls

ret

NOTIFY_BAD

printk

__FUNCTION__

cpu

ret

EINVAL

goto

out_notify

mutex_lock

cpu_bitmask_lock

ret

__cpu_up

cpu

mutex_unlock

cpu_bitmask_lock

ret

goto

out_notify

BUG_ON

cpu_online

cpu

raw_notifier_call_chain

cpu_chain

CPU_ONLINE

mod

hcpu

out_notify

ret

__raw_notifier_call_chain

cpu_chain

CPU_UP_CANCELED

mod

hcpu

nr_calls

NULL

raw_notifier_call_chain

cpu_chain

CPU_LOCK_RELEASE

hcpu

return

ret

__cpuinit

cpu_up

cpu

err

mutex_lock

cpu_add_remove_lock

cpu_hotplug_disabled

err

EBUSY

err

_cpu_up

cpu

mutex_unlock

cpu_add_remove_lock

return

err

CONFIG_SUSPEND_SMP

static

cpumask_t

frozen_cpus

disable_nonboot_cpus

void

cpu

first_cpu

error

mutex_lock

cpu_add_remove_lock

first_cpu

first_cpu

cpu_online_map

cpus_clear

frozen_cpus

printk

for_each_online_cpu

cpu

cpu

first_cpu

error

_cpu_down

cpu

error

cpu_set

cpu

frozen_cpus

printk

cpu

printk

KERN_ERR

cpu

error

error

BUG_ON

num_online_cpus

cpu_hotplug_disabled

printk

KERN_ERR

mutex_unlock

cpu_add_remove_lock

return

error

void

enable_nonboot_cpus

void

cpu

error

mutex_lock

cpu_add_remove_lock

cpu_hotplug_disabled

cpus_empty

frozen_cpus

goto

out

printk

for_each_cpu_mask

cpu

frozen_cpus

error

_cpu_up

cpu

error

printk

cpu

printk

KERN_WARNING

cpu

error

cpus_clear

frozen_cpus

out

mutex_unlock

cpu_add_remove_lock

CPUSET_SUPER_MAGIC

x27e0eb

number_of_cpusets

__read_mostly

fmeter

cnt

val

time_t

time

spinlock_t

lock

cpuset

flags

cpumask_t

cpus_allowed

nodemask_t

mems_allowed

atomic_t

count

list_head

sibling

list_head

children

cpuset

parent

dentry

dentry

mems_generation

fmeter

fmeter

typedef

enum

CS_CPU_EXCLUSIVE

CS_MEM_EXCLUSIVE

CS_MEMORY_MIGRATE

CS_REMOVED

CS_NOTIFY_ON_RELEASE

CS_SPREAD_PAGE

CS_SPREAD_SLAB

cpuset_flagbits_t

static

inline

is_cpu_exclusive

cpuset

cs

return

test_bit

CS_CPU_EXCLUSIVE

cs

flags

static

inline

is_mem_exclusive

cpuset

cs

return

test_bit

CS_MEM_EXCLUSIVE

cs

flags

static

inline

is_removed

cpuset

cs

return

test_bit

CS_REMOVED

cs

flags

static

inline

notify_on_release

cpuset

cs

return

test_bit

CS_NOTIFY_ON_RELEASE

cs

flags

static

inline

is_memory_migrate

cpuset

cs

return

test_bit

CS_MEMORY_MIGRATE

cs

flags

static

inline

is_spread_page

cpuset

cs

return

test_bit

CS_SPREAD_PAGE

cs

flags

static

inline

is_spread_slab

cpuset

cs

return

test_bit

CS_SPREAD_SLAB

cs

flags

static

cpuset_mems_generation

static

cpuset

top_cpuset

flags

CS_CPU_EXCLUSIVE

CS_MEM_EXCLUSIVE

cpus_allowed

CPU_MASK_ALL

mems_allowed

NODE_MASK_ALL

count

ATOMIC_INIT

sibling

LIST_HEAD_INIT

top_cpuset

sibling

children

LIST_HEAD_INIT

top_cpuset

children

static

vfsmount

cpuset_mount

static

super_block

cpuset_sb

static

DEFINE_MUTEX

manage_mutex

static

DEFINE_MUTEX

callback_mutex

static

cpuset_mkdir

inode

dir

dentry

dentry

mode

static

cpuset_rmdir

inode

unused_dir

dentry

dentry

static

backing_dev_info

cpuset_backing_dev_info

ra_pages

capabilities

BDI_CAP_NO_ACCT_DIRTY

BDI_CAP_NO_WRITEBACK

static

inode

cpuset_new_inode

mode_t

mode

inode

inode

new_inode

cpuset_sb

inode

inode

i_mode

mode

inode

i_uid

current

fsuid

inode

i_gid

current

fsgid

inode

i_blocks

inode

i_atime

inode

i_mtime

inode

i_ctime

CURRENT_TIME

inode

i_mapping

backing_dev_info

cpuset_backing_dev_info

return

inode

static

void

cpuset_diput

dentry

dentry

inode

inode

S_ISDIR

inode

i_mode

cpuset

cs

dentry

d_fsdata

BUG_ON

is_removed

cs

kfree

cs

iput

inode

static

dentry_operations

cpuset_dops

d_iput

cpuset_diput

static

dentry

cpuset_get_dentry

dentry

parent

name

dentry

d

lookup_one_len

name

parent

strlen

name

IS_ERR

d

d

d_op

cpuset_dops

return

d

static

void

remove_dir

dentry

d

dentry

parent

dget

d

d_parent

d_delete

d

simple_rmdir

parent

d_inode

d

dput

parent

static

void

cpuset_d_remove_dir

dentry

dentry

list_head

node

spin_lock

dcache_lock

node

dentry

d_subdirs

next

node

dentry

d_subdirs

dentry

d

list_entry

node

dentry

d_u

d_child

list_del_init

node

d

d_inode

d

dget_locked

d

spin_unlock

dcache_lock

d_delete

d

simple_unlink

dentry

d_inode

d

dput

d

spin_lock

dcache_lock

node

dentry

d_subdirs

next

list_del_init

dentry

d_u

d_child

spin_unlock

dcache_lock

remove_dir

dentry

static

super_operations

cpuset_ops

statfs

simple_statfs

drop_inode

generic_delete_inode

static

cpuset_fill_super

super_block

sb

void

unused_data

unused_silent

inode

inode

dentry

root

sb

s_blocksize

PAGE_CACHE_SIZE

sb

s_blocksize_bits

PAGE_CACHE_SHIFT

sb

s_magic

CPUSET_SUPER_MAGIC

sb

s_op

cpuset_ops

cpuset_sb

sb

inode

cpuset_new_inode

S_IFDIR

S_IRUGO

S_IXUGO

S_IWUSR

inode

inode

i_op

simple_dir_inode_operations

inode

i_fop

simple_dir_operations

inc_nlink

inode

return

ENOMEM

root

d_alloc_root

inode

root

iput

inode

return

ENOMEM

sb

s_root

root

return

static

cpuset_get_sb

file_system_type

fs_type

flags

unused_dev_name

void

data

vfsmount

mnt

return

get_sb_single

fs_type

flags

data

cpuset_fill_super

mnt

static

file_system_type

cpuset_fs_type

name

get_sb

cpuset_get_sb

kill_sb

kill_litter_super

cftype

name

private

open

inode

inode

file

file

ssize_t

read

file

file

__user

buf

size_t

nbytes

loff_t

ppos

write

file

file

__user

buf

size_t

nbytes

loff_t

ppos

release

inode

inode

file

file

static

inline

cpuset

__d_cs

dentry

dentry

return

dentry

d_fsdata

static

inline

cftype

__d_cft

dentry

dentry

return

dentry

d_fsdata

static

cpuset_path

cpuset

cs

buf

buflen

start

start

buf

buflen

start

len

cs

dentry

d_name

len

start

len

buf

return

ENAMETOOLONG

memcpy

start

cs

dentry

d_name

name

len

cs

cs

parent

cs

cs

parent

start

buf

return

ENAMETOOLONG

start

memmove

buf

start

buf

buflen

start

return

static

void

cpuset_release_agent

pathbuf

argv

envp

i

pathbuf

return

i

argv

i

argv

i

pathbuf

argv

i

NULL

i

envp

i

envp

i

envp

i

NULL

call_usermodehelper

argv

argv

envp

kfree

pathbuf

static

void

check_for_release

cpuset

cs

ppathbuf

notify_on_release

cs

atomic_read

cs

count

list_empty

cs

children

buf

buf

kmalloc

PAGE_SIZE

GFP_KERNEL

buf

return

cpuset_path

cs

buf

PAGE_SIZE

kfree

buf

ppathbuf

buf

static

void

guarantee_online_cpus

cpuset

cs

cpumask_t

pmask

cs

cpus_intersects

cs

cpus_allowed

cpu_online_map

cs

cs

parent

cs

cpus_and

pmask

cs

cpus_allowed

cpu_online_map

pmask

cpu_online_map

BUG_ON

cpus_intersects

pmask

cpu_online_map

static

void

guarantee_online_mems

cpuset

cs

nodemask_t

pmask

cs

nodes_intersects

cs

mems_allowed

node_online_map

cs

cs

parent

cs

nodes_and

pmask

cs

mems_allowed

node_online_map

pmask

node_online_map

BUG_ON

nodes_intersects

pmask

node_online_map

void

cpuset_update_task_memory_state

void

my_cpusets_mem_gen

task_struct

tsk

current

cpuset

cs

tsk

cpuset

top_cpuset

my_cpusets_mem_gen

top_cpuset

mems_generation

rcu_read_lock

cs

rcu_dereference

tsk

cpuset

my_cpusets_mem_gen

cs

mems_generation

rcu_read_unlock

my_cpusets_mem_gen

tsk

cpuset_mems_generation

mutex_lock

callback_mutex

task_lock

tsk

cs

tsk

cpuset

guarantee_online_mems

cs

tsk

mems_allowed

tsk

cpuset_mems_generation

cs

mems_generation

is_spread_page

cs

tsk

flags

PF_SPREAD_PAGE

tsk

flags

PF_SPREAD_PAGE

is_spread_slab

cs

tsk

flags

PF_SPREAD_SLAB

tsk

flags

PF_SPREAD_SLAB

task_unlock

tsk

mutex_unlock

callback_mutex

mpol_rebind_task

tsk

tsk

mems_allowed

static

is_cpuset_subset

cpuset

p

cpuset

q

return

cpus_subset

p

cpus_allowed

q

cpus_allowed

nodes_subset

p

mems_allowed

q

mems_allowed

is_cpu_exclusive

p

is_cpu_exclusive

q

is_mem_exclusive

p

is_mem_exclusive

q

static

validate_change

cpuset

cur

cpuset

trial

cpuset

c

par

list_for_each_entry

c

cur

children

sibling

is_cpuset_subset

c

trial

return

EBUSY

cur

top_cpuset

return

par

cur

parent

is_cpuset_subset

trial

par

return

EACCES

list_for_each_entry

c

par

children

sibling

is_cpu_exclusive

trial

is_cpu_exclusive

c

c

cur

cpus_intersects

trial

cpus_allowed

c

cpus_allowed

return

EINVAL

is_mem_exclusive

trial

is_mem_exclusive

c

c

cur

nodes_intersects

trial

mems_allowed

c

mems_allowed

return

EINVAL

return

static

void

update_cpu_domains

cpuset

cur

cpuset

c

par

cur

parent

cpumask_t

pspan

cspan

par

NULL

cpus_empty

cur

cpus_allowed

return

pspan

par

cpus_allowed

list_for_each_entry

c

par

children

sibling

is_cpu_exclusive

c

cpus_andnot

pspan

pspan

c

cpus_allowed

is_cpu_exclusive

cur

cpus_or

pspan

pspan

cur

cpus_allowed

cpus_equal

pspan

cur

cpus_allowed

return

cspan

CPU_MASK_NONE

cpus_empty

pspan

return

cspan

cur

cpus_allowed

list_for_each_entry

c

cur

children

sibling

is_cpu_exclusive

c

cpus_andnot

cspan

cspan

c

cpus_allowed

lock_cpu_hotplug

partition_sched_domains

pspan

cspan

unlock_cpu_hotplug

static

update_cpumask

cpuset

cs

buf

cpuset

trialcs

retval

cpus_unchanged

cs

top_cpuset

return

EACCES

trialcs

cs

buf

buf

buf

cpus_clear

trialcs

cpus_allowed

retval

cpulist_parse

buf

trialcs

cpus_allowed

retval

return

retval

cpus_and

trialcs

cpus_allowed

trialcs

cpus_allowed

cpu_online_map

atomic_read

cs

count

cpus_empty

trialcs

cpus_allowed

return

ENOSPC

retval

validate_change

cs

trialcs

retval

return

retval

cpus_unchanged

cpus_equal

cs

cpus_allowed

trialcs

cpus_allowed

mutex_lock

callback_mutex

cs

cpus_allowed

trialcs

cpus_allowed

mutex_unlock

callback_mutex

is_cpu_exclusive

cs

cpus_unchanged

update_cpu_domains

cs

return

static

void

cpuset_migrate_mm

mm_struct

mm

nodemask_t

from

nodemask_t

to

task_struct

tsk

current

cpuset_update_task_memory_state

mutex_lock

callback_mutex

tsk

mems_allowed

to

mutex_unlock

callback_mutex

do_migrate_pages

mm

from

to

MPOL_MF_MOVE_ALL

mutex_lock

callback_mutex

guarantee_online_mems

tsk

cpuset

tsk

mems_allowed

mutex_unlock

callback_mutex

static

update_nodemask

cpuset

cs

buf

cpuset

trialcs

nodemask_t

oldmem

task_struct

g

p

mm_struct

mmarray

i

n

ntasks

migrate

fudge

retval

cs

top_cpuset

return

EACCES

trialcs

cs

buf

buf

buf

nodes_clear

trialcs

mems_allowed

retval

nodelist_parse

buf

trialcs

mems_allowed

retval

goto

done

nodes_and

trialcs

mems_allowed

trialcs

mems_allowed

node_online_map

oldmem

cs

mems_allowed

nodes_equal

oldmem

trialcs

mems_allowed

retval

goto

done

atomic_read

cs

count

nodes_empty

trialcs

mems_allowed

retval

ENOSPC

goto

done

retval

validate_change

cs

trialcs

retval

goto

done

mutex_lock

callback_mutex

cs

mems_allowed

trialcs

mems_allowed

cs

mems_generation

cpuset_mems_generation

mutex_unlock

callback_mutex

set_cpuset_being_rebound

cs

fudge

fudge

cpus_weight

cs

cpus_allowed

retval

ENOMEM

ntasks

atomic_read

cs

count

ntasks

fudge

mmarray

kmalloc

ntasks

sizeof

mmarray

GFP_KERNEL

mmarray

goto

done

write_lock_irq

tasklist_lock

atomic_read

cs

count

ntasks

write_unlock_irq

tasklist_lock

kfree

mmarray

n

do_each_thread

g

p

mm_struct

mm

n

ntasks

printk

KERN_WARNING

p

cpuset

cs

mm

get_task_mm

p

mm

mmarray

n

mm

while_each_thread

g

p

write_unlock_irq

tasklist_lock

migrate

is_memory_migrate

cs

i

i

n

i

mm_struct

mm

mmarray

i

mpol_rebind_mm

mm

cs

mems_allowed

migrate

cpuset_migrate_mm

mm

oldmem

cs

mems_allowed

mmput

mm

kfree

mmarray

set_cpuset_being_rebound

NULL

retval

done

return

retval

static

update_memory_pressure_enabled

cpuset

cs

buf

simple_strtoul

buf

NULL

cpuset_memory_pressure_enabled

cpuset_memory_pressure_enabled

return

static

update_flag

cpuset_flagbits_t

bit

cpuset

cs

buf

turning_on

cpuset

trialcs

err

cpu_exclusive_changed

turning_on

simple_strtoul

buf

NULL

trialcs

cs

turning_on

set_bit

bit

trialcs

flags

clear_bit

bit

trialcs

flags

err

validate_change

cs

trialcs

err

return

err

cpu_exclusive_changed

is_cpu_exclusive

cs

is_cpu_exclusive

trialcs

mutex_lock

callback_mutex

cs

flags

trialcs

flags

mutex_unlock

callback_mutex

cpu_exclusive_changed

update_cpu_domains

cs

return

FM_COEF

FM_MAXTICKS

time_t

FM_MAXCNT

FM_SCALE

static

void

fmeter_init

fmeter

fmp

fmp

cnt

fmp

val

fmp

time

spin_lock_init

fmp

lock

static

void

fmeter_update

fmeter

fmp

time_t

now

get_seconds

time_t

ticks

now

fmp

time

ticks

return

ticks

min

FM_MAXTICKS

ticks

ticks

fmp

val

FM_COEF

fmp

val

FM_SCALE

fmp

time

now

fmp

val

FM_SCALE

FM_COEF

fmp

cnt

FM_SCALE

fmp

cnt

static

void

fmeter_markevent

fmeter

fmp

spin_lock

fmp

lock

fmeter_update

fmp

fmp

cnt

min

FM_MAXCNT

fmp

cnt

FM_SCALE

spin_unlock

fmp

lock

static

fmeter_getrate

fmeter

fmp

val

spin_lock

fmp

lock

fmeter_update

fmp

val

fmp

val

spin_unlock

fmp

lock

return

val

static

attach_task

cpuset

cs

pidbuf

ppathbuf

pid_t

pid

task_struct

tsk

cpuset

oldcs

cpumask_t

cpus

nodemask_t

from

to

mm_struct

mm

retval

sscanf

pidbuf

pid

return

EIO

cpus_empty

cs

cpus_allowed

nodes_empty

cs

mems_allowed

return

ENOSPC

pid

read_lock

tasklist_lock

tsk

find_task_by_pid

pid

tsk

tsk

flags

PF_EXITING

read_unlock

tasklist_lock

return

ESRCH

get_task_struct

tsk

read_unlock

tasklist_lock

current

euid

current

euid

tsk

uid

current

euid

tsk

suid

put_task_struct

tsk

return

EACCES

tsk

current

get_task_struct

tsk

retval

security_task_setscheduler

tsk

NULL

retval

put_task_struct

tsk

return

retval

mutex_lock

callback_mutex

task_lock

tsk

oldcs

tsk

cpuset

tsk

flags

PF_EXITING

task_unlock

tsk

mutex_unlock

callback_mutex

put_task_struct

tsk

return

ESRCH

atomic_inc

cs

count

rcu_assign_pointer

tsk

cpuset

cs

task_unlock

tsk

guarantee_online_cpus

cs

cpus

set_cpus_allowed

tsk

cpus

from

oldcs

mems_allowed

to

cs

mems_allowed

mutex_unlock

callback_mutex

mm

get_task_mm

tsk

mm

mpol_rebind_mm

mm

to

is_memory_migrate

cs

cpuset_migrate_mm

mm

from

to

mmput

mm

put_task_struct

tsk

synchronize_rcu

atomic_dec_and_test

oldcs

count

check_for_release

oldcs

ppathbuf

return

typedef

enum

FILE_ROOT

FILE_DIR

FILE_MEMORY_MIGRATE

FILE_CPULIST

FILE_MEMLIST

FILE_CPU_EXCLUSIVE

FILE_MEM_EXCLUSIVE

FILE_NOTIFY_ON_RELEASE

FILE_MEMORY_PRESSURE_ENABLED

FILE_MEMORY_PRESSURE

FILE_SPREAD_PAGE

FILE_SPREAD_SLAB

FILE_TASKLIST

cpuset_filetype_t

static

ssize_t

cpuset_common_file_write

file

file

__user

userbuf

size_t

nbytes

loff_t

unused_ppos

cpuset

cs

__d_cs

file

f_path

dentry

d_parent

cftype

cft

__d_cft

file

f_path

dentry

cpuset_filetype_t

type

cft

private

buffer

pathbuf

NULL

retval

nbytes

max

NR_CPUS

MAX_NUMNODES

return

E2BIG

buffer

kmalloc

nbytes

GFP_KERNEL

return

ENOMEM

copy_from_user

buffer

userbuf

nbytes

retval

EFAULT

goto

out1

buffer

nbytes

mutex_lock

manage_mutex

is_removed

cs

retval

ENODEV

goto

out2

type

case

FILE_CPULIST

retval

update_cpumask

cs

buffer

case

FILE_MEMLIST

retval

update_nodemask

cs

buffer

case

FILE_CPU_EXCLUSIVE

retval

update_flag

CS_CPU_EXCLUSIVE

cs

buffer

case

FILE_MEM_EXCLUSIVE

retval

update_flag

CS_MEM_EXCLUSIVE

cs

buffer

case

FILE_NOTIFY_ON_RELEASE

retval

update_flag

CS_NOTIFY_ON_RELEASE

cs

buffer

case

FILE_MEMORY_MIGRATE

retval

update_flag

CS_MEMORY_MIGRATE

cs

buffer

case

FILE_MEMORY_PRESSURE_ENABLED

retval

update_memory_pressure_enabled

cs

buffer

case

FILE_MEMORY_PRESSURE

retval

EACCES

case

FILE_SPREAD_PAGE

retval

update_flag

CS_SPREAD_PAGE

cs

buffer

cs

mems_generation

cpuset_mems_generation

case

FILE_SPREAD_SLAB

retval

update_flag

CS_SPREAD_SLAB

cs

buffer

cs

mems_generation

cpuset_mems_generation

case

FILE_TASKLIST

retval

attach_task

cs

buffer

pathbuf

default

retval

EINVAL

goto

out2

retval

retval

nbytes

out2

mutex_unlock

manage_mutex

cpuset_release_agent

pathbuf

out1

kfree

buffer

return

retval

static

ssize_t

cpuset_file_write

file

file

__user

buf

size_t

nbytes

loff_t

ppos

ssize_t

retval

cftype

cft

__d_cft

file

f_path

dentry

cft

return

ENODEV

cft

write

retval

cft

write

file

buf

nbytes

ppos

retval

cpuset_common_file_write

file

buf

nbytes

ppos

return

retval

static

cpuset_sprintf_cpulist

page

cpuset

cs

cpumask_t

mask

mutex_lock

callback_mutex

mask

cs

cpus_allowed

mutex_unlock

callback_mutex

return

cpulist_scnprintf

page

PAGE_SIZE

mask

static

cpuset_sprintf_memlist

page

cpuset

cs

nodemask_t

mask

mutex_lock

callback_mutex

mask

cs

mems_allowed

mutex_unlock

callback_mutex

return

nodelist_scnprintf

page

PAGE_SIZE

mask

static

ssize_t

cpuset_common_file_read

file

file

__user

buf

size_t

nbytes

loff_t

ppos

cftype

cft

__d_cft

file

f_path

dentry

cpuset

cs

__d_cs

file

f_path

dentry

d_parent

cpuset_filetype_t

type

cft

private

page

ssize_t

retval

s

page

__get_free_page

GFP_KERNEL

return

ENOMEM

s

page

type

case

FILE_CPULIST

s

cpuset_sprintf_cpulist

s

cs

case

FILE_MEMLIST

s

cpuset_sprintf_memlist

s

cs

case

FILE_CPU_EXCLUSIVE

s

is_cpu_exclusive

cs

case

FILE_MEM_EXCLUSIVE

s

is_mem_exclusive

cs

case

FILE_NOTIFY_ON_RELEASE

s

notify_on_release

cs

case

FILE_MEMORY_MIGRATE

s

is_memory_migrate

cs

case

FILE_MEMORY_PRESSURE_ENABLED

s

cpuset_memory_pressure_enabled

case

FILE_MEMORY_PRESSURE

s

sprintf

s

fmeter_getrate

cs

fmeter

case

FILE_SPREAD_PAGE

s

is_spread_page

cs

case

FILE_SPREAD_SLAB

s

is_spread_slab

cs

default

retval

EINVAL

goto

out

s

retval

simple_read_from_buffer

buf

nbytes

ppos

page

s

page

out

free_page

page

return

retval

static

ssize_t

cpuset_file_read

file

file

__user

buf

size_t

nbytes

loff_t

ppos

ssize_t

retval

cftype

cft

__d_cft

file

f_path

dentry

cft

return

ENODEV

cft

read

retval

cft

read

file

buf

nbytes

ppos

retval

cpuset_common_file_read

file

buf

nbytes

ppos

return

retval

static

cpuset_file_open

inode

inode

file

file

err

cftype

cft

err

generic_file_open

inode

file

err

return

err

cft

__d_cft

file

f_path

dentry

cft

return

ENODEV

cft

open

err

cft

open

inode

file

err

return

err

static

cpuset_file_release

inode

inode

file

file

cftype

cft

__d_cft

file

f_path

dentry

cft

release

return

cft

release

inode

file

return

static

cpuset_rename

inode

old_dir

dentry

old_dentry

inode

new_dir

dentry

new_dentry

S_ISDIR

old_dentry

d_inode

i_mode

return

ENOTDIR

new_dentry

d_inode

return

EEXIST

old_dir

new_dir

return

EIO

return

simple_rename

old_dir

old_dentry

new_dir

new_dentry

static

file_operations

cpuset_file_operations

read

cpuset_file_read

write

cpuset_file_write

llseek

generic_file_llseek

open

cpuset_file_open

release

cpuset_file_release

static

inode_operations

cpuset_dir_inode_operations

lookup

simple_lookup

mkdir

cpuset_mkdir

rmdir

cpuset_rmdir

rename

cpuset_rename

static

cpuset_create_file

dentry

dentry

mode

inode

inode

dentry

return

ENOENT

dentry

d_inode

return

EEXIST

inode

cpuset_new_inode

mode

inode

return

ENOMEM

S_ISDIR

mode

inode

i_op

cpuset_dir_inode_operations

inode

i_fop

simple_dir_operations

inc_nlink

inode

S_ISREG

mode

inode

i_size

inode

i_fop

cpuset_file_operations

d_instantiate

dentry

inode

dget

dentry

return

static

cpuset_create_dir

cpuset

cs

name

mode

dentry

dentry

NULL

dentry

parent

error

parent

cs

parent

dentry

dentry

cpuset_get_dentry

parent

name

IS_ERR

dentry

return

PTR_ERR

dentry

error

cpuset_create_file

dentry

S_IFDIR

mode

error

dentry

d_fsdata

cs

inc_nlink

parent

d_inode

cs

dentry

dentry

dput

dentry

return

error

static

cpuset_add_file

dentry

dir

cftype

cft

dentry

dentry

error

mutex_lock

dir

d_inode

i_mutex

dentry

cpuset_get_dentry

dir

cft

name

IS_ERR

dentry

error

cpuset_create_file

dentry

S_IFREG

error

dentry

d_fsdata

void

cft

dput

dentry

error

PTR_ERR

dentry

mutex_unlock

dir

d_inode

i_mutex

return

error

ctr_struct

buf

bufsz

static

pid_array_load

pid_t

pidarray

npids

cpuset

cs

n

task_struct

g

p

read_lock

tasklist_lock

do_each_thread

g

p

p

cpuset

cs

unlikely

n

npids

goto

array_full

pidarray

n

p

pid

while_each_thread

g

p

array_full

read_unlock

tasklist_lock

return

n

static

cmppid

void

a

void

b

return

pid_t

a

pid_t

b

static

pid_array_to_buf

buf

sz

pid_t

a

npids

cnt

i

i

i

npids

i

cnt

snprintf

buf

cnt

max

sz

cnt

a

i

return

cnt

static

cpuset_tasks_open

inode

unused

file

file

cpuset

cs

__d_cs

file

f_path

dentry

d_parent

ctr_struct

ctr

pid_t

pidarray

npids

c

file

f_mode

FMODE_READ

return

ctr

kmalloc

sizeof

ctr

GFP_KERNEL

ctr

goto

err0

npids

atomic_read

cs

count

pidarray

kmalloc

npids

sizeof

pid_t

GFP_KERNEL

pidarray

goto

err1

npids

pid_array_load

pidarray

npids

cs

sort

pidarray

npids

sizeof

pid_t

cmppid

NULL

ctr

bufsz

pid_array_to_buf

c

sizeof

c

pidarray

npids

ctr

buf

kmalloc

ctr

bufsz

GFP_KERNEL

ctr

buf

goto

err2

ctr

bufsz

pid_array_to_buf

ctr

buf

ctr

bufsz

pidarray

npids

kfree

pidarray

file

private_data

ctr

return

err2

kfree

pidarray

err1

kfree

ctr

err0

return

ENOMEM

static

ssize_t

cpuset_tasks_read

file

file

__user

buf

size_t

nbytes

loff_t

ppos

ctr_struct

ctr

file

private_data

return

simple_read_from_buffer

buf

nbytes

ppos

ctr

buf

ctr

bufsz

static

cpuset_tasks_release

inode

unused_inode

file

file

ctr_struct

ctr

file

f_mode

FMODE_READ

ctr

file

private_data

kfree

ctr

buf

kfree

ctr

return

static

cftype

cft_tasks

name

open

cpuset_tasks_open

read

cpuset_tasks_read

release

cpuset_tasks_release

private

FILE_TASKLIST

static

cftype

cft_cpus

name

private

FILE_CPULIST

static

cftype

cft_mems

name

private

FILE_MEMLIST

static

cftype

cft_cpu_exclusive

name

private

FILE_CPU_EXCLUSIVE

static

cftype

cft_mem_exclusive

name

private

FILE_MEM_EXCLUSIVE

static

cftype

cft_notify_on_release

name

private

FILE_NOTIFY_ON_RELEASE

static

cftype

cft_memory_migrate

name

private

FILE_MEMORY_MIGRATE

static

cftype

cft_memory_pressure_enabled

name

private

FILE_MEMORY_PRESSURE_ENABLED

static

cftype

cft_memory_pressure

name

private

FILE_MEMORY_PRESSURE

static

cftype

cft_spread_page

name

private

FILE_SPREAD_PAGE

static

cftype

cft_spread_slab

name

private

FILE_SPREAD_SLAB

static

cpuset_populate_dir

dentry

cs_dentry

err

err

cpuset_add_file

cs_dentry

cft_cpus

return

err

err

cpuset_add_file

cs_dentry

cft_mems

return

err

err

cpuset_add_file

cs_dentry

cft_cpu_exclusive

return

err

err

cpuset_add_file

cs_dentry

cft_mem_exclusive

return

err

err

cpuset_add_file

cs_dentry

cft_notify_on_release

return

err

err

cpuset_add_file

cs_dentry

cft_memory_migrate

return

err

err

cpuset_add_file

cs_dentry

cft_memory_pressure

return

err

err

cpuset_add_file

cs_dentry

cft_spread_page

return

err

err

cpuset_add_file

cs_dentry

cft_spread_slab

return

err

err

cpuset_add_file

cs_dentry

cft_tasks

return

err

return

static

cpuset_create

cpuset

parent

name

mode

cpuset

cs

err

cs

kmalloc

sizeof

cs

GFP_KERNEL

cs

return

ENOMEM

mutex_lock

manage_mutex

cpuset_update_task_memory_state

cs

flags

notify_on_release

parent

set_bit

CS_NOTIFY_ON_RELEASE

cs

flags

is_spread_page

parent

set_bit

CS_SPREAD_PAGE

cs

flags

is_spread_slab

parent

set_bit

CS_SPREAD_SLAB

cs

flags

cs

cpus_allowed

CPU_MASK_NONE

cs

mems_allowed

NODE_MASK_NONE

atomic_set

cs

count

INIT_LIST_HEAD

cs

sibling

INIT_LIST_HEAD

cs

children

cs

mems_generation

cpuset_mems_generation

fmeter_init

cs

fmeter

cs

parent

parent

mutex_lock

callback_mutex

list_add

cs

sibling

cs

parent

children

number_of_cpusets

mutex_unlock

callback_mutex

err

cpuset_create_dir

cs

name

mode

err

goto

err

mutex_unlock

manage_mutex

err

cpuset_populate_dir

cs

dentry

return

err

list_del

cs

sibling

mutex_unlock

manage_mutex

kfree

cs

return

err

static

cpuset_mkdir

inode

dir

dentry

dentry

mode

cpuset

c_parent

dentry

d_parent

d_fsdata

return

cpuset_create

c_parent

dentry

d_name

name

mode

S_IFDIR

static

cpuset_rmdir

inode

unused_dir

dentry

dentry

cpuset

cs

dentry

d_fsdata

dentry

d

cpuset

parent

pathbuf

NULL

mutex_lock

manage_mutex

cpuset_update_task_memory_state

atomic_read

cs

count

mutex_unlock

manage_mutex

return

EBUSY

list_empty

cs

children

mutex_unlock

manage_mutex

return

EBUSY

is_cpu_exclusive

cs

retval

update_flag

CS_CPU_EXCLUSIVE

cs

retval

mutex_unlock

manage_mutex

return

retval

parent

cs

parent

mutex_lock

callback_mutex

set_bit

CS_REMOVED

cs

flags

list_del

cs

sibling

spin_lock

cs

dentry

d_lock

d

dget

cs

dentry

cs

dentry

NULL

spin_unlock

d

d_lock

cpuset_d_remove_dir

d

dput

d

number_of_cpusets

mutex_unlock

callback_mutex

list_empty

parent

children

check_for_release

parent

pathbuf

mutex_unlock

manage_mutex

cpuset_release_agent

pathbuf

return

__init

cpuset_init_early

void

task_struct

tsk

current

tsk

cpuset

top_cpuset

tsk

cpuset

mems_generation

cpuset_mems_generation

return

err

err

cpuset_add_file

root

cft_memory_pressure_enabled

out

return

err

static

void

guarantee_online_cpus_mems_in_subtree

cpuset

cur

cpuset

c

list_for_each_entry

c

cur

children

sibling

guarantee_online_cpus_mems_in_subtree

c

cpus_empty

c

cpus_allowed

guarantee_online_cpus

c

c

cpus_allowed

nodes_empty

c

mems_allowed

guarantee_online_mems

c

c

mems_allowed

static

void

common_cpu_mem_hotplug_unplug

void

mutex_lock

manage_mutex

mutex_lock

callback_mutex

guarantee_online_cpus_mems_in_subtree

top_cpuset

top_cpuset

cpus_allowed

cpu_online_map

top_cpuset

mems_allowed

node_online_map

mutex_unlock

callback_mutex

mutex_unlock

manage_mutex

static

cpuset_handle_cpuhp

notifier_block

nb

phase

void

cpu

common_cpu_mem_hotplug_unplug

return

CONFIG_MEMORY_HOTPLUG

void

cpuset_track_online_nodes

void

common_cpu_mem_hotplug_unplug

task_unlock

current

notify_on_release

cs

pathbuf

NULL

mutex_lock

manage_mutex

atomic_dec_and_test

cs

count

check_for_release

cs

pathbuf

mutex_unlock

manage_mutex

cpuset_release_agent

pathbuf

atomic_dec

cs

count

cpuset_zonelist_valid_mems_allowed

zonelist

zl

i

i

zl

zones

i

i

nid

zone_to_nid

zl

zones

i

node_isset

nid

current

mems_allowed

return

return

static

cpuset

nearest_exclusive_ancestor

cpuset

cs

is_mem_exclusive

cs

cs

parent

cs

cs

parent

return

cs

__cpuset_zone_allowed_softwall

zone

z

gfp_t

gfp_mask

node

cpuset

cs

allowed

in_interrupt

gfp_mask

__GFP_THISNODE

return

node

zone_to_nid

z

might_sleep_if

gfp_mask

__GFP_HARDWALL

node_isset

node

current

mems_allowed

return

unlikely

test_thread_flag

TIF_MEMDIE

return

gfp_mask

__GFP_HARDWALL

return

current

flags

PF_EXITING

return

mutex_lock

callback_mutex

task_lock

current

cs

nearest_exclusive_ancestor

current

cpuset

task_unlock

current

allowed

node_isset

node

cs

mems_allowed

mutex_unlock

callback_mutex

return

allowed

__cpuset_zone_allowed_hardwall

zone

z

gfp_t

gfp_mask

node

in_interrupt

gfp_mask

__GFP_THISNODE

return

node

zone_to_nid

z

node_isset

node

current

mems_allowed

return

unlikely

test_thread_flag

TIF_MEMDIE

return

return

void

cpuset_lock

void

mutex_lock

callback_mutex

void

cpuset_unlock

void

mutex_unlock

callback_mutex

cpuset_mem_spread_node

void

node

node

next_node

current

cpuset_mem_spread_rotor

current

mems_allowed

node

MAX_NUMNODES

node

first_node

current

mems_allowed

current

cpuset_mem_spread_rotor

node

return

node

EXPORT_SYMBOL_GPL

cpuset_mem_spread_node

overlap

task_lock

current

current

flags

PF_EXITING

task_unlock

current

goto

done

cs1

nearest_exclusive_ancestor

current

cpuset

task_unlock

current

task_lock

task_struct

p

p

flags

PF_EXITING

task_unlock

task_struct

p

goto

done

cs2

nearest_exclusive_ancestor

p

cpuset

task_unlock

task_struct

p

overlap

nodes_intersects

cs1

mems_allowed

cs2

mems_allowed

done

return

overlap

cpuset_memory_pressure_enabled

__read_mostly

static

proc_cpuset_show

seq_file

m

void

v

pid

pid

task_struct

tsk

buf

retval

retval

ENOMEM

buf

kmalloc

PAGE_SIZE

GFP_KERNEL

buf

goto

out

retval

ESRCH

pid

m

private

tsk

get_pid_task

pid

PIDTYPE_PID

tsk

goto

out_free

retval

EINVAL

mutex_lock

manage_mutex

retval

cpuset_path

tsk

cpuset

buf

PAGE_SIZE

retval

goto

out_unlock

seq_puts

m

buf

seq_putc

m

out_unlock

mutex_unlock

manage_mutex

put_task_struct

tsk

out_free

kfree

buf

out

return

retval

static

cpuset_open

inode

inode

file

file

pid

pid

PROC_I

inode

pid

return

single_open

file

proc_cpuset_show

pid

file_operations

proc_cpuset_operations

open

cpuset_open

read

seq_read

llseek

seq_lseek

release

single_release

cpuset_task_status_allowed

task_struct

task

buffer

buffer

sprintf

buffer

buffer

cpumask_scnprintf

buffer

PAGE_SIZE

task

cpus_allowed

buffer

sprintf

buffer

buffer

sprintf

buffer

buffer

nodemask_scnprintf

buffer

PAGE_SIZE

task

mems_allowed

buffer

sprintf

buffer

return

buffer

delayacct_on

__read_mostly

kmem_cache

delayacct_cache

static

__init

delayacct_setup_disable

str

delayacct_on

return

__setup

delayacct_setup_disable

void

delayacct_init

void

delayacct_cache

KMEM_CACHE

task_delay_info

SLAB_PANIC

delayacct_tsk_init

init_task

void

__delayacct_tsk_init

task_struct

tsk

tsk

delays

kmem_cache_zalloc

delayacct_cache

GFP_KERNEL

tsk

delays

spin_lock_init

tsk

delays

lock

static

inline

void

delayacct_start

timespec

start

do_posix_clock_monotonic_gettime

start

static

void

delayacct_end

timespec

start

timespec

end

u64

total

u32

count

timespec

ts

s64

ns

flags

do_posix_clock_monotonic_gettime

end

ts

timespec_sub

end

start

ns

timespec_to_ns

ts

ns

return

spin_lock_irqsave

current

delays

lock

flags

total

ns

count

spin_unlock_irqrestore

current

delays

lock

flags

void

__delayacct_blkio_start

void

delayacct_start

current

delays

blkio_start

void

__delayacct_blkio_end

void

current

delays

flags

DELAYACCT_PF_SWAPIN

delayacct_end

current

delays

blkio_start

current

delays

blkio_end

current

delays

swapin_delay

current

delays

swapin_count

delayacct_end

current

delays

blkio_start

current

delays

blkio_end

current

delays

blkio_delay

current

delays

blkio_count

__delayacct_add_tsk

taskstats

d

task_struct

tsk

s64

tmp

timespec

ts

t1

t2

t3

flags

tsk

delays

goto

done

tmp

s64

d

cpu_run_real_total

cputime_to_timespec

tsk

utime

tsk

stime

ts

tmp

timespec_to_ns

ts

d

cpu_run_real_total

tmp

s64

d

cpu_run_real_total

tmp

t1

tsk

sched_info

pcnt

t2

tsk

sched_info

run_delay

t3

tsk

sched_info

cpu_time

d

cpu_count

t1

jiffies_to_timespec

t2

ts

tmp

s64

d

cpu_delay_total

timespec_to_ns

ts

d

cpu_delay_total

tmp

s64

d

cpu_delay_total

tmp

tmp

s64

d

cpu_run_virtual_total

s64

jiffies_to_usecs

t3

d

cpu_run_virtual_total

tmp

s64

d

cpu_run_virtual_total

tmp

spin_lock_irqsave

tsk

delays

lock

flags

tmp

d

blkio_delay_total

tsk

delays

blkio_delay

d

blkio_delay_total

tmp

d

blkio_delay_total

tmp

tmp

d

swapin_delay_total

tsk

delays

swapin_delay

d

swapin_delay_total

tmp

d

swapin_delay_total

tmp

d

blkio_count

tsk

delays

blkio_count

d

swapin_count

tsk

delays

swapin_count

spin_unlock_irqrestore

tsk

delays

lock

flags

done

return

__u64

__delayacct_blkio_ticks

task_struct

tsk

__u64

ret

flags

spin_lock_irqsave

tsk

delays

lock

flags

ret

nsec_to_clock_t

tsk

delays

blkio_delay

tsk

delays

swapin_delay

spin_unlock_irqrestore

tsk

delays

lock

flags

return

ret

static

ATOMIC_NOTIFIER_HEAD

die_chain

notify_die

enum

die_val

val

str

pt_regs

regs

err

trap

sig

die_args

args

regs

regs

str

str

err

err

trapnr

trap

signr

sig

return

atomic_notifier_call_chain

die_chain

val

args

register_die_notifier

notifier_block

nb

vmalloc_sync_all

return

atomic_notifier_chain_register

die_chain

nb

EXPORT_SYMBOL_GPL

register_die_notifier

unregister_die_notifier

notifier_block

nb

return

atomic_notifier_chain_unregister

die_chain

nb

EXPORT_SYMBOL_GPL

unregister_die_notifier

DEFINE_SPINLOCK

dma_spin_lock

MAX_DMA_CHANNELS

dma_chan

lock

device_id

static

dma_chan

dma_chan_busy

MAX_DMA_CHANNELS

request_dma

dmanr

device_id

dmanr

MAX_DMA_CHANNELS

return

EINVAL

xchg

dma_chan_busy

dmanr

lock

return

EBUSY

dma_chan_busy

dmanr

device_id

device_id

return

void

free_dma

dmanr

dmanr

MAX_DMA_CHANNELS

printk

KERN_WARNING

dmanr

return

xchg

dma_chan_busy

dmanr

lock

printk

KERN_WARNING

dmanr

return

request_dma

dmanr

device_id

return

EINVAL

void

free_dma

dmanr

CONFIG_PROC_FS

MAX_DMA_CHANNELS

static

proc_dma_show

seq_file

m

void

v

i

i

i

MAX_DMA_CHANNELS

i

dma_chan_busy

i

lock

seq_printf

m

i

dma_chan_busy

i

device_id

return

static

proc_dma_show

seq_file

m

void

v

seq_puts

m

return

static

proc_dma_open

inode

inode

file

file

return

single_open

file

proc_dma_show

NULL

static

file_operations

proc_dma_operations

open

proc_dma_open

read

seq_read

llseek

seq_lseek

release

single_release

static

__init

proc_dma_init

void

proc_dir_entry

e

e

create_proc_entry

NULL

e

e

proc_fops

proc_dma_operations

return

__initcall

proc_dma_init

EXPORT_SYMBOL

request_dma

EXPORT_SYMBOL

free_dma

EXPORT_SYMBOL

dma_spin_lock

static

void

default_handler

pt_regs

static

exec_domain

exec_domains

default_exec_domain

static

DEFINE_RWLOCK

exec_domains_lock

static

u_long

ident_map

exec_domain

default_exec_domain

name

handler

default_handler

pers_low

pers_high

signal_map

ident_map

signal_invmap

ident_map

static

void

default_handler

segment

pt_regs

regp

set_personality

current_thread_info

exec_domain

handler

default_handler

current_thread_info

exec_domain

handler

segment

regp

send_sig

SIGSEGV

current

static

exec_domain

lookup_exec_domain

u_long

personality

exec_domain

ep

u_long

pers

personality

personality

read_lock

exec_domains_lock

ep

exec_domains

ep

ep

ep

next

pers

ep

pers_low

pers

ep

pers_high

try_module_get

ep

module

goto

out

CONFIG_KMOD

read_unlock

exec_domains_lock

request_module

pers

read_lock

exec_domains_lock

ep

exec_domains

ep

ep

ep

next

pers

ep

pers_low

pers

ep

pers_high

try_module_get

ep

module

goto

out

ep

default_exec_domain

out

read_unlock

exec_domains_lock

return

ep

register_exec_domain

exec_domain

ep

exec_domain

tmp

err

EBUSY

ep

NULL

return

EINVAL

ep

next

NULL

return

EBUSY

write_lock

exec_domains_lock

tmp

exec_domains

tmp

tmp

tmp

next

tmp

ep

goto

out

ep

next

exec_domains

exec_domains

ep

err

out

write_unlock

exec_domains_lock

return

err

unregister_exec_domain

exec_domain

ep

exec_domain

epp

epp

exec_domains

write_lock

exec_domains_lock

epp

exec_domains

epp

epp

epp

next

ep

epp

goto

unregister

write_unlock

exec_domains_lock

return

EINVAL

unregister

epp

ep

next

ep

next

NULL

write_unlock

exec_domains_lock

return

__set_personality

u_long

personality

exec_domain

ep

oep

ep

lookup_exec_domain

personality

ep

current_thread_info

exec_domain

current

personality

personality

module_put

ep

module

return

atomic_read

current

fs

count

fs_struct

fsp

ofsp

fsp

copy_fs_struct

current

fs

fsp

NULL

module_put

ep

module

return

ENOMEM

task_lock

current

ofsp

current

fs

current

fs

fsp

task_unlock

current

put_fs_struct

ofsp

current

personality

personality

oep

current_thread_info

exec_domain

current_thread_info

exec_domain

ep

set_fs_altroot

module_put

oep

module

return

get_exec_domain_list

page

exec_domain

ep

len

read_lock

exec_domains_lock

ep

exec_domains

ep

len

PAGE_SIZE

ep

ep

next

len

sprintf

page

len

ep

pers_low

ep

pers_high

ep

name

module_name

ep

module

read_unlock

exec_domains_lock

return

len

asmlinkage

sys_personality

u_long

personality

u_long

old

current

personality

personality

xffffffff

set_personality

personality

current

personality

personality

return

EINVAL

return

old

EXPORT_SYMBOL

register_exec_domain

EXPORT_SYMBOL

unregister_exec_domain

EXPORT_SYMBOL

__set_personality

CONFIG_KDB

extern

void

sem_exit

void

static

void

exit_mm

task_struct

tsk

static

void

__unhash_process

task_struct

p

nr_threads

detach_pid

p

PIDTYPE_PID

thread_group_leader

p

detach_pid

p

PIDTYPE_PGID

detach_pid

p

PIDTYPE_SID

list_del_rcu

p

tasks

__get_cpu_var

process_counts

list_del_rcu

p

thread_group

remove_parent

p

static

void

__exit_signal

task_struct

tsk

signal_struct

sig

tsk

signal

sighand_struct

sighand

BUG_ON

sig

BUG_ON

atomic_read

sig

count

rcu_read_lock

sighand

rcu_dereference

tsk

sighand

spin_lock

sighand

siglock

signalfd_detach_locked

tsk

posix_cpu_timers_exit

tsk

atomic_dec_and_test

sig

count

posix_cpu_timers_exit_group

tsk

sig

group_exit_task

atomic_read

sig

count

sig

notify_count

wake_up_process

sig

group_exit_task

sig

group_exit_task

NULL

tsk

sig

curr_target

sig

curr_target

next_thread

tsk

sig

utime

cputime_add

sig

utime

tsk

utime

sig

stime

cputime_add

sig

stime

tsk

stime

sig

min_flt

tsk

min_flt

sig

maj_flt

tsk

maj_flt

sig

nvcsw

tsk

nvcsw

sig

nivcsw

tsk

nivcsw

sig

sched_time

tsk

sched_time

sig

inblock

task_io_get_inblock

tsk

sig

oublock

task_io_get_oublock

tsk

sig

NULL

__unhash_process

tsk

tsk

signal

NULL

tsk

sighand

NULL

spin_unlock

sighand

siglock

rcu_read_unlock

__cleanup_sighand

sighand

clear_tsk_thread_flag

tsk

TIF_SIGPENDING

flush_sigqueue

tsk

pending

sig

flush_sigqueue

sig

shared_pending

taskstats_tgid_free

sig

__cleanup_signal

sig

static

void

delayed_put_task_struct

rcu_head

rhp

put_task_struct

container_of

rhp

task_struct

rcu

void

release_task

task_struct

p

task_struct

leader

zap_leader

repeat

atomic_dec

p

user

processes

write_lock_irq

tasklist_lock

ptrace_unlink

p

BUG_ON

list_empty

p

ptrace_list

list_empty

p

ptrace_children

__exit_signal

p

zap_leader

leader

p

group_leader

leader

p

thread_group_empty

leader

leader

exit_state

EXIT_ZOMBIE

BUG_ON

leader

exit_signal

do_notify_parent

leader

leader

exit_signal

zap_leader

leader

exit_signal

sched_exit

p

write_unlock_irq

tasklist_lock

proc_flush_task

p

release_thread

p

call_rcu

p

rcu

delayed_put_task_struct

p

leader

unlikely

zap_leader

goto

repeat

pid

session_of_pgrp

pid

pgrp

task_struct

p

pid

sid

NULL

p

pid_task

pgrp

PIDTYPE_PGID

p

NULL

p

pid_task

pgrp

PIDTYPE_PID

p

NULL

sid

task_session

p

return

sid

static

will_become_orphaned_pgrp

pid

pgrp

task_struct

ignored_task

task_struct

p

ret

do_each_pid_task

pgrp

PIDTYPE_PGID

p

p

ignored_task

p

exit_state

is_init

p

real_parent

task_pgrp

p

real_parent

pgrp

task_session

p

real_parent

task_session

p

ret

while_each_pid_task

pgrp

PIDTYPE_PGID

p

return

ret

is_current_pgrp_orphaned

void

retval

read_lock

tasklist_lock

retval

will_become_orphaned_pgrp

task_pgrp

current

NULL

read_unlock

tasklist_lock

return

retval

static

has_stopped_jobs

pid

pgrp

retval

task_struct

p

do_each_pid_task

pgrp

PIDTYPE_PGID

p

p

state

TASK_STOPPED

retval

while_each_pid_task

pgrp

PIDTYPE_PGID

p

return

retval

static

void

reparent_to_kthreadd

void

write_lock_irq

tasklist_lock

ptrace_unlink

current

remove_parent

current

current

real_parent

current

parent

kthreadd_task

add_parent

current

current

exit_signal

SIGCHLD

has_rt_policy

current

task_nice

current

set_user_nice

current

security_task_reparent_to_init

current

memcpy

current

signal

rlim

init_task

signal

rlim

sizeof

current

signal

rlim

atomic_inc

INIT_USER

__count

write_unlock_irq

tasklist_lock

switch_uid

INIT_USER

void

__set_special_pids

pid_t

session

pid_t

pgrp

task_struct

curr

current

group_leader

process_session

curr

session

detach_pid

curr

PIDTYPE_SID

set_signal_session

curr

signal

session

attach_pid

curr

PIDTYPE_SID

find_pid

session

process_group

curr

pgrp

detach_pid

curr

PIDTYPE_PGID

curr

signal

pgrp

pgrp

attach_pid

curr

PIDTYPE_PGID

find_pid

pgrp

static

void

set_special_pids

pid_t

session

pid_t

pgrp

write_lock_irq

tasklist_lock

__set_special_pids

session

pgrp

write_unlock_irq

tasklist_lock

allow_signal

sig

valid_signal

sig

sig

return

EINVAL

spin_lock_irq

current

sighand

siglock

sigdelset

current

blocked

sig

current

mm

current

sighand

action

sig

sa

sa_handler

void

__user

recalc_sigpending

spin_unlock_irq

current

sighand

siglock

return

EXPORT_SYMBOL

allow_signal

disallow_signal

sig

valid_signal

sig

sig

return

EINVAL

spin_lock_irq

current

sighand

siglock

current

sighand

action

sig

sa

sa_handler

SIG_IGN

recalc_sigpending

spin_unlock_irq

current

sighand

siglock

return

EXPORT_SYMBOL

disallow_signal

void

daemonize

name

va_list

args

fs_struct

fs

sigset_t

blocked

va_start

args

name

vsnprintf

current

comm

sizeof

current

comm

name

args

va_end

args

exit_mm

current

set_special_pids

proc_clear_tty

current

sigfillset

blocked

sigprocmask

SIG_BLOCK

blocked

NULL

flush_signals

current

exit_fs

current

fs

init_task

fs

current

fs

fs

atomic_inc

fs

count

exit_task_namespaces

current

current

nsproxy

init_task

nsproxy

get_task_namespaces

current

exit_files

current

current

files

init_task

files

atomic_inc

current

files

count

reparent_to_kthreadd

EXPORT_SYMBOL

daemonize

static

void

close_files

files_struct

files

i

j

fdtable

fdt

j

fdt

files_fdtable

files

set

i

j

__NFDBITS

i

fdt

max_fds

set

fdt

open_fds

fds_bits

j

set

set

file

file

xchg

fdt

fd

i

NULL

file

filp_close

file

files

cond_resched

i

set

files_struct

get_files_struct

task_struct

task

files_struct

files

task_lock

task

files

task

files

files

atomic_inc

files

count

task_unlock

task

return

files

void

fastcall

put_files_struct

files_struct

files

fdtable

fdt

atomic_dec_and_test

files

count

close_files

files

fdt

files_fdtable

files

fdt

files

fdtab

kmem_cache_free

files_cachep

files

free_fdtable

fdt

EXPORT_SYMBOL

put_files_struct

void

reset_files_struct

task_struct

tsk

files_struct

files

files_struct

old

old

tsk

files

task_lock

tsk

tsk

files

files

task_unlock

tsk

put_files_struct

old

EXPORT_SYMBOL

reset_files_struct

static

inline

void

__exit_files

task_struct

tsk

files_struct

files

tsk

files

files

task_lock

tsk

tsk

files

NULL

task_unlock

tsk

put_files_struct

files

void

exit_files

task_struct

tsk

__exit_files

tsk

static

inline

void

__put_fs_struct

fs_struct

fs

atomic_dec_and_test

fs

count

dput

fs

root

mntput

fs

rootmnt

dput

fs

pwd

mntput

fs

pwdmnt

fs

altroot

dput

fs

altroot

mntput

fs

altrootmnt

kmem_cache_free

fs_cachep

fs

void

put_fs_struct

fs_struct

fs

__put_fs_struct

fs

static

inline

void

__exit_fs

task_struct

tsk

fs_struct

fs

tsk

fs

fs

task_lock

tsk

tsk

fs

NULL

task_unlock

tsk

__put_fs_struct

fs

void

exit_fs

task_struct

tsk

__exit_fs

tsk

EXPORT_SYMBOL_GPL

exit_fs

static

void

exit_mm

task_struct

tsk

mm_struct

mm

tsk

mm

mm_release

tsk

mm

mm

return

down_read

mm

mmap_sem

mm

core_waiters

up_read

mm

mmap_sem

down_write

mm

mmap_sem

mm

core_waiters

complete

mm

core_startup_done

up_write

mm

mmap_sem

wait_for_completion

mm

core_done

down_read

mm

mmap_sem

atomic_inc

mm

mm_count

BUG_ON

mm

tsk

active_mm

task_lock

tsk

tsk

mm

NULL

up_read

mm

mmap_sem

enter_lazy_tlb

mm

current

task_unlock

tsk

mmput

mm

static

inline

void

choose_new_parent

task_struct

p

task_struct

reaper

BUG_ON

p

reaper

reaper

exit_state

p

real_parent

reaper

static

void

reparent_thread

task_struct

p

task_struct

father

traced

p

pdeath_signal

group_send_sig_info

p

pdeath_signal

SEND_SIG_NOINFO

p

unlikely

traced

list_del_init

p

ptrace_list

p

parent

p

real_parent

list_add

p

ptrace_list

p

real_parent

ptrace_children

p

ptrace

remove_parent

p

p

parent

p

real_parent

add_parent

p

p

state

TASK_TRACED

ptrace_untrace

p

p

real_parent

group_leader

father

group_leader

return

p

exit_signal

p

exit_signal

SIGCHLD

traced

p

exit_state

EXIT_ZOMBIE

p

exit_signal

thread_group_empty

p

do_notify_parent

p

p

exit_signal

task_pgrp

p

task_pgrp

father

task_session

p

task_session

father

pid

pgrp

task_pgrp

p

will_become_orphaned_pgrp

pgrp

NULL

has_stopped_jobs

pgrp

__kill_pgrp_info

SIGHUP

SEND_SIG_PRIV

pgrp

__kill_pgrp_info

SIGCONT

SEND_SIG_PRIV

pgrp

static

void

forget_original_parent

task_struct

father

list_head

to_release

task_struct

p

reaper

father

list_head

_p

_n

reaper

next_thread

reaper

reaper

father

reaper

child_reaper

father

reaper

exit_state

list_for_each_safe

_p

_n

father

children

ptrace

p

list_entry

_p

task_struct

sibling

ptrace

p

ptrace

BUG_ON

father

p

real_parent

ptrace

father

p

real_parent

choose_new_parent

p

reaper

reparent_thread

p

father

__ptrace_unlink

p

p

exit_state

EXIT_ZOMBIE

p

exit_signal

thread_group_empty

p

do_notify_parent

p

p

exit_signal

unlikely

ptrace

p

exit_state

EXIT_ZOMBIE

p

exit_signal

list_add

p

ptrace_list

to_release

list_for_each_safe

_p

_n

father

ptrace_children

p

list_entry

_p

task_struct

ptrace_list

choose_new_parent

p

reaper

reparent_thread

p

father

static

void

exit_notify

task_struct

tsk

state

task_struct

t

list_head

ptrace_dead

_p

_n

pid

pgrp

signal_pending

tsk

tsk

signal

flags

SIGNAL_GROUP_EXIT

thread_group_empty

tsk

read_lock

tasklist_lock

spin_lock_irq

tsk

sighand

siglock

t

next_thread

tsk

t

tsk

t

next_thread

t

signal_pending

t

t

flags

PF_EXITING

recalc_sigpending_and_wake

t

spin_unlock_irq

tsk

sighand

siglock

read_unlock

tasklist_lock

write_lock_irq

tasklist_lock

INIT_LIST_HEAD

ptrace_dead

forget_original_parent

tsk

ptrace_dead

BUG_ON

list_empty

tsk

children

BUG_ON

list_empty

tsk

ptrace_children

t

tsk

real_parent

pgrp

task_pgrp

tsk

task_pgrp

t

pgrp

task_session

t

task_session

tsk

will_become_orphaned_pgrp

pgrp

tsk

has_stopped_jobs

pgrp

__kill_pgrp_info

SIGHUP

SEND_SIG_PRIV

pgrp

__kill_pgrp_info

SIGCONT

SEND_SIG_PRIV

pgrp

tsk

exit_signal

SIGCHLD

tsk

exit_signal

tsk

parent_exec_id

t

self_exec_id

tsk

self_exec_id

tsk

parent_exec_id

capable

CAP_KILL

tsk

exit_signal

SIGCHLD

tsk

exit_signal

thread_group_empty

tsk

signal

tsk

parent

tsk

real_parent

tsk

exit_signal

SIGCHLD

do_notify_parent

tsk

signal

tsk

ptrace

do_notify_parent

tsk

SIGCHLD

state

EXIT_ZOMBIE

tsk

exit_signal

likely

tsk

ptrace

unlikely

tsk

parent

signal

flags

SIGNAL_GROUP_EXIT

state

EXIT_DEAD

tsk

exit_state

state

write_unlock_irq

tasklist_lock

list_for_each_safe

_p

_n

ptrace_dead

list_del_init

_p

t

list_entry

_p

task_struct

ptrace_list

release_task

t

state

EXIT_DEAD

release_task

tsk

fastcall

NORET_TYPE

void

do_exit

code

task_struct

tsk

current

group_dead

profile_task_exit

tsk

WARN_ON

atomic_read

tsk

fs_excl

unlikely

in_interrupt

panic

unlikely

tsk

pid

panic

unlikely

tsk

child_reaper

tsk

tsk

nsproxy

pid_ns

init_pid_ns

tsk

nsproxy

pid_ns

child_reaper

init_pid_ns

child_reaper

panic

unlikely

current

ptrace

PT_TRACE_EXIT

current

ptrace_message

code

ptrace_notify

PTRACE_EVENT_EXIT

SIGTRAP

unlikely

tsk

flags

PF_EXITING

printk

KERN_ALERT

tsk

flags

PF_EXITPIDONE

tsk

io_context

exit_io_context

set_current_state

TASK_UNINTERRUPTIBLE

schedule

spin_lock_irq

tsk

pi_lock

tsk

flags

PF_EXITING

spin_unlock_irq

tsk

pi_lock

unlikely

in_atomic

printk

KERN_INFO

current

comm

current

pid

preempt_count

acct_update_integrals

tsk

tsk

mm

update_hiwater_rss

tsk

mm

update_hiwater_vm

tsk

mm

group_dead

atomic_dec_and_test

tsk

signal

live

group_dead

hrtimer_cancel

tsk

signal

real_timer

exit_itimers

tsk

signal

acct_collect

code

group_dead

unlikely

tsk

robust_list

exit_robust_list

tsk

CONFIG_FUTEX

CONFIG_COMPAT

unlikely

tsk

compat_robust_list

compat_exit_robust_list

tsk

unlikely

tsk

audit_context

audit_free

tsk

taskstats_exit

tsk

group_dead

exit_mm

tsk

group_dead

acct_process

exit_sem

tsk

__exit_files

tsk

__exit_fs

tsk

exit_thread

cpuset_exit

tsk

exit_keys

tsk

group_dead

tsk

signal

leader

disassociate_ctty

module_put

task_thread_info

tsk

exec_domain

module

tsk

binfmt

module_put

tsk

binfmt

module

tsk

exit_code

code

proc_exit_connector

tsk

exit_task_namespaces

tsk

exit_notify

tsk

CONFIG_NUMA

mpol_free

tsk

mempolicy

tsk

mempolicy

NULL

unlikely

list_empty

tsk

pi_state_list

exit_pi_state_list

tsk

unlikely

current

pi_state_cache

kfree

current

pi_state_cache

debug_check_no_locks_held

tsk

tsk

flags

PF_EXITPIDONE

tsk

io_context

exit_io_context

tsk

splice_pipe

__free_pipe_info

tsk

splice_pipe

preempt_disable

tsk

state

TASK_DEAD

schedule

BUG

cpu_relax

EXPORT_SYMBOL_GPL

do_exit

NORET_TYPE

void

complete_and_exit

completion

comp

code

comp

complete

comp

do_exit

code

EXPORT_SYMBOL

complete_and_exit

asmlinkage

sys_exit

error_code

do_exit

error_code

xff

NORET_TYPE

void

do_group_exit

exit_code

BUG_ON

exit_code

x80

current

signal

flags

SIGNAL_GROUP_EXIT

exit_code

current

signal

group_exit_code

thread_group_empty

current

signal_struct

sig

current

signal

sighand_struct

sighand

current

sighand

spin_lock_irq

sighand

siglock

sig

flags

SIGNAL_GROUP_EXIT

exit_code

sig

group_exit_code

sig

group_exit_code

exit_code

zap_other_threads

current

spin_unlock_irq

sighand

siglock

do_exit

exit_code

asmlinkage

void

sys_exit_group

error_code

do_group_exit

error_code

xff

static

eligible_child

pid_t

pid

options

task_struct

p

err

pid

p

pid

pid

return

pid

process_group

p

process_group

current

return

pid

process_group

p

pid

return

p

exit_signal

p

ptrace

return

p

exit_signal

SIGCHLD

options

__WCLONE

options

__WALL

return

delay_group_leader

p

return

err

security_task_wait

p

err

return

err

return

static

wait_noreap_copyout

task_struct

p

pid_t

pid

uid_t

uid

why

status

siginfo

__user

infop

rusage

__user

rusagep

retval

rusagep

getrusage

p

RUSAGE_BOTH

rusagep

put_task_struct

p

retval

retval

put_user

SIGCHLD

infop

si_signo

retval

retval

put_user

infop

si_errno

retval

retval

put_user

short

why

infop

si_code

retval

retval

put_user

pid

infop

si_pid

retval

retval

put_user

uid

infop

si_uid

retval

retval

put_user

status

infop

si_status

retval

retval

pid

return

retval

static

wait_task_zombie

task_struct

p

noreap

siginfo

__user

infop

__user

stat_addr

rusage

__user

ru

state

retval

status

unlikely

noreap

pid_t

pid

p

pid

uid_t

uid

p

uid

exit_code

p

exit_code

why

status

unlikely

p

exit_state

EXIT_ZOMBIE

return

unlikely

p

exit_signal

p

ptrace

return

get_task_struct

p

read_unlock

tasklist_lock

exit_code

x7f

why

CLD_EXITED

status

exit_code

why

exit_code

x80

CLD_DUMPED

CLD_KILLED

status

exit_code

x7f

return

wait_noreap_copyout

p

pid

uid

why

status

infop

ru

state

xchg

p

exit_state

EXIT_DEAD

state

EXIT_ZOMBIE

BUG_ON

state

EXIT_DEAD

return

unlikely

p

exit_signal

p

ptrace

return

likely

p

real_parent

p

parent

likely

p

signal

signal_struct

psig

signal_struct

sig

spin_lock_irq

p

parent

sighand

siglock

psig

p

parent

signal

sig

p

signal

psig

cutime

cputime_add

psig

cutime

cputime_add

p

utime

cputime_add

sig

utime

sig

cutime

psig

cstime

cputime_add

psig

cstime

cputime_add

p

stime

cputime_add

sig

stime

sig

cstime

psig

cmin_flt

p

min_flt

sig

min_flt

sig

cmin_flt

psig

cmaj_flt

p

maj_flt

sig

maj_flt

sig

cmaj_flt

psig

cnvcsw

p

nvcsw

sig

nvcsw

sig

cnvcsw

psig

cnivcsw

p

nivcsw

sig

nivcsw

sig

cnivcsw

psig

cinblock

task_io_get_inblock

p

sig

inblock

sig

cinblock

psig

coublock

task_io_get_oublock

p

sig

oublock

sig

coublock

spin_unlock_irq

p

parent

sighand

siglock

read_unlock

tasklist_lock

retval

ru

getrusage

p

RUSAGE_BOTH

ru

status

p

signal

flags

SIGNAL_GROUP_EXIT

p

signal

group_exit_code

p

exit_code

retval

stat_addr

retval

put_user

status

stat_addr

retval

infop

retval

put_user

SIGCHLD

infop

si_signo

retval

infop

retval

put_user

infop

si_errno

retval

infop

why

status

x7f

why

CLD_EXITED

status

why

status

x80

CLD_DUMPED

CLD_KILLED

status

x7f

retval

put_user

short

why

infop

si_code

retval

retval

put_user

status

infop

si_status

retval

infop

retval

put_user

p

pid

infop

si_pid

retval

infop

retval

put_user

p

uid

infop

si_uid

retval

p

exit_state

EXIT_ZOMBIE

return

retval

retval

p

pid

p

real_parent

p

parent

write_lock_irq

tasklist_lock

p

real_parent

p

parent

__ptrace_unlink

p

p

exit_state

EXIT_ZOMBIE

p

exit_signal

do_notify_parent

p

p

exit_signal

p

exit_signal

p

NULL

write_unlock_irq

tasklist_lock

p

NULL

release_task

p

BUG_ON

retval

return

retval

static

wait_task_stopped

task_struct

p

delayed_group_leader

noreap

siginfo

__user

infop

__user

stat_addr

rusage

__user

ru

retval

exit_code

p

exit_code

return

delayed_group_leader

p

ptrace

PT_PTRACED

p

signal

p

signal

group_stop_count

return

get_task_struct

p

read_unlock

tasklist_lock

unlikely

noreap

pid_t

pid

p

pid

uid_t

uid

p

uid

why

p

ptrace

PT_PTRACED

CLD_TRAPPED

CLD_STOPPED

exit_code

p

exit_code

unlikely

exit_code

unlikely

p

exit_state

goto

bail_ref

return

wait_noreap_copyout

p

pid

uid

why

exit_code

infop

ru

write_lock_irq

tasklist_lock

exit_code

xchg

p

exit_code

unlikely

p

exit_state

p

exit_code

exit_code

exit_code

unlikely

exit_code

write_unlock_irq

tasklist_lock

bail_ref

put_task_struct

p

return

EAGAIN

remove_parent

p

add_parent

p

write_unlock_irq

tasklist_lock

retval

ru

getrusage

p

RUSAGE_BOTH

ru

retval

stat_addr

retval

put_user

exit_code

x7f

stat_addr

retval

infop

retval

put_user

SIGCHLD

infop

si_signo

retval

infop

retval

put_user

infop

si_errno

retval

infop

retval

put_user

short

p

ptrace

PT_PTRACED

CLD_TRAPPED

CLD_STOPPED

infop

si_code

retval

infop

retval

put_user

exit_code

infop

si_status

retval

infop

retval

put_user

p

pid

infop

si_pid

retval

infop

retval

put_user

p

uid

infop

si_uid

retval

retval

p

pid

put_task_struct

p

BUG_ON

retval

return

retval

static

wait_task_continued

task_struct

p

noreap

siginfo

__user

infop

__user

stat_addr

rusage

__user

ru

retval

pid_t

pid

uid_t

uid

unlikely

p

signal

return

p

signal

flags

SIGNAL_STOP_CONTINUED

return

spin_lock_irq

p

sighand

siglock

p

signal

flags

SIGNAL_STOP_CONTINUED

spin_unlock_irq

p

sighand

siglock

return

noreap

p

signal

flags

SIGNAL_STOP_CONTINUED

spin_unlock_irq

p

sighand

siglock

pid

p

pid

uid

p

uid

get_task_struct

p

read_unlock

tasklist_lock

infop

retval

ru

getrusage

p

RUSAGE_BOTH

ru

put_task_struct

p

retval

stat_addr

retval

put_user

xffff

stat_addr

retval

retval

p

pid

retval

wait_noreap_copyout

p

pid

uid

CLD_CONTINUED

SIGCONT

infop

ru

BUG_ON

retval

return

retval

static

inline

my_ptrace_child

task_struct

p

p

ptrace

PT_PTRACED

return

p

ptrace

PT_ATTACHED

return

return

p

parent

p

real_parent

static

do_wait

pid_t

pid

options

siginfo

__user

infop

__user

stat_addr

rusage

__user

ru

DECLARE_WAITQUEUE

wait

current

task_struct

tsk

flag

retval

allowed

denied

add_wait_queue

current

signal

wait_chldexit

wait

repeat

flag

allowed

denied

current

state

TASK_INTERRUPTIBLE

read_lock

tasklist_lock

tsk

current

task_struct

p

list_head

_p

ret

list_for_each

_p

tsk

children

p

list_entry

_p

task_struct

sibling

ret

eligible_child

pid

options

p

ret

unlikely

ret

denied

ret

allowed

p

state

case

TASK_TRACED

flag

my_ptrace_child

p

case

TASK_STOPPED

flag

options

WUNTRACED

my_ptrace_child

p

retval

wait_task_stopped

p

ret

options

WNOWAIT

infop

stat_addr

ru

retval

EAGAIN

goto

repeat

retval

goto

end

default

p

exit_state

EXIT_DEAD

p

exit_state

EXIT_ZOMBIE

ret

goto

check_continued

likely

options

WEXITED

retval

wait_task_zombie

p

options

WNOWAIT

infop

stat_addr

ru

retval

goto

end

check_continued

flag

unlikely

options

WCONTINUED

retval

wait_task_continued

p

options

WNOWAIT

infop

stat_addr

ru

retval

goto

end

flag

list_for_each

_p

tsk

ptrace_children

p

list_entry

_p

task_struct

ptrace_list

eligible_child

pid

options

p

flag

options

__WNOTHREAD

tsk

next_thread

tsk

BUG_ON

tsk

signal

current

signal

tsk

current

read_unlock

tasklist_lock

flag

retval

options

WNOHANG

goto

end

retval

ERESTARTSYS

signal_pending

current

goto

end

schedule

goto

repeat

retval

ECHILD

unlikely

denied

allowed

retval

denied

end

current

state

TASK_RUNNING

remove_wait_queue

current

signal

wait_chldexit

wait

infop

retval

retval

retval

retval

put_user

infop

si_signo

retval

retval

put_user

infop

si_errno

retval

retval

put_user

infop

si_code

retval

retval

put_user

infop

si_pid

retval

retval

put_user

infop

si_uid

retval

retval

put_user

infop

si_status

return

retval

asmlinkage

sys_waitid

which

pid_t

pid

siginfo

__user

infop

options

rusage

__user

ru

ret

options

WNOHANG

WNOWAIT

WEXITED

WSTOPPED

WCONTINUED

return

EINVAL

options

WEXITED

WSTOPPED

WCONTINUED

return

EINVAL

which

case

P_ALL

pid

case

P_PID

pid

return

EINVAL

case

P_PGID

pid

return

EINVAL

pid

pid

default

return

EINVAL

ret

do_wait

pid

options

infop

NULL

ru

prevent_tail_call

ret

return

ret

asmlinkage

sys_wait4

pid_t

pid

__user

stat_addr

options

rusage

__user

ru

ret

options

WNOHANG

WUNTRACED

WCONTINUED

__WNOTHREAD

__WCLONE

__WALL

return

EINVAL

ret

do_wait

pid

options

WEXITED

NULL

stat_addr

ru

prevent_tail_call

ret

return

ret

__ARCH_WANT_SYS_WAITPID

asmlinkage

sys_waitpid

pid_t

pid

__user

stat_addr

options

return

sys_wait4

pid

stat_addr

options

NULL

extern

exception_table_entry

__start___ex_table

extern

exception_table_entry

__stop___ex_table

void

__init

sort_main_extable

void

sort_extable

__start___ex_table

__stop___ex_table

exception_table_entry

search_exception_tables

addr

exception_table_entry

e

e

search_extable

__start___ex_table

__stop___ex_table

addr

e

e

search_module_extables

addr

return

e

core_kernel_text

addr

addr

_stext

addr

_etext

return

addr

_sinittext

addr

_einittext

return

return

__kernel_text_address

addr

core_kernel_text

addr

return

return

__module_text_address

addr

NULL

kernel_text_address

addr

core_kernel_text

addr

return

return

module_text_address

addr

NULL

total_forks

nr_threads

max_threads

DEFINE_PER_CPU

process_counts

__cacheline_aligned

DEFINE_RWLOCK

tasklist_lock

nr_processes

void

cpu

total

for_each_online_cpu

cpu

total

per_cpu

process_counts

cpu

return

total

__HAVE_ARCH_TASK_STRUCT_ALLOCATOR

alloc_task_struct

kmem_cache_alloc

task_struct_cachep

GFP_KERNEL

free_task_struct

tsk

kmem_cache_free

task_struct_cachep

tsk

static

kmem_cache

task_struct_cachep

static

kmem_cache

signal_cachep

kmem_cache

sighand_cachep

kmem_cache

files_cachep

kmem_cache

fs_cachep

kmem_cache

vm_area_cachep

static

kmem_cache

mm_cachep

void

free_task

task_struct

tsk

free_thread_info

tsk

stack

rt_mutex_debug_task_free

tsk

free_task_struct

tsk

EXPORT_SYMBOL

free_task

void

__put_task_struct

task_struct

tsk

WARN_ON

tsk

exit_state

EXIT_DEAD

EXIT_ZOMBIE

WARN_ON

atomic_read

tsk

usage

WARN_ON

tsk

current

security_task_free

tsk

free_uid

tsk

user

put_group_info

tsk

group_info

delayacct_tsk_free

tsk

profile_handoff_task

tsk

free_task

tsk

void

__init

fork_init

mempages

__HAVE_ARCH_TASK_STRUCT_ALLOCATOR

ARCH_MIN_TASKALIGN

ARCH_MIN_TASKALIGN

L1_CACHE_BYTES

task_struct_cachep

kmem_cache_create

sizeof

task_struct

ARCH_MIN_TASKALIGN

SLAB_PANIC

NULL

NULL

max_threads

mempages

THREAD_SIZE

PAGE_SIZE

max_threads

max_threads

init_task

signal

rlim

RLIMIT_NPROC

rlim_cur

max_threads

init_task

signal

rlim

RLIMIT_NPROC

rlim_max

max_threads

init_task

signal

rlim

RLIMIT_SIGPENDING

init_task

signal

rlim

RLIMIT_NPROC

static

task_struct

dup_task_struct

task_struct

orig

task_struct

tsk

thread_info

ti

prepare_to_copy

orig

tsk

alloc_task_struct

tsk

return

NULL

ti

alloc_thread_info

tsk

ti

free_task_struct

tsk

return

NULL

tsk

orig

tsk

stack

ti

setup_thread_stack

tsk

orig

CONFIG_CC_STACKPROTECTOR

tsk

stack_canary

get_random_int

atomic_set

tsk

usage

atomic_set

tsk

fs_excl

CONFIG_BLK_DEV_IO_TRACE

tsk

btrace_seq

tsk

splice_pipe

NULL

return

tsk

CONFIG_MMU

static

inline

dup_mmap

mm_struct

mm

mm_struct

oldmm

vm_area_struct

mpnt

tmp

pprev

rb_node

rb_link

rb_parent

retval

charge

mempolicy

pol

down_write

oldmm

mmap_sem

flush_cache_dup_mm

oldmm

down_write_nested

mm

mmap_sem

SINGLE_DEPTH_NESTING

mm

locked_vm

mm

mmap

NULL

mm

mmap_cache

NULL

mm

free_area_cache

oldmm

mmap_base

mm

cached_hole_size

UL

mm

map_count

cpus_clear

mm

cpu_vm_mask

mm

mm_rb

RB_ROOT

rb_link

mm

mm_rb

rb_node

rb_parent

NULL

pprev

mm

mmap

mpnt

oldmm

mmap

mpnt

mpnt

mpnt

vm_next

file

file

mpnt

vm_flags

VM_DONTCOPY

pages

vma_pages

mpnt

mm

total_vm

pages

vm_stat_account

mm

mpnt

vm_flags

mpnt

vm_file

pages

charge

mpnt

vm_flags

VM_ACCOUNT

len

mpnt

vm_end

mpnt

vm_start

PAGE_SHIFT

security_vm_enough_memory

len

goto

fail_nomem

charge

len

tmp

kmem_cache_alloc

vm_area_cachep

GFP_KERNEL

tmp

goto

fail_nomem

tmp

mpnt

pol

mpol_copy

vma_policy

mpnt

retval

PTR_ERR

pol

IS_ERR

pol

goto

fail_nomem_policy

vma_set_policy

tmp

pol

tmp

vm_flags

VM_LOCKED

tmp

vm_mm

mm

tmp

vm_next

NULL

anon_vma_link

tmp

file

tmp

vm_file

file

inode

inode

file

f_path

dentry

d_inode

get_file

file

tmp

vm_flags

VM_DENYWRITE

atomic_dec

inode

i_writecount

spin_lock

file

f_mapping

i_mmap_lock

tmp

vm_truncate_count

mpnt

vm_truncate_count

flush_dcache_mmap_lock

file

f_mapping

vma_prio_tree_add

tmp

mpnt

flush_dcache_mmap_unlock

file

f_mapping

spin_unlock

file

f_mapping

i_mmap_lock

pprev

tmp

pprev

tmp

vm_next

__vma_link_rb

mm

tmp

rb_link

rb_parent

rb_link

tmp

vm_rb

rb_right

rb_parent

tmp

vm_rb

mm

map_count

retval

copy_page_range

mm

oldmm

mpnt

tmp

vm_ops

tmp

vm_ops

open

tmp

vm_ops

open

tmp

retval

goto

out

arch_dup_mmap

oldmm

mm

retval

out

up_write

mm

mmap_sem

flush_tlb_mm

oldmm

up_write

oldmm

mmap_sem

return

retval

fail_nomem_policy

kmem_cache_free

vm_area_cachep

tmp

fail_nomem

retval

ENOMEM

vm_unacct_memory

charge

goto

out

static

inline

mm_alloc_pgd

mm_struct

mm

mm

pgd

pgd_alloc

mm

unlikely

mm

pgd

return

ENOMEM

return

static

inline

void

mm_free_pgd

mm_struct

mm

pgd_free

mm

pgd

dup_mmap

mm

oldmm

mm_alloc_pgd

mm

mm_free_pgd

mm

__cacheline_aligned_in_smp

DEFINE_SPINLOCK

mmlist_lock

allocate_mm

kmem_cache_alloc

mm_cachep

GFP_KERNEL

free_mm

mm

kmem_cache_free

mm_cachep

mm

static

mm_struct

mm_init

mm_struct

mm

atomic_set

mm

mm_users

atomic_set

mm

mm_count

init_rwsem

mm

mmap_sem

INIT_LIST_HEAD

mm

mmlist

mm

core_waiters

mm

nr_ptes

set_mm_counter

mm

file_rss

set_mm_counter

mm

anon_rss

spin_lock_init

mm

page_table_lock

rwlock_init

mm

ioctx_list_lock

mm

ioctx_list

NULL

mm

free_area_cache

TASK_UNMAPPED_BASE

mm

cached_hole_size

UL

likely

mm_alloc_pgd

mm

mm

def_flags

return

mm

free_mm

mm

return

NULL

mm_struct

mm_alloc

void

mm_struct

mm

mm

allocate_mm

mm

memset

mm

sizeof

mm

mm

mm_init

mm

return

mm

void

fastcall

__mmdrop

mm_struct

mm

BUG_ON

mm

init_mm

mm_free_pgd

mm

destroy_context

mm

free_mm

mm

void

mmput

mm_struct

mm

might_sleep

atomic_dec_and_test

mm

mm_users

exit_aio

mm

exit_mmap

mm

list_empty

mm

mmlist

spin_lock

mmlist_lock

list_del

mm

mmlist

spin_unlock

mmlist_lock

put_swap_token

mm

mmdrop

mm

EXPORT_SYMBOL_GPL

mmput

mm_struct

get_task_mm

task_struct

task

mm_struct

mm

task_lock

task

mm

task

mm

mm

task

flags

PF_BORROWED_MM

mm

NULL

atomic_inc

mm

mm_users

task_unlock

task

return

mm

EXPORT_SYMBOL_GPL

get_task_mm

void

mm_release

task_struct

tsk

mm_struct

mm

completion

vfork_done

tsk

vfork_done

deactivate_mm

tsk

mm

vfork_done

tsk

vfork_done

NULL

complete

vfork_done

tsk

clear_child_tid

tsk

flags

PF_SIGNALED

atomic_read

mm

mm_users

u32

__user

tidptr

tsk

clear_child_tid

tsk

clear_child_tid

NULL

put_user

tidptr

sys_futex

tidptr

FUTEX_WAKE

NULL

NULL

static

mm_struct

dup_mm

task_struct

tsk

mm_struct

mm

oldmm

current

mm

err

oldmm

return

NULL

mm

allocate_mm

mm

goto

fail_nomem

memcpy

mm

oldmm

sizeof

mm

mm

token_priority

mm

last_interval

mm_init

mm

goto

fail_nomem

init_new_context

tsk

mm

goto

fail_nocontext

err

dup_mmap

mm

oldmm

err

goto

free_pt

mm

hiwater_rss

get_mm_rss

mm

mm

hiwater_vm

mm

total_vm

return

mm

free_pt

mmput

mm

fail_nomem

return

NULL

fail_nocontext

mm_free_pgd

mm

free_mm

mm

return

NULL

static

copy_mm

clone_flags

task_struct

tsk

mm_struct

mm

oldmm

retval

tsk

min_flt

tsk

maj_flt

tsk

nvcsw

tsk

nivcsw

tsk

mm

NULL

tsk

active_mm

NULL

oldmm

current

mm

oldmm

return

clone_flags

CLONE_VM

atomic_inc

oldmm

mm_users

mm

oldmm

goto

good_mm

retval

ENOMEM

mm

dup_mm

tsk

mm

goto

fail_nomem

good_mm

mm

token_priority

mm

last_interval

tsk

mm

mm

tsk

active_mm

mm

return

fail_nomem

return

retval

static

inline

fs_struct

__copy_fs_struct

fs_struct

old

fs_struct

fs

kmem_cache_alloc

fs_cachep

GFP_KERNEL

fs

atomic_set

fs

count

rwlock_init

fs

lock

fs

umask

old

umask

read_lock

old

lock

fs

rootmnt

mntget

old

rootmnt

fs

root

dget

old

root

fs

pwdmnt

mntget

old

pwdmnt

fs

pwd

dget

old

pwd

old

altroot

fs

altrootmnt

mntget

old

altrootmnt

fs

altroot

dget

old

altroot

fs

altrootmnt

NULL

fs

altroot

NULL

read_unlock

old

lock

return

fs

fs_struct

copy_fs_struct

fs_struct

old

return

__copy_fs_struct

old

EXPORT_SYMBOL_GPL

copy_fs_struct

static

inline

copy_fs

clone_flags

task_struct

tsk

clone_flags

CLONE_FS

atomic_inc

current

fs

count

return

tsk

fs

__copy_fs_struct

current

fs

tsk

fs

return

ENOMEM

return

static

count_open_files

fdtable

fdt

size

fdt

max_fds

i

i

size

sizeof

i

fdt

open_fds

fds_bits

i

i

i

sizeof

return

i

static

files_struct

alloc_files

void

files_struct

newf

fdtable

fdt

newf

kmem_cache_alloc

files_cachep

GFP_KERNEL

newf

goto

out

atomic_set

newf

count

spin_lock_init

newf

file_lock

newf

next_fd

fdt

newf

fdtab

fdt

max_fds

NR_OPEN_DEFAULT

fdt

close_on_exec

fd_set

newf

close_on_exec_init

fdt

open_fds

fd_set

newf

open_fds_init

fdt

fd

newf

fd_array

INIT_RCU_HEAD

fdt

rcu

fdt

next

NULL

rcu_assign_pointer

newf

fdt

fdt

out

return

newf

static

files_struct

dup_fd

files_struct

oldf

errorp

files_struct

newf

file

old_fds

new_fds

open_files

size

i

fdtable

old_fdt

new_fdt

errorp

ENOMEM

newf

alloc_files

newf

goto

out

spin_lock

oldf

file_lock

old_fdt

files_fdtable

oldf

new_fdt

files_fdtable

newf

open_files

count_open_files

old_fdt

open_files

new_fdt

max_fds

new_fdt

max_fds

spin_unlock

oldf

file_lock

spin_lock

newf

file_lock

errorp

expand_files

newf

open_files

spin_unlock

newf

file_lock

errorp

goto

out_release

new_fdt

files_fdtable

newf

spin_lock

oldf

file_lock

old_fdt

files_fdtable

oldf

old_fds

old_fdt

fd

new_fds

new_fdt

fd

memcpy

new_fdt

open_fds

fds_bits

old_fdt

open_fds

fds_bits

open_files

memcpy

new_fdt

close_on_exec

fds_bits

old_fdt

close_on_exec

fds_bits

open_files

i

open_files

i

i

file

f

old_fds

f

get_file

f

FD_CLR

open_files

i

new_fdt

open_fds

rcu_assign_pointer

new_fds

f

spin_unlock

oldf

file_lock

size

new_fdt

max_fds

open_files

sizeof

file

memset

new_fds

size

new_fdt

max_fds

open_files

left

new_fdt

max_fds

open_files

start

open_files

sizeof

memset

new_fdt

open_fds

fds_bits

start

left

memset

new_fdt

close_on_exec

fds_bits

start

left

return

newf

out_release

kmem_cache_free

files_cachep

newf

out

return

NULL

static

copy_files

clone_flags

task_struct

tsk

files_struct

oldf

newf

error

oldf

current

files

oldf

goto

out

clone_flags

CLONE_FILES

atomic_inc

oldf

count

goto

out

tsk

files

NULL

newf

dup_fd

oldf

error

newf

goto

out

tsk

files

newf

error

out

return

error

unshare_files

void

files_struct

files

current

files

rc

BUG_ON

files

atomic_read

files

count

atomic_inc

files

count

return

rc

copy_files

current

rc

current

files

files

return

rc

EXPORT_SYMBOL

unshare_files

static

inline

copy_sighand

clone_flags

task_struct

tsk

sighand_struct

sig

clone_flags

CLONE_SIGHAND

CLONE_THREAD

atomic_inc

current

sighand

count

return

sig

kmem_cache_alloc

sighand_cachep

GFP_KERNEL

rcu_assign_pointer

tsk

sighand

sig

sig

return

ENOMEM

atomic_set

sig

count

memcpy

sig

action

current

sighand

action

sizeof

sig

action

return

void

__cleanup_sighand

sighand_struct

sighand

atomic_dec_and_test

sighand

count

kmem_cache_free

sighand_cachep

sighand

static

inline

copy_signal

clone_flags

task_struct

tsk

signal_struct

sig

ret

clone_flags

CLONE_THREAD

atomic_inc

current

signal

count

atomic_inc

current

signal

live

return

sig

kmem_cache_alloc

signal_cachep

GFP_KERNEL

tsk

signal

sig

sig

return

ENOMEM

ret

copy_thread_group_keys

tsk

ret

kmem_cache_free

signal_cachep

sig

return

ret

atomic_set

sig

count

atomic_set

sig

live

init_waitqueue_head

sig

wait_chldexit

sig

flags

sig

group_exit_code

sig

group_exit_task

NULL

sig

group_stop_count

sig

curr_target

NULL

init_sigpending

sig

shared_pending

INIT_LIST_HEAD

sig

posix_timers

hrtimer_init

sig

real_timer

CLOCK_MONOTONIC

HRTIMER_MODE_REL

sig

it_real_incr

tv64

sig

real_timer

function

it_real_fn

sig

tsk

tsk

sig

it_virt_expires

cputime_zero

sig

it_virt_incr

cputime_zero

sig

it_prof_expires

cputime_zero

sig

it_prof_incr

cputime_zero

sig

leader

sig

tty_old_pgrp

NULL

sig

utime

sig

stime

sig

cutime

sig

cstime

cputime_zero

sig

nvcsw

sig

nivcsw

sig

cnvcsw

sig

cnivcsw

sig

min_flt

sig

maj_flt

sig

cmin_flt

sig

cmaj_flt

sig

inblock

sig

oublock

sig

cinblock

sig

coublock

sig

sched_time

INIT_LIST_HEAD

sig

cpu_timers

INIT_LIST_HEAD

sig

cpu_timers

INIT_LIST_HEAD

sig

cpu_timers

taskstats_tgid_init

sig

task_lock

current

group_leader

memcpy

sig

rlim

current

signal

rlim

sizeof

sig

rlim

task_unlock

current

group_leader

sig

rlim

RLIMIT_CPU

rlim_cur

RLIM_INFINITY

tsk

it_prof_expires

secs_to_cputime

sig

rlim

RLIMIT_CPU

rlim_cur

acct_init_pacct

sig

pacct

return

void

__cleanup_signal

signal_struct

sig

exit_thread_group_keys

sig

kmem_cache_free

signal_cachep

sig

static

inline

void

cleanup_signal

task_struct

tsk

signal_struct

sig

tsk

signal

atomic_dec

sig

live

atomic_dec_and_test

sig

count

__cleanup_signal

sig

static

inline

void

copy_flags

clone_flags

task_struct

p

new_flags

p

flags

new_flags

PF_SUPERPRIV

PF_NOFREEZE

new_flags

PF_FORKNOEXEC

clone_flags

CLONE_PTRACE

p

ptrace

p

flags

new_flags

asmlinkage

sys_set_tid_address

__user

tidptr

current

clear_child_tid

tidptr

return

current

pid

static

inline

void

rt_mutex_init_task

task_struct

p

spin_lock_init

p

pi_lock

CONFIG_RT_MUTEXES

plist_head_init

p

pi_waiters

p

pi_lock

p

pi_blocked_on

NULL

static

task_struct

copy_process

clone_flags

stack_start

pt_regs

regs

stack_size

__user

parent_tidptr

__user

child_tidptr

pid

pid

retval

task_struct

p

NULL

clone_flags

CLONE_NEWNS

CLONE_FS

CLONE_NEWNS

CLONE_FS

return

ERR_PTR

EINVAL

clone_flags

CLONE_THREAD

clone_flags

CLONE_SIGHAND

return

ERR_PTR

EINVAL

clone_flags

CLONE_SIGHAND

clone_flags

CLONE_VM

return

ERR_PTR

EINVAL

retval

security_task_create

clone_flags

retval

goto

fork_out

retval

ENOMEM

p

dup_task_struct

current

p

goto

fork_out

rt_mutex_init_task

p

CONFIG_TRACE_IRQFLAGS

DEBUG_LOCKS_WARN_ON

p

hardirqs_enabled

DEBUG_LOCKS_WARN_ON

p

softirqs_enabled

retval

EAGAIN

atomic_read

p

user

processes

p

signal

rlim

RLIMIT_NPROC

rlim_cur

capable

CAP_SYS_ADMIN

capable

CAP_SYS_RESOURCE

p

user

root_user

goto

bad_fork_free

atomic_inc

p

user

__count

atomic_inc

p

user

processes

get_group_info

p

group_info

nr_threads

max_threads

goto

bad_fork_cleanup_count

try_module_get

task_thread_info

p

exec_domain

module

goto

bad_fork_cleanup_count

p

binfmt

try_module_get

p

binfmt

module

goto

bad_fork_cleanup_put_domain

p

did_exec

delayacct_tsk_init

p

copy_flags

clone_flags

p

p

pid

pid_nr

pid

retval

EFAULT

clone_flags

CLONE_PARENT_SETTID

put_user

p

pid

parent_tidptr

goto

bad_fork_cleanup_delays_binfmt

INIT_LIST_HEAD

p

children

INIT_LIST_HEAD

p

sibling

p

vfork_done

NULL

spin_lock_init

p

alloc_lock

clear_tsk_thread_flag

p

TIF_SIGPENDING

init_sigpending

p

pending

p

utime

cputime_zero

p

stime

cputime_zero

p

sched_time

CONFIG_TASK_XACCT

p

rchar

p

wchar

p

syscr

p

syscw

task_io_accounting_init

p

acct_clear_integrals

p

p

it_virt_expires

cputime_zero

p

it_prof_expires

cputime_zero

p

it_sched_expires

INIT_LIST_HEAD

p

cpu_timers

INIT_LIST_HEAD

p

cpu_timers

INIT_LIST_HEAD

p

cpu_timers

p

lock_depth

do_posix_clock_monotonic_gettime

p

start_time

p

security

NULL

p

io_context

NULL

p

io_wait

NULL

p

audit_context

NULL

cpuset_fork

p

CONFIG_NUMA

p

mempolicy

mpol_copy

p

mempolicy

IS_ERR

p

mempolicy

retval

PTR_ERR

p

mempolicy

p

mempolicy

NULL

goto

bad_fork_cleanup_cpuset

mpol_fix_fork_child_flag

p

CONFIG_TRACE_IRQFLAGS

p

irq_events

__ARCH_WANT_INTERRUPTS_ON_CTXSW

p

hardirqs_enabled

p

hardirqs_enabled

p

hardirq_enable_ip

p

hardirq_enable_event

p

hardirq_disable_ip

_THIS_IP_

p

hardirq_disable_event

p

softirqs_enabled

p

softirq_enable_ip

_THIS_IP_

p

softirq_enable_event

p

softirq_disable_ip

p

softirq_disable_event

p

hardirq_context

p

softirq_context

CONFIG_LOCKDEP

p

lockdep_depth

p

curr_chain_key

p

lockdep_recursion

CONFIG_DEBUG_MUTEXES

p

blocked_on

NULL

p

tgid

p

pid

clone_flags

CLONE_THREAD

p

tgid

current

tgid

retval

security_task_alloc

p

goto

bad_fork_cleanup_policy

retval

audit_alloc

p

goto

bad_fork_cleanup_security

retval

copy_semundo

clone_flags

p

goto

bad_fork_cleanup_audit

retval

copy_files

clone_flags

p

goto

bad_fork_cleanup_semundo

retval

copy_fs

clone_flags

p

goto

bad_fork_cleanup_files

retval

copy_sighand

clone_flags

p

goto

bad_fork_cleanup_fs

retval

copy_signal

clone_flags

p

goto

bad_fork_cleanup_sighand

retval

copy_mm

clone_flags

p

goto

bad_fork_cleanup_signal

retval

copy_keys

clone_flags

p

goto

bad_fork_cleanup_mm

retval

copy_namespaces

clone_flags

p

goto

bad_fork_cleanup_keys

retval

copy_thread

clone_flags

stack_start

stack_size

p

regs

retval

goto

bad_fork_cleanup_namespaces

p

set_child_tid

clone_flags

CLONE_CHILD_SETTID

child_tidptr

NULL

p

clear_child_tid

clone_flags

CLONE_CHILD_CLEARTID

child_tidptr

NULL

p

robust_list

NULL

CONFIG_COMPAT

p

compat_robust_list

NULL

INIT_LIST_HEAD

p

pi_state_list

p

pi_state_cache

NULL

clone_flags

CLONE_VM

CLONE_VFORK

CLONE_VM

p

sas_ss_sp

p

sas_ss_size

clear_tsk_thread_flag

p

TIF_SYSCALL_TRACE

TIF_SYSCALL_EMU

clear_tsk_thread_flag

p

TIF_SYSCALL_EMU

p

parent_exec_id

p

self_exec_id

p

exit_signal

clone_flags

CLONE_THREAD

clone_flags

CSIGNAL

p

pdeath_signal

p

exit_state

p

group_leader

p

INIT_LIST_HEAD

p

thread_group

INIT_LIST_HEAD

p

ptrace_children

INIT_LIST_HEAD

p

ptrace_list

sched_fork

p

clone_flags

write_lock_irq

tasklist_lock

p

ioprio

current

ioprio

p

cpus_allowed

current

cpus_allowed

unlikely

cpu_isset

task_cpu

p

p

cpus_allowed

cpu_online

task_cpu

p

set_task_cpu

p

smp_processor_id

clone_flags

CLONE_PARENT

CLONE_THREAD

p

real_parent

current

real_parent

p

real_parent

current

p

parent

p

real_parent

spin_lock

current

sighand

siglock

recalc_sigpending

signal_pending

current

spin_unlock

current

sighand

siglock

write_unlock_irq

tasklist_lock

retval

ERESTARTNOINTR

goto

bad_fork_cleanup_namespaces

clone_flags

CLONE_THREAD

p

group_leader

current

group_leader

list_add_tail_rcu

p

thread_group

p

group_leader

thread_group

cputime_eq

current

signal

it_virt_expires

cputime_zero

cputime_eq

current

signal

it_prof_expires

cputime_zero

current

signal

rlim

RLIMIT_CPU

rlim_cur

RLIM_INFINITY

list_empty

current

signal

cpu_timers

list_empty

current

signal

cpu_timers

list_empty

current

signal

cpu_timers

p

it_prof_expires

jiffies_to_cputime

likely

p

pid

add_parent

p

unlikely

p

ptrace

PT_PTRACED

__ptrace_link

p

current

parent

thread_group_leader

p

p

signal

tty

current

signal

tty

p

signal

pgrp

process_group

current

set_signal_session

p

signal

process_session

current

attach_pid

p

PIDTYPE_PGID

task_pgrp

current

attach_pid

p

PIDTYPE_SID

task_session

current

list_add_tail_rcu

p

tasks

init_task

tasks

__get_cpu_var

process_counts

attach_pid

p

PIDTYPE_PID

pid

nr_threads

total_forks

spin_unlock

current

sighand

siglock

write_unlock_irq

tasklist_lock

proc_fork_connector

p

return

p

bad_fork_cleanup_namespaces

exit_task_namespaces

p

bad_fork_cleanup_keys

exit_keys

p

bad_fork_cleanup_mm

p

mm

mmput

p

mm

bad_fork_cleanup_signal

cleanup_signal

p

bad_fork_cleanup_sighand

__cleanup_sighand

p

sighand

bad_fork_cleanup_fs

exit_fs

p

bad_fork_cleanup_files

exit_files

p

bad_fork_cleanup_semundo

exit_sem

p

bad_fork_cleanup_audit

audit_free

p

bad_fork_cleanup_security

security_task_free

p

bad_fork_cleanup_policy

CONFIG_NUMA

mpol_free

p

mempolicy

bad_fork_cleanup_cpuset

cpuset_exit

p

bad_fork_cleanup_delays_binfmt

delayacct_tsk_free

p

p

binfmt

module_put

p

binfmt

module

bad_fork_cleanup_put_domain

module_put

task_thread_info

p

exec_domain

module

bad_fork_cleanup_count

put_group_info

p

group_info

atomic_dec

p

user

processes

free_uid

p

user

bad_fork_free

free_task

p

fork_out

return

ERR_PTR

retval

noinline

pt_regs

__devinit

__attribute__

weak

idle_regs

pt_regs

regs

memset

regs

sizeof

pt_regs

return

regs

task_struct

__cpuinit

fork_idle

cpu

task_struct

task

pt_regs

regs

task

copy_process

CLONE_VM

idle_regs

regs

NULL

NULL

init_struct_pid

IS_ERR

task

init_idle

task

cpu

return

task

static

inline

fork_traceflag

clone_flags

clone_flags

CLONE_UNTRACED

return

clone_flags

CLONE_VFORK

current

ptrace

PT_TRACE_VFORK

return

PTRACE_EVENT_VFORK

clone_flags

CSIGNAL

SIGCHLD

current

ptrace

PT_TRACE_CLONE

return

PTRACE_EVENT_CLONE

current

ptrace

PT_TRACE_FORK

return

PTRACE_EVENT_FORK

return

do_fork

clone_flags

stack_start

pt_regs

regs

stack_size

__user

parent_tidptr

__user

child_tidptr

task_struct

p

trace

pid

pid

alloc_pid

nr

pid

return

EAGAIN

nr

pid

nr

unlikely

current

ptrace

trace

fork_traceflag

clone_flags

trace

clone_flags

CLONE_PTRACE

p

copy_process

clone_flags

stack_start

regs

stack_size

parent_tidptr

child_tidptr

pid

IS_ERR

p

completion

vfork

clone_flags

CLONE_VFORK

p

vfork_done

vfork

init_completion

vfork

p

ptrace

PT_PTRACED

clone_flags

CLONE_STOPPED

sigaddset

p

pending

signal

SIGSTOP

set_tsk_thread_flag

p

TIF_SIGPENDING

clone_flags

CLONE_STOPPED

wake_up_new_task

p

clone_flags

p

state

TASK_STOPPED

unlikely

trace

current

ptrace_message

nr

ptrace_notify

trace

SIGTRAP

clone_flags

CLONE_VFORK

freezer_do_not_count

wait_for_completion

vfork

freezer_count

unlikely

current

ptrace

PT_TRACE_VFORK_DONE

current

ptrace_message

nr

ptrace_notify

PTRACE_EVENT_VFORK_DONE

SIGTRAP

free_pid

pid

nr

PTR_ERR

p

return

nr

ARCH_MIN_MMSTRUCT_ALIGN

ARCH_MIN_MMSTRUCT_ALIGN

static

void

sighand_ctor

void

data

kmem_cache

cachep

flags

sighand_struct

sighand

data

spin_lock_init

sighand

siglock

INIT_LIST_HEAD

sighand

signalfd_list

void

__init

proc_caches_init

void

sighand_cachep

kmem_cache_create

sizeof

sighand_struct

SLAB_HWCACHE_ALIGN

SLAB_PANIC

SLAB_DESTROY_BY_RCU

sighand_ctor

NULL

signal_cachep

kmem_cache_create

sizeof

signal_struct

SLAB_HWCACHE_ALIGN

SLAB_PANIC

NULL

NULL

files_cachep

kmem_cache_create

sizeof

files_struct

SLAB_HWCACHE_ALIGN

SLAB_PANIC

NULL

NULL

fs_cachep

kmem_cache_create

sizeof

fs_struct

SLAB_HWCACHE_ALIGN

SLAB_PANIC

NULL

NULL

vm_area_cachep

kmem_cache_create

sizeof

vm_area_struct

SLAB_PANIC

NULL

NULL

mm_cachep

kmem_cache_create

sizeof

mm_struct

ARCH_MIN_MMSTRUCT_ALIGN

SLAB_HWCACHE_ALIGN

SLAB_PANIC

NULL

NULL

static

inline

void

check_unshare_flags

flags_ptr

flags_ptr

CLONE_THREAD

flags_ptr

CLONE_VM

flags_ptr

CLONE_VM

flags_ptr

CLONE_SIGHAND

flags_ptr

CLONE_SIGHAND

atomic_read

current

signal

count

flags_ptr

CLONE_THREAD

flags_ptr

CLONE_NEWNS

flags_ptr

CLONE_FS

static

unshare_thread

unshare_flags

unshare_flags

CLONE_THREAD

return

EINVAL

return

static

unshare_fs

unshare_flags

fs_struct

new_fsp

fs_struct

fs

current

fs

unshare_flags

CLONE_FS

fs

atomic_read

fs

count

new_fsp

__copy_fs_struct

current

fs

new_fsp

return

ENOMEM

return

static

unshare_sighand

unshare_flags

sighand_struct

new_sighp

sighand_struct

sigh

current

sighand

unshare_flags

CLONE_SIGHAND

atomic_read

sigh

count

return

EINVAL

return

static

unshare_vm

unshare_flags

mm_struct

new_mmp

mm_struct

mm

current

mm

unshare_flags

CLONE_VM

mm

atomic_read

mm

mm_users

return

EINVAL

return

static

unshare_fd

unshare_flags

files_struct

new_fdp

files_struct

fd

current

files

error

unshare_flags

CLONE_FILES

fd

atomic_read

fd

count

new_fdp

dup_fd

fd

error

new_fdp

return

error

return

static

unshare_semundo

unshare_flags

sem_undo_list

new_ulistp

unshare_flags

CLONE_SYSVSEM

return

EINVAL

return

asmlinkage

sys_unshare

unshare_flags

err

fs_struct

fs

new_fs

NULL

sighand_struct

new_sigh

NULL

mm_struct

mm

new_mm

NULL

active_mm

NULL

files_struct

fd

new_fd

NULL

sem_undo_list

new_ulist

NULL

nsproxy

new_nsproxy

NULL

old_nsproxy

NULL

check_unshare_flags

unshare_flags

err

EINVAL

unshare_flags

CLONE_THREAD

CLONE_FS

CLONE_NEWNS

CLONE_SIGHAND

CLONE_VM

CLONE_FILES

CLONE_SYSVSEM

CLONE_NEWUTS

CLONE_NEWIPC

goto

bad_unshare_out

err

unshare_thread

unshare_flags

goto

bad_unshare_out

err

unshare_fs

unshare_flags

new_fs

goto

bad_unshare_cleanup_thread

err

unshare_sighand

unshare_flags

new_sigh

goto

bad_unshare_cleanup_fs

err

unshare_vm

unshare_flags

new_mm

goto

bad_unshare_cleanup_sigh

err

unshare_fd

unshare_flags

new_fd

goto

bad_unshare_cleanup_vm

err

unshare_semundo

unshare_flags

new_ulist

goto

bad_unshare_cleanup_fd

err

unshare_nsproxy_namespaces

unshare_flags

new_nsproxy

new_fs

goto

bad_unshare_cleanup_semundo

new_fs

new_mm

new_fd

new_ulist

new_nsproxy

task_lock

current

new_nsproxy

old_nsproxy

current

nsproxy

current

nsproxy

new_nsproxy

new_nsproxy

old_nsproxy

new_fs

fs

current

fs

current

fs

new_fs

new_fs

fs

new_mm

mm

current

mm

active_mm

current

active_mm

current

mm

new_mm

current

active_mm

new_mm

activate_mm

active_mm

new_mm

new_mm

mm

new_fd

fd

current

files

current

files

new_fd

new_fd

fd

task_unlock

current

new_nsproxy

put_nsproxy

new_nsproxy

bad_unshare_cleanup_semundo

bad_unshare_cleanup_fd

new_fd

put_files_struct

new_fd

bad_unshare_cleanup_vm

new_mm

mmput

new_mm

bad_unshare_cleanup_sigh

new_sigh

atomic_dec_and_test

new_sigh

count

kmem_cache_free

sighand_cachep

new_sigh

bad_unshare_cleanup_fs

new_fs

put_fs_struct

new_fs

bad_unshare_cleanup_thread

bad_unshare_out

return

err

FUTEX_HASHBITS

CONFIG_BASE_SMALL

futex_pi_state

list_head

list

rt_mutex

pi_mutex

task_struct

owner

atomic_t

refcount

union

futex_key

key

futex_q

plist_node

list

wait_queue_head_t

waiters

spinlock_t

lock_ptr

union

futex_key

key

fd

file

filp

futex_pi_state

pi_state

task_struct

task

futex_hash_bucket

spinlock_t

lock

plist_head

chain

static

futex_hash_bucket

futex_queues

FUTEX_HASHBITS

static

vfsmount

futex_mnt

static

futex_hash_bucket

hash_futex

union

futex_key

key

u32

hash

jhash2

u32

key

both

word

sizeof

key

both

word

sizeof

key

both

ptr

key

both

offset

return

futex_queues

hash

FUTEX_HASHBITS

static

inline

match_futex

union

futex_key

key1

union

futex_key

key2

return

key1

both

word

key2

both

word

key1

both

ptr

key2

both

ptr

key1

both

offset

key2

both

offset

get_futex_key

u32

__user

uaddr

rw_semaphore

fshared

union

futex_key

key

address

uaddr

mm_struct

mm

current

mm

vm_area_struct

vma

page

page

err

key

both

offset

address

PAGE_SIZE

unlikely

address

sizeof

u32

return

EINVAL

address

key

both

offset

fshared

unlikely

access_ok

VERIFY_WRITE

uaddr

sizeof

u32

return

EFAULT

key

private

mm

mm

key

private

address

address

return

vma

find_extend_vma

mm

address

unlikely

vma

return

EFAULT

unlikely

vma

vm_flags

VM_IO

VM_READ

VM_READ

return

vma

vm_flags

VM_IO

EPERM

EACCES

likely

vma

vm_flags

VM_MAYSHARE

key

both

offset

FUT_OFF_MMSHARED

key

private

mm

mm

key

private

address

address

return

key

shared

inode

vma

vm_file

f_path

dentry

d_inode

key

both

offset

FUT_OFF_INODE

likely

vma

vm_flags

VM_NONLINEAR

key

shared

pgoff

address

vma

vm_start

PAGE_SHIFT

vma

vm_pgoff

return

err

get_user_pages

current

mm

address

page

NULL

err

key

shared

pgoff

page

index

PAGE_CACHE_SHIFT

PAGE_SHIFT

put_page

page

return

return

err

EXPORT_SYMBOL_GPL

get_futex_key

inline

void

get_futex_key_refs

union

futex_key

key

key

both

ptr

return

key

both

offset

FUT_OFF_INODE

FUT_OFF_MMSHARED

case

FUT_OFF_INODE

atomic_inc

key

shared

inode

i_count

case

FUT_OFF_MMSHARED

atomic_inc

key

private

mm

mm_count

EXPORT_SYMBOL_GPL

get_futex_key_refs

void

drop_futex_key_refs

union

futex_key

key

key

both

ptr

return

key

both

offset

FUT_OFF_INODE

FUT_OFF_MMSHARED

case

FUT_OFF_INODE

iput

key

shared

inode

case

FUT_OFF_MMSHARED

mmdrop

key

private

mm

EXPORT_SYMBOL_GPL

drop_futex_key_refs

static

inline

get_futex_value_locked

u32

dest

u32

__user

from

ret

pagefault_disable

ret

__copy_from_user_inatomic

dest

from

sizeof

u32

pagefault_enable

return

ret

EFAULT

static

futex_handle_fault

address

rw_semaphore

fshared

attempt

vm_area_struct

vma

mm_struct

mm

current

mm

ret

EFAULT

attempt

return

ret

fshared

down_read

mm

mmap_sem

vma

find_vma

mm

address

vma

address

vma

vm_start

vma

vm_flags

VM_WRITE

handle_mm_fault

mm

vma

address

case

VM_FAULT_MINOR

ret

current

min_flt

case

VM_FAULT_MAJOR

ret

current

maj_flt

fshared

up_read

mm

mmap_sem

return

ret

static

refill_pi_state_cache

void

futex_pi_state

pi_state

likely

current

pi_state_cache

return

pi_state

kzalloc

sizeof

pi_state

GFP_KERNEL

pi_state

return

ENOMEM

INIT_LIST_HEAD

pi_state

list

pi_state

owner

NULL

atomic_set

pi_state

refcount

current

pi_state_cache

pi_state

return

static

futex_pi_state

alloc_pi_state

void

futex_pi_state

pi_state

current

pi_state_cache

WARN_ON

pi_state

current

pi_state_cache

NULL

return

pi_state

static

void

free_pi_state

futex_pi_state

pi_state

atomic_dec_and_test

pi_state

refcount

return

pi_state

owner

spin_lock_irq

pi_state

owner

pi_lock

list_del_init

pi_state

list

spin_unlock_irq

pi_state

owner

pi_lock

rt_mutex_proxy_unlock

pi_state

pi_mutex

pi_state

owner

current

pi_state_cache

kfree

pi_state

pi_state

owner

NULL

atomic_set

pi_state

refcount

current

pi_state_cache

pi_state

static

task_struct

futex_find_get_task

pid_t

pid

task_struct

p

rcu_read_lock

p

find_task_by_pid

pid

p

current

euid

p

euid

current

euid

p

uid

p

ERR_PTR

ESRCH

get_task_struct

p

rcu_read_unlock

return

p

void

exit_pi_state_list

task_struct

curr

list_head

next

head

curr

pi_state_list

futex_pi_state

pi_state

futex_hash_bucket

hb

union

futex_key

key

spin_lock_irq

curr

pi_lock

list_empty

head

next

head

next

pi_state

list_entry

next

futex_pi_state

list

key

pi_state

key

hb

hash_futex

key

spin_unlock_irq

curr

pi_lock

spin_lock

hb

lock

spin_lock_irq

curr

pi_lock

head

next

next

spin_unlock

hb

lock

WARN_ON

pi_state

owner

curr

WARN_ON

list_empty

pi_state

list

list_del_init

pi_state

list

pi_state

owner

NULL

spin_unlock_irq

curr

pi_lock

rt_mutex_unlock

pi_state

pi_mutex

spin_unlock

hb

lock

spin_lock_irq

curr

pi_lock

spin_unlock_irq

curr

pi_lock

static

lookup_pi_state

u32

uval

futex_hash_bucket

hb

union

futex_key

key

futex_pi_state

ps

futex_pi_state

pi_state

NULL

futex_q

this

next

plist_head

head

task_struct

p

pid_t

pid

uval

FUTEX_TID_MASK

head

hb

chain

plist_for_each_entry_safe

this

next

head

list

match_futex

this

key

key

pi_state

this

pi_state

unlikely

pi_state

return

EINVAL

WARN_ON

atomic_read

pi_state

refcount

WARN_ON

pid

pi_state

owner

pi_state

owner

pid

pid

atomic_inc

pi_state

refcount

ps

pi_state

return

pid

return

ESRCH

p

futex_find_get_task

pid

IS_ERR

p

return

PTR_ERR

p

spin_lock_irq

p

pi_lock

unlikely

p

flags

PF_EXITING

ret

p

flags

PF_EXITPIDONE

ESRCH

EAGAIN

spin_unlock_irq

p

pi_lock

put_task_struct

p

return

ret

pi_state

alloc_pi_state

rt_mutex_init_proxy_locked

pi_state

pi_mutex

p

pi_state

key

key

WARN_ON

list_empty

pi_state

list

list_add

pi_state

list

p

pi_state_list

pi_state

owner

p

spin_unlock_irq

p

pi_lock

put_task_struct

p

ps

pi_state

return

static

void

wake_futex

futex_q

q

plist_del

q

list

q

list

plist

q

filp

send_sigio

q

filp

f_owner

q

fd

POLL_IN

wake_up_all

q

waiters

smp_wmb

q

lock_ptr

NULL

static

wake_futex_pi

u32

__user

uaddr

u32

uval

futex_q

this

task_struct

new_owner

futex_pi_state

pi_state

this

pi_state

u32

curval

newval

pi_state

return

EINVAL

spin_lock

pi_state

pi_mutex

wait_lock

new_owner

rt_mutex_next_owner

pi_state

pi_mutex

new_owner

new_owner

this

task

uval

FUTEX_OWNER_DIED

ret

newval

FUTEX_WAITERS

new_owner

pid

pagefault_disable

curval

futex_atomic_cmpxchg_inatomic

uaddr

uval

newval

pagefault_enable

curval

EFAULT

ret

EFAULT

curval

uval

ret

EINVAL

ret

spin_unlock

pi_state

pi_mutex

wait_lock

return

ret

spin_lock_irq

pi_state

owner

pi_lock

WARN_ON

list_empty

pi_state

list

list_del_init

pi_state

list

spin_unlock_irq

pi_state

owner

pi_lock

spin_lock_irq

new_owner

pi_lock

WARN_ON

list_empty

pi_state

list

list_add

pi_state

list

new_owner

pi_state_list

pi_state

owner

new_owner

spin_unlock_irq

new_owner

pi_lock

spin_unlock

pi_state

pi_mutex

wait_lock

rt_mutex_unlock

pi_state

pi_mutex

return

static

unlock_futex_pi

u32

__user

uaddr

u32

uval

u32

oldval

pagefault_disable

oldval

futex_atomic_cmpxchg_inatomic

uaddr

uval

pagefault_enable

oldval

EFAULT

return

oldval

oldval

uval

return

EAGAIN

return

static

inline

void

double_lock_hb

futex_hash_bucket

hb1

futex_hash_bucket

hb2

hb1

hb2

spin_lock

hb1

lock

hb1

hb2

spin_lock_nested

hb2

lock

SINGLE_DEPTH_NESTING

spin_lock

hb2

lock

spin_lock_nested

hb1

lock

SINGLE_DEPTH_NESTING

static

futex_wake

u32

__user

uaddr

rw_semaphore

fshared

nr_wake

futex_hash_bucket

hb

futex_q

this

next

plist_head

head

union

futex_key

key

ret

fshared

down_read

fshared

ret

get_futex_key

uaddr

fshared

key

unlikely

ret

goto

out

hb

hash_futex

key

spin_lock

hb

lock

head

hb

chain

plist_for_each_entry_safe

this

next

head

list

match_futex

this

key

key

this

pi_state

ret

EINVAL

wake_futex

this

ret

nr_wake

spin_unlock

hb

lock

out

fshared

up_read

fshared

return

ret

static

futex_wake_op

u32

__user

uaddr1

rw_semaphore

fshared

u32

__user

uaddr2

nr_wake

nr_wake2

op

union

futex_key

key1

key2

futex_hash_bucket

hb1

hb2

plist_head

head

futex_q

this

next

ret

op_ret

attempt

retryfull

fshared

down_read

fshared

ret

get_futex_key

uaddr1

fshared

key1

unlikely

ret

goto

out

ret

get_futex_key

uaddr2

fshared

key2

unlikely

ret

goto

out

hb1

hash_futex

key1

hb2

hash_futex

key2

retry

double_lock_hb

hb1

hb2

op_ret

futex_atomic_op_inuser

op

uaddr2

unlikely

op_ret

u32

dummy

spin_unlock

hb1

lock

hb1

hb2

spin_unlock

hb2

lock

CONFIG_MMU

ret

op_ret

goto

out

unlikely

op_ret

EFAULT

ret

op_ret

goto

out

attempt

ret

futex_handle_fault

uaddr2

fshared

attempt

ret

goto

out

goto

retry

fshared

up_read

fshared

ret

get_user

dummy

uaddr2

ret

return

ret

goto

retryfull

head

hb1

chain

plist_for_each_entry_safe

this

next

head

list

match_futex

this

key

key1

wake_futex

this

ret

nr_wake

op_ret

head

hb2

chain

op_ret

plist_for_each_entry_safe

this

next

head

list

match_futex

this

key

key2

wake_futex

this

op_ret

nr_wake2

ret

op_ret

spin_unlock

hb1

lock

hb1

hb2

spin_unlock

hb2

lock

out

fshared

up_read

fshared

return

ret

static

futex_requeue

u32

__user

uaddr1

rw_semaphore

fshared

u32

__user

uaddr2

nr_wake

nr_requeue

u32

cmpval

union

futex_key

key1

key2

futex_hash_bucket

hb1

hb2

plist_head

head1

futex_q

this

next

ret

drop_count

retry

fshared

down_read

fshared

ret

get_futex_key

uaddr1

fshared

key1

unlikely

ret

goto

out

ret

get_futex_key

uaddr2

fshared

key2

unlikely

ret

goto

out

hb1

hash_futex

key1

hb2

hash_futex

key2

double_lock_hb

hb1

hb2

likely

cmpval

NULL

u32

curval

ret

get_futex_value_locked

curval

uaddr1

unlikely

ret

spin_unlock

hb1

lock

hb1

hb2

spin_unlock

hb2

lock

fshared

up_read

fshared

ret

get_user

curval

uaddr1

ret

goto

retry

return

ret

curval

cmpval

ret

EAGAIN

goto

out_unlock

head1

hb1

chain

plist_for_each_entry_safe

this

next

head1

list

match_futex

this

key

key1

ret

nr_wake

wake_futex

this

likely

head1

hb2

chain

plist_del

this

list

hb1

chain

plist_add

this

list

hb2

chain

this

lock_ptr

hb2

lock

CONFIG_DEBUG_PI_LIST

this

list

plist

lock

hb2

lock

this

key

key2

get_futex_key_refs

key2

drop_count

ret

nr_wake

nr_requeue

out_unlock

spin_unlock

hb1

lock

hb1

hb2

spin_unlock

hb2

lock

drop_count

drop_futex_key_refs

key1

out

fshared

up_read

fshared

return

ret

static

inline

futex_hash_bucket

queue_lock

futex_q

q

fd

file

filp

futex_hash_bucket

hb

q

fd

fd

q

filp

filp

init_waitqueue_head

q

waiters

get_futex_key_refs

q

key

hb

hash_futex

q

key

q

lock_ptr

hb

lock

spin_lock

hb

lock

return

hb

static

inline

void

__queue_me

futex_q

q

futex_hash_bucket

hb

prio

prio

min

current

normal_prio

MAX_RT_PRIO

plist_node_init

q

list

prio

CONFIG_DEBUG_PI_LIST

q

list

plist

lock

hb

lock

plist_add

q

list

hb

chain

q

task

current

spin_unlock

hb

lock

static

inline

void

queue_unlock

futex_q

q

futex_hash_bucket

hb

spin_unlock

hb

lock

drop_futex_key_refs

q

key

static

void

queue_me

futex_q

q

fd

file

filp

futex_hash_bucket

hb

hb

queue_lock

q

fd

filp

__queue_me

q

hb

static

unqueue_me

futex_q

q

spinlock_t

lock_ptr

ret

retry

lock_ptr

q

lock_ptr

barrier

lock_ptr

spin_lock

lock_ptr

unlikely

lock_ptr

q

lock_ptr

spin_unlock

lock_ptr

goto

retry

WARN_ON

plist_node_empty

q

list

plist_del

q

list

q

list

plist

BUG_ON

q

pi_state

spin_unlock

lock_ptr

ret

drop_futex_key_refs

q

key

return

ret

static

void

unqueue_me_pi

futex_q

q

WARN_ON

plist_node_empty

q

list

plist_del

q

list

q

list

plist

BUG_ON

q

pi_state

free_pi_state

q

pi_state

q

pi_state

NULL

spin_unlock

q

lock_ptr

drop_futex_key_refs

q

key

static

fixup_pi_state_owner

u32

__user

uaddr

futex_q

q

task_struct

curr

u32

newtid

curr

pid

FUTEX_WAITERS

futex_pi_state

pi_state

q

pi_state

u32

uval

curval

newval

ret

pi_state

owner

NULL

spin_lock_irq

pi_state

owner

pi_lock

WARN_ON

list_empty

pi_state

list

list_del_init

pi_state

list

spin_unlock_irq

pi_state

owner

pi_lock

newtid

FUTEX_OWNER_DIED

pi_state

owner

curr

spin_lock_irq

curr

pi_lock

WARN_ON

list_empty

pi_state

list

list_add

pi_state

list

curr

pi_state_list

spin_unlock_irq

curr

pi_lock

ret

get_futex_value_locked

uval

uaddr

ret

newval

uval

FUTEX_OWNER_DIED

newtid

pagefault_disable

curval

futex_atomic_cmpxchg_inatomic

uaddr

uval

newval

pagefault_enable

curval

EFAULT

ret

EFAULT

curval

uval

uval

curval

return

ret

FLAGS_SHARED

static

futex_wait_restart

restart_block

restart

static

futex_wait

u32

__user

uaddr

rw_semaphore

fshared

u32

val

ktime_t

abs_time

task_struct

curr

current

DECLARE_WAITQUEUE

wait

curr

futex_hash_bucket

hb

futex_q

q

u32

uval

ret

hrtimer_sleeper

t

rem

q

pi_state

NULL

retry

fshared

down_read

fshared

ret

get_futex_key

uaddr

fshared

q

key

unlikely

ret

goto

out_release_sem

hb

queue_lock

q

NULL

ret

get_futex_value_locked

uval

uaddr

unlikely

ret

queue_unlock

q

hb

fshared

up_read

fshared

ret

get_user

uval

uaddr

ret

goto

retry

return

ret

ret

EWOULDBLOCK

uval

val

goto

out_unlock_release_sem

__queue_me

q

hb

fshared

up_read

fshared

__set_current_state

TASK_INTERRUPTIBLE

add_wait_queue

q

waiters

wait

likely

plist_node_empty

q

list

abs_time

schedule

hrtimer_init

t

timer

CLOCK_MONOTONIC

HRTIMER_MODE_ABS

hrtimer_init_sleeper

t

current

t

timer

expires

abs_time

hrtimer_start

t

timer

t

timer

expires

HRTIMER_MODE_ABS

likely

t

task

schedule

hrtimer_cancel

t

timer

rem

t

task

NULL

__set_current_state

TASK_RUNNING

unqueue_me

q

return

rem

return

ETIMEDOUT

abs_time

return

ERESTARTSYS

restart_block

restart

restart

current_thread_info

restart_block

restart

fn

futex_wait_restart

restart

futex

uaddr

u32

uaddr

restart

futex

val

val

restart

futex

time

abs_time

tv64

restart

futex

flags

fshared

restart

futex

flags

FLAGS_SHARED

return

ERESTART_RESTARTBLOCK

out_unlock_release_sem

queue_unlock

q

hb

out_release_sem

fshared

up_read

fshared

return

ret

static

futex_wait_restart

restart_block

restart

u32

__user

uaddr

u32

__user

restart

futex

uaddr

rw_semaphore

fshared

NULL

ktime_t

t

t

tv64

restart

futex

time

restart

fn

do_no_restart_syscall

restart

futex

flags

FLAGS_SHARED

fshared

current

mm

mmap_sem

return

futex_wait

uaddr

fshared

restart

futex

val

t

static

futex_lock_pi

u32

__user

uaddr

rw_semaphore

fshared

detect

ktime_t

time

trylock

hrtimer_sleeper

timeout

to

NULL

task_struct

curr

current

futex_hash_bucket

hb

u32

uval

newval

curval

futex_q

q

ret

lock_taken

ownerdied

attempt

refill_pi_state_cache

return

ENOMEM

time

to

timeout

hrtimer_init

to

timer

CLOCK_REALTIME

HRTIMER_MODE_ABS

hrtimer_init_sleeper

to

current

to

timer

expires

time

q

pi_state

NULL

retry

fshared

down_read

fshared

ret

get_futex_key

uaddr

fshared

q

key

unlikely

ret

goto

out_release_sem

retry_unlocked

hb

queue_lock

q

NULL

retry_locked

ret

lock_taken

newval

current

pid

pagefault_disable

curval

futex_atomic_cmpxchg_inatomic

uaddr

newval

pagefault_enable

unlikely

curval

EFAULT

goto

uaddr_faulted

unlikely

curval

FUTEX_TID_MASK

current

pid

ret

EDEADLK

goto

out_unlock_release_sem

unlikely

curval

goto

out_unlock_release_sem

uval

curval

newval

curval

FUTEX_WAITERS

unlikely

ownerdied

curval

FUTEX_TID_MASK

newval

curval

FUTEX_TID_MASK

current

pid

ownerdied

lock_taken

pagefault_disable

curval

futex_atomic_cmpxchg_inatomic

uaddr

uval

newval

pagefault_enable

unlikely

curval

EFAULT

goto

uaddr_faulted

unlikely

curval

uval

goto

retry_locked

unlikely

lock_taken

goto

out_unlock_release_sem

ret

lookup_pi_state

uval

hb

q

key

q

pi_state

unlikely

ret

ret

case

EAGAIN

queue_unlock

q

hb

fshared

up_read

fshared

cond_resched

goto

retry

case

ESRCH

get_futex_value_locked

curval

uaddr

goto

uaddr_faulted

curval

FUTEX_OWNER_DIED

ownerdied

goto

retry_locked

default

goto

out_unlock_release_sem

__queue_me

q

hb

fshared

up_read

fshared

WARN_ON

q

pi_state

trylock

ret

rt_mutex_timed_lock

q

pi_state

pi_mutex

to

ret

rt_mutex_trylock

q

pi_state

pi_mutex

ret

ret

EWOULDBLOCK

fshared

down_read

fshared

spin_lock

q

lock_ptr

ret

q

pi_state

owner

curr

ret

fixup_pi_state_owner

uaddr

q

curr

q

pi_state

owner

curr

rt_mutex_trylock

q

pi_state

pi_mutex

ret

rt_mutex_owner

q

pi_state

pi_mutex

curr

printk

KERN_ERR

ret

q

pi_state

pi_mutex

owner

q

pi_state

owner

unqueue_me_pi

q

fshared

up_read

fshared

return

ret

EINTR

ret

ERESTARTNOINTR

out_unlock_release_sem

queue_unlock

q

hb

out_release_sem

fshared

up_read

fshared

return

ret

uaddr_faulted

queue_unlock

q

hb

attempt

ret

futex_handle_fault

uaddr

fshared

attempt

ret

goto

out_release_sem

goto

retry_unlocked

fshared

up_read

fshared

ret

get_user

uval

uaddr

ret

uval

EFAULT

goto

retry

return

ret

static

futex_unlock_pi

u32

__user

uaddr

rw_semaphore

fshared

futex_hash_bucket

hb

futex_q

this

next

u32

uval

plist_head

head

union

futex_key

key

ret

attempt

retry

get_user

uval

uaddr

return

EFAULT

uval

FUTEX_TID_MASK

current

pid

return

EPERM

fshared

down_read

fshared

ret

get_futex_key

uaddr

fshared

key

unlikely

ret

goto

out

hb

hash_futex

key

retry_unlocked

spin_lock

hb

lock

uval

FUTEX_OWNER_DIED

pagefault_disable

uval

futex_atomic_cmpxchg_inatomic

uaddr

current

pid

pagefault_enable

unlikely

uval

EFAULT

goto

pi_faulted

unlikely

uval

current

pid

goto

out_unlock

head

hb

chain

plist_for_each_entry_safe

this

next

head

list

match_futex

this

key

key

ret

wake_futex_pi

uaddr

uval

this

ret

EFAULT

goto

pi_faulted

goto

out_unlock

uval

FUTEX_OWNER_DIED

ret

unlock_futex_pi

uaddr

uval

ret

EFAULT

goto

pi_faulted

out_unlock

spin_unlock

hb

lock

out

fshared

up_read

fshared

return

ret

pi_faulted

spin_unlock

hb

lock

attempt

ret

futex_handle_fault

uaddr

fshared

attempt

ret

goto

out

goto

retry_unlocked

fshared

up_read

fshared

ret

get_user

uval

uaddr

ret

uval

EFAULT

goto

retry

return

ret

static

futex_close

inode

inode

file

filp

futex_q

q

filp

private_data

unqueue_me

q

kfree

q

return

static

futex_poll

file

filp

poll_table_struct

wait

futex_q

q

filp

private_data

ret

poll_wait

filp

q

waiters

wait

plist_node_empty

q

list

ret

POLLIN

POLLRDNORM

return

ret

static

file_operations

futex_fops

release

futex_close

poll

futex_poll

static

futex_fd

u32

__user

uaddr

signal

futex_q

q

file

filp

ret

err

rw_semaphore

fshared

static

printk_interval

printk_timed_ratelimit

printk_interval

printk

KERN_WARNING

current

comm

ret

EINVAL

valid_signal

signal

goto

out

ret

get_unused_fd

ret

goto

out

filp

get_empty_filp

filp

put_unused_fd

ret

ret

ENFILE

goto

out

filp

f_op

futex_fops

filp

f_path

mnt

mntget

futex_mnt

filp

f_path

dentry

dget

futex_mnt

mnt_root

filp

f_mapping

filp

f_path

dentry

d_inode

i_mapping

signal

err

__f_setown

filp

task_pid

current

PIDTYPE_PID

err

goto

error

filp

f_owner

signum

signal

q

kmalloc

sizeof

q

GFP_KERNEL

q

err

ENOMEM

goto

error

q

pi_state

NULL

fshared

current

mm

mmap_sem

down_read

fshared

err

get_futex_key

uaddr

fshared

q

key

unlikely

err

up_read

fshared

kfree

q

goto

error

filp

private_data

q

queue_me

q

ret

filp

up_read

fshared

fd_install

ret

filp

out

return

ret

error

put_unused_fd

ret

put_filp

filp

ret

err

goto

out

asmlinkage

sys_set_robust_list

robust_list_head

__user

head

size_t

len

unlikely

len

sizeof

head

return

EINVAL

current

robust_list

head

return

asmlinkage

sys_get_robust_list

pid

robust_list_head

__user

__user

head_ptr

size_t

__user

len_ptr

robust_list_head

__user

head

ret

pid

head

current

robust_list

task_struct

p

ret

ESRCH

rcu_read_lock

p

find_task_by_pid

pid

p

goto

err_unlock

ret

EPERM

current

euid

p

euid

current

euid

p

uid

capable

CAP_SYS_PTRACE

goto

err_unlock

head

p

robust_list

rcu_read_unlock

put_user

sizeof

head

len_ptr

return

EFAULT

return

put_user

head

head_ptr

err_unlock

rcu_read_unlock

return

ret

handle_futex_death

u32

__user

uaddr

task_struct

curr

pi

u32

uval

nval

mval

retry

get_user

uval

uaddr

return

uval

FUTEX_TID_MASK

curr

pid

mval

uval

FUTEX_WAITERS

FUTEX_OWNER_DIED

nval

futex_atomic_cmpxchg_inatomic

uaddr

uval

mval

nval

EFAULT

return

nval

uval

goto

retry

pi

uval

FUTEX_WAITERS

futex_wake

uaddr

curr

mm

mmap_sem

return

static

inline

fetch_robust_entry

robust_list

__user

entry

robust_list

__user

__user

head

pi

uentry

get_user

uentry

__user

head

return

EFAULT

entry

void

__user

uentry

UL

pi

uentry

return

void

exit_robust_list

task_struct

curr

robust_list_head

__user

head

curr

robust_list

robust_list

__user

entry

pending

limit

ROBUST_LIST_LIMIT

pi

pip

futex_offset

fetch_robust_entry

entry

head

list

next

pi

return

get_user

futex_offset

head

futex_offset

return

fetch_robust_entry

pending

head

list_op_pending

pip

return

pending

handle_futex_death

void

__user

pending

futex_offset

curr

pip

entry

head

list

entry

pending

handle_futex_death

void

__user

entry

futex_offset

curr

pi

return

fetch_robust_entry

entry

entry

next

pi

return

limit

cond_resched

do_futex

u32

__user

uaddr

op

u32

val

ktime_t

timeout

u32

__user

uaddr2

u32

val2

u32

val3

ret

cmd

op

FUTEX_CMD_MASK

rw_semaphore

fshared

NULL

op

FUTEX_PRIVATE_FLAG

fshared

current

mm

mmap_sem

cmd

case

FUTEX_WAIT

ret

futex_wait

uaddr

fshared

val

timeout

case

FUTEX_WAKE

ret

futex_wake

uaddr

fshared

val

case

FUTEX_FD

ret

futex_fd

uaddr

val

case

FUTEX_REQUEUE

ret

futex_requeue

uaddr

fshared

uaddr2

val

val2

NULL

case

FUTEX_CMP_REQUEUE

ret

futex_requeue

uaddr

fshared

uaddr2

val

val2

val3

case

FUTEX_WAKE_OP

ret

futex_wake_op

uaddr

fshared

uaddr2

val

val2

val3

case

FUTEX_LOCK_PI

ret

futex_lock_pi

uaddr

fshared

val

timeout

case

FUTEX_UNLOCK_PI

ret

futex_unlock_pi

uaddr

fshared

case

FUTEX_TRYLOCK_PI

ret

futex_lock_pi

uaddr

fshared

timeout

default

ret

ENOSYS

return

ret

asmlinkage

sys_futex

u32

__user

uaddr

op

u32

val

timespec

__user

utime

u32

__user

uaddr2

u32

val3

timespec

ts

ktime_t

t

tp

NULL

u32

val2

cmd

op

FUTEX_CMD_MASK

utime

cmd

FUTEX_WAIT

cmd

FUTEX_LOCK_PI

copy_from_user

ts

utime

sizeof

ts

return

EFAULT

timespec_valid

ts

return

EINVAL

t

timespec_to_ktime

ts

cmd

FUTEX_WAIT

t

ktime_add

ktime_get

t

tp

t

cmd

FUTEX_REQUEUE

cmd

FUTEX_CMP_REQUEUE

cmd

FUTEX_WAKE_OP

val2

u32

utime

return

do_futex

uaddr

op

val

tp

uaddr2

val2

val3

static

futexfs_get_sb

file_system_type

fs_type

flags

dev_name

void

data

vfsmount

mnt

return

get_sb_pseudo

fs_type

NULL

xBAD1DEA

mnt

static

file_system_type

futex_fs_type

name

get_sb

futexfs_get_sb

kill_sb

kill_anon_super

static

__init

init

void

i

register_filesystem

futex_fs_type

i

return

i

futex_mnt

kern_mount

futex_fs_type

IS_ERR

futex_mnt

unregister_filesystem

futex_fs_type

return

PTR_ERR

futex_mnt

i

i

ARRAY_SIZE

futex_queues

i

plist_head_init

futex_queues

i

chain

futex_queues

i

lock

spin_lock_init

futex_queues

i

lock

return

__initcall

init

static

inline

fetch_robust_entry

compat_uptr_t

uentry

robust_list

__user

entry

compat_uptr_t

__user

head

pi

get_user

uentry

head

return

EFAULT

entry

compat_ptr

uentry

pi

uentry

return

static

void

__user

futex_uaddr

robust_list

entry

compat_long_t

futex_offset

compat_uptr_t

base

ptr_to_compat

entry

void

__user

uaddr

compat_ptr

base

futex_offset

return

uaddr

void

compat_exit_robust_list

task_struct

curr

compat_robust_list_head

__user

head

curr

compat_robust_list

robust_list

__user

entry

pending

limit

ROBUST_LIST_LIMIT

pi

pip

compat_uptr_t

uentry

upending

compat_long_t

futex_offset

fetch_robust_entry

uentry

entry

head

list

next

pi

return

get_user

futex_offset

head

futex_offset

return

fetch_robust_entry

upending

pending

head

list_op_pending

pip

return

pending

void

__user

uaddr

futex_uaddr

pending

futex_offset

handle_futex_death

uaddr

curr

pip

entry

robust_list

__user

head

list

entry

pending

void

__user

uaddr

futex_uaddr

entry

futex_offset

handle_futex_death

uaddr

curr

pi

return

fetch_robust_entry

uentry

entry

compat_uptr_t

__user

entry

next

pi

return

limit

cond_resched

asmlinkage

compat_sys_set_robust_list

compat_robust_list_head

__user

head

compat_size_t

len

unlikely

len

sizeof

head

return

EINVAL

current

compat_robust_list

head

return

asmlinkage

compat_sys_get_robust_list

pid

compat_uptr_t

__user

head_ptr

compat_size_t

__user

len_ptr

compat_robust_list_head

__user

head

ret

pid

head

current

compat_robust_list

task_struct

p

ret

ESRCH

read_lock

tasklist_lock

p

find_task_by_pid

pid

p

goto

err_unlock

ret

EPERM

current

euid

p

euid

current

euid

p

uid

capable

CAP_SYS_PTRACE

goto

err_unlock

head

p

compat_robust_list

read_unlock

tasklist_lock

put_user

sizeof

head

len_ptr

return

EFAULT

return

put_user

ptr_to_compat

head

head_ptr

err_unlock

read_unlock

tasklist_lock

return

ret

asmlinkage

compat_sys_futex

u32

__user

uaddr

op

u32

val

compat_timespec

__user

utime

u32

__user

uaddr2

u32

val3

timespec

ts

ktime_t

t

tp

NULL

val2

cmd

op

FUTEX_CMD_MASK

utime

cmd

FUTEX_WAIT

cmd

FUTEX_LOCK_PI

get_compat_timespec

ts

utime

return

EFAULT

timespec_valid

ts

return

EINVAL

t

timespec_to_ktime

ts

cmd

FUTEX_WAIT

t

ktime_add

ktime_get

t

tp

t

cmd

FUTEX_REQUEUE

cmd

FUTEX_CMP_REQUEUE

val2

utime

return

do_futex

uaddr

op

val

tp

uaddr2

val2

val3

ktime_t

ktime_get

void

timespec

now

ktime_get_ts

now

return

timespec_to_ktime

now

EXPORT_SYMBOL_GPL

ktime_get

ktime_t

ktime_get_real

void

timespec

now

getnstimeofday

now

return

timespec_to_ktime

now

EXPORT_SYMBOL_GPL

ktime_get_real

DEFINE_PER_CPU

hrtimer_cpu_base

hrtimer_bases

clock_base

index

CLOCK_REALTIME

get_time

ktime_get_real

resolution

KTIME_LOW_RES

index

CLOCK_MONOTONIC

get_time

ktime_get

resolution

KTIME_LOW_RES

void

ktime_get_ts

timespec

ts

timespec

tomono

seq

seq

read_seqbegin

xtime_lock

getnstimeofday

ts

tomono

wall_to_monotonic

read_seqretry

xtime_lock

seq

set_normalized_timespec

ts

ts

tv_sec

tomono

tv_sec

ts

tv_nsec

tomono

tv_nsec

EXPORT_SYMBOL_GPL

ktime_get_ts

static

void

hrtimer_get_softirq_time

hrtimer_cpu_base

base

ktime_t

xtim

tomono

timespec

xts

tom

seq

seq

read_seqbegin

xtime_lock

CONFIG_NO_HZ

getnstimeofday

xts

xts

xtime

tom

wall_to_monotonic

read_seqretry

xtime_lock

seq

xtim

timespec_to_ktime

xts

tomono

timespec_to_ktime

tom

base

clock_base

CLOCK_REALTIME

softirq_time

xtim

base

clock_base

CLOCK_MONOTONIC

softirq_time

ktime_add

xtim

tomono

static

inline

hrtimer_callback_running

hrtimer

timer

return

timer

state

HRTIMER_STATE_CALLBACK

CONFIG_SMP

static

hrtimer_clock_base

lock_hrtimer_base

hrtimer

timer

flags

hrtimer_clock_base

base

base

timer

base

likely

base

NULL

spin_lock_irqsave

base

cpu_base

lock

flags

likely

base

timer

base

return

base

spin_unlock_irqrestore

base

cpu_base

lock

flags

cpu_relax

static

inline

hrtimer_clock_base

switch_hrtimer_base

hrtimer

timer

hrtimer_clock_base

base

hrtimer_clock_base

new_base

hrtimer_cpu_base

new_cpu_base

new_cpu_base

__get_cpu_var

hrtimer_bases

new_base

new_cpu_base

clock_base

base

index

base

new_base

unlikely

hrtimer_callback_running

timer

return

base

timer

base

NULL

spin_unlock

base

cpu_base

lock

spin_lock

new_base

cpu_base

lock

timer

base

new_base

return

new_base

static

inline

hrtimer_clock_base

lock_hrtimer_base

hrtimer

timer

flags

hrtimer_clock_base

base

timer

base

spin_lock_irqsave

base

cpu_base

lock

flags

return

base

switch_hrtimer_base

t

b

b

BITS_PER_LONG

CONFIG_KTIME_SCALAR

ktime_t

ktime_add_ns

ktime_t

kt

u64

nsec

ktime_t

tmp

likely

nsec

NSEC_PER_SEC

tmp

tv64

nsec

rem

do_div

nsec

NSEC_PER_SEC

tmp

ktime_set

nsec

rem

return

ktime_add

kt

tmp

EXPORT_SYMBOL_GPL

ktime_add_ns

ktime_divns

ktime_t

kt

s64

div

u64

dclc

inc

dns

sft

dclc

dns

ktime_to_ns

kt

inc

div

div

sft

div

dclc

sft

do_div

dclc

div

return

dclc

CONFIG_HIGH_RES_TIMERS

static

hrtimer_hres_enabled

__read_mostly

static

__init

setup_hrtimer_hres

str

strcmp

str

hrtimer_hres_enabled

strcmp

str

hrtimer_hres_enabled

return

return

__setup

setup_hrtimer_hres

static

inline

hrtimer_is_hres_enabled

void

return

hrtimer_hres_enabled

static

inline

hrtimer_hres_active

void

return

__get_cpu_var

hrtimer_bases

hres_active

static

void

hrtimer_force_reprogram

hrtimer_cpu_base

cpu_base

i

hrtimer_clock_base

base

cpu_base

clock_base

ktime_t

expires

cpu_base

expires_next

tv64

KTIME_MAX

i

i

HRTIMER_MAX_CLOCK_BASES

i

base

hrtimer

timer

base

first

timer

rb_entry

base

first

hrtimer

node

expires

ktime_sub

timer

expires

base

offset

expires

tv64

cpu_base

expires_next

tv64

cpu_base

expires_next

expires

cpu_base

expires_next

tv64

KTIME_MAX

tick_program_event

cpu_base

expires_next

static

hrtimer_reprogram

hrtimer

timer

hrtimer_clock_base

base

ktime_t

expires_next

__get_cpu_var

hrtimer_bases

expires_next

ktime_t

expires

ktime_sub

timer

expires

base

offset

res

hrtimer_callback_running

timer

return

expires

tv64

expires_next

tv64

return

res

tick_program_event

expires

IS_ERR_VALUE

res

expires_next

expires

return

res

static

void

retrigger_next_event

void

arg

hrtimer_cpu_base

base

timespec

realtime_offset

seq

hrtimer_hres_active

return

seq

read_seqbegin

xtime_lock

set_normalized_timespec

realtime_offset

wall_to_monotonic

tv_sec

wall_to_monotonic

tv_nsec

read_seqretry

xtime_lock

seq

base

__get_cpu_var

hrtimer_bases

spin_lock

base

lock

base

clock_base

CLOCK_REALTIME

offset

timespec_to_ktime

realtime_offset

hrtimer_force_reprogram

base

spin_unlock

base

lock

void

clock_was_set

void

on_each_cpu

retrigger_next_event

NULL

void

hres_timers_resume

void

WARN_ON_ONCE

num_online_cpus

retrigger_next_event

NULL

static

inline

hrtimer_cb_pending

hrtimer

timer

return

timer

state

HRTIMER_STATE_PENDING

static

inline

void

hrtimer_remove_cb_pending

hrtimer

timer

list_del_init

timer

cb_entry

static

inline

void

hrtimer_init_hres

hrtimer_cpu_base

base

base

expires_next

tv64

KTIME_MAX

base

hres_active

INIT_LIST_HEAD

base

cb_pending

static

inline

void

hrtimer_init_timer_hres

hrtimer

timer

INIT_LIST_HEAD

timer

cb_entry

static

inline

hrtimer_enqueue_reprogram

hrtimer

timer

hrtimer_clock_base

base

base

cpu_base

hres_active

hrtimer_reprogram

timer

base

timer

cb_mode

case

HRTIMER_CB_IRQSAFE_NO_RESTART

BUG_ON

timer

function

timer

HRTIMER_NORESTART

return

case

HRTIMER_CB_IRQSAFE_NO_SOFTIRQ

return

case

HRTIMER_CB_IRQSAFE

case

HRTIMER_CB_SOFTIRQ

list_add_tail

timer

cb_entry

base

cpu_base

cb_pending

timer

state

HRTIMER_STATE_PENDING

raise_softirq

HRTIMER_SOFTIRQ

return

default

BUG

return

static

hrtimer_switch_to_hres

void

hrtimer_cpu_base

base

__get_cpu_var

hrtimer_bases

flags

base

hres_active

return

local_irq_save

flags

tick_init_highres

local_irq_restore

flags

return

base

hres_active

base

clock_base

CLOCK_REALTIME

resolution

KTIME_HIGH_RES

base

clock_base

CLOCK_MONOTONIC

resolution

KTIME_HIGH_RES

tick_setup_sched_timer

retrigger_next_event

NULL

local_irq_restore

flags

printk

KERN_INFO

smp_processor_id

return

static

inline

hrtimer_hres_active

void

return

static

inline

hrtimer_is_hres_enabled

void

return

static

inline

hrtimer_switch_to_hres

void

return

static

inline

void

hrtimer_force_reprogram

hrtimer_cpu_base

base

static

inline

hrtimer_enqueue_reprogram

hrtimer

timer

hrtimer_clock_base

base

return

static

inline

hrtimer_cb_pending

hrtimer

timer

return

static

inline

void

hrtimer_remove_cb_pending

hrtimer

timer

static

inline

void

hrtimer_init_hres

hrtimer_cpu_base

base

static

inline

void

hrtimer_init_timer_hres

hrtimer

timer

CONFIG_TIMER_STATS

void

__timer_stats_hrtimer_set_start_info

hrtimer

timer

void

addr

timer

start_site

return

timer

start_site

addr

memcpy

timer

start_comm

current

comm

TASK_COMM_LEN

timer

start_pid

current

pid

static

inline

void

unlock_hrtimer_base

hrtimer

timer

flags

spin_unlock_irqrestore

timer

base

cpu_base

lock

flags

hrtimer_forward

hrtimer

timer

ktime_t

now

ktime_t

interval

orun

ktime_t

delta

delta

ktime_sub

now

timer

expires

delta

tv64

return

interval

tv64

timer

base

resolution

tv64

interval

tv64

timer

base

resolution

tv64

unlikely

delta

tv64

interval

tv64

s64

incr

ktime_to_ns

interval

orun

ktime_divns

delta

incr

timer

expires

ktime_add_ns

timer

expires

incr

orun

timer

expires

tv64

now

tv64

return

orun

orun

timer

expires

ktime_add

timer

expires

interval

timer

expires

tv64

timer

expires

ktime_set

KTIME_SEC_MAX

return

orun

EXPORT_SYMBOL_GPL

hrtimer_forward

static

void

enqueue_hrtimer

hrtimer

timer

hrtimer_clock_base

base

reprogram

rb_node

link

base

active

rb_node

rb_node

parent

NULL

hrtimer

entry

link

parent

link

entry

rb_entry

parent

hrtimer

node

timer

expires

tv64

entry

expires

tv64

link

link

rb_left

link

link

rb_right

base

first

timer

expires

tv64

rb_entry

base

first

hrtimer

node

expires

tv64

reprogram

hrtimer_enqueue_reprogram

timer

base

return

base

first

timer

node

rb_link_node

timer

node

parent

link

rb_insert_color

timer

node

base

active

timer

state

HRTIMER_STATE_ENQUEUED

static

void

__remove_hrtimer

hrtimer

timer

hrtimer_clock_base

base

newstate

reprogram

hrtimer_cb_pending

timer

hrtimer_remove_cb_pending

timer

base

first

timer

node

base

first

rb_next

timer

node

reprogram

hrtimer_hres_active

hrtimer_force_reprogram

base

cpu_base

rb_erase

timer

node

base

active

timer

state

newstate

static

inline

remove_hrtimer

hrtimer

timer

hrtimer_clock_base

base

hrtimer_is_queued

timer

reprogram

timer_stats_hrtimer_clear_start_info

timer

reprogram

base

cpu_base

__get_cpu_var

hrtimer_bases

__remove_hrtimer

timer

base

HRTIMER_STATE_INACTIVE

reprogram

return

return

hrtimer_start

hrtimer

timer

ktime_t

tim

enum

hrtimer_mode

mode

hrtimer_clock_base

base

new_base

flags

ret

base

lock_hrtimer_base

timer

flags

ret

remove_hrtimer

timer

base

new_base

switch_hrtimer_base

timer

base

mode

HRTIMER_MODE_REL

tim

ktime_add

tim

new_base

get_time

CONFIG_TIME_LOW_RES

tim

ktime_add

tim

base

resolution

tim

tv64

tim

tv64

KTIME_MAX

timer

expires

tim

timer_stats_hrtimer_set_start_info

timer

enqueue_hrtimer

timer

new_base

new_base

cpu_base

__get_cpu_var

hrtimer_bases

unlock_hrtimer_base

timer

flags

return

ret

EXPORT_SYMBOL_GPL

hrtimer_start

hrtimer_try_to_cancel

hrtimer

timer

hrtimer_clock_base

base

flags

ret

base

lock_hrtimer_base

timer

flags

hrtimer_callback_running

timer

ret

remove_hrtimer

timer

base

unlock_hrtimer_base

timer

flags

return

ret

EXPORT_SYMBOL_GPL

hrtimer_try_to_cancel

hrtimer_cancel

hrtimer

timer

ret

hrtimer_try_to_cancel

timer

ret

return

ret

cpu_relax

EXPORT_SYMBOL_GPL

hrtimer_cancel

ktime_t

hrtimer_get_remaining

hrtimer

timer

hrtimer_clock_base

base

flags

ktime_t

rem

base

lock_hrtimer_base

timer

flags

rem

ktime_sub

timer

expires

base

get_time

unlock_hrtimer_base

timer

flags

return

rem

EXPORT_SYMBOL_GPL

hrtimer_get_remaining

CONFIG_NO_IDLE_HZ

CONFIG_NO_HZ

ktime_t

hrtimer_get_next_event

void

hrtimer_cpu_base

cpu_base

__get_cpu_var

hrtimer_bases

hrtimer_clock_base

base

cpu_base

clock_base

ktime_t

delta

mindelta

tv64

KTIME_MAX

flags

i

spin_lock_irqsave

cpu_base

lock

flags

hrtimer_hres_active

i

i

HRTIMER_MAX_CLOCK_BASES

i

base

hrtimer

timer

base

first

timer

rb_entry

base

first

hrtimer

node

delta

tv64

timer

expires

tv64

delta

ktime_sub

delta

base

get_time

delta

tv64

mindelta

tv64

mindelta

tv64

delta

tv64

spin_unlock_irqrestore

cpu_base

lock

flags

mindelta

tv64

mindelta

tv64

return

mindelta

void

hrtimer_init

hrtimer

timer

clockid_t

clock_id

enum

hrtimer_mode

mode

hrtimer_cpu_base

cpu_base

memset

timer

sizeof

hrtimer

cpu_base

__raw_get_cpu_var

hrtimer_bases

clock_id

CLOCK_REALTIME

mode

HRTIMER_MODE_ABS

clock_id

CLOCK_MONOTONIC

timer

base

cpu_base

clock_base

clock_id

hrtimer_init_timer_hres

timer

CONFIG_TIMER_STATS

timer

start_site

NULL

timer

start_pid

memset

timer

start_comm

TASK_COMM_LEN

EXPORT_SYMBOL_GPL

hrtimer_init

hrtimer_get_res

clockid_t

which_clock

timespec

tp

hrtimer_cpu_base

cpu_base

cpu_base

__raw_get_cpu_var

hrtimer_bases

tp

ktime_to_timespec

cpu_base

clock_base

which_clock

resolution

return

EXPORT_SYMBOL_GPL

hrtimer_get_res

CONFIG_HIGH_RES_TIMERS

void

hrtimer_interrupt

clock_event_device

dev

hrtimer_cpu_base

cpu_base

__get_cpu_var

hrtimer_bases

hrtimer_clock_base

base

ktime_t

expires_next

now

i

raise

BUG_ON

cpu_base

hres_active

cpu_base

nr_events

dev

next_event

tv64

KTIME_MAX

retry

now

ktime_get

expires_next

tv64

KTIME_MAX

base

cpu_base

clock_base

i

i

HRTIMER_MAX_CLOCK_BASES

i

ktime_t

basenow

rb_node

node

spin_lock

cpu_base

lock

basenow

ktime_add

now

base

offset

node

base

first

hrtimer

timer

timer

rb_entry

node

hrtimer

node

basenow

tv64

timer

expires

tv64

ktime_t

expires

expires

ktime_sub

timer

expires

base

offset

expires

tv64

expires_next

tv64

expires_next

expires

timer

cb_mode

HRTIMER_CB_SOFTIRQ

__remove_hrtimer

timer

base

HRTIMER_STATE_PENDING

list_add_tail

timer

cb_entry

base

cpu_base

cb_pending

raise

__remove_hrtimer

timer

base

HRTIMER_STATE_CALLBACK

timer_stats_account_hrtimer

timer

timer

function

timer

HRTIMER_NORESTART

BUG_ON

timer

state

HRTIMER_STATE_CALLBACK

enqueue_hrtimer

timer

base

timer

state

HRTIMER_STATE_CALLBACK

spin_unlock

cpu_base

lock

base

cpu_base

expires_next

expires_next

expires_next

tv64

KTIME_MAX

tick_program_event

expires_next

goto

retry

raise

raise_softirq

HRTIMER_SOFTIRQ

static

void

run_hrtimer_softirq

softirq_action

h

hrtimer_cpu_base

cpu_base

__get_cpu_var

hrtimer_bases

spin_lock_irq

cpu_base

lock

list_empty

cpu_base

cb_pending

enum

hrtimer_restart

fn

hrtimer

hrtimer

timer

restart

timer

list_entry

cpu_base

cb_pending

next

hrtimer

cb_entry

timer_stats_account_hrtimer

timer

fn

timer

function

__remove_hrtimer

timer

timer

base

HRTIMER_STATE_CALLBACK

spin_unlock_irq

cpu_base

lock

restart

fn

timer

spin_lock_irq

cpu_base

lock

timer

state

HRTIMER_STATE_CALLBACK

restart

HRTIMER_RESTART

BUG_ON

hrtimer_active

timer

enqueue_hrtimer

timer

timer

base

hrtimer_active

timer

timer

base

first

timer

node

hrtimer_reprogram

timer

timer

base

spin_unlock_irq

cpu_base

lock

static

inline

void

run_hrtimer_queue

hrtimer_cpu_base

cpu_base

index

rb_node

node

hrtimer_clock_base

base

cpu_base

clock_base

index

base

first

return

base

get_softirq_time

base

softirq_time

base

get_softirq_time

spin_lock_irq

cpu_base

lock

node

base

first

hrtimer

timer

enum

hrtimer_restart

fn

hrtimer

restart

timer

rb_entry

node

hrtimer

node

base

softirq_time

tv64

timer

expires

tv64

CONFIG_HIGH_RES_TIMERS

WARN_ON_ONCE

timer

cb_mode

HRTIMER_CB_IRQSAFE_NO_SOFTIRQ

timer_stats_account_hrtimer

timer

fn

timer

function

__remove_hrtimer

timer

base

HRTIMER_STATE_CALLBACK

spin_unlock_irq

cpu_base

lock

restart

fn

timer

spin_lock_irq

cpu_base

lock

timer

state

HRTIMER_STATE_CALLBACK

restart

HRTIMER_NORESTART

BUG_ON

hrtimer_active

timer

enqueue_hrtimer

timer

base

spin_unlock_irq

cpu_base

lock

void

hrtimer_run_queues

void

hrtimer_cpu_base

cpu_base

__get_cpu_var

hrtimer_bases

i

hrtimer_hres_active

return

tick_check_oneshot_change

hrtimer_is_hres_enabled

hrtimer_switch_to_hres

return

hrtimer_get_softirq_time

cpu_base

i

i

HRTIMER_MAX_CLOCK_BASES

i

run_hrtimer_queue

cpu_base

i

static

enum

hrtimer_restart

hrtimer_wakeup

hrtimer

timer

hrtimer_sleeper

t

container_of

timer

hrtimer_sleeper

timer

task_struct

task

t

task

t

task

NULL

task

wake_up_process

task

return

HRTIMER_NORESTART

void

hrtimer_init_sleeper

hrtimer_sleeper

sl

task_struct

task

sl

timer

function

hrtimer_wakeup

sl

task

task

CONFIG_HIGH_RES_TIMERS

sl

timer

cb_mode

HRTIMER_CB_IRQSAFE_NO_RESTART

static

__sched

do_nanosleep

hrtimer_sleeper

t

enum

hrtimer_mode

mode

hrtimer_init_sleeper

t

current

set_current_state

TASK_INTERRUPTIBLE

hrtimer_start

t

timer

t

timer

expires

mode

likely

t

task

schedule

hrtimer_cancel

t

timer

mode

HRTIMER_MODE_ABS

t

task

signal_pending

current

return

t

task

NULL

__sched

hrtimer_nanosleep_restart

restart_block

restart

hrtimer_sleeper

t

timespec

__user

rmtp

timespec

tu

ktime_t

time

restart

fn

do_no_restart_syscall

hrtimer_init

t

timer

restart

arg0

HRTIMER_MODE_ABS

t

timer

expires

tv64

u64

restart

arg3

u64

restart

arg2

do_nanosleep

t

HRTIMER_MODE_ABS

return

rmtp

timespec

__user

restart

arg1

rmtp

time

ktime_sub

t

timer

expires

t

timer

base

get_time

time

tv64

return

tu

ktime_to_timespec

time

copy_to_user

rmtp

tu

sizeof

tu

return

EFAULT

restart

fn

hrtimer_nanosleep_restart

return

ERESTART_RESTARTBLOCK

hrtimer_nanosleep

timespec

rqtp

timespec

__user

rmtp

enum

hrtimer_mode

mode

clockid_t

clockid

restart_block

restart

hrtimer_sleeper

t

timespec

tu

ktime_t

rem

hrtimer_init

t

timer

clockid

mode

t

timer

expires

timespec_to_ktime

rqtp

do_nanosleep

t

mode

return

mode

HRTIMER_MODE_ABS

return

ERESTARTNOHAND

rmtp

rem

ktime_sub

t

timer

expires

t

timer

base

get_time

rem

tv64

return

tu

ktime_to_timespec

rem

copy_to_user

rmtp

tu

sizeof

tu

return

EFAULT

restart

current_thread_info

restart_block

restart

fn

hrtimer_nanosleep_restart

restart

arg0

t

timer

base

index

restart

arg1

rmtp

restart

arg2

t

timer

expires

tv64

xFFFFFFFF

restart

arg3

t

timer

expires

tv64

return

ERESTART_RESTARTBLOCK

asmlinkage

sys_nanosleep

timespec

__user

rqtp

timespec

__user

rmtp

timespec

tu

copy_from_user

tu

rqtp

sizeof

tu

return

EFAULT

timespec_valid

tu

return

EINVAL

return

hrtimer_nanosleep

tu

rmtp

HRTIMER_MODE_REL

CLOCK_MONOTONIC

static

void

__devinit

init_hrtimers_cpu

cpu

hrtimer_cpu_base

cpu_base

per_cpu

hrtimer_bases

cpu

i

spin_lock_init

cpu_base

lock

lockdep_set_class

cpu_base

lock

cpu_base

lock_key

i

i

HRTIMER_MAX_CLOCK_BASES

i

cpu_base

clock_base

i

cpu_base

cpu_base

hrtimer_init_hres

cpu_base

CONFIG_HOTPLUG_CPU

static

void

migrate_hrtimer_list

hrtimer_clock_base

old_base

hrtimer_clock_base

new_base

hrtimer

timer

rb_node

node

node

rb_first

old_base

active

timer

rb_entry

node

hrtimer

node

BUG_ON

hrtimer_callback_running

timer

__remove_hrtimer

timer

old_base

HRTIMER_STATE_INACTIVE

timer

base

new_base

enqueue_hrtimer

timer

new_base

static

void

migrate_hrtimers

cpu

hrtimer_cpu_base

old_base

new_base

i

BUG_ON

cpu_online

cpu

old_base

per_cpu

hrtimer_bases

cpu

new_base

get_cpu_var

hrtimer_bases

tick_cancel_sched_timer

cpu

local_irq_disable

double_spin_lock

new_base

lock

old_base

lock

smp_processor_id

cpu

i

i

HRTIMER_MAX_CLOCK_BASES

i

migrate_hrtimer_list

old_base

clock_base

i

new_base

clock_base

i

double_spin_unlock

new_base

lock

old_base

lock

smp_processor_id

cpu

local_irq_enable

put_cpu_var

hrtimer_bases

static

__cpuinit

hrtimer_cpu_notify

notifier_block

self

action

void

hcpu

cpu

hcpu

action

case

CPU_UP_PREPARE

case

CPU_UP_PREPARE_FROZEN

init_hrtimers_cpu

cpu

CONFIG_HOTPLUG_CPU

case

CPU_DEAD

case

CPU_DEAD_FROZEN

clockevents_notify

CLOCK_EVT_NOTIFY_CPU_DEAD

cpu

migrate_hrtimers

cpu

default

return

NOTIFY_OK

static

notifier_block

__cpuinitdata

hrtimers_nb

notifier_call

hrtimer_cpu_notify

void

__init

hrtimers_init

void

hrtimer_cpu_notify

hrtimers_nb

CPU_UP_PREPARE

void

smp_processor_id

register_cpu_notifier

hrtimers_nb

CONFIG_HIGH_RES_TIMERS

open_softirq

HRTIMER_SOFTIRQ

run_hrtimer_softirq

NULL

static

timeval

itimer_get_remtime

hrtimer

timer

ktime_t

rem

hrtimer_get_remaining

timer

hrtimer_active

timer

rem

tv64

rem

tv64

NSEC_PER_USEC

rem

tv64

return

ktime_to_timeval

rem

do_getitimer

which

itimerval

value

task_struct

tsk

current

cputime_t

cinterval

cval

which

case

ITIMER_REAL

spin_lock_irq

tsk

sighand

siglock

value

it_value

itimer_get_remtime

tsk

signal

real_timer

value

it_interval

ktime_to_timeval

tsk

signal

it_real_incr

spin_unlock_irq

tsk

sighand

siglock

case

ITIMER_VIRTUAL

read_lock

tasklist_lock

spin_lock_irq

tsk

sighand

siglock

cval

tsk

signal

it_virt_expires

cinterval

tsk

signal

it_virt_incr

cputime_eq

cval

cputime_zero

task_struct

t

tsk

cputime_t

utime

tsk

signal

utime

utime

cputime_add

utime

t

utime

t

next_thread

t

t

tsk

cputime_le

cval

utime

cval

jiffies_to_cputime

cval

cputime_sub

cval

utime

spin_unlock_irq

tsk

sighand

siglock

read_unlock

tasklist_lock

cputime_to_timeval

cval

value

it_value

cputime_to_timeval

cinterval

value

it_interval

case

ITIMER_PROF

read_lock

tasklist_lock

spin_lock_irq

tsk

sighand

siglock

cval

tsk

signal

it_prof_expires

cinterval

tsk

signal

it_prof_incr

cputime_eq

cval

cputime_zero

task_struct

t

tsk

cputime_t

ptime

cputime_add

tsk

signal

utime

tsk

signal

stime

ptime

cputime_add

ptime

cputime_add

t

utime

t

stime

t

next_thread

t

t

tsk

cputime_le

cval

ptime

cval

jiffies_to_cputime

cval

cputime_sub

cval

ptime

spin_unlock_irq

tsk

sighand

siglock

read_unlock

tasklist_lock

cputime_to_timeval

cval

value

it_value

cputime_to_timeval

cinterval

value

it_interval

default

return

EINVAL

return

asmlinkage

sys_getitimer

which

itimerval

__user

value

error

EFAULT

itimerval

get_buffer

value

error

do_getitimer

which

get_buffer

error

copy_to_user

value

get_buffer

sizeof

get_buffer

error

EFAULT

return

error

enum

hrtimer_restart

it_real_fn

hrtimer

timer

signal_struct

sig

container_of

timer

signal_struct

real_timer

send_group_sig_info

SIGALRM

SEND_SIG_PRIV

sig

tsk

return

HRTIMER_NORESTART

timeval_valid

t

t

tv_sec

t

tv_usec

USEC_PER_SEC

do_setitimer

which

itimerval

value

itimerval

ovalue

task_struct

tsk

current

hrtimer

timer

ktime_t

expires

cputime_t

cval

cinterval

nval

ninterval

timeval_valid

value

it_value

timeval_valid

value

it_interval

return

EINVAL

which

case

ITIMER_REAL

again

spin_lock_irq

tsk

sighand

siglock

timer

tsk

signal

real_timer

ovalue

ovalue

it_value

itimer_get_remtime

timer

ovalue

it_interval

ktime_to_timeval

tsk

signal

it_real_incr

hrtimer_try_to_cancel

timer

spin_unlock_irq

tsk

sighand

siglock

goto

again

expires

timeval_to_ktime

value

it_value

expires

tv64

tsk

signal

it_real_incr

timeval_to_ktime

value

it_interval

hrtimer_start

timer

expires

HRTIMER_MODE_REL

tsk

signal

it_real_incr

tv64

spin_unlock_irq

tsk

sighand

siglock

case

ITIMER_VIRTUAL

nval

timeval_to_cputime

value

it_value

ninterval

timeval_to_cputime

value

it_interval

read_lock

tasklist_lock

spin_lock_irq

tsk

sighand

siglock

cval

tsk

signal

it_virt_expires

cinterval

tsk

signal

it_virt_incr

cputime_eq

cval

cputime_zero

cputime_eq

nval

cputime_zero

cputime_gt

nval

cputime_zero

nval

cputime_add

nval

jiffies_to_cputime

set_process_cpu_timer

tsk

CPUCLOCK_VIRT

nval

cval

tsk

signal

it_virt_expires

nval

tsk

signal

it_virt_incr

ninterval

spin_unlock_irq

tsk

sighand

siglock

read_unlock

tasklist_lock

ovalue

cputime_to_timeval

cval

ovalue

it_value

cputime_to_timeval

cinterval

ovalue

it_interval

case

ITIMER_PROF

nval

timeval_to_cputime

value

it_value

ninterval

timeval_to_cputime

value

it_interval

read_lock

tasklist_lock

spin_lock_irq

tsk

sighand

siglock

cval

tsk

signal

it_prof_expires

cinterval

tsk

signal

it_prof_incr

cputime_eq

cval

cputime_zero

cputime_eq

nval

cputime_zero

cputime_gt

nval

cputime_zero

nval

cputime_add

nval

jiffies_to_cputime

set_process_cpu_timer

tsk

CPUCLOCK_PROF

nval

cval

tsk

signal

it_prof_expires

nval

tsk

signal

it_prof_incr

ninterval

spin_unlock_irq

tsk

sighand

siglock

read_unlock

tasklist_lock

ovalue

cputime_to_timeval

cval

ovalue

it_value

cputime_to_timeval

cinterval

ovalue

it_interval

default

return

EINVAL

return

alarm_setitimer

seconds

itimerval

it_new

it_old

BITS_PER_LONG

seconds

INT_MAX

seconds

INT_MAX

it_new

it_value

tv_sec

seconds

it_new

it_value

tv_usec

it_new

it_interval

tv_sec

it_new

it_interval

tv_usec

do_setitimer

ITIMER_REAL

it_new

it_old

it_old

it_value

tv_sec

it_old

it_value

tv_usec

it_old

it_value

tv_usec

it_old

it_value

tv_sec

return

it_old

it_value

tv_sec

asmlinkage

sys_setitimer

which

itimerval

__user

value

itimerval

__user

ovalue

itimerval

set_buffer

get_buffer

error

value

copy_from_user

set_buffer

value

sizeof

set_buffer

return

EFAULT

memset

set_buffer

sizeof

set_buffer

error

do_setitimer

which

set_buffer

ovalue

get_buffer

NULL

error

ovalue

return

error

copy_to_user

ovalue

get_buffer

sizeof

get_buffer

return

EFAULT

return

CONFIG_KALLSYMS_ALL

all_var

all_var

extern

kallsyms_addresses

__attribute__

weak

extern

kallsyms_num_syms

__attribute__

weak

extern

u8

kallsyms_names

__attribute__

weak

extern

u8

kallsyms_token_table

__attribute__

weak

extern

u16

kallsyms_token_index

__attribute__

weak

extern

kallsyms_markers

__attribute__

weak

static

inline

is_kernel_inittext

addr

addr

_sinittext

addr

_einittext

return

return

static

inline

is_kernel_extratext

addr

addr

_sextratext

addr

_eextratext

return

return

static

inline

is_kernel_text

addr

addr

_stext

addr

_etext

return

return

in_gate_area_no_task

addr

static

inline

is_kernel

addr

addr

_stext

addr

_end

return

return

in_gate_area_no_task

addr

static

is_ksym_addr

addr

all_var

return

is_kernel

addr

return

is_kernel_text

addr

is_kernel_inittext

addr

is_kernel_extratext

addr

static

kallsyms_expand_symbol

off

result

len

skipped_first

u8

tptr

data

data

kallsyms_names

off

len

data

data

off

len

len

tptr

kallsyms_token_table

kallsyms_token_index

data

data

len

tptr

skipped_first

result

tptr

result

skipped_first

tptr

result

return

off

static

kallsyms_get_symbol_type

off

return

kallsyms_token_table

kallsyms_token_index

kallsyms_names

off

static

get_symbol_offset

pos

u8

name

i

name

kallsyms_names

kallsyms_markers

pos

i

i

pos

xFF

i

name

name

name

return

name

kallsyms_names

kallsyms_lookup_name

name

namebuf

KSYM_NAME_LEN

i

off

i

off

i

kallsyms_num_syms

i

off

kallsyms_expand_symbol

off

namebuf

strcmp

namebuf

name

return

kallsyms_addresses

i

return

module_kallsyms_lookup_name

name

static

get_symbol_pos

addr

symbolsize

offset

symbol_start

symbol_end

i

low

high

mid

BUG_ON

kallsyms_addresses

low

high

kallsyms_num_syms

high

low

mid

low

high

kallsyms_addresses

mid

addr

low

mid

high

mid

low

kallsyms_addresses

low

kallsyms_addresses

low

low

symbol_start

kallsyms_addresses

low

i

low

i

kallsyms_num_syms

i

kallsyms_addresses

i

symbol_start

symbol_end

kallsyms_addresses

i

symbol_end

is_kernel_inittext

addr

symbol_end

_einittext

all_var

symbol_end

_end

symbol_end

_etext

symbolsize

symbolsize

symbol_end

symbol_start

offset

offset

addr

symbol_start

return

low

kallsyms_lookup_size_offset

addr

symbolsize

offset

is_ksym_addr

addr

return

get_symbol_pos

addr

symbolsize

offset

return

module_address_lookup

addr

symbolsize

offset

NULL

kallsyms_lookup

addr

symbolsize

offset

modname

namebuf

msym

namebuf

KSYM_NAME_LEN

namebuf

is_ksym_addr

addr

pos

pos

get_symbol_pos

addr

symbolsize

offset

kallsyms_expand_symbol

get_symbol_offset

pos

namebuf

modname

modname

NULL

return

namebuf

msym

module_address_lookup

addr

symbolsize

offset

modname

msym

return

strncpy

namebuf

msym

KSYM_NAME_LEN

return

NULL

lookup_symbol_name

addr

symname

symname

symname

KSYM_NAME_LEN

is_ksym_addr

addr

pos

pos

get_symbol_pos

addr

NULL

NULL

kallsyms_expand_symbol

get_symbol_offset

pos

symname

return

return

lookup_module_symbol_name

addr

symname

lookup_symbol_attrs

addr

size

offset

modname

name

name

name

KSYM_NAME_LEN

is_ksym_addr

addr

pos

pos

get_symbol_pos

addr

size

offset

kallsyms_expand_symbol

get_symbol_offset

pos

name

modname

return

return

lookup_module_symbol_attrs

addr

size

offset

modname

name

sprint_symbol

buffer

address

modname

name

offset

size

namebuf

KSYM_NAME_LEN

name

kallsyms_lookup

address

size

offset

modname

namebuf

name

return

sprintf

buffer

address

modname

return

sprintf

buffer

name

offset

size

modname

return

sprintf

buffer

name

offset

size

void

__print_symbol

fmt

address

buffer

KSYM_SYMBOL_LEN

sprint_symbol

buffer

address

printk

fmt

buffer

kallsym_iter

loff_t

pos

value

nameoff

type

name

KSYM_NAME_LEN

module_name

MODULE_NAME_LEN

exported

static

get_ksymbol_mod

kallsym_iter

iter

module_get_kallsym

iter

pos

kallsyms_num_syms

iter

value

iter

type

iter

name

iter

module_name

iter

exported

return

return

static

get_ksymbol_core

kallsym_iter

iter

off

iter

nameoff

iter

module_name

iter

value

kallsyms_addresses

iter

pos

iter

type

kallsyms_get_symbol_type

off

off

kallsyms_expand_symbol

off

iter

name

return

off

iter

nameoff

static

void

reset_iter

kallsym_iter

iter

loff_t

new_pos

iter

name

iter

nameoff

get_symbol_offset

new_pos

iter

pos

new_pos

static

update_iter

kallsym_iter

iter

loff_t

pos

pos

kallsyms_num_syms

iter

pos

pos

return

get_ksymbol_mod

iter

pos

iter

pos

reset_iter

iter

pos

iter

nameoff

get_ksymbol_core

iter

iter

pos

return

static

void

s_next

seq_file

m

void

p

loff_t

pos

pos

update_iter

m

private

pos

return

NULL

return

p

static

void

s_start

seq_file

m

loff_t

pos

update_iter

m

private

pos

return

NULL

return

m

private

static

void

s_stop

seq_file

m

void

p

static

s_show

seq_file

m

void

p

kallsym_iter

iter

m

private

iter

name

return

iter

module_name

type

type

iter

exported

toupper

iter

type

tolower

iter

type

seq_printf

m

sizeof

void

iter

value

type

iter

name

iter

module_name

seq_printf

m

sizeof

void

iter

value

iter

type

iter

name

return

static

seq_operations

kallsyms_op

start

s_start

next

s_next

stop

s_stop

show

s_show

static

kallsyms_open

inode

inode

file

file

kallsym_iter

iter

ret

iter

kmalloc

sizeof

iter

GFP_KERNEL

iter

return

ENOMEM

reset_iter

iter

ret

seq_open

file

kallsyms_op

ret

seq_file

file

private_data

private

iter

kfree

iter

return

ret

static

file_operations

kallsyms_operations

open

kallsyms_open

read

seq_read

llseek

seq_lseek

release

seq_release_private

static

__init

kallsyms_init

void

proc_dir_entry

entry

entry

create_proc_entry

NULL

entry

entry

proc_fops

kallsyms_operations

return

__initcall

kallsyms_init

EXPORT_SYMBOL

__print_symbol

EXPORT_SYMBOL_GPL

sprint_symbol

CONFIG_KDB

kdb_walk_kallsyms

loff_t

pos

static

kallsym_iter

kdb_walk_kallsyms_iter

pos

memset

kdb_walk_kallsyms_iter

sizeof

kdb_walk_kallsyms_iter

reset_iter

kdb_walk_kallsyms_iter

update_iter

kdb_walk_kallsyms_iter

pos

return

NULL

pos

kdb_walk_kallsyms_iter

name

return

kdb_walk_kallsyms_iter

name

note_buf_t

crash_notes

resource

crashk_res

name

start

end

flags

IORESOURCE_BUSY

IORESOURCE_MEM

kexec_should_crash

task_struct

p

in_interrupt

p

pid

is_init

p

panic_on_oops

return

return

KIMAGE_NO_DEST

UL

static

kimage_is_destination_range

kimage

image

start

end

static

page

kimage_alloc_page

kimage

image

gfp_t

gfp_mask

dest

static

do_kimage_alloc

kimage

rimage

entry

nr_segments

kexec_segment

__user

segments

size_t

segment_bytes

kimage

image

i

result

result

ENOMEM

image

kzalloc

sizeof

image

GFP_KERNEL

image

goto

out

image

head

image

entry

image

head

image

last_entry

image

head

image

control_page

image

start

entry

image

type

KEXEC_TYPE_DEFAULT

INIT_LIST_HEAD

image

control_pages

INIT_LIST_HEAD

image

dest_pages

INIT_LIST_HEAD

image

unuseable_pages

image

nr_segments

nr_segments

segment_bytes

nr_segments

sizeof

segments

result

copy_from_user

image

segment

segments

segment_bytes

result

goto

out

result

EADDRNOTAVAIL

i

i

nr_segments

i

mstart

mend

mstart

image

segment

i

mem

mend

mstart

image

segment

i

memsz

mstart

PAGE_MASK

mend

PAGE_MASK

goto

out

mend

KEXEC_DESTINATION_MEMORY_LIMIT

goto

out

result

EINVAL

i

i

nr_segments

i

mstart

mend

j

mstart

image

segment

i

mem

mend

mstart

image

segment

i

memsz

j

j

i

j

pstart

pend

pstart

image

segment

j

mem

pend

pstart

image

segment

j

memsz

mend

pstart

mstart

pend

goto

out

result

EINVAL

i

i

nr_segments

i

image

segment

i

bufsz

image

segment

i

memsz

goto

out

result

out

result

rimage

image

kfree

image

return

result

static

kimage_normal_alloc

kimage

rimage

entry

nr_segments

kexec_segment

__user

segments

result

kimage

image

image

NULL

result

do_kimage_alloc

image

entry

nr_segments

segments

result

goto

out

rimage

image

result

ENOMEM

image

control_code_page

kimage_alloc_control_pages

image

get_order

KEXEC_CONTROL_CODE_SIZE

image

control_code_page

printk

KERN_ERR

goto

out

result

out

result

rimage

image

kfree

image

return

result

static

kimage_crash_alloc

kimage

rimage

entry

nr_segments

kexec_segment

__user

segments

result

kimage

image

i

image

NULL

entry

crashk_res

start

entry

crashk_res

end

result

EADDRNOTAVAIL

goto

out

result

do_kimage_alloc

image

entry

nr_segments

segments

result

goto

out

image

control_page

crashk_res

start

image

type

KEXEC_TYPE_CRASH

result

EADDRNOTAVAIL

i

i

nr_segments

i

mstart

mend

mstart

image

segment

i

mem

mend

mstart

image

segment

i

memsz

mstart

crashk_res

start

mend

crashk_res

end

goto

out

result

ENOMEM

image

control_code_page

kimage_alloc_control_pages

image

get_order

KEXEC_CONTROL_CODE_SIZE

image

control_code_page

printk

KERN_ERR

goto

out

result

out

result

rimage

image

kfree

image

return

result

static

kimage_is_destination_range

kimage

image

start

end

i

i

i

image

nr_segments

i

mstart

mend

mstart

image

segment

i

mem

mend

mstart

image

segment

i

memsz

end

mstart

start

mend

return

return

static

page

kimage_alloc_pages

gfp_t

gfp_mask

order

limit

page

pages

pages

alloc_pages

gfp_mask

order

pages

count

i

CONFIG_XEN

address_bits

limit

UL

address_bits

BITS_PER_LONG

address_bits

ilog2

limit

xen_create_contiguous_region

page_address

pages

order

address_bits

__free_pages

pages

order

return

NULL

pages

mapping

NULL

set_page_private

pages

order

count

order

i

i

count

i

SetPageReserved

pages

i

return

pages

static

void

kimage_free_pages

page

page

order

count

i

order

page_private

page

count

order

i

i

count

i

ClearPageReserved

page

i

CONFIG_XEN

xen_destroy_contiguous_region

page_address

page

order

__free_pages

page

order

static

void

kimage_free_page_list

list_head

list

list_head

pos

next

list_for_each_safe

pos

next

list

page

page

page

list_entry

pos

page

lru

list_del

page

lru

kimage_free_pages

page

static

page

kimage_alloc_normal_control_pages

kimage

image

order

list_head

extra_pages

page

pages

count

count

order

INIT_LIST_HEAD

extra_pages

pfn

epfn

addr

eaddr

pages

kimage_alloc_pages

GFP_KERNEL

order

KEXEC_CONTROL_MEMORY_LIMIT

pages

pfn

kexec_page_to_pfn

pages

epfn

pfn

count

addr

pfn

PAGE_SHIFT

eaddr

epfn

PAGE_SHIFT

epfn

KEXEC_CONTROL_MEMORY_LIMIT

PAGE_SHIFT

kimage_is_destination_range

image

addr

eaddr

list_add

pages

lru

extra_pages

pages

NULL

pages

pages

list_add

pages

lru

image

control_pages

kimage_free_page_list

extra_pages

return

pages

CONFIG_XEN

static

page

kimage_alloc_crash_control_pages

kimage

image

order

hole_start

hole_end

size

page

pages

pages

NULL

size

order

PAGE_SHIFT

hole_start

image

control_page

size

size

hole_end

hole_start

size

hole_end

crashk_res

end

i

hole_end

KEXEC_CONTROL_MEMORY_LIMIT

hole_end

crashk_res

end

i

i

image

nr_segments

i

mstart

mend

mstart

image

segment

i

mem

mend

mstart

image

segment

i

memsz

hole_end

mstart

hole_start

mend

hole_start

mend

size

size

hole_end

hole_start

size

i

image

nr_segments

pages

kexec_pfn_to_page

hole_start

PAGE_SHIFT

pages

image

control_page

hole_end

return

pages

page

kimage_alloc_control_pages

kimage

image

order

page

pages

NULL

image

type

case

KEXEC_TYPE_DEFAULT

pages

kimage_alloc_normal_control_pages

image

order

case

KEXEC_TYPE_CRASH

pages

kimage_alloc_crash_control_pages

image

order

return

pages

page

kimage_alloc_control_pages

kimage

image

order

return

kimage_alloc_normal_control_pages

image

order

static

kimage_add_entry

kimage

image

kimage_entry_t

entry

image

entry

image

entry

image

entry

image

last_entry

kimage_entry_t

ind_page

page

page

page

kimage_alloc_page

image

GFP_KERNEL

KIMAGE_NO_DEST

page

return

ENOMEM

ind_page

page_address

page

image

entry

kexec_virt_to_phys

ind_page

IND_INDIRECTION

image

entry

ind_page

image

last_entry

ind_page

PAGE_SIZE

sizeof

kimage_entry_t

image

entry

entry

image

entry

image

entry

return

static

kimage_set_destination

kimage

image

destination

result

destination

PAGE_MASK

result

kimage_add_entry

image

destination

IND_DESTINATION

result

image

destination

destination

return

result

static

kimage_add_page

kimage

image

page

result

page

PAGE_MASK

result

kimage_add_entry

image

page

IND_SOURCE

result

image

destination

PAGE_SIZE

return

result

static

void

kimage_free_extra_pages

kimage

image

kimage_free_page_list

image

dest_pages

kimage_free_page_list

image

unuseable_pages

static

kimage_terminate

kimage

image

image

entry

image

entry

image

entry

IND_DONE

return

for_each_kimage_entry

image

ptr

entry

ptr

image

head

entry

ptr

entry

IND_DONE

ptr

entry

IND_INDIRECTION

kexec_phys_to_virt

entry

PAGE_MASK

ptr

static

void

kimage_free_entry

kimage_entry_t

entry

page

page

page

kexec_pfn_to_page

entry

PAGE_SHIFT

kimage_free_pages

page

static

void

kimage_free

kimage

image

kimage_entry_t

ptr

entry

kimage_entry_t

ind

image

return

CONFIG_XEN

xen_machine_kexec_unload

image

kimage_free_extra_pages

image

for_each_kimage_entry

image

ptr

entry

entry

IND_INDIRECTION

ind

IND_INDIRECTION

kimage_free_entry

ind

ind

entry

entry

IND_SOURCE

kimage_free_entry

entry

ind

IND_INDIRECTION

kimage_free_entry

ind

machine_kexec_cleanup

image

kimage_free_page_list

image

control_pages

kfree

image

static

kimage_entry_t

kimage_dst_used

kimage

image

page

kimage_entry_t

ptr

entry

destination

for_each_kimage_entry

image

ptr

entry

entry

IND_DESTINATION

destination

entry

PAGE_MASK

entry

IND_SOURCE

page

destination

return

ptr

destination

PAGE_SIZE

return

NULL

static

page

kimage_alloc_page

kimage

image

gfp_t

gfp_mask

destination

page

page

addr

list_for_each_entry

page

image

dest_pages

lru

addr

kexec_page_to_pfn

page

PAGE_SHIFT

addr

destination

list_del

page

lru

return

page

page

NULL

kimage_entry_t

old

page

kimage_alloc_pages

gfp_mask

KEXEC_SOURCE_MEMORY_LIMIT

page

return

NULL

kexec_page_to_pfn

page

KEXEC_SOURCE_MEMORY_LIMIT

PAGE_SHIFT

list_add

page

lru

image

unuseable_pages

addr

kexec_page_to_pfn

page

PAGE_SHIFT

addr

destination

kimage_is_destination_range

image

addr

addr

PAGE_SIZE

old

kimage_dst_used

image

addr

old

old_addr

page

old_page

old_addr

old

PAGE_MASK

old_page

kexec_pfn_to_page

old_addr

PAGE_SHIFT

copy_highpage

page

old_page

old

addr

old

PAGE_MASK

addr

old_addr

page

old_page

list_add

page

lru

image

dest_pages

return

page

static

kimage_load_normal_segment

kimage

image

kexec_segment

segment

maddr

ubytes

mbytes

result

__user

buf

result

buf

segment

buf

ubytes

segment

bufsz

mbytes

segment

memsz

maddr

segment

mem

result

kimage_set_destination

image

maddr

result

goto

out

mbytes

page

page

ptr

size_t

uchunk

mchunk

page

kimage_alloc_page

image

GFP_HIGHUSER

maddr

page

result

ENOMEM

goto

out

result

kimage_add_page

image

kexec_page_to_pfn

page

PAGE_SHIFT

result

goto

out

ptr

kmap

page

memset

ptr

PAGE_SIZE

ptr

maddr

PAGE_MASK

mchunk

PAGE_SIZE

maddr

PAGE_MASK

mchunk

mbytes

mchunk

mbytes

uchunk

mchunk

uchunk

ubytes

uchunk

ubytes

result

copy_from_user

ptr

buf

uchunk

kunmap

page

result

result

result

result

EIO

goto

out

ubytes

uchunk

maddr

mchunk

buf

mchunk

mbytes

mchunk

out

return

result

CONFIG_XEN

static

kimage_load_crash_segment

kimage

image

kexec_segment

segment

maddr

ubytes

mbytes

result

__user

buf

result

buf

segment

buf

ubytes

segment

bufsz

mbytes

segment

memsz

maddr

segment

mem

mbytes

page

page

ptr

size_t

uchunk

mchunk

page

kexec_pfn_to_page

maddr

PAGE_SHIFT

page

result

ENOMEM

goto

out

ptr

kmap

page

ptr

maddr

PAGE_MASK

mchunk

PAGE_SIZE

maddr

PAGE_MASK

mchunk

mbytes

mchunk

mbytes

uchunk

mchunk

uchunk

ubytes

uchunk

ubytes

memset

ptr

uchunk

mchunk

uchunk

result

copy_from_user

ptr

buf

uchunk

kexec_flush_icache_page

page

kunmap

page

result

result

result

result

EIO

goto

out

ubytes

uchunk

maddr

mchunk

buf

mchunk

mbytes

mchunk

out

return

result

static

kimage_load_segment

kimage

image

kexec_segment

segment

result

ENOMEM

image

type

case

KEXEC_TYPE_DEFAULT

result

kimage_load_normal_segment

image

segment

case

KEXEC_TYPE_CRASH

result

kimage_load_crash_segment

image

segment

return

result

static

kimage_load_segment

kimage

image

kexec_segment

segment

return

kimage_load_normal_segment

image

segment

kimage

kexec_image

kimage

kexec_crash_image

static

kexec_lock

asmlinkage

sys_kexec_load

entry

nr_segments

kexec_segment

__user

segments

flags

kimage

dest_image

image

locked

result

capable

CAP_SYS_BOOT

return

EPERM

flags

KEXEC_FLAGS

flags

KEXEC_ARCH_MASK

return

EINVAL

flags

KEXEC_ARCH_MASK

KEXEC_ARCH

flags

KEXEC_ARCH_MASK

KEXEC_ARCH_DEFAULT

return

EINVAL

nr_segments

KEXEC_SEGMENT_MAX

return

EINVAL

image

NULL

result

locked

xchg

kexec_lock

locked

return

EBUSY

dest_image

kexec_image

flags

KEXEC_ON_CRASH

dest_image

kexec_crash_image

nr_segments

i

flags

KEXEC_ON_CRASH

result

kimage_normal_alloc

image

entry

nr_segments

segments

flags

KEXEC_ON_CRASH

kimage_free

xchg

kexec_crash_image

NULL

result

kimage_crash_alloc

image

entry

nr_segments

segments

result

goto

out

result

machine_kexec_prepare

image

result

goto

out

i

i

nr_segments

i

result

kimage_load_segment

image

image

segment

i

result

goto

out

result

kimage_terminate

image

result

goto

out

CONFIG_XEN

image

result

xen_machine_kexec_load

image

result

goto

out

image

xchg

dest_image

image

out

locked

xchg

kexec_lock

BUG_ON

locked

kimage_free

image

return

result

CONFIG_COMPAT

asmlinkage

compat_sys_kexec_load

entry

nr_segments

compat_kexec_segment

__user

segments

flags

compat_kexec_segment

in

kexec_segment

out

__user

ksegments

i

result

flags

KEXEC_ARCH_MASK

KEXEC_ARCH_DEFAULT

return

EINVAL

nr_segments

KEXEC_SEGMENT_MAX

return

EINVAL

ksegments

compat_alloc_user_space

nr_segments

sizeof

out

i

i

nr_segments

i

result

copy_from_user

in

segments

i

sizeof

in

result

return

EFAULT

out

buf

compat_ptr

in

buf

out

bufsz

in

bufsz

out

mem

in

mem

out

memsz

in

memsz

result

copy_to_user

ksegments

i

out

sizeof

out

result

return

EFAULT

return

sys_kexec_load

entry

nr_segments

ksegments

flags

void

crash_kexec

pt_regs

regs

locked

locked

xchg

kexec_lock

locked

kexec_crash_image

pt_regs

fixed_regs

crash_setup_regs

fixed_regs

regs

machine_crash_shutdown

fixed_regs

machine_kexec

kexec_crash_image

locked

xchg

kexec_lock

BUG_ON

locked

static

u32

append_elf_note

u32

buf

name

type

void

data

size_t

data_len

elf_note

note

note

n_namesz

strlen

name

note

n_descsz

data_len

note

n_type

type

memcpy

buf

note

sizeof

note

buf

sizeof

note

memcpy

buf

name

note

n_namesz

buf

note

n_namesz

memcpy

buf

data

note

n_descsz

buf

note

n_descsz

return

buf

static

void

final_note

u32

buf

elf_note

note

note

n_namesz

note

n_descsz

note

n_type

memcpy

buf

note

sizeof

note

void

crash_save_cpu

pt_regs

regs

cpu

elf_prstatus

prstatus

u32

buf

cpu

cpu

NR_CPUS

return

buf

u32

per_cpu_ptr

crash_notes

cpu

buf

return

memset

prstatus

sizeof

prstatus

prstatus

pr_pid

current

pid

elf_core_copy_regs

prstatus

pr_reg

regs

buf

append_elf_note

buf

KEXEC_CORE_NOTE_NAME

NT_PRSTATUS

prstatus

sizeof

prstatus

final_note

buf

static

__init

crash_notes_memory_init

void

crash_notes

alloc_percpu

note_buf_t

crash_notes

printk

return

ENOMEM

return

module_init

crash_notes_memory_init

kfifo

kfifo_init

buffer

size

gfp_t

gfp_mask

spinlock_t

lock

kfifo

fifo

BUG_ON

size

size

fifo

kmalloc

sizeof

kfifo

gfp_mask

fifo

return

ERR_PTR

ENOMEM

fifo

buffer

buffer

fifo

size

size

fifo

in

fifo

out

fifo

lock

lock

return

fifo

EXPORT_SYMBOL

kfifo_init

kfifo

kfifo_alloc

size

gfp_t

gfp_mask

spinlock_t

lock

buffer

kfifo

ret

size

size

BUG_ON

size

x80000000

size

roundup_pow_of_two

size

buffer

kmalloc

size

gfp_mask

buffer

return

ERR_PTR

ENOMEM

ret

kfifo_init

buffer

size

gfp_mask

lock

IS_ERR

ret

kfree

buffer

return

ret

EXPORT_SYMBOL

kfifo_alloc

void

kfifo_free

kfifo

fifo

kfree

fifo

buffer

kfree

fifo

EXPORT_SYMBOL

kfifo_free

__kfifo_put

kfifo

fifo

buffer

len

l

len

min

len

fifo

size

fifo

in

fifo

out

smp_mb

l

min

len

fifo

size

fifo

in

fifo

size

memcpy

fifo

buffer

fifo

in

fifo

size

buffer

l

memcpy

fifo

buffer

buffer

l

len

l

smp_wmb

fifo

in

len

return

len

EXPORT_SYMBOL

__kfifo_put

__kfifo_get

kfifo

fifo

buffer

len

l

len

min

len

fifo

in

fifo

out

smp_rmb

l

min

len

fifo

size

fifo

out

fifo

size

memcpy

buffer

fifo

buffer

fifo

out

fifo

size

l

memcpy

buffer

l

fifo

buffer

len

l

smp_mb

fifo

out

len

return

len

EXPORT_SYMBOL

__kfifo_get

extern

max_threads

static

workqueue_struct

khelper_wq

CONFIG_KMOD

modprobe_path

KMOD_PATH_LEN

request_module

fmt

va_list

args

module_name

MODULE_NAME_LEN

max_modprobes

ret

argv

modprobe_path

module_name

NULL

static

envp

NULL

static

atomic_t

kmod_concurrent

ATOMIC_INIT

MAX_KMOD_CONCURRENT

static

kmod_loop_msg

va_start

args

fmt

ret

vsnprintf

module_name

MODULE_NAME_LEN

fmt

args

va_end

args

ret

MODULE_NAME_LEN

return

ENAMETOOLONG

max_modprobes

min

max_threads

MAX_KMOD_CONCURRENT

atomic_inc

kmod_concurrent

atomic_read

kmod_concurrent

max_modprobes

kmod_loop_msg

printk

KERN_ERR

module_name

atomic_dec

kmod_concurrent

return

ENOMEM

ret

call_usermodehelper

modprobe_path

argv

envp

atomic_dec

kmod_concurrent

return

ret

EXPORT_SYMBOL

request_module

subprocess_info

work_struct

work

completion

complete

path

argv

envp

key

ring

wait

retval

file

stdin

static

____call_usermodehelper

void

data

subprocess_info

sub_info

data

key

new_session

old_session

retval

new_session

key_get

sub_info

ring

spin_lock_irq

current

sighand

siglock

old_session

__install_session_keyring

current

new_session

flush_signal_handlers

current

sigemptyset

current

blocked

recalc_sigpending

spin_unlock_irq

current

sighand

siglock

key_put

old_session

sub_info

stdin

files_struct

f

current

files

fdtable

fdt

sys_close

fd_install

sub_info

stdin

spin_lock

f

file_lock

fdt

files_fdtable

f

FD_SET

fdt

open_fds

FD_CLR

fdt

close_on_exec

spin_unlock

f

file_lock

current

signal

rlim

RLIMIT_CORE

rlimit

set_cpus_allowed

current

CPU_MASK_ALL

set_user_nice

current

retval

EPERM

current

fs

root

retval

kernel_execve

sub_info

path

sub_info

argv

sub_info

envp

sub_info

retval

retval

do_exit

static

wait_for_helper

void

data

subprocess_info

sub_info

data

pid_t

pid

allow_signal

SIGCHLD

pid

kernel_thread

____call_usermodehelper

sub_info

SIGCHLD

pid

sub_info

retval

pid

ret

sys_wait4

pid

__user

ret

NULL

ret

sub_info

retval

ret

sub_info

wait

kfree

sub_info

complete

sub_info

complete

return

static

void

__call_usermodehelper

work_struct

work

subprocess_info

sub_info

container_of

work

subprocess_info

work

pid_t

pid

wait

sub_info

wait

wait

pid

kernel_thread

wait_for_helper

sub_info

CLONE_FS

CLONE_FILES

SIGCHLD

pid

kernel_thread

____call_usermodehelper

sub_info

CLONE_VFORK

SIGCHLD

wait

return

pid

sub_info

retval

pid

complete

sub_info

complete

wait

complete

sub_info

complete

call_usermodehelper_keys

path

argv

envp

key

session_keyring

wait

DECLARE_COMPLETION_ONSTACK

done

subprocess_info

sub_info

retval

khelper_wq

return

EBUSY

path

return

sub_info

kzalloc

sizeof

subprocess_info

GFP_ATOMIC

sub_info

return

ENOMEM

INIT_WORK

sub_info

work

__call_usermodehelper

sub_info

complete

done

sub_info

path

path

sub_info

argv

argv

sub_info

envp

envp

sub_info

ring

session_keyring

sub_info

wait

wait

queue_work

khelper_wq

sub_info

work

wait

return

wait_for_completion

done

retval

sub_info

retval

kfree

sub_info

return

retval

EXPORT_SYMBOL

call_usermodehelper_keys

call_usermodehelper_pipe

path

argv

envp

file

filp

DECLARE_COMPLETION

done

subprocess_info

sub_info

work

__WORK_INITIALIZER

sub_info

work

__call_usermodehelper

complete

done

path

path

argv

argv

envp

envp

retval

file

f

khelper_wq

return

EBUSY

path

return

f

create_write_pipe

IS_ERR

f

return

PTR_ERR

f

filp

f

f

create_read_pipe

f

IS_ERR

f

free_write_pipe

filp

return

PTR_ERR

f

sub_info

stdin

f

queue_work

khelper_wq

sub_info

work

wait_for_completion

done

return

sub_info

retval

EXPORT_SYMBOL

call_usermodehelper_pipe

void

__init

usermodehelper_init

void

khelper_wq

create_singlethread_workqueue

BUG_ON

khelper_wq

KPROBE_HASH_BITS

KPROBE_TABLE_SIZE

KPROBE_HASH_BITS

kprobe_lookup_name

kprobe_lookup_name

name

addr

addr

kprobe_opcode_t

kallsyms_lookup_name

name

static

hlist_head

kprobe_table

KPROBE_TABLE_SIZE

static

hlist_head

kretprobe_inst_table

KPROBE_TABLE_SIZE

static

atomic_t

kprobe_count

static

bool

kprobe_enabled

DEFINE_MUTEX

kprobe_mutex

DEFINE_SPINLOCK

kretprobe_lock

static

DEFINE_PER_CPU

kprobe

kprobe_instance

NULL

static

notifier_block

kprobe_page_fault_nb

notifier_call

kprobe_exceptions_notify

priority

x7fffffff

__ARCH_WANT_KPROBES_INSN_SLOT

INSNS_PER_PAGE

PAGE_SIZE

MAX_INSN_SIZE

sizeof

kprobe_opcode_t

kprobe_insn_page

hlist_node

hlist

kprobe_opcode_t

insns

slot_used

INSNS_PER_PAGE

nused

ngarbage

enum

kprobe_slot_state

SLOT_CLEAN

SLOT_DIRTY

SLOT_USED

static

hlist_head

kprobe_insn_pages

static

kprobe_garbage_slots

static

collect_garbage_slots

void

static

__kprobes

check_safety

void

ret

CONFIG_PREEMPT

CONFIG_PM

ret

freeze_processes

ret

task_struct

p

q

do_each_thread

p

q

p

current

p

state

TASK_RUNNING

p

pid

printk

p

comm

ret

goto

loop_end

while_each_thread

p

q

loop_end

thaw_processes

synchronize_sched

return

ret

kprobe_opcode_t

__kprobes

get_insn_slot

void

kprobe_insn_page

kip

hlist_node

pos

retry

hlist_for_each_entry

kip

pos

kprobe_insn_pages

hlist

kip

nused

INSNS_PER_PAGE

i

i

i

INSNS_PER_PAGE

i

kip

slot_used

i

SLOT_CLEAN

kip

slot_used

i

SLOT_USED

kip

nused

return

kip

insns

i

MAX_INSN_SIZE

kip

nused

INSNS_PER_PAGE

kprobe_garbage_slots

collect_garbage_slots

goto

retry

kip

kmalloc

sizeof

kprobe_insn_page

GFP_KERNEL

kip

return

NULL

kip

insns

module_alloc

PAGE_SIZE

kip

insns

kfree

kip

return

NULL

INIT_HLIST_NODE

kip

hlist

hlist_add_head

kip

hlist

kprobe_insn_pages

memset

kip

slot_used

SLOT_CLEAN

INSNS_PER_PAGE

kip

slot_used

SLOT_USED

kip

nused

kip

ngarbage

return

kip

insns

static

__kprobes

collect_one_slot

kprobe_insn_page

kip

idx

kip

slot_used

idx

SLOT_CLEAN

kip

nused

kip

nused

hlist_del

kip

hlist

hlist_empty

kprobe_insn_pages

INIT_HLIST_NODE

kip

hlist

hlist_add_head

kip

hlist

kprobe_insn_pages

module_free

NULL

kip

insns

kfree

kip

return

return

static

__kprobes

collect_garbage_slots

void

kprobe_insn_page

kip

hlist_node

pos

next

check_safety

return

EAGAIN

hlist_for_each_entry_safe

kip

pos

next

kprobe_insn_pages

hlist

i

kip

ngarbage

kip

ngarbage

i

i

INSNS_PER_PAGE

i

kip

slot_used

i

SLOT_DIRTY

collect_one_slot

kip

i

kprobe_garbage_slots

return

void

__kprobes

free_insn_slot

kprobe_opcode_t

slot

dirty

kprobe_insn_page

kip

hlist_node

pos

hlist_for_each_entry

kip

pos

kprobe_insn_pages

hlist

kip

insns

slot

slot

kip

insns

INSNS_PER_PAGE

MAX_INSN_SIZE

i

slot

kip

insns

MAX_INSN_SIZE

dirty

kip

slot_used

i

SLOT_DIRTY

kip

ngarbage

collect_one_slot

kip

i

dirty

kprobe_garbage_slots

INSNS_PER_PAGE

collect_garbage_slots

static

inline

void

set_kprobe_instance

kprobe

kp

__get_cpu_var

kprobe_instance

kp

static

inline

void

reset_kprobe_instance

void

__get_cpu_var

kprobe_instance

NULL

kprobe

__kprobes

get_kprobe

void

addr

hlist_head

head

hlist_node

node

kprobe

p

head

kprobe_table

hash_ptr

addr

KPROBE_HASH_BITS

hlist_for_each_entry_rcu

p

node

head

hlist

p

addr

addr

return

p

return

NULL

static

__kprobes

aggr_pre_handler

kprobe

p

pt_regs

regs

kprobe

kp

list_for_each_entry_rcu

kp

p

list

list

kp

pre_handler

set_kprobe_instance

kp

kp

pre_handler

kp

regs

return

reset_kprobe_instance

return

static

void

__kprobes

aggr_post_handler

kprobe

p

pt_regs

regs

flags

kprobe

kp

list_for_each_entry_rcu

kp

p

list

list

kp

post_handler

set_kprobe_instance

kp

kp

post_handler

kp

regs

flags

reset_kprobe_instance

static

__kprobes

aggr_fault_handler

kprobe

p

pt_regs

regs

trapnr

kprobe

cur

__get_cpu_var

kprobe_instance

cur

cur

fault_handler

cur

fault_handler

cur

regs

trapnr

return

return

static

__kprobes

aggr_break_handler

kprobe

p

pt_regs

regs

kprobe

cur

__get_cpu_var

kprobe_instance

ret

cur

cur

break_handler

cur

break_handler

cur

regs

ret

reset_kprobe_instance

return

ret

void

__kprobes

kprobes_inc_nmissed_count

kprobe

p

kprobe

kp

p

pre_handler

aggr_pre_handler

p

nmissed

list_for_each_entry_rcu

kp

p

list

list

kp

nmissed

return

void

__kprobes

recycle_rp_inst

kretprobe_instance

ri

hlist_head

head

hlist_del

ri

hlist

ri

rp

hlist_del

ri

uflist

INIT_HLIST_NODE

ri

uflist

hlist_add_head

ri

uflist

ri

rp

free_instances

hlist_add_head

ri

hlist

head

hlist_head

__kprobes

kretprobe_inst_table_head

task_struct

tsk

return

kretprobe_inst_table

hash_ptr

tsk

KPROBE_HASH_BITS

void

__kprobes

kprobe_flush_task

task_struct

tk

kretprobe_instance

ri

hlist_head

head

empty_rp

hlist_node

node

tmp

flags

INIT_HLIST_HEAD

empty_rp

spin_lock_irqsave

kretprobe_lock

flags

head

kretprobe_inst_table_head

tk

hlist_for_each_entry_safe

ri

node

tmp

head

hlist

ri

task

tk

recycle_rp_inst

ri

empty_rp

spin_unlock_irqrestore

kretprobe_lock

flags

hlist_for_each_entry_safe

ri

node

tmp

empty_rp

hlist

hlist_del

ri

hlist

kfree

ri

static

inline

void

free_rp_inst

kretprobe

rp

kretprobe_instance

ri

hlist_node

pos

next

hlist_for_each_entry_safe

ri

pos

next

rp

free_instances

uflist

hlist_del

ri

uflist

kfree

ri

static

inline

void

copy_kprobe

kprobe

old_p

kprobe

p

memcpy

p

opcode

old_p

opcode

sizeof

kprobe_opcode_t

memcpy

p

ainsn

old_p

ainsn

sizeof

arch_specific_insn

static

__kprobes

add_new_kprobe

kprobe

old_p

kprobe

p

p

break_handler

old_p

break_handler

return

EEXIST

list_add_tail_rcu

p

list

old_p

list

old_p

break_handler

aggr_break_handler

list_add_rcu

p

list

old_p

list

p

post_handler

old_p

post_handler

old_p

post_handler

aggr_post_handler

return

static

inline

void

add_aggr_kprobe

kprobe

ap

kprobe

p

copy_kprobe

p

ap

flush_insn_slot

ap

ap

addr

p

addr

ap

pre_handler

aggr_pre_handler

ap

fault_handler

aggr_fault_handler

p

post_handler

ap

post_handler

aggr_post_handler

p

break_handler

ap

break_handler

aggr_break_handler

INIT_LIST_HEAD

ap

list

list_add_rcu

p

list

ap

list

hlist_replace_rcu

p

hlist

ap

hlist

static

__kprobes

register_aggr_kprobe

kprobe

old_p

kprobe

p

ret

kprobe

ap

old_p

pre_handler

aggr_pre_handler

copy_kprobe

old_p

p

ret

add_new_kprobe

old_p

p

ap

kzalloc

sizeof

kprobe

GFP_KERNEL

ap

return

ENOMEM

add_aggr_kprobe

ap

old_p

copy_kprobe

ap

p

ret

add_new_kprobe

ap

p

return

ret

static

__kprobes

in_kprobes_functions

addr

addr

__kprobes_text_start

addr

__kprobes_text_end

return

EINVAL

return

static

__kprobes

__register_kprobe

kprobe

p

called_from

ret

kprobe

old_p

module

probed_mod

p

symbol_name

p

addr

return

EINVAL

kprobe_lookup_name

p

symbol_name

p

addr

p

addr

return

EINVAL

p

addr

kprobe_opcode_t

p

addr

p

offset

kernel_text_address

p

addr

in_kprobes_functions

p

addr

return

EINVAL

p

mod_refcounted

probed_mod

module_text_address

p

addr

probed_mod

module

calling_mod

module_text_address

called_from

calling_mod

calling_mod

probed_mod

unlikely

try_module_get

probed_mod

return

EINVAL

p

mod_refcounted

probed_mod

NULL

p

nmissed

mutex_lock

kprobe_mutex

old_p

get_kprobe

p

addr

old_p

ret

register_aggr_kprobe

old_p

p

ret

atomic_inc

kprobe_count

goto

out

ret

arch_prepare_kprobe

p

ret

goto

out

INIT_HLIST_NODE

p

hlist

hlist_add_head_rcu

p

hlist

kprobe_table

hash_ptr

p

addr

KPROBE_HASH_BITS

kprobe_enabled

atomic_add_return

kprobe_count

ARCH_INACTIVE_KPROBE_COUNT

register_page_fault_notifier

kprobe_page_fault_nb

arch_arm_kprobe

p

out

mutex_unlock

kprobe_mutex

ret

probed_mod

module_put

probed_mod

return

ret

__kprobes

register_kprobe

kprobe

p

return

__register_kprobe

p

__builtin_return_address

void

__kprobes

unregister_kprobe

kprobe

p

module

mod

kprobe

old_p

list_p

cleanup_p

mutex_lock

kprobe_mutex

old_p

get_kprobe

p

addr

unlikely

old_p

mutex_unlock

kprobe_mutex

return

p

old_p

list_for_each_entry_rcu

list_p

old_p

list

list

list_p

p

goto

valid_p

mutex_unlock

kprobe_mutex

return

valid_p

old_p

p

old_p

pre_handler

aggr_pre_handler

p

list

next

old_p

list

p

list

prev

old_p

list

kprobe_enabled

arch_disarm_kprobe

p

hlist_del_rcu

old_p

hlist

cleanup_p

list_del_rcu

p

list

cleanup_p

mutex_unlock

kprobe_mutex

synchronize_sched

p

mod_refcounted

mod

module_text_address

p

addr

mod

module_put

mod

cleanup_p

p

old_p

list_del_rcu

p

list

kfree

old_p

arch_remove_kprobe

p

mutex_lock

kprobe_mutex

p

break_handler

old_p

break_handler

NULL

p

post_handler

list_for_each_entry_rcu

list_p

old_p

list

list

list_p

post_handler

cleanup_p

cleanup_p

old_p

post_handler

NULL

mutex_unlock

kprobe_mutex

mutex_lock

kprobe_mutex

atomic_add_return

kprobe_count

ARCH_INACTIVE_KPROBE_COUNT

unregister_page_fault_notifier

kprobe_page_fault_nb

mutex_unlock

kprobe_mutex

return

static

notifier_block

kprobe_exceptions_nb

notifier_call

kprobe_exceptions_notify

priority

x7fffffff

__kprobes

register_jprobe

jprobe

jp

jp

kp

pre_handler

setjmp_pre_handler

jp

kp

break_handler

longjmp_break_handler

return

__register_kprobe

jp

kp

__builtin_return_address

void

__kprobes

unregister_jprobe

jprobe

jp

unregister_kprobe

jp

kp

ARCH_SUPPORTS_KRETPROBES

static

__kprobes

pre_handler_kretprobe

kprobe

p

pt_regs

regs

kretprobe

rp

container_of

p

kretprobe

kp

flags

spin_lock_irqsave

kretprobe_lock

flags

hlist_empty

rp

free_instances

kretprobe_instance

ri

ri

hlist_entry

rp

free_instances

first

kretprobe_instance

uflist

ri

rp

rp

ri

task

current

arch_prepare_kretprobe

ri

regs

hlist_del

ri

uflist

hlist_add_head

ri

uflist

ri

rp

used_instances

hlist_add_head

ri

hlist

kretprobe_inst_table_head

ri

task

rp

nmissed

spin_unlock_irqrestore

kretprobe_lock

flags

return

__kprobes

register_kretprobe

kretprobe

rp

ret

kretprobe_instance

inst

i

rp

kp

pre_handler

pre_handler_kretprobe

rp

kp

post_handler

NULL

rp

kp

fault_handler

NULL

rp

kp

break_handler

NULL

rp

maxactive

CONFIG_PREEMPT

rp

maxactive

max

NR_CPUS

rp

maxactive

NR_CPUS

INIT_HLIST_HEAD

rp

used_instances

INIT_HLIST_HEAD

rp

free_instances

i

i

rp

maxactive

i

inst

kmalloc

sizeof

kretprobe_instance

GFP_KERNEL

inst

NULL

free_rp_inst

rp

return

ENOMEM

INIT_HLIST_NODE

inst

uflist

hlist_add_head

inst

uflist

rp

free_instances

rp

nmissed

ret

__register_kprobe

rp

kp

__builtin_return_address

free_rp_inst

rp

return

ret

__kprobes

register_kretprobe

kretprobe

rp

return

ENOSYS

static

__kprobes

pre_handler_kretprobe

kprobe

p

pt_regs

regs

return

void

__kprobes

unregister_kretprobe

kretprobe

rp

flags

kretprobe_instance

ri

hlist_node

pos

next

unregister_kprobe

rp

kp

spin_lock_irqsave

kretprobe_lock

flags

hlist_for_each_entry_safe

ri

pos

next

rp

used_instances

uflist

ri

rp

NULL

hlist_del

ri

uflist

spin_unlock_irqrestore

kretprobe_lock

flags

free_rp_inst

rp

static

__init

init_kprobes

void

i

err

i

i

KPROBE_TABLE_SIZE

i

INIT_HLIST_HEAD

kprobe_table

i

INIT_HLIST_HEAD

kretprobe_inst_table

i

atomic_set

kprobe_count

kprobe_enabled

true

err

arch_init_kprobes

err

err

register_die_notifier

kprobe_exceptions_nb

return

err

CONFIG_DEBUG_FS

static

void

__kprobes

report_probe

seq_file

pi

kprobe

p

sym

offset

modname

kprobe_type

p

pre_handler

pre_handler_kretprobe

kprobe_type

p

pre_handler

setjmp_pre_handler

kprobe_type

kprobe_type

sym

seq_printf

pi

p

addr

kprobe_type

sym

offset

modname

modname

seq_printf

pi

p

addr

kprobe_type

p

addr

static

void

__kprobes

kprobe_seq_start

seq_file

f

loff_t

pos

return

pos

KPROBE_TABLE_SIZE

pos

NULL

static

void

__kprobes

kprobe_seq_next

seq_file

f

void

v

loff_t

pos

pos

pos

KPROBE_TABLE_SIZE

return

NULL

return

pos

static

void

__kprobes

kprobe_seq_stop

seq_file

f

void

v

static

__kprobes

show_kprobe_addr

seq_file

pi

void

v

hlist_head

head

hlist_node

node

kprobe

p

kp

sym

NULL

i

loff_t

v

offset

modname

namebuf

head

kprobe_table

i

preempt_disable

hlist_for_each_entry_rcu

p

node

head

hlist

sym

kallsyms_lookup

p

addr

NULL

offset

modname

namebuf

p

pre_handler

aggr_pre_handler

list_for_each_entry_rcu

kp

p

list

list

report_probe

pi

kp

sym

offset

modname

report_probe

pi

p

sym

offset

modname

preempt_enable

return

static

seq_operations

kprobes_seq_ops

start

kprobe_seq_start

next

kprobe_seq_next

stop

kprobe_seq_stop

show

show_kprobe_addr

static

__kprobes

kprobes_open

inode

inode

file

filp

return

seq_open

filp

kprobes_seq_ops

static

file_operations

debugfs_kprobes_operations

open

kprobes_open

read

seq_read

llseek

seq_lseek

release

seq_release

static

void

__kprobes

enable_all_kprobes

void

hlist_head

head

hlist_node

node

kprobe

p

i

mutex_lock

kprobe_mutex

kprobe_enabled

goto

already_enabled

atomic_read

kprobe_count

ARCH_INACTIVE_KPROBE_COUNT

register_page_fault_notifier

kprobe_page_fault_nb

i

i

KPROBE_TABLE_SIZE

i

head

kprobe_table

i

hlist_for_each_entry_rcu

p

node

head

hlist

arch_arm_kprobe

p

kprobe_enabled

true

printk

KERN_INFO

already_enabled

mutex_unlock

kprobe_mutex

return

static

void

__kprobes

disable_all_kprobes

void

hlist_head

head

hlist_node

node

kprobe

p

i

mutex_lock

kprobe_mutex

kprobe_enabled

goto

already_disabled

kprobe_enabled

false

printk

KERN_INFO

i

i

KPROBE_TABLE_SIZE

i

head

kprobe_table

i

hlist_for_each_entry_rcu

p

node

head

hlist

arch_trampoline_kprobe

p

arch_disarm_kprobe

p

mutex_unlock

kprobe_mutex

synchronize_sched

mutex_lock

kprobe_mutex

unregister_page_fault_notifier

kprobe_page_fault_nb

already_disabled

mutex_unlock

kprobe_mutex

return

static

ssize_t

read_enabled_file_bool

file

file

__user

user_buf

size_t

count

loff_t

ppos

buf

kprobe_enabled

buf

buf

buf

buf

x00

return

simple_read_from_buffer

user_buf

count

ppos

buf

static

ssize_t

write_enabled_file_bool

file

file

__user

user_buf

size_t

count

loff_t

ppos

buf

buf_size

buf_size

min

count

sizeof

buf

copy_from_user

buf

user_buf

buf_size

return

EFAULT

buf

case

case

case

enable_all_kprobes

case

case

case

disable_all_kprobes

return

count

static

file_operations

fops_kp

read

read_enabled_file_bool

write

write_enabled_file_bool

static

__kprobes

debugfs_kprobe_init

void

dentry

dir

file

value

dir

debugfs_create_dir

NULL

dir

return

ENOMEM

file

debugfs_create_file

dir

NULL

debugfs_kprobes_operations

file

debugfs_remove

dir

return

ENOMEM

file

debugfs_create_file

dir

value

fops_kp

file

debugfs_remove

dir

return

ENOMEM

return

late_initcall

debugfs_kprobe_init

module_init

init_kprobes

EXPORT_SYMBOL_GPL

register_kprobe

EXPORT_SYMBOL_GPL

unregister_kprobe

EXPORT_SYMBOL_GPL

register_jprobe

EXPORT_SYMBOL_GPL

unregister_jprobe

EXPORT_SYMBOL_GPL

jprobe_return

EXPORT_SYMBOL_GPL

register_kretprobe

EXPORT_SYMBOL_GPL

unregister_kretprobe

KERNEL_ATTR_RO

_name

static

subsys_attribute

_name

_attr

__ATTR_RO

_name

KERNEL_ATTR_RW

_name

static

subsys_attribute

_name

_attr

__ATTR

_name

_name

_show

_name

_store

CONFIG_HOTPLUG

CONFIG_NET

static

ssize_t

uevent_seqnum_show

kset

kset

page

return

sprintf

page

uevent_seqnum

KERNEL_ATTR_RO

uevent_seqnum

static

ssize_t

uevent_helper_show

kset

kset

page

return

sprintf

page

uevent_helper

static

ssize_t

uevent_helper_store

kset

kset

page

size_t

count

count

UEVENT_HELPER_PATH_LEN

return

ENOENT

memcpy

uevent_helper

page

count

uevent_helper

count

count

uevent_helper

count

uevent_helper

count

return

count

KERNEL_ATTR_RW

uevent_helper

CONFIG_KEXEC

static

ssize_t

kexec_loaded_show

kset

kset

page

return

sprintf

page

kexec_image

KERNEL_ATTR_RO

kexec_loaded

static

ssize_t

kexec_crash_loaded_show

kset

kset

page

return

sprintf

page

kexec_crash_image

KERNEL_ATTR_RO

kexec_crash_loaded

decl_subsys

kernel

NULL

NULL

EXPORT_SYMBOL_GPL

kernel_subsys

static

attribute

kernel_attrs

CONFIG_HOTPLUG

CONFIG_NET

uevent_seqnum_attr

attr

uevent_helper_attr

attr

CONFIG_KEXEC

kexec_loaded_attr

attr

kexec_crash_loaded_attr

attr

NULL

static

attribute_group

kernel_attr_group

attrs

kernel_attrs

static

__init

ksysfs_init

void

error

subsystem_register

kernel_subsys

error

error

sysfs_create_group

kernel_subsys

kobj

kernel_attr_group

return

error

core_initcall

ksysfs_init

static

DEFINE_SPINLOCK

kthread_create_lock

static

LIST_HEAD

kthread_create_list

task_struct

kthreadd_task

kthread_create_info

threadfn

void

data

void

data

completion

started

task_struct

result

completion

done

list_head

list

kthread_stop_info

task_struct

k

err

completion

done

static

DEFINE_MUTEX

kthread_stop_lock

static

kthread_stop_info

kthread_stop_info

kthread_should_stop

void

return

kthread_stop_info

k

current

EXPORT_SYMBOL

kthread_should_stop

static

kthread

void

_create

kthread_create_info

create

_create

threadfn

void

data

void

data

ret

EINTR

threadfn

create

threadfn

data

create

data

__set_current_state

TASK_UNINTERRUPTIBLE

complete

create

started

schedule

kthread_should_stop

ret

threadfn

data

kthread_should_stop

kthread_stop_info

err

ret

complete

kthread_stop_info

done

return

static

void

create_kthread

kthread_create_info

create

pid

pid

kernel_thread

kthread

create

CLONE_FS

CLONE_FILES

SIGCHLD

pid

create

result

ERR_PTR

pid

wait_for_completion

create

started

read_lock

tasklist_lock

create

result

find_task_by_pid

pid

read_unlock

tasklist_lock

complete

create

done

task_struct

kthread_create

threadfn

void

data

void

data

namefmt

kthread_create_info

create

create

threadfn

threadfn

create

data

data

init_completion

create

started

init_completion

create

done

spin_lock

kthread_create_lock

list_add_tail

create

list

kthread_create_list

wake_up_process

kthreadd_task

spin_unlock

kthread_create_lock

wait_for_completion

create

done

IS_ERR

create

result

va_list

args

va_start

args

namefmt

vsnprintf

create

result

comm

sizeof

create

result

comm

namefmt

args

va_end

args

return

create

result

EXPORT_SYMBOL

kthread_create

void

kthread_bind

task_struct

k

cpu

k

state

TASK_UNINTERRUPTIBLE

WARN_ON

return

wait_task_inactive

k

set_task_cpu

k

cpu

k

cpus_allowed

cpumask_of_cpu

cpu

EXPORT_SYMBOL

kthread_bind

kthread_stop

task_struct

k

ret

mutex_lock

kthread_stop_lock

get_task_struct

k

init_completion

kthread_stop_info

done

smp_wmb

kthread_stop_info

k

k

wake_up_process

k

put_task_struct

k

wait_for_completion

kthread_stop_info

done

kthread_stop_info

k

NULL

ret

kthread_stop_info

err

mutex_unlock

kthread_stop_lock

return

ret

EXPORT_SYMBOL

kthread_stop

static

__init

void

kthreadd_setup

void

task_struct

tsk

current

set_task_comm

tsk

ignore_signals

tsk

set_user_nice

tsk

set_cpus_allowed

tsk

CPU_MASK_ALL

kthreadd

void

unused

kthreadd_setup

current

flags

PF_NOFREEZE

set_current_state

TASK_INTERRUPTIBLE

list_empty

kthread_create_list

schedule

__set_current_state

TASK_RUNNING

spin_lock

kthread_create_lock

list_empty

kthread_create_list

kthread_create_info

create

create

list_entry

kthread_create_list

next

kthread_create_info

list

list_del_init

create

list

spin_unlock

kthread_create_lock

create_kthread

create

spin_lock

kthread_create_lock

spin_unlock

kthread_create_lock

return

latency_info

list_head

list

usecs

identifier

static

atomic_t

current_max_latency

static

DEFINE_SPINLOCK

latency_lock

static

LIST_HEAD

latency_list

static

BLOCKING_NOTIFIER_HEAD

latency_notifier

static

__find_max_latency

void

min

INFINITE_LATENCY

latency_info

info

list_for_each_entry

info

latency_list

list

info

usecs

min

min

info

usecs

return

min

void

set_acceptable_latency

identifier

usecs

latency_info

info

iter

flags

found_old

info

kzalloc

sizeof

latency_info

GFP_KERNEL

info

return

info

usecs

usecs

info

identifier

kstrdup

identifier

GFP_KERNEL

info

identifier

goto

free_info

spin_lock_irqsave

latency_lock

flags

list_for_each_entry

iter

latency_list

list

strcmp

iter

identifier

identifier

found_old

iter

usecs

usecs

found_old

list_add

info

list

latency_list

usecs

atomic_read

current_max_latency

atomic_set

current_max_latency

usecs

spin_unlock_irqrestore

latency_lock

flags

blocking_notifier_call_chain

latency_notifier

atomic_read

current_max_latency

NULL

found_old

return

kfree

info

identifier

free_info

kfree

info

EXPORT_SYMBOL_GPL

set_acceptable_latency

void

modify_acceptable_latency

identifier

usecs

latency_info

iter

flags

spin_lock_irqsave

latency_lock

flags

list_for_each_entry

iter

latency_list

list

strcmp

iter

identifier

identifier

iter

usecs

usecs

usecs

atomic_read

current_max_latency

atomic_set

current_max_latency

usecs

spin_unlock_irqrestore

latency_lock

flags

EXPORT_SYMBOL_GPL

modify_acceptable_latency

void

remove_acceptable_latency

identifier

flags

newmax

latency_info

iter

temp

spin_lock_irqsave

latency_lock

flags

list_for_each_entry_safe

iter

temp

latency_list

list

strcmp

iter

identifier

identifier

list_del

iter

list

newmax

iter

usecs

kfree

iter

identifier

kfree

iter

newmax

atomic_read

current_max_latency

newmax

__find_max_latency

atomic_set

current_max_latency

newmax

spin_unlock_irqrestore

latency_lock

flags

EXPORT_SYMBOL_GPL

remove_acceptable_latency

system_latency_constraint

void

return

atomic_read

current_max_latency

EXPORT_SYMBOL_GPL

system_latency_constraint

void

synchronize_acceptable_latency

void

blocking_notifier_call_chain

latency_notifier

atomic_read

current_max_latency

NULL

EXPORT_SYMBOL_GPL

synchronize_acceptable_latency

register_latency_notifier

notifier_block

nb

return

blocking_notifier_chain_register

latency_notifier

nb

EXPORT_SYMBOL_GPL

register_latency_notifier

unregister_latency_notifier

notifier_block

nb

return

blocking_notifier_chain_unregister

latency_notifier

nb

EXPORT_SYMBOL_GPL

unregister_latency_notifier

static

__init

latency_init

void

atomic_set

current_max_latency

INFINITE_LATENCY

set_acceptable_latency

HZ

return

module_init

latency_init

static

raw_spinlock_t

lockdep_lock

raw_spinlock_t

__RAW_SPIN_LOCK_UNLOCKED

static

graph_lock

void

__raw_spin_lock

lockdep_lock

debug_locks

__raw_spin_unlock

lockdep_lock

return

return

static

inline

graph_unlock

void

debug_locks

__raw_spin_is_locked

lockdep_lock

return

DEBUG_LOCKS_WARN_ON

__raw_spin_unlock

lockdep_lock

return

static

inline

debug_locks_off_graph_unlock

void

ret

debug_locks_off

__raw_spin_unlock

lockdep_lock

return

ret

static

lockdep_initialized

nr_list_entries

static

lock_list

list_entries

MAX_LOCKDEP_ENTRIES

static

lock_list

alloc_list_entry

void

nr_list_entries

MAX_LOCKDEP_ENTRIES

debug_locks_off_graph_unlock

return

NULL

printk

printk

return

NULL

return

list_entries

nr_list_entries

nr_lock_classes

static

lock_class

lock_classes

MAX_LOCKDEP_KEYS

LIST_HEAD

all_lock_classes

CLASSHASH_BITS

MAX_LOCKDEP_KEYS_BITS

CLASSHASH_SIZE

UL

CLASSHASH_BITS

CLASSHASH_MASK

CLASSHASH_SIZE

__classhashfn

key

key

CLASSHASH_BITS

key

CLASSHASH_MASK

classhashentry

key

classhash_table

__classhashfn

key

static

list_head

classhash_table

CLASSHASH_SIZE

nr_lock_chains

static

lock_chain

lock_chains

MAX_LOCKDEP_CHAINS

CHAINHASH_BITS

MAX_LOCKDEP_CHAINS_BITS

CHAINHASH_SIZE

UL

CHAINHASH_BITS

CHAINHASH_MASK

CHAINHASH_SIZE

__chainhashfn

chain

chain

CHAINHASH_BITS

chain

CHAINHASH_MASK

chainhashentry

chain

chainhash_table

__chainhashfn

chain

static

list_head

chainhash_table

CHAINHASH_SIZE

iterate_chain_key

key1

key2

key1

MAX_LOCKDEP_KEYS_BITS

key1

MAX_LOCKDEP_KEYS_BITS

key2

void

lockdep_off

void

current

lockdep_recursion

EXPORT_SYMBOL

lockdep_off

void

lockdep_on

void

current

lockdep_recursion

EXPORT_SYMBOL

lockdep_on

VERBOSE

VERY_VERBOSE

VERBOSE

HARDIRQ_VERBOSE

SOFTIRQ_VERBOSE

HARDIRQ_VERBOSE

SOFTIRQ_VERBOSE

VERBOSE

HARDIRQ_VERBOSE

SOFTIRQ_VERBOSE

static

class_filter

lock_class

class

class

name_version

strcmp

class

name

return

class

name_version

strcmp

class

name

return

return

static

verbose

lock_class

class

VERBOSE

return

class_filter

class

return

CONFIG_TRACE_IRQFLAGS

static

hardirq_verbose

lock_class

class

HARDIRQ_VERBOSE

return

class_filter

class

return

static

softirq_verbose

lock_class

class

SOFTIRQ_VERBOSE

return

class_filter

class

return

nr_stack_trace_entries

static

stack_trace

MAX_STACK_TRACE_ENTRIES

static

save_trace

stack_trace

trace

trace

nr_entries

trace

max_entries

MAX_STACK_TRACE_ENTRIES

nr_stack_trace_entries

trace

entries

stack_trace

nr_stack_trace_entries

trace

skip

save_stack_trace

trace

trace

max_entries

trace

nr_entries

nr_stack_trace_entries

trace

nr_entries

nr_stack_trace_entries

MAX_STACK_TRACE_ENTRIES

debug_locks_off_graph_unlock

return

printk

printk

dump_stack

return

return

nr_hardirq_chains

nr_softirq_chains

nr_process_chains

max_lockdep_depth

max_recursion_depth

CONFIG_DEBUG_LOCKDEP

static

lockdep_init_error

atomic_t

chain_lookup_hits

atomic_t

chain_lookup_misses

atomic_t

hardirqs_on_events

atomic_t

hardirqs_off_events

atomic_t

redundant_hardirqs_on

atomic_t

redundant_hardirqs_off

atomic_t

softirqs_on_events

atomic_t

softirqs_off_events

atomic_t

redundant_softirqs_on

atomic_t

redundant_softirqs_off

atomic_t

nr_unused_locks

atomic_t

nr_cyclic_checks

atomic_t

nr_cyclic_check_recursions

atomic_t

nr_find_usage_forwards_checks

atomic_t

nr_find_usage_forwards_recursions

atomic_t

nr_find_usage_backwards_checks

atomic_t

nr_find_usage_backwards_recursions

debug_atomic_inc

ptr

atomic_inc

ptr

debug_atomic_dec

ptr

atomic_dec

ptr

debug_atomic_read

ptr

atomic_read

ptr

debug_atomic_inc

ptr

debug_atomic_dec

ptr

debug_atomic_read

ptr

static

usage_str

LOCK_USED

LOCK_USED_IN_HARDIRQ

LOCK_USED_IN_SOFTIRQ

LOCK_ENABLED_SOFTIRQS

LOCK_ENABLED_HARDIRQS

LOCK_USED_IN_HARDIRQ_READ

LOCK_USED_IN_SOFTIRQ_READ

LOCK_ENABLED_SOFTIRQS_READ

LOCK_ENABLED_HARDIRQS_READ

__get_key_name

lockdep_subclass_key

key

str

return

kallsyms_lookup

key

NULL

NULL

NULL

str

void

get_usage_chars

lock_class

class

c1

c2

c3

c4

c1

c2

c3

c4

class

usage_mask

LOCKF_USED_IN_HARDIRQ

c1

class

usage_mask

LOCKF_ENABLED_HARDIRQS

c1

class

usage_mask

LOCKF_USED_IN_SOFTIRQ

c2

class

usage_mask

LOCKF_ENABLED_SOFTIRQS

c2

class

usage_mask

LOCKF_ENABLED_HARDIRQS_READ

c3

class

usage_mask

LOCKF_USED_IN_HARDIRQ_READ

c3

class

usage_mask

LOCKF_ENABLED_HARDIRQS_READ

c3

class

usage_mask

LOCKF_ENABLED_SOFTIRQS_READ

c4

class

usage_mask

LOCKF_USED_IN_SOFTIRQ_READ

c4

class

usage_mask

LOCKF_ENABLED_SOFTIRQS_READ

c4

static

void

print_lock_name

lock_class

class

str

KSYM_NAME_LEN

c1

c2

c3

c4

name

get_usage_chars

class

c1

c2

c3

c4

name

class

name

name

name

__get_key_name

class

key

str

printk

name

printk

name

class

name_version

printk

class

name_version

class

subclass

printk

class

subclass

printk

c1

c2

c3

c4

static

void

print_lockdep_cache

lockdep_map

lock

name

str

KSYM_NAME_LEN

name

lock

name

name

name

__get_key_name

lock

key

subkeys

str

printk

name

static

void

print_lock

held_lock

hlock

print_lock_name

hlock

class

printk

print_ip_sym

hlock

acquire_ip

static

void

lockdep_print_held_locks

task_struct

curr

i

depth

curr

lockdep_depth

depth

printk

curr

comm

curr

pid

return

printk

depth

depth

curr

comm

curr

pid

i

i

depth

i

printk

i

print_lock

curr

held_locks

i

static

void

print_lock_class_header

lock_class

class

depth

bit

printk

depth

print_lock_name

class

printk

class

ops

printk

bit

bit

LOCK_USAGE_STATES

bit

class

usage_mask

bit

len

depth

len

printk

depth

usage_str

bit

len

printk

print_stack_trace

class

usage_traces

bit

len

printk

depth

printk

depth

print_ip_sym

class

key

static

void

print_lock_dependencies

lock_class

class

depth

lock_list

entry

DEBUG_LOCKS_WARN_ON

depth

return

print_lock_class_header

class

depth

list_for_each_entry

entry

class

locks_after

entry

DEBUG_LOCKS_WARN_ON

entry

class

return

print_lock_dependencies

entry

class

depth

printk

depth

print_stack_trace

entry

trace

printk

static

add_lock_to_list

lock_class

class

lock_class

this

list_head

head

ip

distance

lock_list

entry

entry

alloc_list_entry

entry

return

entry

class

this

entry

distance

distance

save_trace

entry

trace

return

list_add_tail_rcu

entry

entry

head

return

static

held_lock

check_source

check_target

static

noinline

print_circular_bug_entry

lock_list

target

depth

debug_locks_silent

return

printk

depth

print_lock_name

target

class

printk

print_stack_trace

target

trace

return

static

void

print_kernel_version

void

printk

init_utsname

release

strcspn

init_utsname

version

init_utsname

version

static

noinline

print_circular_bug_header

lock_list

entry

depth

task_struct

curr

current

debug_locks_off_graph_unlock

debug_locks_silent

return

printk

printk

print_kernel_version

printk

printk

curr

comm

curr

pid

print_lock

check_source

printk

print_lock

check_target

printk

printk

print_circular_bug_entry

entry

depth

return

static

noinline

print_circular_bug_tail

void

task_struct

curr

current

lock_list

this

debug_locks_silent

return

this

class

check_source

class

save_trace

this

trace

return

print_circular_bug_entry

this

printk

lockdep_print_held_locks

curr

printk

dump_stack

return

RECURSION_LIMIT

static

noinline

print_infinite_recursion_bug

void

debug_locks_off_graph_unlock

return

WARN_ON

return

static

noinline

check_noncircular

lock_class

source

depth

lock_list

entry

debug_atomic_inc

nr_cyclic_check_recursions

depth

max_recursion_depth

max_recursion_depth

depth

depth

RECURSION_LIMIT

return

print_infinite_recursion_bug

list_for_each_entry

entry

source

locks_after

entry

entry

class

check_target

class

return

print_circular_bug_header

entry

depth

debug_atomic_inc

nr_cyclic_checks

check_noncircular

entry

class

depth

return

print_circular_bug_entry

entry

depth

return

static

very_verbose

lock_class

class

VERY_VERBOSE

return

class_filter

class

return

CONFIG_TRACE_IRQFLAGS

static

enum

lock_usage_bit

find_usage_bit

static

lock_class

forwards_match

backwards_match

static

noinline

find_usage_forwards

lock_class

source

depth

lock_list

entry

ret

depth

max_recursion_depth

max_recursion_depth

depth

depth

RECURSION_LIMIT

return

print_infinite_recursion_bug

debug_atomic_inc

nr_find_usage_forwards_checks

source

usage_mask

find_usage_bit

forwards_match

source

return

list_for_each_entry

entry

source

locks_after

entry

debug_atomic_inc

nr_find_usage_forwards_recursions

ret

find_usage_forwards

entry

class

depth

ret

ret

return

ret

return

static

noinline

find_usage_backwards

lock_class

source

depth

lock_list

entry

ret

__raw_spin_is_locked

lockdep_lock

return

DEBUG_LOCKS_WARN_ON

depth

max_recursion_depth

max_recursion_depth

depth

depth

RECURSION_LIMIT

return

print_infinite_recursion_bug

debug_atomic_inc

nr_find_usage_backwards_checks

source

usage_mask

find_usage_bit

backwards_match

source

return

list_for_each_entry

entry

source

locks_before

entry

debug_atomic_inc

nr_find_usage_backwards_recursions

ret

find_usage_backwards

entry

class

depth

ret

ret

return

ret

return

static

print_bad_irq_dependency

task_struct

curr

held_lock

prev

held_lock

next

enum

lock_usage_bit

bit1

enum

lock_usage_bit

bit2

irqclass

debug_locks_off_graph_unlock

debug_locks_silent

return

printk

printk

irqclass

irqclass

print_kernel_version

printk

printk

curr

comm

curr

pid

curr

hardirq_context

hardirq_count

HARDIRQ_SHIFT

curr

softirq_context

softirq_count

SOFTIRQ_SHIFT

curr

hardirqs_enabled

curr

softirqs_enabled

print_lock

next

printk

print_lock

prev

printk

print_lock_name

prev

class

printk

print_lock_name

next

class

printk

printk

irqclass

print_lock_name

backwards_match

printk

irqclass

print_stack_trace

backwards_match

usage_traces

bit1

printk

irqclass

print_lock_name

forwards_match

printk

irqclass

printk

print_stack_trace

forwards_match

usage_traces

bit2

printk

lockdep_print_held_locks

curr

printk

irqclass

print_lock_dependencies

backwards_match

printk

irqclass

print_lock_dependencies

forwards_match

printk

dump_stack

return

static

check_usage

task_struct

curr

held_lock

prev

held_lock

next

enum

lock_usage_bit

bit_backwards

enum

lock_usage_bit

bit_forwards

irqclass

ret

find_usage_bit

bit_backwards

ret

find_usage_backwards

prev

class

ret

ret

return

ret

find_usage_bit

bit_forwards

ret

find_usage_forwards

next

class

ret

ret

return

ret

return

print_bad_irq_dependency

curr

prev

next

bit_backwards

bit_forwards

irqclass

static

print_deadlock_bug

task_struct

curr

held_lock

prev

held_lock

next

debug_locks_off_graph_unlock

debug_locks_silent

return

printk

printk

print_kernel_version

printk

printk

curr

comm

curr

pid

print_lock

next

printk

print_lock

prev

printk

lockdep_print_held_locks

curr

printk

dump_stack

return

static

check_deadlock

task_struct

curr

held_lock

next

lockdep_map

next_instance

read

held_lock

prev

i

i

i

curr

lockdep_depth

i

prev

curr

held_locks

i

prev

class

next

class

read

prev

read

return

return

print_deadlock_bug

curr

prev

next

return

static

check_prev_add

task_struct

curr

held_lock

prev

held_lock

next

distance

lock_list

entry

ret

check_source

next

check_target

prev

check_noncircular

next

class

return

print_circular_bug_tail

CONFIG_TRACE_IRQFLAGS

check_usage

curr

prev

next

LOCK_USED_IN_HARDIRQ

LOCK_ENABLED_HARDIRQS

return

check_usage

curr

prev

next

LOCK_USED_IN_HARDIRQ_READ

LOCK_ENABLED_HARDIRQS

return

check_usage

curr

prev

next

LOCK_USED_IN_SOFTIRQ

LOCK_ENABLED_SOFTIRQS

return

check_usage

curr

prev

next

LOCK_USED_IN_SOFTIRQ_READ

LOCK_ENABLED_SOFTIRQS

return

next

read

prev

read

return

list_for_each_entry

entry

prev

class

locks_after

entry

entry

class

next

class

distance

entry

distance

return

ret

add_lock_to_list

prev

class

next

class

prev

class

locks_after

next

acquire_ip

distance

ret

return

ret

add_lock_to_list

next

class

prev

class

next

class

locks_before

next

acquire_ip

distance

ret

return

verbose

prev

class

verbose

next

class

graph_unlock

printk

print_lock_name

prev

class

printk

print_lock_name

next

class

printk

dump_stack

return

graph_lock

return

static

check_prevs_add

task_struct

curr

held_lock

next

depth

curr

lockdep_depth

held_lock

hlock

depth

goto

out_bug

curr

held_locks

depth

irq_context

curr

held_locks

depth

irq_context

goto

out_bug

distance

curr

lockdep_depth

depth

hlock

curr

held_locks

depth

hlock

read

check_prev_add

curr

hlock

next

distance

return

hlock

trylock

depth

depth

curr

held_locks

depth

irq_context

curr

held_locks

depth

irq_context

return

out_bug

debug_locks_off_graph_unlock

return

WARN_ON

return

static

static_obj

void

obj

start

_stext

end

_end

addr

obj

CONFIG_SMP

i

addr

start

addr

end

return

CONFIG_SMP

for_each_possible_cpu

i

start

__per_cpu_start

per_cpu_offset

i

end

__per_cpu_start

PERCPU_ENOUGH_ROOM

per_cpu_offset

i

addr

start

addr

end

return

return

is_module_address

addr

static

count_matching_names

lock_class

new_class

lock_class

class

count

new_class

name

return

list_for_each_entry

class

all_lock_classes

lock_entry

new_class

key

new_class

subclass

class

key

return

class

name_version

class

name

strcmp

class

name

new_class

name

count

max

count

class

name_version

return

count

static

inline

lock_class

look_up_lock_class

lockdep_map

lock

subclass

lockdep_subclass_key

key

list_head

hash_head

lock_class

class

CONFIG_DEBUG_LOCKDEP

unlikely

lockdep_initialized

lockdep_init

lockdep_init_error

unlikely

lock

key

lock

key

void

lock

BUILD_BUG_ON

sizeof

lock_class_key

sizeof

lock_class

key

lock

key

subkeys

subclass

hash_head

classhashentry

key

list_for_each_entry

class

hash_head

hash_entry

class

key

key

return

class

return

NULL

static

inline

lock_class

register_lock_class

lockdep_map

lock

subclass

force

lockdep_subclass_key

key

list_head

hash_head

lock_class

class

flags

class

look_up_lock_class

lock

subclass

likely

class

return

class

static_obj

lock

key

debug_locks_off

printk

printk

printk

dump_stack

return

NULL

key

lock

key

subkeys

subclass

hash_head

classhashentry

key

raw_local_irq_save

flags

graph_lock

raw_local_irq_restore

flags

return

NULL

list_for_each_entry

class

hash_head

hash_entry

class

key

key

goto

out_unlock_set

nr_lock_classes

MAX_LOCKDEP_KEYS

debug_locks_off_graph_unlock

raw_local_irq_restore

flags

return

NULL

raw_local_irq_restore

flags

printk

printk

return

NULL

class

lock_classes

nr_lock_classes

debug_atomic_inc

nr_unused_locks

class

key

key

class

name

lock

name

class

subclass

subclass

INIT_LIST_HEAD

class

lock_entry

INIT_LIST_HEAD

class

locks_before

INIT_LIST_HEAD

class

locks_after

class

name_version

count_matching_names

class

list_add_tail_rcu

class

hash_entry

hash_head

verbose

class

graph_unlock

raw_local_irq_restore

flags

printk

class

key

class

name

class

name_version

printk

class

name_version

printk

dump_stack

raw_local_irq_save

flags

graph_lock

raw_local_irq_restore

flags

return

NULL

out_unlock_set

graph_unlock

raw_local_irq_restore

flags

subclass

force

lock

class_cache

class

DEBUG_LOCKS_WARN_ON

class

subclass

subclass

return

NULL

return

class

static

inline

lookup_chain_cache

u64

chain_key

lock_class

class

list_head

hash_head

chainhashentry

chain_key

lock_chain

chain

DEBUG_LOCKS_WARN_ON

irqs_disabled

return

list_for_each_entry

chain

hash_head

entry

chain

chain_key

chain_key

cache_hit

debug_atomic_inc

chain_lookup_hits

very_verbose

class

printk

chain_key

class

key

class

name

return

very_verbose

class

printk

chain_key

class

key

class

name

graph_lock

return

list_for_each_entry

chain

hash_head

entry

chain

chain_key

chain_key

graph_unlock

goto

cache_hit

unlikely

nr_lock_chains

MAX_LOCKDEP_CHAINS

debug_locks_off_graph_unlock

return

printk

printk

return

chain

lock_chains

nr_lock_chains

chain

chain_key

chain_key

list_add_tail_rcu

chain

entry

hash_head

debug_atomic_inc

chain_lookup_misses

CONFIG_TRACE_IRQFLAGS

current

hardirq_context

nr_hardirq_chains

current

softirq_context

nr_softirq_chains

nr_process_chains

nr_process_chains

return

static

void

check_chain_key

task_struct

curr

CONFIG_DEBUG_LOCKDEP

held_lock

hlock

prev_hlock

NULL

i

id

u64

chain_key

i

i

curr

lockdep_depth

i

hlock

curr

held_locks

i

chain_key

hlock

prev_chain_key

debug_locks_off

printk

curr

lockdep_depth

i

chain_key

hlock

prev_chain_key

WARN_ON

return

id

hlock

class

lock_classes

DEBUG_LOCKS_WARN_ON

id

MAX_LOCKDEP_KEYS

return

prev_hlock

prev_hlock

irq_context

hlock

irq_context

chain_key

chain_key

iterate_chain_key

chain_key

id

prev_hlock

hlock

chain_key

curr

curr_chain_key

debug_locks_off

printk

curr

lockdep_depth

i

chain_key

curr

curr_chain_key

WARN_ON

CONFIG_TRACE_IRQFLAGS

static

print_irq_inversion_bug

task_struct

curr

lock_class

other

held_lock

this

forwards

irqclass

debug_locks_off_graph_unlock

debug_locks_silent

return

printk

printk

print_kernel_version

printk

printk

curr

comm

curr

pid

print_lock

this

forwards

printk

irqclass

printk

irqclass

print_lock_name

other

printk

printk

lockdep_print_held_locks

curr

printk

print_lock_dependencies

this

class

printk

print_lock_dependencies

other

printk

dump_stack

return

static

check_usage_forwards

task_struct

curr

held_lock

this

enum

lock_usage_bit

bit

irqclass

ret

find_usage_bit

bit

ret

find_usage_forwards

this

class

ret

ret

return

ret

return

print_irq_inversion_bug

curr

forwards_match

this

irqclass

static

check_usage_backwards

task_struct

curr

held_lock

this

enum

lock_usage_bit

bit

irqclass

ret

find_usage_bit

bit

ret

find_usage_backwards

this

class

ret

ret

return

ret

return

print_irq_inversion_bug

curr

backwards_match

this

irqclass

void

print_irqtrace_events

task_struct

curr

printk

curr

irq_events

printk

curr

hardirq_enable_event

print_ip_sym

curr

hardirq_enable_ip

printk

curr

hardirq_disable_event

print_ip_sym

curr

hardirq_disable_ip

printk

curr

softirq_enable_event

print_ip_sym

curr

softirq_enable_ip

printk

curr

softirq_disable_event

print_ip_sym

curr

softirq_disable_ip

static

print_usage_bug

task_struct

curr

held_lock

this

enum

lock_usage_bit

prev_bit

enum

lock_usage_bit

new_bit

debug_locks_off_graph_unlock

debug_locks_silent

return

printk

printk

print_kernel_version

printk

printk

usage_str

prev_bit

usage_str

new_bit

printk

curr

comm

curr

pid

trace_hardirq_context

curr

hardirq_count

HARDIRQ_SHIFT

trace_softirq_context

curr

softirq_count

SOFTIRQ_SHIFT

trace_hardirqs_enabled

curr

trace_softirqs_enabled

curr

print_lock

this

printk

usage_str

prev_bit

print_stack_trace

this

class

usage_traces

prev_bit

print_irqtrace_events

curr

printk

lockdep_print_held_locks

curr

printk

dump_stack

return

static

inline

valid_state

task_struct

curr

held_lock

this

enum

lock_usage_bit

new_bit

enum

lock_usage_bit

bad_bit

unlikely

this

class

usage_mask

bad_bit

return

print_usage_bug

curr

this

bad_bit

new_bit

return

STRICT_READ_CHECKS

static

mark_lock

task_struct

curr

held_lock

this

enum

lock_usage_bit

new_bit

new_mask

new_bit

ret

likely

this

class

usage_mask

new_mask

return

graph_lock

return

unlikely

this

class

usage_mask

new_mask

graph_unlock

return

this

class

usage_mask

new_mask

save_trace

this

class

usage_traces

new_bit

return

new_bit

CONFIG_TRACE_IRQFLAGS

case

LOCK_USED_IN_HARDIRQ

valid_state

curr

this

new_bit

LOCK_ENABLED_HARDIRQS

return

valid_state

curr

this

new_bit

LOCK_ENABLED_HARDIRQS_READ

return

check_usage_forwards

curr

this

LOCK_ENABLED_HARDIRQS

return

STRICT_READ_CHECKS

check_usage_forwards

curr

this

LOCK_ENABLED_HARDIRQS_READ

return

hardirq_verbose

this

class

ret

case

LOCK_USED_IN_SOFTIRQ

valid_state

curr

this

new_bit

LOCK_ENABLED_SOFTIRQS

return

valid_state

curr

this

new_bit

LOCK_ENABLED_SOFTIRQS_READ

return

check_usage_forwards

curr

this

LOCK_ENABLED_SOFTIRQS

return

STRICT_READ_CHECKS

check_usage_forwards

curr

this

LOCK_ENABLED_SOFTIRQS_READ

return

softirq_verbose

this

class

ret

case

LOCK_USED_IN_HARDIRQ_READ

valid_state

curr

this

new_bit

LOCK_ENABLED_HARDIRQS

return

check_usage_forwards

curr

this

LOCK_ENABLED_HARDIRQS

return

hardirq_verbose

this

class

ret

case

LOCK_USED_IN_SOFTIRQ_READ

valid_state

curr

this

new_bit

LOCK_ENABLED_SOFTIRQS

return

check_usage_forwards

curr

this

LOCK_ENABLED_SOFTIRQS

return

softirq_verbose

this

class

ret

case

LOCK_ENABLED_HARDIRQS

valid_state

curr

this

new_bit

LOCK_USED_IN_HARDIRQ

return

valid_state

curr

this

new_bit

LOCK_USED_IN_HARDIRQ_READ

return

check_usage_backwards

curr

this

LOCK_USED_IN_HARDIRQ

return

STRICT_READ_CHECKS

check_usage_backwards

curr

this

LOCK_USED_IN_HARDIRQ_READ

return

hardirq_verbose

this

class

ret

case

LOCK_ENABLED_SOFTIRQS

valid_state

curr

this

new_bit

LOCK_USED_IN_SOFTIRQ

return

valid_state

curr

this

new_bit

LOCK_USED_IN_SOFTIRQ_READ

return

check_usage_backwards

curr

this

LOCK_USED_IN_SOFTIRQ

return

STRICT_READ_CHECKS

check_usage_backwards

curr

this

LOCK_USED_IN_SOFTIRQ_READ

return

softirq_verbose

this

class

ret

case

LOCK_ENABLED_HARDIRQS_READ

valid_state

curr

this

new_bit

LOCK_USED_IN_HARDIRQ

return

STRICT_READ_CHECKS

check_usage_backwards

curr

this

LOCK_USED_IN_HARDIRQ

return

hardirq_verbose

this

class

ret

case

LOCK_ENABLED_SOFTIRQS_READ

valid_state

curr

this

new_bit

LOCK_USED_IN_SOFTIRQ

return

STRICT_READ_CHECKS

check_usage_backwards

curr

this

LOCK_USED_IN_SOFTIRQ

return

softirq_verbose

this

class

ret

case

LOCK_USED

list_add_tail_rcu

this

class

lock_entry

all_lock_classes

debug_atomic_dec

nr_unused_locks

default

debug_locks_off_graph_unlock

return

WARN_ON

return

graph_unlock

ret

printk

usage_str

new_bit

print_lock

this

print_irqtrace_events

curr

dump_stack

return

ret

CONFIG_TRACE_IRQFLAGS

static

mark_held_locks

task_struct

curr

hardirq

enum

lock_usage_bit

usage_bit

held_lock

hlock

i

i

i

curr

lockdep_depth

i

hlock

curr

held_locks

i

hardirq

hlock

read

usage_bit

LOCK_ENABLED_HARDIRQS_READ

usage_bit

LOCK_ENABLED_HARDIRQS

hlock

read

usage_bit

LOCK_ENABLED_SOFTIRQS_READ

usage_bit

LOCK_ENABLED_SOFTIRQS

mark_lock

curr

hlock

usage_bit

return

return

static

early_boot_irqs_enabled

void

early_boot_irqs_off

void

early_boot_irqs_enabled

void

early_boot_irqs_on

void

early_boot_irqs_enabled

void

trace_hardirqs_on

void

task_struct

curr

current

ip

unlikely

debug_locks

current

lockdep_recursion

return

DEBUG_LOCKS_WARN_ON

unlikely

early_boot_irqs_enabled

return

unlikely

curr

hardirqs_enabled

debug_atomic_inc

redundant_hardirqs_on

return

curr

hardirqs_enabled

ip

__builtin_return_address

DEBUG_LOCKS_WARN_ON

irqs_disabled

return

DEBUG_LOCKS_WARN_ON

current

hardirq_context

return

mark_held_locks

curr

return

curr

softirqs_enabled

mark_held_locks

curr

return

curr

hardirq_enable_ip

ip

curr

hardirq_enable_event

curr

irq_events

debug_atomic_inc

hardirqs_on_events

EXPORT_SYMBOL

trace_hardirqs_on

void

trace_hardirqs_off

void

task_struct

curr

current

unlikely

debug_locks

current

lockdep_recursion

return

DEBUG_LOCKS_WARN_ON

irqs_disabled

return

curr

hardirqs_enabled

curr

hardirqs_enabled

curr

hardirq_disable_ip

_RET_IP_

curr

hardirq_disable_event

curr

irq_events

debug_atomic_inc

hardirqs_off_events

debug_atomic_inc

redundant_hardirqs_off

EXPORT_SYMBOL

trace_hardirqs_off

void

trace_softirqs_on

ip

task_struct

curr

current

unlikely

debug_locks

return

DEBUG_LOCKS_WARN_ON

irqs_disabled

return

curr

softirqs_enabled

debug_atomic_inc

redundant_softirqs_on

return

curr

softirqs_enabled

curr

softirq_enable_ip

ip

curr

softirq_enable_event

curr

irq_events

debug_atomic_inc

softirqs_on_events

curr

hardirqs_enabled

mark_held_locks

curr

void

trace_softirqs_off

ip

task_struct

curr

current

unlikely

debug_locks

return

DEBUG_LOCKS_WARN_ON

irqs_disabled

return

curr

softirqs_enabled

curr

softirqs_enabled

curr

softirq_disable_ip

ip

curr

softirq_disable_event

curr

irq_events

debug_atomic_inc

softirqs_off_events

DEBUG_LOCKS_WARN_ON

softirq_count

debug_atomic_inc

redundant_softirqs_off

void

lockdep_init_map

lockdep_map

lock

name

lock_class_key

key

subclass

unlikely

debug_locks

return

DEBUG_LOCKS_WARN_ON

key

return

DEBUG_LOCKS_WARN_ON

name

return

static_obj

key

printk

key

DEBUG_LOCKS_WARN_ON

return

lock

name

name

lock

key

key

lock

class_cache

NULL

subclass

register_lock_class

lock

subclass

EXPORT_SYMBOL_GPL

lockdep_init_map

static

__lock_acquire

lockdep_map

lock

subclass

trylock

read

check

hardirqs_off

ip

task_struct

curr

current

lock_class

class

NULL

held_lock

hlock

depth

id

chain_head

u64

chain_key

unlikely

debug_locks

return

DEBUG_LOCKS_WARN_ON

irqs_disabled

return

unlikely

subclass

MAX_LOCKDEP_SUBCLASSES

debug_locks_off

printk

printk

return

subclass

class

lock

class_cache

unlikely

class

class

register_lock_class

lock

subclass

class

return

debug_atomic_inc

atomic_t

class

ops

very_verbose

class

printk

class

key

class

name

class

name_version

printk

class

name_version

printk

dump_stack

depth

curr

lockdep_depth

DEBUG_LOCKS_WARN_ON

depth

MAX_LOCK_DEPTH

return

hlock

curr

held_locks

depth

hlock

class

class

hlock

acquire_ip

ip

hlock

instance

lock

hlock

trylock

trylock

hlock

read

read

hlock

check

check

hlock

hardirqs_off

hardirqs_off

check

goto

out_calc_hash

CONFIG_TRACE_IRQFLAGS

trylock

read

curr

hardirq_context

mark_lock

curr

hlock

LOCK_USED_IN_HARDIRQ_READ

return

curr

softirq_context

mark_lock

curr

hlock

LOCK_USED_IN_SOFTIRQ_READ

return

curr

hardirq_context

mark_lock

curr

hlock

LOCK_USED_IN_HARDIRQ

return

curr

softirq_context

mark_lock

curr

hlock

LOCK_USED_IN_SOFTIRQ

return

hardirqs_off

read

mark_lock

curr

hlock

LOCK_ENABLED_HARDIRQS_READ

return

curr

softirqs_enabled

mark_lock

curr

hlock

LOCK_ENABLED_SOFTIRQS_READ

return

mark_lock

curr

hlock

LOCK_ENABLED_HARDIRQS

return

curr

softirqs_enabled

mark_lock

curr

hlock

LOCK_ENABLED_SOFTIRQS

return

mark_lock

curr

hlock

LOCK_USED

return

out_calc_hash

id

class

lock_classes

DEBUG_LOCKS_WARN_ON

id

MAX_LOCKDEP_KEYS

return

chain_key

curr

curr_chain_key

depth

DEBUG_LOCKS_WARN_ON

chain_key

return

chain_head

hlock

prev_chain_key

chain_key

CONFIG_TRACE_IRQFLAGS

hlock

irq_context

curr

hardirq_context

curr

softirq_context

depth

held_lock

prev_hlock

prev_hlock

curr

held_locks

depth

prev_hlock

irq_context

hlock

irq_context

chain_key

chain_head

chain_key

iterate_chain_key

chain_key

id

trylock

check

lookup_chain_cache

chain_key

class

ret

check_deadlock

curr

hlock

lock

read

ret

return

ret

hlock

read

chain_head

ret

check_prevs_add

curr

hlock

return

graph_unlock

unlikely

debug_locks

return

curr

curr_chain_key

chain_key

curr

lockdep_depth

check_chain_key

curr

CONFIG_DEBUG_LOCKDEP

unlikely

debug_locks

return

unlikely

curr

lockdep_depth

MAX_LOCK_DEPTH

debug_locks_off

printk

printk

return

unlikely

curr

lockdep_depth

max_lockdep_depth

max_lockdep_depth

curr

lockdep_depth

return

static

print_unlock_inbalance_bug

task_struct

curr

lockdep_map

lock

ip

debug_locks_off

return

debug_locks_silent

return

printk

printk

printk

printk

curr

comm

curr

pid

print_lockdep_cache

lock

printk

print_ip_sym

ip

printk

printk

lockdep_print_held_locks

curr

printk

dump_stack

return

static

check_unlock

task_struct

curr

lockdep_map

lock

ip

unlikely

debug_locks

return

DEBUG_LOCKS_WARN_ON

irqs_disabled

return

curr

lockdep_depth

return

print_unlock_inbalance_bug

curr

lock

ip

return

static

lock_release_non_nested

task_struct

curr

lockdep_map

lock

ip

held_lock

hlock

prev_hlock

depth

i

depth

curr

lockdep_depth

DEBUG_LOCKS_WARN_ON

depth

return

prev_hlock

NULL

i

depth

i

i

hlock

curr

held_locks

i

prev_hlock

prev_hlock

irq_context

hlock

irq_context

hlock

instance

lock

goto

found_it

prev_hlock

hlock

return

print_unlock_inbalance_bug

curr

lock

ip

found_it

curr

lockdep_depth

i

curr

curr_chain_key

hlock

prev_chain_key

i

i

depth

i

hlock

curr

held_locks

i

__lock_acquire

hlock

instance

hlock

class

subclass

hlock

trylock

hlock

read

hlock

check

hlock

hardirqs_off

hlock

acquire_ip

return

DEBUG_LOCKS_WARN_ON

curr

lockdep_depth

depth

return

return

static

lock_release_nested

task_struct

curr

lockdep_map

lock

ip

held_lock

hlock

depth

depth

curr

lockdep_depth

hlock

curr

held_locks

depth

hlock

instance

lock

return

lock_release_non_nested

curr

lock

ip

curr

lockdep_depth

DEBUG_LOCKS_WARN_ON

depth

hlock

prev_chain_key

return

curr

curr_chain_key

hlock

prev_chain_key

CONFIG_DEBUG_LOCKDEP

hlock

prev_chain_key

hlock

class

NULL

hlock

acquire_ip

hlock

irq_context

return

static

void

__lock_release

lockdep_map

lock

nested

ip

task_struct

curr

current

check_unlock

curr

lock

ip

return

nested

lock_release_nested

curr

lock

ip

return

lock_release_non_nested

curr

lock

ip

return

check_chain_key

curr

static

void

check_flags

flags

CONFIG_DEBUG_LOCKDEP

CONFIG_TRACE_IRQFLAGS

debug_locks

return

irqs_disabled_flags

flags

DEBUG_LOCKS_WARN_ON

current

hardirqs_enabled

DEBUG_LOCKS_WARN_ON

current

hardirqs_enabled

hardirq_count

softirq_count

DEBUG_LOCKS_WARN_ON

current

softirqs_enabled

DEBUG_LOCKS_WARN_ON

current

softirqs_enabled

debug_locks

print_irqtrace_events

current

void

lock_acquire

lockdep_map

lock

subclass

trylock

read

check

ip

flags

unlikely

current

lockdep_recursion

return

raw_local_irq_save

flags

check_flags

flags

current

lockdep_recursion

__lock_acquire

lock

subclass

trylock

read

check

irqs_disabled_flags

flags

ip

current

lockdep_recursion

raw_local_irq_restore

flags

EXPORT_SYMBOL_GPL

lock_acquire

void

lock_release

lockdep_map

lock

nested

ip

flags

unlikely

current

lockdep_recursion

return

raw_local_irq_save

flags

check_flags

flags

current

lockdep_recursion

__lock_release

lock

nested

ip

current

lockdep_recursion

raw_local_irq_restore

flags

EXPORT_SYMBOL_GPL

lock_release

void

lockdep_reset

void

flags

i

raw_local_irq_save

flags

current

curr_chain_key

current

lockdep_depth

current

lockdep_recursion

memset

current

held_locks

MAX_LOCK_DEPTH

sizeof

held_lock

nr_hardirq_chains

nr_softirq_chains

nr_process_chains

debug_locks

i

i

CHAINHASH_SIZE

i

INIT_LIST_HEAD

chainhash_table

i

raw_local_irq_restore

flags

static

void

zap_class

lock_class

class

i

i

i

nr_list_entries

i

list_entries

i

class

class

list_del_rcu

list_entries

i

entry

list_del_rcu

class

hash_entry

list_del_rcu

class

lock_entry

static

inline

within

void

addr

void

start

size

return

addr

start

addr

start

size

void

lockdep_free_key_range

void

start

size

lock_class

class

next

list_head

head

flags

i

raw_local_irq_save

flags

graph_lock

i

i

CLASSHASH_SIZE

i

head

classhash_table

i

list_empty

head

list_for_each_entry_safe

class

next

head

hash_entry

within

class

key

start

size

zap_class

class

graph_unlock

raw_local_irq_restore

flags

void

lockdep_reset_lock

lockdep_map

lock

lock_class

class

next

list_head

head

flags

i

j

raw_local_irq_save

flags

j

j

MAX_LOCKDEP_SUBCLASSES

j

class

look_up_lock_class

lock

j

class

zap_class

class

graph_lock

i

i

CLASSHASH_SIZE

i

head

classhash_table

i

list_empty

head

list_for_each_entry_safe

class

next

head

hash_entry

unlikely

class

lock

class_cache

debug_locks_off_graph_unlock

WARN_ON

goto

out_restore

graph_unlock

out_restore

raw_local_irq_restore

flags

void

lockdep_init

void

i

lockdep_initialized

return

i

i

CLASSHASH_SIZE

i

INIT_LIST_HEAD

classhash_table

i

i

i

CHAINHASH_SIZE

i

INIT_LIST_HEAD

chainhash_table

i

lockdep_initialized

void

__init

lockdep_info

void

printk

printk

MAX_LOCKDEP_SUBCLASSES

printk

MAX_LOCK_DEPTH

printk

MAX_LOCKDEP_KEYS

printk

CLASSHASH_SIZE

printk

MAX_LOCKDEP_ENTRIES

printk

MAX_LOCKDEP_CHAINS

printk

CHAINHASH_SIZE

printk

sizeof

lock_class

MAX_LOCKDEP_KEYS

sizeof

list_head

CLASSHASH_SIZE

sizeof

lock_list

MAX_LOCKDEP_ENTRIES

sizeof

lock_chain

MAX_LOCKDEP_CHAINS

sizeof

list_head

CHAINHASH_SIZE

printk

sizeof

held_lock

MAX_LOCK_DEPTH

CONFIG_DEBUG_LOCKDEP

lockdep_init_error

printk

static

inline

in_range

void

start

void

addr

void

end

return

addr

start

addr

end

static

void

print_freed_lock_bug

task_struct

curr

void

mem_from

void

mem_to

held_lock

hlock

debug_locks_off

return

debug_locks_silent

return

printk

printk

printk

printk

curr

comm

curr

pid

mem_from

mem_to

print_lock

hlock

lockdep_print_held_locks

curr

printk

dump_stack

void

debug_check_no_locks_freed

void

mem_from

mem_len

void

mem_to

mem_from

mem_len

lock_from

lock_to

task_struct

curr

current

held_lock

hlock

flags

i

unlikely

debug_locks

return

local_irq_save

flags

i

i

curr

lockdep_depth

i

hlock

curr

held_locks

i

lock_from

void

hlock

instance

lock_to

void

hlock

instance

in_range

mem_from

lock_from

mem_to

in_range

mem_from

lock_to

mem_to

print_freed_lock_bug

curr

mem_from

mem_to

hlock

local_irq_restore

flags

EXPORT_SYMBOL_GPL

debug_check_no_locks_freed

static

void

print_held_locks_bug

task_struct

curr

debug_locks_off

return

debug_locks_silent

return

printk

printk

printk

printk

curr

comm

curr

pid

lockdep_print_held_locks

curr

printk

dump_stack

void

debug_check_no_locks_held

task_struct

task

unlikely

task

lockdep_depth

print_held_locks_bug

task

void

debug_show_all_locks

void

task_struct

g

p

count

unlock

unlikely

debug_locks

printk

return

printk

retry

read_trylock

tasklist_lock

count

printk

count

count

printk

count

mdelay

goto

retry

printk

unlock

count

printk

do_each_thread

g

p

p

lockdep_depth

lockdep_print_held_locks

p

unlock

read_trylock

tasklist_lock

unlock

while_each_thread

g

p

printk

printk

unlock

read_unlock

tasklist_lock

EXPORT_SYMBOL_GPL

debug_show_all_locks

void

debug_show_held_locks

task_struct

task

unlikely

debug_locks

printk

return

lockdep_print_held_locks

task

EXPORT_SYMBOL_GPL

debug_show_held_locks

static

void

l_next

seq_file

m

void

v

loff_t

pos

lock_class

class

v

pos

class

lock_entry

next

all_lock_classes

class

list_entry

class

lock_entry

next

lock_class

lock_entry

class

NULL

m

private

class

return

class

static

void

l_start

seq_file

m

loff_t

pos

lock_class

class

m

private

class

lock_entry

all_lock_classes

next

seq_printf

m

return

class

static

void

l_stop

seq_file

m

void

v

static

count_forward_deps

lock_class

class

lock_list

entry

ret

list_for_each_entry

entry

class

locks_after

entry

ret

count_forward_deps

entry

class

return

ret

static

count_backward_deps

lock_class

class

lock_list

entry

ret

list_for_each_entry

entry

class

locks_before

entry

ret

count_backward_deps

entry

class

return

ret

static

void

print_name

seq_file

m

lock_class

class

str

name

class

name

name

name

__get_key_name

class

key

str

seq_printf

m

name

seq_printf

m

name

class

name_version

seq_printf

m

class

name_version

class

subclass

seq_printf

m

class

subclass

static

l_show

seq_file

m

void

v

nr_forward_deps

nr_backward_deps

lock_class

class

m

private

lock_list

entry

c1

c2

c3

c4

seq_printf

m

class

key

CONFIG_DEBUG_LOCKDEP

seq_printf

m

class

ops

nr_forward_deps

count_forward_deps

class

seq_printf

m

nr_forward_deps

nr_backward_deps

count_backward_deps

class

seq_printf

m

nr_backward_deps

get_usage_chars

class

c1

c2

c3

c4

seq_printf

m

c1

c2

c3

c4

seq_printf

m

print_name

m

class

seq_puts

m

list_for_each_entry

entry

class

locks_after

entry

entry

distance

seq_printf

m

entry

class

print_name

m

entry

class

seq_puts

m

seq_puts

m

return

static

seq_operations

lockdep_ops

start

l_start

next

l_next

stop

l_stop

show

l_show

static

lockdep_open

inode

inode

file

file

res

seq_open

file

lockdep_ops

res

seq_file

m

file

private_data

list_empty

all_lock_classes

m

private

list_entry

all_lock_classes

next

lock_class

lock_entry

m

private

NULL

return

res

static

file_operations

proc_lockdep_operations

open

lockdep_open

read

seq_read

llseek

seq_lseek

release

seq_release

static

void

lockdep_stats_debug_show

seq_file

m

CONFIG_DEBUG_LOCKDEP

hi1

debug_atomic_read

hardirqs_on_events

hi2

debug_atomic_read

hardirqs_off_events

hr1

debug_atomic_read

redundant_hardirqs_on

hr2

debug_atomic_read

redundant_hardirqs_off

si1

debug_atomic_read

softirqs_on_events

si2

debug_atomic_read

softirqs_off_events

sr1

debug_atomic_read

redundant_softirqs_on

sr2

debug_atomic_read

redundant_softirqs_off

seq_printf

m

debug_atomic_read

chain_lookup_misses

seq_printf

m

debug_atomic_read

chain_lookup_hits

seq_printf

m

debug_atomic_read

nr_cyclic_checks

seq_printf

m

debug_atomic_read

nr_cyclic_check_recursions

seq_printf

m

debug_atomic_read

nr_find_usage_forwards_checks

seq_printf

m

debug_atomic_read

nr_find_usage_forwards_recursions

seq_printf

m

debug_atomic_read

nr_find_usage_backwards_checks

seq_printf

m

debug_atomic_read

nr_find_usage_backwards_recursions

seq_printf

m

hi1

seq_printf

m

hi2

seq_printf

m

hr1

seq_printf

m

hr2

seq_printf

m

si1

seq_printf

m

si2

seq_printf

m

sr1

seq_printf

m

sr2

static

lockdep_stats_show

seq_file

m

void

v

lock_class

class

nr_unused

nr_uncategorized

nr_irq_safe

nr_irq_unsafe

nr_softirq_safe

nr_softirq_unsafe

nr_hardirq_safe

nr_hardirq_unsafe

nr_irq_read_safe

nr_irq_read_unsafe

nr_softirq_read_safe

nr_softirq_read_unsafe

nr_hardirq_read_safe

nr_hardirq_read_unsafe

sum_forward_deps

factor

list_for_each_entry

class

all_lock_classes

lock_entry

class

usage_mask

nr_unused

class

usage_mask

LOCKF_USED

nr_uncategorized

class

usage_mask

LOCKF_USED_IN_IRQ

nr_irq_safe

class

usage_mask

LOCKF_ENABLED_IRQS

nr_irq_unsafe

class

usage_mask

LOCKF_USED_IN_SOFTIRQ

nr_softirq_safe

class

usage_mask

LOCKF_ENABLED_SOFTIRQS

nr_softirq_unsafe

class

usage_mask

LOCKF_USED_IN_HARDIRQ

nr_hardirq_safe

class

usage_mask

LOCKF_ENABLED_HARDIRQS

nr_hardirq_unsafe

class

usage_mask

LOCKF_USED_IN_IRQ_READ

nr_irq_read_safe

class

usage_mask

LOCKF_ENABLED_IRQS_READ

nr_irq_read_unsafe

class

usage_mask

LOCKF_USED_IN_SOFTIRQ_READ

nr_softirq_read_safe

class

usage_mask

LOCKF_ENABLED_SOFTIRQS_READ

nr_softirq_read_unsafe

class

usage_mask

LOCKF_USED_IN_HARDIRQ_READ

nr_hardirq_read_safe

class

usage_mask

LOCKF_ENABLED_HARDIRQS_READ

nr_hardirq_read_unsafe

sum_forward_deps

count_forward_deps

class

CONFIG_DEBUG_LOCKDEP

DEBUG_LOCKS_WARN_ON

debug_atomic_read

nr_unused_locks

nr_unused

seq_printf

m

nr_lock_classes

MAX_LOCKDEP_KEYS

seq_printf

m

nr_list_entries

MAX_LOCKDEP_ENTRIES

seq_printf

m

sum_forward_deps

seq_printf

m

nr_irq_unsafe

nr_irq_safe

nr_hardirq_unsafe

nr_hardirq_safe

nr_list_entries

nr_list_entries

factor

sum_forward_deps

nr_list_entries

seq_printf

m

nr_lock_chains

MAX_LOCKDEP_CHAINS

CONFIG_TRACE_IRQFLAGS

seq_printf

m

nr_hardirq_chains

seq_printf

m

nr_softirq_chains

seq_printf

m

nr_process_chains

seq_printf

m

nr_stack_trace_entries

MAX_STACK_TRACE_ENTRIES

seq_printf

m

nr_hardirq_chains

nr_softirq_chains

nr_process_chains

seq_printf

m

nr_hardirq_safe

seq_printf

m

nr_hardirq_unsafe

seq_printf

m

nr_softirq_safe

seq_printf

m

nr_softirq_unsafe

seq_printf

m

nr_irq_safe

seq_printf

m

nr_irq_unsafe

seq_printf

m

nr_hardirq_read_safe

seq_printf

m

nr_hardirq_read_unsafe

seq_printf

m

nr_softirq_read_safe

seq_printf

m

nr_softirq_read_unsafe

seq_printf

m

nr_irq_read_safe

seq_printf

m

nr_irq_read_unsafe

seq_printf

m

nr_uncategorized

seq_printf

m

nr_unused

seq_printf

m

max_lockdep_depth

seq_printf

m

max_recursion_depth

lockdep_stats_debug_show

m

seq_printf

m

debug_locks

return

static

lockdep_stats_open

inode

inode

file

file

return

single_open

file

lockdep_stats_show

NULL

static

file_operations

proc_lockdep_stats_operations

open

lockdep_stats_open

read

seq_read

llseek

seq_lseek

release

single_release

static

__init

lockdep_proc_init

void

proc_dir_entry

entry

entry

create_proc_entry

S_IRUSR

NULL

entry

entry

proc_fops

proc_lockdep_operations

entry

create_proc_entry

S_IRUSR

NULL

entry

entry

proc_fops

proc_lockdep_stats_operations

return

__initcall

lockdep_proc_init

extern

module_sysfs_initialized

DEBUGP

printk

DEBUGP

fmt

a

ARCH_SHF_SMALL

ARCH_SHF_SMALL

INIT_OFFSET_MASK

UL

BITS_PER_LONG

UNSUPPORTED_MODULES

unsupported

UNSUPPORTED_MODULES

unsupported

static

__init

unsupported_setup

str

get_option

str

unsupported

return

__setup

unsupported_setup

static

DEFINE_SPINLOCK

modlist_lock

static

DEFINE_MUTEX

module_mutex

static

LIST_HEAD

modules

static

BLOCKING_NOTIFIER_HEAD

module_notify_list

register_module_notifier

notifier_block

nb

return

blocking_notifier_chain_register

module_notify_list

nb

EXPORT_SYMBOL

register_module_notifier

unregister_module_notifier

notifier_block

nb

return

blocking_notifier_chain_unregister

module_notify_list

nb

EXPORT_SYMBOL

unregister_module_notifier

static

inline

strong_try_module_get

module

mod

mod

mod

state

MODULE_STATE_COMING

return

return

try_module_get

mod

static

inline

void

add_taint_module

module

mod

flag

add_taint

flag

mod

taints

flag

void

__module_put_and_exit

module

mod

code

module_put

mod

do_exit

code

EXPORT_SYMBOL

__module_put_and_exit

static

find_sec

Elf_Ehdr

hdr

Elf_Shdr

sechdrs

secstrings

name

i

i

i

hdr

e_shnum

i

sechdrs

i

sh_flags

SHF_ALLOC

strcmp

secstrings

sechdrs

i

sh_name

name

return

i

return

extern

kernel_symbol

__start___ksymtab

extern

kernel_symbol

__stop___ksymtab

extern

kernel_symbol

__start___ksymtab_gpl

extern

kernel_symbol

__stop___ksymtab_gpl

extern

kernel_symbol

__start___ksymtab_gpl_future

extern

kernel_symbol

__stop___ksymtab_gpl_future

extern

kernel_symbol

__start___ksymtab_unused

extern

kernel_symbol

__stop___ksymtab_unused

extern

kernel_symbol

__start___ksymtab_unused_gpl

extern

kernel_symbol

__stop___ksymtab_unused_gpl

extern

kernel_symbol

__start___ksymtab_gpl_future

extern

kernel_symbol

__stop___ksymtab_gpl_future

extern

__start___kcrctab

extern

__start___kcrctab_gpl

extern

__start___kcrctab_gpl_future

extern

__start___kcrctab_unused

extern

__start___kcrctab_unused_gpl

CONFIG_MODVERSIONS

symversion

base

idx

NULL

symversion

base

idx

base

NULL

base

idx

NULL

static

kernel_symbol

lookup_symbol

name

kernel_symbol

start

kernel_symbol

stop

kernel_symbol

ks

start

ks

stop

ks

strcmp

ks

name

name

return

ks

return

NULL

static

void

printk_unused_warning

name

printk

KERN_WARNING

name

printk

KERN_WARNING

printk

KERN_WARNING

static

__find_symbol

name

module

owner

crc

gplok

module

mod

kernel_symbol

ks

owner

NULL

ks

lookup_symbol

name

__start___ksymtab

__stop___ksymtab

ks

crc

symversion

__start___kcrctab

ks

__start___ksymtab

return

ks

value

gplok

ks

lookup_symbol

name

__start___ksymtab_gpl

__stop___ksymtab_gpl

ks

crc

symversion

__start___kcrctab_gpl

ks

__start___ksymtab_gpl

return

ks

value

ks

lookup_symbol

name

__start___ksymtab_gpl_future

__stop___ksymtab_gpl_future

ks

gplok

printk

KERN_WARNING

name

printk

KERN_WARNING

crc

symversion

__start___kcrctab_gpl_future

ks

__start___ksymtab_gpl_future

return

ks

value

ks

lookup_symbol

name

__start___ksymtab_unused

__stop___ksymtab_unused

ks

printk_unused_warning

name

crc

symversion

__start___kcrctab_unused

ks

__start___ksymtab_unused

return

ks

value

gplok

ks

lookup_symbol

name

__start___ksymtab_unused_gpl

__stop___ksymtab_unused_gpl

ks

printk_unused_warning

name

crc

symversion

__start___kcrctab_unused_gpl

ks

__start___ksymtab_unused_gpl

return

ks

value

list_for_each_entry

mod

modules

list

owner

mod

ks

lookup_symbol

name

mod

syms

mod

syms

mod

num_syms

ks

crc

symversion

mod

crcs

ks

mod

syms

return

ks

value

gplok

ks

lookup_symbol

name

mod

gpl_syms

mod

gpl_syms

mod

num_gpl_syms

ks

crc

symversion

mod

gpl_crcs

ks

mod

gpl_syms

return

ks

value

ks

lookup_symbol

name

mod

unused_syms

mod

unused_syms

mod

num_unused_syms

ks

printk_unused_warning

name

crc

symversion

mod

unused_crcs

ks

mod

unused_syms

return

ks

value

gplok

ks

lookup_symbol

name

mod

unused_gpl_syms

mod

unused_gpl_syms

mod

num_unused_gpl_syms

ks

printk_unused_warning

name

crc

symversion

mod

unused_gpl_crcs

ks

mod

unused_gpl_syms

return

ks

value

ks

lookup_symbol

name

mod

gpl_future_syms

mod

gpl_future_syms

mod

num_gpl_future_syms

ks

gplok

printk

KERN_WARNING

name

printk

KERN_WARNING

crc

symversion

mod

gpl_future_crcs

ks

mod

gpl_future_syms

return

ks

value

DEBUGP

name

return

static

module

find_module

name

module

mod

list_for_each_entry

mod

modules

list

strcmp

mod

name

name

return

mod

return

NULL

CONFIG_SMP

static

pcpu_num_used

pcpu_num_allocated

static

pcpu_size

static

split_block

i

short

size

pcpu_num_used

pcpu_num_allocated

new

new

krealloc

pcpu_size

sizeof

new

pcpu_num_allocated

GFP_KERNEL

new

return

pcpu_num_allocated

pcpu_size

new

memmove

pcpu_size

i

pcpu_size

i

sizeof

pcpu_size

pcpu_num_used

i

pcpu_num_used

pcpu_size

i

size

pcpu_size

i

size

return

static

inline

block_size

val

val

return

val

return

val

extern

__per_cpu_start

__per_cpu_end

static

void

percpu_modalloc

size

align

name

extra

i

void

ptr

align

PAGE_SIZE

printk

KERN_WARNING

name

align

PAGE_SIZE

align

PAGE_SIZE

ptr

__per_cpu_start

i

i

pcpu_num_used

ptr

block_size

pcpu_size

i

i

extra

ALIGN

ptr

align

ptr

BUG_ON

i

extra

pcpu_size

i

pcpu_size

i

extra

size

pcpu_size

i

pcpu_size

i

extra

pcpu_size

i

extra

pcpu_size

i

extra

ptr

extra

pcpu_size

i

size

sizeof

split_block

i

size

return

NULL

pcpu_size

i

pcpu_size

i

return

ptr

printk

KERN_WARNING

size

return

NULL

static

void

percpu_modfree

void

freeme

i

void

ptr

__per_cpu_start

block_size

pcpu_size

i

i

pcpu_num_used

ptr

block_size

pcpu_size

i

i

ptr

freeme

pcpu_size

i

pcpu_size

i

goto

free

BUG

free

pcpu_size

i

pcpu_size

i

pcpu_size

i

pcpu_num_used

memmove

pcpu_size

i

pcpu_size

i

pcpu_num_used

i

sizeof

pcpu_size

i

i

pcpu_num_used

pcpu_size

i

pcpu_size

i

pcpu_size

i

pcpu_num_used

memmove

pcpu_size

i

pcpu_size

i

pcpu_num_used

i

sizeof

pcpu_size

static

find_pcpusec

Elf_Ehdr

hdr

Elf_Shdr

sechdrs

secstrings

return

find_sec

hdr

sechdrs

secstrings

static

percpu_modinit

void

pcpu_num_used

pcpu_num_allocated

pcpu_size

kmalloc

sizeof

pcpu_size

pcpu_num_allocated

GFP_KERNEL

pcpu_size

__per_cpu_end

__per_cpu_start

pcpu_size

PERCPU_ENOUGH_ROOM

pcpu_size

pcpu_size

printk

KERN_ERR

pcpu_num_used

return

__initcall

percpu_modinit

static

inline

void

percpu_modalloc

size

align

name

return

NULL

static

inline

void

percpu_modfree

void

pcpuptr

BUG

static

inline

find_pcpusec

Elf_Ehdr

hdr

Elf_Shdr

sechdrs

secstrings

return

static

inline

void

percpu_modcopy

void

pcpudst

void

src

size

BUG_ON

size

MODINFO_ATTR

field

static

void

setup_modinfo_

field

module

mod

s

mod

field

kstrdup

s

GFP_KERNEL

static

ssize_t

show_modinfo_

field

module_attribute

mattr

module

mod

buffer

return

sprintf

buffer

mod

field

static

modinfo_

field

_exists

module

mod

return

mod

field

NULL

static

void

free_modinfo_

field

module

mod

kfree

mod

field

mod

field

NULL

static

module_attribute

modinfo_

field

attr

name

__stringify

field

mode

owner

THIS_MODULE

show

show_modinfo_

field

setup

setup_modinfo_

field

test

modinfo_

field

_exists

free

free_modinfo_

field

MODINFO_ATTR

version

MODINFO_ATTR

srcversion

CONFIG_MODULE_UNLOAD

static

void

module_unload_init

module

mod

i

INIT_LIST_HEAD

mod

modules_which_use_me

i

i

NR_CPUS

i

local_set

mod

ref

i

count

local_set

mod

ref

raw_smp_processor_id

count

mod

waiter

current

module_use

list_head

list

module

module_which_uses

static

already_uses

module

a

module

b

module_use

use

list_for_each_entry

use

b

modules_which_use_me

list

use

module_which_uses

a

DEBUGP

a

name

b

name

return

DEBUGP

a

name

b

name

return

static

use_module

module

a

module

b

module_use

use

no_warn

b

NULL

already_uses

a

b

return

strong_try_module_get

b

return

DEBUGP

a

name

use

kmalloc

sizeof

use

GFP_ATOMIC

use

printk

a

name

module_put

b

return

use

module_which_uses

a

list_add

use

list

b

modules_which_use_me

no_warn

sysfs_create_link

b

holders_dir

a

mkobj

kobj

a

name

return

static

void

module_unload_free

module

mod

module

i

list_for_each_entry

i

modules

list

module_use

use

list_for_each_entry

use

i

modules_which_use_me

list

use

module_which_uses

mod

DEBUGP

mod

name

i

name

module_put

i

list_del

use

list

kfree

use

sysfs_remove_link

i

holders_dir

mod

name

CONFIG_MODULE_FORCE_UNLOAD

static

inline

try_force_unload

flags

ret

flags

O_TRUNC

ret

add_taint

TAINT_FORCED_RMMOD

return

ret

static

inline

try_force_unload

flags

return

stopref

module

mod

flags

forced

static

__try_stop_module

void

_sref

stopref

sref

_sref

sref

flags

O_NONBLOCK

module_refcount

sref

mod

sref

forced

try_force_unload

sref

flags

return

EWOULDBLOCK

sref

mod

state

MODULE_STATE_GOING

return

static

try_stop_module

module

mod

flags

forced

stopref

sref

mod

flags

forced

return

stop_machine_run

__try_stop_module

sref

NR_CPUS

module_refcount

module

mod

i

total

i

i

NR_CPUS

i

total

local_read

mod

ref

i

count

return

total

EXPORT_SYMBOL

module_refcount

static

void

free_module

module

mod

static

void

wait_for_zero_refcount

module

mod

mutex_unlock

module_mutex

DEBUGP

set_current_state

TASK_UNINTERRUPTIBLE

module_refcount

mod

schedule

current

state

TASK_RUNNING

mutex_lock

module_mutex

asmlinkage

sys_delete_module

__user

name_user

flags

module

mod

name

MODULE_NAME_LEN

ret

forced

capable

CAP_SYS_MODULE

return

EPERM

strncpy_from_user

name

name_user

MODULE_NAME_LEN

return

EFAULT

name

MODULE_NAME_LEN

mutex_lock_interruptible

module_mutex

return

EINTR

mod

find_module

name

mod

ret

ENOENT

goto

out

list_empty

mod

modules_which_use_me

ret

EWOULDBLOCK

goto

out

mod

state

MODULE_STATE_LIVE

DEBUGP

mod

name

ret

EBUSY

goto

out

mod

init

NULL

mod

exit

NULL

mod

unsafe

forced

try_force_unload

flags

forced

ret

EBUSY

goto

out

mod

waiter

current

ret

try_stop_module

mod

flags

forced

ret

goto

out

forced

module_refcount

mod

wait_for_zero_refcount

mod

mod

exit

NULL

mutex_unlock

module_mutex

mod

exit

mutex_lock

module_mutex

free_module

mod

out

mutex_unlock

module_mutex

return

ret

static

void

print_unload_info

seq_file

m

module

mod

module_use

use

printed_something

seq_printf

m

module_refcount

mod

list_for_each_entry

use

mod

modules_which_use_me

list

printed_something

seq_printf

m

use

module_which_uses

name

mod

unsafe

printed_something

seq_printf

m

mod

init

NULL

mod

exit

NULL

printed_something

seq_printf

m

printed_something

seq_printf

m

void

__symbol_put

symbol

module

owner

flags

crc

spin_lock_irqsave

modlist_lock

flags

__find_symbol

symbol

owner

crc

BUG

module_put

owner

spin_unlock_irqrestore

modlist_lock

flags

EXPORT_SYMBOL

__symbol_put

void

symbol_put_addr

void

addr

module

modaddr

core_kernel_text

addr

return

modaddr

module_text_address

addr

BUG

module_put

modaddr

EXPORT_SYMBOL_GPL

symbol_put_addr

static

ssize_t

show_refcnt

module_attribute

mattr

module

mod

buffer

return

sprintf

buffer

module_refcount

mod

static

module_attribute

refcnt

attr

name

mode

owner

THIS_MODULE

show

show_refcnt

void

module_put

module

module

module

cpu

get_cpu

local_dec

module

ref

cpu

count

unlikely

module_is_live

module

wake_up_process

module

waiter

put_cpu

EXPORT_SYMBOL

module_put

static

void

print_unload_info

seq_file

m

module

mod

seq_printf

m

static

inline

void

module_unload_free

module

mod

static

inline

use_module

module

a

module

b

return

strong_try_module_get

b

static

inline

void

module_unload_init

module

mod

static

ssize_t

show_initstate

module_attribute

mattr

module

mod

buffer

state

mod

state

case

MODULE_STATE_LIVE

state

case

MODULE_STATE_COMING

state

case

MODULE_STATE_GOING

state

return

sprintf

buffer

state

static

module_attribute

initstate

attr

name

mode

owner

THIS_MODULE

show

show_initstate

static

module_attribute

modinfo_attrs

modinfo_version

modinfo_srcversion

initstate

CONFIG_MODULE_UNLOAD

refcnt

NULL

static

vermagic

VERMAGIC_STRING

CONFIG_MODVERSIONS

static

check_version

Elf_Shdr

sechdrs

versindex

symname

module

mod

crc

i

num_versions

modversion_info

versions

crc

return

versions

void

sechdrs

versindex

sh_addr

num_versions

sechdrs

versindex

sh_size

sizeof

modversion_info

i

i

num_versions

i

strcmp

versions

i

name

symname

versions

i

crc

crc

return

printk

mod

name

symname

DEBUGP

crc

versions

i

crc

return

tainted

TAINT_FORCED_MODULE

printk

mod

name

symname

add_taint_module

mod

TAINT_FORCED_MODULE

return

static

inline

check_modstruct_version

Elf_Shdr

sechdrs

versindex

module

mod

crc

module

owner

__find_symbol

owner

crc

BUG

return

check_version

sechdrs

versindex

mod

crc

static

inline

same_magic

amagic

bmagic

amagic

strcspn

amagic

bmagic

strcspn

bmagic

return

strcmp

amagic

bmagic

static

inline

check_version

Elf_Shdr

sechdrs

versindex

symname

module

mod

crc

return

static

inline

check_modstruct_version

Elf_Shdr

sechdrs

versindex

module

mod

return

static

inline

same_magic

amagic

bmagic

return

strcmp

amagic

bmagic

static

resolve_symbol

Elf_Shdr

sechdrs

versindex

name

module

mod

module

owner

ret

crc

ret

__find_symbol

name

owner

crc

mod

taints

TAINT_PROPRIETARY_MODULE

ret

check_version

sechdrs

versindex

name

mod

crc

use_module

mod

owner

ret

return

ret

CONFIG_KALLSYMS

static

ssize_t

module_sect_show

module_attribute

mattr

module

mod

buf

module_sect_attr

sattr

container_of

mattr

module_sect_attr

mattr

return

sprintf

buf

sattr

address

static

void

free_sect_attrs

module_sect_attrs

sect_attrs

section

section

section

sect_attrs

nsections

section

kfree

sect_attrs

attrs

section

name

kfree

sect_attrs

static

void

add_sect_attrs

module

mod

nsect

secstrings

Elf_Shdr

sechdrs

nloaded

i

size

module_sect_attrs

sect_attrs

module_sect_attr

sattr

attribute

gattr

i

i

nsect

i

sechdrs

i

sh_flags

SHF_ALLOC

nloaded

size

ALIGN

sizeof

sect_attrs

nloaded

sizeof

sect_attrs

attrs

sizeof

sect_attrs

grp

attrs

size

nloaded

sizeof

sect_attrs

grp

attrs

sect_attrs

kzalloc

size

size

GFP_KERNEL

sect_attrs

NULL

return

sect_attrs

grp

name

sect_attrs

grp

attrs

void

sect_attrs

size

sect_attrs

nsections

sattr

sect_attrs

attrs

gattr

sect_attrs

grp

attrs

i

i

nsect

i

sechdrs

i

sh_flags

SHF_ALLOC

sattr

address

sechdrs

i

sh_addr

sattr

name

kstrdup

secstrings

sechdrs

i

sh_name

GFP_KERNEL

sattr

name

NULL

goto

out

sect_attrs

nsections

sattr

mattr

show

module_sect_show

sattr

mattr

store

NULL

sattr

mattr

attr

name

sattr

name

sattr

mattr

attr

owner

mod

sattr

mattr

attr

mode

S_IRUGO

gattr

sattr

mattr

attr

gattr

NULL

sysfs_create_group

mod

mkobj

kobj

sect_attrs

grp

goto

out

mod

sect_attrs

sect_attrs

return

out

free_sect_attrs

sect_attrs

static

void

remove_sect_attrs

module

mod

mod

sect_attrs

sysfs_remove_group

mod

mkobj

kobj

mod

sect_attrs

grp

free_sect_attrs

mod

sect_attrs

mod

sect_attrs

NULL

static

inline

void

add_sect_attrs

module

mod

nsect

sectstrings

Elf_Shdr

sechdrs

static

inline

void

remove_sect_attrs

module

mod

CONFIG_SYSFS

module_add_modinfo_attrs

module

mod

module_attribute

attr

module_attribute

temp_attr

error

i

mod

modinfo_attrs

kzalloc

sizeof

module_attribute

ARRAY_SIZE

modinfo_attrs

GFP_KERNEL

mod

modinfo_attrs

return

ENOMEM

temp_attr

mod

modinfo_attrs

i

attr

modinfo_attrs

i

error

i

attr

test

attr

test

attr

test

mod

memcpy

temp_attr

attr

sizeof

temp_attr

temp_attr

attr

owner

mod

error

sysfs_create_file

mod

mkobj

kobj

temp_attr

attr

temp_attr

return

error

void

module_remove_modinfo_attrs

module

mod

module_attribute

attr

i

i

attr

mod

modinfo_attrs

i

i

attr

attr

name

sysfs_remove_file

mod

mkobj

kobj

attr

attr

attr

free

attr

free

mod

kfree

mod

modinfo_attrs

CONFIG_SYSFS

mod_sysfs_init

module

mod

err

module_sysfs_initialized

printk

KERN_ERR

mod

name

err

EINVAL

goto

out

memset

mod

mkobj

kobj

sizeof

mod

mkobj

kobj

err

kobject_set_name

mod

mkobj

kobj

mod

name

err

goto

out

kobj_set_kset_s

mod

mkobj

module_subsys

mod

mkobj

mod

mod

kobject_init

mod

mkobj

kobj

out

return

err

mod_sysfs_setup

module

mod

kernel_param

kparam

num_params

err

err

kobject_add

mod

mkobj

kobj

err

goto

out

mod

holders_dir

kobject_add_dir

mod

mkobj

kobj

mod

holders_dir

err

ENOMEM

goto

out_unreg

err

module_param_sysfs_setup

mod

kparam

num_params

err

goto

out_unreg_holders

err

module_add_modinfo_attrs

mod

err

goto

out_unreg_param

kobject_uevent

mod

mkobj

kobj

KOBJ_ADD

return

out_unreg_param

module_param_sysfs_remove

mod

out_unreg_holders

kobject_unregister

mod

holders_dir

out_unreg

kobject_del

mod

mkobj

kobj

kobject_put

mod

mkobj

kobj

out

return

err

static

void

mod_kobject_remove

module

mod

module_remove_modinfo_attrs

mod

module_param_sysfs_remove

mod

kobject_unregister

mod

mkobj

drivers_dir

kobject_unregister

mod

holders_dir

kobject_unregister

mod

mkobj

kobj

static

__unlink_module

void

_mod

module

mod

_mod

list_del

mod

list

return

static

void

free_module

module

mod

stop_machine_run

__unlink_module

mod

NR_CPUS

remove_sect_attrs

mod

mod_kobject_remove

mod

unwind_remove_table

mod

unwind_info

module_arch_cleanup

mod

module_unload_free

mod

module_free

mod

mod

module_init

kfree

mod

args

mod

percpu

percpu_modfree

mod

percpu

lockdep_free_key_range

mod

module_core

mod

core_size

module_free

mod

mod

module_core

void

__symbol_get

symbol

module

owner

value

flags

crc

spin_lock_irqsave

modlist_lock

flags

value

__find_symbol

symbol

owner

crc

value

strong_try_module_get

owner

value

spin_unlock_irqrestore

modlist_lock

flags

return

void

value

EXPORT_SYMBOL_GPL

__symbol_get

static

verify_export_symbols

module

mod

name

NULL

i

ret

module

owner

crc

i

i

mod

num_syms

i

__find_symbol

mod

syms

i

name

owner

crc

name

mod

syms

i

name

ret

ENOEXEC

goto

dup

i

i

mod

num_gpl_syms

i

__find_symbol

mod

gpl_syms

i

name

owner

crc

name

mod

gpl_syms

i

name

ret

ENOEXEC

goto

dup

dup

ret

printk

KERN_ERR

mod

name

name

module_name

owner

return

ret

static

simplify_symbols

Elf_Shdr

sechdrs

symindex

strtab

versindex

pcpuindex

module

mod

Elf_Sym

sym

void

sechdrs

symindex

sh_addr

secbase

i

n

sechdrs

symindex

sh_size

sizeof

Elf_Sym

ret

i

i

n

i

sym

i

st_shndx

case

SHN_COMMON

DEBUGP

strtab

sym

i

st_name

printk

mod

name

ret

ENOEXEC

case

SHN_ABS

DEBUGP

sym

i

st_value

case

SHN_UNDEF

sym

i

st_value

resolve_symbol

sechdrs

versindex

strtab

sym

i

st_name

mod

sym

i

st_value

ELF_ST_BIND

sym

i

st_info

STB_WEAK

printk

KERN_WARNING

mod

name

strtab

sym

i

st_name

ret

ENOENT

default

sym

i

st_shndx

pcpuindex

secbase

mod

percpu

secbase

sechdrs

sym

i

st_shndx

sh_addr

sym

i

st_value

secbase

return

ret

static

get_offset

size

Elf_Shdr

sechdr

ret

ret

ALIGN

size

sechdr

sh_addralign

size

ret

sechdr

sh_size

return

ret

static

void

layout_sections

module

mod

Elf_Ehdr

hdr

Elf_Shdr

sechdrs

secstrings

static

masks

SHF_EXECINSTR

SHF_ALLOC

ARCH_SHF_SMALL

SHF_ALLOC

SHF_WRITE

ARCH_SHF_SMALL

SHF_WRITE

SHF_ALLOC

ARCH_SHF_SMALL

ARCH_SHF_SMALL

SHF_ALLOC

m

i

i

i

hdr

e_shnum

i

sechdrs

i

sh_entsize

UL

DEBUGP

m

m

ARRAY_SIZE

masks

m

i

i

hdr

e_shnum

i

Elf_Shdr

s

sechdrs

i

s

sh_flags

masks

m

masks

m

s

sh_flags

masks

m

s

sh_entsize

UL

strncmp

secstrings

s

sh_name

s

sh_entsize

get_offset

mod

core_size

s

DEBUGP

secstrings

s

sh_name

m

mod

core_text_size

mod

core_size

DEBUGP

m

m

ARRAY_SIZE

masks

m

i

i

hdr

e_shnum

i

Elf_Shdr

s

sechdrs

i

s

sh_flags

masks

m

masks

m

s

sh_flags

masks

m

s

sh_entsize

UL

strncmp

secstrings

s

sh_name

s

sh_entsize

get_offset

mod

init_size

s

INIT_OFFSET_MASK

DEBUGP

secstrings

s

sh_name

m

mod

init_text_size

mod

init_size

static

void

set_license

module

mod

license

license

license

license_is_gpl_compatible

license

tainted

TAINT_PROPRIETARY_MODULE

printk

KERN_WARNING

mod

name

license

add_taint_module

mod

TAINT_PROPRIETARY_MODULE

static

next_string

string

secsize

string

string

secsize

return

NULL

string

string

secsize

return

NULL

return

string

static

get_modinfo

Elf_Shdr

sechdrs

info

tag

p

taglen

strlen

tag

size

sechdrs

info

sh_size

p

sechdrs

info

sh_addr

p

p

next_string

p

size

strncmp

p

tag

taglen

p

taglen

return

p

taglen

return

NULL

static

void

setup_modinfo

module

mod

Elf_Shdr

sechdrs

infoindex

module_attribute

attr

i

i

attr

modinfo_attrs

i

i

attr

setup

attr

setup

mod

get_modinfo

sechdrs

infoindex

attr

attr

name

CONFIG_KALLSYMS

static

is_exported

name

module

mod

mod

lookup_symbol

name

__start___ksymtab

__stop___ksymtab

return

mod

lookup_symbol

name

mod

syms

mod

syms

mod

num_syms

return

return

static

elf_type

Elf_Sym

sym

Elf_Shdr

sechdrs

secstrings

module

mod

ELF_ST_BIND

sym

st_info

STB_WEAK

ELF_ST_TYPE

sym

st_info

STT_OBJECT

return

return

sym

st_shndx

SHN_UNDEF

return

sym

st_shndx

SHN_ABS

return

sym

st_shndx

SHN_LORESERVE

return

sechdrs

sym

st_shndx

sh_flags

SHF_EXECINSTR

return

sechdrs

sym

st_shndx

sh_flags

SHF_ALLOC

sechdrs

sym

st_shndx

sh_type

SHT_NOBITS

sechdrs

sym

st_shndx

sh_flags

SHF_WRITE

return

sechdrs

sym

st_shndx

sh_flags

ARCH_SHF_SMALL

return

return

sechdrs

sym

st_shndx

sh_type

SHT_NOBITS

sechdrs

sym

st_shndx

sh_flags

ARCH_SHF_SMALL

return

return

strncmp

secstrings

sechdrs

sym

st_shndx

sh_name

strlen

return

return

static

void

add_kallsyms

module

mod

Elf_Shdr

sechdrs

symindex

strindex

secstrings

i

mod

symtab

void

sechdrs

symindex

sh_addr

mod

num_symtab

sechdrs

symindex

sh_size

sizeof

Elf_Sym

mod

strtab

void

sechdrs

strindex

sh_addr

i

i

mod

num_symtab

i

mod

symtab

i

st_info

elf_type

mod

symtab

i

sechdrs

secstrings

mod

static

inline

void

add_kallsyms

module

mod

Elf_Shdr

sechdrs

symindex

strindex

secstrings

static

module

load_module

void

__user

umod

len

__user

uargs

Elf_Ehdr

hdr

Elf_Shdr

sechdrs

secstrings

args

modmagic

strtab

NULL

supported

i

symindex

strindex

setupindex

exindex

exportindex

modindex

obsparmindex

infoindex

gplindex

crcindex

gplcrcindex

versindex

pcpuindex

gplfutureindex

gplfuturecrcindex

unwindex

unusedindex

unusedcrcindex

unusedgplindex

unusedgplcrcindex

module

mod

err

void

percpu

NULL

ptr

NULL

exception_table_entry

extable

mm_segment_t

old_fs

DEBUGP

umod

len

uargs

len

sizeof

hdr

return

ERR_PTR

ENOEXEC

len

hdr

vmalloc

len

NULL

return

ERR_PTR

ENOMEM

copy_from_user

hdr

umod

len

err

EFAULT

goto

free_hdr

memcmp

hdr

e_ident

ELFMAG

hdr

e_type

ET_REL

elf_check_arch

hdr

hdr

e_shentsize

sizeof

sechdrs

err

ENOEXEC

goto

free_hdr

len

hdr

e_shoff

hdr

e_shnum

sizeof

Elf_Shdr

goto

truncated

sechdrs

void

hdr

hdr

e_shoff

secstrings

void

hdr

sechdrs

hdr

e_shstrndx

sh_offset

sechdrs

sh_addr

i

i

hdr

e_shnum

i

sechdrs

i

sh_type

SHT_NOBITS

len

sechdrs

i

sh_offset

sechdrs

i

sh_size

goto

truncated

sechdrs

i

sh_addr

size_t

hdr

sechdrs

i

sh_offset

sechdrs

i

sh_type

SHT_SYMTAB

symindex

i

strindex

sechdrs

i

sh_link

strtab

hdr

sechdrs

strindex

sh_offset

CONFIG_MODULE_UNLOAD

strncmp

secstrings

sechdrs

i

sh_name

sechdrs

i

sh_flags

SHF_ALLOC

modindex

find_sec

hdr

sechdrs

secstrings

modindex

printk

KERN_WARNING

err

ENOEXEC

goto

free_hdr

mod

void

sechdrs

modindex

sh_addr

symindex

printk

KERN_WARNING

mod

name

err

ENOEXEC

goto

free_hdr

exportindex

find_sec

hdr

sechdrs

secstrings

gplindex

find_sec

hdr

sechdrs

secstrings

gplfutureindex

find_sec

hdr

sechdrs

secstrings

unusedindex

find_sec

hdr

sechdrs

secstrings

unusedgplindex

find_sec

hdr

sechdrs

secstrings

crcindex

find_sec

hdr

sechdrs

secstrings

gplcrcindex

find_sec

hdr

sechdrs

secstrings

gplfuturecrcindex

find_sec

hdr

sechdrs

secstrings

unusedcrcindex

find_sec

hdr

sechdrs

secstrings

unusedgplcrcindex

find_sec

hdr

sechdrs

secstrings

setupindex

find_sec

hdr

sechdrs

secstrings

exindex

find_sec

hdr

sechdrs

secstrings

obsparmindex

find_sec

hdr

sechdrs

secstrings

versindex

find_sec

hdr

sechdrs

secstrings

infoindex

find_sec

hdr

sechdrs

secstrings

pcpuindex

find_pcpusec

hdr

sechdrs

secstrings

ARCH_UNWIND_SECTION_NAME

unwindex

find_sec

hdr

sechdrs

secstrings

ARCH_UNWIND_SECTION_NAME

sechdrs

infoindex

sh_flags

SHF_ALLOC

CONFIG_KALLSYMS

sechdrs

symindex

sh_flags

SHF_ALLOC

sechdrs

strindex

sh_flags

SHF_ALLOC

unwindex

sechdrs

unwindex

sh_flags

SHF_ALLOC

check_modstruct_version

sechdrs

versindex

mod

err

ENOEXEC

goto

free_hdr

modmagic

get_modinfo

sechdrs

infoindex

modmagic

add_taint_module

mod

TAINT_FORCED_MODULE

printk

KERN_WARNING

mod

name

same_magic

modmagic

vermagic

printk

KERN_ERR

mod

name

modmagic

vermagic

err

ENOEXEC

goto

free_hdr

supported

get_modinfo

sechdrs

infoindex

supported

strcmp

supported

tainted

TAINT_EXTERNAL_SUPPORT

strcmp

supported

supported

NULL

supported

unsupported

printk

KERN_WARNING

mod

name

err

ENOEXEC

goto

free_hdr

tainted

TAINT_NO_SUPPORT

unsupported

printk

KERN_WARNING

mod

name

args

strndup_user

uargs

UL

IS_ERR

args

err

PTR_ERR

args

goto

free_hdr

find_module

mod

name

err

EEXIST

goto

free_mod

mod

state

MODULE_STATE_COMING

err

module_frob_arch_sections

hdr

sechdrs

secstrings

mod

err

goto

free_mod

pcpuindex

percpu

percpu_modalloc

sechdrs

pcpuindex

sh_size

sechdrs

pcpuindex

sh_addralign

mod

name

percpu

err

ENOMEM

goto

free_mod

sechdrs

pcpuindex

sh_flags

SHF_ALLOC

mod

percpu

percpu

layout_sections

mod

hdr

sechdrs

secstrings

ptr

module_alloc

mod

core_size

ptr

err

ENOMEM

goto

free_percpu

memset

ptr

mod

core_size

mod

module_core

ptr

ptr

module_alloc

mod

init_size

ptr

mod

init_size

err

ENOMEM

goto

free_core

memset

ptr

mod

init_size

mod

module_init

ptr

DEBUGP

i

i

hdr

e_shnum

i

void

dest

sechdrs

i

sh_flags

SHF_ALLOC

sechdrs

i

sh_entsize

INIT_OFFSET_MASK

dest

mod

module_init

sechdrs

i

sh_entsize

INIT_OFFSET_MASK

dest

mod

module_core

sechdrs

i

sh_entsize

sechdrs

i

sh_type

SHT_NOBITS

memcpy

dest

void

sechdrs

i

sh_addr

sechdrs

i

sh_size

sechdrs

i

sh_addr

dest

DEBUGP

sechdrs

i

sh_addr

secstrings

sechdrs

i

sh_name

mod

void

sechdrs

modindex

sh_addr

module_unload_init

mod

mod_sysfs_init

mod

goto

cleanup

set_license

mod

get_modinfo

sechdrs

infoindex

strcmp

mod

name

add_taint

TAINT_PROPRIETARY_MODULE

strcmp

mod

name

add_taint_module

mod

TAINT_PROPRIETARY_MODULE

setup_modinfo

mod

sechdrs

infoindex

err

simplify_symbols

sechdrs

symindex

strtab

versindex

pcpuindex

mod

err

goto

cleanup

mod

num_syms

sechdrs

exportindex

sh_size

sizeof

mod

syms

mod

syms

void

sechdrs

exportindex

sh_addr

crcindex

mod

crcs

void

sechdrs

crcindex

sh_addr

mod

num_gpl_syms

sechdrs

gplindex

sh_size

sizeof

mod

gpl_syms

mod

gpl_syms

void

sechdrs

gplindex

sh_addr

gplcrcindex

mod

gpl_crcs

void

sechdrs

gplcrcindex

sh_addr

mod

num_gpl_future_syms

sechdrs

gplfutureindex

sh_size

sizeof

mod

gpl_future_syms

mod

num_unused_syms

sechdrs

unusedindex

sh_size

sizeof

mod

unused_syms

mod

num_unused_gpl_syms

sechdrs

unusedgplindex

sh_size

sizeof

mod

unused_gpl_syms

mod

gpl_future_syms

void

sechdrs

gplfutureindex

sh_addr

gplfuturecrcindex

mod

gpl_future_crcs

void

sechdrs

gplfuturecrcindex

sh_addr

mod

unused_syms

void

sechdrs

unusedindex

sh_addr

unusedcrcindex

mod

unused_crcs

void

sechdrs

unusedcrcindex

sh_addr

mod

unused_gpl_syms

void

sechdrs

unusedgplindex

sh_addr

unusedgplcrcindex

mod

unused_crcs

void

sechdrs

unusedgplcrcindex

sh_addr

CONFIG_MODVERSIONS

mod

num_syms

crcindex

mod

num_gpl_syms

gplcrcindex

mod

num_gpl_future_syms

gplfuturecrcindex

mod

num_unused_syms

unusedcrcindex

mod

num_unused_gpl_syms

unusedgplcrcindex

printk

KERN_WARNING

mod

name

add_taint_module

mod

TAINT_FORCED_MODULE

i

i

hdr

e_shnum

i

strtab

sechdrs

strindex

sh_addr

info

sechdrs

i

sh_info

info

hdr

e_shnum

sechdrs

info

sh_flags

SHF_ALLOC

sechdrs

i

sh_type

SHT_REL

err

apply_relocate

sechdrs

strtab

symindex

i

mod

sechdrs

i

sh_type

SHT_RELA

err

apply_relocate_add

sechdrs

strtab

symindex

i

mod

err

goto

cleanup

err

verify_export_symbols

mod

err

goto

cleanup

mod

num_exentries

sechdrs

exindex

sh_size

sizeof

mod

extable

mod

extable

extable

void

sechdrs

exindex

sh_addr

sort_extable

extable

extable

mod

num_exentries

percpu_modcopy

mod

percpu

void

sechdrs

pcpuindex

sh_addr

sechdrs

pcpuindex

sh_size

add_kallsyms

mod

sechdrs

symindex

strindex

secstrings

err

module_finalize

hdr

sechdrs

mod

err

goto

cleanup

old_fs

get_fs

set_fs

KERNEL_DS

mod

module_init

flush_icache_range

mod

module_init

mod

module_init

mod

init_size

flush_icache_range

mod

module_core

mod

module_core

mod

core_size

set_fs

old_fs

mod

args

args

obsparmindex

printk

KERN_WARNING

mod

name

err

parse_args

mod

name

mod

args

kernel_param

sechdrs

setupindex

sh_addr

sechdrs

setupindex

sh_size

sizeof

kernel_param

NULL

err

goto

arch_cleanup

err

mod_sysfs_setup

mod

kernel_param

sechdrs

setupindex

sh_addr

sechdrs

setupindex

sh_size

sizeof

kernel_param

err

goto

arch_cleanup

add_sect_attrs

mod

hdr

e_shnum

secstrings

sechdrs

mod

unwind_info

unwind_add_table

mod

void

sechdrs

unwindex

sh_addr

sechdrs

unwindex

sh_size

vfree

hdr

return

mod

arch_cleanup

module_arch_cleanup

mod

cleanup

module_unload_free

mod

module_free

mod

mod

module_init

free_core

module_free

mod

mod

module_core

free_percpu

percpu

percpu_modfree

percpu

free_mod

kfree

args

free_hdr

vfree

hdr

return

ERR_PTR

err

truncated

printk

KERN_ERR

len

err

ENOEXEC

goto

free_hdr

static

__link_module

void

_mod

module

mod

_mod

list_add

mod

list

modules

return

asmlinkage

sys_init_module

void

__user

umod

len

__user

uargs

module

mod

ret

capable

CAP_SYS_MODULE

return

EPERM

mutex_lock_interruptible

module_mutex

return

EINTR

mod

load_module

umod

len

uargs

IS_ERR

mod

mutex_unlock

module_mutex

return

PTR_ERR

mod

stop_machine_run

__link_module

mod

NR_CPUS

mutex_unlock

module_mutex

blocking_notifier_call_chain

module_notify_list

MODULE_STATE_COMING

mod

mod

init

NULL

ret

mod

init

ret

mod

state

MODULE_STATE_GOING

synchronize_sched

mod

unsafe

printk

KERN_ERR

mod

name

module_put

mod

mutex_lock

module_mutex

free_module

mod

mutex_unlock

module_mutex

return

ret

mutex_lock

module_mutex

mod

state

MODULE_STATE_LIVE

module_put

mod

unwind_remove_table

mod

unwind_info

module_free

mod

mod

module_init

mod

module_init

NULL

mod

init_size

mod

init_text_size

mutex_unlock

module_mutex

return

static

inline

within

addr

void

start

size

return

void

addr

start

void

addr

start

size

CONFIG_KALLSYMS

static

inline

is_arm_mapping_symbol

str

return

str

strchr

str

str

str

static

get_ksymbol

module

mod

addr

size

offset

i

best

nextval

within

addr

mod

module_init

mod

init_size

nextval

mod

module_init

mod

init_text_size

nextval

mod

module_core

mod

core_text_size

i

i

mod

num_symtab

i

mod

symtab

i

st_shndx

SHN_UNDEF

mod

symtab

i

st_value

addr

mod

symtab

i

st_value

mod

symtab

best

st_value

mod

strtab

mod

symtab

i

st_name

is_arm_mapping_symbol

mod

strtab

mod

symtab

i

st_name

best

i

mod

symtab

i

st_value

addr

mod

symtab

i

st_value

nextval

mod

strtab

mod

symtab

i

st_name

is_arm_mapping_symbol

mod

strtab

mod

symtab

i

st_name

nextval

mod

symtab

i

st_value

best

return

NULL

size

size

nextval

mod

symtab

best

st_value

offset

offset

addr

mod

symtab

best

st_value

return

mod

strtab

mod

symtab

best

st_name

module_address_lookup

addr

size

offset

modname

module

mod

list_for_each_entry

mod

modules

list

within

addr

mod

module_init

mod

init_size

within

addr

mod

module_core

mod

core_size

modname

modname

mod

name

return

get_ksymbol

mod

addr

size

offset

return

NULL

lookup_module_symbol_name

addr

symname

module

mod

mutex_lock

module_mutex

list_for_each_entry

mod

modules

list

within

addr

mod

module_init

mod

init_size

within

addr

mod

module_core

mod

core_size

sym

sym

get_ksymbol

mod

addr

NULL

NULL

sym

goto

out

strlcpy

symname

sym

KSYM_NAME_LEN

mutex_unlock

module_mutex

return

out

mutex_unlock

module_mutex

return

ERANGE

lookup_module_symbol_attrs

addr

size

offset

modname

name

module

mod

mutex_lock

module_mutex

list_for_each_entry

mod

modules

list

within

addr

mod

module_init

mod

init_size

within

addr

mod

module_core

mod

core_size

sym

sym

get_ksymbol

mod

addr

size

offset

sym

goto

out

modname

strlcpy

modname

mod

name

MODULE_NAME_LEN

name

strlcpy

name

sym

KSYM_NAME_LEN

mutex_unlock

module_mutex

return

out

mutex_unlock

module_mutex

return

ERANGE

CONFIG_KDB

list_head

kdb_modules

modules

module_get_kallsym

symnum

value

type

name

module_name

exported

module

mod

CONFIG_KDB

get_lock

KDB_IS_RUNNING

get_lock

get_lock

mutex_lock

module_mutex

list_for_each_entry

mod

modules

list

symnum

mod

num_symtab

value

mod

symtab

symnum

st_value

type

mod

symtab

symnum

st_info

strlcpy

name

mod

strtab

mod

symtab

symnum

st_name

KSYM_NAME_LEN

strlcpy

module_name

mod

name

MODULE_NAME_LEN

exported

is_exported

name

mod

get_lock

mutex_unlock

module_mutex

return

symnum

mod

num_symtab

get_lock

mutex_unlock

module_mutex

return

ERANGE

static

mod_find_symname

module

mod

name

i

i

i

mod

num_symtab

i

strcmp

name

mod

strtab

mod

symtab

i

st_name

mod

symtab

i

st_info

return

mod

symtab

i

st_value

return

module_kallsyms_lookup_name

name

module

mod

colon

ret

colon

strchr

name

NULL

colon

mod

find_module

name

NULL

ret

mod_find_symname

mod

colon

colon

list_for_each_entry

mod

modules

list

ret

mod_find_symname

mod

name

return

ret

static

void

m_start

seq_file

m

loff_t

pos

list_head

i

loff_t

n

mutex_lock

module_mutex

list_for_each

i

modules

n

pos

i

modules

return

NULL

return

i

static

void

m_next

seq_file

m

void

p

loff_t

pos

list_head

i

p

pos

i

next

modules

return

NULL

return

i

next

static

void

m_stop

seq_file

m

void

p

mutex_unlock

module_mutex

static

taint_flags

taints

buf

bx

taints

buf

bx

taints

TAINT_PROPRIETARY_MODULE

buf

bx

taints

TAINT_FORCED_MODULE

buf

bx

buf

bx

buf

bx

return

buf

static

m_show

seq_file

m

void

p

module

mod

list_entry

p

module

list

buf

seq_printf

m

mod

name

mod

init_size

mod

core_size

print_unload_info

m

mod

seq_printf

m

mod

state

MODULE_STATE_GOING

mod

state

MODULE_STATE_COMING

seq_printf

m

mod

module_core

mod

taints

seq_printf

m

taint_flags

mod

taints

buf

seq_printf

m

return

seq_operations

modules_op

start

m_start

next

m_next

stop

m_stop

show

m_show

exception_table_entry

search_module_extables

addr

flags

exception_table_entry

e

NULL

module

mod

spin_lock_irqsave

modlist_lock

flags

list_for_each_entry

mod

modules

list

mod

num_exentries

e

search_extable

mod

extable

mod

extable

mod

num_exentries

addr

e

spin_unlock_irqrestore

modlist_lock

flags

return

e

is_module_address

addr

flags

module

mod

spin_lock_irqsave

modlist_lock

flags

list_for_each_entry

mod

modules

list

within

addr

mod

module_core

mod

core_size

spin_unlock_irqrestore

modlist_lock

flags

return

spin_unlock_irqrestore

modlist_lock

flags

return

module

__module_text_address

addr

module

mod

list_for_each_entry

mod

modules

list

within

addr

mod

module_init

mod

init_text_size

within

addr

mod

module_core

mod

core_text_size

return

mod

return

NULL

module

module_text_address

addr

module

mod

flags

spin_lock_irqsave

modlist_lock

flags

mod

__module_text_address

addr

spin_unlock_irqrestore

modlist_lock

flags

return

mod

void

print_modules

void

module

mod

buf

printk

list_for_each_entry

mod

modules

list

printk

mod

name

taint_flags

mod

taints

buf

printk

CONFIG_SYSFS

static

make_driver_name

device_driver

drv

driver_name

driver_name

kmalloc

strlen

drv

name

strlen

drv

bus

name

GFP_KERNEL

driver_name

return

NULL

sprintf

driver_name

drv

bus

name

drv

name

return

driver_name

static

void

module_create_drivers_dir

module_kobject

mk

mk

mk

drivers_dir

return

mk

drivers_dir

kobject_add_dir

mk

kobj

void

module_add_driver

module

mod

device_driver

drv

driver_name

no_warn

module_kobject

mk

NULL

drv

return

mod

mk

mod

mkobj

drv

mod_name

kobject

mkobj

mkobj

kset_find_obj

module_subsys

drv

mod_name

mkobj

mk

container_of

mkobj

module_kobject

kobj

drv

mkobj

mk

kobject_put

mkobj

mk

return

no_warn

sysfs_create_link

drv

kobj

mk

kobj

driver_name

make_driver_name

drv

driver_name

module_create_drivers_dir

mk

no_warn

sysfs_create_link

mk

drivers_dir

drv

kobj

driver_name

kfree

driver_name

EXPORT_SYMBOL

module_add_driver

void

module_remove_driver

device_driver

drv

module_kobject

mk

NULL

driver_name

drv

return

sysfs_remove_link

drv

kobj

drv

owner

mk

drv

owner

mkobj

drv

mkobj

mk

drv

mkobj

mk

mk

drivers_dir

driver_name

make_driver_name

drv

driver_name

sysfs_remove_link

mk

drivers_dir

driver_name

kfree

driver_name

EXPORT_SYMBOL

module_remove_driver

CONFIG_MODVERSIONS

void

struct_module

module

mod

return

EXPORT_SYMBOL

struct_module

CONFIG_DEBUG_MUTEXES

void

__mutex_init

mutex

lock

name

lock_class_key

key

atomic_set

lock

count

spin_lock_init

lock

wait_lock

INIT_LIST_HEAD

lock

wait_list

debug_mutex_init

lock

name

key

EXPORT_SYMBOL

__mutex_init

static

void

fastcall

noinline

__sched

__mutex_lock_slowpath

atomic_t

lock_count

void

inline

fastcall

__sched

mutex_lock

mutex

lock

might_sleep

__mutex_fastpath_lock

lock

count

__mutex_lock_slowpath

EXPORT_SYMBOL

mutex_lock

static

void

fastcall

noinline

__sched

__mutex_unlock_slowpath

atomic_t

lock_count

void

fastcall

__sched

mutex_unlock

mutex

lock

__mutex_fastpath_unlock

lock

count

__mutex_unlock_slowpath

EXPORT_SYMBOL

mutex_unlock

static

inline

__sched

__mutex_lock_common

mutex

lock

state

subclass

task_struct

task

current

mutex_waiter

waiter

old_val

flags

spin_lock_mutex

lock

wait_lock

flags

debug_mutex_lock_common

lock

waiter

mutex_acquire

lock

dep_map

subclass

_RET_IP_

debug_mutex_add_waiter

lock

waiter

task_thread_info

task

list_add_tail

waiter

list

lock

wait_list

waiter

task

task

old_val

atomic_xchg

lock

count

old_val

unlikely

state

TASK_INTERRUPTIBLE

signal_pending

task

mutex_remove_waiter

lock

waiter

task_thread_info

task

mutex_release

lock

dep_map

_RET_IP_

spin_unlock_mutex

lock

wait_lock

flags

debug_mutex_free_waiter

waiter

return

EINTR

__set_task_state

task

state

spin_unlock_mutex

lock

wait_lock

flags

schedule

spin_lock_mutex

lock

wait_lock

flags

mutex_remove_waiter

lock

waiter

task_thread_info

task

debug_mutex_set_owner

lock

task_thread_info

task

likely

list_empty

lock

wait_list

atomic_set

lock

count

spin_unlock_mutex

lock

wait_lock

flags

debug_mutex_free_waiter

waiter

return

static

void

fastcall

noinline

__sched

__mutex_lock_slowpath

atomic_t

lock_count

mutex

lock

container_of

lock_count

mutex

count

__mutex_lock_common

lock

TASK_UNINTERRUPTIBLE

CONFIG_DEBUG_LOCK_ALLOC

void

__sched

mutex_lock_nested

mutex

lock

subclass

might_sleep

__mutex_lock_common

lock

TASK_UNINTERRUPTIBLE

subclass

EXPORT_SYMBOL_GPL

mutex_lock_nested

__sched

mutex_lock_interruptible_nested

mutex

lock

subclass

might_sleep

return

__mutex_lock_common

lock

TASK_INTERRUPTIBLE

subclass

EXPORT_SYMBOL_GPL

mutex_lock_interruptible_nested

static

fastcall

inline

void

__mutex_unlock_common_slowpath

atomic_t

lock_count

nested

mutex

lock

container_of

lock_count

mutex

count

flags

spin_lock_mutex

lock

wait_lock

flags

mutex_release

lock

dep_map

nested

_RET_IP_

debug_mutex_unlock

lock

__mutex_slowpath_needs_to_unlock

atomic_set

lock

count

list_empty

lock

wait_list

mutex_waiter

waiter

list_entry

lock

wait_list

next

mutex_waiter

list

debug_mutex_wake_waiter

lock

waiter

wake_up_process

waiter

task

debug_mutex_clear_owner

lock

spin_unlock_mutex

lock

wait_lock

flags

static

fastcall

noinline

void

__mutex_unlock_slowpath

atomic_t

lock_count

__mutex_unlock_common_slowpath

lock_count

static

fastcall

noinline

__sched

__mutex_lock_interruptible_slowpath

atomic_t

lock_count

fastcall

__sched

mutex_lock_interruptible

mutex

lock

might_sleep

return

__mutex_fastpath_lock_retval

lock

count

__mutex_lock_interruptible_slowpath

EXPORT_SYMBOL

mutex_lock_interruptible

static

fastcall

noinline

__sched

__mutex_lock_interruptible_slowpath

atomic_t

lock_count

mutex

lock

container_of

lock_count

mutex

count

return

__mutex_lock_common

lock

TASK_INTERRUPTIBLE

static

inline

__mutex_trylock_slowpath

atomic_t

lock_count

mutex

lock

container_of

lock_count

mutex

count

flags

prev

spin_lock_mutex

lock

wait_lock

flags

prev

atomic_xchg

lock

count

likely

prev

debug_mutex_set_owner

lock

current_thread_info

mutex_acquire

lock

dep_map

_RET_IP_

likely

list_empty

lock

wait_list

atomic_set

lock

count

spin_unlock_mutex

lock

wait_lock

flags

return

prev

fastcall

__sched

mutex_trylock

mutex

lock

return

__mutex_fastpath_trylock

lock

count

__mutex_trylock_slowpath

EXPORT_SYMBOL

mutex_trylock

void

debug_mutex_set_owner

mutex

lock

thread_info

new_owner

lock

owner

new_owner

void

debug_mutex_lock_common

mutex

lock

mutex_waiter

waiter

memset

waiter

MUTEX_DEBUG_INIT

sizeof

waiter

waiter

magic

waiter

INIT_LIST_HEAD

waiter

list

void

debug_mutex_wake_waiter

mutex

lock

mutex_waiter

waiter

SMP_DEBUG_LOCKS_WARN_ON

spin_is_locked

lock

wait_lock

DEBUG_LOCKS_WARN_ON

list_empty

lock

wait_list

DEBUG_LOCKS_WARN_ON

waiter

magic

waiter

DEBUG_LOCKS_WARN_ON

list_empty

waiter

list

void

debug_mutex_free_waiter

mutex_waiter

waiter

DEBUG_LOCKS_WARN_ON

list_empty

waiter

list

memset

waiter

MUTEX_DEBUG_FREE

sizeof

waiter

void

debug_mutex_add_waiter

mutex

lock

mutex_waiter

waiter

thread_info

ti

SMP_DEBUG_LOCKS_WARN_ON

spin_is_locked

lock

wait_lock

ti

task

blocked_on

waiter

waiter

lock

lock

void

mutex_remove_waiter

mutex

lock

mutex_waiter

waiter

thread_info

ti

DEBUG_LOCKS_WARN_ON

list_empty

waiter

list

DEBUG_LOCKS_WARN_ON

waiter

task

ti

task

DEBUG_LOCKS_WARN_ON

ti

task

blocked_on

waiter

ti

task

blocked_on

NULL

list_del_init

waiter

list

waiter

task

NULL

void

debug_mutex_unlock

mutex

lock

unlikely

debug_locks

return

DEBUG_LOCKS_WARN_ON

lock

owner

current_thread_info

DEBUG_LOCKS_WARN_ON

lock

magic

lock

DEBUG_LOCKS_WARN_ON

lock

wait_list

prev

lock

wait_list

next

DEBUG_LOCKS_WARN_ON

lock

owner

current_thread_info

void

debug_mutex_init

mutex

lock

name

lock_class_key

key

CONFIG_DEBUG_LOCK_ALLOC

debug_check_no_locks_freed

void

lock

sizeof

lock

lockdep_init_map

lock

dep_map

name

key

lock

owner

NULL

lock

magic

lock

void

fastcall

mutex_destroy

mutex

lock

DEBUG_LOCKS_WARN_ON

mutex_is_locked

lock

lock

magic

NULL

EXPORT_SYMBOL_GPL

mutex_destroy

nsproxy

init_nsproxy

INIT_NSPROXY

init_nsproxy

static

inline

void

get_nsproxy

nsproxy

ns

atomic_inc

ns

count

void

get_task_namespaces

task_struct

tsk

nsproxy

ns

tsk

nsproxy

ns

get_nsproxy

ns

static

inline

nsproxy

clone_nsproxy

nsproxy

orig

nsproxy

ns

ns

kmemdup

orig

sizeof

nsproxy

GFP_KERNEL

ns

atomic_set

ns

count

return

ns

static

nsproxy

create_new_namespaces

flags

task_struct

tsk

fs_struct

new_fs

nsproxy

new_nsp

new_nsp

clone_nsproxy

tsk

nsproxy

new_nsp

return

ERR_PTR

ENOMEM

new_nsp

mnt_ns

copy_mnt_ns

flags

tsk

nsproxy

mnt_ns

new_fs

IS_ERR

new_nsp

mnt_ns

goto

out_ns

new_nsp

uts_ns

copy_utsname

flags

tsk

nsproxy

uts_ns

IS_ERR

new_nsp

uts_ns

goto

out_uts

new_nsp

ipc_ns

copy_ipcs

flags

tsk

nsproxy

ipc_ns

IS_ERR

new_nsp

ipc_ns

goto

out_ipc

new_nsp

pid_ns

copy_pid_ns

flags

tsk

nsproxy

pid_ns

IS_ERR

new_nsp

pid_ns

goto

out_pid

return

new_nsp

out_pid

new_nsp

ipc_ns

put_ipc_ns

new_nsp

ipc_ns

out_ipc

new_nsp

uts_ns

put_uts_ns

new_nsp

uts_ns

out_uts

new_nsp

mnt_ns

put_mnt_ns

new_nsp

mnt_ns

out_ns

kfree

new_nsp

return

ERR_PTR

ENOMEM

copy_namespaces

flags

task_struct

tsk

nsproxy

old_ns

tsk

nsproxy

nsproxy

new_ns

err

old_ns

return

get_nsproxy

old_ns

flags

CLONE_NEWNS

CLONE_NEWUTS

CLONE_NEWIPC

return

capable

CAP_SYS_ADMIN

err

EPERM

goto

out

new_ns

create_new_namespaces

flags

tsk

tsk

fs

IS_ERR

new_ns

err

PTR_ERR

new_ns

goto

out

tsk

nsproxy

new_ns

out

put_nsproxy

old_ns

return

err

void

free_nsproxy

nsproxy

ns

ns

mnt_ns

put_mnt_ns

ns

mnt_ns

ns

uts_ns

put_uts_ns

ns

uts_ns

ns

ipc_ns

put_ipc_ns

ns

ipc_ns

ns

pid_ns

put_pid_ns

ns

pid_ns

kfree

ns

unshare_nsproxy_namespaces

unshare_flags

nsproxy

new_nsp

fs_struct

new_fs

err

unshare_flags

CLONE_NEWNS

CLONE_NEWUTS

CLONE_NEWIPC

return

CONFIG_IPC_NS

unshare_flags

CLONE_NEWIPC

return

EINVAL

CONFIG_UTS_NS

unshare_flags

CLONE_NEWUTS

return

EINVAL

capable

CAP_SYS_ADMIN

return

EPERM

new_nsp

create_new_namespaces

unshare_flags

current

new_fs

new_fs

current

fs

IS_ERR

new_nsp

err

PTR_ERR

new_nsp

return

err

panic_on_oops

tainted

static

pause_on_oops

static

pause_on_oops_flag

static

DEFINE_SPINLOCK

pause_on_oops_lock

panic_timeout

ATOMIC_NOTIFIER_HEAD

panic_notifier_list

EXPORT_SYMBOL

panic_notifier_list

static

__init

panic_setup

str

panic_timeout

simple_strtoul

str

NULL

return

__setup

panic_setup

static

no_blink

time

return

panic_blink

time

EXPORT_SYMBOL

panic_blink

NORET_TYPE

void

panic

fmt

i

static

buf

va_list

args

CONFIG_S390

caller

__builtin_return_address

preempt_disable

bust_spinlocks

va_start

args

fmt

vsnprintf

buf

sizeof

buf

fmt

args

va_end

args

printk

KERN_EMERG

buf

bust_spinlocks

crash_kexec

NULL

CONFIG_SMP

smp_send_stop

atomic_notifier_call_chain

panic_notifier_list

buf

panic_blink

panic_blink

no_blink

panic_timeout

printk

KERN_EMERG

panic_timeout

CONFIG_BOOTSPLASH

extern

splash_verbose

void

void

splash_verbose

i

i

panic_timeout

touch_nmi_watchdog

i

panic_blink

i

mdelay

i

emergency_restart

__sparc__

extern

stop_a_enabled

stop_a_enabled

printk

KERN_EMERG

CONFIG_S390

disabled_wait

caller

local_irq_enable

CONFIG_BOOTSPLASH

extern

splash_verbose

void

void

splash_verbose

i

touch_softlockup_watchdog

i

panic_blink

i

mdelay

i

EXPORT_SYMBOL

panic

print_tainted

void

static

buf

tainted

snprintf

buf

sizeof

buf

tainted

TAINT_PROPRIETARY_MODULE

tainted

TAINT_FORCED_MODULE

tainted

TAINT_UNSAFE_SMP

tainted

TAINT_FORCED_RMMOD

tainted

TAINT_MACHINE_CHECK

tainted

TAINT_BAD_PAGE

tainted

TAINT_USER

tainted

TAINT_NO_SUPPORT

tainted

TAINT_EXTERNAL_SUPPORT

snprintf

buf

sizeof

buf

return

buf

void

add_taint

flag

debug_locks

tainted

flag

EXPORT_SYMBOL

add_taint

static

__init

pause_on_oops_setup

str

pause_on_oops

simple_strtoul

str

NULL

return

__setup

pause_on_oops_setup

static

void

spin_msec

msecs

i

i

i

msecs

i

touch_nmi_watchdog

mdelay

static

void

do_oops_enter_exit

void

flags

static

spin_counter

pause_on_oops

return

spin_lock_irqsave

pause_on_oops_lock

flags

pause_on_oops_flag

pause_on_oops_flag

spin_counter

spin_counter

pause_on_oops

spin_unlock

pause_on_oops_lock

spin_msec

MSEC_PER_SEC

spin_lock

pause_on_oops_lock

spin_counter

pause_on_oops_flag

spin_counter

spin_unlock

pause_on_oops_lock

spin_msec

spin_lock

pause_on_oops_lock

spin_unlock_irqrestore

pause_on_oops_lock

flags

oops_may_print

void

return

pause_on_oops_flag

void

oops_enter

void

debug_locks_off

do_oops_enter_exit

void

oops_exit

void

do_oops_enter_exit

CONFIG_CC_STACKPROTECTOR

void

__stack_chk_fail

void

panic

EXPORT_SYMBOL

__stack_chk_fail

DEBUGP

printk

DEBUGP

fmt

a

static

inline

dash2underscore

c

c

return

return

c

static

inline

parameq

input

paramname

i

i

dash2underscore

input

i

paramname

i

i

input

i

return

return

static

parse_one

param

val

kernel_param

params

num_params

handle_unknown

param

val

i

i

i

num_params

i

parameq

param

params

i

name

DEBUGP

params

i

set

return

params

i

set

val

params

i

handle_unknown

DEBUGP

handle_unknown

return

handle_unknown

param

val

DEBUGP

param

return

ENOENT

static

next_arg

args

param

val

i

equals

in_quote

quoted

next

args

args

in_quote

quoted

i

args

i

i

args

i

in_quote

equals

args

i

equals

i

args

i

in_quote

in_quote

param

args

equals

val

NULL

args

equals

val

args

equals

val

val

args

i

args

i

quoted

args

i

args

i

args

i

args

i

next

args

i

next

args

i

next

next

return

next

parse_args

name

args

kernel_param

params

num

unknown

param

val

param

val

DEBUGP

args

args

args

args

ret

irq_was_disabled

args

next_arg

args

param

val

irq_was_disabled

irqs_disabled

ret

parse_one

param

val

params

num

unknown

irq_was_disabled

irqs_disabled

printk

KERN_WARNING

param

ret

case

ENOENT

printk

KERN_ERR

name

param

return

ret

case

ENOSPC

printk

KERN_ERR

name

val

param

return

ret

case

default

printk

KERN_ERR

name

val

param

return

ret

return

STANDARD_PARAM_DEF

name

type

format

tmptype

strtolfn

param_set_

name

val

kernel_param

kp

endp

tmptype

l

val

return

EINVAL

l

strtolfn

val

endp

endp

val

type

l

l

return

EINVAL

type

kp

arg

l

return

param_get_

name

buffer

kernel_param

kp

return

sprintf

buffer

format

type

kp

arg

STANDARD_PARAM_DEF

byte

simple_strtoul

STANDARD_PARAM_DEF

short

short

simple_strtol

STANDARD_PARAM_DEF

ushort

short

simple_strtoul

STANDARD_PARAM_DEF

simple_strtol

STANDARD_PARAM_DEF

uint

simple_strtoul

STANDARD_PARAM_DEF

simple_strtol

STANDARD_PARAM_DEF

ulong

simple_strtoul

param_set_charp

val

kernel_param

kp

val

printk

KERN_ERR

kp

name

return

EINVAL

strlen

val

printk

KERN_ERR

kp

name

return

ENOSPC

kp

arg

val

return

param_get_charp

buffer

kernel_param

kp

return

sprintf

buffer

kp

arg

param_set_bool

val

kernel_param

kp

val

val

val

case

case

case

kp

arg

return

case

case

case

kp

arg

return

return

EINVAL

param_get_bool

buffer

kernel_param

kp

return

sprintf

buffer

kp

arg

param_set_invbool

val

kernel_param

kp

boolval

ret

kernel_param

dummy

arg

boolval

ret

param_set_bool

val

dummy

ret

kp

arg

boolval

return

ret

param_get_invbool

buffer

kernel_param

kp

val

kernel_param

dummy

arg

val

val

kp

arg

return

param_get_bool

buffer

dummy

static

param_array

name

val

min

max

void

elem

elemsize

set

kernel_param

kp

num

ret

kernel_param

kp

save

kp

name

name

kp

arg

elem

val

printk

KERN_ERR

name

return

EINVAL

num

len

num

max

printk

KERN_ERR

name

max

return

EINVAL

len

strcspn

val

save

val

len

val

len

ret

set

val

kp

ret

return

ret

kp

arg

elemsize

val

len

num

save

num

min

printk

KERN_ERR

name

min

return

EINVAL

return

param_array_set

val

kernel_param

kp

kparam_array

arr

kp

arg

temp_num

return

param_array

kp

name

val

arr

max

arr

elem

arr

elemsize

arr

set

arr

num

temp_num

param_array_get

buffer

kernel_param

kp

i

off

ret

kparam_array

arr

kp

arg

kernel_param

p

p

kp

i

off

i

arr

num

arr

num

arr

max

i

i

buffer

off

p

arg

arr

elem

arr

elemsize

i

ret

arr

get

buffer

off

p

ret

return

ret

off

ret

buffer

off

return

off

param_set_copystring

val

kernel_param

kp

kparam_string

kps

kp

arg

val

printk

KERN_ERR

kp

name

return

EINVAL

strlen

val

kps

maxlen

printk

KERN_ERR

kp

name

kps

maxlen

return

ENOSPC

strcpy

kps

string

val

return

param_get_string

buffer

kernel_param

kp

kparam_string

kps

kp

arg

return

strlcpy

buffer

kps

string

kps

maxlen

extern

kernel_param

__start___param

__stop___param

MAX_KBUILD_MODNAME

KOBJ_NAME_LEN

param_attribute

module_attribute

mattr

kernel_param

param

module_param_attrs

attribute_group

grp

param_attribute

attrs

CONFIG_SYSFS

to_param_attr

n

container_of

n

param_attribute

mattr

static

ssize_t

param_attr_show

module_attribute

mattr

module

mod

buf

count

param_attribute

attribute

to_param_attr

mattr

attribute

param

get

return

EPERM

count

attribute

param

get

buf

attribute

param

count

strcat

buf

count

return

count

static

ssize_t

param_attr_store

module_attribute

mattr

module

owner

buf

size_t

len

err

param_attribute

attribute

to_param_attr

mattr

attribute

param

set

return

EPERM

err

attribute

param

set

buf

attribute

param

err

return

len

return

err

CONFIG_MODULES

__modinit

__modinit

__init

CONFIG_SYSFS

static

__modinit

module_param_attrs

param_sysfs_setup

module_kobject

mk

kernel_param

kparam

num_params

name_skip

module_param_attrs

mp

valid_attrs

i

size

param_attribute

pattr

attribute

gattr

err

i

i

num_params

i

kparam

i

perm

valid_attrs

valid_attrs

return

NULL

size

ALIGN

sizeof

mp

valid_attrs

sizeof

mp

attrs

sizeof

mp

grp

attrs

size

valid_attrs

sizeof

mp

grp

attrs

mp

kmalloc

size

size

GFP_KERNEL

mp

return

ERR_PTR

ENOMEM

mp

grp

name

mp

grp

attrs

void

mp

size

pattr

mp

attrs

gattr

mp

grp

attrs

i

i

num_params

i

kernel_param

kp

kparam

i

kp

perm

pattr

param

kp

pattr

mattr

show

param_attr_show

pattr

mattr

store

param_attr_store

pattr

mattr

attr

name

kp

name

name_skip

pattr

mattr

attr

owner

mk

mod

pattr

mattr

attr

mode

kp

perm

gattr

pattr

mattr

attr

gattr

NULL

err

sysfs_create_group

mk

kobj

mp

grp

kfree

mp

return

ERR_PTR

err

return

mp

CONFIG_MODULES

module_param_sysfs_setup

module

mod

kernel_param

kparam

num_params

module_param_attrs

mp

mp

param_sysfs_setup

mod

mkobj

kparam

num_params

IS_ERR

mp

return

PTR_ERR

mp

mod

param_attrs

mp

return

void

module_param_sysfs_remove

module

mod

mod

param_attrs

sysfs_remove_group

mod

mkobj

kobj

mod

param_attrs

grp

kfree

mod

param_attrs

mod

param_attrs

NULL

static

void

__init

kernel_param_sysfs_setup

name

kernel_param

kparam

num_params

name_skip

module_kobject

mk

ret

mk

kzalloc

sizeof

module_kobject

GFP_KERNEL

BUG_ON

mk

mk

mod

THIS_MODULE

kobj_set_kset_s

mk

module_subsys

kobject_set_name

mk

kobj

name

kobject_init

mk

kobj

ret

kobject_add

mk

kobj

BUG_ON

ret

param_sysfs_setup

mk

kparam

num_params

name_skip

kobject_uevent

mk

kobj

KOBJ_ADD

static

void

__init

param_sysfs_builtin

void

kernel_param

kp

kp_begin

NULL

i

name_len

count

modname

MAX_KBUILD_MODNAME

i

i

__stop___param

__start___param

i

dot

size_t

max_name_len

kp

__start___param

i

max_name_len

min_t

size_t

MAX_KBUILD_MODNAME

strlen

kp

name

dot

memchr

kp

name

max_name_len

dot

DEBUGP

MAX_KBUILD_MODNAME

kp

name

name_len

dot

kp

name

strlen

modname

name_len

strncmp

modname

kp

name

name_len

count

kernel_param_sysfs_setup

modname

kp_begin

count

strlen

modname

strncpy

modname

kp

name

name_len

modname

name_len

count

kp_begin

kp

count

count

kernel_param_sysfs_setup

modname

kp_begin

count

strlen

modname

to_module_attr

n

container_of

n

module_attribute

attr

to_module_kobject

n

container_of

n

module_kobject

kobj

static

ssize_t

module_attr_show

kobject

kobj

attribute

attr

buf

module_attribute

attribute

module_kobject

mk

ret

attribute

to_module_attr

attr

mk

to_module_kobject

kobj

attribute

show

return

EIO

ret

attribute

show

attribute

mk

mod

buf

return

ret

static

ssize_t

module_attr_store

kobject

kobj

attribute

attr

buf

size_t

len

module_attribute

attribute

module_kobject

mk

ret

attribute

to_module_attr

attr

mk

to_module_kobject

kobj

attribute

store

return

EIO

ret

attribute

store

attribute

mk

mod

buf

len

return

ret

static

sysfs_ops

module_sysfs_ops

show

module_attr_show

store

module_attr_store

static

kobj_type

module_ktype

static

uevent_filter

kset

kset

kobject

kobj

kobj_type

ktype

get_ktype

kobj

ktype

module_ktype

return

return

static

kset_uevent_ops

module_uevent_ops

filter

uevent_filter

decl_subsys

module

module_ktype

module_uevent_ops

module_sysfs_initialized

static

kobj_type

module_ktype

sysfs_ops

module_sysfs_ops

static

__init

param_sysfs_init

void

ret

ret

subsystem_register

module_subsys

ret

printk

KERN_WARNING

__FILE__

__LINE__

ret

return

ret

module_sysfs_initialized

param_sysfs_builtin

return

subsys_initcall

param_sysfs_init

static

sysfs_ops

module_sysfs_ops

show

NULL

store

NULL

EXPORT_SYMBOL

param_set_byte

EXPORT_SYMBOL

param_get_byte

EXPORT_SYMBOL

param_set_short

EXPORT_SYMBOL

param_get_short

EXPORT_SYMBOL

param_set_ushort

EXPORT_SYMBOL

param_get_ushort

EXPORT_SYMBOL

param_set_int

EXPORT_SYMBOL

param_get_int

EXPORT_SYMBOL

param_set_uint

EXPORT_SYMBOL

param_get_uint

EXPORT_SYMBOL

param_set_long

EXPORT_SYMBOL

param_get_long

EXPORT_SYMBOL

param_set_ulong

EXPORT_SYMBOL

param_get_ulong

EXPORT_SYMBOL

param_set_charp

EXPORT_SYMBOL

param_get_charp

EXPORT_SYMBOL

param_set_bool

EXPORT_SYMBOL

param_get_bool

EXPORT_SYMBOL

param_set_invbool

EXPORT_SYMBOL

param_get_invbool

EXPORT_SYMBOL

param_array_set

EXPORT_SYMBOL

param_array_get

EXPORT_SYMBOL

param_set_copystring

EXPORT_SYMBOL

param_get_string

pid_hashfn

nr

hash_long

nr

pidhash_shift

static

hlist_head

pid_hash

static

pidhash_shift

static

kmem_cache

pid_cachep

pid

init_struct_pid

INIT_STRUCT_PID

pid_max

PID_MAX_DEFAULT

RESERVED_PIDS

pid_max_min

RESERVED_PIDS

pid_max_max

PID_MAX_LIMIT

BITS_PER_PAGE

PAGE_SIZE

BITS_PER_PAGE_MASK

BITS_PER_PAGE

static

inline

mk_pid

pid_namespace

pid_ns

pidmap

map

off

return

map

pid_ns

pidmap

BITS_PER_PAGE

off

find_next_offset

map

off

find_next_zero_bit

map

page

BITS_PER_PAGE

off

pid_namespace

init_pid_ns

kref

refcount

ATOMIC_INIT

pidmap

PIDMAP_ENTRIES

ATOMIC_INIT

BITS_PER_PAGE

NULL

last_pid

child_reaper

init_task

static

__cacheline_aligned_in_smp

DEFINE_SPINLOCK

pidmap_lock

static

fastcall

void

free_pidmap

pid_namespace

pid_ns

pid

pidmap

map

pid_ns

pidmap

pid

BITS_PER_PAGE

offset

pid

BITS_PER_PAGE_MASK

clear_bit

offset

map

page

atomic_inc

map

nr_free

static

alloc_pidmap

pid_namespace

pid_ns

i

offset

max_scan

pid

last

pid_ns

last_pid

pidmap

map

pid

last

pid

pid_max

pid

RESERVED_PIDS

offset

pid

BITS_PER_PAGE_MASK

map

pid_ns

pidmap

pid

BITS_PER_PAGE

max_scan

pid_max

BITS_PER_PAGE

BITS_PER_PAGE

offset

i

i

max_scan

i

unlikely

map

page

void

page

kzalloc

PAGE_SIZE

GFP_KERNEL

spin_lock_irq

pidmap_lock

map

page

kfree

page

map

page

page

spin_unlock_irq

pidmap_lock

unlikely

map

page

likely

atomic_read

map

nr_free

test_and_set_bit

offset

map

page

atomic_dec

map

nr_free

pid_ns

last_pid

pid

return

pid

offset

find_next_offset

map

offset

pid

mk_pid

pid_ns

map

offset

offset

BITS_PER_PAGE

pid

pid_max

i

max_scan

pid

last

last

BITS_PER_PAGE_MASK

map

pid_ns

pidmap

pid_max

BITS_PER_PAGE

map

offset

map

pid_ns

pidmap

offset

RESERVED_PIDS

unlikely

last

offset

pid

mk_pid

pid_ns

map

offset

return

static

next_pidmap

pid_namespace

pid_ns

last

offset

pidmap

map

end

offset

last

BITS_PER_PAGE_MASK

map

pid_ns

pidmap

last

BITS_PER_PAGE

end

pid_ns

pidmap

PIDMAP_ENTRIES

map

end

map

offset

unlikely

map

page

offset

find_next_bit

map

page

BITS_PER_PAGE

offset

offset

BITS_PER_PAGE

return

mk_pid

pid_ns

map

offset

return

fastcall

void

put_pid

pid

pid

pid

return

atomic_read

pid

count

atomic_dec_and_test

pid

count

kmem_cache_free

pid_cachep

pid

EXPORT_SYMBOL_GPL

put_pid

static

void

delayed_put_pid

rcu_head

rhp

pid

pid

container_of

rhp

pid

rcu

put_pid

pid

fastcall

void

free_pid

pid

pid

flags

spin_lock_irqsave

pidmap_lock

flags

hlist_del_rcu

pid

pid_chain

spin_unlock_irqrestore

pidmap_lock

flags

free_pidmap

init_pid_ns

pid

nr

call_rcu

pid

rcu

delayed_put_pid

pid

alloc_pid

void

pid

pid

enum

pid_type

type

nr

pid

kmem_cache_alloc

pid_cachep

GFP_KERNEL

pid

goto

out

nr

alloc_pidmap

current

nsproxy

pid_ns

nr

goto

out_free

atomic_set

pid

count

pid

nr

nr

type

type

PIDTYPE_MAX

type

INIT_HLIST_HEAD

pid

tasks

type

spin_lock_irq

pidmap_lock

hlist_add_head_rcu

pid

pid_chain

pid_hash

pid_hashfn

pid

nr

spin_unlock_irq

pidmap_lock

out

return

pid

out_free

kmem_cache_free

pid_cachep

pid

pid

NULL

goto

out

pid

fastcall

find_pid

nr

hlist_node

elem

pid

pid

hlist_for_each_entry_rcu

pid

elem

pid_hash

pid_hashfn

nr

pid_chain

pid

nr

nr

return

pid

return

NULL

EXPORT_SYMBOL_GPL

find_pid

fastcall

attach_pid

task_struct

task

enum

pid_type

type

pid

pid

pid_link

link

link

task

pids

type

link

pid

pid

hlist_add_head_rcu

link

node

pid

tasks

type

return

void

fastcall

detach_pid

task_struct

task

enum

pid_type

type

pid_link

link

pid

pid

tmp

link

task

pids

type

pid

link

pid

hlist_del_rcu

link

node

link

pid

NULL

tmp

PIDTYPE_MAX

tmp

hlist_empty

pid

tasks

tmp

return

free_pid

pid

void

fastcall

transfer_pid

task_struct

old

task_struct

new

enum

pid_type

type

new

pids

type

pid

old

pids

type

pid

hlist_replace_rcu

old

pids

type

node

new

pids

type

node

old

pids

type

pid

NULL

task_struct

fastcall

pid_task

pid

pid

enum

pid_type

type

task_struct

result

NULL

pid

hlist_node

first

first

rcu_dereference

pid

tasks

type

first

first

result

hlist_entry

first

task_struct

pids

type

node

return

result

task_struct

find_task_by_pid_type

type

nr

return

pid_task

find_pid

nr

type

EXPORT_SYMBOL

find_task_by_pid_type

pid

get_task_pid

task_struct

task

enum

pid_type

type

pid

pid

rcu_read_lock

pid

get_pid

task

pids

type

pid

rcu_read_unlock

return

pid

task_struct

fastcall

get_pid_task

pid

pid

enum

pid_type

type

task_struct

result

rcu_read_lock

result

pid_task

pid

type

result

get_task_struct

result

rcu_read_unlock

return

result

pid

find_get_pid

pid_t

nr

pid

pid

rcu_read_lock

pid

get_pid

find_pid

nr

rcu_read_unlock

return

pid

pid

find_ge_pid

nr

pid

pid

pid

find_pid

nr

pid

nr

next_pidmap

current

nsproxy

pid_ns

nr

nr

return

pid

EXPORT_SYMBOL_GPL

find_get_pid

pid_namespace

copy_pid_ns

flags

pid_namespace

old_ns

BUG_ON

old_ns

get_pid_ns

old_ns

return

old_ns

void

free_pid_ns

kref

kref

pid_namespace

ns

ns

container_of

kref

pid_namespace

kref

kfree

ns

void

__init

pidhash_init

void

i

pidhash_size

megabytes

nr_kernel_pages

PAGE_SHIFT

pidhash_shift

max

fls

megabytes

pidhash_shift

min

pidhash_shift

pidhash_size

pidhash_shift

printk

pidhash_size

pidhash_shift

pidhash_size

sizeof

hlist_head

pid_hash

alloc_bootmem

pidhash_size

sizeof

pid_hash

pid_hash

panic

i

i

pidhash_size

i

INIT_HLIST_HEAD

pid_hash

i

void

__init

pidmap_init

void

init_pid_ns

pidmap

page

kzalloc

PAGE_SIZE

GFP_KERNEL

set_bit

init_pid_ns

pidmap

page

atomic_dec

init_pid_ns

pidmap

nr_free

pid_cachep

KMEM_CACHE

pid

SLAB_PANIC

static

check_clock

clockid_t

which_clock

error

task_struct

p

pid_t

pid

CPUCLOCK_PID

which_clock

CPUCLOCK_WHICH

which_clock

CPUCLOCK_MAX

return

EINVAL

pid

return

read_lock

tasklist_lock

p

find_task_by_pid

pid

p

CPUCLOCK_PERTHREAD

which_clock

p

tgid

current

tgid

p

tgid

pid

error

EINVAL

read_unlock

tasklist_lock

return

error

static

inline

union

cpu_time_count

timespec_to_sample

clockid_t

which_clock

timespec

tp

union

cpu_time_count

ret

ret

sched

CPUCLOCK_WHICH

which_clock

CPUCLOCK_SCHED

ret

sched

tp

tv_sec

NSEC_PER_SEC

tp

tv_nsec

ret

cpu

timespec_to_cputime

tp

return

ret

static

void

sample_to_timespec

clockid_t

which_clock

union

cpu_time_count

cpu

timespec

tp

CPUCLOCK_WHICH

which_clock

CPUCLOCK_SCHED

tp

tv_sec

div_long_long_rem

cpu

sched

NSEC_PER_SEC

tp

tv_nsec

cputime_to_timespec

cpu

cpu

tp

static

inline

cpu_time_before

clockid_t

which_clock

union

cpu_time_count

now

union

cpu_time_count

then

CPUCLOCK_WHICH

which_clock

CPUCLOCK_SCHED

return

now

sched

then

sched

return

cputime_lt

now

cpu

then

cpu

static

inline

void

cpu_time_add

clockid_t

which_clock

union

cpu_time_count

acc

union

cpu_time_count

val

CPUCLOCK_WHICH

which_clock

CPUCLOCK_SCHED

acc

sched

val

sched

acc

cpu

cputime_add

acc

cpu

val

cpu

static

inline

union

cpu_time_count

cpu_time_sub

clockid_t

which_clock

union

cpu_time_count

a

union

cpu_time_count

b

CPUCLOCK_WHICH

which_clock

CPUCLOCK_SCHED

a

sched

b

sched

a

cpu

cputime_sub

a

cpu

b

cpu

return

a

static

inline

cputime_t

cputime_div_non_zero

cputime_t

time

div

cputime_t

res

cputime_div

time

div

return

max_t

cputime_t

res

static

void

bump_cpu_timer

k_itimer

timer

union

cpu_time_count

now

i

timer

it

cpu

incr

sched

return

CPUCLOCK_WHICH

timer

it_clock

CPUCLOCK_SCHED

delta

incr

now

sched

timer

it

cpu

expires

sched

return

incr

timer

it

cpu

incr

sched

delta

now

sched

incr

timer

it

cpu

expires

sched

i

incr

delta

incr

i

incr

incr

i

incr

i

delta

incr

timer

it

cpu

expires

sched

incr

timer

it_overrun

i

delta

incr

cputime_t

delta

incr

cputime_lt

now

cpu

timer

it

cpu

expires

cpu

return

incr

timer

it

cpu

incr

cpu

delta

cputime_sub

cputime_add

now

cpu

incr

timer

it

cpu

expires

cpu

i

cputime_lt

incr

cputime_sub

delta

incr

i

incr

cputime_add

incr

incr

i

incr

cputime_halve

incr

i

cputime_lt

delta

incr

timer

it

cpu

expires

cpu

cputime_add

timer

it

cpu

expires

cpu

incr

timer

it_overrun

i

delta

cputime_sub

delta

incr

static

inline

cputime_t

prof_ticks

task_struct

p

return

cputime_add

p

utime

p

stime

static

inline

cputime_t

virt_ticks

task_struct

p

return

p

utime

static

inline

sched_ns

task_struct

p

return

p

current

current_sched_time

p

p

sched_time

posix_cpu_clock_getres

clockid_t

which_clock

timespec

tp

error

check_clock

which_clock

error

tp

tv_sec

tp

tv_nsec

NSEC_PER_SEC

HZ

HZ

CPUCLOCK_WHICH

which_clock

CPUCLOCK_SCHED

tp

tv_nsec

return

error

posix_cpu_clock_set

clockid_t

which_clock

timespec

tp

error

check_clock

which_clock

error

error

EPERM

return

error

static

cpu_clock_sample

clockid_t

which_clock

task_struct

p

union

cpu_time_count

cpu

CPUCLOCK_WHICH

which_clock

default

return

EINVAL

case

CPUCLOCK_PROF

cpu

cpu

prof_ticks

p

case

CPUCLOCK_VIRT

cpu

cpu

virt_ticks

p

case

CPUCLOCK_SCHED

cpu

sched

sched_ns

p

return

static

cpu_clock_sample_group_locked

clock_idx

task_struct

p

union

cpu_time_count

cpu

task_struct

t

p

clock_idx

default

return

EINVAL

case

CPUCLOCK_PROF

cpu

cpu

cputime_add

p

signal

utime

p

signal

stime

cpu

cpu

cputime_add

cpu

cpu

prof_ticks

t

t

next_thread

t

t

p

case

CPUCLOCK_VIRT

cpu

cpu

p

signal

utime

cpu

cpu

cputime_add

cpu

cpu

virt_ticks

t

t

next_thread

t

t

p

case

CPUCLOCK_SCHED

cpu

sched

p

signal

sched_time

t

next_thread

t

p

cpu

sched

t

sched_time

cpu

sched

sched_ns

p

return

static

cpu_clock_sample_group

clockid_t

which_clock

task_struct

p

union

cpu_time_count

cpu

ret

flags

spin_lock_irqsave

p

sighand

siglock

flags

ret

cpu_clock_sample_group_locked

CPUCLOCK_WHICH

which_clock

p

cpu

spin_unlock_irqrestore

p

sighand

siglock

flags

return

ret

posix_cpu_clock_get

clockid_t

which_clock

timespec

tp

pid_t

pid

CPUCLOCK_PID

which_clock

error

EINVAL

union

cpu_time_count

rtn

pid

CPUCLOCK_PERTHREAD

which_clock

error

cpu_clock_sample

which_clock

current

rtn

read_lock

tasklist_lock

error

cpu_clock_sample_group

which_clock

current

rtn

read_unlock

tasklist_lock

task_struct

p

rcu_read_lock

p

find_task_by_pid

pid

p

CPUCLOCK_PERTHREAD

which_clock

p

tgid

current

tgid

error

cpu_clock_sample

which_clock

p

rtn

read_lock

tasklist_lock

p

tgid

pid

p

signal

error

cpu_clock_sample_group

which_clock

p

rtn

read_unlock

tasklist_lock

rcu_read_unlock

error

return

error

sample_to_timespec

which_clock

rtn

tp

return

posix_cpu_timer_create

k_itimer

new_timer

ret

pid_t

pid

CPUCLOCK_PID

new_timer

it_clock

task_struct

p

CPUCLOCK_WHICH

new_timer

it_clock

CPUCLOCK_MAX

return

EINVAL

INIT_LIST_HEAD

new_timer

it

cpu

entry

new_timer

it

cpu

incr

sched

new_timer

it

cpu

expires

sched

read_lock

tasklist_lock

CPUCLOCK_PERTHREAD

new_timer

it_clock

pid

p

current

p

find_task_by_pid

pid

p

p

tgid

current

tgid

p

NULL

pid

p

current

group_leader

p

find_task_by_pid

pid

p

p

tgid

pid

p

NULL

new_timer

it

cpu

task

p

p

get_task_struct

p

ret

EINVAL

read_unlock

tasklist_lock

return

ret

posix_cpu_timer_del

k_itimer

timer

task_struct

p

timer

it

cpu

task

ret

likely

p

NULL

read_lock

tasklist_lock

unlikely

p

signal

NULL

BUG_ON

list_empty

timer

it

cpu

entry

spin_lock

p

sighand

siglock

timer

it

cpu

firing

ret

TIMER_RETRY

list_del

timer

it

cpu

entry

spin_unlock

p

sighand

siglock

read_unlock

tasklist_lock

ret

put_task_struct

p

return

ret

static

void

cleanup_timers

list_head

head

cputime_t

utime

cputime_t

stime

sched_time

cpu_timer_list

timer

next

cputime_t

ptime

cputime_add

utime

stime

list_for_each_entry_safe

timer

next

head

entry

list_del_init

timer

entry

cputime_lt

timer

expires

cpu

ptime

timer

expires

cpu

cputime_zero

timer

expires

cpu

cputime_sub

timer

expires

cpu

ptime

head

list_for_each_entry_safe

timer

next

head

entry

list_del_init

timer

entry

cputime_lt

timer

expires

cpu

utime

timer

expires

cpu

cputime_zero

timer

expires

cpu

cputime_sub

timer

expires

cpu

utime

head

list_for_each_entry_safe

timer

next

head

entry

list_del_init

timer

entry

timer

expires

sched

sched_time

timer

expires

sched

timer

expires

sched

sched_time

void

posix_cpu_timers_exit

task_struct

tsk

cleanup_timers

tsk

cpu_timers

tsk

utime

tsk

stime

tsk

sched_time

void

posix_cpu_timers_exit_group

task_struct

tsk

cleanup_timers

tsk

signal

cpu_timers

cputime_add

tsk

utime

tsk

signal

utime

cputime_add

tsk

stime

tsk

signal

stime

tsk

sched_time

tsk

signal

sched_time

static

void

process_timer_rebalance

task_struct

p

clock_idx

union

cpu_time_count

expires

union

cpu_time_count

val

cputime_t

ticks

left

ns

nsleft

task_struct

t

p

nthreads

atomic_read

p

signal

live

nthreads

return

clock_idx

default

BUG

case

CPUCLOCK_PROF

left

cputime_div_non_zero

cputime_sub

expires

cpu

val

cpu

nthreads

likely

t

flags

PF_EXITING

ticks

cputime_add

prof_ticks

t

left

cputime_eq

t

it_prof_expires

cputime_zero

cputime_gt

t

it_prof_expires

ticks

t

it_prof_expires

ticks

t

next_thread

t

t

p

case

CPUCLOCK_VIRT

left

cputime_div_non_zero

cputime_sub

expires

cpu

val

cpu

nthreads

likely

t

flags

PF_EXITING

ticks

cputime_add

virt_ticks

t

left

cputime_eq

t

it_virt_expires

cputime_zero

cputime_gt

t

it_virt_expires

ticks

t

it_virt_expires

ticks

t

next_thread

t

t

p

case

CPUCLOCK_SCHED

nsleft

expires

sched

val

sched

do_div

nsleft

nthreads

nsleft

max_t

nsleft

likely

t

flags

PF_EXITING

ns

t

sched_time

nsleft

t

it_sched_expires

t

it_sched_expires

ns

t

it_sched_expires

ns

t

next_thread

t

t

p

static

void

clear_dead_task

k_itimer

timer

union

cpu_time_count

now

put_task_struct

timer

it

cpu

task

timer

it

cpu

task

NULL

timer

it

cpu

expires

cpu_time_sub

timer

it_clock

timer

it

cpu

expires

now

static

void

arm_timer

k_itimer

timer

union

cpu_time_count

now

task_struct

p

timer

it

cpu

task

list_head

head

listpos

cpu_timer_list

nt

timer

it

cpu

cpu_timer_list

next

i

head

CPUCLOCK_PERTHREAD

timer

it_clock

p

cpu_timers

p

signal

cpu_timers

head

CPUCLOCK_WHICH

timer

it_clock

BUG_ON

irqs_disabled

spin_lock

p

sighand

siglock

listpos

head

CPUCLOCK_WHICH

timer

it_clock

CPUCLOCK_SCHED

list_for_each_entry

next

head

entry

next

expires

sched

nt

expires

sched

listpos

next

entry

list_for_each_entry

next

head

entry

cputime_gt

next

expires

cpu

nt

expires

cpu

listpos

next

entry

list_add

nt

entry

listpos

listpos

head

CPUCLOCK_PERTHREAD

timer

it_clock

CPUCLOCK_WHICH

timer

it_clock

default

BUG

case

CPUCLOCK_PROF

cputime_eq

p

it_prof_expires

cputime_zero

cputime_gt

p

it_prof_expires

nt

expires

cpu

p

it_prof_expires

nt

expires

cpu

case

CPUCLOCK_VIRT

cputime_eq

p

it_virt_expires

cputime_zero

cputime_gt

p

it_virt_expires

nt

expires

cpu

p

it_virt_expires

nt

expires

cpu

case

CPUCLOCK_SCHED

p

it_sched_expires

p

it_sched_expires

nt

expires

sched

p

it_sched_expires

nt

expires

sched

CPUCLOCK_WHICH

timer

it_clock

default

BUG

case

CPUCLOCK_VIRT

cputime_eq

p

signal

it_virt_expires

cputime_zero

cputime_lt

p

signal

it_virt_expires

timer

it

cpu

expires

cpu

goto

rebalance

case

CPUCLOCK_PROF

cputime_eq

p

signal

it_prof_expires

cputime_zero

cputime_lt

p

signal

it_prof_expires

timer

it

cpu

expires

cpu

i

p

signal

rlim

RLIMIT_CPU

rlim_cur

i

RLIM_INFINITY

i

cputime_to_secs

timer

it

cpu

expires

cpu

goto

rebalance

case

CPUCLOCK_SCHED

rebalance

process_timer_rebalance

timer

it

cpu

task

CPUCLOCK_WHICH

timer

it_clock

timer

it

cpu

expires

now

spin_unlock

p

sighand

siglock

static

void

cpu_timer_fire

k_itimer

timer

unlikely

timer

sigq

NULL

wake_up_process

timer

it_process

timer

it

cpu

expires

sched

timer

it

cpu

incr

sched

posix_timer_event

timer

timer

it

cpu

expires

sched

posix_timer_event

timer

timer

it_requeue_pending

posix_cpu_timer_schedule

timer

posix_cpu_timer_set

k_itimer

timer

flags

itimerspec

new

itimerspec

old

task_struct

p

timer

it

cpu

task

union

cpu_time_count

old_expires

new_expires

val

ret

unlikely

p

NULL

return

ESRCH

new_expires

timespec_to_sample

timer

it_clock

new

it_value

read_lock

tasklist_lock

unlikely

p

signal

NULL

read_unlock

tasklist_lock

put_task_struct

p

timer

it

cpu

task

NULL

return

ESRCH

BUG_ON

irqs_disabled

ret

spin_lock

p

sighand

siglock

old_expires

timer

it

cpu

expires

unlikely

timer

it

cpu

firing

timer

it

cpu

firing

ret

TIMER_RETRY

list_del_init

timer

it

cpu

entry

spin_unlock

p

sighand

siglock

CPUCLOCK_PERTHREAD

timer

it_clock

cpu_clock_sample

timer

it_clock

p

val

cpu_clock_sample_group

timer

it_clock

p

val

old

old_expires

sched

old

it_value

tv_sec

old

it_value

tv_nsec

bump_cpu_timer

timer

val

cpu_time_before

timer

it_clock

val

timer

it

cpu

expires

old_expires

cpu_time_sub

timer

it_clock

timer

it

cpu

expires

val

sample_to_timespec

timer

it_clock

old_expires

old

it_value

old

it_value

tv_nsec

old

it_value

tv_sec

unlikely

ret

read_unlock

tasklist_lock

goto

out

new_expires

sched

flags

TIMER_ABSTIME

cpu_time_add

timer

it_clock

new_expires

val

timer

it

cpu

expires

new_expires

new_expires

sched

timer

it_sigev_notify

SIGEV_THREAD_ID

SIGEV_NONE

cpu_time_before

timer

it_clock

val

new_expires

arm_timer

timer

val

read_unlock

tasklist_lock

timer

it

cpu

incr

timespec_to_sample

timer

it_clock

new

it_interval

timer

it_requeue_pending

timer

it_requeue_pending

REQUEUE_PENDING

timer

it_overrun_last

timer

it_overrun

new_expires

sched

timer

it_sigev_notify

SIGEV_THREAD_ID

SIGEV_NONE

cpu_time_before

timer

it_clock

val

new_expires

cpu_timer_fire

timer

ret

out

old

sample_to_timespec

timer

it_clock

timer

it

cpu

incr

old

it_interval

return

ret

void

posix_cpu_timer_get

k_itimer

timer

itimerspec

itp

union

cpu_time_count

now

task_struct

p

timer

it

cpu

task

clear_dead

sample_to_timespec

timer

it_clock

timer

it

cpu

incr

itp

it_interval

timer

it

cpu

expires

sched

itp

it_value

tv_sec

itp

it_value

tv_nsec

return

unlikely

p

NULL

dead

sample_to_timespec

timer

it_clock

timer

it

cpu

expires

itp

it_value

return

CPUCLOCK_PERTHREAD

timer

it_clock

cpu_clock_sample

timer

it_clock

p

now

clear_dead

p

exit_state

read_lock

tasklist_lock

unlikely

p

signal

NULL

put_task_struct

p

timer

it

cpu

task

NULL

timer

it

cpu

expires

sched

read_unlock

tasklist_lock

goto

dead

cpu_clock_sample_group

timer

it_clock

p

now

clear_dead

unlikely

p

exit_state

thread_group_empty

p

read_unlock

tasklist_lock

timer

it_sigev_notify

SIGEV_THREAD_ID

SIGEV_NONE

timer

it

cpu

incr

sched

cpu_time_before

timer

it_clock

timer

it

cpu

expires

now

timer

it

cpu

expires

sched

itp

it_value

tv_sec

itp

it_value

tv_nsec

return

bump_cpu_timer

timer

now

unlikely

clear_dead

clear_dead_task

timer

now

goto

dead

cpu_time_before

timer

it_clock

now

timer

it

cpu

expires

sample_to_timespec

timer

it_clock

cpu_time_sub

timer

it_clock

timer

it

cpu

expires

now

itp

it_value

itp

it_value

tv_nsec

itp

it_value

tv_sec

static

void

check_thread_timers

task_struct

tsk

list_head

firing

maxfire

list_head

timers

tsk

cpu_timers

maxfire

tsk

it_prof_expires

cputime_zero

list_empty

timers

cpu_timer_list

t

list_first_entry

timers

cpu_timer_list

entry

maxfire

cputime_lt

prof_ticks

tsk

t

expires

cpu

tsk

it_prof_expires

t

expires

cpu

t

firing

list_move_tail

t

entry

firing

timers

maxfire

tsk

it_virt_expires

cputime_zero

list_empty

timers

cpu_timer_list

t

list_first_entry

timers

cpu_timer_list

entry

maxfire

cputime_lt

virt_ticks

tsk

t

expires

cpu

tsk

it_virt_expires

t

expires

cpu

t

firing

list_move_tail

t

entry

firing

timers

maxfire

tsk

it_sched_expires

list_empty

timers

cpu_timer_list

t

list_first_entry

timers

cpu_timer_list

entry

maxfire

tsk

sched_time

t

expires

sched

tsk

it_sched_expires

t

expires

sched

t

firing

list_move_tail

t

entry

firing

static

void

check_process_timers

task_struct

tsk

list_head

firing

maxfire

signal_struct

sig

tsk

signal

cputime_t

utime

stime

ptime

virt_expires

prof_expires

sched_time

sched_expires

task_struct

t

list_head

timers

sig

cpu_timers

list_empty

timers

CPUCLOCK_PROF

cputime_eq

sig

it_prof_expires

cputime_zero

sig

rlim

RLIMIT_CPU

rlim_cur

RLIM_INFINITY

list_empty

timers

CPUCLOCK_VIRT

cputime_eq

sig

it_virt_expires

cputime_zero

list_empty

timers

CPUCLOCK_SCHED

return

utime

sig

utime

stime

sig

stime

sched_time

sig

sched_time

t

tsk

utime

cputime_add

utime

t

utime

stime

cputime_add

stime

t

stime

sched_time

t

sched_time

t

next_thread

t

t

tsk

ptime

cputime_add

utime

stime

maxfire

prof_expires

cputime_zero

list_empty

timers

cpu_timer_list

t

list_first_entry

timers

cpu_timer_list

entry

maxfire

cputime_lt

ptime

t

expires

cpu

prof_expires

t

expires

cpu

t

firing

list_move_tail

t

entry

firing

timers

maxfire

virt_expires

cputime_zero

list_empty

timers

cpu_timer_list

t

list_first_entry

timers

cpu_timer_list

entry

maxfire

cputime_lt

utime

t

expires

cpu

virt_expires

t

expires

cpu

t

firing

list_move_tail

t

entry

firing

timers

maxfire

sched_expires

list_empty

timers

cpu_timer_list

t

list_first_entry

timers

cpu_timer_list

entry

maxfire

sched_time

t

expires

sched

sched_expires

t

expires

sched

t

firing

list_move_tail

t

entry

firing

cputime_eq

sig

it_prof_expires

cputime_zero

cputime_ge

ptime

sig

it_prof_expires

sig

it_prof_expires

sig

it_prof_incr

cputime_eq

sig

it_prof_expires

cputime_zero

sig

it_prof_expires

cputime_add

sig

it_prof_expires

ptime

__group_send_sig_info

SIGPROF

SEND_SIG_PRIV

tsk

cputime_eq

sig

it_prof_expires

cputime_zero

cputime_eq

prof_expires

cputime_zero

cputime_lt

sig

it_prof_expires

prof_expires

prof_expires

sig

it_prof_expires

cputime_eq

sig

it_virt_expires

cputime_zero

cputime_ge

utime

sig

it_virt_expires

sig

it_virt_expires

sig

it_virt_incr

cputime_eq

sig

it_virt_expires

cputime_zero

sig

it_virt_expires

cputime_add

sig

it_virt_expires

utime

__group_send_sig_info

SIGVTALRM

SEND_SIG_PRIV

tsk

cputime_eq

sig

it_virt_expires

cputime_zero

cputime_eq

virt_expires

cputime_zero

cputime_lt

sig

it_virt_expires

virt_expires

virt_expires

sig

it_virt_expires

sig

rlim

RLIMIT_CPU

rlim_cur

RLIM_INFINITY

psecs

cputime_to_secs

ptime

cputime_t

x

psecs

sig

rlim

RLIMIT_CPU

rlim_max

__group_send_sig_info

SIGKILL

SEND_SIG_PRIV

tsk

return

psecs

sig

rlim

RLIMIT_CPU

rlim_cur

__group_send_sig_info

SIGXCPU

SEND_SIG_PRIV

tsk

sig

rlim

RLIMIT_CPU

rlim_cur

sig

rlim

RLIMIT_CPU

rlim_max

sig

rlim

RLIMIT_CPU

rlim_cur

x

secs_to_cputime

sig

rlim

RLIMIT_CPU

rlim_cur

cputime_eq

prof_expires

cputime_zero

cputime_lt

x

prof_expires

prof_expires

x

cputime_eq

prof_expires

cputime_zero

cputime_eq

virt_expires

cputime_zero

sched_expires

cputime_t

prof_left

virt_left

ticks

sched_left

sched

nthreads

atomic_read

sig

live

nthreads

return

prof_left

cputime_sub

prof_expires

utime

prof_left

cputime_sub

prof_left

stime

prof_left

cputime_div_non_zero

prof_left

nthreads

virt_left

cputime_sub

virt_expires

utime

virt_left

cputime_div_non_zero

virt_left

nthreads

sched_expires

sched_left

sched_expires

sched_time

do_div

sched_left

nthreads

sched_left

max_t

sched_left

sched_left

t

tsk

unlikely

t

flags

PF_EXITING

ticks

cputime_add

cputime_add

t

utime

t

stime

prof_left

cputime_eq

prof_expires

cputime_zero

cputime_eq

t

it_prof_expires

cputime_zero

cputime_gt

t

it_prof_expires

ticks

t

it_prof_expires

ticks

ticks

cputime_add

t

utime

virt_left

cputime_eq

virt_expires

cputime_zero

cputime_eq

t

it_virt_expires

cputime_zero

cputime_gt

t

it_virt_expires

ticks

t

it_virt_expires

ticks

sched

t

sched_time

sched_left

sched_expires

t

it_sched_expires

t

it_sched_expires

sched

t

it_sched_expires

sched

t

next_thread

t

tsk

void

posix_cpu_timer_schedule

k_itimer

timer

task_struct

p

timer

it

cpu

task

union

cpu_time_count

now

unlikely

p

NULL

goto

out

CPUCLOCK_PERTHREAD

timer

it_clock

cpu_clock_sample

timer

it_clock

p

now

bump_cpu_timer

timer

now

unlikely

p

exit_state

clear_dead_task

timer

now

goto

out

read_lock

tasklist_lock

read_lock

tasklist_lock

unlikely

p

signal

NULL

put_task_struct

p

timer

it

cpu

task

p

NULL

timer

it

cpu

expires

sched

goto

out_unlock

unlikely

p

exit_state

thread_group_empty

p

clear_dead_task

timer

now

goto

out_unlock

cpu_clock_sample_group

timer

it_clock

p

now

bump_cpu_timer

timer

now

arm_timer

timer

now

out_unlock

read_unlock

tasklist_lock

out

timer

it_overrun_last

timer

it_overrun

timer

it_overrun

timer

it_requeue_pending

void

run_posix_cpu_timers

task_struct

tsk

LIST_HEAD

firing

k_itimer

timer

next

BUG_ON

irqs_disabled

UNEXPIRED

clock

cputime_eq

tsk

it_

clock

_expires

cputime_zero

cputime_lt

clock

_ticks

tsk

tsk

it_

clock

_expires

UNEXPIRED

prof

UNEXPIRED

virt

tsk

it_sched_expires

tsk

sched_time

tsk

it_sched_expires

return

undef

UNEXPIRED

read_lock

tasklist_lock

likely

tsk

signal

NULL

spin_lock

tsk

sighand

siglock

check_thread_timers

tsk

firing

check_process_timers

tsk

firing

spin_unlock

tsk

sighand

siglock

read_unlock

tasklist_lock

list_for_each_entry_safe

timer

next

firing

it

cpu

entry

firing

spin_lock

timer

it_lock

list_del_init

timer

it

cpu

entry

firing

timer

it

cpu

firing

timer

it

cpu

firing

likely

firing

cpu_timer_fire

timer

spin_unlock

timer

it_lock

void

set_process_cpu_timer

task_struct

tsk

clock_idx

cputime_t

newval

cputime_t

oldval

union

cpu_time_count

now

list_head

head

BUG_ON

clock_idx

CPUCLOCK_SCHED

cpu_clock_sample_group_locked

clock_idx

tsk

now

oldval

cputime_eq

oldval

cputime_zero

cputime_le

oldval

now

cpu

oldval

jiffies_to_cputime

oldval

cputime_sub

oldval

now

cpu

cputime_eq

newval

cputime_zero

return

newval

cputime_add

newval

now

cpu

tsk

signal

rlim

RLIMIT_CPU

rlim_cur

cputime_to_secs

newval

return

head

tsk

signal

cpu_timers

clock_idx

list_empty

head

cputime_ge

list_first_entry

head

cpu_timer_list

entry

expires

cpu

newval

union

cpu_time_count

expires

sched

expires

cpu

newval

process_timer_rebalance

tsk

clock_idx

expires

now

static

do_cpu_nanosleep

clockid_t

which_clock

flags

timespec

rqtp

itimerspec

it

k_itimer

timer

error

memset

timer

sizeof

timer

spin_lock_init

timer

it_lock

timer

it_clock

which_clock

timer

it_overrun

error

posix_cpu_timer_create

timer

timer

it_process

current

error

static

itimerspec

zero_it

memset

it

sizeof

it

it

it_value

rqtp

spin_lock_irq

timer

it_lock

error

posix_cpu_timer_set

timer

flags

it

NULL

error

spin_unlock_irq

timer

it_lock

return

error

signal_pending

current

timer

it

cpu

expires

sched

spin_unlock_irq

timer

it_lock

return

__set_current_state

TASK_INTERRUPTIBLE

spin_unlock_irq

timer

it_lock

schedule

spin_lock_irq

timer

it_lock

sample_to_timespec

which_clock

timer

it

cpu

expires

rqtp

posix_cpu_timer_set

timer

zero_it

it

spin_unlock_irq

timer

it_lock

it

it_value

tv_sec

it

it_value

tv_nsec

return

error

ERESTART_RESTARTBLOCK

return

error

posix_cpu_nsleep

clockid_t

which_clock

flags

timespec

rqtp

timespec

__user

rmtp

restart_block

restart_block

current_thread_info

restart_block

itimerspec

it

error

CPUCLOCK_PERTHREAD

which_clock

CPUCLOCK_PID

which_clock

CPUCLOCK_PID

which_clock

current

pid

return

EINVAL

error

do_cpu_nanosleep

which_clock

flags

rqtp

it

error

ERESTART_RESTARTBLOCK

flags

TIMER_ABSTIME

return

ERESTARTNOHAND

rmtp

NULL

copy_to_user

rmtp

it

it_value

sizeof

rmtp

return

EFAULT

restart_block

fn

posix_cpu_nsleep_restart

restart_block

arg0

which_clock

restart_block

arg1

rmtp

restart_block

arg2

rqtp

tv_sec

restart_block

arg3

rqtp

tv_nsec

return

error

posix_cpu_nsleep_restart

restart_block

restart_block

clockid_t

which_clock

restart_block

arg0

timespec

__user

rmtp

timespec

t

itimerspec

it

error

rmtp

timespec

__user

restart_block

arg1

t

tv_sec

restart_block

arg2

t

tv_nsec

restart_block

arg3

restart_block

fn

do_no_restart_syscall

error

do_cpu_nanosleep

which_clock

TIMER_ABSTIME

t

it

error

ERESTART_RESTARTBLOCK

rmtp

NULL

copy_to_user

rmtp

it

it_value

sizeof

rmtp

return

EFAULT

restart_block

fn

posix_cpu_nsleep_restart

restart_block

arg0

which_clock

restart_block

arg1

rmtp

restart_block

arg2

t

tv_sec

restart_block

arg3

t

tv_nsec

return

error

PROCESS_CLOCK

MAKE_PROCESS_CPUCLOCK

CPUCLOCK_SCHED

THREAD_CLOCK

MAKE_THREAD_CPUCLOCK

CPUCLOCK_SCHED

static

process_cpu_clock_getres

clockid_t

which_clock

timespec

tp

return

posix_cpu_clock_getres

PROCESS_CLOCK

tp

static

process_cpu_clock_get

clockid_t

which_clock

timespec

tp

return

posix_cpu_clock_get

PROCESS_CLOCK

tp

static

process_cpu_timer_create

k_itimer

timer

timer

it_clock

PROCESS_CLOCK

return

posix_cpu_timer_create

timer

static

process_cpu_nsleep

clockid_t

which_clock

flags

timespec

rqtp

timespec

__user

rmtp

return

posix_cpu_nsleep

PROCESS_CLOCK

flags

rqtp

rmtp

static

process_cpu_nsleep_restart

restart_block

restart_block

return

EINVAL

static

thread_cpu_clock_getres

clockid_t

which_clock

timespec

tp

return

posix_cpu_clock_getres

THREAD_CLOCK

tp

static

thread_cpu_clock_get

clockid_t

which_clock

timespec

tp

return

posix_cpu_clock_get

THREAD_CLOCK

tp

static

thread_cpu_timer_create

k_itimer

timer

timer

it_clock

THREAD_CLOCK

return

posix_cpu_timer_create

timer

static

thread_cpu_nsleep

clockid_t

which_clock

flags

timespec

rqtp

timespec

__user

rmtp

return

EINVAL

static

thread_cpu_nsleep_restart

restart_block

restart_block

return

EINVAL

static

__init

init_posix_cpu_timers

void

k_clock

process

clock_getres

process_cpu_clock_getres

clock_get

process_cpu_clock_get

clock_set

do_posix_clock_nosettime

timer_create

process_cpu_timer_create

nsleep

process_cpu_nsleep

nsleep_restart

process_cpu_nsleep_restart

k_clock

thread

clock_getres

thread_cpu_clock_getres

clock_get

thread_cpu_clock_get

clock_set

do_posix_clock_nosettime

timer_create

thread_cpu_timer_create

nsleep

thread_cpu_nsleep

nsleep_restart

thread_cpu_nsleep_restart

register_posix_clock

CLOCK_PROCESS_CPUTIME_ID

process

register_posix_clock

CLOCK_THREAD_CPUTIME_ID

thread

return

__initcall

init_posix_cpu_timers

static

kmem_cache

posix_timers_cache

static

idr

posix_timers_id

static

DEFINE_SPINLOCK

idr_lock

SIGEV_THREAD_ID

SIGEV_THREAD_ID

SIGEV_SIGNAL

SIGEV_NONE

SIGEV_THREAD

static

k_clock

posix_clocks

MAX_CLOCKS

static

common_nsleep

clockid_t

flags

timespec

t

timespec

__user

rmtp

static

void

common_timer_get

k_itimer

itimerspec

static

common_timer_set

k_itimer

itimerspec

itimerspec

static

common_timer_del

k_itimer

timer

static

enum

hrtimer_restart

posix_timer_fn

hrtimer

data

static

k_itimer

lock_timer

timer_t

timer_id

flags

static

inline

void

unlock_timer

k_itimer

timr

flags

spin_unlock_irqrestore

timr

it_lock

flags

CLOCK_DISPATCH

clock

call

arglist

clock

posix_cpu_

call

arglist

posix_clocks

clock

call

NULL

posix_clocks

clock

call

arglist

common_

call

arglist

static

inline

common_clock_getres

clockid_t

which_clock

timespec

tp

tp

tv_sec

tp

tv_nsec

posix_clocks

which_clock

res

return

static

common_clock_get

clockid_t

which_clock

timespec

tp

ktime_get_real_ts

tp

return

static

inline

common_clock_set

clockid_t

which_clock

timespec

tp

return

do_sys_settimeofday

tp

NULL

static

common_timer_create

k_itimer

new_timer

hrtimer_init

new_timer

it

real

timer

new_timer

it_clock

return

static

inline

invalid_clockid

clockid_t

which_clock

which_clock

return

which_clock

MAX_CLOCKS

return

posix_clocks

which_clock

clock_getres

NULL

return

posix_clocks

which_clock

res

return

return

static

posix_ktime_get_ts

clockid_t

which_clock

timespec

tp

ktime_get_ts

tp

return

static

__init

init_posix_timers

void

k_clock

clock_realtime

clock_getres

hrtimer_get_res

k_clock

clock_monotonic

clock_getres

hrtimer_get_res

clock_get

posix_ktime_get_ts

clock_set

do_posix_clock_nosettime

register_posix_clock

CLOCK_REALTIME

clock_realtime

register_posix_clock

CLOCK_MONOTONIC

clock_monotonic

posix_timers_cache

kmem_cache_create

sizeof

k_itimer

NULL

NULL

idr_init

posix_timers_id

return

__initcall

init_posix_timers

static

void

schedule_next_timer

k_itimer

timr

hrtimer

timer

timr

it

real

timer

timr

it

real

interval

tv64

return

timr

it_overrun

hrtimer_forward

timer

timer

base

get_time

timr

it

real

interval

timr

it_overrun_last

timr

it_overrun

timr

it_overrun

timr

it_requeue_pending

hrtimer_restart

timer

void

do_schedule_next_timer

siginfo

info

k_itimer

timr

flags

timr

lock_timer

info

si_tid

flags

timr

timr

it_requeue_pending

info

si_sys_private

timr

it_clock

posix_cpu_timer_schedule

timr

schedule_next_timer

timr

info

si_overrun

timr

it_overrun_last

timr

unlock_timer

timr

flags

posix_timer_event

k_itimer

timr

si_private

memset

timr

sigq

info

sizeof

siginfo_t

timr

sigq

info

si_sys_private

si_private

timr

sigq

info

si_signo

timr

it_sigev_signo

timr

sigq

info

si_errno

timr

sigq

info

si_code

SI_TIMER

timr

sigq

info

si_tid

timr

it_id

timr

sigq

info

si_value

timr

it_sigev_value

timr

it_sigev_notify

SIGEV_THREAD_ID

task_struct

leader

ret

send_sigqueue

timr

it_sigev_signo

timr

sigq

timr

it_process

likely

ret

return

ret

timr

it_sigev_notify

SIGEV_SIGNAL

leader

timr

it_process

group_leader

put_task_struct

timr

it_process

timr

it_process

leader

return

send_group_sigqueue

timr

it_sigev_signo

timr

sigq

timr

it_process

EXPORT_SYMBOL_GPL

posix_timer_event

static

enum

hrtimer_restart

posix_timer_fn

hrtimer

timer

k_itimer

timr

flags

si_private

enum

hrtimer_restart

ret

HRTIMER_NORESTART

timr

container_of

timer

k_itimer

it

real

timer

spin_lock_irqsave

timr

it_lock

flags

timr

it

real

interval

tv64

si_private

timr

it_requeue_pending

posix_timer_event

timr

si_private

timr

it

real

interval

tv64

ktime_t

now

hrtimer_cb_get_time

timer

CONFIG_HIGH_RES_TIMERS

ktime_t

kj

ktime_set

NSEC_PER_SEC

HZ

timr

it

real

interval

tv64

kj

tv64

now

ktime_add

now

kj

timr

it_overrun

hrtimer_forward

timer

now

timr

it

real

interval

ret

HRTIMER_RESTART

timr

it_requeue_pending

unlock_timer

timr

flags

return

ret

static

task_struct

good_sigevent

sigevent_t

event

task_struct

rtn

current

group_leader

event

sigev_notify

SIGEV_THREAD_ID

rtn

find_task_by_pid

event

sigev_notify_thread_id

rtn

tgid

current

tgid

event

sigev_notify

SIGEV_THREAD_ID

SIGEV_SIGNAL

return

NULL

event

sigev_notify

SIGEV_THREAD_ID

SIGEV_NONE

event

sigev_signo

event

sigev_signo

SIGRTMAX

return

NULL

return

rtn

void

register_posix_clock

clockid_t

clock_id

k_clock

new_clock

clock_id

MAX_CLOCKS

printk

clock_id

return

posix_clocks

clock_id

new_clock

EXPORT_SYMBOL_GPL

register_posix_clock

static

k_itimer

alloc_posix_timer

void

k_itimer

tmr

tmr

kmem_cache_zalloc

posix_timers_cache

GFP_KERNEL

tmr

return

tmr

unlikely

tmr

sigq

sigqueue_alloc

kmem_cache_free

posix_timers_cache

tmr

tmr

NULL

return

tmr

IT_ID_SET

IT_ID_NOT_SET

static

void

release_posix_timer

k_itimer

tmr

it_id_set

it_id_set

flags

spin_lock_irqsave

idr_lock

flags

idr_remove

posix_timers_id

tmr

it_id

spin_unlock_irqrestore

idr_lock

flags

sigqueue_free

tmr

sigq

unlikely

tmr

it_process

tmr

it_sigev_notify

SIGEV_SIGNAL

SIGEV_THREAD_ID

put_task_struct

tmr

it_process

kmem_cache_free

posix_timers_cache

tmr

asmlinkage

sys_timer_create

clockid_t

which_clock

sigevent

__user

timer_event_spec

timer_t

__user

created_timer_id

error

k_itimer

new_timer

NULL

new_timer_id

task_struct

process

NULL

flags

sigevent_t

event

it_id_set

IT_ID_NOT_SET

invalid_clockid

which_clock

return

EINVAL

new_timer

alloc_posix_timer

unlikely

new_timer

return

EAGAIN

spin_lock_init

new_timer

it_lock

retry

unlikely

idr_pre_get

posix_timers_id

GFP_KERNEL

error

EAGAIN

goto

out

spin_lock_irq

idr_lock

error

idr_get_new

posix_timers_id

void

new_timer

new_timer_id

spin_unlock_irq

idr_lock

error

EAGAIN

goto

retry

error

error

EAGAIN

goto

out

it_id_set

IT_ID_SET

new_timer

it_id

timer_t

new_timer_id

new_timer

it_clock

which_clock

new_timer

it_overrun

error

CLOCK_DISPATCH

which_clock

timer_create

new_timer

error

goto

out

copy_to_user

created_timer_id

new_timer_id

sizeof

new_timer_id

error

EFAULT

goto

out

timer_event_spec

copy_from_user

event

timer_event_spec

sizeof

event

error

EFAULT

goto

out

new_timer

it_sigev_notify

event

sigev_notify

new_timer

it_sigev_signo

event

sigev_signo

new_timer

it_sigev_value

event

sigev_value

read_lock

tasklist_lock

process

good_sigevent

event

spin_lock_irqsave

process

sighand

siglock

flags

process

flags

PF_EXITING

new_timer

it_process

process

list_add

new_timer

list

process

signal

posix_timers

spin_unlock_irqrestore

process

sighand

siglock

flags

new_timer

it_sigev_notify

SIGEV_SIGNAL

SIGEV_THREAD_ID

get_task_struct

process

spin_unlock_irqrestore

process

sighand

siglock

flags

process

NULL

read_unlock

tasklist_lock

process

error

EINVAL

goto

out

new_timer

it_sigev_notify

SIGEV_SIGNAL

new_timer

it_sigev_signo

SIGALRM

new_timer

it_sigev_value

sival_int

new_timer

it_id

process

current

group_leader

spin_lock_irqsave

process

sighand

siglock

flags

new_timer

it_process

process

list_add

new_timer

list

process

signal

posix_timers

spin_unlock_irqrestore

process

sighand

siglock

flags

out

error

release_posix_timer

new_timer

it_id_set

return

error

static

k_itimer

lock_timer

timer_t

timer_id

flags

k_itimer

timr

spin_lock_irqsave

idr_lock

flags

timr

k_itimer

idr_find

posix_timers_id

timer_id

timr

spin_lock

timr

it_lock

spin_unlock

idr_lock

timr

it_id

timer_id

timr

it_process

timr

it_process

tgid

current

tgid

unlock_timer

timr

flags

timr

NULL

spin_unlock_irqrestore

idr_lock

flags

return

timr

static

void

common_timer_get

k_itimer

timr

itimerspec

cur_setting

ktime_t

now

remaining

iv

hrtimer

timer

timr

it

real

timer

memset

cur_setting

sizeof

itimerspec

iv

timr

it

real

interval

iv

tv64

cur_setting

it_interval

ktime_to_timespec

iv

hrtimer_active

timer

timr

it_sigev_notify

SIGEV_THREAD_ID

SIGEV_NONE

return

now

timer

base

get_time

iv

tv64

timr

it_requeue_pending

REQUEUE_PENDING

timr

it_sigev_notify

SIGEV_THREAD_ID

SIGEV_NONE

timr

it_overrun

hrtimer_forward

timer

now

iv

remaining

ktime_sub

timer

expires

now

remaining

tv64

timr

it_sigev_notify

SIGEV_THREAD_ID

SIGEV_NONE

cur_setting

it_value

tv_nsec

cur_setting

it_value

ktime_to_timespec

remaining

asmlinkage

sys_timer_gettime

timer_t

timer_id

itimerspec

__user

setting

k_itimer

timr

itimerspec

cur_setting

flags

timr

lock_timer

timer_id

flags

timr

return

EINVAL

CLOCK_DISPATCH

timr

it_clock

timer_get

timr

cur_setting

unlock_timer

timr

flags

copy_to_user

setting

cur_setting

sizeof

cur_setting

return

EFAULT

return

asmlinkage

sys_timer_getoverrun

timer_t

timer_id

k_itimer

timr

overrun

flags

timr

lock_timer

timer_id

flags

timr

return

EINVAL

overrun

timr

it_overrun_last

unlock_timer

timr

flags

return

overrun

static

common_timer_set

k_itimer

timr

flags

itimerspec

new_setting

itimerspec

old_setting

hrtimer

timer

timr

it

real

timer

enum

hrtimer_mode

mode

old_setting

common_timer_get

timr

old_setting

timr

it

real

interval

tv64

hrtimer_try_to_cancel

timer

return

TIMER_RETRY

timr

it_requeue_pending

timr

it_requeue_pending

REQUEUE_PENDING

timr

it_overrun_last

new_setting

it_value

tv_sec

new_setting

it_value

tv_nsec

return

mode

flags

TIMER_ABSTIME

HRTIMER_MODE_ABS

HRTIMER_MODE_REL

hrtimer_init

timr

it

real

timer

timr

it_clock

mode

timr

it

real

timer

function

posix_timer_fn

timer

expires

timespec_to_ktime

new_setting

it_value

timr

it

real

interval

timespec_to_ktime

new_setting

it_interval

timr

it_sigev_notify

SIGEV_THREAD_ID

SIGEV_NONE

mode

HRTIMER_MODE_REL

timer

expires

ktime_add

timer

expires

timer

base

get_time

return

hrtimer_start

timer

timer

expires

mode

return

asmlinkage

sys_timer_settime

timer_t

timer_id

flags

itimerspec

__user

new_setting

itimerspec

__user

old_setting

k_itimer

timr

itimerspec

new_spec

old_spec

error

flag

itimerspec

rtn

old_setting

old_spec

NULL

new_setting

return

EINVAL

copy_from_user

new_spec

new_setting

sizeof

new_spec

return

EFAULT

timespec_valid

new_spec

it_interval

timespec_valid

new_spec

it_value

return

EINVAL

retry

timr

lock_timer

timer_id

flag

timr

return

EINVAL

error

CLOCK_DISPATCH

timr

it_clock

timer_set

timr

flags

new_spec

rtn

unlock_timer

timr

flag

error

TIMER_RETRY

rtn

NULL

goto

retry

old_setting

error

copy_to_user

old_setting

old_spec

sizeof

old_spec

error

EFAULT

return

error

static

inline

common_timer_del

k_itimer

timer

timer

it

real

interval

tv64

hrtimer_try_to_cancel

timer

it

real

timer

return

TIMER_RETRY

return

static

inline

timer_delete_hook

k_itimer

timer

return

CLOCK_DISPATCH

timer

it_clock

timer_del

timer

asmlinkage

sys_timer_delete

timer_t

timer_id

k_itimer

timer

flags

retry_delete

timer

lock_timer

timer_id

flags

timer

return

EINVAL

timer_delete_hook

timer

TIMER_RETRY

unlock_timer

timer

flags

goto

retry_delete

spin_lock

current

sighand

siglock

list_del

timer

list

spin_unlock

current

sighand

siglock

timer

it_process

timer

it_sigev_notify

SIGEV_SIGNAL

SIGEV_THREAD_ID

put_task_struct

timer

it_process

timer

it_process

NULL

unlock_timer

timer

flags

release_posix_timer

timer

IT_ID_SET

return

static

void

itimer_delete

k_itimer

timer

flags

retry_delete

spin_lock_irqsave

timer

it_lock

flags

timer_delete_hook

timer

TIMER_RETRY

unlock_timer

timer

flags

goto

retry_delete

list_del

timer

list

timer

it_process

timer

it_sigev_notify

SIGEV_SIGNAL

SIGEV_THREAD_ID

put_task_struct

timer

it_process

timer

it_process

NULL

unlock_timer

timer

flags

release_posix_timer

timer

IT_ID_SET

void

exit_itimers

signal_struct

sig

k_itimer

tmr

list_empty

sig

posix_timers

tmr

list_entry

sig

posix_timers

next

k_itimer

list

itimer_delete

tmr

do_posix_clock_nosettime

clockid_t

clockid

timespec

tp

return

EINVAL

EXPORT_SYMBOL_GPL

do_posix_clock_nosettime

do_posix_clock_nonanosleep

clockid_t

clock

flags

timespec

t

timespec

__user

r

ENOTSUP

return

EOPNOTSUPP

return

ENOTSUP

EXPORT_SYMBOL_GPL

do_posix_clock_nonanosleep

asmlinkage

sys_clock_settime

clockid_t

which_clock

timespec

__user

tp

timespec

new_tp

invalid_clockid

which_clock

return

EINVAL

copy_from_user

new_tp

tp

sizeof

tp

return

EFAULT

return

CLOCK_DISPATCH

which_clock

clock_set

which_clock

new_tp

asmlinkage

sys_clock_gettime

clockid_t

which_clock

timespec

__user

tp

timespec

kernel_tp

error

invalid_clockid

which_clock

return

EINVAL

error

CLOCK_DISPATCH

which_clock

clock_get

which_clock

kernel_tp

error

copy_to_user

tp

kernel_tp

sizeof

kernel_tp

error

EFAULT

return

error

asmlinkage

sys_clock_getres

clockid_t

which_clock

timespec

__user

tp

timespec

rtn_tp

error

invalid_clockid

which_clock

return

EINVAL

error

CLOCK_DISPATCH

which_clock

clock_getres

which_clock

rtn_tp

error

tp

copy_to_user

tp

rtn_tp

sizeof

rtn_tp

error

EFAULT

return

error

static

common_nsleep

clockid_t

which_clock

flags

timespec

tsave

timespec

__user

rmtp

return

hrtimer_nanosleep

tsave

rmtp

flags

TIMER_ABSTIME

HRTIMER_MODE_ABS

HRTIMER_MODE_REL

which_clock

asmlinkage

sys_clock_nanosleep

clockid_t

which_clock

flags

timespec

__user

rqtp

timespec

__user

rmtp

timespec

t

invalid_clockid

which_clock

return

EINVAL

copy_from_user

t

rqtp

sizeof

timespec

return

EFAULT

timespec_valid

t

return

EINVAL

return

CLOCK_DISPATCH

which_clock

nsleep

which_clock

flags

t

rmtp

static

common_nsleep_restart

restart_block

restart_block

return

hrtimer_nanosleep_restart

restart_block

clock_nanosleep_restart

restart_block

restart_block

clockid_t

which_clock

restart_block

arg0

return

CLOCK_DISPATCH

which_clock

nsleep_restart

restart_block

__LOG_BUF_LEN

CONFIG_LOG_BUF_SHIFT

DEFAULT_MESSAGE_LOGLEVEL

MINIMUM_CONSOLE_LOGLEVEL

DEFAULT_CONSOLE_LOGLEVEL

DECLARE_WAIT_QUEUE_HEAD

log_wait

console_printk

DEFAULT_CONSOLE_LOGLEVEL

DEFAULT_MESSAGE_LOGLEVEL

MINIMUM_CONSOLE_LOGLEVEL

DEFAULT_CONSOLE_LOGLEVEL

oops_in_progress

EXPORT_SYMBOL

oops_in_progress

static

DECLARE_MUTEX

console_sem

static

DECLARE_MUTEX

secondary_console_sem

console

console_drivers

static

console_locked

console_suspended

static

DEFINE_SPINLOCK

logbuf_lock

LOG_BUF_MASK

log_buf_len

LOG_BUF

idx

log_buf

idx

LOG_BUF_MASK

static

log_start

static

con_start

static

log_end

console_cmdline

name

index

options

MAX_CMDLINECONSOLES

static

console_cmdline

console_cmdline

MAX_CMDLINECONSOLES

static

selected_console

static

preferred_console

static

console_may_schedule

CONFIG_PRINTK

static

__log_buf

__LOG_BUF_LEN

static

log_buf

__log_buf

static

log_buf_len

__LOG_BUF_LEN

static

logged_chars

static

__init

log_buf_len_setup

str

size

memparse

str

str

flags

size

size

roundup_pow_of_two

size

size

log_buf_len

start

dest_idx

offset

new_log_buf

new_log_buf

alloc_bootmem

size

new_log_buf

printk

KERN_WARNING

goto

out

spin_lock_irqsave

logbuf_lock

flags

log_buf_len

size

log_buf

new_log_buf

offset

start

min

con_start

log_start

dest_idx

start

log_end

log_buf

dest_idx

__log_buf

start

__LOG_BUF_LEN

start

dest_idx

log_start

offset

con_start

offset

log_end

offset

spin_unlock_irqrestore

logbuf_lock

flags

printk

KERN_NOTICE

log_buf_len

out

return

__setup

log_buf_len_setup

do_syslog

type

__user

buf

len

i

j

limit

count

do_clear

c

error

error

security_syslog

type

error

return

error

type

case

case

case

error

EINVAL

buf

len

goto

out

error

len

goto

out

access_ok

VERIFY_WRITE

buf

len

error

EFAULT

goto

out

error

wait_event_interruptible

log_wait

log_start

log_end

error

goto

out

i

spin_lock_irq

logbuf_lock

error

log_start

log_end

i

len

c

LOG_BUF

log_start

log_start

spin_unlock_irq

logbuf_lock

error

__put_user

c

buf

buf

i

cond_resched

spin_lock_irq

logbuf_lock

spin_unlock_irq

logbuf_lock

error

error

i

case

do_clear

case

error

EINVAL

buf

len

goto

out

error

len

goto

out

access_ok

VERIFY_WRITE

buf

len

error

EFAULT

goto

out

count

len

count

log_buf_len

count

log_buf_len

spin_lock_irq

logbuf_lock

count

logged_chars

count

logged_chars

do_clear

logged_chars

limit

log_end

i

i

count

error

i

j

limit

i

j

log_buf_len

log_end

c

LOG_BUF

j

spin_unlock_irq

logbuf_lock

error

__put_user

c

buf

count

i

cond_resched

spin_lock_irq

logbuf_lock

spin_unlock_irq

logbuf_lock

error

error

i

i

count

offset

count

error

i

i

error

i

__get_user

c

buf

i

offset

__put_user

c

buf

i

error

EFAULT

cond_resched

case

logged_chars

case

console_loglevel

minimum_console_loglevel

case

console_loglevel

default_console_loglevel

case

error

EINVAL

len

len

goto

out

len

minimum_console_loglevel

len

minimum_console_loglevel

console_loglevel

len

error

case

error

log_end

log_start

case

error

log_buf_len

default

error

EINVAL

out

return

error

asmlinkage

sys_syslog

type

__user

buf

len

return

do_syslog

type

buf

len

CONFIG_DEBUG_KERNEL

void

debugger_syslog_data

syslog_data

syslog_data

log_buf

syslog_data

log_buf

log_buf_len

syslog_data

log_buf

log_end

logged_chars

log_buf_len

logged_chars

log_buf_len

syslog_data

log_buf

log_end

CONFIG_KDB

void

kdb_syslog_data

syslog_data

syslog_data

log_buf

syslog_data

log_buf

log_buf_len

syslog_data

log_buf

log_end

logged_chars

log_buf_len

logged_chars

log_buf_len

syslog_data

log_buf

log_end

static

void

__call_console_drivers

start

end

console

con

con

console_drivers

con

con

con

next

con

flags

CON_ENABLED

con

write

cpu_online

smp_processor_id

con

flags

CON_ANYTIME

con

write

con

LOG_BUF

start

end

start

static

__read_mostly

ignore_loglevel

static

__init

ignore_loglevel_setup

str

ignore_loglevel

printk

KERN_INFO

return

__setup

ignore_loglevel_setup

static

void

_call_console_drivers

start

end

msg_log_level

msg_log_level

console_loglevel

ignore_loglevel

console_drivers

start

end

start

LOG_BUF_MASK

end

LOG_BUF_MASK

__call_console_drivers

start

LOG_BUF_MASK

log_buf_len

__call_console_drivers

end

LOG_BUF_MASK

__call_console_drivers

start

end

static

void

call_console_drivers

start

end

cur_index

start_print

static

msg_level

BUG_ON

start

end

cur_index

start

start_print

start

cur_index

end

msg_level

end

cur_index

LOG_BUF

cur_index

LOG_BUF

cur_index

LOG_BUF

cur_index

LOG_BUF

cur_index

msg_level

LOG_BUF

cur_index

cur_index

start_print

cur_index

cur_index

end

c

LOG_BUF

cur_index

cur_index

c

msg_level

msg_level

default_message_loglevel

_call_console_drivers

start_print

cur_index

msg_level

msg_level

start_print

cur_index

_call_console_drivers

start_print

end

msg_level

static

void

emit_log_char

c

LOG_BUF

log_end

c

log_end

log_end

log_start

log_buf_len

log_start

log_end

log_buf_len

log_end

con_start

log_buf_len

con_start

log_end

log_buf_len

logged_chars

log_buf_len

logged_chars

static

void

zap_locks

void

static

oops_timestamp

time_after_eq

jiffies

oops_timestamp

time_after

jiffies

oops_timestamp

HZ

return

oops_timestamp

jiffies

spin_lock_init

logbuf_lock

init_MUTEX

console_sem

CONFIG_PRINTK_TIME

static

printk_time

static

printk_time

module_param

printk_time

S_IRUGO

S_IWUSR

static

__init

printk_time_setup

str

str

return

printk_time

return

__setup

printk_time_setup

__attribute__

weak

printk_clock

void

return

sched_clock

static

have_callable_console

void

console

con

con

console_drivers

con

con

con

next

con

flags

CON_ANYTIME

return

return

asmlinkage

printk

fmt

va_list

args

r

va_start

args

fmt

r

vprintk

fmt

args

va_end

args

return

r

static

volatile

printk_cpu

UINT_MAX

asmlinkage

vprintk

fmt

va_list

args

flags

printed_len

p

static

printk_buf

static

log_level_unknown

preempt_disable

unlikely

oops_in_progress

printk_cpu

smp_processor_id

zap_locks

raw_local_irq_save

flags

lockdep_off

spin_lock

logbuf_lock

printk_cpu

smp_processor_id

printed_len

vscnprintf

printk_buf

sizeof

printk_buf

fmt

args

p

printk_buf

p

p

log_level_unknown

printk_time

loglev_char

tbuf

tp

tlen

t

nanosec_rem

p

p

p

p

loglev_char

p

p

printed_len

loglev_char

default_message_loglevel

t

printk_clock

nanosec_rem

do_div

t

tlen

sprintf

tbuf

loglev_char

t

nanosec_rem

tp

tbuf

tp

tbuf

tlen

tp

emit_log_char

tp

printed_len

tlen

p

p

p

p

emit_log_char

emit_log_char

default_message_loglevel

emit_log_char

printed_len

log_level_unknown

p

emit_log_char

p

p

log_level_unknown

down_trylock

console_sem

console_locked

printk_cpu

UINT_MAX

spin_unlock

logbuf_lock

cpu_online

smp_processor_id

have_callable_console

console_may_schedule

release_console_sem

console_locked

up

console_sem

lockdep_on

raw_local_irq_restore

flags

printk_cpu

UINT_MAX

spin_unlock

logbuf_lock

lockdep_on

raw_local_irq_restore

flags

preempt_enable

return

printed_len

EXPORT_SYMBOL

printk

EXPORT_SYMBOL

vprintk

asmlinkage

sys_syslog

type

__user

buf

len

return

ENOSYS

static

void

call_console_drivers

start

end

static

__init

console_setup

str

name

sizeof

console_cmdline

name

s

options

idx

str

str

strcpy

name

strncpy

name

str

sizeof

name

strncpy

name

str

sizeof

name

name

sizeof

name

options

strchr

str

NULL

options

__sparc__

strcmp

str

strcpy

name

strcmp

str

strcpy

name

s

name

s

s

s

s

s

idx

simple_strtoul

s

NULL

s

add_preferred_console

name

idx

options

return

__setup

console_setup

__init

add_preferred_console

name

idx

options

console_cmdline

c

i

i

i

MAX_CMDLINECONSOLES

console_cmdline

i

name

i

strcmp

console_cmdline

i

name

name

console_cmdline

i

index

idx

selected_console

i

return

i

MAX_CMDLINECONSOLES

return

E2BIG

selected_console

i

c

console_cmdline

i

memcpy

c

name

name

sizeof

c

name

c

name

sizeof

c

name

c

options

options

c

index

idx

return

CONFIG_DISABLE_CONSOLE_SUSPEND

void

suspend_console

void

printk

acquire_console_sem

console_suspended

void

resume_console

void

console_suspended

release_console_sem

void

acquire_console_sem

void

BUG_ON

in_interrupt

console_suspended

down

secondary_console_sem

return

down

console_sem

console_locked

console_may_schedule

EXPORT_SYMBOL

acquire_console_sem

try_acquire_console_sem

void

down_trylock

console_sem

return

console_locked

console_may_schedule

return

EXPORT_SYMBOL

try_acquire_console_sem

is_console_locked

void

return

console_locked

void

wake_up_klogd

void

oops_in_progress

waitqueue_active

log_wait

wake_up_interruptible

log_wait

void

release_console_sem

void

flags

_con_start

_log_end

wake_klogd

console_suspended

up

secondary_console_sem

return

console_may_schedule

spin_lock_irqsave

logbuf_lock

flags

wake_klogd

log_start

log_end

con_start

log_end

_con_start

con_start

_log_end

log_end

con_start

log_end

spin_unlock

logbuf_lock

call_console_drivers

_con_start

_log_end

local_irq_restore

flags

console_locked

up

console_sem

spin_unlock_irqrestore

logbuf_lock

flags

wake_klogd

wake_up_klogd

EXPORT_SYMBOL

release_console_sem

void

__sched

console_conditional_schedule

void

console_may_schedule

cond_resched

EXPORT_SYMBOL

console_conditional_schedule

void

console_print

s

printk

KERN_EMERG

s

EXPORT_SYMBOL

console_print

void

console_unblank

void

console

c

oops_in_progress

down_trylock

console_sem

return

acquire_console_sem

console_locked

console_may_schedule

c

console_drivers

c

NULL

c

c

next

c

flags

CON_ENABLED

c

unblank

c

unblank

release_console_sem

tty_driver

console_device

index

console

c

tty_driver

driver

NULL

acquire_console_sem

c

console_drivers

c

NULL

c

c

next

c

device

driver

c

device

c

index

driver

release_console_sem

return

driver

void

console_stop

console

console

acquire_console_sem

console

flags

CON_ENABLED

release_console_sem

EXPORT_SYMBOL

console_stop

void

console_start

console

console

acquire_console_sem

console

flags

CON_ENABLED

release_console_sem

EXPORT_SYMBOL

console_start

void

register_console

console

console

i

flags

console

bootconsole

NULL

console_drivers

console

flags

CON_BOOT

return

console_drivers

flags

CON_BOOT

bootconsole

console_drivers

preferred_console

bootconsole

console_drivers

preferred_console

selected_console

preferred_console

console

index

console

index

console

setup

NULL

console

setup

console

NULL

console

flags

CON_ENABLED

CON_CONSDEV

preferred_console

i

i

MAX_CMDLINECONSOLES

console_cmdline

i

name

i

strcmp

console_cmdline

i

name

console

name

console

index

console

index

console_cmdline

i

index

console

index

console

index

console_cmdline

i

index

console

setup

console

setup

console

console_cmdline

i

options

console

flags

CON_ENABLED

console

index

console_cmdline

i

index

i

selected_console

console

flags

CON_CONSDEV

preferred_console

selected_console

console

flags

CON_ENABLED

return

bootconsole

printk

KERN_INFO

bootconsole

name

bootconsole

index

console

name

console

index

unregister_console

bootconsole

console

flags

CON_PRINTBUFFER

acquire_console_sem

console

flags

CON_CONSDEV

console_drivers

NULL

console

next

console_drivers

console_drivers

console

console

next

console

next

flags

CON_CONSDEV

console

next

console_drivers

next

console_drivers

next

console

console

flags

CON_PRINTBUFFER

spin_lock_irqsave

logbuf_lock

flags

con_start

log_start

spin_unlock_irqrestore

logbuf_lock

flags

release_console_sem

EXPORT_SYMBOL

register_console

unregister_console

console

console

console

a

b

res

acquire_console_sem

console_drivers

console

console_drivers

console

next

res

console_drivers

a

console_drivers

next

b

console_drivers

a

b

a

a

b

next

a

console

b

next

a

next

res

console_drivers

NULL

console

flags

CON_CONSDEV

console_drivers

flags

CON_CONSDEV

release_console_sem

return

res

EXPORT_SYMBOL

unregister_console

void

tty_write_message

tty_struct

tty

msg

tty

tty

driver

write

tty

driver

write

tty

msg

strlen

msg

return

__printk_ratelimit

ratelimit_jiffies

ratelimit_burst

static

DEFINE_SPINLOCK

ratelimit_lock

static

toks

HZ

static

last_msg

static

missed

flags

now

jiffies

spin_lock_irqsave

ratelimit_lock

flags

toks

now

last_msg

last_msg

now

toks

ratelimit_burst

ratelimit_jiffies

toks

ratelimit_burst

ratelimit_jiffies

toks

ratelimit_jiffies

lost

missed

missed

toks

ratelimit_jiffies

spin_unlock_irqrestore

ratelimit_lock

flags

lost

printk

KERN_WARNING

lost

return

missed

spin_unlock_irqrestore

ratelimit_lock

flags

return

EXPORT_SYMBOL

__printk_ratelimit

printk_ratelimit_jiffies

HZ

printk_ratelimit_burst

printk_ratelimit

void

return

__printk_ratelimit

printk_ratelimit_jiffies

printk_ratelimit_burst

EXPORT_SYMBOL

printk_ratelimit

bool

printk_timed_ratelimit

caller_jiffies

interval_msecs

caller_jiffies

time_after

jiffies

caller_jiffies

caller_jiffies

jiffies

msecs_to_jiffies

interval_msecs

return

true

return

false

EXPORT_SYMBOL

printk_timed_ratelimit

profile_hit

u32

pc

hits

PROFILE_GRPSHIFT

PROFILE_GRPSZ

PROFILE_GRPSHIFT

NR_PROFILE_HIT

PAGE_SIZE

sizeof

profile_hit

NR_PROFILE_GRP

NR_PROFILE_HIT

PROFILE_GRPSZ

timer_hook

pt_regs

__read_mostly

static

atomic_t

prof_buffer

static

prof_len

prof_shift

prof_on

__read_mostly

EXPORT_SYMBOL_GPL

prof_on

static

cpumask_t

prof_cpu_mask

CPU_MASK_ALL

CONFIG_SMP

static

DEFINE_PER_CPU

profile_hit

cpu_profile_hits

static

DEFINE_PER_CPU

cpu_profile_flip

static

DEFINE_MUTEX

profile_flip_mutex

static

__init

profile_setup

str

static

__initdata

schedstr

static

__initdata

sleepstr

static

__initdata

kvmstr

par

strncmp

str

sleepstr

strlen

sleepstr

prof_on

SLEEP_PROFILING

str

strlen

sleepstr

str

strlen

sleepstr

get_option

str

par

prof_shift

par

printk

KERN_INFO

prof_shift

strncmp

str

schedstr

strlen

schedstr

prof_on

SCHED_PROFILING

str

strlen

schedstr

str

strlen

schedstr

get_option

str

par

prof_shift

par

printk

KERN_INFO

prof_shift

strncmp

str

kvmstr

strlen

kvmstr

prof_on

KVM_PROFILING

str

strlen

kvmstr

str

strlen

kvmstr

get_option

str

par

prof_shift

par

printk

KERN_INFO

prof_shift

get_option

str

par

prof_shift

par

prof_on

CPU_PROFILING

printk

KERN_INFO

prof_shift

return

__setup

profile_setup

void

__init

profile_init

void

prof_on

return

prof_len

_etext

_stext

prof_shift

prof_buffer

alloc_bootmem

prof_len

sizeof

atomic_t

CONFIG_PROFILING

static

BLOCKING_NOTIFIER_HEAD

task_exit_notifier

static

ATOMIC_NOTIFIER_HEAD

task_free_notifier

static

BLOCKING_NOTIFIER_HEAD

munmap_notifier

void

profile_task_exit

task_struct

task

blocking_notifier_call_chain

task_exit_notifier

task

profile_handoff_task

task_struct

task

ret

ret

atomic_notifier_call_chain

task_free_notifier

task

return

ret

NOTIFY_OK

void

profile_munmap

addr

blocking_notifier_call_chain

munmap_notifier

void

addr

task_handoff_register

notifier_block

n

return

atomic_notifier_chain_register

task_free_notifier

n

task_handoff_unregister

notifier_block

n

return

atomic_notifier_chain_unregister

task_free_notifier

n

profile_event_register

enum

profile_type

type

notifier_block

n

err

EINVAL

type

case

PROFILE_TASK_EXIT

err

blocking_notifier_chain_register

task_exit_notifier

n

case

PROFILE_MUNMAP

err

blocking_notifier_chain_register

munmap_notifier

n

return

err

profile_event_unregister

enum

profile_type

type

notifier_block

n

err

EINVAL

type

case

PROFILE_TASK_EXIT

err

blocking_notifier_chain_unregister

task_exit_notifier

n

case

PROFILE_MUNMAP

err

blocking_notifier_chain_unregister

munmap_notifier

n

return

err

register_timer_hook

hook

pt_regs

timer_hook

return

EBUSY

timer_hook

hook

return

void

unregister_timer_hook

hook

pt_regs

WARN_ON

hook

timer_hook

timer_hook

NULL

synchronize_sched

EXPORT_SYMBOL_GPL

register_timer_hook

EXPORT_SYMBOL_GPL

unregister_timer_hook

EXPORT_SYMBOL_GPL

task_handoff_register

EXPORT_SYMBOL_GPL

task_handoff_unregister

EXPORT_SYMBOL_GPL

profile_event_register

EXPORT_SYMBOL_GPL

profile_event_unregister

CONFIG_SMP

static

void

__profile_flip_buffers

void

unused

cpu

smp_processor_id

per_cpu

cpu_profile_flip

cpu

per_cpu

cpu_profile_flip

cpu

static

void

profile_flip_buffers

void

i

j

cpu

mutex_lock

profile_flip_mutex

j

per_cpu

cpu_profile_flip

get_cpu

put_cpu

on_each_cpu

__profile_flip_buffers

NULL

for_each_online_cpu

cpu

profile_hit

hits

per_cpu

cpu_profile_hits

cpu

j

i

i

NR_PROFILE_HIT

i

hits

i

hits

hits

i

pc

hits

i

pc

atomic_add

hits

i

hits

prof_buffer

hits

i

pc

hits

i

hits

hits

i

pc

mutex_unlock

profile_flip_mutex

static

void

profile_discard_flip_buffers

void

i

cpu

mutex_lock

profile_flip_mutex

i

per_cpu

cpu_profile_flip

get_cpu

put_cpu

on_each_cpu

__profile_flip_buffers

NULL

for_each_online_cpu

cpu

profile_hit

hits

per_cpu

cpu_profile_hits

cpu

i

memset

hits

NR_PROFILE_HIT

sizeof

profile_hit

mutex_unlock

profile_flip_mutex

void

profile_hits

type

void

__pc

nr_hits

primary

secondary

flags

pc

__pc

i

j

cpu

profile_hit

hits

prof_on

type

prof_buffer

return

pc

min

pc

_stext

prof_shift

prof_len

i

primary

pc

NR_PROFILE_GRP

PROFILE_GRPSHIFT

secondary

pc

NR_PROFILE_GRP

PROFILE_GRPSHIFT

cpu

get_cpu

hits

per_cpu

cpu_profile_hits

cpu

per_cpu

cpu_profile_flip

cpu

hits

put_cpu

return

local_irq_save

flags

j

j

PROFILE_GRPSZ

j

hits

i

j

pc

pc

hits

i

j

hits

nr_hits

goto

out

hits

i

j

hits

hits

i

j

pc

pc

hits

i

j

hits

nr_hits

goto

out

i

i

secondary

NR_PROFILE_HIT

i

primary

atomic_add

nr_hits

prof_buffer

pc

i

i

NR_PROFILE_HIT

i

atomic_add

hits

i

hits

prof_buffer

hits

i

pc

hits

i

pc

hits

i

hits

out

local_irq_restore

flags

put_cpu

static

__devinit

profile_cpu_callback

notifier_block

info

action

void

__cpu

node

cpu

__cpu

page

page

action

case

CPU_UP_PREPARE

case

CPU_UP_PREPARE_FROZEN

node

cpu_to_node

cpu

per_cpu

cpu_profile_flip

cpu

per_cpu

cpu_profile_hits

cpu

page

alloc_pages_node

node

GFP_KERNEL

__GFP_ZERO

GFP_THISNODE

page

return

NOTIFY_BAD

per_cpu

cpu_profile_hits

cpu

page_address

page

per_cpu

cpu_profile_hits

cpu

page

alloc_pages_node

node

GFP_KERNEL

__GFP_ZERO

GFP_THISNODE

page

goto

out_free

per_cpu

cpu_profile_hits

cpu

page_address

page

out_free

page

virt_to_page

per_cpu

cpu_profile_hits

cpu

per_cpu

cpu_profile_hits

cpu

NULL

__free_page

page

return

NOTIFY_BAD

case

CPU_ONLINE

case

CPU_ONLINE_FROZEN

cpu_set

cpu

prof_cpu_mask

case

CPU_UP_CANCELED

case

CPU_UP_CANCELED_FROZEN

case

CPU_DEAD

case

CPU_DEAD_FROZEN

cpu_clear

cpu

prof_cpu_mask

per_cpu

cpu_profile_hits

cpu

page

virt_to_page

per_cpu

cpu_profile_hits

cpu

per_cpu

cpu_profile_hits

cpu

NULL

__free_page

page

per_cpu

cpu_profile_hits

cpu

page

virt_to_page

per_cpu

cpu_profile_hits

cpu

per_cpu

cpu_profile_hits

cpu

NULL

__free_page

page

return

NOTIFY_OK

profile_flip_buffers

profile_discard_flip_buffers

profile_cpu_callback

NULL

void

profile_hits

type

void

__pc

nr_hits

pc

prof_on

type

prof_buffer

return

pc

__pc

_stext

prof_shift

atomic_add

nr_hits

prof_buffer

min

pc

prof_len

EXPORT_SYMBOL_GPL

profile_hits

void

profile_tick

type

pt_regs

regs

get_irq_regs

type

CPU_PROFILING

timer_hook

timer_hook

regs

user_mode

regs

cpu_isset

smp_processor_id

prof_cpu_mask

profile_hit

type

void

profile_pc

regs

CONFIG_PROC_FS

static

prof_cpu_mask_read_proc

page

start

off_t

off

count

eof

void

data

len

cpumask_scnprintf

page

count

cpumask_t

data

count

len

return

EINVAL

len

sprintf

page

len

return

len

static

prof_cpu_mask_write_proc

file

file

__user

buffer

count

void

data

cpumask_t

mask

cpumask_t

data

full_count

count

err

cpumask_t

new_value

err

cpumask_parse_user

buffer

count

new_value

err

return

err

mask

new_value

return

full_count

void

create_prof_cpu_mask

proc_dir_entry

root_irq_dir

proc_dir_entry

entry

entry

create_proc_entry

root_irq_dir

return

entry

data

void

prof_cpu_mask

entry

read_proc

prof_cpu_mask_read_proc

entry

write_proc

prof_cpu_mask_write_proc

static

ssize_t

read_profile

file

file

__user

buf

size_t

count

loff_t

ppos

p

ppos

ssize_t

read

pnt

sample_step

prof_shift

profile_flip_buffers

p

prof_len

sizeof

return

count

prof_len

sizeof

p

count

prof_len

sizeof

p

read

p

sizeof

count

put_user

sample_step

p

buf

return

EFAULT

buf

p

count

read

pnt

prof_buffer

p

sizeof

atomic_t

copy_to_user

buf

void

pnt

count

return

EFAULT

read

count

ppos

read

return

read

static

ssize_t

write_profile

file

file

__user

buf

size_t

count

loff_t

ppos

CONFIG_SMP

extern

setup_profiling_timer

multiplier

count

sizeof

multiplier

copy_from_user

multiplier

buf

sizeof

return

EFAULT

setup_profiling_timer

multiplier

return

EINVAL

profile_discard_flip_buffers

memset

prof_buffer

prof_len

sizeof

atomic_t

return

count

static

file_operations

proc_profile_operations

read

read_profile

write

write_profile

CONFIG_SMP

static

void

__init

profile_nop

void

unused

static

__init

create_hash_tables

void

cpu

for_each_online_cpu

cpu

node

cpu_to_node

cpu

page

page

page

alloc_pages_node

node

GFP_KERNEL

__GFP_ZERO

GFP_THISNODE

page

goto

out_cleanup

per_cpu

cpu_profile_hits

cpu

profile_hit

page_address

page

page

alloc_pages_node

node

GFP_KERNEL

__GFP_ZERO

GFP_THISNODE

page

goto

out_cleanup

per_cpu

cpu_profile_hits

cpu

profile_hit

page_address

page

return

out_cleanup

prof_on

smp_mb

on_each_cpu

profile_nop

NULL

for_each_online_cpu

cpu

page

page

per_cpu

cpu_profile_hits

cpu

page

virt_to_page

per_cpu

cpu_profile_hits

cpu

per_cpu

cpu_profile_hits

cpu

NULL

__free_page

page

per_cpu

cpu_profile_hits

cpu

page

virt_to_page

per_cpu

cpu_profile_hits

cpu

per_cpu

cpu_profile_hits

cpu

NULL

__free_page

page

return

create_hash_tables

static

__init

create_proc_profile

void

proc_dir_entry

entry

prof_on

return

create_hash_tables

return

entry

create_proc_entry

S_IWUSR

S_IRUGO

NULL

return

entry

proc_fops

proc_profile_operations

entry

size

prof_len

sizeof

atomic_t

hotcpu_notifier

profile_cpu_callback

return

module_init

create_proc_profile

void

__ptrace_link

task_struct

child

task_struct

new_parent

BUG_ON

list_empty

child

ptrace_list

child

parent

new_parent

return

list_add

child

ptrace_list

child

parent

ptrace_children

remove_parent

child

child

parent

new_parent

add_parent

child

void

ptrace_untrace

task_struct

child

spin_lock

child

sighand

siglock

child

state

TASK_TRACED

child

signal

flags

SIGNAL_STOP_STOPPED

child

state

TASK_STOPPED

signal_wake_up

child

spin_unlock

child

sighand

siglock

void

__ptrace_unlink

task_struct

child

BUG_ON

child

ptrace

child

ptrace

list_empty

child

ptrace_list

list_del_init

child

ptrace_list

remove_parent

child

child

parent

child

real_parent

add_parent

child

child

state

TASK_TRACED

ptrace_untrace

child

ptrace_check_attach

task_struct

child

kill

ret

ESRCH

read_lock

tasklist_lock

child

ptrace

PT_PTRACED

child

parent

current

child

ptrace

PT_ATTACHED

child

real_parent

current

child

signal

NULL

ret

spin_lock_irq

child

sighand

siglock

child

state

TASK_STOPPED

child

state

TASK_TRACED

child

state

TASK_TRACED

kill

ret

ESRCH

spin_unlock_irq

child

sighand

siglock

read_unlock

tasklist_lock

ret

kill

wait_task_inactive

child

return

ret

static

may_attach

task_struct

task

dumpable

task

current

return

current

uid

task

euid

current

uid

task

suid

current

uid

task

uid

current

gid

task

egid

current

gid

task

sgid

current

gid

task

gid

capable

CAP_SYS_PTRACE

return

EPERM

smp_rmb

task

mm

dumpable

task

mm

dumpable

dumpable

capable

CAP_SYS_PTRACE

return

EPERM

return

security_ptrace

current

task

ptrace_may_attach

task_struct

task

err

task_lock

task

err

may_attach

task

task_unlock

task

return

err

ptrace_attach

task_struct

task

retval

audit_ptrace

task

retval

EPERM

task

pid

goto

out

task

tgid

current

tgid

goto

out

repeat

task_lock

task

local_irq_disable

write_trylock

tasklist_lock

local_irq_enable

task_unlock

task

cpu_relax

write_can_lock

tasklist_lock

goto

repeat

task

mm

goto

bad

task

ptrace

PT_PTRACED

goto

bad

retval

may_attach

task

retval

goto

bad

task

ptrace

PT_PTRACED

task

real_parent

current

PT_ATTACHED

capable

CAP_SYS_PTRACE

task

ptrace

PT_PTRACE_CAP

__ptrace_link

task

current

force_sig_specific

SIGSTOP

task

bad

write_unlock_irq

tasklist_lock

task_unlock

task

out

return

retval

static

inline

void

__ptrace_detach

task_struct

child

data

child

exit_code

data

__ptrace_unlink

child

child

exit_state

EXIT_ZOMBIE

wake_up_process

child

ptrace_detach

task_struct

child

data

valid_signal

data

return

EIO

ptrace_disable

child

write_lock_irq

tasklist_lock

child

ptrace

__ptrace_detach

child

data

write_unlock_irq

tasklist_lock

return

ptrace_readdata

task_struct

tsk

src

__user

dst

len

copied

len

buf

this_len

retval

this_len

len

sizeof

buf

sizeof

buf

len

retval

access_process_vm

tsk

src

buf

this_len

retval

copied

return

EIO

copy_to_user

dst

buf

retval

return

EFAULT

copied

retval

src

retval

dst

retval

len

retval

return

copied

ptrace_writedata

task_struct

tsk

__user

src

dst

len

copied

len

buf

this_len

retval

this_len

len

sizeof

buf

sizeof

buf

len

copy_from_user

buf

src

this_len

return

EFAULT

retval

access_process_vm

tsk

dst

buf

this_len

retval

copied

return

EIO

copied

retval

src

retval

dst

retval

len

retval

return

copied

static

ptrace_setoptions

task_struct

child

data

child

ptrace

PT_TRACE_MASK

data

PTRACE_O_TRACESYSGOOD

child

ptrace

PT_TRACESYSGOOD

data

PTRACE_O_TRACEFORK

child

ptrace

PT_TRACE_FORK

data

PTRACE_O_TRACEVFORK

child

ptrace

PT_TRACE_VFORK

data

PTRACE_O_TRACECLONE

child

ptrace

PT_TRACE_CLONE

data

PTRACE_O_TRACEEXEC

child

ptrace

PT_TRACE_EXEC

data

PTRACE_O_TRACEVFORKDONE

child

ptrace

PT_TRACE_VFORK_DONE

data

PTRACE_O_TRACEEXIT

child

ptrace

PT_TRACE_EXIT

return

data

PTRACE_O_MASK

EINVAL

static

ptrace_getsiginfo

task_struct

child

siginfo_t

__user

data

siginfo_t

lastinfo

error

ESRCH

read_lock

tasklist_lock

likely

child

sighand

NULL

error

EINVAL

spin_lock_irq

child

sighand

siglock

likely

child

last_siginfo

NULL

lastinfo

child

last_siginfo

error

spin_unlock_irq

child

sighand

siglock

read_unlock

tasklist_lock

error

return

copy_siginfo_to_user

data

lastinfo

return

error

static

ptrace_setsiginfo

task_struct

child

siginfo_t

__user

data

siginfo_t

newinfo

error

ESRCH

copy_from_user

newinfo

data

sizeof

siginfo_t

return

EFAULT

read_lock

tasklist_lock

likely

child

sighand

NULL

error

EINVAL

spin_lock_irq

child

sighand

siglock

likely

child

last_siginfo

NULL

child

last_siginfo

newinfo

error

spin_unlock_irq

child

sighand

siglock

read_unlock

tasklist_lock

return

error

ptrace_request

task_struct

child

request

addr

data

ret

EIO

request

PTRACE_OLDSETOPTIONS

case

PTRACE_OLDSETOPTIONS

case

PTRACE_SETOPTIONS

ret

ptrace_setoptions

child

data

case

PTRACE_GETEVENTMSG

ret

put_user

child

ptrace_message

__user

data

case

PTRACE_GETSIGINFO

ret

ptrace_getsiginfo

child

siginfo_t

__user

data

case

PTRACE_SETSIGINFO

ret

ptrace_setsiginfo

child

siginfo_t

__user

data

default

return

ret

ptrace_traceme

void

ret

EPERM

task_lock

current

current

ptrace

PT_PTRACED

ret

security_ptrace

current

parent

current

ret

current

ptrace

PT_PTRACED

task_unlock

current

return

ret

task_struct

ptrace_get_task_struct

pid_t

pid

task_struct

child

pid

return

ERR_PTR

EPERM

read_lock

tasklist_lock

child

find_task_by_pid

pid

child

get_task_struct

child

read_unlock

tasklist_lock

child

return

ERR_PTR

ESRCH

return

child

__ARCH_SYS_PTRACE

asmlinkage

sys_ptrace

request

pid

addr

data

task_struct

child

ret

lock_kernel

request

PTRACE_TRACEME

ret

ptrace_traceme

goto

out

child

ptrace_get_task_struct

pid

IS_ERR

child

ret

PTR_ERR

child

goto

out

request

PTRACE_ATTACH

ret

ptrace_attach

child

goto

out_put_task_struct

ret

ptrace_check_attach

child

request

PTRACE_KILL

ret

goto

out_put_task_struct

ret

arch_ptrace

child

request

addr

data

ret

goto

out_put_task_struct

out_put_task_struct

put_task_struct

child

out

unlock_kernel

return

ret

static

rcu_ctrlblk

rcu_ctrlblk

cur

completed

lock

__SPIN_LOCK_UNLOCKED

rcu_ctrlblk

lock

cpumask

CPU_MASK_NONE

static

rcu_ctrlblk

rcu_bh_ctrlblk

cur

completed

lock

__SPIN_LOCK_UNLOCKED

rcu_bh_ctrlblk

lock

cpumask

CPU_MASK_NONE

DEFINE_PER_CPU

rcu_data

rcu_data

L

DEFINE_PER_CPU

rcu_data

rcu_bh_data

L

static

DEFINE_PER_CPU

tasklet_struct

rcu_tasklet

NULL

static

blimit

static

qhimark

static

qlowmark

static

atomic_t

rcu_barrier_cpu_count

static

DEFINE_MUTEX

rcu_barrier_mutex

static

completion

rcu_barrier_completion

CONFIG_SMP

static

void

force_quiescent_state

rcu_data

rdp

rcu_ctrlblk

rcp

cpu

cpumask_t

cpumask

set_need_resched

unlikely

rcp

signaled

rcp

signaled

cpumask

rcp

cpumask

cpu_clear

rdp

cpu

cpumask

for_each_cpu_mask

cpu

cpumask

smp_send_reschedule

cpu

static

inline

void

force_quiescent_state

rcu_data

rdp

rcu_ctrlblk

rcp

set_need_resched

void

fastcall

call_rcu

rcu_head

head

void

func

rcu_head

rcu

flags

rcu_data

rdp

head

func

func

head

next

NULL

local_irq_save

flags

rdp

__get_cpu_var

rcu_data

rdp

nxttail

head

rdp

nxttail

head

next

unlikely

rdp

qlen

qhimark

rdp

blimit

INT_MAX

force_quiescent_state

rdp

rcu_ctrlblk

local_irq_restore

flags

void

fastcall

call_rcu_bh

rcu_head

head

void

func

rcu_head

rcu

flags

rcu_data

rdp

head

func

func

head

next

NULL

local_irq_save

flags

rdp

__get_cpu_var

rcu_bh_data

rdp

nxttail

head

rdp

nxttail

head

next

unlikely

rdp

qlen

qhimark

rdp

blimit

INT_MAX

force_quiescent_state

rdp

rcu_bh_ctrlblk

local_irq_restore

flags

rcu_batches_completed

void

return

rcu_ctrlblk

completed

rcu_batches_completed_bh

void

return

rcu_bh_ctrlblk

completed

static

void

rcu_barrier_callback

rcu_head

notused

atomic_dec_and_test

rcu_barrier_cpu_count

complete

rcu_barrier_completion

static

void

rcu_barrier_func

void

notused

cpu

smp_processor_id

rcu_data

rdp

per_cpu

rcu_data

cpu

rcu_head

head

head

rdp

barrier

atomic_inc

rcu_barrier_cpu_count

call_rcu

head

rcu_barrier_callback

void

rcu_barrier

void

BUG_ON

in_interrupt

mutex_lock

rcu_barrier_mutex

init_completion

rcu_barrier_completion

atomic_set

rcu_barrier_cpu_count

on_each_cpu

rcu_barrier_func

NULL

wait_for_completion

rcu_barrier_completion

mutex_unlock

rcu_barrier_mutex

EXPORT_SYMBOL_GPL

rcu_barrier

static

void

rcu_do_batch

rcu_data

rdp

rcu_head

next

list

count

list

rdp

donelist

list

next

list

next

prefetch

next

list

func

list

list

next

count

rdp

blimit

rdp

donelist

list

local_irq_disable

rdp

qlen

count

local_irq_enable

rdp

blimit

INT_MAX

rdp

qlen

qlowmark

rdp

blimit

blimit

rdp

donelist

rdp

donetail

rdp

donelist

tasklet_schedule

per_cpu

rcu_tasklet

rdp

cpu

static

void

rcu_start_batch

rcu_ctrlblk

rcp

rcp

next_pending

rcp

completed

rcp

cur

rcp

next_pending

smp_wmb

rcp

cur

smp_mb

cpus_andnot

rcp

cpumask

cpu_online_map

nohz_cpu_mask

rcp

signaled

static

void

cpu_quiet

cpu

rcu_ctrlblk

rcp

cpu_clear

cpu

rcp

cpumask

cpus_empty

rcp

cpumask

rcp

completed

rcp

cur

rcu_start_batch

rcp

static

void

rcu_check_quiescent_state

rcu_ctrlblk

rcp

rcu_data

rdp

rdp

quiescbatch

rcp

cur

rdp

qs_pending

rdp

passed_quiesc

rdp

quiescbatch

rcp

cur

return

rdp

qs_pending

return

rdp

passed_quiesc

return

rdp

qs_pending

spin_lock

rcp

lock

likely

rdp

quiescbatch

rcp

cur

cpu_quiet

rdp

cpu

rcp

spin_unlock

rcp

lock

CONFIG_HOTPLUG_CPU

static

void

rcu_move_batch

rcu_data

this_rdp

rcu_head

list

rcu_head

tail

local_irq_disable

this_rdp

nxttail

list

list

this_rdp

nxttail

tail

local_irq_enable

static

void

__rcu_offline_cpu

rcu_data

this_rdp

rcu_ctrlblk

rcp

rcu_data

rdp

spin_lock_bh

rcp

lock

rcp

cur

rcp

completed

cpu_quiet

rdp

cpu

rcp

spin_unlock_bh

rcp

lock

rcu_move_batch

this_rdp

rdp

curlist

rdp

curtail

rcu_move_batch

this_rdp

rdp

nxtlist

rdp

nxttail

rcu_move_batch

this_rdp

rdp

donelist

rdp

donetail

static

void

rcu_offline_cpu

cpu

rcu_data

this_rdp

get_cpu_var

rcu_data

rcu_data

this_bh_rdp

get_cpu_var

rcu_bh_data

__rcu_offline_cpu

this_rdp

rcu_ctrlblk

per_cpu

rcu_data

cpu

__rcu_offline_cpu

this_bh_rdp

rcu_bh_ctrlblk

per_cpu

rcu_bh_data

cpu

put_cpu_var

rcu_data

put_cpu_var

rcu_bh_data

tasklet_kill_immediate

per_cpu

rcu_tasklet

cpu

cpu

static

void

rcu_offline_cpu

cpu

static

void

__rcu_process_callbacks

rcu_ctrlblk

rcp

rcu_data

rdp

rdp

curlist

rcu_batch_before

rcp

completed

rdp

batch

rdp

donetail

rdp

curlist

rdp

donetail

rdp

curtail

rdp

curlist

NULL

rdp

curtail

rdp

curlist

rdp

nxtlist

rdp

curlist

local_irq_disable

rdp

curlist

rdp

nxtlist

rdp

curtail

rdp

nxttail

rdp

nxtlist

NULL

rdp

nxttail

rdp

nxtlist

local_irq_enable

rdp

batch

rcp

cur

smp_rmb

rcp

next_pending

spin_lock

rcp

lock

rcp

next_pending

rcu_start_batch

rcp

spin_unlock

rcp

lock

rcu_check_quiescent_state

rcp

rdp

rdp

donelist

rcu_do_batch

rdp

static

void

rcu_process_callbacks

unused

__rcu_process_callbacks

rcu_ctrlblk

__get_cpu_var

rcu_data

__rcu_process_callbacks

rcu_bh_ctrlblk

__get_cpu_var

rcu_bh_data

static

__rcu_pending

rcu_ctrlblk

rcp

rcu_data

rdp

rdp

curlist

rcu_batch_before

rcp

completed

rdp

batch

return

rdp

curlist

rdp

nxtlist

return

rdp

donelist

return

rdp

quiescbatch

rcp

cur

rdp

qs_pending

return

return

rcu_pending

cpu

return

__rcu_pending

rcu_ctrlblk

per_cpu

rcu_data

cpu

__rcu_pending

rcu_bh_ctrlblk

per_cpu

rcu_bh_data

cpu

rcu_needs_cpu

cpu

rcu_data

rdp

per_cpu

rcu_data

cpu

rcu_data

rdp_bh

per_cpu

rcu_bh_data

cpu

return

rdp

curlist

rdp_bh

curlist

rcu_pending

cpu

void

rcu_check_callbacks

cpu

user

user

idle_cpu

cpu

in_softirq

hardirq_count

HARDIRQ_SHIFT

rcu_qsctr_inc

cpu

rcu_bh_qsctr_inc

cpu

in_softirq

rcu_bh_qsctr_inc

cpu

tasklet_schedule

per_cpu

rcu_tasklet

cpu

static

void

rcu_init_percpu_data

cpu

rcu_ctrlblk

rcp

rcu_data

rdp

memset

rdp

sizeof

rdp

rdp

curtail

rdp

curlist

rdp

nxttail

rdp

nxtlist

rdp

donetail

rdp

donelist

rdp

quiescbatch

rcp

completed

rdp

qs_pending

rdp

cpu

cpu

rdp

blimit

blimit

static

void

__devinit

rcu_online_cpu

cpu

rcu_data

rdp

per_cpu

rcu_data

cpu

rcu_data

bh_rdp

per_cpu

rcu_bh_data

cpu

rcu_init_percpu_data

cpu

rcu_ctrlblk

rdp

rcu_init_percpu_data

cpu

rcu_bh_ctrlblk

bh_rdp

tasklet_init

per_cpu

rcu_tasklet

cpu

rcu_process_callbacks

UL

static

__cpuinit

rcu_cpu_notify

notifier_block

self

action

void

hcpu

cpu

hcpu

action

case

CPU_UP_PREPARE

case

CPU_UP_PREPARE_FROZEN

rcu_online_cpu

cpu

case

CPU_DEAD

case

CPU_DEAD_FROZEN

rcu_offline_cpu

cpu

default

return

NOTIFY_OK

static

notifier_block

__cpuinitdata

rcu_nb

notifier_call

rcu_cpu_notify

void

__init

rcu_init

void

rcu_cpu_notify

rcu_nb

CPU_UP_PREPARE

void

smp_processor_id

register_cpu_notifier

rcu_nb

rcu_synchronize

rcu_head

head

completion

completion

static

void

wakeme_after_rcu

rcu_head

head

rcu_synchronize

rcu

rcu

container_of

head

rcu_synchronize

head

complete

rcu

completion

void

synchronize_rcu

void

rcu_synchronize

rcu

init_completion

rcu

completion

call_rcu

rcu

head

wakeme_after_rcu

wait_for_completion

rcu

completion

module_param

blimit

module_param

qhimark

module_param

qlowmark

EXPORT_SYMBOL_GPL

rcu_batches_completed

EXPORT_SYMBOL_GPL

rcu_batches_completed_bh

EXPORT_SYMBOL_GPL

call_rcu

EXPORT_SYMBOL_GPL

call_rcu_bh

EXPORT_SYMBOL_GPL

synchronize_rcu

MODULE_LICENSE

MODULE_AUTHOR

static

nreaders

static

nfakewriters

static

stat_interval

static

verbose

static

test_no_idle_hz

static

shuffle_interval

static

torture_type

module_param

nreaders

MODULE_PARM_DESC

nreaders

module_param

nfakewriters

MODULE_PARM_DESC

nfakewriters

module_param

stat_interval

MODULE_PARM_DESC

stat_interval

module_param

verbose

bool

MODULE_PARM_DESC

verbose

module_param

test_no_idle_hz

bool

MODULE_PARM_DESC

test_no_idle_hz

module_param

shuffle_interval

MODULE_PARM_DESC

shuffle_interval

module_param

torture_type

charp

MODULE_PARM_DESC

torture_type

TORTURE_FLAG

PRINTK_STRING

s

printk

KERN_ALERT

TORTURE_FLAG

s

torture_type

VERBOSE_PRINTK_STRING

s

verbose

printk

KERN_ALERT

TORTURE_FLAG

s

torture_type

VERBOSE_PRINTK_ERRSTRING

s

verbose

printk

KERN_ALERT

TORTURE_FLAG

s

torture_type

static

printk_buf

static

nrealreaders

static

task_struct

writer_task

static

task_struct

fakewriter_tasks

static

task_struct

reader_tasks

static

task_struct

stats_task

static

task_struct

shuffler_task

RCU_TORTURE_PIPE_LEN

rcu_torture

rcu_head

rtort_rcu

rtort_pipe_count

list_head

rtort_free

rtort_mbtest

static

fullstop

static

LIST_HEAD

rcu_torture_freelist

static

rcu_torture

rcu_torture_current

NULL

static

rcu_torture_current_version

static

rcu_torture

rcu_tortures

RCU_TORTURE_PIPE_LEN

static

DEFINE_SPINLOCK

rcu_torture_lock

static

DEFINE_PER_CPU

RCU_TORTURE_PIPE_LEN

rcu_torture_count

static

DEFINE_PER_CPU

RCU_TORTURE_PIPE_LEN

rcu_torture_batch

static

atomic_t

rcu_torture_wcount

RCU_TORTURE_PIPE_LEN

static

atomic_t

n_rcu_torture_alloc

static

atomic_t

n_rcu_torture_alloc_fail

static

atomic_t

n_rcu_torture_free

static

atomic_t

n_rcu_torture_mberror

static

atomic_t

n_rcu_torture_error

static

list_head

rcu_torture_removed

static

rcu_torture

rcu_torture_alloc

void

list_head

p

spin_lock_bh

rcu_torture_lock

list_empty

rcu_torture_freelist

atomic_inc

n_rcu_torture_alloc_fail

spin_unlock_bh

rcu_torture_lock

return

NULL

atomic_inc

n_rcu_torture_alloc

p

rcu_torture_freelist

next

list_del_init

p

spin_unlock_bh

rcu_torture_lock

return

container_of

p

rcu_torture

rtort_free

static

void

rcu_torture_free

rcu_torture

p

atomic_inc

n_rcu_torture_free

spin_lock_bh

rcu_torture_lock

list_add_tail

p

rtort_free

rcu_torture_freelist

spin_unlock_bh

rcu_torture_lock

rcu_random_state

rrs_state

rrs_count

RCU_RANDOM_MULT

RCU_RANDOM_ADD

RCU_RANDOM_REFRESH

DEFINE_RCU_RANDOM

name

rcu_random_state

name

static

rcu_random

rcu_random_state

rrsp

refresh

rrsp

rrs_count

get_random_bytes

refresh

sizeof

refresh

rrsp

rrs_state

refresh

rrsp

rrs_count

RCU_RANDOM_REFRESH

rrsp

rrs_state

rrsp

rrs_state

RCU_RANDOM_MULT

RCU_RANDOM_ADD

return

swahw32

rrsp

rrs_state

rcu_torture_ops

void

init

void

void

cleanup

void

readlock

void

void

readdelay

rcu_random_state

rrsp

void

readunlock

idx

completed

void

void

deferredfree

rcu_torture

p

void

sync

void

stats

page

name

static

rcu_torture_ops

cur_ops

NULL

static

rcu_torture_read_lock

void

__acquires

RCU

rcu_read_lock

return

static

void

rcu_read_delay

rcu_random_state

rrsp

delay

longdelay

delay

rcu_random

rrsp

nrealreaders

longdelay

delay

udelay

longdelay

static

void

rcu_torture_read_unlock

idx

__releases

RCU

rcu_read_unlock

static

rcu_torture_completed

void

return

rcu_batches_completed

static

void

rcu_torture_cb

rcu_head

p

i

rcu_torture

rp

container_of

p

rcu_torture

rtort_rcu

fullstop

return

i

rp

rtort_pipe_count

i

RCU_TORTURE_PIPE_LEN

i

RCU_TORTURE_PIPE_LEN

atomic_inc

rcu_torture_wcount

i

rp

rtort_pipe_count

RCU_TORTURE_PIPE_LEN

rp

rtort_mbtest

rcu_torture_free

rp

cur_ops

deferredfree

rp

static

void

rcu_torture_deferred_free

rcu_torture

p

call_rcu

p

rtort_rcu

rcu_torture_cb

static

rcu_torture_ops

rcu_ops

init

NULL

cleanup

NULL

readlock

rcu_torture_read_lock

readdelay

rcu_read_delay

readunlock

rcu_torture_read_unlock

completed

rcu_torture_completed

deferredfree

rcu_torture_deferred_free

sync

synchronize_rcu

stats

NULL

name

static

void

rcu_sync_torture_deferred_free

rcu_torture

p

i

rcu_torture

rp

rcu_torture

rp1

cur_ops

sync

list_add

p

rtort_free

rcu_torture_removed

list_for_each_entry_safe

rp

rp1

rcu_torture_removed

rtort_free

i

rp

rtort_pipe_count

i

RCU_TORTURE_PIPE_LEN

i

RCU_TORTURE_PIPE_LEN

atomic_inc

rcu_torture_wcount

i

rp

rtort_pipe_count

RCU_TORTURE_PIPE_LEN

rp

rtort_mbtest

list_del

rp

rtort_free

rcu_torture_free

rp

static

void

rcu_sync_torture_init

void

INIT_LIST_HEAD

rcu_torture_removed

static

rcu_torture_ops

rcu_sync_ops

init

rcu_sync_torture_init

cleanup

NULL

readlock

rcu_torture_read_lock

readdelay

rcu_read_delay

readunlock

rcu_torture_read_unlock

completed

rcu_torture_completed

deferredfree

rcu_sync_torture_deferred_free

sync

synchronize_rcu

stats

NULL

name

static

rcu_bh_torture_read_lock

void

__acquires

RCU_BH

rcu_read_lock_bh

return

static

void

rcu_bh_torture_read_unlock

idx

__releases

RCU_BH

rcu_read_unlock_bh

static

rcu_bh_torture_completed

void

return

rcu_batches_completed_bh

static

void

rcu_bh_torture_deferred_free

rcu_torture

p

call_rcu_bh

p

rtort_rcu

rcu_torture_cb

rcu_bh_torture_synchronize

rcu_head

head

completion

completion

static

void

rcu_bh_torture_wakeme_after_cb

rcu_head

head

rcu_bh_torture_synchronize

rcu

rcu

container_of

head

rcu_bh_torture_synchronize

head

complete

rcu

completion

static

void

rcu_bh_torture_synchronize

void

rcu_bh_torture_synchronize

rcu

init_completion

rcu

completion

call_rcu_bh

rcu

head

rcu_bh_torture_wakeme_after_cb

wait_for_completion

rcu

completion

static

rcu_torture_ops

rcu_bh_ops

init

NULL

cleanup

NULL

readlock

rcu_bh_torture_read_lock

readdelay

rcu_read_delay

readunlock

rcu_bh_torture_read_unlock

completed

rcu_bh_torture_completed

deferredfree

rcu_bh_torture_deferred_free

sync

rcu_bh_torture_synchronize

stats

NULL

name

static

rcu_torture_ops

rcu_bh_sync_ops

init

rcu_sync_torture_init

cleanup

NULL

readlock

rcu_bh_torture_read_lock

readdelay

rcu_read_delay

readunlock

rcu_bh_torture_read_unlock

completed

rcu_bh_torture_completed

deferredfree

rcu_sync_torture_deferred_free

sync

rcu_bh_torture_synchronize

stats

NULL

name

static

srcu_struct

srcu_ctl

static

void

srcu_torture_init

void

init_srcu_struct

srcu_ctl

rcu_sync_torture_init

static

void

srcu_torture_cleanup

void

synchronize_srcu

srcu_ctl

cleanup_srcu_struct

srcu_ctl

static

srcu_torture_read_lock

void

__acquires

srcu_ctl

return

srcu_read_lock

srcu_ctl

static

void

srcu_read_delay

rcu_random_state

rrsp

delay

uspertick

HZ

longdelay

delay

rcu_random

rrsp

nrealreaders

longdelay

uspertick

delay

schedule_timeout_interruptible

longdelay

static

void

srcu_torture_read_unlock

idx

__releases

srcu_ctl

srcu_read_unlock

srcu_ctl

idx

static

srcu_torture_completed

void

return

srcu_batches_completed

srcu_ctl

static

void

srcu_torture_synchronize

void

synchronize_srcu

srcu_ctl

static

srcu_torture_stats

page

cnt

cpu

idx

srcu_ctl

completed

x1

cnt

sprintf

page

cnt

torture_type

TORTURE_FLAG

idx

for_each_possible_cpu

cpu

cnt

sprintf

page

cnt

cpu

per_cpu_ptr

srcu_ctl

per_cpu_ref

cpu

c

idx

per_cpu_ptr

srcu_ctl

per_cpu_ref

cpu

c

idx

cnt

sprintf

page

cnt

return

cnt

static

rcu_torture_ops

srcu_ops

init

srcu_torture_init

cleanup

srcu_torture_cleanup

readlock

srcu_torture_read_lock

readdelay

srcu_read_delay

readunlock

srcu_torture_read_unlock

completed

srcu_torture_completed

deferredfree

rcu_sync_torture_deferred_free

sync

srcu_torture_synchronize

stats

srcu_torture_stats

name

static

sched_torture_read_lock

void

preempt_disable

return

static

void

sched_torture_read_unlock

idx

preempt_enable

static

sched_torture_completed

void

return

static

void

sched_torture_synchronize

void

synchronize_sched

static

rcu_torture_ops

sched_ops

init

rcu_sync_torture_init

cleanup

NULL

readlock

sched_torture_read_lock

readdelay

rcu_read_delay

readunlock

sched_torture_read_unlock

completed

sched_torture_completed

deferredfree

rcu_sync_torture_deferred_free

sync

sched_torture_synchronize

stats

NULL

name

static

rcu_torture_writer

void

arg

i

oldbatch

rcu_batches_completed

rcu_torture

rp

rcu_torture

old_rp

static

DEFINE_RCU_RANDOM

rand

VERBOSE_PRINTK_STRING

set_user_nice

current

current

flags

PF_NOFREEZE

schedule_timeout_uninterruptible

rp

rcu_torture_alloc

NULL

rp

rtort_pipe_count

udelay

rcu_random

rand

x3ff

old_rp

rcu_torture_current

rp

rtort_mbtest

rcu_assign_pointer

rcu_torture_current

rp

smp_wmb

old_rp

i

old_rp

rtort_pipe_count

i

RCU_TORTURE_PIPE_LEN

i

RCU_TORTURE_PIPE_LEN

atomic_inc

rcu_torture_wcount

i

old_rp

rtort_pipe_count

cur_ops

deferredfree

old_rp

rcu_torture_current_version

oldbatch

cur_ops

completed

kthread_should_stop

fullstop

VERBOSE_PRINTK_STRING

kthread_should_stop

schedule_timeout_uninterruptible

return

static

rcu_torture_fakewriter

void

arg

DEFINE_RCU_RANDOM

rand

VERBOSE_PRINTK_STRING

set_user_nice

current

current

flags

PF_NOFREEZE

schedule_timeout_uninterruptible

rcu_random

rand

udelay

rcu_random

rand

x3ff

cur_ops

sync

kthread_should_stop

fullstop

VERBOSE_PRINTK_STRING

kthread_should_stop

schedule_timeout_uninterruptible

return

static

rcu_torture_reader

void

arg

completed

idx

DEFINE_RCU_RANDOM

rand

rcu_torture

p

pipe_count

VERBOSE_PRINTK_STRING

set_user_nice

current

current

flags

PF_NOFREEZE

idx

cur_ops

readlock

completed

cur_ops

completed

p

rcu_dereference

rcu_torture_current

p

NULL

cur_ops

readunlock

idx

schedule_timeout_interruptible

HZ

p

rtort_mbtest

atomic_inc

n_rcu_torture_mberror

cur_ops

readdelay

rand

preempt_disable

pipe_count

p

rtort_pipe_count

pipe_count

RCU_TORTURE_PIPE_LEN

pipe_count

RCU_TORTURE_PIPE_LEN

__get_cpu_var

rcu_torture_count

pipe_count

completed

cur_ops

completed

completed

completed

RCU_TORTURE_PIPE_LEN

completed

RCU_TORTURE_PIPE_LEN

__get_cpu_var

rcu_torture_batch

completed

preempt_enable

cur_ops

readunlock

idx

schedule

kthread_should_stop

fullstop

VERBOSE_PRINTK_STRING

kthread_should_stop

schedule_timeout_uninterruptible

return

static

rcu_torture_printk

page

cnt

cpu

i

pipesummary

RCU_TORTURE_PIPE_LEN

batchsummary

RCU_TORTURE_PIPE_LEN

for_each_possible_cpu

cpu

i

i

RCU_TORTURE_PIPE_LEN

i

pipesummary

i

per_cpu

rcu_torture_count

cpu

i

batchsummary

i

per_cpu

rcu_torture_batch

cpu

i

i

RCU_TORTURE_PIPE_LEN

i

i

pipesummary

i

cnt

sprintf

page

cnt

torture_type

TORTURE_FLAG

cnt

sprintf

page

cnt

rcu_torture_current

rcu_torture_current_version

list_empty

rcu_torture_freelist

atomic_read

n_rcu_torture_alloc

atomic_read

n_rcu_torture_alloc_fail

atomic_read

n_rcu_torture_free

atomic_read

n_rcu_torture_mberror

atomic_read

n_rcu_torture_mberror

cnt

sprintf

page

cnt

cnt

sprintf

page

cnt

torture_type

TORTURE_FLAG

i

cnt

sprintf

page

cnt

atomic_inc

n_rcu_torture_error

cnt

sprintf

page

cnt

i

i

RCU_TORTURE_PIPE_LEN

i

cnt

sprintf

page

cnt

pipesummary

i

cnt

sprintf

page

cnt

torture_type

TORTURE_FLAG

cnt

sprintf

page

cnt

i

i

RCU_TORTURE_PIPE_LEN

i

cnt

sprintf

page

cnt

batchsummary

i

cnt

sprintf

page

cnt

torture_type

TORTURE_FLAG

cnt

sprintf

page

cnt

i

i

RCU_TORTURE_PIPE_LEN

i

cnt

sprintf

page

cnt

atomic_read

rcu_torture_wcount

i

cnt

sprintf

page

cnt

cur_ops

stats

cnt

cur_ops

stats

page

cnt

return

cnt

static

void

rcu_torture_stats_print

void

cnt

cnt

rcu_torture_printk

printk_buf

printk

KERN_ALERT

printk_buf

static

rcu_torture_stats

void

arg

VERBOSE_PRINTK_STRING

schedule_timeout_interruptible

stat_interval

HZ

rcu_torture_stats_print

kthread_should_stop

VERBOSE_PRINTK_STRING

return

static

rcu_idle_cpu

static

void

rcu_torture_shuffle_tasks

void

cpumask_t

tmp_mask

CPU_MASK_ALL

i

lock_cpu_hotplug

num_online_cpus

unlock_cpu_hotplug

return

rcu_idle_cpu

cpu_clear

rcu_idle_cpu

tmp_mask

set_cpus_allowed

current

tmp_mask

reader_tasks

i

i

nrealreaders

i

reader_tasks

i

set_cpus_allowed

reader_tasks

i

tmp_mask

fakewriter_tasks

i

i

nfakewriters

i

fakewriter_tasks

i

set_cpus_allowed

fakewriter_tasks

i

tmp_mask

writer_task

set_cpus_allowed

writer_task

tmp_mask

stats_task

set_cpus_allowed

stats_task

tmp_mask

rcu_idle_cpu

rcu_idle_cpu

num_online_cpus

rcu_idle_cpu

unlock_cpu_hotplug

static

rcu_torture_shuffle

void

arg

VERBOSE_PRINTK_STRING

schedule_timeout_interruptible

shuffle_interval

HZ

rcu_torture_shuffle_tasks

kthread_should_stop

VERBOSE_PRINTK_STRING

return

static

inline

void

rcu_torture_print_module_parms

tag

printk

KERN_ALERT

TORTURE_FLAG

torture_type

tag

nrealreaders

nfakewriters

stat_interval

verbose

test_no_idle_hz

shuffle_interval

static

void

rcu_torture_cleanup

void

i

fullstop

shuffler_task

VERBOSE_PRINTK_STRING

kthread_stop

shuffler_task

shuffler_task

NULL

writer_task

VERBOSE_PRINTK_STRING

kthread_stop

writer_task

writer_task

NULL

reader_tasks

i

i

nrealreaders

i

reader_tasks

i

VERBOSE_PRINTK_STRING

kthread_stop

reader_tasks

i

reader_tasks

i

NULL

kfree

reader_tasks

reader_tasks

NULL

rcu_torture_current

NULL

fakewriter_tasks

i

i

nfakewriters

i

fakewriter_tasks

i

VERBOSE_PRINTK_STRING

kthread_stop

fakewriter_tasks

i

fakewriter_tasks

i

NULL

kfree

fakewriter_tasks

fakewriter_tasks

NULL

stats_task

VERBOSE_PRINTK_STRING

kthread_stop

stats_task

stats_task

NULL

rcu_barrier

rcu_torture_stats_print

cur_ops

cleanup

cur_ops

cleanup

atomic_read

n_rcu_torture_error

rcu_torture_print_module_parms

rcu_torture_print_module_parms

static

__init

rcu_torture_init

void

i

cpu

firsterr

static

rcu_torture_ops

torture_ops

rcu_ops

rcu_sync_ops

rcu_bh_ops

rcu_bh_sync_ops

srcu_ops

sched_ops

i

i

ARRAY_SIZE

torture_ops

i

cur_ops

torture_ops

i

strcmp

torture_type

cur_ops

name

i

ARRAY_SIZE

torture_ops

printk

KERN_ALERT

torture_type

return

EINVAL

cur_ops

init

cur_ops

init

nreaders

nrealreaders

nreaders

nrealreaders

num_online_cpus

rcu_torture_print_module_parms

fullstop

INIT_LIST_HEAD

rcu_torture_freelist

i

i

ARRAY_SIZE

rcu_tortures

i

rcu_tortures

i

rtort_mbtest

list_add_tail

rcu_tortures

i

rtort_free

rcu_torture_freelist

rcu_torture_current

NULL

rcu_torture_current_version

atomic_set

n_rcu_torture_alloc

atomic_set

n_rcu_torture_alloc_fail

atomic_set

n_rcu_torture_free

atomic_set

n_rcu_torture_mberror

atomic_set

n_rcu_torture_error

i

i

RCU_TORTURE_PIPE_LEN

i

atomic_set

rcu_torture_wcount

i

for_each_possible_cpu

cpu

i

i

RCU_TORTURE_PIPE_LEN

i

per_cpu

rcu_torture_count

cpu

i

per_cpu

rcu_torture_batch

cpu

i

VERBOSE_PRINTK_STRING

writer_task

kthread_run

rcu_torture_writer

NULL

IS_ERR

writer_task

firsterr

PTR_ERR

writer_task

VERBOSE_PRINTK_ERRSTRING

writer_task

NULL

goto

unwind

fakewriter_tasks

kzalloc

nfakewriters

sizeof

fakewriter_tasks

GFP_KERNEL

fakewriter_tasks

NULL

VERBOSE_PRINTK_ERRSTRING

firsterr

ENOMEM

goto

unwind

i

i

nfakewriters

i

VERBOSE_PRINTK_STRING

fakewriter_tasks

i

kthread_run

rcu_torture_fakewriter

NULL

IS_ERR

fakewriter_tasks

i

firsterr

PTR_ERR

fakewriter_tasks

i

VERBOSE_PRINTK_ERRSTRING

fakewriter_tasks

i

NULL

goto

unwind

reader_tasks

kzalloc

nrealreaders

sizeof

reader_tasks

GFP_KERNEL

reader_tasks

NULL

VERBOSE_PRINTK_ERRSTRING

firsterr

ENOMEM

goto

unwind

i

i

nrealreaders

i

VERBOSE_PRINTK_STRING

reader_tasks

i

kthread_run

rcu_torture_reader

NULL

IS_ERR

reader_tasks

i

firsterr

PTR_ERR

reader_tasks

i

VERBOSE_PRINTK_ERRSTRING

reader_tasks

i

NULL

goto

unwind

stat_interval

VERBOSE_PRINTK_STRING

stats_task

kthread_run

rcu_torture_stats

NULL

IS_ERR

stats_task

firsterr

PTR_ERR

stats_task

VERBOSE_PRINTK_ERRSTRING

stats_task

NULL

goto

unwind

test_no_idle_hz

rcu_idle_cpu

num_online_cpus

shuffler_task

kthread_run

rcu_torture_shuffle

NULL

IS_ERR

shuffler_task

firsterr

PTR_ERR

shuffler_task

VERBOSE_PRINTK_ERRSTRING

shuffler_task

NULL

goto

unwind

return

unwind

rcu_torture_cleanup

return

firsterr

module_init

rcu_torture_init

module_exit

rcu_torture_cleanup

static

DEFINE_MUTEX

relay_channels_mutex

static

LIST_HEAD

relay_channels

static

void

relay_file_mmap_close

vm_area_struct

vma

rchan_buf

buf

vma

vm_private_data

buf

chan

cb

buf_unmapped

buf

vma

vm_file

static

page

relay_buf_nopage

vm_area_struct

vma

address

type

page

page

rchan_buf

buf

vma

vm_private_data

offset

address

vma

vm_start

address

vma

vm_end

return

NOPAGE_SIGBUS

buf

return

NOPAGE_OOM

page

vmalloc_to_page

buf

start

offset

page

return

NOPAGE_OOM

get_page

page

type

type

VM_FAULT_MINOR

return

page

static

vm_operations_struct

relay_file_mmap_ops

nopage

relay_buf_nopage

close

relay_file_mmap_close

relay_mmap_buf

rchan_buf

buf

vm_area_struct

vma

length

vma

vm_end

vma

vm_start

file

filp

vma

vm_file

buf

return

EBADF

length

buf

chan

alloc_size

return

EINVAL

vma

vm_ops

relay_file_mmap_ops

vma

vm_flags

VM_DONTEXPAND

vma

vm_private_data

buf

buf

chan

cb

buf_mapped

buf

filp

return

static

void

relay_alloc_buf

rchan_buf

buf

size_t

size

void

mem

i

j

n_pages

size

PAGE_ALIGN

size

n_pages

size

PAGE_SHIFT

buf

page_array

kcalloc

n_pages

sizeof

page

GFP_KERNEL

buf

page_array

return

NULL

i

i

n_pages

i

buf

page_array

i

alloc_page

GFP_KERNEL

unlikely

buf

page_array

i

goto

depopulate

mem

vmap

buf

page_array

n_pages

VM_MAP

PAGE_KERNEL

mem

goto

depopulate

memset

mem

size

buf

page_count

n_pages

return

mem

depopulate

j

j

i

j

__free_page

buf

page_array

j

kfree

buf

page_array

return

NULL

rchan_buf

relay_create_buf

rchan

chan

rchan_buf

buf

kzalloc

sizeof

rchan_buf

GFP_KERNEL

buf

return

NULL

buf

padding

kmalloc

chan

n_subbufs

sizeof

size_t

GFP_KERNEL

buf

padding

goto

free_buf

buf

start

relay_alloc_buf

buf

chan

alloc_size

buf

start

goto

free_buf

buf

chan

chan

kref_get

buf

chan

kref

return

buf

free_buf

kfree

buf

padding

kfree

buf

return

NULL

void

relay_destroy_channel

kref

kref

rchan

chan

container_of

kref

rchan

kref

kfree

chan

void

relay_destroy_buf

rchan_buf

buf

rchan

chan

buf

chan

i

likely

buf

start

vunmap

buf

start

i

i

buf

page_count

i

__free_page

buf

page_array

i

kfree

buf

page_array

chan

buf

buf

cpu

NULL

kfree

buf

padding

kfree

buf

kref_put

chan

kref

relay_destroy_channel

void

relay_remove_buf

kref

kref

rchan_buf

buf

container_of

kref

rchan_buf

kref

buf

chan

cb

remove_buf_file

buf

dentry

relay_destroy_buf

buf

relay_buf_empty

rchan_buf

buf

return

buf

subbufs_produced

buf

subbufs_consumed

EXPORT_SYMBOL_GPL

relay_buf_empty

relay_buf_full

rchan_buf

buf

size_t

ready

buf

subbufs_produced

buf

subbufs_consumed

return

ready

buf

chan

n_subbufs

EXPORT_SYMBOL_GPL

relay_buf_full

static

subbuf_start_default_callback

rchan_buf

buf

void

subbuf

void

prev_subbuf

size_t

prev_padding

relay_buf_full

buf

return

return

static

void

buf_mapped_default_callback

rchan_buf

buf

file

filp

static

void

buf_unmapped_default_callback

rchan_buf

buf

file

filp

static

dentry

create_buf_file_default_callback

filename

dentry

parent

mode

rchan_buf

buf

is_global

return

NULL

static

remove_buf_file_default_callback

dentry

dentry

return

EINVAL

static

rchan_callbacks

default_channel_callbacks

subbuf_start

subbuf_start_default_callback

buf_mapped

buf_mapped_default_callback

buf_unmapped

buf_unmapped_default_callback

create_buf_file

create_buf_file_default_callback

remove_buf_file

remove_buf_file_default_callback

static

void

wakeup_readers

data

rchan_buf

buf

rchan_buf

data

wake_up_interruptible

buf

read_wait

static

void

__relay_reset

rchan_buf

buf

init

size_t

i

init

init_waitqueue_head

buf

read_wait

kref_init

buf

kref

setup_timer

buf

timer

wakeup_readers

buf

del_timer_sync

buf

timer

buf

subbufs_produced

buf

subbufs_consumed

buf

bytes_consumed

buf

finalized

buf

data

buf

start

buf

offset

i

i

buf

chan

n_subbufs

i

buf

padding

i

buf

chan

cb

subbuf_start

buf

buf

data

NULL

void

relay_reset

rchan

chan

i

chan

return

chan

is_global

chan

buf

__relay_reset

chan

buf

return

mutex_lock

relay_channels_mutex

for_each_online_cpu

i

chan

buf

i

__relay_reset

chan

buf

i

mutex_unlock

relay_channels_mutex

EXPORT_SYMBOL_GPL

relay_reset

static

rchan_buf

relay_open_buf

rchan

chan

cpu

rchan_buf

buf

NULL

dentry

dentry

tmpname

chan

is_global

return

chan

buf

tmpname

kzalloc

NAME_MAX

GFP_KERNEL

tmpname

goto

end

snprintf

tmpname

NAME_MAX

chan

base_filename

cpu

buf

relay_create_buf

chan

buf

goto

free_name

buf

cpu

cpu

__relay_reset

buf

dentry

chan

cb

create_buf_file

tmpname

chan

parent

S_IRUSR

buf

chan

is_global

dentry

goto

free_buf

buf

dentry

dentry

chan

is_global

chan

buf

buf

buf

cpu

goto

free_name

free_buf

relay_destroy_buf

buf

free_name

kfree

tmpname

end

return

buf

static

void

relay_close_buf

rchan_buf

buf

buf

finalized

del_timer_sync

buf

timer

kref_put

buf

kref

relay_remove_buf

static

void

setup_callbacks

rchan

chan

rchan_callbacks

cb

cb

chan

cb

default_channel_callbacks

return

cb

subbuf_start

cb

subbuf_start

subbuf_start_default_callback

cb

buf_mapped

cb

buf_mapped

buf_mapped_default_callback

cb

buf_unmapped

cb

buf_unmapped

buf_unmapped_default_callback

cb

create_buf_file

cb

create_buf_file

create_buf_file_default_callback

cb

remove_buf_file

cb

remove_buf_file

remove_buf_file_default_callback

chan

cb

cb

static

__cpuinit

relay_hotcpu_callback

notifier_block

nb

action

void

hcpu

hotcpu

hcpu

rchan

chan

action

case

CPU_UP_PREPARE

case

CPU_UP_PREPARE_FROZEN

mutex_lock

relay_channels_mutex

list_for_each_entry

chan

relay_channels

list

chan

buf

hotcpu

chan

buf

hotcpu

relay_open_buf

chan

hotcpu

chan

buf

hotcpu

printk

KERN_ERR

hotcpu

mutex_unlock

relay_channels_mutex

return

NOTIFY_BAD

mutex_unlock

relay_channels_mutex

case

CPU_DEAD

case

CPU_DEAD_FROZEN

return

NOTIFY_OK

rchan

relay_open

base_filename

dentry

parent

size_t

subbuf_size

size_t

n_subbufs

rchan_callbacks

cb

void

private_data

i

rchan

chan

base_filename

return

NULL

subbuf_size

n_subbufs

return

NULL

chan

kzalloc

sizeof

rchan

GFP_KERNEL

chan

return

NULL

chan

version

RELAYFS_CHANNEL_VERSION

chan

n_subbufs

n_subbufs

chan

subbuf_size

subbuf_size

chan

alloc_size

FIX_SIZE

subbuf_size

n_subbufs

chan

parent

parent

chan

private_data

private_data

strlcpy

chan

base_filename

base_filename

NAME_MAX

setup_callbacks

chan

cb

kref_init

chan

kref

mutex_lock

relay_channels_mutex

for_each_online_cpu

i

chan

buf

i

relay_open_buf

chan

i

chan

buf

i

goto

free_bufs

list_add

chan

list

relay_channels

mutex_unlock

relay_channels_mutex

return

chan

free_bufs

for_each_online_cpu

i

chan

buf

i

relay_close_buf

chan

buf

i

kref_put

chan

kref

relay_destroy_channel

mutex_unlock

relay_channels_mutex

return

NULL

EXPORT_SYMBOL_GPL

relay_open

size_t

relay_switch_subbuf

rchan_buf

buf

size_t

length

void

old

new

size_t

old_subbuf

new_subbuf

unlikely

length

buf

chan

subbuf_size

goto

toobig

buf

offset

buf

chan

subbuf_size

buf

prev_padding

buf

chan

subbuf_size

buf

offset

old_subbuf

buf

subbufs_produced

buf

chan

n_subbufs

buf

padding

old_subbuf

buf

prev_padding

buf

subbufs_produced

buf

dentry

d_inode

i_size

buf

chan

subbuf_size

buf

padding

old_subbuf

smp_mb

waitqueue_active

buf

read_wait

__mod_timer

buf

timer

jiffies

old

buf

data

new_subbuf

buf

subbufs_produced

buf

chan

n_subbufs

new

buf

start

new_subbuf

buf

chan

subbuf_size

buf

offset

buf

chan

cb

subbuf_start

buf

new

old

buf

prev_padding

buf

offset

buf

chan

subbuf_size

return

buf

data

new

buf

padding

new_subbuf

unlikely

length

buf

offset

buf

chan

subbuf_size

goto

toobig

return

length

toobig

buf

chan

last_toobig

length

return

EXPORT_SYMBOL_GPL

relay_switch_subbuf

void

relay_subbufs_consumed

rchan

chan

cpu

size_t

subbufs_consumed

rchan_buf

buf

chan

return

cpu

NR_CPUS

chan

buf

cpu

return

buf

chan

buf

cpu

buf

subbufs_consumed

subbufs_consumed

buf

subbufs_consumed

buf

subbufs_produced

buf

subbufs_consumed

buf

subbufs_produced

EXPORT_SYMBOL_GPL

relay_subbufs_consumed

void

relay_close

rchan

chan

i

chan

return

mutex_lock

relay_channels_mutex

chan

is_global

chan

buf

relay_close_buf

chan

buf

for_each_possible_cpu

i

chan

buf

i

relay_close_buf

chan

buf

i

chan

last_toobig

printk

KERN_WARNING

chan

last_toobig

chan

subbuf_size

list_del

chan

list

kref_put

chan

kref

relay_destroy_channel

mutex_unlock

relay_channels_mutex

EXPORT_SYMBOL_GPL

relay_close

void

relay_flush

rchan

chan

i

chan

return

chan

is_global

chan

buf

relay_switch_subbuf

chan

buf

return

mutex_lock

relay_channels_mutex

for_each_possible_cpu

i

chan

buf

i

relay_switch_subbuf

chan

buf

i

mutex_unlock

relay_channels_mutex

EXPORT_SYMBOL_GPL

relay_flush

static

relay_file_open

inode

inode

file

filp

rchan_buf

buf

inode

i_private

kref_get

buf

kref

filp

private_data

buf

return

static

relay_file_mmap

file

filp

vm_area_struct

vma

rchan_buf

buf

filp

private_data

return

relay_mmap_buf

buf

vma

static

relay_file_poll

file

filp

poll_table

wait

mask

rchan_buf

buf

filp

private_data

buf

finalized

return

POLLERR

filp

f_mode

FMODE_READ

poll_wait

filp

buf

read_wait

wait

relay_buf_empty

buf

mask

POLLIN

POLLRDNORM

return

mask

static

relay_file_release

inode

inode

file

filp

rchan_buf

buf

filp

private_data

kref_put

buf

kref

relay_remove_buf

return

static

void

relay_file_read_consume

rchan_buf

buf

size_t

read_pos

size_t

bytes_consumed

size_t

subbuf_size

buf

chan

subbuf_size

size_t

n_subbufs

buf

chan

n_subbufs

size_t

read_subbuf

buf

bytes_consumed

bytes_consumed

subbuf_size

relay_subbufs_consumed

buf

chan

buf

cpu

buf

bytes_consumed

buf

bytes_consumed

bytes_consumed

read_pos

read_subbuf

buf

subbufs_consumed

n_subbufs

read_subbuf

read_pos

buf

chan

subbuf_size

buf

bytes_consumed

buf

padding

read_subbuf

subbuf_size

read_subbuf

buf

subbufs_produced

n_subbufs

buf

offset

subbuf_size

return

relay_subbufs_consumed

buf

chan

buf

cpu

buf

bytes_consumed

static

relay_file_read_avail

rchan_buf

buf

size_t

read_pos

size_t

subbuf_size

buf

chan

subbuf_size

size_t

n_subbufs

buf

chan

n_subbufs

size_t

produced

buf

subbufs_produced

size_t

consumed

buf

subbufs_consumed

relay_file_read_consume

buf

read_pos

unlikely

buf

offset

subbuf_size

produced

consumed

return

return

unlikely

produced

consumed

n_subbufs

consumed

produced

n_subbufs

buf

subbufs_consumed

consumed

buf

bytes_consumed

produced

produced

n_subbufs

subbuf_size

buf

offset

consumed

consumed

n_subbufs

subbuf_size

buf

bytes_consumed

consumed

produced

produced

n_subbufs

subbuf_size

consumed

produced

return

return

static

size_t

relay_file_read_subbuf_avail

size_t

read_pos

rchan_buf

buf

size_t

padding

avail

size_t

read_subbuf

read_offset

write_subbuf

write_offset

size_t

subbuf_size

buf

chan

subbuf_size

write_subbuf

buf

data

buf

start

subbuf_size

write_offset

buf

offset

subbuf_size

subbuf_size

buf

offset

read_subbuf

read_pos

subbuf_size

read_offset

read_pos

subbuf_size

padding

buf

padding

read_subbuf

read_subbuf

write_subbuf

read_offset

padding

write_offset

avail

write_offset

read_offset

padding

avail

subbuf_size

padding

read_offset

return

avail

static

size_t

relay_file_read_start_pos

size_t

read_pos

rchan_buf

buf

size_t

read_subbuf

padding

padding_start

padding_end

size_t

subbuf_size

buf

chan

subbuf_size

size_t

n_subbufs

buf

chan

n_subbufs

size_t

consumed

buf

subbufs_consumed

n_subbufs

read_pos

read_pos

consumed

subbuf_size

buf

bytes_consumed

read_subbuf

read_pos

subbuf_size

padding

buf

padding

read_subbuf

padding_start

read_subbuf

subbuf_size

padding

padding_end

read_subbuf

subbuf_size

read_pos

padding_start

read_pos

padding_end

read_subbuf

read_subbuf

n_subbufs

read_pos

read_subbuf

subbuf_size

return

read_pos

static

size_t

relay_file_read_end_pos

rchan_buf

buf

size_t

read_pos

size_t

count

size_t

read_subbuf

padding

end_pos

size_t

subbuf_size

buf

chan

subbuf_size

size_t

n_subbufs

buf

chan

n_subbufs

read_subbuf

read_pos

subbuf_size

padding

buf

padding

read_subbuf

read_pos

subbuf_size

count

padding

subbuf_size

end_pos

read_subbuf

subbuf_size

end_pos

read_pos

count

end_pos

subbuf_size

n_subbufs

end_pos

return

end_pos

static

subbuf_read_actor

size_t

read_start

rchan_buf

buf

size_t

avail

read_descriptor_t

desc

read_actor_t

actor

void

from

ret

from

buf

start

read_start

ret

avail

copy_to_user

desc

arg

buf

from

avail

desc

error

EFAULT

ret

desc

arg

data

ret

desc

written

ret

desc

count

ret

return

ret

static

subbuf_send_actor

size_t

read_start

rchan_buf

buf

size_t

avail

read_descriptor_t

desc

read_actor_t

actor

pidx

poff

subbuf_pages

ret

subbuf_pages

buf

chan

alloc_size

PAGE_SHIFT

pidx

read_start

PAGE_SIZE

subbuf_pages

poff

read_start

PAGE_MASK

avail

page

p

buf

page_array

pidx

len

len

PAGE_SIZE

poff

len

avail

len

avail

len

actor

desc

p

poff

len

desc

error

avail

len

ret

len

poff

pidx

pidx

subbuf_pages

return

ret

typedef

subbuf_actor_t

size_t

read_start

rchan_buf

buf

size_t

avail

read_descriptor_t

desc

read_actor_t

actor

static

ssize_t

relay_file_read_subbufs

file

filp

loff_t

ppos

subbuf_actor_t

subbuf_actor

read_actor_t

actor

read_descriptor_t

desc

rchan_buf

buf

filp

private_data

size_t

read_start

avail

ret

desc

count

return

mutex_lock

filp

f_path

dentry

d_inode

i_mutex

relay_file_read_avail

buf

ppos

read_start

relay_file_read_start_pos

ppos

buf

avail

relay_file_read_subbuf_avail

read_start

buf

avail

avail

min

desc

count

avail

ret

subbuf_actor

read_start

buf

avail

desc

actor

desc

error

ret

relay_file_read_consume

buf

read_start

ret

ppos

relay_file_read_end_pos

buf

read_start

ret

desc

count

ret

mutex_unlock

filp

f_path

dentry

d_inode

i_mutex

return

desc

written

static

ssize_t

relay_file_read

file

filp

__user

buffer

size_t

count

loff_t

ppos

read_descriptor_t

desc

desc

written

desc

count

count

desc

arg

buf

buffer

desc

error

return

relay_file_read_subbufs

filp

ppos

subbuf_read_actor

NULL

desc

static

ssize_t

relay_file_sendfile

file

filp

loff_t

ppos

size_t

count

read_actor_t

actor

void

target

read_descriptor_t

desc

desc

written

desc

count

count

desc

arg

data

target

desc

error

return

relay_file_read_subbufs

filp

ppos

subbuf_send_actor

actor

desc

file_operations

relay_file_operations

open

relay_file_open

poll

relay_file_poll

mmap

relay_file_mmap

read

relay_file_read

llseek

no_llseek

release

relay_file_release

sendfile

relay_file_sendfile

EXPORT_SYMBOL_GPL

relay_file_operations

static

__init

relay_init

void

hotcpu_notifier

relay_hotcpu_callback

return

module_init

relay_init

resource

ioport_resource

name

start

end

IO_SPACE_LIMIT

flags

IORESOURCE_IO

EXPORT_SYMBOL

ioport_resource

resource

iomem_resource

name

start

end

flags

IORESOURCE_MEM

EXPORT_SYMBOL

iomem_resource

static

DEFINE_RWLOCK

resource_lock

CONFIG_PROC_FS

enum

MAX_IORES_LEVEL

static

void

r_next

seq_file

m

void

v

loff_t

pos

resource

p

v

pos

p

child

return

p

child

p

sibling

p

parent

p

p

parent

return

p

sibling

static

void

r_start

seq_file

m

loff_t

pos

__acquires

resource_lock

resource

p

m

private

loff_t

l

read_lock

resource_lock

p

p

child

p

l

pos

p

r_next

m

p

l

return

p

static

void

r_stop

seq_file

m

void

v

__releases

resource_lock

read_unlock

resource_lock

static

r_show

seq_file

m

void

v

resource

root

m

private

resource

r

v

p

width

root

end

x10000

depth

depth

p

r

depth

MAX_IORES_LEVEL

depth

p

p

parent

p

parent

root

seq_printf

m

depth

width

r

start

width

r

end

r

name

r

name

return

static

seq_operations

resource_op

start

r_start

next

r_next

stop

r_stop

show

r_show

static

ioports_open

inode

inode

file

file

res

seq_open

file

resource_op

res

seq_file

m

file

private_data

m

private

ioport_resource

return

res

static

iomem_open

inode

inode

file

file

res

seq_open

file

resource_op

res

seq_file

m

file

private_data

m

private

iomem_resource

return

res

static

file_operations

proc_ioports_operations

open

ioports_open

read

seq_read

llseek

seq_lseek

release

seq_release

static

file_operations

proc_iomem_operations

open

iomem_open

read

seq_read

llseek

seq_lseek

release

seq_release

static

__init

ioresources_init

void

proc_dir_entry

entry

entry

create_proc_entry

NULL

entry

entry

proc_fops

proc_ioports_operations

entry

create_proc_entry

NULL

entry

entry

proc_fops

proc_iomem_operations

return

__initcall

ioresources_init

static

resource

__request_resource

resource

root

resource

new

resource_size_t

start

new

start

resource_size_t

end

new

end

resource

tmp

p

end

start

return

root

start

root

start

return

root

end

root

end

return

root

p

root

child

tmp

p

tmp

tmp

start

end

new

sibling

tmp

p

new

new

parent

root

return

NULL

p

tmp

sibling

tmp

end

start

return

tmp

static

__release_resource

resource

old

resource

tmp

p

p

old

parent

child

tmp

p

tmp

tmp

old

p

tmp

sibling

old

parent

NULL

return

p

tmp

sibling

return

EINVAL

request_resource

resource

root

resource

new

resource

conflict

write_lock

resource_lock

conflict

__request_resource

root

new

write_unlock

resource_lock

return

conflict

EBUSY

EXPORT_SYMBOL

request_resource

release_resource

resource

old

retval

write_lock

resource_lock

retval

__release_resource

old

write_unlock

resource_lock

return

retval

EXPORT_SYMBOL

release_resource

CONFIG_MEMORY_HOTPLUG

find_next_system_ram

resource

res

resource_size_t

start

end

resource

p

BUG_ON

res

start

res

start

end

res

end

BUG_ON

start

end

read_lock

resource_lock

p

iomem_resource

child

p

p

p

sibling

p

flags

res

flags

p

start

end

p

NULL

p

end

start

p

start

end

read_unlock

resource_lock

p

return

res

start

p

start

res

start

p

start

res

end

p

end

res

end

p

end

return

static

find_resource

resource

root

resource

new

resource_size_t

size

resource_size_t

min

resource_size_t

max

resource_size_t

align

void

alignf

void

resource

resource_size_t

resource_size_t

void

alignf_data

resource

this

root

child

new

start

root

start

this

this

start

new

start

this

end

this

this

sibling

this

new

end

this

start

new

end

root

end

new

start

min

new

start

min

new

end

max

new

end

max

new

start

ALIGN

new

start

align

alignf

alignf

alignf_data

new

size

align

new

start

new

end

new

end

new

start

size

new

end

new

start

size

return

this

new

start

this

end

this

this

sibling

return

EBUSY

allocate_resource

resource

root

resource

new

resource_size_t

size

resource_size_t

min

resource_size_t

max

resource_size_t

align

void

alignf

void

resource

resource_size_t

resource_size_t

void

alignf_data

err

write_lock

resource_lock

err

find_resource

root

new

size

min

max

align

alignf

alignf_data

err

__request_resource

root

new

err

EBUSY

write_unlock

resource_lock

return

err

EXPORT_SYMBOL

allocate_resource

insert_resource

resource

parent

resource

new

result

resource

first

next

write_lock

resource_lock

parent

first

result

first

__request_resource

parent

new

first

goto

out

result

EBUSY

first

parent

goto

out

first

start

new

start

first

end

new

end

first

start

new

start

first

end

new

end

next

first

next

next

sibling

next

start

new

start

next

end

new

end

goto

out

next

sibling

next

sibling

start

new

end

result

new

parent

parent

new

sibling

next

sibling

new

child

first

next

sibling

NULL

next

first

next

next

next

sibling

next

parent

new

parent

child

first

parent

child

new

next

parent

child

next

sibling

first

next

next

sibling

next

sibling

new

out

write_unlock

resource_lock

return

result

adjust_resource

resource

res

resource_size_t

start

resource_size_t

size

resource

tmp

parent

res

parent

resource_size_t

end

start

size

result

EBUSY

write_lock

resource_lock

start

parent

start

end

parent

end

goto

out

tmp

res

child

tmp

tmp

tmp

sibling

tmp

start

start

tmp

end

end

goto

out

res

sibling

res

sibling

start

end

goto

out

tmp

parent

child

tmp

res

tmp

sibling

res

tmp

tmp

sibling

start

tmp

end

goto

out

res

start

start

res

end

end

result

out

write_unlock

resource_lock

return

result

EXPORT_SYMBOL

adjust_resource

resource

__request_region

resource

parent

resource_size_t

start

resource_size_t

n

name

resource

res

kzalloc

sizeof

res

GFP_KERNEL

res

res

name

name

res

start

start

res

end

start

n

res

flags

IORESOURCE_BUSY

write_lock

resource_lock

resource

conflict

conflict

__request_resource

parent

res

conflict

conflict

parent

parent

conflict

conflict

flags

IORESOURCE_BUSY

kfree

res

res

NULL

write_unlock

resource_lock

return

res

EXPORT_SYMBOL

__request_region

__check_region

resource

parent

resource_size_t

start

resource_size_t

n

resource

res

res

__request_region

parent

start

n

res

return

EBUSY

release_resource

res

kfree

res

return

EXPORT_SYMBOL

__check_region

void

__release_region

resource

parent

resource_size_t

start

resource_size_t

n

resource

p

resource_size_t

end

p

parent

child

end

start

n

write_lock

resource_lock

resource

res

p

res

res

start

start

res

end

end

res

flags

IORESOURCE_BUSY

p

res

child

res

start

start

res

end

end

p

res

sibling

write_unlock

resource_lock

kfree

res

return

p

res

sibling

write_unlock

resource_lock

printk

KERN_WARNING

start

end

EXPORT_SYMBOL

__release_region

region_devres

resource

parent

resource_size_t

start

resource_size_t

n

static

void

devm_region_release

device

dev

void

res

region_devres

this

res

__release_region

this

parent

this

start

this

n

static

devm_region_match

device

dev

void

res

void

match_data

region_devres

this

res

match

match_data

return

this

parent

match

parent

this

start

match

start

this

n

match

n

resource

__devm_request_region

device

dev

resource

parent

resource_size_t

start

resource_size_t

n

name

region_devres

dr

NULL

resource

res

dr

devres_alloc

devm_region_release

sizeof

region_devres

GFP_KERNEL

dr

return

NULL

dr

parent

parent

dr

start

start

dr

n

n

res

__request_region

parent

start

n

name

res

devres_add

dev

dr

devres_free

dr

return

res

EXPORT_SYMBOL

__devm_request_region

void

__devm_release_region

device

dev

resource

parent

resource_size_t

start

resource_size_t

n

region_devres

match_data

parent

start

n

__release_region

parent

start

n

WARN_ON

devres_destroy

dev

devm_region_release

devm_region_match

match_data

EXPORT_SYMBOL

__devm_release_region

MAXRESERVE

static

__init

reserve_setup

str

static

reserved

static

resource

reserve

MAXRESERVE

io_start

io_num

x

reserved

get_option

str

io_start

get_option

str

io_num

x

MAXRESERVE

resource

res

reserve

x

res

name

res

start

io_start

res

end

io_start

io_num

res

flags

IORESOURCE_BUSY

res

child

NULL

request_resource

res

start

x10000

iomem_resource

ioport_resource

res

reserved

x

return

__setup

reserve_setup

CONFIG_DEBUG_RT_MUTEXES

static

void

rt_mutex_set_owner

rt_mutex

lock

task_struct

owner

mask

val

owner

mask

rt_mutex_has_waiters

lock

val

RT_MUTEX_HAS_WAITERS

lock

owner

task_struct

val

static

inline

void

clear_rt_mutex_waiters

rt_mutex

lock

lock

owner

task_struct

lock

owner

RT_MUTEX_HAS_WAITERS

static

void

fixup_rt_mutex_waiters

rt_mutex

lock

rt_mutex_has_waiters

lock

clear_rt_mutex_waiters

lock

__HAVE_ARCH_CMPXCHG

CONFIG_DEBUG_RT_MUTEXES

rt_mutex_cmpxchg

l

c

n

cmpxchg

l

owner

c

n

c

static

inline

void

mark_rt_mutex_waiters

rt_mutex

lock

owner

p

lock

owner

owner

p

cmpxchg

p

owner

owner

RT_MUTEX_HAS_WAITERS

owner

rt_mutex_cmpxchg

l

c

n

static

inline

void

mark_rt_mutex_waiters

rt_mutex

lock

lock

owner

task_struct

lock

owner

RT_MUTEX_HAS_WAITERS

rt_mutex_getprio

task_struct

task

likely

task_has_pi_waiters

task

return

task

normal_prio

return

min

task_top_pi_waiter

task

pi_list_entry

prio

task

normal_prio

static

void

__rt_mutex_adjust_prio

task_struct

task

prio

rt_mutex_getprio

task

task

prio

prio

rt_mutex_setprio

task

prio

static

void

rt_mutex_adjust_prio

task_struct

task

flags

spin_lock_irqsave

task

pi_lock

flags

__rt_mutex_adjust_prio

task

spin_unlock_irqrestore

task

pi_lock

flags

max_lock_depth

static

rt_mutex_adjust_prio_chain

task_struct

task

deadlock_detect

rt_mutex

orig_lock

rt_mutex_waiter

orig_waiter

task_struct

top_task

rt_mutex

lock

rt_mutex_waiter

waiter

top_waiter

orig_waiter

detect_deadlock

ret

depth

flags

detect_deadlock

debug_rt_mutex_detect_deadlock

orig_waiter

deadlock_detect

again

depth

max_lock_depth

static

prev_max

prev_max

max_lock_depth

prev_max

max_lock_depth

printk

KERN_WARNING

max_lock_depth

top_task

comm

top_task

pid

put_task_struct

task

return

deadlock_detect

EDEADLK

retry

spin_lock_irqsave

task

pi_lock

flags

waiter

task

pi_blocked_on

waiter

waiter

task

goto

out_unlock_pi

orig_waiter

orig_waiter

task

goto

out_unlock_pi

top_waiter

task_has_pi_waiters

task

top_waiter

task_top_pi_waiter

task

goto

out_unlock_pi

detect_deadlock

waiter

list_entry

prio

task

prio

goto

out_unlock_pi

lock

waiter

lock

spin_trylock

lock

wait_lock

spin_unlock_irqrestore

task

pi_lock

flags

cpu_relax

goto

retry

lock

orig_lock

rt_mutex_owner

lock

top_task

debug_rt_mutex_deadlock

deadlock_detect

orig_waiter

lock

spin_unlock

lock

wait_lock

ret

deadlock_detect

EDEADLK

goto

out_unlock_pi

top_waiter

rt_mutex_top_waiter

lock

plist_del

waiter

list_entry

lock

wait_list

waiter

list_entry

prio

task

prio

plist_add

waiter

list_entry

lock

wait_list

spin_unlock_irqrestore

task

pi_lock

flags

put_task_struct

task

task

rt_mutex_owner

lock

get_task_struct

task

spin_lock_irqsave

task

pi_lock

flags

waiter

rt_mutex_top_waiter

lock

plist_del

top_waiter

pi_list_entry

task

pi_waiters

waiter

pi_list_entry

prio

waiter

list_entry

prio

plist_add

waiter

pi_list_entry

task

pi_waiters

__rt_mutex_adjust_prio

task

top_waiter

waiter

plist_del

waiter

pi_list_entry

task

pi_waiters

waiter

rt_mutex_top_waiter

lock

waiter

pi_list_entry

prio

waiter

list_entry

prio

plist_add

waiter

pi_list_entry

task

pi_waiters

__rt_mutex_adjust_prio

task

spin_unlock_irqrestore

task

pi_lock

flags

top_waiter

rt_mutex_top_waiter

lock

spin_unlock

lock

wait_lock

detect_deadlock

waiter

top_waiter

goto

out_put_task

goto

again

out_unlock_pi

spin_unlock_irqrestore

task

pi_lock

flags

out_put_task

put_task_struct

task

return

ret

static

inline

try_to_steal_lock

rt_mutex

lock

task_struct

pendowner

rt_mutex_owner

lock

rt_mutex_waiter

next

flags

rt_mutex_owner_pending

lock

return

pendowner

current

return

spin_lock_irqsave

pendowner

pi_lock

flags

current

prio

pendowner

prio

spin_unlock_irqrestore

pendowner

pi_lock

flags

return

likely

rt_mutex_has_waiters

lock

spin_unlock_irqrestore

pendowner

pi_lock

flags

return

next

rt_mutex_top_waiter

lock

plist_del

next

pi_list_entry

pendowner

pi_waiters

__rt_mutex_adjust_prio

pendowner

spin_unlock_irqrestore

pendowner

pi_lock

flags

likely

next

task

current

spin_lock_irqsave

current

pi_lock

flags

plist_add

next

pi_list_entry

current

pi_waiters

__rt_mutex_adjust_prio

current

spin_unlock_irqrestore

current

pi_lock

flags

return

static

try_to_take_rt_mutex

rt_mutex

lock

mark_rt_mutex_waiters

lock

rt_mutex_owner

lock

try_to_steal_lock

lock

return

debug_rt_mutex_lock

lock

rt_mutex_set_owner

lock

current

rt_mutex_deadlock_account_lock

lock

current

return

static

task_blocks_on_rt_mutex

rt_mutex

lock

rt_mutex_waiter

waiter

detect_deadlock

task_struct

owner

rt_mutex_owner

lock

rt_mutex_waiter

top_waiter

waiter

flags

chain_walk

res

spin_lock_irqsave

current

pi_lock

flags

__rt_mutex_adjust_prio

current

waiter

task

current

waiter

lock

lock

plist_node_init

waiter

list_entry

current

prio

plist_node_init

waiter

pi_list_entry

current

prio

rt_mutex_has_waiters

lock

top_waiter

rt_mutex_top_waiter

lock

plist_add

waiter

list_entry

lock

wait_list

current

pi_blocked_on

waiter

spin_unlock_irqrestore

current

pi_lock

flags

waiter

rt_mutex_top_waiter

lock

spin_lock_irqsave

owner

pi_lock

flags

plist_del

top_waiter

pi_list_entry

owner

pi_waiters

plist_add

waiter

pi_list_entry

owner

pi_waiters

__rt_mutex_adjust_prio

owner

owner

pi_blocked_on

chain_walk

spin_unlock_irqrestore

owner

pi_lock

flags

debug_rt_mutex_detect_deadlock

waiter

detect_deadlock

chain_walk

chain_walk

return

get_task_struct

owner

spin_unlock

lock

wait_lock

res

rt_mutex_adjust_prio_chain

owner

detect_deadlock

lock

waiter

current

spin_lock

lock

wait_lock

return

res

static

void

wakeup_next_waiter

rt_mutex

lock

rt_mutex_waiter

waiter

task_struct

pendowner

flags

spin_lock_irqsave

current

pi_lock

flags

waiter

rt_mutex_top_waiter

lock

plist_del

waiter

list_entry

lock

wait_list

plist_del

waiter

pi_list_entry

current

pi_waiters

pendowner

waiter

task

waiter

task

NULL

rt_mutex_set_owner

lock

pendowner

RT_MUTEX_OWNER_PENDING

spin_unlock_irqrestore

current

pi_lock

flags

spin_lock_irqsave

pendowner

pi_lock

flags

WARN_ON

pendowner

pi_blocked_on

WARN_ON

pendowner

pi_blocked_on

waiter

WARN_ON

pendowner

pi_blocked_on

lock

lock

pendowner

pi_blocked_on

NULL

rt_mutex_has_waiters

lock

rt_mutex_waiter

next

next

rt_mutex_top_waiter

lock

plist_add

next

pi_list_entry

pendowner

pi_waiters

spin_unlock_irqrestore

pendowner

pi_lock

flags

wake_up_process

pendowner

static

void

remove_waiter

rt_mutex

lock

rt_mutex_waiter

waiter

first

waiter

rt_mutex_top_waiter

lock

task_struct

owner

rt_mutex_owner

lock

flags

chain_walk

spin_lock_irqsave

current

pi_lock

flags

plist_del

waiter

list_entry

lock

wait_list

waiter

task

NULL

current

pi_blocked_on

NULL

spin_unlock_irqrestore

current

pi_lock

flags

first

owner

current

spin_lock_irqsave

owner

pi_lock

flags

plist_del

waiter

pi_list_entry

owner

pi_waiters

rt_mutex_has_waiters

lock

rt_mutex_waiter

next

next

rt_mutex_top_waiter

lock

plist_add

next

pi_list_entry

owner

pi_waiters

__rt_mutex_adjust_prio

owner

owner

pi_blocked_on

chain_walk

spin_unlock_irqrestore

owner

pi_lock

flags

WARN_ON

plist_node_empty

waiter

pi_list_entry

chain_walk

return

get_task_struct

owner

spin_unlock

lock

wait_lock

rt_mutex_adjust_prio_chain

owner

lock

NULL

current

spin_lock

lock

wait_lock

void

rt_mutex_adjust_pi

task_struct

task

rt_mutex_waiter

waiter

flags

spin_lock_irqsave

task

pi_lock

flags

waiter

task

pi_blocked_on

waiter

waiter

list_entry

prio

task

prio

spin_unlock_irqrestore

task

pi_lock

flags

return

spin_unlock_irqrestore

task

pi_lock

flags

get_task_struct

task

rt_mutex_adjust_prio_chain

task

NULL

NULL

task

static

__sched

rt_mutex_slowlock

rt_mutex

lock

state

hrtimer_sleeper

timeout

detect_deadlock

rt_mutex_waiter

waiter

ret

debug_rt_mutex_init_waiter

waiter

waiter

task

NULL

spin_lock

lock

wait_lock

try_to_take_rt_mutex

lock

spin_unlock

lock

wait_lock

return

set_current_state

state

unlikely

timeout

hrtimer_start

timeout

timer

timeout

timer

expires

HRTIMER_MODE_ABS

try_to_take_rt_mutex

lock

unlikely

state

TASK_INTERRUPTIBLE

signal_pending

current

ret

EINTR

timeout

timeout

task

ret

ETIMEDOUT

ret

waiter

task

ret

task_blocks_on_rt_mutex

lock

waiter

detect_deadlock

unlikely

waiter

task

ret

unlikely

ret

spin_unlock

lock

wait_lock

debug_rt_mutex_print_deadlock

waiter

waiter

task

schedule_rt_mutex

lock

spin_lock

lock

wait_lock

set_current_state

state

set_current_state

TASK_RUNNING

unlikely

waiter

task

remove_waiter

lock

waiter

fixup_rt_mutex_waiters

lock

spin_unlock

lock

wait_lock

unlikely

timeout

hrtimer_cancel

timeout

timer

unlikely

ret

rt_mutex_adjust_prio

current

debug_rt_mutex_free_waiter

waiter

return

ret

static

inline

rt_mutex_slowtrylock

rt_mutex

lock

ret

spin_lock

lock

wait_lock

likely

rt_mutex_owner

lock

current

ret

try_to_take_rt_mutex

lock

fixup_rt_mutex_waiters

lock

spin_unlock

lock

wait_lock

return

ret

static

void

__sched

rt_mutex_slowunlock

rt_mutex

lock

spin_lock

lock

wait_lock

debug_rt_mutex_unlock

lock

rt_mutex_deadlock_account_unlock

current

rt_mutex_has_waiters

lock

lock

owner

NULL

spin_unlock

lock

wait_lock

return

wakeup_next_waiter

lock

spin_unlock

lock

wait_lock

rt_mutex_adjust_prio

current

static

inline

rt_mutex_fastlock

rt_mutex

lock

state

detect_deadlock

slowfn

rt_mutex

lock

state

hrtimer_sleeper

timeout

detect_deadlock

detect_deadlock

likely

rt_mutex_cmpxchg

lock

NULL

current

rt_mutex_deadlock_account_lock

lock

current

return

return

slowfn

lock

state

NULL

detect_deadlock

static

inline

rt_mutex_timed_fastlock

rt_mutex

lock

state

hrtimer_sleeper

timeout

detect_deadlock

slowfn

rt_mutex

lock

state

hrtimer_sleeper

timeout

detect_deadlock

detect_deadlock

likely

rt_mutex_cmpxchg

lock

NULL

current

rt_mutex_deadlock_account_lock

lock

current

return

return

slowfn

lock

state

timeout

detect_deadlock

static

inline

rt_mutex_fasttrylock

rt_mutex

lock

slowfn

rt_mutex

lock

likely

rt_mutex_cmpxchg

lock

NULL

current

rt_mutex_deadlock_account_lock

lock

current

return

return

slowfn

lock

static

inline

void

rt_mutex_fastunlock

rt_mutex

lock

void

slowfn

rt_mutex

lock

likely

rt_mutex_cmpxchg

lock

current

NULL

rt_mutex_deadlock_account_unlock

current

slowfn

lock

void

__sched

rt_mutex_lock

rt_mutex

lock

might_sleep

rt_mutex_fastlock

lock

TASK_UNINTERRUPTIBLE

rt_mutex_slowlock

EXPORT_SYMBOL_GPL

rt_mutex_lock

__sched

rt_mutex_lock_interruptible

rt_mutex

lock

detect_deadlock

might_sleep

return

rt_mutex_fastlock

lock

TASK_INTERRUPTIBLE

detect_deadlock

rt_mutex_slowlock

EXPORT_SYMBOL_GPL

rt_mutex_lock_interruptible

rt_mutex_timed_lock

rt_mutex

lock

hrtimer_sleeper

timeout

detect_deadlock

might_sleep

return

rt_mutex_timed_fastlock

lock

TASK_INTERRUPTIBLE

timeout

detect_deadlock

rt_mutex_slowlock

EXPORT_SYMBOL_GPL

rt_mutex_timed_lock

__sched

rt_mutex_trylock

rt_mutex

lock

return

rt_mutex_fasttrylock

lock

rt_mutex_slowtrylock

EXPORT_SYMBOL_GPL

rt_mutex_trylock

void

__sched

rt_mutex_unlock

rt_mutex

lock

rt_mutex_fastunlock

lock

rt_mutex_slowunlock

EXPORT_SYMBOL_GPL

rt_mutex_unlock

void

rt_mutex_destroy

rt_mutex

lock

WARN_ON

rt_mutex_is_locked

lock

CONFIG_DEBUG_RT_MUTEXES

lock

magic

NULL

EXPORT_SYMBOL_GPL

rt_mutex_destroy

void

__rt_mutex_init

rt_mutex

lock

name

lock

owner

NULL

spin_lock_init

lock

wait_lock

plist_head_init

lock

wait_list

lock

wait_lock

debug_rt_mutex_init

lock

name

EXPORT_SYMBOL_GPL

__rt_mutex_init

void

rt_mutex_init_proxy_locked

rt_mutex

lock

task_struct

proxy_owner

__rt_mutex_init

lock

NULL

debug_rt_mutex_proxy_lock

lock

proxy_owner

rt_mutex_set_owner

lock

proxy_owner

rt_mutex_deadlock_account_lock

lock

proxy_owner

void

rt_mutex_proxy_unlock

rt_mutex

lock

task_struct

proxy_owner

debug_rt_mutex_proxy_unlock

lock

rt_mutex_set_owner

lock

NULL

rt_mutex_deadlock_account_unlock

proxy_owner

task_struct

rt_mutex_next_owner

rt_mutex

lock

rt_mutex_has_waiters

lock

return

NULL

return

rt_mutex_top_waiter

lock

task

CONFIG_DEBUG_RT_MUTEXES

TRACE_WARN_ON

x

WARN_ON

x

TRACE_BUG_ON

x

BUG_ON

x

TRACE_OFF

rt_trace_on

rt_trace_on

console_verbose

spin_is_locked

current

pi_lock

spin_unlock

current

pi_lock

TRACE_OFF_NOLOCK

rt_trace_on

rt_trace_on

console_verbose

TRACE_BUG_LOCKED

TRACE_OFF

BUG

TRACE_WARN_ON_LOCKED

c

unlikely

c

TRACE_OFF

WARN_ON

TRACE_BUG_ON_LOCKED

c

unlikely

c

TRACE_BUG_LOCKED

CONFIG_SMP

SMP_TRACE_BUG_ON_LOCKED

c

TRACE_BUG_ON_LOCKED

c

SMP_TRACE_BUG_ON_LOCKED

c

rt_trace_on

void

deadlock_trace_off

void

rt_trace_on

static

void

printk_task

task_struct

p

p

printk

p

comm

p

pid

p

p

prio

printk

static

void

printk_lock

rt_mutex

lock

print_owner

lock

name

printk

lock

lock

name

printk

lock

lock

file

lock

line

print_owner

rt_mutex_owner

lock

printk

lock

owner

printk

printk_task

rt_mutex_owner

lock

printk

void

rt_mutex_debug_task_free

task_struct

task

WARN_ON

plist_head_empty

task

pi_waiters

WARN_ON

task

pi_blocked_on

void

debug_rt_mutex_deadlock

detect

rt_mutex_waiter

act_waiter

rt_mutex

lock

task_struct

task

rt_trace_on

detect

act_waiter

return

task

rt_mutex_owner

act_waiter

lock

task

task

current

act_waiter

deadlock_task_pid

task

pid

act_waiter

deadlock_lock

lock

void

debug_rt_mutex_print_deadlock

rt_mutex_waiter

waiter

task_struct

task

waiter

deadlock_lock

rt_trace_on

return

task

find_task_by_pid

waiter

deadlock_task_pid

task

return

TRACE_OFF_NOLOCK

printk

printk

printk

printk

task

comm

task

pid

current

comm

current

pid

printk

current

comm

current

pid

printk_lock

waiter

lock

printk

task

comm

task

pid

printk_lock

waiter

deadlock_lock

debug_show_held_locks

current

debug_show_held_locks

task

printk

task

comm

task

pid

show_stack

task

NULL

printk

current

comm

current

pid

dump_stack

debug_show_all_locks

printk

local_irq_disable

void

debug_rt_mutex_lock

rt_mutex

lock

void

debug_rt_mutex_unlock

rt_mutex

lock

TRACE_WARN_ON_LOCKED

rt_mutex_owner

lock

current

void

debug_rt_mutex_proxy_lock

rt_mutex

lock

task_struct

powner

void

debug_rt_mutex_proxy_unlock

rt_mutex

lock

TRACE_WARN_ON_LOCKED

rt_mutex_owner

lock

void

debug_rt_mutex_init_waiter

rt_mutex_waiter

waiter

memset

waiter

x11

sizeof

waiter

plist_node_init

waiter

list_entry

MAX_PRIO

plist_node_init

waiter

pi_list_entry

MAX_PRIO

void

debug_rt_mutex_free_waiter

rt_mutex_waiter

waiter

TRACE_WARN_ON

plist_node_empty

waiter

list_entry

TRACE_WARN_ON

plist_node_empty

waiter

pi_list_entry

TRACE_WARN_ON

waiter

task

memset

waiter

x22

sizeof

waiter

void

debug_rt_mutex_init

rt_mutex

lock

name

debug_check_no_locks_freed

void

lock

sizeof

lock

lock

name

name

void

rt_mutex_deadlock_account_lock

rt_mutex

lock

task_struct

task

void

rt_mutex_deadlock_account_unlock

task_struct

task

MAX_RT_TEST_THREADS

MAX_RT_TEST_MUTEXES

static

spinlock_t

rttest_lock

static

atomic_t

rttest_event

test_thread_data

opcode

opdata

mutexes

MAX_RT_TEST_MUTEXES

bkl

event

sys_device

sysdev

static

test_thread_data

thread_data

MAX_RT_TEST_THREADS

static

task_struct

threads

MAX_RT_TEST_THREADS

static

rt_mutex

mutexes

MAX_RT_TEST_MUTEXES

enum

test_opcodes

RTTEST_NOP

RTTEST_SCHEDOT

RTTEST_SCHEDRT

RTTEST_LOCK

RTTEST_LOCKNOWAIT

RTTEST_LOCKINT

RTTEST_LOCKINTNOWAIT

RTTEST_LOCKCONT

RTTEST_UNLOCK

RTTEST_LOCKBKL

RTTEST_UNLOCKBKL

RTTEST_SIGNAL

RTTEST_RESETEVENT

RTTEST_RESET

static

handle_op

test_thread_data

td

lockwakeup

i

id

ret

EINVAL

td

opcode

case

RTTEST_NOP

return

case

RTTEST_LOCKCONT

td

mutexes

td

opdata

td

event

atomic_add_return

rttest_event

return

case

RTTEST_RESET

i

i

MAX_RT_TEST_MUTEXES

i

td

mutexes

i

rt_mutex_unlock

mutexes

i

td

mutexes

i

lockwakeup

td

bkl

unlock_kernel

td

bkl

return

case

RTTEST_RESETEVENT

atomic_set

rttest_event

return

default

lockwakeup

return

ret

td

opcode

case

RTTEST_LOCK

case

RTTEST_LOCKNOWAIT

id

td

opdata

id

id

MAX_RT_TEST_MUTEXES

return

ret

td

mutexes

id

td

event

atomic_add_return

rttest_event

rt_mutex_lock

mutexes

id

td

event

atomic_add_return

rttest_event

td

mutexes

id

return

case

RTTEST_LOCKINT

case

RTTEST_LOCKINTNOWAIT

id

td

opdata

id

id

MAX_RT_TEST_MUTEXES

return

ret

td

mutexes

id

td

event

atomic_add_return

rttest_event

ret

rt_mutex_lock_interruptible

mutexes

id

td

event

atomic_add_return

rttest_event

td

mutexes

id

ret

return

ret

EINTR

case

RTTEST_UNLOCK

id

td

opdata

id

id

MAX_RT_TEST_MUTEXES

td

mutexes

id

return

ret

td

event

atomic_add_return

rttest_event

rt_mutex_unlock

mutexes

id

td

event

atomic_add_return

rttest_event

td

mutexes

id

return

case

RTTEST_LOCKBKL

td

bkl

return

td

bkl

lock_kernel

td

bkl

return

case

RTTEST_UNLOCKBKL

td

bkl

unlock_kernel

td

bkl

return

default

return

ret

void

schedule_rt_mutex_test

rt_mutex

mutex

tid

op

dat

test_thread_data

td

tid

tid

MAX_RT_TEST_THREADS

tid

threads

tid

current

BUG_ON

tid

MAX_RT_TEST_THREADS

td

thread_data

tid

op

td

opcode

dat

td

opdata

op

case

RTTEST_LOCK

case

RTTEST_LOCKINT

case

RTTEST_LOCKNOWAIT

case

RTTEST_LOCKINTNOWAIT

mutex

mutexes

dat

td

mutexes

dat

td

mutexes

dat

td

event

atomic_add_return

rttest_event

case

RTTEST_LOCKBKL

default

schedule

op

case

RTTEST_LOCK

case

RTTEST_LOCKINT

mutex

mutexes

dat

return

td

mutexes

dat

return

td

mutexes

dat

td

event

atomic_add_return

rttest_event

case

RTTEST_LOCKNOWAIT

case

RTTEST_LOCKINTNOWAIT

mutex

mutexes

dat

return

td

mutexes

dat

return

td

mutexes

dat

td

event

atomic_add_return

rttest_event

return

case

RTTEST_LOCKBKL

return

default

return

td

opcode

set_current_state

TASK_INTERRUPTIBLE

td

opcode

ret

set_current_state

TASK_RUNNING

ret

handle_op

td

set_current_state

TASK_INTERRUPTIBLE

td

opcode

RTTEST_LOCKCONT

td

opcode

ret

schedule

td

opcode

op

td

opdata

dat

static

test_func

void

data

test_thread_data

td

data

ret

current

flags

PF_MUTEX_TESTER

allow_signal

SIGHUP

set_current_state

TASK_INTERRUPTIBLE

td

opcode

set_current_state

TASK_RUNNING

ret

handle_op

td

set_current_state

TASK_INTERRUPTIBLE

td

opcode

ret

schedule

try_to_freeze

signal_pending

current

flush_signals

current

kthread_should_stop

return

static

ssize_t

sysfs_test_command

sys_device

dev

buf

size_t

count

sched_param

schedpar

test_thread_data

td

cmdbuf

op

dat

tid

ret

td

container_of

dev

test_thread_data

sysdev

tid

td

sysdev

id

count

sizeof

cmdbuf

return

EINVAL

buf

count

count

count

return

EINVAL

memcpy

cmdbuf

buf

count

cmdbuf

count

sscanf

cmdbuf

op

dat

return

EINVAL

op

case

RTTEST_SCHEDOT

schedpar

sched_priority

ret

sched_setscheduler

threads

tid

SCHED_NORMAL

schedpar

ret

return

ret

set_user_nice

current

case

RTTEST_SCHEDRT

schedpar

sched_priority

dat

ret

sched_setscheduler

threads

tid

SCHED_FIFO

schedpar

ret

return

ret

case

RTTEST_SIGNAL

send_sig

SIGHUP

threads

tid

default

td

opcode

return

EBUSY

td

opdata

dat

td

opcode

op

wake_up_process

threads

tid

return

count

static

ssize_t

sysfs_test_status

sys_device

dev

buf

test_thread_data

td

task_struct

tsk

curr

buf

i

td

container_of

dev

test_thread_data

sysdev

tsk

threads

td

sysdev

id

spin_lock

rttest_lock

curr

sprintf

curr

td

opcode

td

event

tsk

state

MAX_RT_PRIO

tsk

prio

MAX_RT_PRIO

tsk

normal_prio

tsk

pi_blocked_on

td

bkl

i

MAX_RT_TEST_MUTEXES

i

i

curr

sprintf

curr

td

mutexes

i

spin_unlock

rttest_lock

curr

sprintf

curr

tsk

mutexes

td

sysdev

id

owner

return

curr

buf

static

SYSDEV_ATTR

status

sysfs_test_status

NULL

static

SYSDEV_ATTR

command

NULL

sysfs_test_command

static

sysdev_class

rttest_sysclass

set_kset_name

static

init_test_thread

id

thread_data

id

sysdev

cls

rttest_sysclass

thread_data

id

sysdev

id

id

threads

id

kthread_run

test_func

thread_data

id

id

IS_ERR

threads

id

return

PTR_ERR

threads

id

return

sysdev_register

thread_data

id

sysdev

static

init_rttest

void

ret

i

spin_lock_init

rttest_lock

i

i

MAX_RT_TEST_MUTEXES

i

rt_mutex_init

mutexes

i

ret

sysdev_class_register

rttest_sysclass

ret

return

ret

i

i

MAX_RT_TEST_THREADS

i

ret

init_test_thread

i

ret

ret

sysdev_create_file

thread_data

i

sysdev

attr_status

ret

ret

sysdev_create_file

thread_data

i

sysdev

attr_command

ret

printk

ret

return

ret

device_initcall

init_rttest

void

down_read

rw_semaphore

sem

might_sleep

rwsem_acquire_read

sem

dep_map

_RET_IP_

__down_read

sem

EXPORT_SYMBOL

down_read

down_read_trylock

rw_semaphore

sem

ret

__down_read_trylock

sem

ret

rwsem_acquire_read

sem

dep_map

_RET_IP_

return

ret

EXPORT_SYMBOL

down_read_trylock

void

down_write

rw_semaphore

sem

might_sleep

rwsem_acquire

sem

dep_map

_RET_IP_

__down_write

sem

EXPORT_SYMBOL

down_write

down_write_trylock

rw_semaphore

sem

ret

__down_write_trylock

sem

ret

rwsem_acquire

sem

dep_map

_RET_IP_

return

ret

EXPORT_SYMBOL

down_write_trylock

void

up_read

rw_semaphore

sem

rwsem_release

sem

dep_map

_RET_IP_

__up_read

sem

EXPORT_SYMBOL

up_read

void

up_write

rw_semaphore

sem

rwsem_release

sem

dep_map

_RET_IP_

__up_write

sem

EXPORT_SYMBOL

up_write

void

downgrade_write

rw_semaphore

sem

__downgrade_write

sem

EXPORT_SYMBOL

downgrade_write

CONFIG_DEBUG_LOCK_ALLOC

void

down_read_nested

rw_semaphore

sem

subclass

might_sleep

rwsem_acquire_read

sem

dep_map

subclass

_RET_IP_

__down_read

sem

EXPORT_SYMBOL

down_read_nested

void

down_read_non_owner

rw_semaphore

sem

might_sleep

__down_read

sem

EXPORT_SYMBOL

down_read_non_owner

void

down_write_nested

rw_semaphore

sem

subclass

might_sleep

rwsem_acquire

sem

dep_map

subclass

_RET_IP_

__down_write_nested

sem

subclass

EXPORT_SYMBOL

down_write_nested

void

up_read_non_owner

rw_semaphore

sem

__up_read

sem

EXPORT_SYMBOL

up_read_non_owner

__attribute__

weak

sched_clock

void

return

jiffies

HZ

NICE_TO_PRIO

nice

MAX_RT_PRIO

nice

PRIO_TO_NICE

prio

prio

MAX_RT_PRIO

TASK_NICE

p

PRIO_TO_NICE

p

static_prio

USER_PRIO

p

p

MAX_RT_PRIO

TASK_USER_PRIO

p

USER_PRIO

p

static_prio

MAX_USER_PRIO

USER_PRIO

MAX_PRIO

NS_TO_JIFFIES

TIME

TIME

HZ

JIFFIES_TO_NS

TIME

TIME

HZ

MIN_TIMESLICE

max

HZ

DEF_TIMESLICE

HZ

ON_RUNQUEUE_WEIGHT

CHILD_PENALTY

PARENT_PENALTY

EXIT_WEIGHT

PRIO_BONUS_RATIO

MAX_BONUS

MAX_USER_PRIO

PRIO_BONUS_RATIO

INTERACTIVE_DELTA

MAX_SLEEP_AVG

DEF_TIMESLICE

MAX_BONUS

STARVATION_LIMIT

MAX_SLEEP_AVG

NS_MAX_SLEEP_AVG

JIFFIES_TO_NS

MAX_SLEEP_AVG

CURRENT_BONUS

p

NS_TO_JIFFIES

p

sleep_avg

MAX_BONUS

MAX_SLEEP_AVG

GRANULARITY

HZ

CONFIG_SMP

TIMESLICE_GRANULARITY

p

GRANULARITY

MAX_BONUS

CURRENT_BONUS

p

num_online_cpus

TIMESLICE_GRANULARITY

p

GRANULARITY

MAX_BONUS

CURRENT_BONUS

p

SCALE

v1

v1_max

v2_max

v1

v2_max

v1_max

DELTA

p

SCALE

TASK_NICE

p

MAX_BONUS

MAX_BONUS

INTERACTIVE_DELTA

TASK_INTERACTIVE

p

p

prio

p

static_prio

DELTA

p

INTERACTIVE_SLEEP

p

JIFFIES_TO_NS

MAX_SLEEP_AVG

MAX_BONUS

DELTA

p

MAX_BONUS

TASK_PREEMPTS_CURR

p

rq

p

prio

rq

curr

prio

SCALE_PRIO

x

prio

max

x

MAX_PRIO

prio

MAX_USER_PRIO

MIN_TIMESLICE

static

static_prio_timeslice

static_prio

static_prio

NICE_TO_PRIO

return

SCALE_PRIO

DEF_TIMESLICE

static_prio

return

SCALE_PRIO

DEF_TIMESLICE

static_prio

CONFIG_SMP

static

inline

u32

sg_div_cpu_power

sched_group

sg

u32

load

return

reciprocal_divide

load

sg

reciprocal_cpu_power

static

inline

void

sg_inc_cpu_power

sched_group

sg

u32

val

sg

__cpu_power

val

sg

reciprocal_cpu_power

reciprocal_value

sg

__cpu_power

static

inline

task_timeslice

task_struct

p

return

static_prio_timeslice

p

static_prio

prio_array

nr_active

DECLARE_BITMAP

bitmap

MAX_PRIO

list_head

queue

MAX_PRIO

rq

spinlock_t

lock

nr_running

raw_weighted_load

CONFIG_SMP

cpu_load

idle_at_tick

CONFIG_NO_HZ

in_nohz_recently

nr_switches

nr_uninterruptible

expired_timestamp

most_recent_timestamp

task_struct

curr

idle

next_balance

mm_struct

prev_mm

prio_array

active

expired

arrays

best_expired_prio

atomic_t

nr_iowait

CONFIG_SMP

sched_domain

sd

active_balance

push_cpu

cpu

task_struct

migration_thread

list_head

migration_queue

CONFIG_SCHEDSTATS

sched_info

rq_sched_info

yld_exp_empty

yld_act_empty

yld_both_empty

yld_cnt

sched_switch

sched_cnt

sched_goidle

ttwu_cnt

ttwu_local

lock_class_key

rq_lock_key

static

DEFINE_PER_CPU

rq

runqueues

____cacheline_aligned_in_smp

static

DEFINE_MUTEX

sched_hotcpu_mutex

static

inline

cpu_of

rq

rq

CONFIG_SMP

return

rq

cpu

return

for_each_domain

cpu

__sd

__sd

rcu_dereference

cpu_rq

cpu

sd

__sd

__sd

__sd

parent

cpu_rq

cpu

per_cpu

runqueues

cpu

this_rq

__get_cpu_var

runqueues

task_rq

p

cpu_rq

task_cpu

p

cpu_curr

cpu

cpu_rq

cpu

curr

prepare_arch_switch

prepare_arch_switch

next

finish_arch_switch

finish_arch_switch

prev

__ARCH_WANT_UNLOCKED_CTXSW

static

inline

task_running

rq

rq

task_struct

p

return

rq

curr

p

static

inline

void

prepare_lock_switch

rq

rq

task_struct

next

static

inline

void

finish_lock_switch

rq

rq

task_struct

prev

CONFIG_DEBUG_SPINLOCK

rq

lock

owner

current

spin_acquire

rq

lock

dep_map

_THIS_IP_

spin_unlock_irq

rq

lock

static

inline

task_running

rq

rq

task_struct

p

CONFIG_SMP

return

p

oncpu

return

rq

curr

p

static

inline

void

prepare_lock_switch

rq

rq

task_struct

next

CONFIG_SMP

next

oncpu

__ARCH_WANT_INTERRUPTS_ON_CTXSW

spin_unlock_irq

rq

lock

spin_unlock

rq

lock

static

inline

void

finish_lock_switch

rq

rq

task_struct

prev

CONFIG_SMP

smp_wmb

prev

oncpu

__ARCH_WANT_INTERRUPTS_ON_CTXSW

local_irq_enable

static

inline

rq

__task_rq_lock

task_struct

p

__acquires

rq

lock

rq

rq

repeat_lock_task

rq

task_rq

p

spin_lock

rq

lock

unlikely

rq

task_rq

p

spin_unlock

rq

lock

goto

repeat_lock_task

return

rq

static

rq

task_rq_lock

task_struct

p

flags

__acquires

rq

lock

rq

rq

repeat_lock_task

local_irq_save

flags

rq

task_rq

p

spin_lock

rq

lock

unlikely

rq

task_rq

p

spin_unlock_irqrestore

rq

lock

flags

goto

repeat_lock_task

return

rq

static

inline

void

__task_rq_unlock

rq

rq

__releases

rq

lock

spin_unlock

rq

lock

static

inline

void

task_rq_unlock

rq

rq

flags

__releases

rq

lock

spin_unlock_irqrestore

rq

lock

flags

CONFIG_SCHEDSTATS

SCHEDSTAT_VERSION

static

show_schedstat

seq_file

seq

void

v

cpu

seq_printf

seq

SCHEDSTAT_VERSION

seq_printf

seq

jiffies

for_each_online_cpu

cpu

rq

rq

cpu_rq

cpu

CONFIG_SMP

sched_domain

sd

dcnt

seq_printf

seq

cpu

rq

yld_both_empty

rq

yld_act_empty

rq

yld_exp_empty

rq

yld_cnt

rq

sched_switch

rq

sched_cnt

rq

sched_goidle

rq

ttwu_cnt

rq

ttwu_local

rq

rq_sched_info

cpu_time

rq

rq_sched_info

run_delay

rq

rq_sched_info

pcnt

seq_printf

seq

CONFIG_SMP

preempt_disable

for_each_domain

cpu

sd

enum

idle_type

itype

mask_str

NR_CPUS

cpumask_scnprintf

mask_str

NR_CPUS

sd

span

seq_printf

seq

dcnt

mask_str

itype

SCHED_IDLE

itype

MAX_IDLE_TYPES

itype

seq_printf

seq

sd

lb_cnt

itype

sd

lb_balanced

itype

sd

lb_failed

itype

sd

lb_imbalance

itype

sd

lb_gained

itype

sd

lb_hot_gained

itype

sd

lb_nobusyq

itype

sd

lb_nobusyg

itype

seq_printf

seq

sd

alb_cnt

sd

alb_failed

sd

alb_pushed

sd

sbe_cnt

sd

sbe_balanced

sd

sbe_pushed

sd

sbf_cnt

sd

sbf_balanced

sd

sbf_pushed

sd

ttwu_wake_remote

sd

ttwu_move_affine

sd

ttwu_move_balance

preempt_enable

return

static

schedstat_open

inode

inode

file

file

size

PAGE_SIZE

num_online_cpus

buf

kmalloc

size

GFP_KERNEL

seq_file

m

res

buf

return

ENOMEM

res

single_open

file

show_schedstat

NULL

res

m

file

private_data

m

buf

buf

m

size

size

kfree

buf

return

res

file_operations

proc_schedstat_operations

open

schedstat_open

read

seq_read

llseek

seq_lseek

release

single_release

static

inline

void

rq_sched_info_arrive

rq

rq

delta_jiffies

rq

rq

rq_sched_info

run_delay

delta_jiffies

rq

rq_sched_info

pcnt

static

inline

void

rq_sched_info_depart

rq

rq

delta_jiffies

rq

rq

rq_sched_info

cpu_time

delta_jiffies

schedstat_inc

rq

field

rq

field

schedstat_add

rq

field

amt

rq

field

amt

static

inline

void

rq_sched_info_arrive

rq

rq

delta_jiffies

static

inline

void

rq_sched_info_depart

rq

rq

delta_jiffies

schedstat_inc

rq

field

schedstat_add

rq

field

amt

static

inline

rq

this_rq_lock

void

__acquires

rq

lock

rq

rq

local_irq_disable

rq

this_rq

spin_lock

rq

lock

return

rq

CONFIG_SCHEDSTATS

CONFIG_TASK_DELAY_ACCT

static

inline

void

sched_info_dequeued

task_struct

t

t

sched_info

last_queued

static

void

sched_info_arrive

task_struct

t

now

jiffies

delta_jiffies

t

sched_info

last_queued

delta_jiffies

now

t

sched_info

last_queued

sched_info_dequeued

t

t

sched_info

run_delay

delta_jiffies

t

sched_info

last_arrival

now

t

sched_info

pcnt

rq_sched_info_arrive

task_rq

t

delta_jiffies

static

inline

void

sched_info_queued

task_struct

t

unlikely

sched_info_on

t

sched_info

last_queued

t

sched_info

last_queued

jiffies

static

inline

void

sched_info_depart

task_struct

t

delta_jiffies

jiffies

t

sched_info

last_arrival

t

sched_info

cpu_time

delta_jiffies

rq_sched_info_depart

task_rq

t

delta_jiffies

static

inline

void

__sched_info_switch

task_struct

prev

task_struct

next

rq

rq

task_rq

prev

prev

rq

idle

sched_info_depart

prev

next

rq

idle

sched_info_arrive

next

static

inline

void

sched_info_switch

task_struct

prev

task_struct

next

unlikely

sched_info_on

__sched_info_switch

prev

next

sched_info_queued

t

sched_info_switch

t

next

static

void

dequeue_task

task_struct

p

prio_array

array

array

nr_active

list_del

p

run_list

list_empty

array

queue

p

prio

__clear_bit

p

prio

array

bitmap

static

void

enqueue_task

task_struct

p

prio_array

array

sched_info_queued

p

list_add_tail

p

run_list

array

queue

p

prio

__set_bit

p

prio

array

bitmap

array

nr_active

p

array

array

static

void

requeue_task

task_struct

p

prio_array

array

list_move_tail

p

run_list

array

queue

p

prio

static

inline

void

enqueue_task_head

task_struct

p

prio_array

array

list_add

p

run_list

array

queue

p

prio

__set_bit

p

prio

array

bitmap

array

nr_active

p

array

array

static

inline

__normal_prio

task_struct

p

bonus

prio

bonus

CURRENT_BONUS

p

MAX_BONUS

prio

p

static_prio

bonus

prio

MAX_RT_PRIO

prio

MAX_RT_PRIO

prio

MAX_PRIO

prio

MAX_PRIO

return

prio

TIME_SLICE_NICE_ZERO

DEF_TIMESLICE

LOAD_WEIGHT

lp

lp

SCHED_LOAD_SCALE

TIME_SLICE_NICE_ZERO

PRIO_TO_LOAD_WEIGHT

prio

LOAD_WEIGHT

static_prio_timeslice

prio

RTPRIO_TO_LOAD_WEIGHT

rp

PRIO_TO_LOAD_WEIGHT

MAX_RT_PRIO

LOAD_WEIGHT

rp

static

void

set_load_weight

task_struct

p

has_rt_policy

p

CONFIG_SMP

p

task_rq

p

migration_thread

p

load_weight

p

load_weight

RTPRIO_TO_LOAD_WEIGHT

p

rt_priority

p

load_weight

PRIO_TO_LOAD_WEIGHT

p

static_prio

static

inline

void

inc_raw_weighted_load

rq

rq

task_struct

p

rq

raw_weighted_load

p

load_weight

static

inline

void

dec_raw_weighted_load

rq

rq

task_struct

p

rq

raw_weighted_load

p

load_weight

static

inline

void

inc_nr_running

task_struct

p

rq

rq

rq

nr_running

inc_raw_weighted_load

rq

p

static

inline

void

dec_nr_running

task_struct

p

rq

rq

rq

nr_running

dec_raw_weighted_load

rq

p

static

inline

normal_prio

task_struct

p

prio

has_rt_policy

p

prio

MAX_RT_PRIO

p

rt_priority

prio

__normal_prio

p

return

prio

static

effective_prio

task_struct

p

p

normal_prio

normal_prio

p

rt_prio

p

prio

return

p

normal_prio

return

p

prio

static

void

__activate_task

task_struct

p

rq

rq

prio_array

target

rq

active

batch_task

p

target

rq

expired

enqueue_task

p

target

inc_nr_running

p

rq

static

inline

void

__activate_idle_task

task_struct

p

rq

rq

enqueue_task_head

p

rq

active

inc_nr_running

p

rq

static

recalc_task_prio

task_struct

p

now

sleep_time

now

p

timestamp

batch_task

p

sleep_time

likely

sleep_time

ceiling

INTERACTIVE_SLEEP

p

p

mm

sleep_time

ceiling

p

sleep_avg

ceiling

p

sleep_avg

ceiling

p

sleep_type

SLEEP_NONINTERACTIVE

p

sleep_type

SLEEP_NONINTERACTIVE

p

mm

p

sleep_avg

ceiling

sleep_time

p

sleep_avg

sleep_time

ceiling

p

sleep_avg

ceiling

sleep_time

p

sleep_avg

sleep_time

p

sleep_avg

NS_MAX_SLEEP_AVG

p

sleep_avg

NS_MAX_SLEEP_AVG

return

effective_prio

p

static

void

activate_task

task_struct

p

rq

rq

local

now

rt_task

p

goto

out

now

sched_clock

CONFIG_SMP

local

rq

this_rq

this_rq

now

now

this_rq

most_recent_timestamp

rq

most_recent_timestamp

unlikely

prof_on

SLEEP_PROFILING

p

state

TASK_UNINTERRUPTIBLE

profile_hits

SLEEP_PROFILING

void

get_wchan

p

now

p

timestamp

p

prio

recalc_task_prio

p

now

p

sleep_type

SLEEP_NORMAL

in_interrupt

p

sleep_type

SLEEP_INTERRUPTED

p

sleep_type

SLEEP_INTERACTIVE

p

timestamp

now

out

__activate_task

p

rq

static

void

deactivate_task

task_struct

p

rq

rq

dec_nr_running

p

rq

dequeue_task

p

p

array

p

array

NULL

CONFIG_SMP

tsk_is_polling

tsk_is_polling

t

test_tsk_thread_flag

t

TIF_POLLING_NRFLAG

static

void

resched_task

task_struct

p

cpu

assert_spin_locked

task_rq

p

lock

unlikely

test_tsk_thread_flag

p

TIF_NEED_RESCHED

return

set_tsk_thread_flag

p

TIF_NEED_RESCHED

cpu

task_cpu

p

cpu

smp_processor_id

return

smp_mb

tsk_is_polling

p

smp_send_reschedule

cpu

static

void

resched_cpu

cpu

rq

rq

cpu_rq

cpu

flags

spin_trylock_irqsave

rq

lock

flags

return

resched_task

cpu_curr

cpu

spin_unlock_irqrestore

rq

lock

flags

static

inline

void

resched_task

task_struct

p

assert_spin_locked

task_rq

p

lock

set_tsk_need_resched

p

inline

task_curr

task_struct

p

return

cpu_curr

task_cpu

p

p

weighted_cpuload

cpu

return

cpu_rq

cpu

raw_weighted_load

CONFIG_SMP

migration_req

list_head

list

task_struct

task

dest_cpu

completion

done

static

migrate_task

task_struct

p

dest_cpu

migration_req

req

rq

rq

task_rq

p

p

array

task_running

rq

p

set_task_cpu

p

dest_cpu

return

init_completion

req

done

req

task

p

req

dest_cpu

dest_cpu

list_add

req

list

rq

migration_queue

return

void

wait_task_inactive

task_struct

p

flags

rq

rq

prio_array

array

running

repeat

rq

task_rq

p

task_running

rq

p

cpu_relax

rq

task_rq_lock

p

flags

running

task_running

rq

p

array

p

array

task_rq_unlock

rq

flags

unlikely

running

cpu_relax

goto

repeat

unlikely

array

yield

goto

repeat

void

kick_process

task_struct

p

cpu

preempt_disable

cpu

task_cpu

p

cpu

smp_processor_id

task_curr

p

smp_send_reschedule

cpu

preempt_enable

static

inline

source_load

cpu

type

rq

rq

cpu_rq

cpu

type

return

rq

raw_weighted_load

return

min

rq

cpu_load

type

rq

raw_weighted_load

static

inline

target_load

cpu

type

rq

rq

cpu_rq

cpu

type

return

rq

raw_weighted_load

return

max

rq

cpu_load

type

rq

raw_weighted_load

static

inline

cpu_avg_load_per_task

cpu

rq

rq

cpu_rq

cpu

n

rq

nr_running

return

n

rq

raw_weighted_load

n

SCHED_LOAD_SCALE

static

sched_group

find_idlest_group

sched_domain

sd

task_struct

p

this_cpu

sched_group

idlest

NULL

this

NULL

group

sd

groups

min_load

ULONG_MAX

this_load

load_idx

sd

forkexec_idx

imbalance

sd

imbalance_pct

load

avg_load

local_group

i

cpus_intersects

group

cpumask

p

cpus_allowed

goto

nextgroup

local_group

cpu_isset

this_cpu

group

cpumask

avg_load

for_each_cpu_mask

i

group

cpumask

local_group

load

source_load

i

load_idx

load

target_load

i

load_idx

avg_load

load

avg_load

sg_div_cpu_power

group

avg_load

SCHED_LOAD_SCALE

local_group

this_load

avg_load

this

group

avg_load

min_load

min_load

avg_load

idlest

group

nextgroup

group

group

next

group

sd

groups

idlest

this_load

imbalance

min_load

return

NULL

return

idlest

static

find_idlest_cpu

sched_group

group

task_struct

p

this_cpu

cpumask_t

tmp

load

min_load

ULONG_MAX

idlest

i

cpus_and

tmp

group

cpumask

p

cpus_allowed

for_each_cpu_mask

i

tmp

load

weighted_cpuload

i

load

min_load

load

min_load

i

this_cpu

min_load

load

idlest

i

return

idlest

static

find_idlest_cpu_nodomain

task_struct

p

this_cpu

cpumask_t

tmp

load

min_load

ULONG_MAX

idlest

i

cpus_and

tmp

cpu_online_map

p

cpus_allowed

for_each_cpu_mask

i

tmp

load

target_load

i

load

min_load

min_load

load

idlest

i

return

idlest

affinity_load_balancing

static

sched_balance_self

cpu

flag

task_struct

t

current

sched_domain

tmp

sd

NULL

affinity_load_balancing

cpus_full

t

cpus_allowed

return

find_idlest_cpu_nodomain

t

cpu

for_each_domain

cpu

tmp

tmp

flags

SD_POWERSAVINGS_BALANCE

tmp

flags

flag

sd

tmp

sd

cpumask_t

span

sched_group

group

new_cpu

weight

sd

flags

flag

sd

sd

child

span

sd

span

group

find_idlest_group

sd

t

cpu

group

sd

sd

child

new_cpu

find_idlest_cpu

group

t

cpu

new_cpu

new_cpu

cpu

sd

sd

child

cpu

new_cpu

sd

NULL

weight

cpus_weight

span

for_each_domain

cpu

tmp

weight

cpus_weight

tmp

span

tmp

flags

flag

sd

tmp

return

cpu

ARCH_HAS_SCHED_WAKE_IDLE

static

wake_idle

cpu

task_struct

p

cpumask_t

tmp

sched_domain

sd

i

idle_cpu

cpu

cpu_rq

cpu

nr_running

return

cpu

for_each_domain

cpu

sd

sd

flags

SD_WAKE_IDLE

cpus_and

tmp

sd

span

p

cpus_allowed

for_each_cpu_mask

i

tmp

idle_cpu

i

return

i

return

cpu

static

inline

wake_idle

cpu

task_struct

p

return

cpu

static

try_to_wake_up

task_struct

p

state

sync

cpu

this_cpu

success

flags

old_state

rq

rq

CONFIG_SMP

sched_domain

sd

this_sd

NULL

load

this_load

new_cpu

rq

task_rq_lock

p

flags

old_state

p

state

old_state

state

goto

out

p

array

goto

out_running

cpu

task_cpu

p

this_cpu

smp_processor_id

CONFIG_SMP

unlikely

task_running

rq

p

goto

out_activate

new_cpu

cpu

schedstat_inc

rq

ttwu_cnt

cpu

this_cpu

schedstat_inc

rq

ttwu_local

goto

out_set_cpu

for_each_domain

this_cpu

sd

cpu_isset

cpu

sd

span

schedstat_inc

sd

ttwu_wake_remote

this_sd

sd

unlikely

cpu_isset

this_cpu

p

cpus_allowed

goto

out_set_cpu

this_sd

idx

this_sd

wake_idx

imbalance

imbalance

this_sd

imbalance_pct

load

source_load

cpu

idx

this_load

target_load

this_cpu

idx

new_cpu

this_cpu

this_sd

flags

SD_WAKE_AFFINE

tl

this_load

tl_per_task

tl_per_task

cpu_avg_load_per_task

this_cpu

sync

tl

current

load_weight

tl

load

tl

target_load

cpu

idx

tl_per_task

tl

p

load_weight

imbalance

load

schedstat_inc

this_sd

ttwu_move_affine

goto

out_set_cpu

this_sd

flags

SD_WAKE_BALANCE

imbalance

this_load

load

schedstat_inc

this_sd

ttwu_move_balance

goto

out_set_cpu

new_cpu

cpu

out_set_cpu

new_cpu

wake_idle

new_cpu

p

new_cpu

cpu

set_task_cpu

p

new_cpu

task_rq_unlock

rq

flags

rq

task_rq_lock

p

flags

old_state

p

state

old_state

state

goto

out

p

array

goto

out_running

this_cpu

smp_processor_id

cpu

task_cpu

p

out_activate

old_state

TASK_UNINTERRUPTIBLE

rq

nr_uninterruptible

p

sleep_type

SLEEP_NONINTERACTIVE

old_state

TASK_NONINTERACTIVE

p

sleep_type

SLEEP_NONINTERACTIVE

activate_task

p

rq

cpu

this_cpu

sync

cpu

this_cpu

TASK_PREEMPTS_CURR

p

rq

resched_task

rq

curr

success

out_running

p

state

TASK_RUNNING

out

task_rq_unlock

rq

flags

return

success

fastcall

wake_up_process

task_struct

p

return

try_to_wake_up

p

TASK_STOPPED

TASK_TRACED

TASK_INTERRUPTIBLE

TASK_UNINTERRUPTIBLE

EXPORT_SYMBOL

wake_up_process

fastcall

wake_up_state

task_struct

p

state

return

try_to_wake_up

p

state

static

void

task_running_tick

rq

rq

task_struct

p

void

fastcall

sched_fork

task_struct

p

clone_flags

cpu

get_cpu

CONFIG_SMP

cpu

sched_balance_self

cpu

SD_BALANCE_FORK

set_task_cpu

p

cpu

p

state

TASK_RUNNING

p

prio

current

normal_prio

INIT_LIST_HEAD

p

run_list

p

array

NULL

CONFIG_SCHEDSTATS

CONFIG_TASK_DELAY_ACCT

unlikely

sched_info_on

memset

p

sched_info

sizeof

p

sched_info

CONFIG_SMP

__ARCH_WANT_UNLOCKED_CTXSW

p

oncpu

CONFIG_PREEMPT

task_thread_info

p

preempt_count

local_irq_disable

p

time_slice

current

time_slice

p

first_time_slice

current

time_slice

p

timestamp

sched_clock

unlikely

current

time_slice

current

time_slice

task_running_tick

cpu_rq

cpu

current

local_irq_enable

put_cpu

void

fastcall

wake_up_new_task

task_struct

p

clone_flags

rq

rq

this_rq

flags

this_cpu

cpu

rq

task_rq_lock

p

flags

BUG_ON

p

state

TASK_RUNNING

this_cpu

smp_processor_id

cpu

task_cpu

p

p

sleep_avg

JIFFIES_TO_NS

CURRENT_BONUS

p

CHILD_PENALTY

MAX_SLEEP_AVG

MAX_BONUS

p

prio

effective_prio

p

likely

cpu

this_cpu

clone_flags

CLONE_VM

unlikely

current

array

__activate_task

p

rq

p

prio

current

prio

p

normal_prio

current

normal_prio

list_add_tail

p

run_list

current

run_list

p

array

current

array

p

array

nr_active

inc_nr_running

p

rq

set_need_resched

__activate_task

p

rq

this_rq

rq

this_rq

cpu_rq

this_cpu

p

timestamp

p

timestamp

this_rq

most_recent_timestamp

rq

most_recent_timestamp

__activate_task

p

rq

TASK_PREEMPTS_CURR

p

rq

resched_task

rq

curr

task_rq_unlock

rq

flags

this_rq

task_rq_lock

current

flags

current

sleep_avg

JIFFIES_TO_NS

CURRENT_BONUS

current

PARENT_PENALTY

MAX_SLEEP_AVG

MAX_BONUS

task_rq_unlock

this_rq

flags

void

fastcall

sched_exit

task_struct

p

flags

rq

rq

rq

task_rq_lock

p

parent

flags

p

first_time_slice

task_cpu

p

task_cpu

p

parent

p

parent

time_slice

p

time_slice

unlikely

p

parent

time_slice

task_timeslice

p

p

parent

time_slice

task_timeslice

p

p

sleep_avg

p

parent

sleep_avg

p

parent

sleep_avg

p

parent

sleep_avg

EXIT_WEIGHT

EXIT_WEIGHT

p

sleep_avg

EXIT_WEIGHT

task_rq_unlock

rq

flags

static

inline

void

prepare_task_switch

rq

rq

task_struct

next

prepare_lock_switch

rq

next

prepare_arch_switch

next

static

inline

void

finish_task_switch

rq

rq

task_struct

prev

__releases

rq

lock

mm_struct

mm

rq

prev_mm

prev_state

rq

prev_mm

NULL

prev_state

prev

state

finish_arch_switch

prev

finish_lock_switch

rq

prev

mm

mmdrop

mm

unlikely

prev_state

TASK_DEAD

kprobe_flush_task

prev

put_task_struct

prev

asmlinkage

void

schedule_tail

task_struct

prev

__releases

rq

lock

rq

rq

this_rq

finish_task_switch

rq

prev

__ARCH_WANT_UNLOCKED_CTXSW

preempt_enable

current

set_child_tid

put_user

current

pid

current

set_child_tid

static

inline

task_struct

context_switch

rq

rq

task_struct

prev

task_struct

next

mm_struct

mm

next

mm

mm_struct

oldmm

prev

active_mm

arch_enter_lazy_cpu_mode

mm

next

active_mm

oldmm

atomic_inc

oldmm

mm_count

enter_lazy_tlb

oldmm

next

switch_mm

oldmm

mm

next

prev

mm

prev

active_mm

NULL

WARN_ON

rq

prev_mm

rq

prev_mm

oldmm

__ARCH_WANT_UNLOCKED_CTXSW

spin_release

rq

lock

dep_map

_THIS_IP_

switch_to

prev

next

prev

return

prev

nr_running

void

i

sum

for_each_online_cpu

i

sum

cpu_rq

i

nr_running

return

sum

nr_uninterruptible

void

i

sum

for_each_possible_cpu

i

sum

cpu_rq

i

nr_uninterruptible

unlikely

sum

sum

return

sum

nr_context_switches

void

i

sum

for_each_possible_cpu

i

sum

cpu_rq

i

nr_switches

return

sum

nr_iowait

void

i

sum

for_each_possible_cpu

i

sum

atomic_read

cpu_rq

i

nr_iowait

return

sum

nr_active

void

i

running

uninterruptible

for_each_online_cpu

i

running

cpu_rq

i

nr_running

uninterruptible

cpu_rq

i

nr_uninterruptible

unlikely

uninterruptible

uninterruptible

return

running

uninterruptible

CONFIG_SMP

static

inline

task_hot

task_struct

p

now

sched_domain

sd

return

now

p

last_ran

sd

cache_hot_time

static

void

double_rq_lock

rq

rq1

rq

rq2

__acquires

rq1

lock

__acquires

rq2

lock

BUG_ON

irqs_disabled

rq1

rq2

spin_lock

rq1

lock

__acquire

rq2

lock

rq1

rq2

spin_lock

rq1

lock

spin_lock

rq2

lock

spin_lock

rq2

lock

spin_lock

rq1

lock

static

void

double_rq_unlock

rq

rq1

rq

rq2

__releases

rq1

lock

__releases

rq2

lock

spin_unlock

rq1

lock

rq1

rq2

spin_unlock

rq2

lock

__release

rq2

lock

static

void

double_lock_balance

rq

this_rq

rq

busiest

__releases

this_rq

lock

__acquires

busiest

lock

__acquires

this_rq

lock

unlikely

irqs_disabled

spin_unlock

this_rq

lock

BUG_ON

unlikely

spin_trylock

busiest

lock

busiest

this_rq

spin_unlock

this_rq

lock

spin_lock

busiest

lock

spin_lock

this_rq

lock

spin_lock

busiest

lock

static

void

sched_migrate_task

task_struct

p

dest_cpu

migration_req

req

flags

rq

rq

rq

task_rq_lock

p

flags

cpu_isset

dest_cpu

p

cpus_allowed

unlikely

cpu_is_offline

dest_cpu

goto

out

migrate_task

p

dest_cpu

req

task_struct

mt

rq

migration_thread

get_task_struct

mt

task_rq_unlock

rq

flags

wake_up_process

mt

put_task_struct

mt

wait_for_completion

req

done

return

out

task_rq_unlock

rq

flags

void

sched_exec

void

new_cpu

this_cpu

get_cpu

new_cpu

sched_balance_self

this_cpu

SD_BALANCE_EXEC

put_cpu

new_cpu

this_cpu

sched_migrate_task

current

new_cpu

static

void

pull_task

rq

src_rq

prio_array

src_array

task_struct

p

rq

this_rq

prio_array

this_array

this_cpu

dequeue_task

p

src_array

dec_nr_running

p

src_rq

set_task_cpu

p

this_cpu

inc_nr_running

p

this_rq

enqueue_task

p

this_array

p

timestamp

p

timestamp

src_rq

most_recent_timestamp

this_rq

most_recent_timestamp

TASK_PREEMPTS_CURR

p

this_rq

resched_task

this_rq

curr

static

can_migrate_task

task_struct

p

rq

rq

this_cpu

sched_domain

sd

enum

idle_type

idle

all_pinned

cpu_isset

this_cpu

p

cpus_allowed

return

all_pinned

task_running

rq

p

return

sd

nr_balance_failed

sd

cache_nice_tries

CONFIG_SCHEDSTATS

task_hot

p

rq

most_recent_timestamp

sd

schedstat_inc

sd

lb_hot_gained

idle

return

task_hot

p

rq

most_recent_timestamp

sd

return

return

rq_best_prio

rq

min

rq

curr

prio

rq

best_expired_prio

static

move_tasks

rq

this_rq

this_cpu

rq

busiest

max_nr_move

max_load_move

sched_domain

sd

enum

idle_type

idle

all_pinned

idx

pulled

pinned

this_best_prio

best_prio

best_prio_seen

skip_for_load

prio_array

array

dst_array

list_head

head

curr

task_struct

tmp

rem_load_move

max_nr_move

max_load_move

goto

out

rem_load_move

max_load_move

pinned

this_best_prio

rq_best_prio

this_rq

best_prio

rq_best_prio

busiest

best_prio_seen

best_prio

busiest

curr

prio

busiest

expired

nr_active

array

busiest

expired

dst_array

this_rq

expired

array

busiest

active

dst_array

this_rq

active

new_array

idx

skip_bitmap

idx

idx

sched_find_first_bit

array

bitmap

idx

find_next_bit

array

bitmap

MAX_PRIO

idx

idx

MAX_PRIO

array

busiest

expired

busiest

active

nr_active

array

busiest

active

dst_array

this_rq

active

goto

new_array

goto

out

head

array

queue

idx

curr

head

prev

skip_queue

tmp

list_entry

curr

task_struct

run_list

curr

curr

prev

skip_for_load

tmp

load_weight

rem_load_move

skip_for_load

idx

this_best_prio

skip_for_load

best_prio_seen

idx

best_prio

skip_for_load

can_migrate_task

tmp

busiest

this_cpu

sd

idle

pinned

best_prio_seen

idx

best_prio

curr

head

goto

skip_queue

idx

goto

skip_bitmap

pull_task

busiest

array

tmp

this_rq

dst_array

this_cpu

pulled

rem_load_move

tmp

load_weight

pulled

max_nr_move

rem_load_move

idx

this_best_prio

this_best_prio

idx

curr

head

goto

skip_queue

idx

goto

skip_bitmap

out

schedstat_add

sd

lb_gained

idle

pulled

all_pinned

all_pinned

pinned

return

pulled

static

sched_group

find_busiest_group

sched_domain

sd

this_cpu

imbalance

enum

idle_type

idle

sd_idle

cpumask_t

cpus

balance

sched_group

busiest

NULL

this

NULL

group

sd

groups

max_load

avg_load

total_load

this_load

total_pwr

max_pull

busiest_load_per_task

busiest_nr_running

this_load_per_task

this_nr_running

load_idx

CONFIG_SCHED_MC

CONFIG_SCHED_SMT

power_savings_balance

leader_nr_running

min_load_per_task

min_nr_running

ULONG_MAX

sched_group

group_min

NULL

group_leader

NULL

max_load

this_load

total_load

total_pwr

busiest_load_per_task

busiest_nr_running

this_load_per_task

this_nr_running

idle

NOT_IDLE

load_idx

sd

busy_idx

idle

NEWLY_IDLE

load_idx

sd

newidle_idx

load_idx

sd

idle_idx

load

group_capacity

local_group

i

balance_cpu

first_idle_cpu

sum_nr_running

sum_weighted_load

local_group

cpu_isset

this_cpu

group

cpumask

local_group

balance_cpu

first_cpu

group

cpumask

sum_weighted_load

sum_nr_running

avg_load

for_each_cpu_mask

i

group

cpumask

rq

rq

cpu_isset

i

cpus

rq

cpu_rq

i

sd_idle

idle_cpu

i

sd_idle

local_group

idle_cpu

i

first_idle_cpu

first_idle_cpu

balance_cpu

i

load

target_load

i

load_idx

load

source_load

i

load_idx

avg_load

load

sum_nr_running

rq

nr_running

sum_weighted_load

rq

raw_weighted_load

local_group

balance_cpu

this_cpu

balance

balance

goto

ret

total_load

avg_load

total_pwr

group

__cpu_power

avg_load

sg_div_cpu_power

group

avg_load

SCHED_LOAD_SCALE

group_capacity

group

__cpu_power

SCHED_LOAD_SCALE

local_group

this_load

avg_load

this

group

this_nr_running

sum_nr_running

this_load_per_task

sum_weighted_load

avg_load

max_load

sum_nr_running

group_capacity

max_load

avg_load

busiest

group

busiest_nr_running

sum_nr_running

busiest_load_per_task

sum_weighted_load

CONFIG_SCHED_MC

CONFIG_SCHED_SMT

idle

NOT_IDLE

sd

flags

SD_POWERSAVINGS_BALANCE

goto

group_next

local_group

this_nr_running

group_capacity

this_nr_running

power_savings_balance

power_savings_balance

sum_nr_running

group_capacity

sum_nr_running

goto

group_next

sum_nr_running

min_nr_running

sum_nr_running

min_nr_running

first_cpu

group

cpumask

first_cpu

group_min

cpumask

group_min

group

min_nr_running

sum_nr_running

min_load_per_task

sum_weighted_load

sum_nr_running

sum_nr_running

group_capacity

sum_nr_running

leader_nr_running

sum_nr_running

leader_nr_running

first_cpu

group

cpumask

first_cpu

group_leader

cpumask

group_leader

group

leader_nr_running

sum_nr_running

group_next

group

group

next

group

sd

groups

busiest

this_load

max_load

busiest_nr_running

goto

out_balanced

avg_load

SCHED_LOAD_SCALE

total_load

total_pwr

this_load

avg_load

max_load

sd

imbalance_pct

this_load

goto

out_balanced

busiest_load_per_task

busiest_nr_running

max_load

busiest_load_per_task

goto

out_balanced

max_load

avg_load

imbalance

goto

small_imbalance

max_pull

min

max_load

avg_load

max_load

busiest_load_per_task

imbalance

min

max_pull

busiest

__cpu_power

avg_load

this_load

this

__cpu_power

SCHED_LOAD_SCALE

imbalance

busiest_load_per_task

tmp

pwr_now

pwr_move

imbn

small_imbalance

pwr_move

pwr_now

imbn

this_nr_running

this_load_per_task

this_nr_running

busiest_load_per_task

this_load_per_task

imbn

this_load_per_task

SCHED_LOAD_SCALE

max_load

this_load

busiest_load_per_task

imbn

imbalance

busiest_load_per_task

return

busiest

pwr_now

busiest

__cpu_power

min

busiest_load_per_task

max_load

pwr_now

this

__cpu_power

min

this_load_per_task

this_load

pwr_now

SCHED_LOAD_SCALE

tmp

sg_div_cpu_power

busiest

busiest_load_per_task

SCHED_LOAD_SCALE

max_load

tmp

pwr_move

busiest

__cpu_power

min

busiest_load_per_task

max_load

tmp

max_load

busiest

__cpu_power

busiest_load_per_task

SCHED_LOAD_SCALE

tmp

sg_div_cpu_power

this

max_load

busiest

__cpu_power

tmp

sg_div_cpu_power

this

busiest_load_per_task

SCHED_LOAD_SCALE

pwr_move

this

__cpu_power

min

this_load_per_task

this_load

tmp

pwr_move

SCHED_LOAD_SCALE

pwr_move

pwr_now

goto

out_balanced

imbalance

busiest_load_per_task

return

busiest

out_balanced

CONFIG_SCHED_MC

CONFIG_SCHED_SMT

idle

NOT_IDLE

sd

flags

SD_POWERSAVINGS_BALANCE

goto

ret

this

group_leader

group_leader

group_min

imbalance

min_load_per_task

return

group_min

ret

imbalance

return

NULL

static

rq

find_busiest_queue

sched_group

group

enum

idle_type

idle

imbalance

cpumask_t

cpus

rq

busiest

NULL

rq

max_load

i

for_each_cpu_mask

i

group

cpumask

cpu_isset

i

cpus

rq

cpu_rq

i

rq

nr_running

rq

raw_weighted_load

imbalance

rq

raw_weighted_load

max_load

max_load

rq

raw_weighted_load

busiest

rq

return

busiest

MAX_PINNED_INTERVAL

static

inline

minus_1_or_zero

n

return

n

n

static

load_balance

this_cpu

rq

this_rq

sched_domain

sd

enum

idle_type

idle

balance

nr_moved

all_pinned

active_balance

sd_idle

sched_group

group

imbalance

rq

busiest

cpumask_t

cpus

CPU_MASK_ALL

flags

idle

NOT_IDLE

sd

flags

SD_SHARE_CPUPOWER

test_sd_parent

sd

SD_POWERSAVINGS_BALANCE

sd_idle

schedstat_inc

sd

lb_cnt

idle

redo

group

find_busiest_group

sd

this_cpu

imbalance

idle

sd_idle

cpus

balance

balance

goto

out_balanced

group

schedstat_inc

sd

lb_nobusyg

idle

goto

out_balanced

busiest

find_busiest_queue

group

idle

imbalance

cpus

busiest

schedstat_inc

sd

lb_nobusyq

idle

goto

out_balanced

BUG_ON

busiest

this_rq

schedstat_add

sd

lb_imbalance

idle

imbalance

nr_moved

busiest

nr_running

local_irq_save

flags

double_rq_lock

this_rq

busiest

nr_moved

move_tasks

this_rq

this_cpu

busiest

minus_1_or_zero

busiest

nr_running

imbalance

sd

idle

all_pinned

double_rq_unlock

this_rq

busiest

local_irq_restore

flags

nr_moved

this_cpu

smp_processor_id

resched_cpu

this_cpu

unlikely

all_pinned

cpu_clear

cpu_of

busiest

cpus

cpus_empty

cpus

goto

redo

goto

out_balanced

nr_moved

schedstat_inc

sd

lb_failed

idle

sd

nr_balance_failed

unlikely

sd

nr_balance_failed

sd

cache_nice_tries

spin_lock_irqsave

busiest

lock

flags

cpu_isset

this_cpu

busiest

curr

cpus_allowed

spin_unlock_irqrestore

busiest

lock

flags

all_pinned

goto

out_one_pinned

busiest

active_balance

busiest

active_balance

busiest

push_cpu

this_cpu

active_balance

spin_unlock_irqrestore

busiest

lock

flags

active_balance

wake_up_process

busiest

migration_thread

sd

nr_balance_failed

sd

cache_nice_tries

sd

nr_balance_failed

likely

active_balance

sd

balance_interval

sd

min_interval

sd

balance_interval

sd

max_interval

sd

balance_interval

nr_moved

sd_idle

sd

flags

SD_SHARE_CPUPOWER

test_sd_parent

sd

SD_POWERSAVINGS_BALANCE

return

return

nr_moved

out_balanced

schedstat_inc

sd

lb_balanced

idle

sd

nr_balance_failed

out_one_pinned

all_pinned

sd

balance_interval

MAX_PINNED_INTERVAL

sd

balance_interval

sd

max_interval

sd

balance_interval

sd_idle

sd

flags

SD_SHARE_CPUPOWER

test_sd_parent

sd

SD_POWERSAVINGS_BALANCE

return

return

static

load_balance_newidle

this_cpu

rq

this_rq

sched_domain

sd

sched_group

group

rq

busiest

NULL

imbalance

nr_moved

sd_idle

cpumask_t

cpus

CPU_MASK_ALL

sd

flags

SD_SHARE_CPUPOWER

test_sd_parent

sd

SD_POWERSAVINGS_BALANCE

sd_idle

schedstat_inc

sd

lb_cnt

NEWLY_IDLE

redo

group

find_busiest_group

sd

this_cpu

imbalance

NEWLY_IDLE

sd_idle

cpus

NULL

group

schedstat_inc

sd

lb_nobusyg

NEWLY_IDLE

goto

out_balanced

busiest

find_busiest_queue

group

NEWLY_IDLE

imbalance

cpus

busiest

schedstat_inc

sd

lb_nobusyq

NEWLY_IDLE

goto

out_balanced

BUG_ON

busiest

this_rq

schedstat_add

sd

lb_imbalance

NEWLY_IDLE

imbalance

nr_moved

busiest

nr_running

double_lock_balance

this_rq

busiest

nr_moved

move_tasks

this_rq

this_cpu

busiest

minus_1_or_zero

busiest

nr_running

imbalance

sd

NEWLY_IDLE

NULL

spin_unlock

busiest

lock

nr_moved

cpu_clear

cpu_of

busiest

cpus

cpus_empty

cpus

goto

redo

nr_moved

schedstat_inc

sd

lb_failed

NEWLY_IDLE

sd_idle

sd

flags

SD_SHARE_CPUPOWER

test_sd_parent

sd

SD_POWERSAVINGS_BALANCE

return

sd

nr_balance_failed

return

nr_moved

out_balanced

schedstat_inc

sd

lb_balanced

NEWLY_IDLE

sd_idle

sd

flags

SD_SHARE_CPUPOWER

test_sd_parent

sd

SD_POWERSAVINGS_BALANCE

return

sd

nr_balance_failed

return

static

void

idle_balance

this_cpu

rq

this_rq

sched_domain

sd

pulled_task

next_balance

jiffies

HZ

for_each_domain

this_cpu

sd

interval

sd

flags

SD_LOAD_BALANCE

sd

flags

SD_BALANCE_NEWIDLE

pulled_task

load_balance_newidle

this_cpu

this_rq

sd

interval

msecs_to_jiffies

sd

balance_interval

time_after

next_balance

sd

last_balance

interval

next_balance

sd

last_balance

interval

pulled_task

pulled_task

this_rq

next_balance

next_balance

static

void

active_load_balance

rq

busiest_rq

busiest_cpu

target_cpu

busiest_rq

push_cpu

sched_domain

sd

rq

target_rq

busiest_rq

nr_running

return

target_rq

cpu_rq

target_cpu

BUG_ON

busiest_rq

target_rq

double_lock_balance

busiest_rq

target_rq

for_each_domain

target_cpu

sd

sd

flags

SD_LOAD_BALANCE

cpu_isset

busiest_cpu

sd

span

likely

sd

schedstat_inc

sd

alb_cnt

move_tasks

target_rq

target_cpu

busiest_rq

RTPRIO_TO_LOAD_WEIGHT

sd

SCHED_IDLE

NULL

schedstat_inc

sd

alb_pushed

schedstat_inc

sd

alb_failed

spin_unlock

target_rq

lock

static

void

update_load

rq

this_rq

this_load

i

scale

this_load

this_rq

raw_weighted_load

i

scale

i

i

scale

scale

old_load

new_load

old_load

this_rq

cpu_load

i

new_load

this_load

new_load

old_load

new_load

scale

this_rq

cpu_load

i

old_load

scale

new_load

i

CONFIG_NO_HZ

static

atomic_t

load_balancer

cpumask_t

cpu_mask

nohz

____cacheline_aligned

load_balancer

ATOMIC_INIT

cpu_mask

CPU_MASK_NONE

select_nohz_load_balancer

stop_tick

cpu

smp_processor_id

stop_tick

cpu_set

cpu

nohz

cpu_mask

cpu_rq

cpu

in_nohz_recently

cpu_is_offline

cpu

atomic_read

nohz

load_balancer

cpu

atomic_cmpxchg

nohz

load_balancer

cpu

cpu

BUG

return

cpus_weight

nohz

cpu_mask

num_online_cpus

atomic_read

nohz

load_balancer

cpu

atomic_set

nohz

load_balancer

return

atomic_read

nohz

load_balancer

atomic_cmpxchg

nohz

load_balancer

cpu

return

atomic_read

nohz

load_balancer

cpu

return

cpu_isset

cpu

nohz

cpu_mask

return

cpu_clear

cpu

nohz

cpu_mask

atomic_read

nohz

load_balancer

cpu

atomic_cmpxchg

nohz

load_balancer

cpu

cpu

BUG

return

static

DEFINE_SPINLOCK

balancing

static

inline

void

rebalance_domains

cpu

enum

idle_type

idle

balance

rq

rq

cpu_rq

cpu

interval

sched_domain

sd

next_balance

jiffies

HZ

for_each_domain

cpu

sd

sd

flags

SD_LOAD_BALANCE

interval

sd

balance_interval

idle

SCHED_IDLE

interval

sd

busy_factor

interval

msecs_to_jiffies

interval

unlikely

interval

interval

sd

flags

SD_SERIALIZE

spin_trylock

balancing

goto

out

time_after_eq

jiffies

sd

last_balance

interval

load_balance

cpu

rq

sd

idle

balance

idle

NOT_IDLE

sd

last_balance

jiffies

sd

flags

SD_SERIALIZE

spin_unlock

balancing

out

time_after

next_balance

sd

last_balance

interval

next_balance

sd

last_balance

interval

balance

rq

next_balance

next_balance

static

void

run_rebalance_domains

softirq_action

h

local_cpu

smp_processor_id

rq

local_rq

cpu_rq

local_cpu

enum

idle_type

idle

local_rq

idle_at_tick

SCHED_IDLE

NOT_IDLE

rebalance_domains

local_cpu

idle

CONFIG_NO_HZ

local_rq

idle_at_tick

atomic_read

nohz

load_balancer

local_cpu

cpumask_t

cpus

nohz

cpu_mask

rq

rq

balance_cpu

cpu_clear

local_cpu

cpus

for_each_cpu_mask

balance_cpu

cpus

need_resched

rebalance_domains

balance_cpu

SCHED_IDLE

rq

cpu_rq

balance_cpu

time_after

local_rq

next_balance

rq

next_balance

local_rq

next_balance

rq

next_balance

static

inline

void

trigger_load_balance

cpu

rq

rq

cpu_rq

cpu

CONFIG_NO_HZ

rq

in_nohz_recently

rq

idle_at_tick

rq

in_nohz_recently

atomic_read

nohz

load_balancer

cpu

cpu_clear

cpu

nohz

cpu_mask

atomic_set

nohz

load_balancer

atomic_read

nohz

load_balancer

ilb

first_cpu

nohz

cpu_mask

ilb

NR_CPUS

resched_cpu

ilb

rq

idle_at_tick

atomic_read

nohz

load_balancer

cpu

cpus_weight

nohz

cpu_mask

num_online_cpus

resched_cpu

cpu

return

rq

idle_at_tick

atomic_read

nohz

load_balancer

cpu

cpu_isset

cpu

nohz

cpu_mask

return

time_after_eq

jiffies

rq

next_balance

raise_softirq

SCHED_SOFTIRQ

static

inline

void

idle_balance

cpu

rq

rq

DEFINE_PER_CPU

kernel_stat

kstat

EXPORT_PER_CPU_SYMBOL

kstat

static

inline

void

update_cpu_clock

task_struct

p

rq

rq

now

p

sched_time

now

p

last_ran

p

last_ran

rq

most_recent_timestamp

now

current_sched_time

task_struct

p

ns

flags

local_irq_save

flags

ns

p

sched_time

sched_clock

p

last_ran

local_irq_restore

flags

return

ns

static

inline

expired_starving

rq

rq

rq

curr

static_prio

rq

best_expired_prio

return

STARVATION_LIMIT

rq

expired_timestamp

return

jiffies

rq

expired_timestamp

STARVATION_LIMIT

rq

nr_running

return

return

void

account_user_time

task_struct

p

cputime_t

cputime

cpu_usage_stat

cpustat

kstat_this_cpu

cpustat

cputime64_t

tmp

p

utime

cputime_add

p

utime

cputime

tmp

cputime_to_cputime64

cputime

TASK_NICE

p

cpustat

nice

cputime64_add

cpustat

nice

tmp

cpustat

user

cputime64_add

cpustat

user

tmp

void

account_system_time

task_struct

p

hardirq_offset

cputime_t

cputime

cpu_usage_stat

cpustat

kstat_this_cpu

cpustat

rq

rq

this_rq

cputime64_t

tmp

p

stime

cputime_add

p

stime

cputime

tmp

cputime_to_cputime64

cputime

hardirq_count

hardirq_offset

cpustat

irq

cputime64_add

cpustat

irq

tmp

softirq_count

cpustat

softirq

cputime64_add

cpustat

softirq

tmp

p

rq

idle

cpustat

system

cputime64_add

cpustat

system

tmp

atomic_read

rq

nr_iowait

cpustat

iowait

cputime64_add

cpustat

iowait

tmp

cpustat

idle

cputime64_add

cpustat

idle

tmp

acct_update_integrals

p

void

account_steal_time

task_struct

p

cputime_t

steal

cpu_usage_stat

cpustat

kstat_this_cpu

cpustat

cputime64_t

tmp

cputime_to_cputime64

steal

rq

rq

this_rq

p

rq

idle

p

stime

cputime_add

p

stime

steal

atomic_read

rq

nr_iowait

cpustat

iowait

cputime64_add

cpustat

iowait

tmp

cpustat

idle

cputime64_add

cpustat

idle

tmp

cpustat

steal

cputime64_add

cpustat

steal

tmp

static

void

task_running_tick

rq

rq

task_struct

p

p

array

rq

active

set_tsk_need_resched

p

return

spin_lock

rq

lock

rt_task

p

p

policy

SCHED_RR

p

time_slice

p

time_slice

task_timeslice

p

p

first_time_slice

set_tsk_need_resched

p

requeue_task

p

rq

active

goto

out_unlock

p

time_slice

dequeue_task

p

rq

active

set_tsk_need_resched

p

p

prio

effective_prio

p

p

time_slice

task_timeslice

p

p

first_time_slice

rq

expired_timestamp

rq

expired_timestamp

jiffies

TASK_INTERACTIVE

p

expired_starving

rq

enqueue_task

p

rq

expired

p

static_prio

rq

best_expired_prio

rq

best_expired_prio

p

static_prio

enqueue_task

p

rq

active

TASK_INTERACTIVE

p

task_timeslice

p

p

time_slice

TIMESLICE_GRANULARITY

p

p

time_slice

TIMESLICE_GRANULARITY

p

p

array

rq

active

requeue_task

p

rq

active

set_tsk_need_resched

p

out_unlock

spin_unlock

rq

lock

void

scheduler_tick

void

now

sched_clock

task_struct

p

current

cpu

smp_processor_id

idle_at_tick

idle_cpu

cpu

rq

rq

cpu_rq

cpu

update_cpu_clock

p

rq

now

idle_at_tick

task_running_tick

rq

p

CONFIG_SMP

update_load

rq

rq

idle_at_tick

idle_at_tick

trigger_load_balance

cpu

CONFIG_PREEMPT

CONFIG_DEBUG_PREEMPT

void

fastcall

add_preempt_count

val

DEBUG_LOCKS_WARN_ON

preempt_count

return

preempt_count

val

DEBUG_LOCKS_WARN_ON

preempt_count

PREEMPT_MASK

PREEMPT_MASK

EXPORT_SYMBOL

add_preempt_count

void

fastcall

sub_preempt_count

val

DEBUG_LOCKS_WARN_ON

val

preempt_count

return

DEBUG_LOCKS_WARN_ON

val

PREEMPT_MASK

preempt_count

PREEMPT_MASK

return

preempt_count

val

EXPORT_SYMBOL

sub_preempt_count

static

inline

interactive_sleep

enum

sleep_type

sleep_type

return

sleep_type

SLEEP_INTERACTIVE

sleep_type

SLEEP_INTERRUPTED

asmlinkage

void

__sched

schedule

void

task_struct

prev

next

prio_array

array

list_head

queue

now

run_time

cpu

idx

new_prio

switch_count

rq

rq

unlikely

in_atomic

current

exit_state

printk

KERN_ERR

current

comm

preempt_count

current

pid

debug_show_held_locks

current

irqs_disabled

print_irqtrace_events

current

dump_stack

profile_hit

SCHED_PROFILING

__builtin_return_address

need_resched

preempt_disable

prev

current

release_kernel_lock

prev

need_resched_nonpreemptible

rq

this_rq

unlikely

prev

rq

idle

prev

state

TASK_RUNNING

printk

KERN_ERR

dump_stack

schedstat_inc

rq

sched_cnt

now

sched_clock

likely

now

prev

timestamp

NS_MAX_SLEEP_AVG

run_time

now

prev

timestamp

unlikely

now

prev

timestamp

run_time

run_time

NS_MAX_SLEEP_AVG

run_time

CURRENT_BONUS

prev

spin_lock_irq

rq

lock

switch_count

prev

nivcsw

prev

state

preempt_count

PREEMPT_ACTIVE

switch_count

prev

nvcsw

unlikely

prev

state

TASK_INTERRUPTIBLE

unlikely

signal_pending

prev

prev

state

TASK_RUNNING

prev

state

TASK_UNINTERRUPTIBLE

rq

nr_uninterruptible

deactivate_task

prev

rq

cpu

smp_processor_id

unlikely

rq

nr_running

idle_balance

cpu

rq

rq

nr_running

next

rq

idle

rq

expired_timestamp

goto

switch_tasks

array

rq

active

unlikely

array

nr_active

schedstat_inc

rq

sched_switch

rq

active

rq

expired

rq

expired

array

array

rq

active

rq

expired_timestamp

rq

best_expired_prio

MAX_PRIO

idx

sched_find_first_bit

array

bitmap

queue

array

queue

idx

next

list_entry

queue

next

task_struct

run_list

rt_task

next

interactive_sleep

next

sleep_type

delta

now

next

timestamp

unlikely

now

next

timestamp

delta

next

sleep_type

SLEEP_INTERACTIVE

delta

delta

ON_RUNQUEUE_WEIGHT

array

next

array

new_prio

recalc_task_prio

next

next

timestamp

delta

unlikely

next

prio

new_prio

dequeue_task

next

array

next

prio

new_prio

enqueue_task

next

array

next

sleep_type

SLEEP_NORMAL

switch_tasks

next

rq

idle

schedstat_inc

rq

sched_goidle

prefetch

next

prefetch_stack

next

clear_tsk_need_resched

prev

rcu_qsctr_inc

task_cpu

prev

update_cpu_clock

prev

rq

now

prev

sleep_avg

run_time

prev

sleep_avg

prev

sleep_avg

prev

timestamp

prev

last_ran

now

sched_info_switch

prev

next

likely

prev

next

next

timestamp

next

last_ran

now

rq

nr_switches

rq

curr

next

switch_count

prepare_task_switch

rq

next

prev

context_switch

rq

prev

next

barrier

finish_task_switch

this_rq

prev

spin_unlock_irq

rq

lock

prev

current

unlikely

reacquire_kernel_lock

prev

goto

need_resched_nonpreemptible

preempt_enable_no_resched

unlikely

test_thread_flag

TIF_NEED_RESCHED

goto

need_resched

EXPORT_SYMBOL

schedule

CONFIG_PREEMPT

asmlinkage

void

__sched

preempt_schedule

void

thread_info

ti

current_thread_info

CONFIG_PREEMPT_BKL

task_struct

task

current

saved_lock_depth

likely

ti

preempt_count

irqs_disabled

return

need_resched

add_preempt_count

PREEMPT_ACTIVE

CONFIG_PREEMPT_BKL

saved_lock_depth

task

lock_depth

task

lock_depth

schedule

CONFIG_PREEMPT_BKL

task

lock_depth

saved_lock_depth

sub_preempt_count

PREEMPT_ACTIVE

barrier

unlikely

test_thread_flag

TIF_NEED_RESCHED

goto

need_resched

EXPORT_SYMBOL

preempt_schedule

asmlinkage

void

__sched

preempt_schedule_irq

void

thread_info

ti

current_thread_info

CONFIG_PREEMPT_BKL

task_struct

task

current

saved_lock_depth

BUG_ON

ti

preempt_count

irqs_disabled

need_resched

add_preempt_count

PREEMPT_ACTIVE

CONFIG_PREEMPT_BKL

saved_lock_depth

task

lock_depth

task

lock_depth

local_irq_enable

schedule

local_irq_disable

CONFIG_PREEMPT_BKL

task

lock_depth

saved_lock_depth

sub_preempt_count

PREEMPT_ACTIVE

barrier

unlikely

test_thread_flag

TIF_NEED_RESCHED

goto

need_resched

default_wake_function

wait_queue_t

curr

mode

sync

void

key

return

try_to_wake_up

curr

private

mode

sync

EXPORT_SYMBOL

default_wake_function

static

void

__wake_up_common

wait_queue_head_t

q

mode

nr_exclusive

sync

void

key

list_head

tmp

next

list_for_each_safe

tmp

next

q

task_list

wait_queue_t

curr

list_entry

tmp

wait_queue_t

task_list

flags

curr

flags

curr

func

curr

mode

sync

key

flags

WQ_FLAG_EXCLUSIVE

nr_exclusive

void

fastcall

__wake_up

wait_queue_head_t

q

mode

nr_exclusive

void

key

flags

spin_lock_irqsave

q

lock

flags

__wake_up_common

q

mode

nr_exclusive

key

spin_unlock_irqrestore

q

lock

flags

EXPORT_SYMBOL

__wake_up

void

fastcall

__wake_up_locked

wait_queue_head_t

q

mode

__wake_up_common

q

mode

NULL

void

fastcall

__wake_up_sync

wait_queue_head_t

q

mode

nr_exclusive

flags

sync

unlikely

q

return

unlikely

nr_exclusive

sync

spin_lock_irqsave

q

lock

flags

__wake_up_common

q

mode

nr_exclusive

sync

NULL

spin_unlock_irqrestore

q

lock

flags

EXPORT_SYMBOL_GPL

__wake_up_sync

void

fastcall

complete

completion

x

flags

spin_lock_irqsave

x

wait

lock

flags

x

done

__wake_up_common

x

wait

TASK_UNINTERRUPTIBLE

TASK_INTERRUPTIBLE

NULL

spin_unlock_irqrestore

x

wait

lock

flags

EXPORT_SYMBOL

complete

void

fastcall

complete_all

completion

x

flags

spin_lock_irqsave

x

wait

lock

flags

x

done

UINT_MAX

__wake_up_common

x

wait

TASK_UNINTERRUPTIBLE

TASK_INTERRUPTIBLE

NULL

spin_unlock_irqrestore

x

wait

lock

flags

EXPORT_SYMBOL

complete_all

void

fastcall

__sched

wait_for_completion

completion

x

might_sleep

spin_lock_irq

x

wait

lock

x

done

DECLARE_WAITQUEUE

wait

current

wait

flags

WQ_FLAG_EXCLUSIVE

__add_wait_queue_tail

x

wait

wait

__set_current_state

TASK_UNINTERRUPTIBLE

spin_unlock_irq

x

wait

lock

schedule

spin_lock_irq

x

wait

lock

x

done

__remove_wait_queue

x

wait

wait

x

done

spin_unlock_irq

x

wait

lock

EXPORT_SYMBOL

wait_for_completion

fastcall

__sched

wait_for_completion_timeout

completion

x

timeout

might_sleep

spin_lock_irq

x

wait

lock

x

done

DECLARE_WAITQUEUE

wait

current

wait

flags

WQ_FLAG_EXCLUSIVE

__add_wait_queue_tail

x

wait

wait

__set_current_state

TASK_UNINTERRUPTIBLE

spin_unlock_irq

x

wait

lock

timeout

schedule_timeout

timeout

spin_lock_irq

x

wait

lock

timeout

__remove_wait_queue

x

wait

wait

goto

out

x

done

__remove_wait_queue

x

wait

wait

x

done

out

spin_unlock_irq

x

wait

lock

return

timeout

EXPORT_SYMBOL

wait_for_completion_timeout

fastcall

__sched

wait_for_completion_interruptible

completion

x

ret

might_sleep

spin_lock_irq

x

wait

lock

x

done

DECLARE_WAITQUEUE

wait

current

wait

flags

WQ_FLAG_EXCLUSIVE

__add_wait_queue_tail

x

wait

wait

signal_pending

current

ret

ERESTARTSYS

__remove_wait_queue

x

wait

wait

goto

out

__set_current_state

TASK_INTERRUPTIBLE

spin_unlock_irq

x

wait

lock

schedule

spin_lock_irq

x

wait

lock

x

done

__remove_wait_queue

x

wait

wait

x

done

out

spin_unlock_irq

x

wait

lock

return

ret

EXPORT_SYMBOL

wait_for_completion_interruptible

fastcall

__sched

wait_for_completion_interruptible_timeout

completion

x

timeout

might_sleep

spin_lock_irq

x

wait

lock

x

done

DECLARE_WAITQUEUE

wait

current

wait

flags

WQ_FLAG_EXCLUSIVE

__add_wait_queue_tail

x

wait

wait

signal_pending

current

timeout

ERESTARTSYS

__remove_wait_queue

x

wait

wait

goto

out

__set_current_state

TASK_INTERRUPTIBLE

spin_unlock_irq

x

wait

lock

timeout

schedule_timeout

timeout

spin_lock_irq

x

wait

lock

timeout

__remove_wait_queue

x

wait

wait

goto

out

x

done

__remove_wait_queue

x

wait

wait

x

done

out

spin_unlock_irq

x

wait

lock

return

timeout

EXPORT_SYMBOL

wait_for_completion_interruptible_timeout

SLEEP_ON_VAR

flags

wait_queue_t

wait

init_waitqueue_entry

wait

current

SLEEP_ON_HEAD

spin_lock_irqsave

q

lock

flags

__add_wait_queue

q

wait

spin_unlock

q

lock

SLEEP_ON_TAIL

spin_lock_irq

q

lock

__remove_wait_queue

q

wait

spin_unlock_irqrestore

q

lock

flags

void

fastcall

__sched

interruptible_sleep_on

wait_queue_head_t

q

SLEEP_ON_VAR

current

state

TASK_INTERRUPTIBLE

SLEEP_ON_HEAD

schedule

SLEEP_ON_TAIL

EXPORT_SYMBOL

interruptible_sleep_on

fastcall

__sched

interruptible_sleep_on_timeout

wait_queue_head_t

q

timeout

SLEEP_ON_VAR

current

state

TASK_INTERRUPTIBLE

SLEEP_ON_HEAD

timeout

schedule_timeout

timeout

SLEEP_ON_TAIL

return

timeout

EXPORT_SYMBOL

interruptible_sleep_on_timeout

void

fastcall

__sched

sleep_on

wait_queue_head_t

q

SLEEP_ON_VAR

current

state

TASK_UNINTERRUPTIBLE

SLEEP_ON_HEAD

schedule

SLEEP_ON_TAIL

EXPORT_SYMBOL

sleep_on

fastcall

__sched

sleep_on_timeout

wait_queue_head_t

q

timeout

SLEEP_ON_VAR

current

state

TASK_UNINTERRUPTIBLE

SLEEP_ON_HEAD

timeout

schedule_timeout

timeout

SLEEP_ON_TAIL

return

timeout

EXPORT_SYMBOL

sleep_on_timeout

CONFIG_RT_MUTEXES

void

rt_mutex_setprio

task_struct

p

prio

prio_array

array

flags

rq

rq

oldprio

BUG_ON

prio

prio

MAX_PRIO

rq

task_rq_lock

p

flags

oldprio

p

prio

array

p

array

array

dequeue_task

p

array

p

prio

prio

array

rt_task

p

array

rq

active

enqueue_task

p

array

task_running

rq

p

p

prio

oldprio

resched_task

rq

curr

TASK_PREEMPTS_CURR

p

rq

resched_task

rq

curr

task_rq_unlock

rq

flags

void

set_user_nice

task_struct

p

nice

prio_array

array

old_prio

delta

flags

rq

rq

TASK_NICE

p

nice

nice

nice

return

rq

task_rq_lock

p

flags

has_rt_policy

p

p

static_prio

NICE_TO_PRIO

nice

goto

out_unlock

array

p

array

array

dequeue_task

p

array

dec_raw_weighted_load

rq

p

p

static_prio

NICE_TO_PRIO

nice

set_load_weight

p

old_prio

p

prio

p

prio

effective_prio

p

delta

p

prio

old_prio

array

enqueue_task

p

array

inc_raw_weighted_load

rq

p

delta

delta

task_running

rq

p

resched_task

rq

curr

out_unlock

task_rq_unlock

rq

flags

EXPORT_SYMBOL

set_user_nice

can_nice

task_struct

p

nice

nice_rlim

nice

return

nice_rlim

p

signal

rlim

RLIMIT_NICE

rlim_cur

capable

CAP_SYS_NICE

__ARCH_WANT_SYS_NICE

asmlinkage

sys_nice

increment

nice

retval

increment

increment

increment

increment

nice

PRIO_TO_NICE

current

static_prio

increment

nice

nice

nice

nice

increment

can_nice

current

nice

return

EPERM

retval

security_task_setnice

current

nice

retval

return

retval

set_user_nice

current

nice

return

task_prio

task_struct

p

return

p

prio

MAX_RT_PRIO

task_nice

task_struct

p

return

TASK_NICE

p

EXPORT_SYMBOL_GPL

task_nice

idle_cpu

cpu

return

cpu_curr

cpu

cpu_rq

cpu

idle

task_struct

idle_task

cpu

return

cpu_rq

cpu

idle

static

inline

task_struct

find_process_by_pid

pid_t

pid

return

pid

find_task_by_pid

pid

current

static

void

__setscheduler

task_struct

p

policy

prio

BUG_ON

p

array

p

policy

policy

p

rt_priority

prio

p

normal_prio

normal_prio

p

p

prio

rt_mutex_getprio

p

policy

SCHED_BATCH

p

sleep_avg

set_load_weight

p

sched_setscheduler

task_struct

p

policy

sched_param

param

retval

oldprio

oldpolicy

prio_array

array

flags

rq

rq

BUG_ON

in_interrupt

recheck

policy

policy

oldpolicy

p

policy

policy

SCHED_FIFO

policy

SCHED_RR

policy

SCHED_NORMAL

policy

SCHED_BATCH

return

EINVAL

param

sched_priority

p

mm

param

sched_priority

MAX_USER_RT_PRIO

p

mm

param

sched_priority

MAX_RT_PRIO

return

EINVAL

is_rt_policy

policy

param

sched_priority

return

EINVAL

capable

CAP_SYS_NICE

is_rt_policy

policy

rlim_rtprio

flags

lock_task_sighand

p

flags

return

ESRCH

rlim_rtprio

p

signal

rlim

RLIMIT_RTPRIO

rlim_cur

unlock_task_sighand

p

flags

policy

p

policy

rlim_rtprio

return

EPERM

param

sched_priority

p

rt_priority

param

sched_priority

rlim_rtprio

return

EPERM

current

euid

p

euid

current

euid

p

uid

return

EPERM

retval

security_task_setscheduler

p

policy

param

retval

return

retval

spin_lock_irqsave

p

pi_lock

flags

rq

__task_rq_lock

p

unlikely

oldpolicy

oldpolicy

p

policy

policy

oldpolicy

__task_rq_unlock

rq

spin_unlock_irqrestore

p

pi_lock

flags

goto

recheck

array

p

array

array

deactivate_task

p

rq

oldprio

p

prio

__setscheduler

p

policy

param

sched_priority

array

__activate_task

p

rq

task_running

rq

p

p

prio

oldprio

resched_task

rq

curr

TASK_PREEMPTS_CURR

p

rq

resched_task

rq

curr

__task_rq_unlock

rq

spin_unlock_irqrestore

p

pi_lock

flags

rt_mutex_adjust_pi

p

return

EXPORT_SYMBOL_GPL

sched_setscheduler

static

do_sched_setscheduler

pid_t

pid

policy

sched_param

__user

param

sched_param

lparam

task_struct

p

retval

param

pid

return

EINVAL

copy_from_user

lparam

param

sizeof

sched_param

return

EFAULT

rcu_read_lock

retval

ESRCH

p

find_process_by_pid

pid

p

NULL

retval

sched_setscheduler

p

policy

lparam

rcu_read_unlock

return

retval

asmlinkage

sys_sched_setscheduler

pid_t

pid

policy

sched_param

__user

param

policy

return

EINVAL

return

do_sched_setscheduler

pid

policy

param

asmlinkage

sys_sched_setparam

pid_t

pid

sched_param

__user

param

return

do_sched_setscheduler

pid

param

asmlinkage

sys_sched_getscheduler

pid_t

pid

task_struct

p

retval

EINVAL

pid

goto

out_nounlock

retval

ESRCH

read_lock

tasklist_lock

p

find_process_by_pid

pid

p

retval

security_task_getscheduler

p

retval

retval

p

policy

read_unlock

tasklist_lock

out_nounlock

return

retval

asmlinkage

sys_sched_getparam

pid_t

pid

sched_param

__user

param

sched_param

lp

task_struct

p

retval

EINVAL

param

pid

goto

out_nounlock

read_lock

tasklist_lock

p

find_process_by_pid

pid

retval

ESRCH

p

goto

out_unlock

retval

security_task_getscheduler

p

retval

goto

out_unlock

lp

sched_priority

p

rt_priority

read_unlock

tasklist_lock

retval

copy_to_user

param

lp

sizeof

param

EFAULT

out_nounlock

return

retval

out_unlock

read_unlock

tasklist_lock

return

retval

sched_setaffinity

pid_t

pid

cpumask_t

new_mask

cpumask_t

cpus_allowed

task_struct

p

retval

mutex_lock

sched_hotcpu_mutex

read_lock

tasklist_lock

p

find_process_by_pid

pid

p

read_unlock

tasklist_lock

mutex_unlock

sched_hotcpu_mutex

return

ESRCH

get_task_struct

p

read_unlock

tasklist_lock

retval

EPERM

current

euid

p

euid

current

euid

p

uid

capable

CAP_SYS_NICE

goto

out_unlock

retval

security_task_setscheduler

p

NULL

retval

goto

out_unlock

cpus_allowed

cpuset_cpus_allowed

p

cpus_and

new_mask

new_mask

cpus_allowed

retval

set_cpus_allowed

p

new_mask

out_unlock

put_task_struct

p

mutex_unlock

sched_hotcpu_mutex

return

retval

static

get_user_cpu_mask

__user

user_mask_ptr

len

cpumask_t

new_mask

len

sizeof

cpumask_t

memset

new_mask

sizeof

cpumask_t

len

sizeof

cpumask_t

len

sizeof

cpumask_t

return

copy_from_user

new_mask

user_mask_ptr

len

EFAULT

asmlinkage

sys_sched_setaffinity

pid_t

pid

len

__user

user_mask_ptr

cpumask_t

new_mask

retval

retval

get_user_cpu_mask

user_mask_ptr

len

new_mask

retval

return

retval

return

sched_setaffinity

pid

new_mask

cpumask_t

cpu_present_map

__read_mostly

EXPORT_SYMBOL

cpu_present_map

CONFIG_SMP

cpumask_t

cpu_online_map

__read_mostly

CPU_MASK_ALL

EXPORT_SYMBOL

cpu_online_map

cpumask_t

cpu_possible_map

__read_mostly

CPU_MASK_ALL

EXPORT_SYMBOL

cpu_possible_map

sched_getaffinity

pid_t

pid

cpumask_t

mask

task_struct

p

retval

mutex_lock

sched_hotcpu_mutex

read_lock

tasklist_lock

retval

ESRCH

p

find_process_by_pid

pid

p

goto

out_unlock

retval

security_task_getscheduler

p

retval

goto

out_unlock

cpus_and

mask

p

cpus_allowed

cpu_online_map

out_unlock

read_unlock

tasklist_lock

mutex_unlock

sched_hotcpu_mutex

retval

return

retval

return

asmlinkage

sys_sched_getaffinity

pid_t

pid

len

__user

user_mask_ptr

ret

cpumask_t

mask

len

sizeof

cpumask_t

return

EINVAL

ret

sched_getaffinity

pid

mask

ret

return

ret

copy_to_user

user_mask_ptr

mask

sizeof

cpumask_t

return

EFAULT

return

sizeof

cpumask_t

asmlinkage

sys_sched_yield

void

rq

rq

this_rq_lock

prio_array

array

current

array

target

rq

expired

schedstat_inc

rq

yld_cnt

rt_task

current

target

rq

active

array

nr_active

schedstat_inc

rq

yld_act_empty

rq

expired

nr_active

schedstat_inc

rq

yld_both_empty

rq

expired

nr_active

schedstat_inc

rq

yld_exp_empty

array

target

dequeue_task

current

array

enqueue_task

current

target

requeue_task

current

array

__release

rq

lock

spin_release

rq

lock

dep_map

_THIS_IP_

_raw_spin_unlock

rq

lock

preempt_enable_no_resched

schedule

return

static

void

__cond_resched

void

CONFIG_DEBUG_SPINLOCK_SLEEP

__might_sleep

__FILE__

__LINE__

add_preempt_count

PREEMPT_ACTIVE

schedule

sub_preempt_count

PREEMPT_ACTIVE

need_resched

__sched

cond_resched

void

need_resched

preempt_count

PREEMPT_ACTIVE

system_state

SYSTEM_RUNNING

__cond_resched

return

return

EXPORT_SYMBOL

cond_resched

cond_resched_lock

spinlock_t

lock

ret

need_lockbreak

lock

spin_unlock

lock

cpu_relax

ret

spin_lock

lock

need_resched

system_state

SYSTEM_RUNNING

spin_release

lock

dep_map

_THIS_IP_

_raw_spin_unlock

lock

preempt_enable_no_resched

__cond_resched

ret

spin_lock

lock

return

ret

EXPORT_SYMBOL

cond_resched_lock

__sched

cond_resched_softirq

void

BUG_ON

in_softirq

need_resched

system_state

SYSTEM_RUNNING

local_bh_enable

__cond_resched

local_bh_disable

return

return

EXPORT_SYMBOL

cond_resched_softirq

void

__sched

yield

void

set_current_state

TASK_RUNNING

sys_sched_yield

EXPORT_SYMBOL

yield

void

__sched

io_schedule

void

rq

rq

__raw_get_cpu_var

runqueues

delayacct_blkio_start

atomic_inc

rq

nr_iowait

schedule

atomic_dec

rq

nr_iowait

delayacct_blkio_end

EXPORT_SYMBOL

io_schedule

__sched

io_schedule_timeout

timeout

rq

rq

__raw_get_cpu_var

runqueues

ret

delayacct_blkio_start

atomic_inc

rq

nr_iowait

ret

schedule_timeout

timeout

atomic_dec

rq

nr_iowait

delayacct_blkio_end

return

ret

asmlinkage

sys_sched_get_priority_max

policy

ret

EINVAL

policy

case

SCHED_FIFO

case

SCHED_RR

ret

MAX_USER_RT_PRIO

case

SCHED_NORMAL

case

SCHED_BATCH

ret

return

ret

asmlinkage

sys_sched_get_priority_min

policy

ret

EINVAL

policy

case

SCHED_FIFO

case

SCHED_RR

ret

case

SCHED_NORMAL

case

SCHED_BATCH

ret

return

ret

asmlinkage

sys_sched_rr_get_interval

pid_t

pid

timespec

__user

interval

task_struct

p

retval

EINVAL

timespec

t

pid

goto

out_nounlock

retval

ESRCH

read_lock

tasklist_lock

p

find_process_by_pid

pid

p

goto

out_unlock

retval

security_task_getscheduler

p

retval

goto

out_unlock

jiffies_to_timespec

p

policy

SCHED_FIFO

task_timeslice

p

t

read_unlock

tasklist_lock

retval

copy_to_user

interval

t

sizeof

t

EFAULT

out_nounlock

return

retval

out_unlock

read_unlock

tasklist_lock

return

retval

static

stat_nam

static

void

show_task

task_struct

p

free

state

state

p

state

__ffs

p

state

printk

p

comm

state

sizeof

stat_nam

stat_nam

state

BITS_PER_LONG

state

TASK_RUNNING

printk

printk

thread_saved_pc

p

state

TASK_RUNNING

printk

printk

thread_saved_pc

p

CONFIG_DEBUG_STACK_USAGE

n

end_of_stack

p

n

n

free

n

end_of_stack

p

printk

free

p

pid

p

parent

pid

p

mm

printk

printk

state

TASK_RUNNING

show_stack

p

NULL

void

show_state_filter

state_filter

task_struct

g

p

BITS_PER_LONG

printk

printk

printk

printk

read_lock

tasklist_lock

do_each_thread

g

p

touch_nmi_watchdog

state_filter

p

state

state_filter

show_task

p

while_each_thread

g

p

touch_all_softlockup_watchdogs

read_unlock

tasklist_lock

state_filter

debug_show_all_locks

void

__cpuinit

init_idle

task_struct

idle

cpu

rq

rq

cpu_rq

cpu

flags

idle

timestamp

sched_clock

idle

sleep_avg

idle

array

NULL

idle

prio

idle

normal_prio

MAX_PRIO

idle

state

TASK_RUNNING

idle

cpus_allowed

cpumask_of_cpu

cpu

set_task_cpu

idle

cpu

spin_lock_irqsave

rq

lock

flags

rq

curr

rq

idle

idle

CONFIG_SMP

__ARCH_WANT_UNLOCKED_CTXSW

idle

oncpu

spin_unlock_irqrestore

rq

lock

flags

CONFIG_PREEMPT

CONFIG_PREEMPT_BKL

task_thread_info

idle

preempt_count

idle

lock_depth

task_thread_info

idle

preempt_count

cpumask_t

nohz_cpu_mask

CPU_MASK_NONE

CONFIG_SMP

set_cpus_allowed

task_struct

p

cpumask_t

new_mask

migration_req

req

flags

rq

rq

ret

rq

task_rq_lock

p

flags

cpus_intersects

new_mask

cpu_online_map

ret

EINVAL

goto

out

p

cpus_allowed

new_mask

cpu_isset

task_cpu

p

new_mask

goto

out

migrate_task

p

any_online_cpu

new_mask

req

task_rq_unlock

rq

flags

wake_up_process

rq

migration_thread

wait_for_completion

req

done

tlb_migrate_finish

p

mm

return

out

task_rq_unlock

rq

flags

return

ret

EXPORT_SYMBOL_GPL

set_cpus_allowed

static

__migrate_task

task_struct

p

src_cpu

dest_cpu

rq

rq_dest

rq_src

ret

unlikely

cpu_is_offline

dest_cpu

return

ret

rq_src

cpu_rq

src_cpu

rq_dest

cpu_rq

dest_cpu

double_rq_lock

rq_src

rq_dest

task_cpu

p

src_cpu

goto

out

cpu_isset

dest_cpu

p

cpus_allowed

goto

out

set_task_cpu

p

dest_cpu

p

array

p

timestamp

p

timestamp

rq_src

most_recent_timestamp

rq_dest

most_recent_timestamp

deactivate_task

p

rq_src

__activate_task

p

rq_dest

TASK_PREEMPTS_CURR

p

rq_dest

resched_task

rq_dest

curr

ret

out

double_rq_unlock

rq_src

rq_dest

return

ret

static

migration_thread

void

data

cpu

data

rq

rq

rq

cpu_rq

cpu

BUG_ON

rq

migration_thread

current

set_current_state

TASK_INTERRUPTIBLE

kthread_should_stop

migration_req

req

list_head

head

try_to_freeze

spin_lock_irq

rq

lock

cpu_is_offline

cpu

spin_unlock_irq

rq

lock

goto

wait_to_die

rq

active_balance

active_load_balance

rq

cpu

rq

active_balance

head

rq

migration_queue

list_empty

head

spin_unlock_irq

rq

lock

schedule

set_current_state

TASK_INTERRUPTIBLE

req

list_entry

head

next

migration_req

list

list_del_init

head

next

spin_unlock

rq

lock

__migrate_task

req

task

cpu

req

dest_cpu

local_irq_enable

complete

req

done

__set_current_state

TASK_RUNNING

return

wait_to_die

set_current_state

TASK_INTERRUPTIBLE

kthread_should_stop

schedule

set_current_state

TASK_INTERRUPTIBLE

__set_current_state

TASK_RUNNING

return

CONFIG_HOTPLUG_CPU

static

void

move_task_off_dead_cpu

dead_cpu

task_struct

p

flags

cpumask_t

mask

rq

rq

dest_cpu

restart

mask

node_to_cpumask

cpu_to_node

dead_cpu

cpus_and

mask

mask

p

cpus_allowed

dest_cpu

any_online_cpu

mask

dest_cpu

NR_CPUS

dest_cpu

any_online_cpu

p

cpus_allowed

dest_cpu

NR_CPUS

rq

task_rq_lock

p

flags

cpus_setall

p

cpus_allowed

dest_cpu

any_online_cpu

p

cpus_allowed

task_rq_unlock

rq

flags

p

mm

printk_ratelimit

printk

KERN_INFO

p

pid

p

comm

dead_cpu

__migrate_task

p

dead_cpu

dest_cpu

goto

restart

static

void

migrate_nr_uninterruptible

rq

rq_src

rq

rq_dest

cpu_rq

any_online_cpu

CPU_MASK_ALL

flags

local_irq_save

flags

double_rq_lock

rq_src

rq_dest

rq_dest

nr_uninterruptible

rq_src

nr_uninterruptible

rq_src

nr_uninterruptible

double_rq_unlock

rq_src

rq_dest

local_irq_restore

flags

static

void

migrate_live_tasks

src_cpu

task_struct

p

t

write_lock_irq

tasklist_lock

do_each_thread

t

p

p

current

task_cpu

p

src_cpu

move_task_off_dead_cpu

src_cpu

p

while_each_thread

t

p

write_unlock_irq

tasklist_lock

void

sched_idle_next

void

this_cpu

smp_processor_id

rq

rq

cpu_rq

this_cpu

task_struct

p

rq

idle

flags

BUG_ON

cpu_online

this_cpu

spin_lock_irqsave

rq

lock

flags

__setscheduler

p

SCHED_FIFO

MAX_RT_PRIO

__activate_idle_task

p

rq

spin_unlock_irqrestore

rq

lock

flags

void

idle_task_exit

void

mm_struct

mm

current

active_mm

BUG_ON

cpu_online

smp_processor_id

mm

init_mm

switch_mm

mm

init_mm

current

mmdrop

mm

static

void

migrate_dead

dead_cpu

task_struct

p

rq

rq

cpu_rq

dead_cpu

BUG_ON

p

exit_state

EXIT_ZOMBIE

p

exit_state

EXIT_DEAD

BUG_ON

p

state

TASK_DEAD

get_task_struct

p

spin_unlock

rq

lock

move_task_off_dead_cpu

dead_cpu

p

spin_lock

rq

lock

put_task_struct

p

static

void

migrate_dead_tasks

dead_cpu

rq

rq

cpu_rq

dead_cpu

arr

i

arr

arr

arr

i

i

MAX_PRIO

i

list_head

list

rq

arrays

arr

queue

i

list_empty

list

migrate_dead

dead_cpu

list_entry

list

next

task_struct

run_list

static

__cpuinit

migration_call

notifier_block

nfb

action

void

hcpu

task_struct

p

cpu

hcpu

flags

rq

rq

action

case

CPU_LOCK_ACQUIRE

mutex_lock

sched_hotcpu_mutex

case

CPU_UP_PREPARE

case

CPU_UP_PREPARE_FROZEN

p

kthread_create

migration_thread

hcpu

cpu

IS_ERR

p

return

NOTIFY_BAD

p

flags

PF_NOFREEZE

kthread_bind

p

cpu

rq

task_rq_lock

p

flags

__setscheduler

p

SCHED_FIFO

MAX_RT_PRIO

task_rq_unlock

rq

flags

cpu_rq

cpu

migration_thread

p

case

CPU_ONLINE

case

CPU_ONLINE_FROZEN

wake_up_process

cpu_rq

cpu

migration_thread

CONFIG_HOTPLUG_CPU

case

CPU_UP_CANCELED

case

CPU_UP_CANCELED_FROZEN

cpu_rq

cpu

migration_thread

kthread_bind

cpu_rq

cpu

migration_thread

any_online_cpu

cpu_online_map

kthread_stop

cpu_rq

cpu

migration_thread

cpu_rq

cpu

migration_thread

NULL

case

CPU_DEAD

case

CPU_DEAD_FROZEN

migrate_live_tasks

cpu

rq

cpu_rq

cpu

kthread_stop

rq

migration_thread

rq

migration_thread

NULL

rq

task_rq_lock

rq

idle

flags

deactivate_task

rq

idle

rq

rq

idle

static_prio

MAX_PRIO

__setscheduler

rq

idle

SCHED_NORMAL

migrate_dead_tasks

cpu

task_rq_unlock

rq

flags

migrate_nr_uninterruptible

rq

BUG_ON

rq

nr_running

spin_lock_irq

rq

lock

list_empty

rq

migration_queue

migration_req

req

req

list_entry

rq

migration_queue

next

migration_req

list

list_del_init

req

list

complete

req

done

spin_unlock_irq

rq

lock

case

CPU_LOCK_RELEASE

mutex_unlock

sched_hotcpu_mutex

return

NOTIFY_OK

static

notifier_block

__cpuinitdata

migration_notifier

notifier_call

migration_call

priority

__init

migration_init

void

void

cpu

void

smp_processor_id

err

err

migration_call

migration_notifier

CPU_UP_PREPARE

cpu

BUG_ON

err

NOTIFY_BAD

migration_call

migration_notifier

CPU_ONLINE

cpu

register_cpu_notifier

migration_notifier

return

CONFIG_SMP

nr_cpu_ids

__read_mostly

NR_CPUS

EXPORT_SYMBOL

nr_cpu_ids

undef

SCHED_DOMAIN_DEBUG

SCHED_DOMAIN_DEBUG

static

void

sched_domain_debug

sched_domain

sd

cpu

level

sd

printk

KERN_DEBUG

cpu

return

printk

KERN_DEBUG

cpu

i

str

NR_CPUS

sched_group

group

sd

groups

cpumask_t

groupmask

cpumask_scnprintf

str

NR_CPUS

sd

span

cpus_clear

groupmask

printk

KERN_DEBUG

i

i

level

i

printk

printk

level

sd

flags

SD_LOAD_BALANCE

printk

sd

parent

printk

KERN_ERR

printk

str

cpu_isset

cpu

sd

span

printk

KERN_ERR

cpu

cpu_isset

cpu

group

cpumask

printk

KERN_ERR

cpu

printk

KERN_DEBUG

i

i

level

i

printk

printk

group

printk

printk

KERN_ERR

group

__cpu_power

printk

printk

KERN_ERR

cpus_weight

group

cpumask

printk

printk

KERN_ERR

cpus_intersects

groupmask

group

cpumask

printk

printk

KERN_ERR

cpus_or

groupmask

groupmask

group

cpumask

cpumask_scnprintf

str

NR_CPUS

group

cpumask

printk

str

group

group

next

group

sd

groups

printk

cpus_equal

sd

span

groupmask

printk

KERN_ERR

level

sd

sd

parent

sd

cpus_subset

groupmask

sd

span

printk

KERN_ERR

sd

sched_domain_debug

sd

cpu

static

sd_degenerate

sched_domain

sd

cpus_weight

sd

span

return

sd

flags

SD_LOAD_BALANCE

SD_BALANCE_NEWIDLE

SD_BALANCE_FORK

SD_BALANCE_EXEC

SD_SHARE_CPUPOWER

SD_SHARE_PKG_RESOURCES

sd

groups

sd

groups

next

return

sd

flags

SD_WAKE_IDLE

SD_WAKE_AFFINE

SD_WAKE_BALANCE

return

return

static

sd_parent_degenerate

sched_domain

sd

sched_domain

parent

cflags

sd

flags

pflags

parent

flags

sd_degenerate

parent

return

cpus_equal

sd

span

parent

span

return

cflags

SD_WAKE_AFFINE

pflags

SD_WAKE_BALANCE

parent

groups

parent

groups

next

pflags

SD_LOAD_BALANCE

SD_BALANCE_NEWIDLE

SD_BALANCE_FORK

SD_BALANCE_EXEC

SD_SHARE_CPUPOWER

SD_SHARE_PKG_RESOURCES

cflags

pflags

return

return

static

void

cpu_attach_domain

sched_domain

sd

cpu

rq

rq

cpu_rq

cpu

sched_domain

tmp

tmp

sd

tmp

tmp

tmp

parent

sched_domain

parent

tmp

parent

parent

sd_parent_degenerate

tmp

parent

tmp

parent

parent

parent

parent

parent

parent

parent

child

tmp

sd

sd_degenerate

sd

sd

sd

parent

sd

sd

child

NULL

sched_domain_debug

sd

cpu

rcu_assign_pointer

rq

sd

sd

static

cpumask_t

cpu_isolated_map

CPU_MASK_NONE

static

__init

isolated_cpu_setup

str

ints

NR_CPUS

i

str

get_options

str

ARRAY_SIZE

ints

ints

cpus_clear

cpu_isolated_map

i

i

ints

i

ints

i

NR_CPUS

cpu_set

ints

i

cpu_isolated_map

return

__setup

isolated_cpu_setup

static

void

init_sched_build_groups

cpumask_t

span

cpumask_t

cpu_map

group_fn

cpu

cpumask_t

cpu_map

sched_group

sg

sched_group

first

NULL

last

NULL

cpumask_t

covered

CPU_MASK_NONE

i

for_each_cpu_mask

i

span

sched_group

sg

group

group_fn

i

cpu_map

sg

j

cpu_isset

i

covered

sg

cpumask

CPU_MASK_NONE

sg

__cpu_power

for_each_cpu_mask

j

span

group_fn

j

cpu_map

NULL

group

cpu_set

j

covered

cpu_set

j

sg

cpumask

first

first

sg

last

last

next

sg

last

sg

last

next

first

SD_NODES_PER_DOMAIN

SEARCH_SCOPE

MIN_CACHE_SIZE

U

DEFAULT_CACHE_SIZE

U

ITERATIONS

SIZE_THRESH

COST_THRESH

MAX_DOMAIN_DISTANCE

static

migration_cost

MAX_DOMAIN_DISTANCE

MAX_DOMAIN_DISTANCE

CONFIG_DEFAULT_MIGRATION_COST

CONFIG_DEFAULT_MIGRATION_COST

LL

static

__init

migration_cost_setup

str

ints

MAX_DOMAIN_DISTANCE

i

str

get_options

str

ARRAY_SIZE

ints

ints

printk

ints

i

i

ints

i

migration_cost

i

ints

i

printk

i

migration_cost

i

return

__setup

migration_cost_setup

MIGRATION_FACTOR_SCALE

static

migration_factor

MIGRATION_FACTOR_SCALE

static

__init

setup_migration_factor

str

get_option

str

migration_factor

migration_factor

migration_factor

MIGRATION_FACTOR_SCALE

return

__setup

setup_migration_factor

static

domain_distance

cpu1

cpu2

distance

sched_domain

sd

for_each_domain

cpu1

sd

WARN_ON

cpu_isset

cpu1

sd

span

cpu_isset

cpu2

sd

span

return

distance

distance

distance

MAX_DOMAIN_DISTANCE

WARN_ON

distance

MAX_DOMAIN_DISTANCE

return

distance

static

migration_debug

static

__init

setup_migration_debug

str

get_option

str

migration_debug

return

__setup

setup_migration_debug

max_cache_size

static

__init

setup_max_cache_size

str

get_option

str

max_cache_size

return

__setup

setup_max_cache_size

static

void

touch_cache

void

__cache

__size

size

__size

sizeof

chunk1

size

chunk2

size

cache

__cache

i

i

i

size

i

i

case

cache

i

case

cache

size

i

case

cache

chunk1

i

case

cache

chunk1

i

case

cache

chunk2

i

case

cache

chunk2

i

static

measure_one

void

cache

size

source

target

cpumask_t

mask

saved_mask

t0

t1

t2

t3

cost

saved_mask

current

cpus_allowed

sched_cacheflush

mask

cpumask_of_cpu

source

set_cpus_allowed

current

mask

WARN_ON

smp_processor_id

source

t0

sched_clock

touch_cache

cache

size

t1

sched_clock

mask

cpumask_of_cpu

target

set_cpus_allowed

current

mask

WARN_ON

smp_processor_id

target

t2

sched_clock

touch_cache

cache

size

t3

sched_clock

cost

t1

t0

t3

t2

migration_debug

printk

source

target

t1

t0

t1

t0

t3

t2

cost

sched_cacheflush

set_cpus_allowed

current

saved_mask

return

cost

static

measure_cost

cpu1

cpu2

void

cache

size

cost1

cost2

i

cost1

measure_one

cache

size

cpu1

cpu2

i

i

ITERATIONS

i

cost1

measure_one

cache

size

i

cpu1

cpu2

measure_one

cache

size

cpu2

cpu1

i

i

ITERATIONS

i

cost1

measure_one

cache

size

i

cpu2

cpu1

cost2

measure_one

cache

size

cpu1

cpu1

i

i

ITERATIONS

i

cost2

measure_one

cache

size

i

cpu1

cpu1

measure_one

cache

size

cpu2

cpu2

i

i

ITERATIONS

i

cost2

measure_one

cache

size

i

cpu2

cpu2

do_div

cost1

ITERATIONS

do_div

cost2

ITERATIONS

return

cost1

cost2

static

measure_migration_cost

cpu1

cpu2

max_cost

fluct

avg_fluct

max_size

size

size_found

cost

prev_cost

void

cache

max_cache_size

max_size

max

max_cache_size

SEARCH_SCOPE

MIN_CACHE_SIZE

size

max

max_cache_size

SEARCH_SCOPE

MIN_CACHE_SIZE

max_size

DEFAULT_CACHE_SIZE

SEARCH_SCOPE

size

MIN_CACHE_SIZE

cpu_online

cpu1

cpu_online

cpu2

printk

cpu1

cpu2

return

cache

vmalloc

max_size

cache

printk

max_size

return

size

max_size

prev_cost

cost

cost

measure_cost

cpu1

cpu2

cache

size

cost

max_cost

cost

max_cost

cost

size_found

size

fluct

abs

cost

prev_cost

avg_fluct

avg_fluct

fluct

migration_debug

printk

cpu1

cpu2

size

cost

cost

max_cost

max_cost

domain_distance

cpu1

cpu2

cost

avg_fluct

size_found

size

size_found

SIZE_THRESH

cost

avg_fluct

max_cost

cost

avg_fluct

COST_THRESH

migration_debug

printk

size

size

migration_debug

printk

cpu1

cpu2

size_found

max_cost

vfree

cache

return

max_cost

migration_factor

MIGRATION_FACTOR_SCALE

static

void

calibrate_migration_costs

cpumask_t

cpu_map

cpu1

cpu2

cpu

orig_cpu

raw_smp_processor_id

j0

j1

distance

max_distance

sched_domain

sd

j0

jiffies

for_each_cpu_mask

cpu1

cpu_map

for_each_cpu_mask

cpu2

cpu_map

cpu1

cpu2

distance

domain_distance

cpu1

cpu2

max_distance

max

max_distance

distance

migration_cost

distance

LL

migration_cost

distance

measure_migration_cost

cpu1

cpu2

for_each_cpu_mask

cpu

cpu_map

distance

for_each_domain

cpu

sd

sd

cache_hot_time

migration_cost

distance

distance

migration_debug

printk

max_cache_size

CONFIG_X86

cpu_khz

system_state

SYSTEM_BOOTING

num_online_cpus

printk

distance

distance

max_distance

distance

distance

printk

printk

migration_cost

distance

printk

j1

jiffies

migration_debug

printk

j1

j0

HZ

raw_smp_processor_id

orig_cpu

cpumask_t

mask

cpumask_of_cpu

orig_cpu

saved_mask

current

cpus_allowed

set_cpus_allowed

current

mask

set_cpus_allowed

current

saved_mask

CONFIG_NUMA

static

find_next_best_node

node

used_nodes

i

n

val

min_val

best_node

min_val

INT_MAX

i

i

MAX_NUMNODES

i

n

node

i

MAX_NUMNODES

nr_cpus_node

n

test_bit

n

used_nodes

val

node_distance

node

n

val

min_val

min_val

val

best_node

n

set_bit

best_node

used_nodes

return

best_node

static

cpumask_t

sched_domain_node_span

node

DECLARE_BITMAP

used_nodes

MAX_NUMNODES

cpumask_t

span

nodemask

i

cpus_clear

span

bitmap_zero

used_nodes

MAX_NUMNODES

nodemask

node_to_cpumask

node

cpus_or

span

span

nodemask

set_bit

node

used_nodes

i

i

SD_NODES_PER_DOMAIN

i

next_node

find_next_best_node

node

used_nodes

nodemask

node_to_cpumask

next_node

cpus_or

span

span

nodemask

return

span

sched_smt_power_savings

sched_mc_power_savings

CONFIG_SCHED_SMT

static

DEFINE_PER_CPU

sched_domain

cpu_domains

static

DEFINE_PER_CPU

sched_group

sched_group_cpus

static

cpu_to_cpu_group

cpu

cpumask_t

cpu_map

sched_group

sg

sg

sg

per_cpu

sched_group_cpus

cpu

return

cpu

CONFIG_SCHED_MC

static

DEFINE_PER_CPU

sched_domain

core_domains

static

DEFINE_PER_CPU

sched_group

sched_group_core

CONFIG_SCHED_MC

CONFIG_SCHED_SMT

static

cpu_to_core_group

cpu

cpumask_t

cpu_map

sched_group

sg

group

cpumask_t

mask

cpu_sibling_map

cpu

cpus_and

mask

mask

cpu_map

group

first_cpu

mask

sg

sg

per_cpu

sched_group_core

group

return

group

CONFIG_SCHED_MC

static

cpu_to_core_group

cpu

cpumask_t

cpu_map

sched_group

sg

sg

sg

per_cpu

sched_group_core

cpu

return

cpu

static

DEFINE_PER_CPU

sched_domain

phys_domains

static

DEFINE_PER_CPU

sched_group

sched_group_phys

static

cpu_to_phys_group

cpu

cpumask_t

cpu_map

sched_group

sg

group

CONFIG_SCHED_MC

cpumask_t

mask

cpu_coregroup_map

cpu

cpus_and

mask

mask

cpu_map

group

first_cpu

mask

CONFIG_SCHED_SMT

cpumask_t

mask

cpu_sibling_map

cpu

cpus_and

mask

mask

cpu_map

group

first_cpu

mask

group

cpu

sg

sg

per_cpu

sched_group_phys

group

return

group

CONFIG_NUMA

static

DEFINE_PER_CPU

sched_domain

node_domains

static

sched_group

sched_group_nodes_bycpu

NR_CPUS

static

DEFINE_PER_CPU

sched_domain

allnodes_domains

static

DEFINE_PER_CPU

sched_group

sched_group_allnodes

static

cpu_to_allnodes_group

cpu

cpumask_t

cpu_map

sched_group

sg

cpumask_t

nodemask

node_to_cpumask

cpu_to_node

cpu

group

cpus_and

nodemask

nodemask

cpu_map

group

first_cpu

nodemask

sg

sg

per_cpu

sched_group_allnodes

group

return

group

static

void

init_numa_sched_groups_power

sched_group

group_head

sched_group

sg

group_head

j

sg

return

next_sg

for_each_cpu_mask

j

sg

cpumask

sched_domain

sd

sd

per_cpu

phys_domains

j

j

first_cpu

sd

groups

cpumask

sg_inc_cpu_power

sg

sd

groups

__cpu_power

sg

sg

next

sg

group_head

goto

next_sg

CONFIG_NUMA

static

void

free_sched_groups

cpumask_t

cpu_map

cpu

i

for_each_cpu_mask

cpu

cpu_map

sched_group

sched_group_nodes

sched_group_nodes_bycpu

cpu

sched_group_nodes

i

i

MAX_NUMNODES

i

cpumask_t

nodemask

node_to_cpumask

i

sched_group

oldsg

sg

sched_group_nodes

i

cpus_and

nodemask

nodemask

cpu_map

cpus_empty

nodemask

sg

NULL

sg

sg

next

next_sg

oldsg

sg

sg

sg

next

kfree

oldsg

oldsg

sched_group_nodes

i

goto

next_sg

kfree

sched_group_nodes

sched_group_nodes_bycpu

cpu

NULL

static

void

free_sched_groups

cpumask_t

cpu_map

static

void

init_sched_groups_power

cpu

sched_domain

sd

sched_domain

child

sched_group

group

WARN_ON

sd

sd

groups

cpu

first_cpu

sd

groups

cpumask

return

child

sd

child

sd

groups

__cpu_power

child

sd

flags

SD_POWERSAVINGS_BALANCE

child

flags

SD_SHARE_CPUPOWER

SD_SHARE_PKG_RESOURCES

sg_inc_cpu_power

sd

groups

SCHED_LOAD_SCALE

return

group

child

groups

sg_inc_cpu_power

sd

groups

group

__cpu_power

group

group

next

group

child

groups

static

build_sched_domains

cpumask_t

cpu_map

i

sched_domain

sd

CONFIG_NUMA

sched_group

sched_group_nodes

NULL

sd_allnodes

sched_group_nodes

kzalloc

sizeof

sched_group

MAX_NUMNODES

GFP_KERNEL

sched_group_nodes

printk

KERN_WARNING

return

ENOMEM

sched_group_nodes_bycpu

first_cpu

cpu_map

sched_group_nodes

for_each_cpu_mask

i

cpu_map

sched_domain

sd

NULL

p

cpumask_t

nodemask

node_to_cpumask

cpu_to_node

i

cpus_and

nodemask

nodemask

cpu_map

CONFIG_NUMA

cpus_weight

cpu_map

SD_NODES_PER_DOMAIN

cpus_weight

nodemask

sd

per_cpu

allnodes_domains

i

sd

SD_ALLNODES_INIT

sd

span

cpu_map

cpu_to_allnodes_group

i

cpu_map

sd

groups

p

sd

sd_allnodes

p

NULL

sd

per_cpu

node_domains

i

sd

SD_NODE_INIT

sd

span

sched_domain_node_span

cpu_to_node

i

sd

parent

p

p

p

child

sd

cpus_and

sd

span

sd

span

cpu_map

p

sd

sd

per_cpu

phys_domains

i

sd

SD_CPU_INIT

sd

span

nodemask

sd

parent

p

p

p

child

sd

cpu_to_phys_group

i

cpu_map

sd

groups

CONFIG_SCHED_MC

p

sd

sd

per_cpu

core_domains

i

sd

SD_MC_INIT

sd

span

cpu_coregroup_map

i

cpus_and

sd

span

sd

span

cpu_map

sd

parent

p

p

child

sd

cpu_to_core_group

i

cpu_map

sd

groups

CONFIG_SCHED_SMT

p

sd

sd

per_cpu

cpu_domains

i

sd

SD_SIBLING_INIT

sd

span

cpu_sibling_map

i

cpus_and

sd

span

sd

span

cpu_map

sd

parent

p

p

child

sd

cpu_to_cpu_group

i

cpu_map

sd

groups

CONFIG_SCHED_SMT

for_each_cpu_mask

i

cpu_map

cpumask_t

this_sibling_map

cpu_sibling_map

i

cpus_and

this_sibling_map

this_sibling_map

cpu_map

i

first_cpu

this_sibling_map

init_sched_build_groups

this_sibling_map

cpu_map

cpu_to_cpu_group

CONFIG_SCHED_MC

for_each_cpu_mask

i

cpu_map

cpumask_t

this_core_map

cpu_coregroup_map

i

cpus_and

this_core_map

this_core_map

cpu_map

i

first_cpu

this_core_map

init_sched_build_groups

this_core_map

cpu_map

cpu_to_core_group

i

i

MAX_NUMNODES

i

cpumask_t

nodemask

node_to_cpumask

i

cpus_and

nodemask

nodemask

cpu_map

cpus_empty

nodemask

init_sched_build_groups

nodemask

cpu_map

cpu_to_phys_group

CONFIG_NUMA

sd_allnodes

init_sched_build_groups

cpu_map

cpu_map

cpu_to_allnodes_group

i

i

MAX_NUMNODES

i

sched_group

sg

prev

cpumask_t

nodemask

node_to_cpumask

i

cpumask_t

domainspan

cpumask_t

covered

CPU_MASK_NONE

j

cpus_and

nodemask

nodemask

cpu_map

cpus_empty

nodemask

sched_group_nodes

i

NULL

domainspan

sched_domain_node_span

i

cpus_and

domainspan

domainspan

cpu_map

sg

kmalloc_node

sizeof

sched_group

GFP_KERNEL

i

sg

printk

KERN_WARNING

i

goto

error

sched_group_nodes

i

sg

for_each_cpu_mask

j

nodemask

sched_domain

sd

sd

per_cpu

node_domains

j

sd

groups

sg

sg

__cpu_power

sg

cpumask

nodemask

sg

next

sg

cpus_or

covered

covered

nodemask

prev

sg

j

j

MAX_NUMNODES

j

cpumask_t

tmp

notcovered

n

i

j

MAX_NUMNODES

cpus_complement

notcovered

covered

cpus_and

tmp

notcovered

cpu_map

cpus_and

tmp

tmp

domainspan

cpus_empty

tmp

nodemask

node_to_cpumask

n

cpus_and

tmp

tmp

nodemask

cpus_empty

tmp

sg

kmalloc_node

sizeof

sched_group

GFP_KERNEL

i

sg

printk

KERN_WARNING

j

goto

error

sg

__cpu_power

sg

cpumask

tmp

sg

next

prev

next

cpus_or

covered

covered

tmp

prev

next

sg

prev

sg

CONFIG_SCHED_SMT

for_each_cpu_mask

i

cpu_map

sd

per_cpu

cpu_domains

i

init_sched_groups_power

i

sd

CONFIG_SCHED_MC

for_each_cpu_mask

i

cpu_map

sd

per_cpu

core_domains

i

init_sched_groups_power

i

sd

for_each_cpu_mask

i

cpu_map

sd

per_cpu

phys_domains

i

init_sched_groups_power

i

sd

CONFIG_NUMA

i

i

MAX_NUMNODES

i

init_numa_sched_groups_power

sched_group_nodes

i

sd_allnodes

sched_group

sg

cpu_to_allnodes_group

first_cpu

cpu_map

cpu_map

sg

init_numa_sched_groups_power

sg

for_each_cpu_mask

i

cpu_map

sched_domain

sd

CONFIG_SCHED_SMT

sd

per_cpu

cpu_domains

i

CONFIG_SCHED_MC

sd

per_cpu

core_domains

i

sd

per_cpu

phys_domains

i

cpu_attach_domain

sd

i

calibrate_migration_costs

cpu_map

return

CONFIG_NUMA

error

free_sched_groups

cpu_map

return

ENOMEM

static

arch_init_sched_domains

cpumask_t

cpu_map

cpumask_t

cpu_default_map

err

cpus_andnot

cpu_default_map

cpu_map

cpu_isolated_map

err

build_sched_domains

cpu_default_map

return

err

static

void

arch_destroy_sched_domains

cpumask_t

cpu_map

free_sched_groups

cpu_map

static

void

detach_destroy_domains

cpumask_t

cpu_map

i

for_each_cpu_mask

i

cpu_map

cpu_attach_domain

NULL

i

synchronize_sched

arch_destroy_sched_domains

cpu_map

partition_sched_domains

cpumask_t

partition1

cpumask_t

partition2

cpumask_t

change_map

err

cpus_and

partition1

partition1

cpu_online_map

cpus_and

partition2

partition2

cpu_online_map

cpus_or

change_map

partition1

partition2

detach_destroy_domains

change_map

cpus_empty

partition1

err

build_sched_domains

partition1

err

cpus_empty

partition2

err

build_sched_domains

partition2

return

err

CONFIG_SCHED_MC

CONFIG_SCHED_SMT

arch_reinit_sched_domains

void

err

mutex_lock

sched_hotcpu_mutex

detach_destroy_domains

cpu_online_map

err

arch_init_sched_domains

cpu_online_map

mutex_unlock

sched_hotcpu_mutex

return

err

static

ssize_t

sched_power_savings_store

buf

size_t

count

smt

ret

buf

buf

return

EINVAL

smt

sched_smt_power_savings

buf

sched_mc_power_savings

buf

ret

arch_reinit_sched_domains

return

ret

ret

count

sched_create_sysfs_power_savings_entries

sysdev_class

cls

err

CONFIG_SCHED_SMT

smt_capable

err

sysfs_create_file

cls

kset

kobj

attr_sched_smt_power_savings

attr

CONFIG_SCHED_MC

err

mc_capable

err

sysfs_create_file

cls

kset

kobj

attr_sched_mc_power_savings

attr

return

err

CONFIG_SCHED_MC

static

ssize_t

sched_mc_power_savings_show

sys_device

dev

page

return

sprintf

page

sched_mc_power_savings

static

ssize_t

sched_mc_power_savings_store

sys_device

dev

buf

size_t

count

return

sched_power_savings_store

buf

count

SYSDEV_ATTR

sched_mc_power_savings

sched_mc_power_savings_show

sched_mc_power_savings_store

CONFIG_SCHED_SMT

static

ssize_t

sched_smt_power_savings_show

sys_device

dev

page

return

sprintf

page

sched_smt_power_savings

static

ssize_t

sched_smt_power_savings_store

sys_device

dev

buf

size_t

count

return

sched_power_savings_store

buf

count

SYSDEV_ATTR

sched_smt_power_savings

sched_smt_power_savings_show

sched_smt_power_savings_store

static

update_sched_domains

notifier_block

nfb

action

void

hcpu

action

case

CPU_UP_PREPARE

case

CPU_UP_PREPARE_FROZEN

case

CPU_DOWN_PREPARE

case

CPU_DOWN_PREPARE_FROZEN

detach_destroy_domains

cpu_online_map

return

NOTIFY_OK

case

CPU_UP_CANCELED

case

CPU_UP_CANCELED_FROZEN

case

CPU_DOWN_FAILED

case

CPU_DOWN_FAILED_FROZEN

case

CPU_ONLINE

case

CPU_ONLINE_FROZEN

case

CPU_DEAD

case

CPU_DEAD_FROZEN

default

return

NOTIFY_DONE

arch_init_sched_domains

cpu_online_map

return

NOTIFY_OK

void

__init

sched_init_smp

void

cpumask_t

non_isolated_cpus

mutex_lock

sched_hotcpu_mutex

arch_init_sched_domains

cpu_online_map

cpus_andnot

non_isolated_cpus

cpu_possible_map

cpu_isolated_map

cpus_empty

non_isolated_cpus

cpu_set

smp_processor_id

non_isolated_cpus

mutex_unlock

sched_hotcpu_mutex

hotcpu_notifier

update_sched_domains

set_cpus_allowed

current

non_isolated_cpus

BUG

void

__init

sched_init_smp

void

in_sched_functions

addr

extern

__sched_text_start

__sched_text_end

return

in_lock_functions

addr

addr

__sched_text_start

addr

__sched_text_end

void

__init

sched_init

void

i

j

k

highest_cpu

for_each_possible_cpu

i

prio_array

array

rq

rq

rq

cpu_rq

i

spin_lock_init

rq

lock

lockdep_set_class

rq

lock

rq

rq_lock_key

rq

nr_running

rq

active

rq

arrays

rq

expired

rq

arrays

rq

best_expired_prio

MAX_PRIO

CONFIG_SMP

rq

sd

NULL

j

j

j

rq

cpu_load

j

rq

active_balance

rq

push_cpu

rq

cpu

i

rq

migration_thread

NULL

INIT_LIST_HEAD

rq

migration_queue

atomic_set

rq

nr_iowait

j

j

j

array

rq

arrays

j

k

k

MAX_PRIO

k

INIT_LIST_HEAD

array

queue

k

__clear_bit

k

array

bitmap

__set_bit

MAX_PRIO

array

bitmap

highest_cpu

i

set_load_weight

init_task

CONFIG_SMP

nr_cpu_ids

highest_cpu

open_softirq

SCHED_SOFTIRQ

run_rebalance_domains

NULL

CONFIG_RT_MUTEXES

plist_head_init

init_task

pi_waiters

init_task

pi_lock

atomic_inc

init_mm

mm_count

enter_lazy_tlb

init_mm

current

init_idle

current

smp_processor_id

CONFIG_DEBUG_SPINLOCK_SLEEP

void

__might_sleep

file

line

in_atomic

static

prev_jiffy

in_atomic

irqs_disabled

system_state

SYSTEM_RUNNING

oops_in_progress

time_before

jiffies

prev_jiffy

HZ

prev_jiffy

return

prev_jiffy

jiffies

printk

KERN_ERR

file

line

printk

in_atomic

irqs_disabled

debug_show_held_locks

current

irqs_disabled

print_irqtrace_events

current

dump_stack

EXPORT_SYMBOL

__might_sleep

CONFIG_MAGIC_SYSRQ

void

normalize_rt_tasks

void

prio_array

array

task_struct

g

p

flags

rq

rq

read_lock_irq

tasklist_lock

do_each_thread

g

p

rt_task

p

spin_lock_irqsave

p

pi_lock

flags

rq

__task_rq_lock

p

array

p

array

array

deactivate_task

p

task_rq

p

__setscheduler

p

SCHED_NORMAL

array

__activate_task

p

task_rq

p

resched_task

rq

curr

__task_rq_unlock

rq

spin_unlock_irqrestore

p

pi_lock

flags

while_each_thread

g

p

read_unlock_irq

tasklist_lock

CONFIG_IA64

CONFIG_KDB

task_struct

curr_task

cpu

return

cpu_curr

cpu

void

set_curr_task

cpu

task_struct

p

cpu_curr

cpu

p

CONFIG_KDB

static

void

kdb_prio

name

prio_array

array

kdb_printf_t

xxx_printf

pri

xxx_printf

name

array

nr_active

array

bitmap

array

bitmap

array

bitmap

pri

sched_find_first_bit

array

bitmap

pri

MAX_PRIO

xxx_printf

pri

MAX_PRIO

xxx_printf

pri

pri

pri

find_next_bit

array

bitmap

MAX_PRIO

pri

xxx_printf

pri

pri

MAX_PRIO

pri

printed_hdr

list_head

head

curr

head

array

queue

pri

curr

head

next

curr

head

task_struct

task

printed_hdr

xxx_printf

pri

printed_hdr

task

list_entry

curr

task_struct

run_list

xxx_printf

task

task

pid

task

comm

task

time_slice

curr

curr

next

void

kdb_runqueue

cpu

kdb_printf_t

xxx_printf

rq

rq

rq

cpu_rq

cpu

xxx_printf

cpu

spin_is_locked

rq

lock

rq

curr

rq

curr

pid

rq

curr

comm

rq

curr

rq

idle

xxx_printf

xxx_printf

CONFIG_SMP

xxx_printf

rq

cpu_load

rq

cpu_load

rq

cpu_load

xxx_printf

rq

nr_running

rq

nr_switches

kdb_prio

rq

active

xxx_printf

kdb_prio

rq

expired

xxx_printf

EXPORT_SYMBOL

kdb_runqueue

static

mode1_syscalls

__NR_seccomp_read

__NR_seccomp_write

__NR_seccomp_exit

__NR_seccomp_sigreturn

TIF_32BIT

static

mode1_syscalls_32

__NR_seccomp_read_32

__NR_seccomp_write_32

__NR_seccomp_exit_32

__NR_seccomp_sigreturn_32

void

__secure_computing

this_syscall

mode

current

seccomp

mode

syscall

mode

case

syscall

mode1_syscalls

TIF_32BIT

test_thread_flag

TIF_32BIT

syscall

mode1_syscalls_32

syscall

this_syscall

return

syscall

default

BUG

SECCOMP_DEBUG

dump_stack

do_exit

SIGKILL

static

kmem_cache

sigqueue_cachep

static

sig_ignored

task_struct

t

sig

void

__user

handler

t

ptrace

PT_PTRACED

return

sigismember

t

blocked

sig

return

handler

t

sighand

action

sig

sa

sa_handler

return

handler

SIG_IGN

handler

SIG_DFL

sig_kernel_ignore

sig

static

inline

has_pending_signals

sigset_t

signal

sigset_t

blocked

ready

i

_NSIG_WORDS

default

i

_NSIG_WORDS

ready

i

ready

signal

sig

i

blocked

sig

i

case

ready

signal

sig

blocked

sig

ready

signal

sig

blocked

sig

ready

signal

sig

blocked

sig

ready

signal

sig

blocked

sig

case

ready

signal

sig

blocked

sig

ready

signal

sig

blocked

sig

case

ready

signal

sig

blocked

sig

return

ready

PENDING

p

b

has_pending_signals

p

signal

b

static

recalc_sigpending_tsk

task_struct

t

t

signal

group_stop_count

freezing

t

PENDING

t

pending

t

blocked

PENDING

t

signal

shared_pending

t

blocked

set_tsk_thread_flag

t

TIF_SIGPENDING

return

return

void

recalc_sigpending_and_wake

task_struct

t

recalc_sigpending_tsk

t

signal_wake_up

t

void

recalc_sigpending

void

recalc_sigpending_tsk

current

clear_thread_flag

TIF_SIGPENDING

next_signal

sigpending

pending

sigset_t

mask

i

s

m

x

sig

s

pending

signal

sig

m

mask

sig

_NSIG_WORDS

default

i

i

_NSIG_WORDS

i

s

m

x

s

m

sig

ffz

x

i

_NSIG_BPW

case

x

s

m

sig

x

s

m

sig

_NSIG_BPW

sig

ffz

x

case

x

s

m

sig

ffz

x

return

sig

static

sigqueue

__sigqueue_alloc

task_struct

t

gfp_t

flags

override_rlimit

sigqueue

q

NULL

user_struct

user

user

t

user

barrier

atomic_inc

user

sigpending

override_rlimit

atomic_read

user

sigpending

t

signal

rlim

RLIMIT_SIGPENDING

rlim_cur

q

kmem_cache_alloc

sigqueue_cachep

flags

unlikely

q

NULL

atomic_dec

user

sigpending

INIT_LIST_HEAD

q

list

q

flags

q

user

get_uid

user

return

q

static

void

__sigqueue_free

sigqueue

q

q

flags

SIGQUEUE_PREALLOC

return

atomic_dec

q

user

sigpending

free_uid

q

user

kmem_cache_free

sigqueue_cachep

q

void

flush_sigqueue

sigpending

queue

sigqueue

q

sigemptyset

queue

signal

list_empty

queue

list

q

list_entry

queue

list

next

sigqueue

list

list_del_init

q

list

__sigqueue_free

q

void

flush_signals

task_struct

t

flags

spin_lock_irqsave

t

sighand

siglock

flags

clear_tsk_thread_flag

t

TIF_SIGPENDING

flush_sigqueue

t

pending

flush_sigqueue

t

signal

shared_pending

spin_unlock_irqrestore

t

sighand

siglock

flags

void

ignore_signals

task_struct

t

i

i

i

_NSIG

i

t

sighand

action

i

sa

sa_handler

SIG_IGN

flush_signals

t

void

flush_signal_handlers

task_struct

t

force_default

i

k_sigaction

ka

t

sighand

action

i

_NSIG

i

i

force_default

ka

sa

sa_handler

SIG_IGN

ka

sa

sa_handler

SIG_DFL

ka

sa

sa_flags

sigemptyset

ka

sa

sa_mask

ka

void

block_all_signals

notifier

void

priv

void

priv

sigset_t

mask

flags

spin_lock_irqsave

current

sighand

siglock

flags

current

notifier_mask

mask

current

notifier_data

priv

current

notifier

notifier

spin_unlock_irqrestore

current

sighand

siglock

flags

void

unblock_all_signals

void

flags

spin_lock_irqsave

current

sighand

siglock

flags

current

notifier

NULL

current

notifier_data

NULL

recalc_sigpending

spin_unlock_irqrestore

current

sighand

siglock

flags

static

collect_signal

sig

sigpending

list

siginfo_t

info

sigqueue

q

first

NULL

still_pending

unlikely

sigismember

list

signal

sig

return

list_for_each_entry

q

list

list

list

q

info

si_signo

sig

first

still_pending

first

q

first

list_del_init

first

list

copy_siginfo

info

first

info

__sigqueue_free

first

still_pending

sigdelset

list

signal

sig

sigdelset

list

signal

sig

info

si_signo

sig

info

si_errno

info

si_code

info

si_pid

info

si_uid

return

static

__dequeue_signal

sigpending

pending

sigset_t

mask

siginfo_t

info

sig

next_signal

pending

mask

sig

current

notifier

sigismember

current

notifier_mask

sig

current

notifier

current

notifier_data

clear_thread_flag

TIF_SIGPENDING

return

collect_signal

sig

pending

info

sig

return

sig

dequeue_signal

task_struct

tsk

sigset_t

mask

siginfo_t

info

signr

likely

tsk

current

signr

__dequeue_signal

tsk

pending

mask

info

signr

signr

__dequeue_signal

tsk

signal

shared_pending

mask

info

unlikely

signr

SIGALRM

hrtimer

tmr

tsk

signal

real_timer

hrtimer_is_queued

tmr

tsk

signal

it_real_incr

tv64

hrtimer_forward

tmr

tmr

base

get_time

tsk

signal

it_real_incr

hrtimer_restart

tmr

likely

tsk

current

recalc_sigpending

signr

unlikely

sig_kernel_stop

signr

tsk

signal

flags

SIGNAL_GROUP_EXIT

tsk

signal

flags

SIGNAL_STOP_DEQUEUED

signr

likely

tsk

current

info

si_code

__SI_MASK

__SI_TIMER

info

si_sys_private

spin_unlock

tsk

sighand

siglock

do_schedule_next_timer

info

spin_lock

tsk

sighand

siglock

return

signr

void

signal_wake_up

task_struct

t

resume

mask

set_tsk_thread_flag

t

TIF_SIGPENDING

mask

TASK_INTERRUPTIBLE

resume

mask

TASK_STOPPED

TASK_TRACED

wake_up_state

t

mask

kick_process

t

static

rm_from_queue_full

sigset_t

mask

sigpending

s

sigqueue

q

n

sigset_t

m

sigandsets

m

mask

s

signal

sigisemptyset

m

return

signandsets

s

signal

s

signal

mask

list_for_each_entry_safe

q

n

s

list

list

sigismember

mask

q

info

si_signo

list_del_init

q

list

__sigqueue_free

q

return

static

rm_from_queue

mask

sigpending

s

sigqueue

q

n

sigtestsetmask

s

signal

mask

return

sigdelsetmask

s

signal

mask

list_for_each_entry_safe

q

n

s

list

list

q

info

si_signo

SIGRTMIN

mask

sigmask

q

info

si_signo

list_del_init

q

list

__sigqueue_free

q

return

static

check_kill_permission

sig

siginfo

info

task_struct

t

error

EINVAL

valid_signal

sig

return

error

error

audit_signal_info

sig

t

error

return

error

error

EPERM

info

SEND_SIG_NOINFO

is_si_special

info

SI_FROMUSER

info

sig

SIGCONT

process_session

current

process_session

t

current

euid

t

suid

current

euid

t

uid

current

uid

t

suid

current

uid

t

uid

capable

CAP_KILL

return

error

return

security_task_kill

t

info

sig

static

void

do_notify_parent_cldstop

task_struct

tsk

why

static

void

handle_stop_signal

sig

task_struct

p

task_struct

t

p

signal

flags

SIGNAL_GROUP_EXIT

return

sig_kernel_stop

sig

rm_from_queue

sigmask

SIGCONT

p

signal

shared_pending

t

p

rm_from_queue

sigmask

SIGCONT

t

pending

t

next_thread

t

t

p

sig

SIGCONT

unlikely

p

signal

group_stop_count

p

signal

group_stop_count

p

signal

flags

SIGNAL_STOP_CONTINUED

spin_unlock

p

sighand

siglock

do_notify_parent_cldstop

p

CLD_STOPPED

spin_lock

p

sighand

siglock

rm_from_queue

SIG_KERNEL_STOP_MASK

p

signal

shared_pending

t

p

state

rm_from_queue

SIG_KERNEL_STOP_MASK

t

pending

state

TASK_STOPPED

sig_user_defined

t

SIGCONT

sigismember

t

blocked

SIGCONT

set_tsk_thread_flag

t

TIF_SIGPENDING

state

TASK_INTERRUPTIBLE

wake_up_state

t

state

t

next_thread

t

t

p

p

signal

flags

SIGNAL_STOP_STOPPED

p

signal

flags

SIGNAL_STOP_CONTINUED

p

signal

group_exit_code

spin_unlock

p

sighand

siglock

do_notify_parent_cldstop

p

CLD_CONTINUED

spin_lock

p

sighand

siglock

p

signal

flags

sig

SIGKILL

p

signal

flags

static

send_signal

sig

siginfo

info

task_struct

t

sigpending

signals

sigqueue

q

NULL

ret

signalfd_notify

t

sig

info

SEND_SIG_FORCED

goto

out_set

q

__sigqueue_alloc

t

GFP_ATOMIC

sig

SIGRTMIN

is_si_special

info

info

si_code

q

list_add_tail

q

list

signals

list

info

case

SEND_SIG_NOINFO

q

info

si_signo

sig

q

info

si_errno

q

info

si_code

SI_USER

q

info

si_pid

current

pid

q

info

si_uid

current

uid

case

SEND_SIG_PRIV

q

info

si_signo

sig

q

info

si_errno

q

info

si_code

SI_KERNEL

q

info

si_pid

q

info

si_uid

default

copy_siginfo

q

info

info

is_si_special

info

sig

SIGRTMIN

info

si_code

SI_USER

return

EAGAIN

out_set

sigaddset

signals

signal

sig

return

ret

LEGACY_QUEUE

sigptr

sig

sig

SIGRTMIN

sigismember

sigptr

signal

sig

static

specific_send_sig_info

sig

siginfo

info

task_struct

t

ret

BUG_ON

irqs_disabled

assert_spin_locked

t

sighand

siglock

sig_ignored

t

sig

goto

out

LEGACY_QUEUE

t

pending

sig

goto

out

ret

send_signal

sig

info

t

t

pending

ret

sigismember

t

blocked

sig

signal_wake_up

t

sig

SIGKILL

out

return

ret

force_sig_info

sig

siginfo

info

task_struct

t

flags

ret

blocked

ignored

k_sigaction

action

spin_lock_irqsave

t

sighand

siglock

flags

action

t

sighand

action

sig

ignored

action

sa

sa_handler

SIG_IGN

blocked

sigismember

t

blocked

sig

blocked

ignored

action

sa

sa_handler

SIG_DFL

blocked

sigdelset

t

blocked

sig

recalc_sigpending_and_wake

t

ret

specific_send_sig_info

sig

info

t

spin_unlock_irqrestore

t

sighand

siglock

flags

return

ret

void

force_sig_specific

sig

task_struct

t

force_sig_info

sig

SEND_SIG_FORCED

t

static

inline

wants_signal

sig

task_struct

p

sigismember

p

blocked

sig

return

p

flags

PF_EXITING

return

sig

SIGKILL

return

p

state

TASK_STOPPED

TASK_TRACED

return

return

task_curr

p

signal_pending

p

static

void

__group_complete_signal

sig

task_struct

p

task_struct

t

wants_signal

sig

p

t

p

thread_group_empty

p

return

t

p

signal

curr_target

t

NULL

t

p

signal

curr_target

p

wants_signal

sig

t

t

next_thread

t

t

p

signal

curr_target

return

p

signal

curr_target

t

sig_fatal

p

sig

p

signal

flags

SIGNAL_GROUP_EXIT

sigismember

t

real_blocked

sig

sig

SIGKILL

t

ptrace

PT_PTRACED

sig_kernel_coredump

sig

p

signal

flags

SIGNAL_GROUP_EXIT

p

signal

group_exit_code

sig

p

signal

group_stop_count

t

p

sigaddset

t

pending

signal

SIGKILL

signal_wake_up

t

t

next_thread

t

t

p

return

rm_from_queue

SIG_KERNEL_STOP_MASK

t

pending

rm_from_queue

SIG_KERNEL_STOP_MASK

p

signal

shared_pending

p

signal

group_stop_count

p

signal

group_exit_task

t

t

p

p

signal

group_stop_count

signal_wake_up

t

t

next_thread

t

t

p

wake_up_process

p

signal

group_exit_task

return

signal_wake_up

t

sig

SIGKILL

return

__group_send_sig_info

sig

siginfo

info

task_struct

p

ret

assert_spin_locked

p

sighand

siglock

handle_stop_signal

sig

p

sig_ignored

p

sig

return

ret

LEGACY_QUEUE

p

signal

shared_pending

sig

return

ret

ret

send_signal

sig

info

p

p

signal

shared_pending

unlikely

ret

return

ret

__group_complete_signal

sig

p

return

void

zap_other_threads

task_struct

p

task_struct

t

p

signal

flags

SIGNAL_GROUP_EXIT

p

signal

group_stop_count

thread_group_empty

p

return

t

next_thread

p

t

p

t

next_thread

t

t

exit_state

sigaddset

t

pending

signal

SIGKILL

signal_wake_up

t

sighand_struct

lock_task_sighand

task_struct

tsk

flags

sighand_struct

sighand

sighand

rcu_dereference

tsk

sighand

unlikely

sighand

NULL

spin_lock_irqsave

sighand

siglock

flags

likely

sighand

tsk

sighand

spin_unlock_irqrestore

sighand

siglock

flags

return

sighand

group_send_sig_info

sig

siginfo

info

task_struct

p

flags

ret

ret

check_kill_permission

sig

info

p

ret

sig

ret

ESRCH

lock_task_sighand

p

flags

ret

__group_send_sig_info

sig

info

p

unlock_task_sighand

p

flags

return

ret

__kill_pgrp_info

sig

siginfo

info

pid

pgrp

task_struct

p

NULL

retval

success

success

retval

ESRCH

do_each_pid_task

pgrp

PIDTYPE_PGID

p

err

group_send_sig_info

sig

info

p

success

err

retval

err

while_each_pid_task

pgrp

PIDTYPE_PGID

p

return

success

retval

kill_pgrp_info

sig

siginfo

info

pid

pgrp

retval

read_lock

tasklist_lock

retval

__kill_pgrp_info

sig

info

pgrp

read_unlock

tasklist_lock

return

retval

kill_pid_info

sig

siginfo

info

pid

pid

error

task_struct

p

rcu_read_lock

unlikely

sig_needs_tasklist

sig

read_lock

tasklist_lock

p

pid_task

pid

PIDTYPE_PID

error

ESRCH

p

error

group_send_sig_info

sig

info

p

unlikely

sig_needs_tasklist

sig

read_unlock

tasklist_lock

rcu_read_unlock

return

error

kill_proc_info

sig

siginfo

info

pid_t

pid

error

rcu_read_lock

error

kill_pid_info

sig

info

find_pid

pid

rcu_read_unlock

return

error

kill_pid_info_as_uid

sig

siginfo

info

pid

pid

uid_t

uid

uid_t

euid

u32

secid

ret

EINVAL

task_struct

p

valid_signal

sig

return

ret

read_lock

tasklist_lock

p

pid_task

pid

PIDTYPE_PID

p

ret

ESRCH

goto

out_unlock

info

SEND_SIG_NOINFO

is_si_special

info

SI_FROMUSER

info

euid

p

suid

euid

p

uid

uid

p

suid

uid

p

uid

ret

EPERM

goto

out_unlock

ret

security_task_kill

p

info

sig

secid

ret

goto

out_unlock

sig

p

sighand

flags

spin_lock_irqsave

p

sighand

siglock

flags

ret

__group_send_sig_info

sig

info

p

spin_unlock_irqrestore

p

sighand

siglock

flags

out_unlock

read_unlock

tasklist_lock

return

ret

EXPORT_SYMBOL_GPL

kill_pid_info_as_uid

static

kill_something_info

sig

siginfo

info

pid

ret

rcu_read_lock

pid

ret

kill_pgrp_info

sig

info

task_pgrp

current

pid

retval

count

task_struct

p

read_lock

tasklist_lock

for_each_process

p

p

pid

p

tgid

current

tgid

err

group_send_sig_info

sig

info

p

count

err

EPERM

retval

err

read_unlock

tasklist_lock

ret

count

retval

ESRCH

pid

ret

kill_pgrp_info

sig

info

find_pid

pid

ret

kill_pid_info

sig

info

find_pid

pid

rcu_read_unlock

return

ret

send_sig_info

sig

siginfo

info

task_struct

p

ret

flags

valid_signal

sig

return

EINVAL

read_lock

tasklist_lock

spin_lock_irqsave

p

sighand

siglock

flags

ret

specific_send_sig_info

sig

info

p

spin_unlock_irqrestore

p

sighand

siglock

flags

read_unlock

tasklist_lock

return

ret

__si_special

priv

priv

SEND_SIG_PRIV

SEND_SIG_NOINFO

send_sig

sig

task_struct

p

priv

return

send_sig_info

sig

__si_special

priv

p

send_group_sig_info

sig

siginfo

info

task_struct

p

ret

read_lock

tasklist_lock

ret

group_send_sig_info

sig

info

p

read_unlock

tasklist_lock

return

ret

void

force_sig

sig

task_struct

p

force_sig_info

sig

SEND_SIG_PRIV

p

force_sigsegv

sig

task_struct

p

sig

SIGSEGV

flags

spin_lock_irqsave

p

sighand

siglock

flags

p

sighand

action

sig

sa

sa_handler

SIG_DFL

spin_unlock_irqrestore

p

sighand

siglock

flags

force_sig

SIGSEGV

p

return

kill_pgrp

pid

pid

sig

priv

return

kill_pgrp_info

sig

__si_special

priv

pid

EXPORT_SYMBOL

kill_pgrp

kill_pid

pid

pid

sig

priv

return

kill_pid_info

sig

__si_special

priv

pid

EXPORT_SYMBOL

kill_pid

kill_proc

pid_t

pid

sig

priv

return

kill_proc_info

sig

__si_special

priv

pid

sigqueue

sigqueue_alloc

void

sigqueue

q

q

__sigqueue_alloc

current

GFP_KERNEL

q

flags

SIGQUEUE_PREALLOC

return

q

void

sigqueue_free

sigqueue

q

flags

spinlock_t

lock

current

sighand

siglock

BUG_ON

q

flags

SIGQUEUE_PREALLOC

spin_lock_irqsave

lock

flags

list_empty

q

list

list_del_init

q

list

spin_unlock_irqrestore

lock

flags

q

flags

SIGQUEUE_PREALLOC

__sigqueue_free

q

send_sigqueue

sig

sigqueue

q

task_struct

p

flags

ret

BUG_ON

q

flags

SIGQUEUE_PREALLOC

rcu_read_lock

likely

lock_task_sighand

p

flags

ret

goto

out_err

unlikely

list_empty

q

list

BUG_ON

q

info

si_code

SI_TIMER

q

info

si_overrun

goto

out

sig_ignored

p

sig

ret

goto

out

signalfd_notify

p

sig

list_add_tail

q

list

p

pending

list

sigaddset

p

pending

signal

sig

sigismember

p

blocked

sig

signal_wake_up

p

sig

SIGKILL

out

unlock_task_sighand

p

flags

out_err

rcu_read_unlock

return

ret

send_group_sigqueue

sig

sigqueue

q

task_struct

p

flags

ret

BUG_ON

q

flags

SIGQUEUE_PREALLOC

read_lock

tasklist_lock

spin_lock_irqsave

p

sighand

siglock

flags

handle_stop_signal

sig

p

sig_ignored

p

sig

ret

goto

out

unlikely

list_empty

q

list

BUG_ON

q

info

si_code

SI_TIMER

q

info

si_overrun

goto

out

signalfd_notify

p

sig

list_add_tail

q

list

p

signal

shared_pending

list

sigaddset

p

signal

shared_pending

signal

sig

__group_complete_signal

sig

p

out

spin_unlock_irqrestore

p

sighand

siglock

flags

read_unlock

tasklist_lock

return

ret

static

inline

void

__wake_up_parent

task_struct

p

task_struct

parent

wake_up_interruptible_sync

parent

signal

wait_chldexit

void

do_notify_parent

task_struct

tsk

sig

siginfo

info

flags

sighand_struct

psig

BUG_ON

sig

BUG_ON

tsk

state

TASK_STOPPED

TASK_TRACED

BUG_ON

tsk

ptrace

tsk

group_leader

tsk

thread_group_empty

tsk

info

si_signo

sig

info

si_errno

info

si_pid

tsk

pid

info

si_uid

tsk

uid

info

si_utime

cputime_to_jiffies

cputime_add

tsk

utime

tsk

signal

utime

info

si_stime

cputime_to_jiffies

cputime_add

tsk

stime

tsk

signal

stime

info

si_status

tsk

exit_code

x7f

tsk

exit_code

x80

info

si_code

CLD_DUMPED

tsk

exit_code

x7f

info

si_code

CLD_KILLED

info

si_code

CLD_EXITED

info

si_status

tsk

exit_code

psig

tsk

parent

sighand

spin_lock_irqsave

psig

siglock

flags

tsk

ptrace

sig

SIGCHLD

psig

action

SIGCHLD

sa

sa_handler

SIG_IGN

psig

action

SIGCHLD

sa

sa_flags

SA_NOCLDWAIT

tsk

exit_signal

psig

action

SIGCHLD

sa

sa_handler

SIG_IGN

sig

valid_signal

sig

sig

__group_send_sig_info

sig

info

tsk

parent

__wake_up_parent

tsk

tsk

parent

spin_unlock_irqrestore

psig

siglock

flags

static

void

do_notify_parent_cldstop

task_struct

tsk

why

siginfo

info

flags

task_struct

parent

sighand_struct

sighand

tsk

ptrace

PT_PTRACED

parent

tsk

parent

tsk

tsk

group_leader

parent

tsk

real_parent

info

si_signo

SIGCHLD

info

si_errno

info

si_pid

tsk

pid

info

si_uid

tsk

uid

info

si_utime

cputime_to_jiffies

tsk

utime

info

si_stime

cputime_to_jiffies

tsk

stime

info

si_code

why

why

case

CLD_CONTINUED

info

si_status

SIGCONT

case

CLD_STOPPED

info

si_status

tsk

signal

group_exit_code

x7f

case

CLD_TRAPPED

info

si_status

tsk

exit_code

x7f

default

BUG

sighand

parent

sighand

spin_lock_irqsave

sighand

siglock

flags

sighand

action

SIGCHLD

sa

sa_handler

SIG_IGN

sighand

action

SIGCHLD

sa

sa_flags

SA_NOCLDSTOP

__group_send_sig_info

SIGCHLD

info

parent

__wake_up_parent

tsk

parent

spin_unlock_irqrestore

sighand

siglock

flags

static

inline

may_ptrace_stop

void

likely

current

ptrace

PT_PTRACED

return

unlikely

current

parent

current

real_parent

current

ptrace

PT_ATTACHED

return

unlikely

current

signal

current

parent

signal

unlikely

current

signal

flags

SIGNAL_GROUP_EXIT

return

unlikely

current

mm

core_waiters

unlikely

current

mm

current

parent

mm

return

return

static

void

ptrace_stop

exit_code

nostop_code

siginfo_t

info

current

signal

group_stop_count

current

signal

group_stop_count

current

last_siginfo

info

current

exit_code

exit_code

set_current_state

TASK_TRACED

spin_unlock_irq

current

sighand

siglock

try_to_freeze

read_lock

tasklist_lock

may_ptrace_stop

do_notify_parent_cldstop

current

CLD_TRAPPED

read_unlock

tasklist_lock

schedule

read_unlock

tasklist_lock

set_current_state

TASK_RUNNING

current

exit_code

nostop_code

spin_lock_irq

current

sighand

siglock

current

last_siginfo

NULL

recalc_sigpending_tsk

current

void

ptrace_notify

exit_code

siginfo_t

info

BUG_ON

exit_code

x7f

xffff

SIGTRAP

memset

info

sizeof

info

info

si_signo

SIGTRAP

info

si_code

exit_code

info

si_pid

current

pid

info

si_uid

current

uid

spin_lock_irq

current

sighand

siglock

ptrace_stop

exit_code

info

spin_unlock_irq

current

sighand

siglock

static

void

finish_stop

stop_count

stop_count

current

ptrace

PT_PTRACED

read_lock

tasklist_lock

do_notify_parent_cldstop

current

CLD_STOPPED

read_unlock

tasklist_lock

schedule

try_to_freeze

current

exit_code

static

do_signal_stop

signr

signal_struct

sig

current

signal

stop_count

likely

sig

flags

SIGNAL_STOP_DEQUEUED

return

sig

group_stop_count

stop_count

sig

group_stop_count

task_struct

t

sig

group_exit_code

signr

stop_count

t

next_thread

current

t

current

t

next_thread

t

t

exit_state

t

state

TASK_STOPPED

TASK_TRACED

stop_count

signal_wake_up

t

sig

group_stop_count

stop_count

stop_count

sig

flags

SIGNAL_STOP_STOPPED

current

exit_code

sig

group_exit_code

__set_current_state

TASK_STOPPED

spin_unlock_irq

current

sighand

siglock

finish_stop

stop_count

return

static

handle_group_stop

void

stop_count

current

signal

group_exit_task

current

current

signal

group_exit_task

NULL

return

current

signal

flags

SIGNAL_GROUP_EXIT

return

stop_count

current

signal

group_stop_count

stop_count

current

signal

flags

SIGNAL_STOP_STOPPED

current

exit_code

current

signal

group_exit_code

set_current_state

TASK_STOPPED

spin_unlock_irq

current

sighand

siglock

finish_stop

stop_count

return

get_signal_to_deliver

siginfo_t

info

k_sigaction

return_ka

pt_regs

regs

void

cookie

sigset_t

mask

current

blocked

signr

try_to_freeze

relock

spin_lock_irq

current

sighand

siglock

k_sigaction

ka

unlikely

current

signal

group_stop_count

handle_group_stop

goto

relock

signr

dequeue_signal

current

mask

info

signr

current

ptrace

PT_PTRACED

signr

SIGKILL

ptrace_signal_deliver

regs

cookie

ptrace_stop

signr

signr

info

signr

current

exit_code

signr

current

exit_code

signr

info

si_signo

info

si_signo

signr

info

si_errno

info

si_code

SI_USER

info

si_pid

current

parent

pid

info

si_uid

current

parent

uid

sigismember

current

blocked

signr

specific_send_sig_info

signr

info

current

ka

current

sighand

action

signr

ka

sa

sa_handler

SIG_IGN

ka

sa

sa_handler

SIG_DFL

return_ka

ka

ka

sa

sa_flags

SA_ONESHOT

ka

sa

sa_handler

SIG_DFL

sig_kernel_ignore

signr

current

child_reaper

current

sig_kernel_stop

signr

signr

SIGSTOP

spin_unlock_irq

current

sighand

siglock

is_current_pgrp_orphaned

goto

relock

spin_lock_irq

current

sighand

siglock

likely

do_signal_stop

signr

goto

relock

spin_unlock_irq

current

sighand

siglock

current

flags

PF_SIGNALED

sig_kernel_coredump

signr

do_coredump

signr

signr

regs

do_group_exit

signr

spin_unlock_irq

current

sighand

siglock

return

signr

EXPORT_SYMBOL

recalc_sigpending

EXPORT_SYMBOL_GPL

dequeue_signal

EXPORT_SYMBOL

flush_signals

EXPORT_SYMBOL

force_sig

EXPORT_SYMBOL

kill_proc

EXPORT_SYMBOL

ptrace_notify

EXPORT_SYMBOL

send_sig

EXPORT_SYMBOL

send_sig_info

EXPORT_SYMBOL

sigprocmask

EXPORT_SYMBOL

block_all_signals

EXPORT_SYMBOL

unblock_all_signals

asmlinkage

sys_restart_syscall

void

restart_block

restart

current_thread_info

restart_block

return

restart

fn

restart

do_no_restart_syscall

restart_block

param

return

EINTR

sigprocmask

how

sigset_t

set

sigset_t

oldset

error

spin_lock_irq

current

sighand

siglock

oldset

oldset

current

blocked

error

how

case

SIG_BLOCK

sigorsets

current

blocked

current

blocked

set

case

SIG_UNBLOCK

signandsets

current

blocked

current

blocked

set

case

SIG_SETMASK

current

blocked

set

default

error

EINVAL

recalc_sigpending

spin_unlock_irq

current

sighand

siglock

return

error

asmlinkage

sys_rt_sigprocmask

how

sigset_t

__user

set

sigset_t

__user

oset

size_t

sigsetsize

error

EINVAL

sigset_t

old_set

new_set

sigsetsize

sizeof

sigset_t

goto

out

set

error

EFAULT

copy_from_user

new_set

set

sizeof

set

goto

out

sigdelsetmask

new_set

sigmask

SIGKILL

sigmask

SIGSTOP

error

sigprocmask

how

new_set

old_set

error

goto

out

oset

goto

set_old

oset

spin_lock_irq

current

sighand

siglock

old_set

current

blocked

spin_unlock_irq

current

sighand

siglock

set_old

error

EFAULT

copy_to_user

oset

old_set

sizeof

oset

goto

out

error

out

return

error

do_sigpending

void

__user

set

sigsetsize

error

EINVAL

sigset_t

pending

sigsetsize

sizeof

sigset_t

goto

out

spin_lock_irq

current

sighand

siglock

sigorsets

pending

current

pending

signal

current

signal

shared_pending

signal

spin_unlock_irq

current

sighand

siglock

sigandsets

pending

current

blocked

pending

error

EFAULT

copy_to_user

set

pending

sigsetsize

error

out

return

error

asmlinkage

sys_rt_sigpending

sigset_t

__user

set

size_t

sigsetsize

return

do_sigpending

set

sigsetsize

HAVE_ARCH_COPY_SIGINFO_TO_USER

copy_siginfo_to_user

siginfo_t

__user

to

siginfo_t

from

err

access_ok

VERIFY_WRITE

to

sizeof

siginfo_t

return

EFAULT

from

si_code

return

__copy_to_user

to

from

sizeof

siginfo_t

EFAULT

err

__put_user

from

si_signo

to

si_signo

err

__put_user

from

si_errno

to

si_errno

err

__put_user

short

from

si_code

to

si_code

from

si_code

__SI_MASK

case

__SI_KILL

err

__put_user

from

si_pid

to

si_pid

err

__put_user

from

si_uid

to

si_uid

case

__SI_TIMER

err

__put_user

from

si_tid

to

si_tid

err

__put_user

from

si_overrun

to

si_overrun

err

__put_user

from

si_ptr

to

si_ptr

case

__SI_POLL

err

__put_user

from

si_band

to

si_band

err

__put_user

from

si_fd

to

si_fd

case

__SI_FAULT

err

__put_user

from

si_addr

to

si_addr

__ARCH_SI_TRAPNO

err

__put_user

from

si_trapno

to

si_trapno

case

__SI_CHLD

err

__put_user

from

si_pid

to

si_pid

err

__put_user

from

si_uid

to

si_uid

err

__put_user

from

si_status

to

si_status

err

__put_user

from

si_utime

to

si_utime

err

__put_user

from

si_stime

to

si_stime

case

__SI_RT

case

__SI_MESGQ

err

__put_user

from

si_pid

to

si_pid

err

__put_user

from

si_uid

to

si_uid

err

__put_user

from

si_ptr

to

si_ptr

default

err

__put_user

from

si_pid

to

si_pid

err

__put_user

from

si_uid

to

si_uid

return

err

asmlinkage

sys_rt_sigtimedwait

sigset_t

__user

uthese

siginfo_t

__user

uinfo

timespec

__user

uts

size_t

sigsetsize

ret

sig

sigset_t

these

timespec

ts

siginfo_t

info

timeout

sigsetsize

sizeof

sigset_t

return

EINVAL

copy_from_user

these

uthese

sizeof

these

return

EFAULT

sigdelsetmask

these

sigmask

SIGKILL

sigmask

SIGSTOP

signotset

these

uts

copy_from_user

ts

uts

sizeof

ts

return

EFAULT

ts

tv_nsec

L

ts

tv_nsec

ts

tv_sec

return

EINVAL

spin_lock_irq

current

sighand

siglock

sig

dequeue_signal

current

these

info

sig

timeout

MAX_SCHEDULE_TIMEOUT

uts

timeout

timespec_to_jiffies

ts

ts

tv_sec

ts

tv_nsec

timeout

current

real_blocked

current

blocked

sigandsets

current

blocked

current

blocked

these

recalc_sigpending

spin_unlock_irq

current

sighand

siglock

timeout

schedule_timeout_interruptible

timeout

spin_lock_irq

current

sighand

siglock

sig

dequeue_signal

current

these

info

current

blocked

current

real_blocked

siginitset

current

real_blocked

recalc_sigpending

spin_unlock_irq

current

sighand

siglock

sig

ret

sig

uinfo

copy_siginfo_to_user

uinfo

info

ret

EFAULT

ret

EAGAIN

timeout

ret

EINTR

return

ret

asmlinkage

sys_kill

pid

sig

siginfo

info

info

si_signo

sig

info

si_errno

info

si_code

SI_USER

info

si_pid

current

tgid

info

si_uid

current

uid

return

kill_something_info

sig

info

pid

static

do_tkill

tgid

pid

sig

error

siginfo

info

task_struct

p

error

ESRCH

info

si_signo

sig

info

si_errno

info

si_code

SI_TKILL

info

si_pid

current

tgid

info

si_uid

current

uid

read_lock

tasklist_lock

p

find_task_by_pid

pid

p

tgid

p

tgid

tgid

error

check_kill_permission

sig

info

p

error

sig

p

sighand

spin_lock_irq

p

sighand

siglock

handle_stop_signal

sig

p

error

specific_send_sig_info

sig

info

p

spin_unlock_irq

p

sighand

siglock

read_unlock

tasklist_lock

return

error

asmlinkage

sys_tgkill

tgid

pid

sig

pid

tgid

return

EINVAL

return

do_tkill

tgid

pid

sig

asmlinkage

sys_tkill

pid

sig

pid

return

EINVAL

return

do_tkill

pid

sig

asmlinkage

sys_rt_sigqueueinfo

pid

sig

siginfo_t

__user

uinfo

siginfo_t

info

copy_from_user

info

uinfo

sizeof

siginfo_t

return

EFAULT

info

si_code

return

EPERM

info

si_signo

sig

return

kill_proc_info

sig

info

pid

do_sigaction

sig

k_sigaction

act

k_sigaction

oact

k_sigaction

k

sigset_t

mask

valid_signal

sig

sig

act

sig_kernel_only

sig

return

EINVAL

k

current

sighand

action

sig

spin_lock_irq

current

sighand

siglock

signal_pending

current

spin_unlock_irq

current

sighand

siglock

return

ERESTARTNOINTR

oact

oact

k

act

sigdelsetmask

act

sa

sa_mask

sigmask

SIGKILL

sigmask

SIGSTOP

k

act

act

sa

sa_handler

SIG_IGN

act

sa

sa_handler

SIG_DFL

sig_kernel_ignore

sig

task_struct

t

current

sigemptyset

mask

sigaddset

mask

sig

rm_from_queue_full

mask

t

signal

shared_pending

rm_from_queue_full

mask

t

pending

recalc_sigpending_and_wake

t

t

next_thread

t

t

current

spin_unlock_irq

current

sighand

siglock

return

do_sigaltstack

stack_t

__user

uss

stack_t

__user

uoss

sp

stack_t

oss

error

uoss

oss

ss_sp

void

__user

current

sas_ss_sp

oss

ss_size

current

sas_ss_size

oss

ss_flags

sas_ss_flags

sp

uss

void

__user

ss_sp

size_t

ss_size

ss_flags

error

EFAULT

access_ok

VERIFY_READ

uss

sizeof

uss

__get_user

ss_sp

uss

ss_sp

__get_user

ss_flags

uss

ss_flags

__get_user

ss_size

uss

ss_size

goto

out

error

EPERM

on_sig_stack

sp

goto

out

error

EINVAL

ss_flags

SS_DISABLE

ss_flags

SS_ONSTACK

ss_flags

goto

out

ss_flags

SS_DISABLE

ss_size

ss_sp

NULL

error

ENOMEM

ss_size

MINSIGSTKSZ

goto

out

current

sas_ss_sp

ss_sp

current

sas_ss_size

ss_size

uoss

error

EFAULT

copy_to_user

uoss

oss

sizeof

oss

goto

out

error

out

return

error

__ARCH_WANT_SYS_SIGPENDING

asmlinkage

sys_sigpending

old_sigset_t

__user

set

return

do_sigpending

set

sizeof

set

__ARCH_WANT_SYS_SIGPROCMASK

asmlinkage

sys_sigprocmask

how

old_sigset_t

__user

set

old_sigset_t

__user

oset

error

old_sigset_t

old_set

new_set

set

error

EFAULT

copy_from_user

new_set

set

sizeof

set

goto

out

new_set

sigmask

SIGKILL

sigmask

SIGSTOP

spin_lock_irq

current

sighand

siglock

old_set

current

blocked

sig

error

how

default

error

EINVAL

case

SIG_BLOCK

sigaddsetmask

current

blocked

new_set

case

SIG_UNBLOCK

sigdelsetmask

current

blocked

new_set

case

SIG_SETMASK

current

blocked

sig

new_set

recalc_sigpending

spin_unlock_irq

current

sighand

siglock

error

goto

out

oset

goto

set_old

oset

old_set

current

blocked

sig

set_old

error

EFAULT

copy_to_user

oset

old_set

sizeof

oset

goto

out

error

out

return

error

__ARCH_WANT_SYS_RT_SIGACTION

asmlinkage

sys_rt_sigaction

sig

sigaction

__user

act

sigaction

__user

oact

size_t

sigsetsize

k_sigaction

new_sa

old_sa

ret

EINVAL

sigsetsize

sizeof

sigset_t

goto

out

act

copy_from_user

new_sa

sa

act

sizeof

new_sa

sa

return

EFAULT

ret

do_sigaction

sig

act

new_sa

NULL

oact

old_sa

NULL

ret

oact

copy_to_user

oact

old_sa

sa

sizeof

old_sa

sa

return

EFAULT

out

return

ret

__ARCH_WANT_SYS_SGETMASK

asmlinkage

sys_sgetmask

void

return

current

blocked

sig

asmlinkage

sys_ssetmask

newmask

old

spin_lock_irq

current

sighand

siglock

old

current

blocked

sig

siginitset

current

blocked

newmask

sigmask

SIGKILL

sigmask

SIGSTOP

recalc_sigpending

spin_unlock_irq

current

sighand

siglock

return

old

__ARCH_WANT_SYS_SIGNAL

asmlinkage

sys_signal

sig

__sighandler_t

handler

k_sigaction

new_sa

old_sa

ret

new_sa

sa

sa_handler

handler

new_sa

sa

sa_flags

SA_ONESHOT

SA_NOMASK

sigemptyset

new_sa

sa

sa_mask

ret

do_sigaction

sig

new_sa

old_sa

return

ret

ret

old_sa

sa

sa_handler

__ARCH_WANT_SYS_PAUSE

asmlinkage

sys_pause

void

current

state

TASK_INTERRUPTIBLE

schedule

return

ERESTARTNOHAND

__ARCH_WANT_SYS_RT_SIGSUSPEND

asmlinkage

sys_rt_sigsuspend

sigset_t

__user

unewset

size_t

sigsetsize

sigset_t

newset

sigsetsize

sizeof

sigset_t

return

EINVAL

copy_from_user

newset

unewset

sizeof

newset

return

EFAULT

sigdelsetmask

newset

sigmask

SIGKILL

sigmask

SIGSTOP

spin_lock_irq

current

sighand

siglock

current

saved_sigmask

current

blocked

current

blocked

newset

recalc_sigpending

spin_unlock_irq

current

sighand

siglock

current

state

TASK_INTERRUPTIBLE

schedule

set_thread_flag

TIF_RESTORE_SIGMASK

return

ERESTARTNOHAND

__attribute__

weak

arch_vma_name

vm_area_struct

vma

return

NULL

void

__init

signals_init

void

sigqueue_cachep

KMEM_CACHE

sigqueue

SLAB_PANIC

CONFIG_KDB

void

kdb_send_sig_info

task_struct

t

siginfo

info

seqno

static

task_struct

kdb_prev_t

static

kdb_prev_seqno

sig

new_t

spin_trylock

t

sighand

siglock

kdb_printf

return

spin_unlock

t

sighand

siglock

new_t

kdb_prev_t

t

kdb_prev_seqno

seqno

kdb_prev_t

t

kdb_prev_seqno

seqno

t

state

TASK_RUNNING

new_t

kdb_printf

return

sig

info

si_signo

send_sig_info

sig

info

t

kdb_printf

sig

t

pid

kdb_printf

sig

t

pid

__ARCH_IRQ_STAT

irq_cpustat_t

irq_stat

NR_CPUS

____cacheline_aligned

EXPORT_SYMBOL

irq_stat

static

softirq_action

softirq_vec

__cacheline_aligned_in_smp

static

DEFINE_PER_CPU

task_struct

ksoftirqd

static

inline

void

wakeup_softirqd

void

task_struct

tsk

__get_cpu_var

ksoftirqd

tsk

tsk

state

TASK_RUNNING

wake_up_process

tsk

CONFIG_TRACE_IRQFLAGS

static

void

__local_bh_disable

ip

flags

WARN_ON_ONCE

in_irq

raw_local_irq_save

flags

add_preempt_count

SOFTIRQ_OFFSET

softirq_count

SOFTIRQ_OFFSET

trace_softirqs_off

ip

raw_local_irq_restore

flags

static

inline

void

__local_bh_disable

ip

add_preempt_count

SOFTIRQ_OFFSET

barrier

void

local_bh_disable

void

__local_bh_disable

__builtin_return_address

EXPORT_SYMBOL

local_bh_disable

void

__local_bh_enable

void

WARN_ON_ONCE

in_irq

WARN_ON_ONCE

softirq_count

SOFTIRQ_OFFSET

sub_preempt_count

SOFTIRQ_OFFSET

EXPORT_SYMBOL_GPL

__local_bh_enable

void

_local_bh_enable

void

WARN_ON_ONCE

in_irq

WARN_ON_ONCE

irqs_disabled

softirq_count

SOFTIRQ_OFFSET

trace_softirqs_on

__builtin_return_address

sub_preempt_count

SOFTIRQ_OFFSET

EXPORT_SYMBOL

_local_bh_enable

void

local_bh_enable

void

CONFIG_TRACE_IRQFLAGS

flags

WARN_ON_ONCE

in_irq

WARN_ON_ONCE

irqs_disabled

CONFIG_TRACE_IRQFLAGS

local_irq_save

flags

softirq_count

SOFTIRQ_OFFSET

trace_softirqs_on

__builtin_return_address

sub_preempt_count

SOFTIRQ_OFFSET

unlikely

in_interrupt

local_softirq_pending

do_softirq

dec_preempt_count

CONFIG_TRACE_IRQFLAGS

local_irq_restore

flags

preempt_check_resched

EXPORT_SYMBOL

local_bh_enable

void

local_bh_enable_ip

ip

CONFIG_TRACE_IRQFLAGS

flags

WARN_ON_ONCE

in_irq

local_irq_save

flags

softirq_count

SOFTIRQ_OFFSET

trace_softirqs_on

ip

sub_preempt_count

SOFTIRQ_OFFSET

unlikely

in_interrupt

local_softirq_pending

do_softirq

dec_preempt_count

CONFIG_TRACE_IRQFLAGS

local_irq_restore

flags

preempt_check_resched

EXPORT_SYMBOL

local_bh_enable_ip

MAX_SOFTIRQ_RESTART

asmlinkage

void

__do_softirq

void

softirq_action

h

__u32

pending

max_restart

MAX_SOFTIRQ_RESTART

cpu

pending

local_softirq_pending

account_system_vtime

current

__local_bh_disable

__builtin_return_address

trace_softirq_enter

cpu

smp_processor_id

restart

set_softirq_pending

local_irq_enable

h

softirq_vec

pending

h

action

h

rcu_bh_qsctr_inc

cpu

h

pending

pending

local_irq_disable

pending

local_softirq_pending

pending

max_restart

goto

restart

pending

wakeup_softirqd

trace_softirq_exit

account_system_vtime

current

_local_bh_enable

__ARCH_HAS_DO_SOFTIRQ

asmlinkage

void

do_softirq

void

__u32

pending

flags

in_interrupt

return

local_irq_save

flags

pending

local_softirq_pending

pending

__do_softirq

local_irq_restore

flags

EXPORT_SYMBOL

do_softirq

void

irq_enter

void

__irq_enter

CONFIG_NO_HZ

idle_cpu

smp_processor_id

tick_nohz_update_jiffies

__ARCH_IRQ_EXIT_IRQS_DISABLED

invoke_softirq

__do_softirq

invoke_softirq

do_softirq

void

irq_exit

void

account_system_vtime

current

trace_hardirq_exit

sub_preempt_count

IRQ_EXIT_OFFSET

in_interrupt

local_softirq_pending

invoke_softirq

CONFIG_NO_HZ

in_interrupt

idle_cpu

smp_processor_id

need_resched

tick_nohz_stop_sched_tick

preempt_enable_no_resched

inline

fastcall

void

raise_softirq_irqoff

nr

__raise_softirq_irqoff

nr

in_interrupt

wakeup_softirqd

EXPORT_SYMBOL

raise_softirq_irqoff

void

fastcall

raise_softirq

nr

flags

local_irq_save

flags

raise_softirq_irqoff

nr

local_irq_restore

flags

void

open_softirq

nr

void

action

softirq_action

void

data

softirq_vec

nr

data

data

softirq_vec

nr

action

action

tasklet_head

tasklet_struct

list

static

DEFINE_PER_CPU

tasklet_head

tasklet_vec

NULL

static

DEFINE_PER_CPU

tasklet_head

tasklet_hi_vec

NULL

void

fastcall

__tasklet_schedule

tasklet_struct

t

flags

local_irq_save

flags

t

next

__get_cpu_var

tasklet_vec

list

__get_cpu_var

tasklet_vec

list

t

raise_softirq_irqoff

TASKLET_SOFTIRQ

local_irq_restore

flags

EXPORT_SYMBOL

__tasklet_schedule

void

fastcall

__tasklet_hi_schedule

tasklet_struct

t

flags

local_irq_save

flags

t

next

__get_cpu_var

tasklet_hi_vec

list

__get_cpu_var

tasklet_hi_vec

list

t

raise_softirq_irqoff

HI_SOFTIRQ

local_irq_restore

flags

EXPORT_SYMBOL

__tasklet_hi_schedule

static

void

tasklet_action

softirq_action

a

tasklet_struct

list

local_irq_disable

list

__get_cpu_var

tasklet_vec

list

__get_cpu_var

tasklet_vec

list

NULL

local_irq_enable

list

tasklet_struct

t

list

list

list

next

tasklet_trylock

t

atomic_read

t

count

test_and_clear_bit

TASKLET_STATE_SCHED

t

state

BUG

t

func

t

data

tasklet_unlock

t

tasklet_unlock

t

local_irq_disable

t

next

__get_cpu_var

tasklet_vec

list

__get_cpu_var

tasklet_vec

list

t

__raise_softirq_irqoff

TASKLET_SOFTIRQ

local_irq_enable

static

void

tasklet_hi_action

softirq_action

a

tasklet_struct

list

local_irq_disable

list

__get_cpu_var

tasklet_hi_vec

list

__get_cpu_var

tasklet_hi_vec

list

NULL

local_irq_enable

list

tasklet_struct

t

list

list

list

next

tasklet_trylock

t

atomic_read

t

count

test_and_clear_bit

TASKLET_STATE_SCHED

t

state

BUG

t

func

t

data

tasklet_unlock

t

tasklet_unlock

t

local_irq_disable

t

next

__get_cpu_var

tasklet_hi_vec

list

__get_cpu_var

tasklet_hi_vec

list

t

__raise_softirq_irqoff

HI_SOFTIRQ

local_irq_enable

void

tasklet_init

tasklet_struct

t

void

func

data

t

next

NULL

t

state

atomic_set

t

count

t

func

func

t

data

data

EXPORT_SYMBOL

tasklet_init

void

tasklet_kill

tasklet_struct

t

in_interrupt

printk

test_and_set_bit

TASKLET_STATE_SCHED

t

state

yield

test_bit

TASKLET_STATE_SCHED

t

state

tasklet_unlock_wait

t

clear_bit

TASKLET_STATE_SCHED

t

state

EXPORT_SYMBOL

tasklet_kill

void

__init

softirq_init

void

open_softirq

TASKLET_SOFTIRQ

tasklet_action

NULL

open_softirq

HI_SOFTIRQ

tasklet_hi_action

NULL

static

ksoftirqd

void

__bind_cpu

set_user_nice

current

current

flags

PF_NOFREEZE

set_current_state

TASK_INTERRUPTIBLE

kthread_should_stop

preempt_disable

local_softirq_pending

preempt_enable_no_resched

schedule

preempt_disable

__set_current_state

TASK_RUNNING

local_softirq_pending

cpu_is_offline

__bind_cpu

goto

wait_to_die

do_softirq

preempt_enable_no_resched

cond_resched

preempt_disable

preempt_enable

set_current_state

TASK_INTERRUPTIBLE

__set_current_state

TASK_RUNNING

return

wait_to_die

preempt_enable

set_current_state

TASK_INTERRUPTIBLE

kthread_should_stop

schedule

set_current_state

TASK_INTERRUPTIBLE

__set_current_state

TASK_RUNNING

return

CONFIG_HOTPLUG_CPU

void

tasklet_kill_immediate

tasklet_struct

t

cpu

tasklet_struct

i

BUG_ON

cpu_online

cpu

BUG_ON

test_bit

TASKLET_STATE_RUN

t

state

test_bit

TASKLET_STATE_SCHED

t

state

return

i

per_cpu

tasklet_vec

cpu

list

i

i

i

next

i

t

i

t

next

return

BUG

static

void

takeover_tasklets

cpu

tasklet_struct

i

local_irq_disable

i

__get_cpu_var

tasklet_vec

list

i

i

i

next

i

per_cpu

tasklet_vec

cpu

list

per_cpu

tasklet_vec

cpu

list

NULL

raise_softirq_irqoff

TASKLET_SOFTIRQ

i

__get_cpu_var

tasklet_hi_vec

list

i

i

i

next

i

per_cpu

tasklet_hi_vec

cpu

list

per_cpu

tasklet_hi_vec

cpu

list

NULL

raise_softirq_irqoff

HI_SOFTIRQ

local_irq_enable

static

__cpuinit

cpu_callback

notifier_block

nfb

action

void

hcpu

hotcpu

hcpu

task_struct

p

action

case

CPU_UP_PREPARE

case

CPU_UP_PREPARE_FROZEN

p

kthread_create

ksoftirqd

hcpu

hotcpu

IS_ERR

p

printk

hotcpu

return

NOTIFY_BAD

kthread_bind

p

hotcpu

per_cpu

ksoftirqd

hotcpu

p

case

CPU_ONLINE

case

CPU_ONLINE_FROZEN

wake_up_process

per_cpu

ksoftirqd

hotcpu

CONFIG_HOTPLUG_CPU

case

CPU_UP_CANCELED

case

CPU_UP_CANCELED_FROZEN

per_cpu

ksoftirqd

hotcpu

kthread_bind

per_cpu

ksoftirqd

hotcpu

any_online_cpu

cpu_online_map

case

CPU_DEAD

case

CPU_DEAD_FROZEN

p

per_cpu

ksoftirqd

hotcpu

per_cpu

ksoftirqd

hotcpu

NULL

kthread_stop

p

takeover_tasklets

hotcpu

return

NOTIFY_OK

static

notifier_block

__cpuinitdata

cpu_nfb

notifier_call

cpu_callback

__init

spawn_ksoftirqd

void

void

cpu

void

smp_processor_id

err

cpu_callback

cpu_nfb

CPU_UP_PREPARE

cpu

BUG_ON

err

NOTIFY_BAD

cpu_callback

cpu_nfb

CPU_ONLINE

cpu

register_cpu_notifier

cpu_nfb

return

CONFIG_SMP

on_each_cpu

void

func

void

info

void

info

retry

wait

ret

preempt_disable

ret

smp_call_function

func

info

retry

wait

local_irq_disable

func

info

local_irq_enable

preempt_enable

return

ret

EXPORT_SYMBOL

on_each_cpu

static

DEFINE_SPINLOCK

print_lock

static

DEFINE_PER_CPU

touch_timestamp

static

DEFINE_PER_CPU

print_timestamp

static

DEFINE_PER_CPU

task_struct

watchdog_task

static

did_panic

static

softlock_panic

notifier_block

this

event

void

ptr

did_panic

return

NOTIFY_DONE

static

notifier_block

panic_block

notifier_call

softlock_panic

static

get_timestamp

void

return

sched_clock

void

touch_softlockup_watchdog

void

__raw_get_cpu_var

touch_timestamp

get_timestamp

EXPORT_SYMBOL

touch_softlockup_watchdog

void

touch_all_softlockup_watchdogs

void

cpu

for_each_online_cpu

cpu

per_cpu

touch_timestamp

cpu

EXPORT_SYMBOL

touch_all_softlockup_watchdogs

softlockup_get_next_event

void

this_cpu

smp_processor_id

touch_timestamp

per_cpu

touch_timestamp

this_cpu

per_cpu

print_timestamp

this_cpu

touch_timestamp

did_panic

per_cpu

watchdog_task

this_cpu

return

MAX_JIFFY_OFFSET

return

max_t

touch_timestamp

HZ

jiffies

void

softlockup_tick

void

this_cpu

smp_processor_id

touch_timestamp

per_cpu

touch_timestamp

this_cpu

print_timestamp

now

touch_timestamp

touch_softlockup_watchdog

return

print_timestamp

per_cpu

print_timestamp

this_cpu

print_timestamp

touch_timestamp

did_panic

per_cpu

watchdog_task

this_cpu

return

unlikely

system_state

SYSTEM_RUNNING

touch_softlockup_watchdog

return

now

get_timestamp

now

touch_timestamp

wake_up_process

per_cpu

watchdog_task

this_cpu

now

touch_timestamp

per_cpu

print_timestamp

this_cpu

touch_timestamp

spin_lock

print_lock

printk

KERN_ERR

this_cpu

dump_stack

spin_unlock

print_lock

static

watchdog

void

__bind_cpu

sched_param

param

sched_priority

MAX_RT_PRIO

sched_setscheduler

current

SCHED_FIFO

param

current

flags

PF_NOFREEZE

touch_softlockup_watchdog

kthread_should_stop

set_current_state

TASK_INTERRUPTIBLE

touch_softlockup_watchdog

schedule

return

static

__cpuinit

cpu_callback

notifier_block

nfb

action

void

hcpu

hotcpu

hcpu

task_struct

p

action

case

CPU_UP_PREPARE

case

CPU_UP_PREPARE_FROZEN

BUG_ON

per_cpu

watchdog_task

hotcpu

p

kthread_create

watchdog

hcpu

hotcpu

IS_ERR

p

printk

hotcpu

return

NOTIFY_BAD

per_cpu

touch_timestamp

hotcpu

per_cpu

watchdog_task

hotcpu

p

kthread_bind

p

hotcpu

case

CPU_ONLINE

case

CPU_ONLINE_FROZEN

wake_up_process

per_cpu

watchdog_task

hotcpu

CONFIG_HOTPLUG_CPU

case

CPU_UP_CANCELED

case

CPU_UP_CANCELED_FROZEN

per_cpu

watchdog_task

hotcpu

kthread_bind

per_cpu

watchdog_task

hotcpu

any_online_cpu

cpu_online_map

case

CPU_DEAD

case

CPU_DEAD_FROZEN

p

per_cpu

watchdog_task

hotcpu

per_cpu

watchdog_task

hotcpu

NULL

kthread_stop

p

return

NOTIFY_OK

static

notifier_block

__cpuinitdata

cpu_nfb

notifier_call

cpu_callback

__init

void

spawn_softlockup_task

void

void

cpu

void

smp_processor_id

err

cpu_callback

cpu_nfb

CPU_UP_PREPARE

cpu

BUG_ON

err

NOTIFY_BAD

cpu_callback

cpu_nfb

CPU_ONLINE

cpu

register_cpu_notifier

cpu_nfb

atomic_notifier_chain_register

panic_notifier_list

panic_block

__lockfunc

_spin_trylock

spinlock_t

lock

preempt_disable

_raw_spin_trylock

lock

spin_acquire

lock

dep_map

_RET_IP_

return

preempt_enable

return

EXPORT_SYMBOL

_spin_trylock

__lockfunc

_read_trylock

rwlock_t

lock

preempt_disable

_raw_read_trylock

lock

rwlock_acquire_read

lock

dep_map

_RET_IP_

return

preempt_enable

return

EXPORT_SYMBOL

_read_trylock

__lockfunc

_write_trylock

rwlock_t

lock

preempt_disable

_raw_write_trylock

lock

rwlock_acquire

lock

dep_map

_RET_IP_

return

preempt_enable

return

EXPORT_SYMBOL

_write_trylock

CONFIG_PREEMPT

CONFIG_SMP

CONFIG_DEBUG_LOCK_ALLOC

void

__lockfunc

_read_lock

rwlock_t

lock

preempt_disable

rwlock_acquire_read

lock

dep_map

_RET_IP_

_raw_read_lock

lock

EXPORT_SYMBOL

_read_lock

__lockfunc

_spin_lock_irqsave

spinlock_t

lock

flags

local_irq_save

flags

preempt_disable

spin_acquire

lock

dep_map

_RET_IP_

CONFIG_PROVE_LOCKING

_raw_spin_lock

lock

_raw_spin_lock_flags

lock

flags

return

flags

EXPORT_SYMBOL

_spin_lock_irqsave

void

__lockfunc

_spin_lock_irq

spinlock_t

lock

local_irq_disable

preempt_disable

spin_acquire

lock

dep_map

_RET_IP_

_raw_spin_lock

lock

EXPORT_SYMBOL

_spin_lock_irq

void

__lockfunc

_spin_lock_bh

spinlock_t

lock

local_bh_disable

preempt_disable

spin_acquire

lock

dep_map

_RET_IP_

_raw_spin_lock

lock

EXPORT_SYMBOL

_spin_lock_bh

__lockfunc

_read_lock_irqsave

rwlock_t

lock

flags

local_irq_save

flags

preempt_disable

rwlock_acquire_read

lock

dep_map

_RET_IP_

_raw_read_lock

lock

return

flags

EXPORT_SYMBOL

_read_lock_irqsave

void

__lockfunc

_read_lock_irq

rwlock_t

lock

local_irq_disable

preempt_disable

rwlock_acquire_read

lock

dep_map

_RET_IP_

_raw_read_lock

lock

EXPORT_SYMBOL

_read_lock_irq

void

__lockfunc

_read_lock_bh

rwlock_t

lock

local_bh_disable

preempt_disable

rwlock_acquire_read

lock

dep_map

_RET_IP_

_raw_read_lock

lock

EXPORT_SYMBOL

_read_lock_bh

__lockfunc

_write_lock_irqsave

rwlock_t

lock

flags

local_irq_save

flags

preempt_disable

rwlock_acquire

lock

dep_map

_RET_IP_

_raw_write_lock

lock

return

flags

EXPORT_SYMBOL

_write_lock_irqsave

void

__lockfunc

_write_lock_irq

rwlock_t

lock

local_irq_disable

preempt_disable

rwlock_acquire

lock

dep_map

_RET_IP_

_raw_write_lock

lock

EXPORT_SYMBOL

_write_lock_irq

void

__lockfunc

_write_lock_bh

rwlock_t

lock

local_bh_disable

preempt_disable

rwlock_acquire

lock

dep_map

_RET_IP_

_raw_write_lock

lock

EXPORT_SYMBOL

_write_lock_bh

void

__lockfunc

_spin_lock

spinlock_t

lock

preempt_disable

spin_acquire

lock

dep_map

_RET_IP_

_raw_spin_lock

lock

EXPORT_SYMBOL

_spin_lock

void

__lockfunc

_write_lock

rwlock_t

lock

preempt_disable

rwlock_acquire

lock

dep_map

_RET_IP_

_raw_write_lock

lock

EXPORT_SYMBOL

_write_lock

BUILD_LOCK_OPS

op

locktype

void

__lockfunc

_

op

_lock

locktype

_t

lock

preempt_disable

likely

_raw_

op

_trylock

lock

preempt_enable

lock

break_lock

lock

break_lock

op

_can_lock

lock

lock

break_lock

_raw_

op

_relax

lock

raw_lock

lock

break_lock

EXPORT_SYMBOL

_

op

_lock

__lockfunc

_

op

_lock_irqsave

locktype

_t

lock

flags

preempt_disable

local_irq_save

flags

likely

_raw_

op

_trylock

lock

local_irq_restore

flags

preempt_enable

lock

break_lock

lock

break_lock

op

_can_lock

lock

lock

break_lock

_raw_

op

_relax

lock

raw_lock

lock

break_lock

return

flags

EXPORT_SYMBOL

_

op

_lock_irqsave

void

__lockfunc

_

op

_lock_irq

locktype

_t

lock

_

op

_lock_irqsave

lock

EXPORT_SYMBOL

_

op

_lock_irq

void

__lockfunc

_

op

_lock_bh

locktype

_t

lock

flags

flags

_

op

_lock_irqsave

lock

local_bh_disable

local_irq_restore

flags

EXPORT_SYMBOL

_

op

_lock_bh

BUILD_LOCK_OPS

spin

spinlock

BUILD_LOCK_OPS

read

rwlock

BUILD_LOCK_OPS

write

rwlock

CONFIG_DEBUG_LOCK_ALLOC

void

__lockfunc

_spin_lock_nested

spinlock_t

lock

subclass

preempt_disable

spin_acquire

lock

dep_map

subclass

_RET_IP_

_raw_spin_lock

lock

EXPORT_SYMBOL

_spin_lock_nested

__lockfunc

_spin_lock_irqsave_nested

spinlock_t

lock

subclass

flags

local_irq_save

flags

preempt_disable

spin_acquire

lock

dep_map

subclass

_RET_IP_

CONFIG_PROVE_SPIN_LOCKING

_raw_spin_lock

lock

_raw_spin_lock_flags

lock

flags

return

flags

EXPORT_SYMBOL

_spin_lock_irqsave_nested

void

__lockfunc

_spin_unlock

spinlock_t

lock

spin_release

lock

dep_map

_RET_IP_

_raw_spin_unlock

lock

preempt_enable

EXPORT_SYMBOL

_spin_unlock

void

__lockfunc

_write_unlock

rwlock_t

lock

rwlock_release

lock

dep_map

_RET_IP_

_raw_write_unlock

lock

preempt_enable

EXPORT_SYMBOL

_write_unlock

void

__lockfunc

_read_unlock

rwlock_t

lock

rwlock_release

lock

dep_map

_RET_IP_

_raw_read_unlock

lock

preempt_enable

EXPORT_SYMBOL

_read_unlock

void

__lockfunc

_spin_unlock_irqrestore

spinlock_t

lock

flags

spin_release

lock

dep_map

_RET_IP_

_raw_spin_unlock

lock

local_irq_restore

flags

preempt_enable

EXPORT_SYMBOL

_spin_unlock_irqrestore

void

__lockfunc

_spin_unlock_irq

spinlock_t

lock

spin_release

lock

dep_map

_RET_IP_

_raw_spin_unlock

lock

local_irq_enable

preempt_enable

EXPORT_SYMBOL

_spin_unlock_irq

void

__lockfunc

_spin_unlock_bh

spinlock_t

lock

spin_release

lock

dep_map

_RET_IP_

_raw_spin_unlock

lock

preempt_enable_no_resched

local_bh_enable_ip

__builtin_return_address

EXPORT_SYMBOL

_spin_unlock_bh

void

__lockfunc

_read_unlock_irqrestore

rwlock_t

lock

flags

rwlock_release

lock

dep_map

_RET_IP_

_raw_read_unlock

lock

local_irq_restore

flags

preempt_enable

EXPORT_SYMBOL

_read_unlock_irqrestore

void

__lockfunc

_read_unlock_irq

rwlock_t

lock

rwlock_release

lock

dep_map

_RET_IP_

_raw_read_unlock

lock

local_irq_enable

preempt_enable

EXPORT_SYMBOL

_read_unlock_irq

void

__lockfunc

_read_unlock_bh

rwlock_t

lock

rwlock_release

lock

dep_map

_RET_IP_

_raw_read_unlock

lock

preempt_enable_no_resched

local_bh_enable_ip

__builtin_return_address

EXPORT_SYMBOL

_read_unlock_bh

void

__lockfunc

_write_unlock_irqrestore

rwlock_t

lock

flags

rwlock_release

lock

dep_map

_RET_IP_

_raw_write_unlock

lock

local_irq_restore

flags

preempt_enable

EXPORT_SYMBOL

_write_unlock_irqrestore

void

__lockfunc

_write_unlock_irq

rwlock_t

lock

rwlock_release

lock

dep_map

_RET_IP_

_raw_write_unlock

lock

local_irq_enable

preempt_enable

EXPORT_SYMBOL

_write_unlock_irq

void

__lockfunc

_write_unlock_bh

rwlock_t

lock

rwlock_release

lock

dep_map

_RET_IP_

_raw_write_unlock

lock

preempt_enable_no_resched

local_bh_enable_ip

__builtin_return_address

EXPORT_SYMBOL

_write_unlock_bh

__lockfunc

_spin_trylock_bh

spinlock_t

lock

local_bh_disable

preempt_disable

_raw_spin_trylock

lock

spin_acquire

lock

dep_map

_RET_IP_

return

preempt_enable_no_resched

local_bh_enable_ip

__builtin_return_address

return

EXPORT_SYMBOL

_spin_trylock_bh

in_lock_functions

addr

extern

__lock_text_start

__lock_text_end

return

addr

__lock_text_start

addr

__lock_text_end

EXPORT_SYMBOL

in_lock_functions

init_srcu_struct

srcu_struct

sp

sp

completed

mutex_init

sp

mutex

sp

per_cpu_ref

alloc_percpu

srcu_struct_array

return

sp

per_cpu_ref

ENOMEM

static

srcu_readers_active_idx

srcu_struct

sp

idx

cpu

sum

sum

for_each_possible_cpu

cpu

sum

per_cpu_ptr

sp

per_cpu_ref

cpu

c

idx

return

sum

srcu_readers_active

srcu_struct

sp

return

srcu_readers_active_idx

sp

srcu_readers_active_idx

sp

void

cleanup_srcu_struct

srcu_struct

sp

sum

sum

srcu_readers_active

sp

WARN_ON

sum

sum

return

free_percpu

sp

per_cpu_ref

sp

per_cpu_ref

NULL

srcu_read_lock

srcu_struct

sp

idx

preempt_disable

idx

sp

completed

x1

barrier

per_cpu_ptr

sp

per_cpu_ref

smp_processor_id

c

idx

srcu_barrier

preempt_enable

return

idx

void

srcu_read_unlock

srcu_struct

sp

idx

preempt_disable

srcu_barrier

per_cpu_ptr

sp

per_cpu_ref

smp_processor_id

c

idx

preempt_enable

void

synchronize_srcu

srcu_struct

sp

idx

idx

sp

completed

mutex_lock

sp

mutex

sp

completed

idx

mutex_unlock

sp

mutex

return

synchronize_sched

idx

sp

completed

x1

sp

completed

synchronize_sched

srcu_readers_active_idx

sp

idx

schedule_timeout_interruptible

synchronize_sched

mutex_unlock

sp

mutex

srcu_batches_completed

srcu_struct

sp

return

sp

completed

EXPORT_SYMBOL_GPL

init_srcu_struct

EXPORT_SYMBOL_GPL

cleanup_srcu_struct

EXPORT_SYMBOL_GPL

srcu_read_lock

EXPORT_SYMBOL_GPL

srcu_read_unlock

EXPORT_SYMBOL_GPL

synchronize_srcu

EXPORT_SYMBOL_GPL

srcu_batches_completed

EXPORT_SYMBOL_GPL

srcu_readers_active

void

print_stack_trace

stack_trace

trace

spaces

i

j

i

i

trace

nr_entries

i

ip

trace

entries

i

j

j

spaces

j

printk

print_ip_sym

ip

enum

stopmachine_state

STOPMACHINE_WAIT

STOPMACHINE_PREPARE

STOPMACHINE_DISABLE_IRQ

STOPMACHINE_EXIT

static

enum

stopmachine_state

stopmachine_state

static

stopmachine_num_threads

static

atomic_t

stopmachine_thread_ack

static

DECLARE_MUTEX

stopmachine_mutex

static

stopmachine

void

cpu

irqs_disabled

prepared

set_cpus_allowed

current

cpumask_of_cpu

cpu

smp_mb

atomic_inc

stopmachine_thread_ack

stopmachine_state

STOPMACHINE_EXIT

stopmachine_state

STOPMACHINE_DISABLE_IRQ

irqs_disabled

local_irq_disable

hard_irq_disable

irqs_disabled

smp_mb

atomic_inc

stopmachine_thread_ack

stopmachine_state

STOPMACHINE_PREPARE

prepared

preempt_disable

prepared

smp_mb

atomic_inc

stopmachine_thread_ack

prepared

irqs_disabled

yield

cpu_relax

smp_mb

atomic_inc

stopmachine_thread_ack

irqs_disabled

local_irq_enable

prepared

preempt_enable

return

static

void

stopmachine_set_state

enum

stopmachine_state

state

atomic_set

stopmachine_thread_ack

smp_wmb

stopmachine_state

state

atomic_read

stopmachine_thread_ack

stopmachine_num_threads

cpu_relax

static

stop_machine

void

i

ret

sched_param

param

sched_priority

MAX_RT_PRIO

sched_setscheduler

current

SCHED_FIFO

param

atomic_set

stopmachine_thread_ack

stopmachine_num_threads

stopmachine_state

STOPMACHINE_WAIT

for_each_online_cpu

i

i

raw_smp_processor_id

ret

kernel_thread

stopmachine

void

i

CLONE_KERNEL

ret

stopmachine_num_threads

atomic_read

stopmachine_thread_ack

stopmachine_num_threads

yield

ret

stopmachine_set_state

STOPMACHINE_EXIT

return

ret

preempt_disable

stopmachine_set_state

STOPMACHINE_PREPARE

local_irq_disable

hard_irq_disable

stopmachine_set_state

STOPMACHINE_DISABLE_IRQ

return

static

void

restart_machine

void

stopmachine_set_state

STOPMACHINE_EXIT

local_irq_enable

preempt_enable_no_resched

stop_machine_data

fn

void

void

data

completion

done

static

do_stop

void

_smdata

stop_machine_data

smdata

_smdata

ret

ret

stop_machine

ret

ret

smdata

fn

smdata

data

restart_machine

complete

smdata

done

set_current_state

TASK_INTERRUPTIBLE

kthread_should_stop

schedule

set_current_state

TASK_INTERRUPTIBLE

__set_current_state

TASK_RUNNING

return

ret

task_struct

__stop_machine_run

fn

void

void

data

cpu

stop_machine_data

smdata

task_struct

p

smdata

fn

fn

smdata

data

data

init_completion

smdata

done

down

stopmachine_mutex

cpu

NR_CPUS

cpu

raw_smp_processor_id

p

kthread_create

do_stop

smdata

IS_ERR

p

kthread_bind

p

cpu

wake_up_process

p

wait_for_completion

smdata

done

up

stopmachine_mutex

return

p

stop_machine_run

fn

void

void

data

cpu

task_struct

p

ret

lock_cpu_hotplug

p

__stop_machine_run

fn

data

cpu

IS_ERR

p

ret

kthread_stop

p

ret

PTR_ERR

p

unlock_cpu_hotplug

return

ret

EXPORT_SYMBOL_GPL

stop_machine_run

SET_UNALIGN_CTL

SET_UNALIGN_CTL

a

b

EINVAL

GET_UNALIGN_CTL

GET_UNALIGN_CTL

a

b

EINVAL

SET_FPEMU_CTL

SET_FPEMU_CTL

a

b

EINVAL

GET_FPEMU_CTL

GET_FPEMU_CTL

a

b

EINVAL

SET_FPEXC_CTL

SET_FPEXC_CTL

a

b

EINVAL

GET_FPEXC_CTL

GET_FPEXC_CTL

a

b

EINVAL

GET_ENDIAN

GET_ENDIAN

a

b

EINVAL

SET_ENDIAN

SET_ENDIAN

a

b

EINVAL

overflowuid

DEFAULT_OVERFLOWUID

overflowgid

DEFAULT_OVERFLOWGID

CONFIG_UID16

EXPORT_SYMBOL

overflowuid

EXPORT_SYMBOL

overflowgid

fs_overflowuid

DEFAULT_FS_OVERFLOWUID

fs_overflowgid

DEFAULT_FS_OVERFLOWUID

EXPORT_SYMBOL

fs_overflowuid

EXPORT_SYMBOL

fs_overflowgid

C_A_D

pid

cad_pid

EXPORT_SYMBOL

cad_pid

static

BLOCKING_NOTIFIER_HEAD

reboot_notifier_list

static

notifier_chain_register

notifier_block

nl

notifier_block

n

nl

NULL

n

priority

nl

priority

nl

nl

next

n

next

nl

rcu_assign_pointer

nl

n

return

static

notifier_chain_unregister

notifier_block

nl

notifier_block

n

nl

NULL

nl

n

rcu_assign_pointer

nl

n

next

return

nl

nl

next

return

ENOENT

static

__kprobes

notifier_call_chain

notifier_block

nl

val

void

v

nr_to_call

nr_calls

ret

NOTIFY_DONE

notifier_block

nb

next_nb

nb

rcu_dereference

nl

nb

nr_to_call

next_nb

rcu_dereference

nb

next

ret

nb

notifier_call

nb

val

v

nr_calls

nr_calls

ret

NOTIFY_STOP_MASK

NOTIFY_STOP_MASK

nb

next_nb

nr_to_call

return

ret

atomic_notifier_chain_register

atomic_notifier_head

nh

notifier_block

n

flags

ret

spin_lock_irqsave

nh

lock

flags

ret

notifier_chain_register

nh

head

n

spin_unlock_irqrestore

nh

lock

flags

return

ret

EXPORT_SYMBOL_GPL

atomic_notifier_chain_register

atomic_notifier_chain_unregister

atomic_notifier_head

nh

notifier_block

n

flags

ret

spin_lock_irqsave

nh

lock

flags

ret

notifier_chain_unregister

nh

head

n

spin_unlock_irqrestore

nh

lock

flags

synchronize_rcu

return

ret

EXPORT_SYMBOL_GPL

atomic_notifier_chain_unregister

__kprobes

__atomic_notifier_call_chain

atomic_notifier_head

nh

val

void

v

nr_to_call

nr_calls

ret

rcu_read_lock

ret

notifier_call_chain

nh

head

val

v

nr_to_call

nr_calls

rcu_read_unlock

return

ret

EXPORT_SYMBOL_GPL

__atomic_notifier_call_chain

__kprobes

atomic_notifier_call_chain

atomic_notifier_head

nh

val

void

v

return

__atomic_notifier_call_chain

nh

val

v

NULL

EXPORT_SYMBOL_GPL

atomic_notifier_call_chain

blocking_notifier_chain_register

blocking_notifier_head

nh

notifier_block

n

ret

unlikely

system_state

SYSTEM_BOOTING

return

notifier_chain_register

nh

head

n

down_write

nh

rwsem

ret

notifier_chain_register

nh

head

n

up_write

nh

rwsem

return

ret

EXPORT_SYMBOL_GPL

blocking_notifier_chain_register

blocking_notifier_chain_unregister

blocking_notifier_head

nh

notifier_block

n

ret

unlikely

system_state

SYSTEM_BOOTING

return

notifier_chain_unregister

nh

head

n

down_write

nh

rwsem

ret

notifier_chain_unregister

nh

head

n

up_write

nh

rwsem

return

ret

EXPORT_SYMBOL_GPL

blocking_notifier_chain_unregister

__blocking_notifier_call_chain

blocking_notifier_head

nh

val

void

v

nr_to_call

nr_calls

ret

NOTIFY_DONE

rcu_dereference

nh

head

down_read

nh

rwsem

ret

notifier_call_chain

nh

head

val

v

nr_to_call

nr_calls

up_read

nh

rwsem

return

ret

EXPORT_SYMBOL_GPL

__blocking_notifier_call_chain

blocking_notifier_call_chain

blocking_notifier_head

nh

val

void

v

return

__blocking_notifier_call_chain

nh

val

v

NULL

EXPORT_SYMBOL_GPL

blocking_notifier_call_chain

raw_notifier_chain_register

raw_notifier_head

nh

notifier_block

n

return

notifier_chain_register

nh

head

n

EXPORT_SYMBOL_GPL

raw_notifier_chain_register

raw_notifier_chain_unregister

raw_notifier_head

nh

notifier_block

n

return

notifier_chain_unregister

nh

head

n

EXPORT_SYMBOL_GPL

raw_notifier_chain_unregister

__raw_notifier_call_chain

raw_notifier_head

nh

val

void

v

nr_to_call

nr_calls

return

notifier_call_chain

nh

head

val

v

nr_to_call

nr_calls

EXPORT_SYMBOL_GPL

__raw_notifier_call_chain

raw_notifier_call_chain

raw_notifier_head

nh

val

void

v

return

__raw_notifier_call_chain

nh

val

v

NULL

EXPORT_SYMBOL_GPL

raw_notifier_call_chain

srcu_notifier_chain_register

srcu_notifier_head

nh

notifier_block

n

ret

unlikely

system_state

SYSTEM_BOOTING

return

notifier_chain_register

nh

head

n

mutex_lock

nh

mutex

ret

notifier_chain_register

nh

head

n

mutex_unlock

nh

mutex

return

ret

EXPORT_SYMBOL_GPL

srcu_notifier_chain_register

srcu_notifier_chain_unregister

srcu_notifier_head

nh

notifier_block

n

ret

unlikely

system_state

SYSTEM_BOOTING

return

notifier_chain_unregister

nh

head

n

mutex_lock

nh

mutex

ret

notifier_chain_unregister

nh

head

n

mutex_unlock

nh

mutex

synchronize_srcu

nh

srcu

return

ret

EXPORT_SYMBOL_GPL

srcu_notifier_chain_unregister

__srcu_notifier_call_chain

srcu_notifier_head

nh

val

void

v

nr_to_call

nr_calls

ret

idx

idx

srcu_read_lock

nh

srcu

ret

notifier_call_chain

nh

head

val

v

nr_to_call

nr_calls

srcu_read_unlock

nh

srcu

idx

return

ret

EXPORT_SYMBOL_GPL

__srcu_notifier_call_chain

srcu_notifier_call_chain

srcu_notifier_head

nh

val

void

v

return

__srcu_notifier_call_chain

nh

val

v

NULL

EXPORT_SYMBOL_GPL

srcu_notifier_call_chain

void

srcu_init_notifier_head

srcu_notifier_head

nh

mutex_init

nh

mutex

init_srcu_struct

nh

srcu

BUG

nh

head

NULL

EXPORT_SYMBOL_GPL

srcu_init_notifier_head

register_reboot_notifier

notifier_block

nb

return

blocking_notifier_chain_register

reboot_notifier_list

nb

EXPORT_SYMBOL

register_reboot_notifier

unregister_reboot_notifier

notifier_block

nb

return

blocking_notifier_chain_unregister

reboot_notifier_list

nb

EXPORT_SYMBOL

unregister_reboot_notifier

static

set_one_prio

task_struct

p

niceval

error

no_nice

p

uid

current

euid

p

euid

current

euid

capable

CAP_SYS_NICE

error

EPERM

goto

out

niceval

task_nice

p

can_nice

p

niceval

error

EACCES

goto

out

no_nice

security_task_setnice

p

niceval

no_nice

error

no_nice

goto

out

error

ESRCH

error

set_user_nice

p

niceval

out

return

error

asmlinkage

sys_setpriority

which

who

niceval

task_struct

g

p

user_struct

user

error

EINVAL

pid

pgrp

which

PRIO_USER

which

PRIO_PROCESS

goto

out

error

ESRCH

niceval

niceval

niceval

niceval

read_lock

tasklist_lock

which

case

PRIO_PROCESS

who

p

find_task_by_pid

who

p

current

p

error

set_one_prio

p

niceval

error

case

PRIO_PGRP

who

pgrp

find_pid

who

pgrp

task_pgrp

current

do_each_pid_task

pgrp

PIDTYPE_PGID

p

error

set_one_prio

p

niceval

error

while_each_pid_task

pgrp

PIDTYPE_PGID

p

case

PRIO_USER

user

current

user

who

who

current

uid

who

current

uid

user

find_user

who

goto

out_unlock

do_each_thread

g

p

p

uid

who

error

set_one_prio

p

niceval

error

while_each_thread

g

p

who

current

uid

free_uid

user

out_unlock

read_unlock

tasklist_lock

out

return

error

asmlinkage

sys_getpriority

which

who

task_struct

g

p

user_struct

user

niceval

retval

ESRCH

pid

pgrp

which

PRIO_USER

which

PRIO_PROCESS

return

EINVAL

read_lock

tasklist_lock

which

case

PRIO_PROCESS

who

p

find_task_by_pid

who

p

current

p

niceval

task_nice

p

niceval

retval

retval

niceval

case

PRIO_PGRP

who

pgrp

find_pid

who

pgrp

task_pgrp

current

do_each_pid_task

pgrp

PIDTYPE_PGID

p

niceval

task_nice

p

niceval

retval

retval

niceval

while_each_pid_task

pgrp

PIDTYPE_PGID

p

case

PRIO_USER

user

current

user

who

who

current

uid

who

current

uid

user

find_user

who

goto

out_unlock

do_each_thread

g

p

p

uid

who

niceval

task_nice

p

niceval

retval

retval

niceval

while_each_thread

g

p

who

current

uid

free_uid

user

out_unlock

read_unlock

tasklist_lock

return

retval

void

emergency_restart

void

machine_emergency_restart

EXPORT_SYMBOL_GPL

emergency_restart

static

void

kernel_restart_prepare

cmd

blocking_notifier_call_chain

reboot_notifier_list

SYS_RESTART

cmd

system_state

SYSTEM_RESTART

device_shutdown

void

kernel_restart

cmd

kernel_restart_prepare

cmd

cmd

printk

KERN_EMERG

printk

KERN_EMERG

cmd

machine_restart

cmd

EXPORT_SYMBOL_GPL

kernel_restart

static

void

kernel_kexec

void

CONFIG_KEXEC

kimage

image

image

xchg

kexec_image

NULL

image

return

kernel_restart_prepare

NULL

printk

KERN_EMERG

machine_shutdown

machine_kexec

image

void

kernel_shutdown_prepare

enum

system_states

state

blocking_notifier_call_chain

reboot_notifier_list

state

SYSTEM_HALT

SYS_HALT

SYS_POWER_OFF

NULL

system_state

state

device_shutdown

void

kernel_halt

void

kernel_shutdown_prepare

SYSTEM_HALT

printk

KERN_EMERG

machine_halt

EXPORT_SYMBOL_GPL

kernel_halt

void

kernel_power_off

void

kernel_shutdown_prepare

SYSTEM_POWER_OFF

printk

KERN_EMERG

machine_power_off

EXPORT_SYMBOL_GPL

kernel_power_off

asmlinkage

sys_reboot

magic1

magic2

cmd

void

__user

arg

buffer

capable

CAP_SYS_BOOT

return

EPERM

magic1

LINUX_REBOOT_MAGIC1

magic2

LINUX_REBOOT_MAGIC2

magic2

LINUX_REBOOT_MAGIC2A

magic2

LINUX_REBOOT_MAGIC2B

magic2

LINUX_REBOOT_MAGIC2C

return

EINVAL

cmd

LINUX_REBOOT_CMD_POWER_OFF

pm_power_off

cmd

LINUX_REBOOT_CMD_HALT

lock_kernel

cmd

case

LINUX_REBOOT_CMD_RESTART

kernel_restart

NULL

case

LINUX_REBOOT_CMD_CAD_ON

C_A_D

case

LINUX_REBOOT_CMD_CAD_OFF

C_A_D

case

LINUX_REBOOT_CMD_HALT

kernel_halt

unlock_kernel

do_exit

case

LINUX_REBOOT_CMD_POWER_OFF

kernel_power_off

unlock_kernel

do_exit

case

LINUX_REBOOT_CMD_RESTART2

strncpy_from_user

buffer

arg

sizeof

buffer

unlock_kernel

return

EFAULT

buffer

sizeof

buffer

kernel_restart

buffer

case

LINUX_REBOOT_CMD_KEXEC

kernel_kexec

unlock_kernel

return

EINVAL

CONFIG_SOFTWARE_SUSPEND

case

LINUX_REBOOT_CMD_SW_SUSPEND

ret

hibernate

unlock_kernel

return

ret

default

unlock_kernel

return

EINVAL

unlock_kernel

return

static

void

deferred_cad

work_struct

dummy

kernel_restart

NULL

void

ctrl_alt_del

void

static

DECLARE_WORK

cad_work

deferred_cad

C_A_D

schedule_work

cad_work

kill_cad_pid

SIGINT

asmlinkage

sys_setregid

gid_t

rgid

gid_t

egid

old_rgid

current

gid

old_egid

current

egid

new_rgid

old_rgid

new_egid

old_egid

retval

retval

security_task_setgid

rgid

egid

gid_t

LSM_SETID_RE

retval

return

retval

rgid

gid_t

old_rgid

rgid

current

egid

rgid

capable

CAP_SETGID

new_rgid

rgid

return

EPERM

egid

gid_t

old_rgid

egid

current

egid

egid

current

sgid

egid

capable

CAP_SETGID

new_egid

egid

return

EPERM

new_egid

old_egid

current

mm

dumpable

suid_dumpable

smp_wmb

rgid

gid_t

egid

gid_t

egid

old_rgid

current

sgid

new_egid

current

fsgid

new_egid

current

egid

new_egid

current

gid

new_rgid

key_fsgid_changed

current

proc_id_connector

current

PROC_EVENT_GID

return

asmlinkage

sys_setgid

gid_t

gid

old_egid

current

egid

retval

retval

security_task_setgid

gid

gid_t

gid_t

LSM_SETID_ID

retval

return

retval

capable

CAP_SETGID

old_egid

gid

current

mm

dumpable

suid_dumpable

smp_wmb

current

gid

current

egid

current

sgid

current

fsgid

gid

gid

current

gid

gid

current

sgid

old_egid

gid

current

mm

dumpable

suid_dumpable

smp_wmb

current

egid

current

fsgid

gid

return

EPERM

key_fsgid_changed

current

proc_id_connector

current

PROC_EVENT_GID

return

static

set_user

uid_t

new_ruid

dumpclear

user_struct

new_user

new_user

alloc_uid

new_ruid

new_user

return

EAGAIN

atomic_read

new_user

processes

current

signal

rlim

RLIMIT_NPROC

rlim_cur

new_user

root_user

free_uid

new_user

return

EAGAIN

switch_uid

new_user

dumpclear

current

mm

dumpable

suid_dumpable

smp_wmb

current

uid

new_ruid

return

asmlinkage

sys_setreuid

uid_t

ruid

uid_t

euid

old_ruid

old_euid

old_suid

new_ruid

new_euid

retval

retval

security_task_setuid

ruid

euid

uid_t

LSM_SETID_RE

retval

return

retval

new_ruid

old_ruid

current

uid

new_euid

old_euid

current

euid

old_suid

current

suid

ruid

uid_t

new_ruid

ruid

old_ruid

ruid

current

euid

ruid

capable

CAP_SETUID

return

EPERM

euid

uid_t

new_euid

euid

old_ruid

euid

current

euid

euid

current

suid

euid

capable

CAP_SETUID

return

EPERM

new_ruid

old_ruid

set_user

new_ruid

new_euid

old_euid

return

EAGAIN

new_euid

old_euid

current

mm

dumpable

suid_dumpable

smp_wmb

current

fsuid

current

euid

new_euid

ruid

uid_t

euid

uid_t

euid

old_ruid

current

suid

current

euid

current

fsuid

current

euid

key_fsuid_changed

current

proc_id_connector

current

PROC_EVENT_UID

return

security_task_post_setuid

old_ruid

old_euid

old_suid

LSM_SETID_RE

asmlinkage

sys_setuid

uid_t

uid

old_euid

current

euid

old_ruid

old_suid

new_suid

retval

retval

security_task_setuid

uid

uid_t

uid_t

LSM_SETID_ID

retval

return

retval

old_ruid

current

uid

old_suid

current

suid

new_suid

old_suid

capable

CAP_SETUID

uid

old_ruid

set_user

uid

old_euid

uid

return

EAGAIN

new_suid

uid

uid

current

uid

uid

new_suid

return

EPERM

old_euid

uid

current

mm

dumpable

suid_dumpable

smp_wmb

current

fsuid

current

euid

uid

current

suid

new_suid

key_fsuid_changed

current

proc_id_connector

current

PROC_EVENT_UID

return

security_task_post_setuid

old_ruid

old_euid

old_suid

LSM_SETID_ID

asmlinkage

sys_setresuid

uid_t

ruid

uid_t

euid

uid_t

suid

old_ruid

current

uid

old_euid

current

euid

old_suid

current

suid

retval

retval

security_task_setuid

ruid

euid

suid

LSM_SETID_RES

retval

return

retval

capable

CAP_SETUID

ruid

uid_t

ruid

current

uid

ruid

current

euid

ruid

current

suid

return

EPERM

euid

uid_t

euid

current

uid

euid

current

euid

euid

current

suid

return

EPERM

suid

uid_t

suid

current

uid

suid

current

euid

suid

current

suid

return

EPERM

ruid

uid_t

ruid

current

uid

set_user

ruid

euid

current

euid

return

EAGAIN

euid

uid_t

euid

current

euid

current

mm

dumpable

suid_dumpable

smp_wmb

current

euid

euid

current

fsuid

current

euid

suid

uid_t

current

suid

suid

key_fsuid_changed

current

proc_id_connector

current

PROC_EVENT_UID

return

security_task_post_setuid

old_ruid

old_euid

old_suid

LSM_SETID_RES

asmlinkage

sys_getresuid

uid_t

__user

ruid

uid_t

__user

euid

uid_t

__user

suid

retval

retval

put_user

current

uid

ruid

retval

put_user

current

euid

euid

retval

put_user

current

suid

suid

return

retval

asmlinkage

sys_setresgid

gid_t

rgid

gid_t

egid

gid_t

sgid

retval

retval

security_task_setgid

rgid

egid

sgid

LSM_SETID_RES

retval

return

retval

capable

CAP_SETGID

rgid

gid_t

rgid

current

gid

rgid

current

egid

rgid

current

sgid

return

EPERM

egid

gid_t

egid

current

gid

egid

current

egid

egid

current

sgid

return

EPERM

sgid

gid_t

sgid

current

gid

sgid

current

egid

sgid

current

sgid

return

EPERM

egid

gid_t

egid

current

egid

current

mm

dumpable

suid_dumpable

smp_wmb

current

egid

egid

current

fsgid

current

egid

rgid

gid_t

current

gid

rgid

sgid

gid_t

current

sgid

sgid

key_fsgid_changed

current

proc_id_connector

current

PROC_EVENT_GID

return

asmlinkage

sys_getresgid

gid_t

__user

rgid

gid_t

__user

egid

gid_t

__user

sgid

retval

retval

put_user

current

gid

rgid

retval

put_user

current

egid

egid

retval

put_user

current

sgid

sgid

return

retval

asmlinkage

sys_setfsuid

uid_t

uid

old_fsuid

old_fsuid

current

fsuid

security_task_setuid

uid

uid_t

uid_t

LSM_SETID_FS

return

old_fsuid

uid

current

uid

uid

current

euid

uid

current

suid

uid

current

fsuid

capable

CAP_SETUID

uid

old_fsuid

current

mm

dumpable

suid_dumpable

smp_wmb

current

fsuid

uid

key_fsuid_changed

current

proc_id_connector

current

PROC_EVENT_UID

security_task_post_setuid

old_fsuid

uid_t

uid_t

LSM_SETID_FS

return

old_fsuid

asmlinkage

sys_setfsgid

gid_t

gid

old_fsgid

old_fsgid

current

fsgid

security_task_setgid

gid

gid_t

gid_t

LSM_SETID_FS

return

old_fsgid

gid

current

gid

gid

current

egid

gid

current

sgid

gid

current

fsgid

capable

CAP_SETGID

gid

old_fsgid

current

mm

dumpable

suid_dumpable

smp_wmb

current

fsgid

gid

key_fsgid_changed

current

proc_id_connector

current

PROC_EVENT_GID

return

old_fsgid

asmlinkage

sys_times

tms

__user

tbuf

tbuf

tms

tmp

task_struct

tsk

current

task_struct

t

cputime_t

utime

stime

cutime

cstime

spin_lock_irq

tsk

sighand

siglock

utime

tsk

signal

utime

stime

tsk

signal

stime

t

tsk

utime

cputime_add

utime

t

utime

stime

cputime_add

stime

t

stime

t

next_thread

t

t

tsk

cutime

tsk

signal

cutime

cstime

tsk

signal

cstime

spin_unlock_irq

tsk

sighand

siglock

tmp

tms_utime

cputime_to_clock_t

utime

tmp

tms_stime

cputime_to_clock_t

stime

tmp

tms_cutime

cputime_to_clock_t

cutime

tmp

tms_cstime

cputime_to_clock_t

cstime

copy_to_user

tbuf

tmp

sizeof

tms

return

EFAULT

return

jiffies_64_to_clock_t

get_jiffies_64

asmlinkage

sys_setpgid

pid_t

pid

pid_t

pgid

task_struct

p

task_struct

group_leader

current

group_leader

err

EINVAL

pid

pid

group_leader

pid

pgid

pgid

pid

pgid

return

EINVAL

write_lock_irq

tasklist_lock

err

ESRCH

p

find_task_by_pid

pid

p

goto

out

err

EINVAL

thread_group_leader

p

goto

out

p

real_parent

tgid

group_leader

tgid

err

EPERM

task_session

p

task_session

group_leader

goto

out

err

EACCES

p

did_exec

goto

out

err

ESRCH

p

group_leader

goto

out

err

EPERM

p

signal

leader

goto

out

pgid

pid

task_struct

g

find_task_by_pid_type

PIDTYPE_PGID

pgid

g

task_session

g

task_session

group_leader

goto

out

err

security_task_setpgid

p

pgid

err

goto

out

process_group

p

pgid

detach_pid

p

PIDTYPE_PGID

p

signal

pgrp

pgid

attach_pid

p

PIDTYPE_PGID

find_pid

pgid

err

out

write_unlock_irq

tasklist_lock

return

err

asmlinkage

sys_getpgid

pid_t

pid

pid

return

process_group

current

retval

task_struct

p

read_lock

tasklist_lock

p

find_task_by_pid

pid

retval

ESRCH

p

retval

security_task_getpgid

p

retval

retval

process_group

p

read_unlock

tasklist_lock

return

retval

__ARCH_WANT_SYS_GETPGRP

asmlinkage

sys_getpgrp

void

return

process_group

current

asmlinkage

sys_getsid

pid_t

pid

pid

return

process_session

current

retval

task_struct

p

read_lock

tasklist_lock

p

find_task_by_pid

pid

retval

ESRCH

p

retval

security_task_getsid

p

retval

retval

process_session

p

read_unlock

tasklist_lock

return

retval

asmlinkage

sys_setsid

void

task_struct

group_leader

current

group_leader

pid_t

session

err

EPERM

write_lock_irq

tasklist_lock

group_leader

signal

leader

goto

out

session

group_leader

pid

session

find_task_by_pid_type

PIDTYPE_PGID

session

goto

out

group_leader

signal

leader

__set_special_pids

session

session

spin_lock

group_leader

sighand

siglock

group_leader

signal

tty

NULL

spin_unlock

group_leader

sighand

siglock

err

process_group

group_leader

out

write_unlock_irq

tasklist_lock

return

err

group_info

init_groups

usage

ATOMIC_INIT

group_info

groups_alloc

gidsetsize

group_info

group_info

nblocks

i

nblocks

gidsetsize

NGROUPS_PER_BLOCK

NGROUPS_PER_BLOCK

nblocks

nblocks

group_info

kmalloc

sizeof

group_info

nblocks

sizeof

gid_t

GFP_USER

group_info

return

NULL

group_info

ngroups

gidsetsize

group_info

nblocks

nblocks

atomic_set

group_info

usage

gidsetsize

NGROUPS_SMALL

group_info

blocks

group_info

small_block

i

i

nblocks

i

gid_t

b

b

void

__get_free_page

GFP_USER

b

goto

out_undo_partial_alloc

group_info

blocks

i

b

return

group_info

out_undo_partial_alloc

i

free_page

group_info

blocks

i

kfree

group_info

return

NULL

EXPORT_SYMBOL

groups_alloc

void

groups_free

group_info

group_info

group_info

blocks

group_info

small_block

i

i

i

group_info

nblocks

i

free_page

group_info

blocks

i

kfree

group_info

EXPORT_SYMBOL

groups_free

static

groups_to_user

gid_t

__user

grouplist

group_info

group_info

i

count

group_info

ngroups

i

i

group_info

nblocks

i

cp_count

min

NGROUPS_PER_BLOCK

count

off

i

NGROUPS_PER_BLOCK

len

cp_count

sizeof

grouplist

copy_to_user

grouplist

off

group_info

blocks

i

len

return

EFAULT

count

cp_count

return

static

groups_from_user

group_info

group_info

gid_t

__user

grouplist

i

count

group_info

ngroups

i

i

group_info

nblocks

i

cp_count

min

NGROUPS_PER_BLOCK

count

off

i

NGROUPS_PER_BLOCK

len

cp_count

sizeof

grouplist

copy_from_user

group_info

blocks

i

grouplist

off

len

return

EFAULT

count

cp_count

return

static

void

groups_sort

group_info

group_info

base

max

stride

gidsetsize

group_info

ngroups

stride

stride

gidsetsize

stride

stride

stride

stride

max

gidsetsize

stride

base

base

max

base

left

base

right

left

stride

gid_t

tmp

GROUP_AT

group_info

right

left

GROUP_AT

group_info

left

tmp

GROUP_AT

group_info

right

GROUP_AT

group_info

left

right

left

left

stride

GROUP_AT

group_info

right

tmp

stride

groups_search

group_info

group_info

gid_t

grp

left

right

group_info

return

left

right

group_info

ngroups

left

right

mid

left

right

cmp

grp

GROUP_AT

group_info

mid

cmp

left

mid

cmp

right

mid

return

return

set_current_groups

group_info

group_info

retval

group_info

old_info

retval

security_task_setgroups

group_info

retval

return

retval

groups_sort

group_info

get_group_info

group_info

task_lock

current

old_info

current

group_info

current

group_info

group_info

task_unlock

current

put_group_info

old_info

return

EXPORT_SYMBOL

set_current_groups

asmlinkage

sys_getgroups

gidsetsize

gid_t

__user

grouplist

i

gidsetsize

return

EINVAL

i

current

group_info

ngroups

gidsetsize

i

gidsetsize

i

EINVAL

goto

out

groups_to_user

grouplist

current

group_info

i

EFAULT

goto

out

out

return

i

asmlinkage

sys_setgroups

gidsetsize

gid_t

__user

grouplist

group_info

group_info

retval

capable

CAP_SETGID

return

EPERM

gidsetsize

NGROUPS_MAX

return

EINVAL

group_info

groups_alloc

gidsetsize

group_info

return

ENOMEM

retval

groups_from_user

group_info

grouplist

retval

put_group_info

group_info

return

retval

retval

set_current_groups

group_info

put_group_info

group_info

return

retval

in_group_p

gid_t

grp

retval

grp

current

fsgid

retval

groups_search

current

group_info

grp

return

retval

EXPORT_SYMBOL

in_group_p

in_egroup_p

gid_t

grp

retval

grp

current

egid

retval

groups_search

current

group_info

grp

return

retval

EXPORT_SYMBOL

in_egroup_p

DECLARE_RWSEM

uts_sem

EXPORT_SYMBOL

uts_sem

asmlinkage

sys_newuname

new_utsname

__user

name

errno

down_read

uts_sem

copy_to_user

name

utsname

sizeof

name

errno

EFAULT

up_read

uts_sem

return

errno

asmlinkage

sys_sethostname

__user

name

len

errno

tmp

__NEW_UTS_LEN

capable

CAP_SYS_ADMIN

return

EPERM

len

len

__NEW_UTS_LEN

return

EINVAL

down_write

uts_sem

errno

EFAULT

copy_from_user

tmp

name

len

memcpy

utsname

nodename

tmp

len

utsname

nodename

len

errno

up_write

uts_sem

return

errno

__ARCH_WANT_SYS_GETHOSTNAME

asmlinkage

sys_gethostname

__user

name

len

i

errno

len

return

EINVAL

down_read

uts_sem

i

strlen

utsname

nodename

i

len

i

len

errno

copy_to_user

name

utsname

nodename

i

errno

EFAULT

up_read

uts_sem

return

errno

asmlinkage

sys_setdomainname

__user

name

len

errno

tmp

__NEW_UTS_LEN

capable

CAP_SYS_ADMIN

return

EPERM

len

len

__NEW_UTS_LEN

return

EINVAL

down_write

uts_sem

errno

EFAULT

copy_from_user

tmp

name

len

memcpy

utsname

domainname

tmp

len

utsname

domainname

len

errno

up_write

uts_sem

return

errno

asmlinkage

sys_getrlimit

resource

rlimit

__user

rlim

resource

RLIM_NLIMITS

return

EINVAL

rlimit

value

task_lock

current

group_leader

value

current

signal

rlim

resource

task_unlock

current

group_leader

return

copy_to_user

rlim

value

sizeof

rlim

EFAULT

__ARCH_WANT_SYS_OLD_GETRLIMIT

asmlinkage

sys_old_getrlimit

resource

rlimit

__user

rlim

rlimit

x

resource

RLIM_NLIMITS

return

EINVAL

task_lock

current

group_leader

x

current

signal

rlim

resource

task_unlock

current

group_leader

x

rlim_cur

x7FFFFFFF

x

rlim_cur

x7FFFFFFF

x

rlim_max

x7FFFFFFF

x

rlim_max

x7FFFFFFF

return

copy_to_user

rlim

x

sizeof

x

EFAULT

asmlinkage

sys_setrlimit

resource

rlimit

__user

rlim

rlimit

new_rlim

old_rlim

it_prof_secs

retval

resource

RLIM_NLIMITS

return

EINVAL

copy_from_user

new_rlim

rlim

sizeof

rlim

return

EFAULT

new_rlim

rlim_cur

new_rlim

rlim_max

return

EINVAL

old_rlim

current

signal

rlim

resource

new_rlim

rlim_max

old_rlim

rlim_max

capable

CAP_SYS_RESOURCE

return

EPERM

resource

RLIMIT_NOFILE

new_rlim

rlim_max

NR_OPEN

return

EPERM

retval

security_task_setrlimit

resource

new_rlim

retval

return

retval

resource

RLIMIT_CPU

new_rlim

rlim_cur

new_rlim

rlim_cur

task_lock

current

group_leader

old_rlim

new_rlim

task_unlock

current

group_leader

resource

RLIMIT_CPU

goto

out

new_rlim

rlim_cur

RLIM_INFINITY

goto

out

it_prof_secs

cputime_to_secs

current

signal

it_prof_expires

it_prof_secs

new_rlim

rlim_cur

it_prof_secs

rlim_cur

new_rlim

rlim_cur

cputime_t

cputime

cputime

secs_to_cputime

rlim_cur

read_lock

tasklist_lock

spin_lock_irq

current

sighand

siglock

set_process_cpu_timer

current

CPUCLOCK_PROF

cputime

NULL

spin_unlock_irq

current

sighand

siglock

read_unlock

tasklist_lock

out

return

static

void

k_getrusage

task_struct

p

who

rusage

r

task_struct

t

flags

cputime_t

utime

stime

memset

r

sizeof

r

utime

stime

cputime_zero

rcu_read_lock

lock_task_sighand

p

flags

rcu_read_unlock

return

who

case

RUSAGE_BOTH

case

RUSAGE_CHILDREN

utime

p

signal

cutime

stime

p

signal

cstime

r

ru_nvcsw

p

signal

cnvcsw

r

ru_nivcsw

p

signal

cnivcsw

r

ru_minflt

p

signal

cmin_flt

r

ru_majflt

p

signal

cmaj_flt

r

ru_inblock

p

signal

cinblock

r

ru_oublock

p

signal

coublock

who

RUSAGE_CHILDREN

case

RUSAGE_SELF

utime

cputime_add

utime

p

signal

utime

stime

cputime_add

stime

p

signal

stime

r

ru_nvcsw

p

signal

nvcsw

r

ru_nivcsw

p

signal

nivcsw

r

ru_minflt

p

signal

min_flt

r

ru_majflt

p

signal

maj_flt

r

ru_inblock

p

signal

inblock

r

ru_oublock

p

signal

oublock

t

p

utime

cputime_add

utime

t

utime

stime

cputime_add

stime

t

stime

r

ru_nvcsw

t

nvcsw

r

ru_nivcsw

t

nivcsw

r

ru_minflt

t

min_flt

r

ru_majflt

t

maj_flt

r

ru_inblock

task_io_get_inblock

t

r

ru_oublock

task_io_get_oublock

t

t

next_thread

t

t

p

default

BUG

unlock_task_sighand

p

flags

rcu_read_unlock

cputime_to_timeval

utime

r

ru_utime

cputime_to_timeval

stime

r

ru_stime

getrusage

task_struct

p

who

rusage

__user

ru

rusage

r

k_getrusage

p

who

r

return

copy_to_user

ru

r

sizeof

r

EFAULT

asmlinkage

sys_getrusage

who

rusage

__user

ru

who

RUSAGE_SELF

who

RUSAGE_CHILDREN

return

EINVAL

return

getrusage

current

who

ru

asmlinkage

sys_umask

mask

mask

xchg

current

fs

umask

mask

S_IRWXUGO

return

mask

asmlinkage

sys_prctl

option

arg2

arg3

arg4

arg5

error

error

security_task_prctl

option

arg2

arg3

arg4

arg5

error

return

error

option

case

PR_SET_PDEATHSIG

valid_signal

arg2

error

EINVAL

current

pdeath_signal

arg2

case

PR_GET_PDEATHSIG

error

put_user

current

pdeath_signal

__user

arg2

case

PR_GET_DUMPABLE

error

current

mm

dumpable

case

PR_SET_DUMPABLE

arg2

arg2

error

EINVAL

current

mm

dumpable

arg2

case

PR_SET_UNALIGN

error

SET_UNALIGN_CTL

current

arg2

case

PR_GET_UNALIGN

error

GET_UNALIGN_CTL

current

arg2

case

PR_SET_FPEMU

error

SET_FPEMU_CTL

current

arg2

case

PR_GET_FPEMU

error

GET_FPEMU_CTL

current

arg2

case

PR_SET_FPEXC

error

SET_FPEXC_CTL

current

arg2

case

PR_GET_FPEXC

error

GET_FPEXC_CTL

current

arg2

case

PR_GET_TIMING

error

PR_TIMING_STATISTICAL

case

PR_SET_TIMING

arg2

PR_TIMING_STATISTICAL

error

error

EINVAL

case

PR_GET_KEEPCAPS

current

keep_capabilities

error

case

PR_SET_KEEPCAPS

arg2

arg2

error

EINVAL

current

keep_capabilities

arg2

case

PR_SET_NAME

task_struct

me

current

ncomm

sizeof

me

comm

ncomm

sizeof

me

comm

strncpy_from_user

ncomm

__user

arg2

sizeof

me

comm

return

EFAULT

set_task_comm

me

ncomm

return

case

PR_GET_NAME

task_struct

me

current

tcomm

sizeof

me

comm

get_task_comm

tcomm

me

copy_to_user

__user

arg2

tcomm

sizeof

tcomm

return

EFAULT

return

case

PR_GET_ENDIAN

error

GET_ENDIAN

current

arg2

case

PR_SET_ENDIAN

error

SET_ENDIAN

current

arg2

default

error

EINVAL

return

error

asmlinkage

sys_getcpu

__user

cpup

__user

nodep

getcpu_cache

__user

cache

err

cpu

raw_smp_processor_id

cpup

err

put_user

cpu

cpup

nodep

err

put_user

cpu_to_node

cpu

nodep

cache

t0

t1

get_user

t0

cache

blob

get_user

t1

cache

blob

t0

t1

put_user

t0

cache

blob

put_user

t1

cache

blob

return

err

EFAULT

extern

proc_nr_files

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

CONFIG_X86

CONFIG_SYSCTL

extern

C_A_D

extern

sysctl_overcommit_memory

extern

sysctl_overcommit_ratio

extern

sysctl_panic_on_oom

extern

max_threads

extern

core_uses_pid

extern

suid_dumpable

extern

core_pattern

extern

pid_max

extern

min_free_kbytes

extern

printk_ratelimit_jiffies

extern

printk_ratelimit_burst

extern

pid_max_min

pid_max_max

extern

sysctl_drop_caches

extern

percpu_pagelist_fraction

extern

compat_log

extern

maps_protect

extern

sysctl_stat_interval

static

maxolduid

static

minolduid

static

min_percpu_pagelist_fract

static

ngroups_max

NGROUPS_MAX

CONFIG_KMOD

extern

modprobe_path

CONFIG_CHR_DEV_SG

extern

sg_big_buff

__sparc__

extern

reboot_command

extern

stop_a_enabled

extern

scons_pwroff

__hppa__

extern

pwrsw_enabled

extern

unaligned_enabled

CONFIG_S390

CONFIG_MATHEMU

extern

sysctl_ieee_emulation_warnings

extern

sysctl_userprocess_debug

extern

spin_retry

extern

sysctl_hz_timer

CONFIG_BSD_PROCESS_ACCT

extern

acct_parm

CONFIG_IA64

extern

no_unaligned_warning

CONFIG_RT_MUTEXES

extern

max_lock_depth

CONFIG_SYSCTL_SYSCALL

static

parse_table

__user

void

__user

size_t

__user

void

__user

size_t

ctl_table

CONFIG_PROC_SYSCTL

static

proc_do_cad_pid

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

static

proc_dointvec_taint

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

static

ctl_table

root_table

static

ctl_table_header

root_table_header

root_table

LIST_HEAD_INIT

root_table_header

ctl_entry

static

ctl_table

kern_table

static

ctl_table

vm_table

static

ctl_table

fs_table

static

ctl_table

debug_table

static

ctl_table

dev_table

extern

ctl_table

random_table

CONFIG_UNIX98_PTYS

extern

ctl_table

pty_table

CONFIG_INOTIFY_USER

extern

ctl_table

inotify_table

HAVE_ARCH_PICK_MMAP_LAYOUT

sysctl_legacy_va_layout

static

ctl_table

root_table

ctl_name

CTL_KERN

procname

mode

child

kern_table

ctl_name

CTL_VM

procname

mode

child

vm_table

CONFIG_NET

ctl_name

CTL_NET

procname

mode

child

net_table

ctl_name

CTL_FS

procname

mode

child

fs_table

ctl_name

CTL_DEBUG

procname

mode

child

debug_table

ctl_name

CTL_DEV

procname

mode

child

dev_table

ctl_name

extern

affinity_load_balancing

static

ctl_table

kern_table

ctl_name

KERN_PANIC

procname

data

panic_timeout

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_CORE_USES_PID

procname

data

core_uses_pid

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_CORE_PATTERN

procname

data

core_pattern

maxlen

CORENAME_MAX_SIZE

mode

proc_handler

proc_dostring

strategy

sysctl_string

CONFIG_PROC_SYSCTL

ctl_name

KERN_TAINTED

procname

data

tainted

maxlen

sizeof

mode

proc_handler

proc_dointvec_taint

ctl_name

KERN_CAP_BSET

procname

data

cap_bset

maxlen

sizeof

kernel_cap_t

mode

proc_handler

proc_dointvec_bset

CONFIG_BLK_DEV_INITRD

ctl_name

KERN_REALROOTDEV

procname

data

real_root_dev

maxlen

sizeof

mode

proc_handler

proc_dointvec

__sparc__

ctl_name

KERN_SPARC_REBOOT

procname

data

reboot_command

maxlen

mode

proc_handler

proc_dostring

strategy

sysctl_string

ctl_name

KERN_SPARC_STOP_A

procname

data

stop_a_enabled

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_SPARC_SCONS_PWROFF

procname

data

scons_pwroff

maxlen

sizeof

mode

proc_handler

proc_dointvec

__hppa__

ctl_name

KERN_HPPA_PWRSW

procname

data

pwrsw_enabled

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_HPPA_UNALIGNED

procname

data

unaligned_enabled

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_CTLALTDEL

procname

data

C_A_D

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_PRINTK

procname

data

console_loglevel

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_KMOD

ctl_name

KERN_MODPROBE

procname

data

modprobe_path

maxlen

KMOD_PATH_LEN

mode

proc_handler

proc_dostring

strategy

sysctl_string

CONFIG_HOTPLUG

CONFIG_NET

ctl_name

KERN_HOTPLUG

procname

data

uevent_helper

maxlen

UEVENT_HELPER_PATH_LEN

mode

proc_handler

proc_dostring

strategy

sysctl_string

CONFIG_CHR_DEV_SG

ctl_name

KERN_SG_BIG_BUFF

procname

data

sg_big_buff

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_BSD_PROCESS_ACCT

ctl_name

KERN_ACCT

procname

data

acct_parm

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_MAGIC_SYSRQ

ctl_name

KERN_SYSRQ

procname

data

__sysrq_enabled

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_PROC_SYSCTL

ctl_name

KERN_CADPID

procname

data

NULL

maxlen

sizeof

mode

proc_handler

proc_do_cad_pid

ctl_name

KERN_MAX_THREADS

procname

data

max_threads

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_MODULES

ctl_name

KERN_UNSUPPORTED

procname

data

unsupported

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_RANDOM

procname

mode

child

random_table

CONFIG_UNIX98_PTYS

ctl_name

KERN_PTY

procname

mode

child

pty_table

ctl_name

KERN_OVERFLOWUID

procname

data

overflowuid

maxlen

sizeof

mode

proc_handler

proc_dointvec_minmax

strategy

sysctl_intvec

extra1

minolduid

extra2

maxolduid

ctl_name

KERN_OVERFLOWGID

procname

data

overflowgid

maxlen

sizeof

mode

proc_handler

proc_dointvec_minmax

strategy

sysctl_intvec

extra1

minolduid

extra2

maxolduid

CONFIG_S390

CONFIG_MATHEMU

ctl_name

KERN_IEEE_EMULATION_WARNINGS

procname

data

sysctl_ieee_emulation_warnings

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_NO_IDLE_HZ

ctl_name

KERN_HZ_TIMER

procname

data

sysctl_hz_timer

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_S390_USER_DEBUG_LOGGING

procname

data

sysctl_userprocess_debug

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_PIDMAX

procname

data

pid_max

maxlen

sizeof

mode

proc_handler

proc_dointvec_minmax

strategy

sysctl_intvec

extra1

pid_max_min

extra2

pid_max_max

ctl_name

KERN_PANIC_ON_OOPS

procname

data

panic_on_oops

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_PRINTK_RATELIMIT

procname

data

printk_ratelimit_jiffies

maxlen

sizeof

mode

proc_handler

proc_dointvec_jiffies

strategy

sysctl_jiffies

ctl_name

KERN_PRINTK_RATELIMIT_BURST

procname

data

printk_ratelimit_burst

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_NGROUPS_MAX

procname

data

ngroups_max

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_X86_LOCAL_APIC

CONFIG_X86

ctl_name

KERN_UNKNOWN_NMI_PANIC

procname

data

unknown_nmi_panic

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_XEN

ctl_name

KERN_NMI_WATCHDOG

procname

data

nmi_watchdog_enabled

maxlen

sizeof

mode

proc_handler

proc_nmi_enabled

CONFIG_X86

ctl_name

KERN_PANIC_ON_NMI

procname

data

panic_on_unrecovered_nmi

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_BOOTLOADER_TYPE

procname

data

bootloader_type

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

CTL_UNNUMBERED

procname

data

kstack_depth_to_print

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_MMU

ctl_name

KERN_RANDOMIZE

procname

data

randomize_va_space

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

KERN_SETUID_DUMPABLE

procname

data

suid_dumpable

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_S390

CONFIG_SMP

ctl_name

KERN_SPIN_RETRY

procname

data

spin_retry

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_ACPI_SLEEP

ctl_name

KERN_ACPI_VIDEO_FLAGS

procname

data

acpi_video_flags

maxlen

sizeof

mode

proc_handler

proc_doulongvec_minmax

CONFIG_IA64

ctl_name

KERN_IA64_UNALIGNED

procname

data

no_unaligned_warning

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_COMPAT

ctl_name

KERN_COMPAT_LOG

procname

data

compat_log

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_RT_MUTEXES

ctl_name

KERN_MAX_LOCK_DEPTH

procname

data

max_lock_depth

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_PROC_FS

ctl_name

CTL_UNNUMBERED

procname

data

maps_protect

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

static

zero

static

one_hundred

static

ctl_table

vm_table

ctl_name

VM_OVERCOMMIT_MEMORY

procname

data

sysctl_overcommit_memory

maxlen

sizeof

sysctl_overcommit_memory

mode

proc_handler

proc_dointvec

ctl_name

VM_PANIC_ON_OOM

procname

data

sysctl_panic_on_oom

maxlen

sizeof

sysctl_panic_on_oom

mode

proc_handler

proc_dointvec

ctl_name

VM_OVERCOMMIT_RATIO

procname

data

sysctl_overcommit_ratio

maxlen

sizeof

sysctl_overcommit_ratio

mode

proc_handler

proc_dointvec

ctl_name

VM_PAGE_CLUSTER

procname

data

page_cluster

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

VM_DIRTY_BACKGROUND

procname

data

dirty_background_ratio

maxlen

sizeof

dirty_background_ratio

mode

proc_handler

proc_dointvec_minmax

strategy

sysctl_intvec

extra1

zero

extra2

one_hundred

ctl_name

VM_DIRTY_RATIO

procname

data

vm_dirty_ratio

maxlen

sizeof

vm_dirty_ratio

mode

proc_handler

proc_dointvec_minmax

strategy

sysctl_intvec

extra1

zero

extra2

one_hundred

ctl_name

VM_DIRTY_WB_CS

procname

data

dirty_writeback_interval

maxlen

sizeof

dirty_writeback_interval

mode

proc_handler

dirty_writeback_centisecs_handler

ctl_name

VM_DIRTY_EXPIRE_CS

procname

data

dirty_expire_interval

maxlen

sizeof

dirty_expire_interval

mode

proc_handler

proc_dointvec_userhz_jiffies

ctl_name

VM_NR_PDFLUSH_THREADS

procname

data

nr_pdflush_threads

maxlen

sizeof

nr_pdflush_threads

mode

proc_handler

proc_dointvec

ctl_name

VM_SWAPPINESS

procname

data

vm_swappiness

maxlen

sizeof

vm_swappiness

mode

proc_handler

proc_dointvec_minmax

strategy

sysctl_intvec

extra1

zero

extra2

one_hundred

CONFIG_HUGETLB_PAGE

ctl_name

VM_HUGETLB_PAGES

procname

data

max_huge_pages

maxlen

sizeof

mode

proc_handler

hugetlb_sysctl_handler

extra1

void

hugetlb_zero

extra2

void

hugetlb_infinity

ctl_name

VM_HUGETLB_GROUP

procname

data

sysctl_hugetlb_shm_group

maxlen

sizeof

gid_t

mode

proc_handler

proc_dointvec

ctl_name

VM_LOWMEM_RESERVE_RATIO

procname

data

sysctl_lowmem_reserve_ratio

maxlen

sizeof

sysctl_lowmem_reserve_ratio

mode

proc_handler

lowmem_reserve_ratio_sysctl_handler

strategy

sysctl_intvec

ctl_name

VM_DROP_PAGECACHE

procname

data

sysctl_drop_caches

maxlen

sizeof

mode

proc_handler

drop_caches_sysctl_handler

strategy

sysctl_intvec

ctl_name

VM_MIN_FREE_KBYTES

procname

data

min_free_kbytes

maxlen

sizeof

min_free_kbytes

mode

proc_handler

min_free_kbytes_sysctl_handler

strategy

sysctl_intvec

extra1

zero

ctl_name

VM_PERCPU_PAGELIST_FRACTION

procname

data

percpu_pagelist_fraction

maxlen

sizeof

percpu_pagelist_fraction

mode

proc_handler

percpu_pagelist_fraction_sysctl_handler

strategy

sysctl_intvec

extra1

min_percpu_pagelist_fract

CONFIG_MMU

ctl_name

VM_MAX_MAP_COUNT

procname

data

sysctl_max_map_count

maxlen

sizeof

sysctl_max_map_count

mode

proc_handler

proc_dointvec

ctl_name

VM_LAPTOP_MODE

procname

data

laptop_mode

maxlen

sizeof

laptop_mode

mode

proc_handler

proc_dointvec_jiffies

strategy

sysctl_jiffies

ctl_name

VM_BLOCK_DUMP

procname

data

block_dump

maxlen

sizeof

block_dump

mode

proc_handler

proc_dointvec

strategy

sysctl_intvec

extra1

zero

ctl_name

VM_VFS_CACHE_PRESSURE

procname

data

sysctl_vfs_cache_pressure

maxlen

sizeof

sysctl_vfs_cache_pressure

mode

proc_handler

proc_dointvec

strategy

sysctl_intvec

extra1

zero

HAVE_ARCH_PICK_MMAP_LAYOUT

ctl_name

VM_LEGACY_VA_LAYOUT

procname

data

sysctl_legacy_va_layout

maxlen

sizeof

sysctl_legacy_va_layout

mode

proc_handler

proc_dointvec

strategy

sysctl_intvec

extra1

zero

CONFIG_NUMA

ctl_name

VM_ZONE_RECLAIM_MODE

procname

data

zone_reclaim_mode

maxlen

sizeof

zone_reclaim_mode

mode

proc_handler

proc_dointvec

strategy

sysctl_intvec

extra1

zero

ctl_name

VM_MIN_UNMAPPED

procname

data

sysctl_min_unmapped_ratio

maxlen

sizeof

sysctl_min_unmapped_ratio

mode

proc_handler

sysctl_min_unmapped_ratio_sysctl_handler

strategy

sysctl_intvec

extra1

zero

extra2

one_hundred

ctl_name

VM_MIN_SLAB

procname

data

sysctl_min_slab_ratio

maxlen

sizeof

sysctl_min_slab_ratio

mode

proc_handler

sysctl_min_slab_ratio_sysctl_handler

strategy

sysctl_intvec

extra1

zero

extra2

one_hundred

CONFIG_SMP

ctl_name

CTL_UNNUMBERED

procname

data

sysctl_stat_interval

maxlen

sizeof

sysctl_stat_interval

mode

proc_handler

proc_dointvec_jiffies

strategy

sysctl_jiffies

CONFIG_X86_32

CONFIG_SUPERH

CONFIG_VSYSCALL

ctl_name

VM_VDSO_ENABLED

procname

data

vdso_enabled

maxlen

sizeof

vdso_enabled

mode

proc_handler

proc_dointvec

strategy

sysctl_intvec

extra1

zero

CONFIG_SMP

ctl_name

procname

data

affinity_load_balancing

maxlen

sizeof

affinity_load_balancing

mode

proc_handler

proc_dointvec

ctl_name

CONFIG_BINFMT_MISC

CONFIG_BINFMT_MISC_MODULE

static

ctl_table

binfmt_misc_table

ctl_name

static

ctl_table

fs_table

ctl_name

FS_NRINODE

procname

data

inodes_stat

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

FS_STATINODE

procname

data

inodes_stat

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

FS_NRFILE

procname

data

files_stat

maxlen

sizeof

mode

proc_handler

proc_nr_files

ctl_name

FS_MAXFILE

procname

data

files_stat

max_files

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

FS_DENTRY

procname

data

dentry_stat

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

FS_OVERFLOWUID

procname

data

fs_overflowuid

maxlen

sizeof

mode

proc_handler

proc_dointvec_minmax

strategy

sysctl_intvec

extra1

minolduid

extra2

maxolduid

ctl_name

FS_OVERFLOWGID

procname

data

fs_overflowgid

maxlen

sizeof

mode

proc_handler

proc_dointvec_minmax

strategy

sysctl_intvec

extra1

minolduid

extra2

maxolduid

ctl_name

FS_LEASES

procname

data

leases_enable

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_DNOTIFY

ctl_name

FS_DIR_NOTIFY

procname

data

dir_notify_enable

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_MMU

ctl_name

FS_LEASE_TIME

procname

data

lease_break_time

maxlen

sizeof

mode

proc_handler

proc_dointvec

ctl_name

FS_AIO_NR

procname

data

aio_nr

maxlen

sizeof

aio_nr

mode

proc_handler

proc_doulongvec_minmax

ctl_name

FS_AIO_MAX_NR

procname

data

aio_max_nr

maxlen

sizeof

aio_max_nr

mode

proc_handler

proc_doulongvec_minmax

CONFIG_INOTIFY_USER

ctl_name

FS_INOTIFY

procname

mode

child

inotify_table

ctl_name

KERN_SETUID_DUMPABLE

procname

data

suid_dumpable

maxlen

sizeof

mode

proc_handler

proc_dointvec

CONFIG_BINFMT_MISC

CONFIG_BINFMT_MISC_MODULE

ctl_name

CTL_UNNUMBERED

procname

mode

child

binfmt_misc_table

ctl_name

static

ctl_table

debug_table

ctl_name

static

ctl_table

dev_table

ctl_name

static

DEFINE_SPINLOCK

sysctl_lock

static

use_table

ctl_table_header

p

unlikely

p

unregistering

return

p

used

return

static

void

unuse_table

ctl_table_header

p

p

used

unlikely

p

unregistering

complete

p

unregistering

static

void

start_unregistering

ctl_table_header

p

unlikely

p

used

completion

wait

init_completion

wait

p

unregistering

wait

spin_unlock

sysctl_lock

wait_for_completion

wait

spin_lock

sysctl_lock

list_del_init

p

ctl_entry

void

sysctl_head_finish

ctl_table_header

head

head

return

spin_lock

sysctl_lock

unuse_table

head

spin_unlock

sysctl_lock

ctl_table_header

sysctl_head_next

ctl_table_header

prev

ctl_table_header

head

list_head

tmp

spin_lock

sysctl_lock

prev

tmp

prev

ctl_entry

unuse_table

prev

goto

next

tmp

root_table_header

ctl_entry

head

list_entry

tmp

ctl_table_header

ctl_entry

use_table

head

goto

next

spin_unlock

sysctl_lock

return

head

next

tmp

tmp

next

tmp

root_table_header

ctl_entry

spin_unlock

sysctl_lock

return

NULL

sysctl_pathname

ctl_table

table

buffer

buflen

buflen

return

NULL

buffer

buflen

buffer

table

namelen

strlen

table

procname

buflen

namelen

return

NULL

buflen

namelen

buffer

namelen

memcpy

buffer

table

procname

namelen

buffer

table

table

parent

buflen

return

NULL

buffer

memcpy

buffer

return

buffer

EXPORT_SYMBOL

sysctl_pathname

CONFIG_SYSCTL_SYSCALL

do_sysctl

__user

name

nlen

void

__user

oldval

size_t

__user

oldlenp

void

__user

newval

size_t

newlen

ctl_table_header

head

error

ENOTDIR

nlen

nlen

CTL_MAXNAME

return

ENOTDIR

oldval

old_len

oldlenp

get_user

old_len

oldlenp

return

EFAULT

head

sysctl_head_next

NULL

head

head

sysctl_head_next

head

error

parse_table

name

nlen

oldval

oldlenp

newval

newlen

head

ctl_table

error

ENOTDIR

sysctl_head_finish

head

return

error

asmlinkage

sys_sysctl

__sysctl_args

__user

args

__sysctl_args

tmp

error

copy_from_user

tmp

args

sizeof

tmp

return

EFAULT

lock_kernel

error

do_sysctl

tmp

name

tmp

nlen

tmp

oldval

tmp

oldlenp

tmp

newval

tmp

newlen

unlock_kernel

return

error

static

test_perm

mode

op

current

euid

mode

in_egroup_p

mode

mode

op

op

return

return

EACCES

sysctl_perm

ctl_table

table

op

error

error

security_sysctl

table

op

error

return

error

return

test_perm

table

mode

op

CONFIG_SYSCTL_SYSCALL

static

parse_table

__user

name

nlen

void

__user

oldval

size_t

__user

oldlenp

void

__user

newval

size_t

newlen

ctl_table

table

n

repeat

nlen

return

ENOTDIR

get_user

n

name

return

EFAULT

table

ctl_name

table

procname

table

table

ctl_name

n

table

ctl_name

error

table

child

sysctl_perm

table

return

EPERM

name

nlen

table

table

child

goto

repeat

error

do_sysctl_strategy

table

name

nlen

oldval

oldlenp

newval

newlen

return

error

return

ENOTDIR

do_sysctl_strategy

ctl_table

table

__user

name

nlen

void

__user

oldval

size_t

__user

oldlenp

void

__user

newval

size_t

newlen

op

rc

size_t

len

oldval

op

newval

op

sysctl_perm

table

op

return

EPERM

table

strategy

rc

table

strategy

table

name

nlen

oldval

oldlenp

newval

newlen

rc

return

rc

rc

return

table

data

table

maxlen

oldval

oldlenp

get_user

len

oldlenp

return

EFAULT

len

len

table

maxlen

len

table

maxlen

copy_to_user

oldval

table

data

len

return

EFAULT

put_user

len

oldlenp

return

EFAULT

newval

newlen

len

newlen

len

table

maxlen

len

table

maxlen

copy_from_user

table

data

newval

len

return

EFAULT

return

static

void

sysctl_set_parent

ctl_table

parent

ctl_table

table

table

ctl_name

table

procname

table

table

parent

parent

table

child

sysctl_set_parent

table

table

child

static

__init

sysctl_init

void

sysctl_set_parent

NULL

root_table

return

core_initcall

sysctl_init

ctl_table_header

register_sysctl_table

ctl_table

table

ctl_table_header

tmp

tmp

kmalloc

sizeof

ctl_table_header

GFP_KERNEL

tmp

return

NULL

tmp

ctl_table

table

INIT_LIST_HEAD

tmp

ctl_entry

tmp

used

tmp

unregistering

NULL

sysctl_set_parent

NULL

table

spin_lock

sysctl_lock

list_add_tail

tmp

ctl_entry

root_table_header

ctl_entry

spin_unlock

sysctl_lock

return

tmp

void

unregister_sysctl_table

ctl_table_header

header

might_sleep

spin_lock

sysctl_lock

start_unregistering

header

spin_unlock

sysctl_lock

kfree

header

ctl_table_header

register_sysctl_table

ctl_table

table

return

NULL

void

unregister_sysctl_table

ctl_table_header

table

CONFIG_PROC_SYSCTL

static

_proc_do_string

void

data

maxlen

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

size_t

len

__user

p

c

data

maxlen

lenp

lenp

return

write

len

p

buffer

len

lenp

get_user

c

p

return

EFAULT

c

c

len

len

maxlen

len

maxlen

copy_from_user

data

buffer

len

return

EFAULT

data

len

ppos

lenp

len

strlen

data

len

maxlen

len

maxlen

ppos

len

lenp

return

data

ppos

len

ppos

len

lenp

len

lenp

len

copy_to_user

buffer

data

len

return

EFAULT

len

lenp

put_user

__user

buffer

len

return

EFAULT

len

lenp

len

ppos

len

return

proc_dostring

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

_proc_do_string

table

data

table

maxlen

write

filp

buffer

lenp

ppos

static

do_proc_dointvec_conv

negp

lvalp

valp

write

void

data

write

valp

negp

lvalp

lvalp

val

valp

val

negp

lvalp

val

negp

lvalp

val

return

static

__do_proc_dointvec

void

tbl_data

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

conv

negp

lvalp

valp

write

void

data

void

data

TMPBUFLEN

i

vleft

first

neg

val

lval

size_t

left

len

buf

TMPBUFLEN

p

__user

s

buffer

tbl_data

table

maxlen

lenp

ppos

write

lenp

return

i

tbl_data

vleft

table

maxlen

sizeof

i

left

lenp

conv

conv

do_proc_dointvec_conv

left

vleft

i

first

write

left

c

get_user

c

s

return

EFAULT

isspace

c

left

s

left

neg

len

left

len

sizeof

buf

len

sizeof

buf

copy_from_user

buf

s

len

return

EFAULT

buf

len

p

buf

p

left

neg

p

p

p

lval

simple_strtoul

p

p

len

p

buf

len

left

p

isspace

p

neg

val

val

s

len

left

len

conv

neg

lval

i

data

p

buf

first

p

conv

neg

lval

i

data

sprintf

p

neg

lval

len

strlen

buf

len

left

len

left

copy_to_user

s

buf

len

return

EFAULT

left

len

s

len

write

first

left

put_user

s

return

EFAULT

left

s

write

left

c

get_user

c

s

return

EFAULT

isspace

c

left

write

first

return

EINVAL

lenp

left

ppos

lenp

return

undef

TMPBUFLEN

static

do_proc_dointvec

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

conv

negp

lvalp

valp

write

void

data

void

data

return

__do_proc_dointvec

table

data

table

write

filp

buffer

lenp

ppos

conv

data

proc_dointvec

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

do_proc_dointvec

table

write

filp

buffer

lenp

ppos

NULL

NULL

OP_SET

OP_AND

OP_OR

static

do_proc_dointvec_bset_conv

negp

lvalp

valp

write

void

data

op

data

write

val

negp

lvalp

lvalp

op

case

OP_SET

valp

val

case

OP_AND

valp

val

case

OP_OR

valp

val

val

valp

val

negp

lvalp

val

negp

lvalp

val

return

proc_dointvec_bset

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

op

write

capable

CAP_SYS_MODULE

return

EPERM

op

is_init

current

OP_SET

OP_AND

return

do_proc_dointvec

table

write

filp

buffer

lenp

ppos

do_proc_dointvec_bset_conv

op

static

proc_dointvec_taint

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

op

write

capable

CAP_SYS_ADMIN

return

EPERM

op

OP_OR

return

do_proc_dointvec

table

write

filp

buffer

lenp

ppos

do_proc_dointvec_bset_conv

op

do_proc_dointvec_minmax_conv_param

min

max

static

do_proc_dointvec_minmax_conv

negp

lvalp

valp

write

void

data

do_proc_dointvec_minmax_conv_param

param

data

write

val

negp

lvalp

lvalp

param

min

param

min

val

param

max

param

max

val

return

EINVAL

valp

val

val

valp

val

negp

lvalp

val

negp

lvalp

val

return

proc_dointvec_minmax

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

do_proc_dointvec_minmax_conv_param

param

min

table

extra1

max

table

extra2

return

do_proc_dointvec

table

write

filp

buffer

lenp

ppos

do_proc_dointvec_minmax_conv

param

static

__do_proc_doulongvec_minmax

void

data

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

convmul

convdiv

TMPBUFLEN

i

min

max

val

vleft

first

neg

size_t

len

left

buf

TMPBUFLEN

p

__user

s

buffer

data

table

maxlen

lenp

ppos

write

lenp

return

i

data

min

table

extra1

max

table

extra2

vleft

table

maxlen

sizeof

left

lenp

left

vleft

i

min

max

first

write

left

c

get_user

c

s

return

EFAULT

isspace

c

left

s

left

neg

len

left

len

TMPBUFLEN

len

TMPBUFLEN

copy_from_user

buf

s

len

return

EFAULT

buf

len

p

buf

p

left

neg

p

p

p

val

simple_strtoul

p

p

convmul

convdiv

len

p

buf

len

left

p

isspace

p

neg

val

val

s

len

left

len

neg

min

val

min

max

val

max

i

val

p

buf

first

p

sprintf

p

convdiv

i

convmul

len

strlen

buf

len

left

len

left

copy_to_user

s

buf

len

return

EFAULT

left

len

s

len

write

first

left

put_user

s

return

EFAULT

left

s

write

left

c

get_user

c

s

return

EFAULT

isspace

c

left

write

first

return

EINVAL

lenp

left

ppos

lenp

return

undef

TMPBUFLEN

static

do_proc_doulongvec_minmax

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

convmul

convdiv

return

__do_proc_doulongvec_minmax

table

data

table

write

filp

buffer

lenp

ppos

convmul

convdiv

proc_doulongvec_minmax

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

do_proc_doulongvec_minmax

table

write

filp

buffer

lenp

ppos

l

l

proc_doulongvec_ms_jiffies_minmax

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

do_proc_doulongvec_minmax

table

write

filp

buffer

lenp

ppos

HZ

l

static

do_proc_dointvec_jiffies_conv

negp

lvalp

valp

write

void

data

write

lvalp

LONG_MAX

HZ

return

valp

negp

lvalp

HZ

lvalp

HZ

val

valp

lval

val

negp

lval

val

negp

lval

val

lvalp

lval

HZ

return

static

do_proc_dointvec_userhz_jiffies_conv

negp

lvalp

valp

write

void

data

write

USER_HZ

HZ

lvalp

LONG_MAX

HZ

USER_HZ

return

valp

clock_t_to_jiffies

negp

lvalp

lvalp

val

valp

lval

val

negp

lval

val

negp

lval

val

lvalp

jiffies_to_clock_t

lval

return

static

do_proc_dointvec_ms_jiffies_conv

negp

lvalp

valp

write

void

data

write

valp

msecs_to_jiffies

negp

lvalp

lvalp

val

valp

lval

val

negp

lval

val

negp

lval

val

lvalp

jiffies_to_msecs

lval

return

proc_dointvec_jiffies

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

do_proc_dointvec

table

write

filp

buffer

lenp

ppos

do_proc_dointvec_jiffies_conv

NULL

proc_dointvec_userhz_jiffies

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

do_proc_dointvec

table

write

filp

buffer

lenp

ppos

do_proc_dointvec_userhz_jiffies_conv

NULL

proc_dointvec_ms_jiffies

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

do_proc_dointvec

table

write

filp

buffer

lenp

ppos

do_proc_dointvec_ms_jiffies_conv

NULL

static

proc_do_cad_pid

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

pid

new_pid

pid_t

tmp

r

tmp

pid_nr

cad_pid

r

__do_proc_dointvec

tmp

table

write

filp

buffer

lenp

ppos

NULL

NULL

r

write

return

r

new_pid

find_get_pid

tmp

new_pid

return

ESRCH

put_pid

xchg

cad_pid

new_pid

return

proc_dostring

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

ENOSYS

proc_dointvec

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

ENOSYS

proc_dointvec_bset

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

ENOSYS

proc_dointvec_minmax

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

ENOSYS

proc_dointvec_jiffies

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

ENOSYS

proc_dointvec_userhz_jiffies

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

ENOSYS

proc_dointvec_ms_jiffies

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

ENOSYS

proc_doulongvec_minmax

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

ENOSYS

proc_doulongvec_ms_jiffies_minmax

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

return

ENOSYS

CONFIG_SYSCTL_SYSCALL

sysctl_string

ctl_table

table

__user

name

nlen

void

__user

oldval

size_t

__user

oldlenp

void

__user

newval

size_t

newlen

table

data

table

maxlen

return

ENOTDIR

oldval

oldlenp

size_t

bufsize

get_user

bufsize

oldlenp

return

EFAULT

bufsize

size_t

len

strlen

table

data

copied

len

table

maxlen

len

table

maxlen

copied

len

bufsize

bufsize

len

copy_to_user

oldval

table

data

copied

put_user

__user

oldval

copied

return

EFAULT

put_user

len

oldlenp

return

EFAULT

newval

newlen

size_t

len

newlen

len

table

maxlen

len

table

maxlen

copy_from_user

table

data

newval

len

return

EFAULT

len

table

maxlen

len

table

data

len

return

sysctl_intvec

ctl_table

table

__user

name

nlen

void

__user

oldval

size_t

__user

oldlenp

void

__user

newval

size_t

newlen

newval

newlen

__user

vec

__user

newval

min

table

extra1

max

table

extra2

size_t

length

i

newlen

sizeof

return

EINVAL

table

extra1

table

extra2

return

newlen

table

maxlen

newlen

table

maxlen

length

newlen

sizeof

i

i

length

i

value

get_user

value

vec

i

return

EFAULT

min

value

min

i

return

EINVAL

max

value

max

i

return

EINVAL

return

sysctl_jiffies

ctl_table

table

__user

name

nlen

void

__user

oldval

size_t

__user

oldlenp

void

__user

newval

size_t

newlen

oldval

oldlenp

size_t

olen

get_user

olen

oldlenp

return

EFAULT

olen

val

olen

sizeof

return

EINVAL

val

table

data

HZ

put_user

val

__user

oldval

return

EFAULT

put_user

sizeof

oldlenp

return

EFAULT

newval

newlen

new

newlen

sizeof

return

EINVAL

get_user

new

__user

newval

return

EFAULT

table

data

new

HZ

return

sysctl_ms_jiffies

ctl_table

table

__user

name

nlen

void

__user

oldval

size_t

__user

oldlenp

void

__user

newval

size_t

newlen

oldval

oldlenp

size_t

olen

get_user

olen

oldlenp

return

EFAULT

olen

val

olen

sizeof

return

EINVAL

val

jiffies_to_msecs

table

data

put_user

val

__user

oldval

return

EFAULT

put_user

sizeof

oldlenp

return

EFAULT

newval

newlen

new

newlen

sizeof

return

EINVAL

get_user

new

__user

newval

return

EFAULT

table

data

msecs_to_jiffies

new

return

asmlinkage

sys_sysctl

__sysctl_args

__user

args

static

msg_count

__sysctl_args

tmp

name

CTL_MAXNAME

i

copy_from_user

tmp

args

sizeof

tmp

return

EFAULT

tmp

nlen

tmp

nlen

CTL_MAXNAME

return

ENOTDIR

i

i

tmp

nlen

i

get_user

name

i

tmp

name

i

return

EFAULT

tmp

nlen

name

CTL_KERN

name

KERN_VERSION

goto

out

msg_count

msg_count

printk

KERN_INFO

current

comm

i

i

tmp

nlen

i

printk

name

i

printk

out

return

ENOSYS

sysctl_string

ctl_table

table

__user

name

nlen

void

__user

oldval

size_t

__user

oldlenp

void

__user

newval

size_t

newlen

return

ENOSYS

sysctl_intvec

ctl_table

table

__user

name

nlen

void

__user

oldval

size_t

__user

oldlenp

void

__user

newval

size_t

newlen

return

ENOSYS

sysctl_jiffies

ctl_table

table

__user

name

nlen

void

__user

oldval

size_t

__user

oldlenp

void

__user

newval

size_t

newlen

return

ENOSYS

sysctl_ms_jiffies

ctl_table

table

__user

name

nlen

void

__user

oldval

size_t

__user

oldlenp

void

__user

newval

size_t

newlen

return

ENOSYS

EXPORT_SYMBOL

proc_dointvec

EXPORT_SYMBOL

proc_dointvec_jiffies

EXPORT_SYMBOL

proc_dointvec_minmax

EXPORT_SYMBOL

proc_dointvec_userhz_jiffies

EXPORT_SYMBOL

proc_dointvec_ms_jiffies

EXPORT_SYMBOL

proc_dostring

EXPORT_SYMBOL

proc_doulongvec_minmax

EXPORT_SYMBOL

proc_doulongvec_ms_jiffies_minmax

EXPORT_SYMBOL

register_sysctl_table

EXPORT_SYMBOL

sysctl_intvec

EXPORT_SYMBOL

sysctl_jiffies

EXPORT_SYMBOL

sysctl_ms_jiffies

EXPORT_SYMBOL

sysctl_string

EXPORT_SYMBOL

unregister_sysctl_table

asmlinkage

sys_ni_syscall

void

return

ENOSYS

cond_syscall

sys_nfsservctl

cond_syscall

sys_quotactl

cond_syscall

sys_acct

cond_syscall

sys_lookup_dcookie

cond_syscall

sys_swapon

cond_syscall

sys_swapoff

cond_syscall

sys_kexec_load

cond_syscall

compat_sys_kexec_load

cond_syscall

sys_init_module

cond_syscall

sys_delete_module

cond_syscall

sys_socketpair

cond_syscall

sys_bind

cond_syscall

sys_listen

cond_syscall

sys_accept

cond_syscall

sys_connect

cond_syscall

sys_getsockname

cond_syscall

sys_getpeername

cond_syscall

sys_sendto

cond_syscall

sys_send

cond_syscall

sys_recvfrom

cond_syscall

sys_recv

cond_syscall

sys_socket

cond_syscall

sys_setsockopt

cond_syscall

sys_getsockopt

cond_syscall

sys_shutdown

cond_syscall

sys_sendmsg

cond_syscall

sys_recvmsg

cond_syscall

sys_socketcall

cond_syscall

sys_futex

cond_syscall

compat_sys_futex

cond_syscall

sys_set_robust_list

cond_syscall

compat_sys_set_robust_list

cond_syscall

sys_get_robust_list

cond_syscall

compat_sys_get_robust_list

cond_syscall

sys_epoll_create

cond_syscall

sys_epoll_ctl

cond_syscall

sys_epoll_wait

cond_syscall

sys_epoll_pwait

cond_syscall

sys_semget

cond_syscall

sys_semop

cond_syscall

sys_semtimedop

cond_syscall

sys_semctl

cond_syscall

sys_msgget

cond_syscall

sys_msgsnd

cond_syscall

sys_msgrcv

cond_syscall

sys_msgctl

cond_syscall

sys_shmget

cond_syscall

sys_shmat

cond_syscall

sys_shmdt

cond_syscall

sys_shmctl

cond_syscall

sys_mq_open

cond_syscall

sys_mq_unlink

cond_syscall

sys_mq_timedsend

cond_syscall

sys_mq_timedreceive

cond_syscall

sys_mq_notify

cond_syscall

sys_mq_getsetattr

cond_syscall

compat_sys_mq_open

cond_syscall

compat_sys_mq_timedsend

cond_syscall

compat_sys_mq_timedreceive

cond_syscall

compat_sys_mq_notify

cond_syscall

compat_sys_mq_getsetattr

cond_syscall

sys_mbind

cond_syscall

sys_get_mempolicy

cond_syscall

sys_set_mempolicy

cond_syscall

compat_sys_mbind

cond_syscall

compat_sys_get_mempolicy

cond_syscall

compat_sys_set_mempolicy

cond_syscall

sys_add_key

cond_syscall

sys_request_key

cond_syscall

sys_keyctl

cond_syscall

compat_sys_keyctl

cond_syscall

compat_sys_socketcall

cond_syscall

sys_inotify_init

cond_syscall

sys_inotify_add_watch

cond_syscall

sys_inotify_rm_watch

cond_syscall

sys_migrate_pages

cond_syscall

sys_move_pages

cond_syscall

sys_chown16

cond_syscall

sys_fchown16

cond_syscall

sys_getegid16

cond_syscall

sys_geteuid16

cond_syscall

sys_getgid16

cond_syscall

sys_getgroups16

cond_syscall

sys_getresgid16

cond_syscall

sys_getresuid16

cond_syscall

sys_getuid16

cond_syscall

sys_lchown16

cond_syscall

sys_setfsgid16

cond_syscall

sys_setfsuid16

cond_syscall

sys_setgid16

cond_syscall

sys_setgroups16

cond_syscall

sys_setregid16

cond_syscall

sys_setresgid16

cond_syscall

sys_setresuid16

cond_syscall

sys_setreuid16

cond_syscall

sys_setuid16

cond_syscall

sys_vm86old

cond_syscall

sys_vm86

cond_syscall

compat_sys_ipc

cond_syscall

compat_sys_sysctl

cond_syscall

sys_pciconfig_read

cond_syscall

sys_pciconfig_write

cond_syscall

sys_pciconfig_iobase

cond_syscall

sys32_ipc

cond_syscall

sys32_sysctl

cond_syscall

ppc_rtas

cond_syscall

sys_spu_run

cond_syscall

sys_spu_create

cond_syscall

sys_mprotect

cond_syscall

sys_msync

cond_syscall

sys_mlock

cond_syscall

sys_munlock

cond_syscall

sys_mlockall

cond_syscall

sys_munlockall

cond_syscall

sys_mincore

cond_syscall

sys_madvise

cond_syscall

sys_mremap

cond_syscall

sys_remap_file_pages

cond_syscall

compat_sys_move_pages

cond_syscall

compat_sys_migrate_pages

cond_syscall

sys_bdflush

cond_syscall

sys_ioprio_set

cond_syscall

sys_ioprio_get

cond_syscall

sys_signalfd

cond_syscall

sys_timerfd

cond_syscall

compat_sys_signalfd

cond_syscall

compat_sys_timerfd

cond_syscall

sys_eventfd

TASKSTATS_CPUMASK_MAXLEN

NR_CPUS

static

DEFINE_PER_CPU

__u32

taskstats_seqnum

static

family_registered

kmem_cache

taskstats_cache

static

genl_family

family

id

GENL_ID_GENERATE

name

TASKSTATS_GENL_NAME

version

TASKSTATS_GENL_VERSION

maxattr

TASKSTATS_CMD_ATTR_MAX

static

nla_policy

taskstats_cmd_get_policy

TASKSTATS_CMD_ATTR_MAX

__read_mostly

TASKSTATS_CMD_ATTR_PID

type

NLA_U32

TASKSTATS_CMD_ATTR_TGID

type

NLA_U32

TASKSTATS_CMD_ATTR_REGISTER_CPUMASK

type

NLA_STRING

TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK

type

NLA_STRING

listener

list_head

list

pid_t

pid

valid

listener_list

rw_semaphore

sem

list_head

list

static

DEFINE_PER_CPU

listener_list

listener_array

enum

actions

REGISTER

DEREGISTER

CPU_DONT_CARE

static

prepare_reply

genl_info

info

u8

cmd

sk_buff

skbp

size_t

size

sk_buff

skb

void

reply

skb

genlmsg_new

size

GFP_KERNEL

skb

return

ENOMEM

info

seq

get_cpu_var

taskstats_seqnum

put_cpu_var

taskstats_seqnum

reply

genlmsg_put

skb

seq

family

cmd

reply

genlmsg_put_reply

skb

info

family

cmd

reply

NULL

nlmsg_free

skb

return

EINVAL

skbp

skb

return

static

send_reply

sk_buff

skb

pid_t

pid

genlmsghdr

genlhdr

nlmsg_data

nlmsg_hdr

skb

void

reply

genlmsg_data

genlhdr

rc

rc

genlmsg_end

skb

reply

rc

nlmsg_free

skb

return

rc

return

genlmsg_unicast

skb

pid

static

void

send_cpu_listeners

sk_buff

skb

listener_list

listeners

genlmsghdr

genlhdr

nlmsg_data

nlmsg_hdr

skb

listener

s

tmp

sk_buff

skb_next

skb_cur

skb

void

reply

genlmsg_data

genlhdr

rc

delcount

rc

genlmsg_end

skb

reply

rc

nlmsg_free

skb

return

rc

down_read

listeners

sem

list_for_each_entry

s

listeners

list

list

skb_next

NULL

list_is_last

s

list

listeners

list

skb_next

skb_clone

skb_cur

GFP_KERNEL

skb_next

rc

genlmsg_unicast

skb_cur

s

pid

rc

ECONNREFUSED

s

valid

delcount

skb_cur

skb_next

up_read

listeners

sem

skb_cur

nlmsg_free

skb_cur

delcount

return

down_write

listeners

sem

list_for_each_entry_safe

s

tmp

listeners

list

list

s

valid

list_del

s

list

kfree

s

up_write

listeners

sem

static

fill_pid

pid_t

pid

task_struct

tsk

taskstats

stats

rc

tsk

rcu_read_lock

tsk

find_task_by_pid

pid

tsk

get_task_struct

tsk

rcu_read_unlock

tsk

return

ESRCH

get_task_struct

tsk

memset

stats

sizeof

stats

delayacct_add_tsk

stats

tsk

stats

version

TASKSTATS_VERSION

bacct_add_tsk

stats

tsk

xacct_add_tsk

stats

tsk

put_task_struct

tsk

return

rc

static

fill_tgid

pid_t

tgid

task_struct

first

taskstats

stats

task_struct

tsk

flags

rc

ESRCH

rcu_read_lock

first

first

find_task_by_pid

tgid

first

lock_task_sighand

first

flags

goto

out

first

signal

stats

memcpy

stats

first

signal

stats

sizeof

stats

memset

stats

sizeof

stats

tsk

first

tsk

exit_state

delayacct_add_tsk

stats

tsk

while_each_thread

first

tsk

unlock_task_sighand

first

flags

rc

out

rcu_read_unlock

stats

version

TASKSTATS_VERSION

return

rc

static

void

fill_tgid_exit

task_struct

tsk

flags

spin_lock_irqsave

tsk

sighand

siglock

flags

tsk

signal

stats

goto

ret

delayacct_add_tsk

tsk

signal

stats

tsk

ret

spin_unlock_irqrestore

tsk

sighand

siglock

flags

return

static

add_del_listener

pid_t

pid

cpumask_t

maskp

isadd

listener_list

listeners

listener

s

tmp

cpu

cpumask_t

mask

maskp

cpus_subset

mask

cpu_possible_map

return

EINVAL

isadd

REGISTER

for_each_cpu_mask

cpu

mask

s

kmalloc_node

sizeof

listener

GFP_KERNEL

cpu_to_node

cpu

s

goto

cleanup

s

pid

pid

INIT_LIST_HEAD

s

list

s

valid

listeners

per_cpu

listener_array

cpu

down_write

listeners

sem

list_add

s

list

listeners

list

up_write

listeners

sem

return

cleanup

for_each_cpu_mask

cpu

mask

listeners

per_cpu

listener_array

cpu

down_write

listeners

sem

list_for_each_entry_safe

s

tmp

listeners

list

list

s

pid

pid

list_del

s

list

kfree

s

up_write

listeners

sem

return

static

parse

nlattr

na

cpumask_t

mask

data

len

ret

na

NULL

return

len

nla_len

na

len

TASKSTATS_CPUMASK_MAXLEN

return

E2BIG

len

return

EINVAL

data

kmalloc

len

GFP_KERNEL

data

return

ENOMEM

nla_strlcpy

data

na

len

ret

cpulist_parse

data

mask

kfree

data

return

ret

static

taskstats

mk_reply

sk_buff

skb

type

u32

pid

nlattr

na

ret

aggr

aggr

type

TASKSTATS_TYPE_PID

TASKSTATS_TYPE_AGGR_PID

TASKSTATS_TYPE_AGGR_TGID

na

nla_nest_start

skb

aggr

na

goto

err

nla_put

skb

type

sizeof

pid

pid

goto

err

ret

nla_reserve

skb

TASKSTATS_TYPE_STATS

sizeof

taskstats

ret

goto

err

nla_nest_end

skb

na

return

nla_data

ret

err

return

NULL

static

taskstats_user_cmd

sk_buff

skb

genl_info

info

rc

sk_buff

rep_skb

taskstats

stats

size_t

size

cpumask_t

mask

rc

parse

info

attrs

TASKSTATS_CMD_ATTR_REGISTER_CPUMASK

mask

rc

return

rc

rc

return

add_del_listener

info

snd_pid

mask

REGISTER

rc

parse

info

attrs

TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK

mask

rc

return

rc

rc

return

add_del_listener

info

snd_pid

mask

DEREGISTER

size

nla_total_size

sizeof

u32

nla_total_size

sizeof

taskstats

nla_total_size

rc

prepare_reply

info

TASKSTATS_CMD_NEW

rep_skb

size

rc

return

rc

rc

EINVAL

info

attrs

TASKSTATS_CMD_ATTR_PID

u32

pid

nla_get_u32

info

attrs

TASKSTATS_CMD_ATTR_PID

stats

mk_reply

rep_skb

TASKSTATS_TYPE_PID

pid

stats

goto

err

rc

fill_pid

pid

NULL

stats

rc

goto

err

info

attrs

TASKSTATS_CMD_ATTR_TGID

u32

tgid

nla_get_u32

info

attrs

TASKSTATS_CMD_ATTR_TGID

stats

mk_reply

rep_skb

TASKSTATS_TYPE_TGID

tgid

stats

goto

err

rc

fill_tgid

tgid

NULL

stats

rc

goto

err

goto

err

return

send_reply

rep_skb

info

snd_pid

err

nlmsg_free

rep_skb

return

rc

static

taskstats

taskstats_tgid_alloc

task_struct

tsk

signal_struct

sig

tsk

signal

taskstats

stats

sig

stats

thread_group_empty

tsk

goto

ret

stats

kmem_cache_zalloc

taskstats_cache

GFP_KERNEL

spin_lock_irq

tsk

sighand

siglock

sig

stats

sig

stats

stats

stats

NULL

spin_unlock_irq

tsk

sighand

siglock

stats

kmem_cache_free

taskstats_cache

stats

ret

return

sig

stats

void

taskstats_exit

task_struct

tsk

group_dead

rc

listener_list

listeners

taskstats

stats

sk_buff

rep_skb

size_t

size

is_thread_group

family_registered

return

size

nla_total_size

sizeof

u32

nla_total_size

sizeof

taskstats

nla_total_size

is_thread_group

taskstats_tgid_alloc

tsk

is_thread_group

size

size

fill_tgid_exit

tsk

listeners

__raw_get_cpu_var

listener_array

list_empty

listeners

list

return

rc

prepare_reply

NULL

TASKSTATS_CMD_NEW

rep_skb

size

rc

return

stats

mk_reply

rep_skb

TASKSTATS_TYPE_PID

tsk

pid

stats

goto

err

rc

fill_pid

tsk

pid

tsk

stats

rc

goto

err

is_thread_group

group_dead

goto

send

stats

mk_reply

rep_skb

TASKSTATS_TYPE_TGID

tsk

tgid

stats

goto

err

memcpy

stats

tsk

signal

stats

sizeof

stats

send

send_cpu_listeners

rep_skb

listeners

return

err

nlmsg_free

rep_skb

static

genl_ops

taskstats_ops

cmd

TASKSTATS_CMD_GET

doit

taskstats_user_cmd

policy

taskstats_cmd_get_policy

void

__init

taskstats_init_early

void

i

taskstats_cache

KMEM_CACHE

taskstats

SLAB_PANIC

for_each_possible_cpu

i

INIT_LIST_HEAD

per_cpu

listener_array

i

list

init_rwsem

per_cpu

listener_array

i

sem

static

__init

taskstats_init

void

rc

rc

genl_register_family

family

rc

return

rc

rc

genl_register_ops

family

taskstats_ops

rc

goto

err

family_registered

return

err

genl_unregister_family

family

return

rc

late_initcall

taskstats_init

timezone

sys_tz

EXPORT_SYMBOL

sys_tz

__ARCH_WANT_SYS_TIME

asmlinkage

sys_time

time_t

__user

tloc

time_t

i

timeval

tv

do_gettimeofday

tv

i

tv

tv_sec

tloc

put_user

i

tloc

i

EFAULT

return

i

asmlinkage

sys_stime

time_t

__user

tptr

timespec

tv

err

get_user

tv

tv_sec

tptr

return

EFAULT

tv

tv_nsec

err

security_settime

tv

NULL

err

return

err

do_settimeofday

tv

return

asmlinkage

sys_gettimeofday

timeval

__user

tv

timezone

__user

tz

likely

tv

NULL

timeval

ktv

do_gettimeofday

ktv

copy_to_user

tv

ktv

sizeof

ktv

return

EFAULT

unlikely

tz

NULL

copy_to_user

tz

sys_tz

sizeof

sys_tz

return

EFAULT

return

static

inline

void

warp_clock

void

write_seqlock_irq

xtime_lock

wall_to_monotonic

tv_sec

sys_tz

tz_minuteswest

xtime

tv_sec

sys_tz

tz_minuteswest

time_interpolator_reset

write_sequnlock_irq

xtime_lock

clock_was_set

do_sys_settimeofday

timespec

tv

timezone

tz

static

firsttime

error

tv

timespec_valid

tv

return

EINVAL

error

security_settime

tv

tz

error

return

error

tz

sys_tz

tz

firsttime

firsttime

tv

warp_clock

tv

return

do_settimeofday

tv

return

asmlinkage

sys_settimeofday

timeval

__user

tv

timezone

__user

tz

timeval

user_tv

timespec

new_ts

timezone

new_tz

tv

copy_from_user

user_tv

tv

sizeof

tv

return

EFAULT

new_ts

tv_sec

user_tv

tv_sec

new_ts

tv_nsec

user_tv

tv_usec

NSEC_PER_USEC

tz

copy_from_user

new_tz

tz

sizeof

tz

return

EFAULT

return

do_sys_settimeofday

tv

new_ts

NULL

tz

new_tz

NULL

asmlinkage

sys_adjtimex

timex

__user

txc_p

timex

txc

ret

copy_from_user

txc

txc_p

sizeof

timex

return

EFAULT

ret

do_adjtimex

txc

return

copy_to_user

txc_p

txc

sizeof

timex

EFAULT

ret

inline

timespec

current_kernel_time

void

timespec

now

seq

seq

read_seqbegin

xtime_lock

now

xtime

read_seqretry

xtime_lock

seq

return

now

EXPORT_SYMBOL

current_kernel_time

timespec

current_fs_time

super_block

sb

timespec

now

current_kernel_time

return

timespec_trunc

now

sb

s_time_gran

EXPORT_SYMBOL

current_fs_time

inline

jiffies_to_msecs

j

HZ

MSEC_PER_SEC

MSEC_PER_SEC

HZ

return

MSEC_PER_SEC

HZ

j

HZ

MSEC_PER_SEC

HZ

MSEC_PER_SEC

return

j

HZ

MSEC_PER_SEC

HZ

MSEC_PER_SEC

return

j

MSEC_PER_SEC

HZ

EXPORT_SYMBOL

jiffies_to_msecs

inline

jiffies_to_usecs

j

HZ

USEC_PER_SEC

USEC_PER_SEC

HZ

return

USEC_PER_SEC

HZ

j

HZ

USEC_PER_SEC

HZ

USEC_PER_SEC

return

j

HZ

USEC_PER_SEC

HZ

USEC_PER_SEC

return

j

USEC_PER_SEC

HZ

EXPORT_SYMBOL

jiffies_to_usecs

timespec

timespec_trunc

timespec

t

gran

gran

jiffies_to_usecs

gran

t

tv_nsec

t

tv_nsec

t

tv_nsec

gran

return

t

EXPORT_SYMBOL

timespec_trunc

CONFIG_TIME_INTERPOLATION

void

getnstimeofday

timespec

tv

seq

sec

nsec

seq

read_seqbegin

xtime_lock

sec

xtime

tv_sec

nsec

xtime

tv_nsec

time_interpolator_get_offset

unlikely

read_seqretry

xtime_lock

seq

unlikely

nsec

NSEC_PER_SEC

nsec

NSEC_PER_SEC

sec

tv

tv_sec

sec

tv

tv_nsec

nsec

EXPORT_SYMBOL_GPL

getnstimeofday

do_settimeofday

timespec

tv

time_t

wtm_sec

sec

tv

tv_sec

wtm_nsec

nsec

tv

tv_nsec

tv

tv_nsec

NSEC_PER_SEC

return

EINVAL

write_seqlock_irq

xtime_lock

wtm_sec

wall_to_monotonic

tv_sec

xtime

tv_sec

sec

wtm_nsec

wall_to_monotonic

tv_nsec

xtime

tv_nsec

nsec

set_normalized_timespec

xtime

sec

nsec

set_normalized_timespec

wall_to_monotonic

wtm_sec

wtm_nsec

time_adjust

time_status

STA_UNSYNC

time_maxerror

NTP_PHASE_LIMIT

time_esterror

NTP_PHASE_LIMIT

time_interpolator_reset

write_sequnlock_irq

xtime_lock

clock_was_set

return

EXPORT_SYMBOL

do_settimeofday

void

do_gettimeofday

timeval

tv

seq

nsec

usec

sec

offset

seq

read_seqbegin

xtime_lock

offset

time_interpolator_get_offset

sec

xtime

tv_sec

nsec

xtime

tv_nsec

unlikely

read_seqretry

xtime_lock

seq

usec

nsec

offset

unlikely

usec

USEC_PER_SEC

usec

USEC_PER_SEC

sec

tv

tv_sec

sec

tv

tv_usec

usec

EXPORT_SYMBOL

do_gettimeofday

CONFIG_GENERIC_TIME

void

getnstimeofday

timespec

tv

timeval

x

do_gettimeofday

x

tv

tv_sec

x

tv_sec

tv

tv_nsec

x

tv_usec

NSEC_PER_USEC

EXPORT_SYMBOL_GPL

getnstimeofday

mktime

year0

mon0

day

hour

min

sec

mon

mon0

year

year0

mon

mon

year

return

year

year

year

mon

day

year

hour

min

sec

EXPORT_SYMBOL

mktime

void

set_normalized_timespec

timespec

ts

time_t

sec

nsec

nsec

NSEC_PER_SEC

nsec

NSEC_PER_SEC

sec

nsec

nsec

NSEC_PER_SEC

sec

ts

tv_sec

sec

ts

tv_nsec

nsec

timespec

ns_to_timespec

s64

nsec

timespec

ts

nsec

return

timespec

ts

tv_sec

div_long_long_rem_signed

nsec

NSEC_PER_SEC

ts

tv_nsec

unlikely

nsec

set_normalized_timespec

ts

ts

tv_sec

ts

tv_nsec

return

ts

EXPORT_SYMBOL

ns_to_timespec

timeval

ns_to_timeval

s64

nsec

timespec

ts

ns_to_timespec

nsec

timeval

tv

tv

tv_sec

ts

tv_sec

tv

tv_usec

suseconds_t

ts

tv_nsec

return

tv

EXPORT_SYMBOL

ns_to_timeval

msecs_to_jiffies

m

m

return

MAX_JIFFY_OFFSET

HZ

MSEC_PER_SEC

MSEC_PER_SEC

HZ

return

m

MSEC_PER_SEC

HZ

MSEC_PER_SEC

HZ

HZ

MSEC_PER_SEC

HZ

MSEC_PER_SEC

m

jiffies_to_msecs

MAX_JIFFY_OFFSET

return

MAX_JIFFY_OFFSET

return

m

HZ

MSEC_PER_SEC

HZ

MSEC_PER_SEC

m

jiffies_to_msecs

MAX_JIFFY_OFFSET

return

MAX_JIFFY_OFFSET

return

m

HZ

MSEC_PER_SEC

MSEC_PER_SEC

EXPORT_SYMBOL

msecs_to_jiffies

usecs_to_jiffies

u

u

jiffies_to_usecs

MAX_JIFFY_OFFSET

return

MAX_JIFFY_OFFSET

HZ

USEC_PER_SEC

USEC_PER_SEC

HZ

return

u

USEC_PER_SEC

HZ

USEC_PER_SEC

HZ

HZ

USEC_PER_SEC

HZ

USEC_PER_SEC

return

u

HZ

USEC_PER_SEC

return

u

HZ

USEC_PER_SEC

USEC_PER_SEC

EXPORT_SYMBOL

usecs_to_jiffies

timespec_to_jiffies

timespec

value

sec

value

tv_sec

nsec

value

tv_nsec

TICK_NSEC

sec

MAX_SEC_IN_JIFFIES

sec

MAX_SEC_IN_JIFFIES

nsec

return

u64

sec

SEC_CONVERSION

u64

nsec

NSEC_CONVERSION

NSEC_JIFFIE_SC

SEC_JIFFIE_SC

SEC_JIFFIE_SC

EXPORT_SYMBOL

timespec_to_jiffies

void

jiffies_to_timespec

jiffies

timespec

value

u64

nsec

u64

jiffies

TICK_NSEC

value

tv_sec

div_long_long_rem

nsec

NSEC_PER_SEC

value

tv_nsec

EXPORT_SYMBOL

jiffies_to_timespec

timeval_to_jiffies

timeval

value

sec

value

tv_sec

usec

value

tv_usec

sec

MAX_SEC_IN_JIFFIES

sec

MAX_SEC_IN_JIFFIES

usec

return

u64

sec

SEC_CONVERSION

u64

usec

USEC_CONVERSION

USEC_ROUND

USEC_JIFFIE_SC

SEC_JIFFIE_SC

SEC_JIFFIE_SC

EXPORT_SYMBOL

timeval_to_jiffies

void

jiffies_to_timeval

jiffies

timeval

value

u64

nsec

u64

jiffies

TICK_NSEC

tv_usec

value

tv_sec

div_long_long_rem

nsec

NSEC_PER_SEC

tv_usec

tv_usec

NSEC_PER_USEC

value

tv_usec

tv_usec

EXPORT_SYMBOL

jiffies_to_timeval

clock_t

jiffies_to_clock_t

x

TICK_NSEC

NSEC_PER_SEC

USER_HZ

return

x

HZ

USER_HZ

u64

tmp

u64

x

TICK_NSEC

do_div

tmp

NSEC_PER_SEC

USER_HZ

return

tmp

EXPORT_SYMBOL

jiffies_to_clock_t

clock_t_to_jiffies

x

HZ

USER_HZ

x

UL

HZ

USER_HZ

return

UL

return

x

HZ

USER_HZ

u64

jif

x

UL

HZ

USER_HZ

return

UL

jif

x

u64

HZ

do_div

jif

USER_HZ

return

jif

EXPORT_SYMBOL

clock_t_to_jiffies

u64

jiffies_64_to_clock_t

u64

x

TICK_NSEC

NSEC_PER_SEC

USER_HZ

do_div

x

HZ

USER_HZ

x

TICK_NSEC

do_div

x

NSEC_PER_SEC

USER_HZ

return

x

EXPORT_SYMBOL

jiffies_64_to_clock_t

u64

nsec_to_clock_t

u64

x

NSEC_PER_SEC

USER_HZ

do_div

x

NSEC_PER_SEC

USER_HZ

USER_HZ

x

USER_HZ

do_div

x

NSEC_PER_SEC

x

do_div

x

ull

NSEC_PER_SEC

USER_HZ

USER_HZ

return

x

BITS_PER_LONG

u64

get_jiffies_64

void

seq

u64

ret

seq

read_seqbegin

xtime_lock

ret

jiffies_64

read_seqretry

xtime_lock

seq

return

ret

EXPORT_SYMBOL

get_jiffies_64

EXPORT_SYMBOL

jiffies

u64

jiffies_64

__cacheline_aligned_in_smp

INITIAL_JIFFIES

EXPORT_SYMBOL

jiffies_64

TVN_BITS

CONFIG_BASE_SMALL

TVR_BITS

CONFIG_BASE_SMALL

TVN_SIZE

TVN_BITS

TVR_SIZE

TVR_BITS

TVN_MASK

TVN_SIZE

TVR_MASK

TVR_SIZE

typedef

tvec_s

list_head

vec

TVN_SIZE

tvec_t

typedef

tvec_root_s

list_head

vec

TVR_SIZE

tvec_root_t

tvec_t_base_s

spinlock_t

lock

timer_list

running_timer

timer_jiffies

tvec_root_t

tv1

tvec_t

tv2

tvec_t

tv3

tvec_t

tv4

tvec_t

tv5

____cacheline_aligned

typedef

tvec_t_base_s

tvec_base_t

tvec_base_t

boot_tvec_bases

EXPORT_SYMBOL

boot_tvec_bases

static

DEFINE_PER_CPU

tvec_base_t

tvec_bases

boot_tvec_bases

TBASE_DEFERRABLE_FLAG

x1

static

inline

tbase_get_deferrable

tvec_base_t

base

return

base

TBASE_DEFERRABLE_FLAG

static

inline

tvec_base_t

tbase_get_base

tvec_base_t

base

return

tvec_base_t

base

TBASE_DEFERRABLE_FLAG

static

inline

void

timer_set_deferrable

timer_list

timer

timer

base

tvec_base_t

timer

base

TBASE_DEFERRABLE_FLAG

static

inline

void

timer_set_base

timer_list

timer

tvec_base_t

new_base

timer

base

tvec_base_t

new_base

tbase_get_deferrable

timer

base

__round_jiffies

j

cpu

rem

original

j

j

cpu

rem

j

HZ

rem

HZ

j

j

rem

j

j

rem

HZ

j

cpu

j

jiffies

return

original

return

j

EXPORT_SYMBOL_GPL

__round_jiffies

__round_jiffies_relative

j

cpu

return

__round_jiffies

j

jiffies

cpu

jiffies

EXPORT_SYMBOL_GPL

__round_jiffies_relative

round_jiffies

j

return

__round_jiffies

j

raw_smp_processor_id

EXPORT_SYMBOL_GPL

round_jiffies

round_jiffies_relative

j

return

__round_jiffies_relative

j

raw_smp_processor_id

EXPORT_SYMBOL_GPL

round_jiffies_relative

static

inline

void

set_running_timer

tvec_base_t

base

timer_list

timer

CONFIG_SMP

base

running_timer

timer

static

void

internal_add_timer

tvec_base_t

base

timer_list

timer

expires

timer

expires

idx

expires

base

timer_jiffies

list_head

vec

idx

TVR_SIZE

i

expires

TVR_MASK

vec

base

tv1

vec

i

idx

TVR_BITS

TVN_BITS

i

expires

TVR_BITS

TVN_MASK

vec

base

tv2

vec

i

idx

TVR_BITS

TVN_BITS

i

expires

TVR_BITS

TVN_BITS

TVN_MASK

vec

base

tv3

vec

i

idx

TVR_BITS

TVN_BITS

i

expires

TVR_BITS

TVN_BITS

TVN_MASK

vec

base

tv4

vec

i

signed

idx

vec

base

tv1

vec

base

timer_jiffies

TVR_MASK

i

idx

xffffffffUL

idx

xffffffffUL

expires

idx

base

timer_jiffies

i

expires

TVR_BITS

TVN_BITS

TVN_MASK

vec

base

tv5

vec

i

list_add_tail

timer

entry

vec

CONFIG_TIMER_STATS

void

__timer_stats_timer_set_start_info

timer_list

timer

void

addr

timer

start_site

return

timer

start_site

addr

memcpy

timer

start_comm

current

comm

TASK_COMM_LEN

timer

start_pid

current

pid

void

fastcall

init_timer

timer_list

timer

timer

entry

next

NULL

timer

base

__raw_get_cpu_var

tvec_bases

CONFIG_TIMER_STATS

timer

start_site

NULL

timer

start_pid

memset

timer

start_comm

TASK_COMM_LEN

EXPORT_SYMBOL

init_timer

void

fastcall

init_timer_deferrable

timer_list

timer

init_timer

timer

timer_set_deferrable

timer

EXPORT_SYMBOL

init_timer_deferrable

static

inline

void

detach_timer

timer_list

timer

clear_pending

list_head

entry

timer

entry

__list_del

entry

prev

entry

next

clear_pending

entry

next

NULL

entry

prev

LIST_POISON2

static

tvec_base_t

lock_timer_base

timer_list

timer

flags

__acquires

timer

base

lock

tvec_base_t

base

tvec_base_t

prelock_base

timer

base

base

tbase_get_base

prelock_base

likely

base

NULL

spin_lock_irqsave

base

lock

flags

likely

prelock_base

timer

base

return

base

spin_unlock_irqrestore

base

lock

flags

cpu_relax

__mod_timer

timer_list

timer

expires

tvec_base_t

base

new_base

flags

ret

timer_stats_timer_set_start_info

timer

BUG_ON

timer

function

base

lock_timer_base

timer

flags

timer_pending

timer

detach_timer

timer

ret

new_base

__get_cpu_var

tvec_bases

base

new_base

likely

base

running_timer

timer

timer_set_base

timer

NULL

spin_unlock

base

lock

base

new_base

spin_lock

base

lock

timer_set_base

timer

base

timer

expires

expires

internal_add_timer

base

timer

spin_unlock_irqrestore

base

lock

flags

return

ret

EXPORT_SYMBOL

__mod_timer

void

add_timer_on

timer_list

timer

cpu

tvec_base_t

base

per_cpu

tvec_bases

cpu

flags

timer_stats_timer_set_start_info

timer

BUG_ON

timer_pending

timer

timer

function

spin_lock_irqsave

base

lock

flags

timer_set_base

timer

base

internal_add_timer

base

timer

spin_unlock_irqrestore

base

lock

flags

mod_timer

timer_list

timer

expires

BUG_ON

timer

function

timer_stats_timer_set_start_info

timer

timer

expires

expires

timer_pending

timer

return

return

__mod_timer

timer

expires

EXPORT_SYMBOL

mod_timer

del_timer

timer_list

timer

tvec_base_t

base

flags

ret

timer_stats_timer_clear_start_info

timer

timer_pending

timer

base

lock_timer_base

timer

flags

timer_pending

timer

detach_timer

timer

ret

spin_unlock_irqrestore

base

lock

flags

return

ret

EXPORT_SYMBOL

del_timer

CONFIG_SMP

try_to_del_timer_sync

timer_list

timer

tvec_base_t

base

flags

ret

base

lock_timer_base

timer

flags

base

running_timer

timer

goto

out

ret

timer_pending

timer

detach_timer

timer

ret

out

spin_unlock_irqrestore

base

lock

flags

return

ret

EXPORT_SYMBOL

try_to_del_timer_sync

del_timer_sync

timer_list

timer

ret

try_to_del_timer_sync

timer

ret

return

ret

cpu_relax

EXPORT_SYMBOL

del_timer_sync

static

cascade

tvec_base_t

base

tvec_t

tv

index

timer_list

timer

tmp

list_head

tv_list

list_replace_init

tv

vec

index

tv_list

list_for_each_entry_safe

timer

tmp

tv_list

entry

BUG_ON

tbase_get_base

timer

base

base

internal_add_timer

base

timer

return

index

INDEX

N

base

timer_jiffies

TVR_BITS

N

TVN_BITS

TVN_MASK

static

inline

void

__run_timers

tvec_base_t

base

timer_list

timer

spin_lock_irq

base

lock

time_after_eq

jiffies

base

timer_jiffies

list_head

work_list

list_head

head

work_list

index

base

timer_jiffies

TVR_MASK

index

cascade

base

base

tv2

INDEX

cascade

base

base

tv3

INDEX

cascade

base

base

tv4

INDEX

cascade

base

base

tv5

INDEX

base

timer_jiffies

list_replace_init

base

tv1

vec

index

work_list

list_empty

head

void

fn

data

timer

list_first_entry

head

timer_list

entry

fn

timer

function

data

timer

data

timer_stats_account_timer

timer

set_running_timer

base

timer

detach_timer

timer

spin_unlock_irq

base

lock

preempt_count

preempt_count

fn

data

preempt_count

preempt_count

printk

KERN_WARNING

fn

preempt_count

preempt_count

BUG

spin_lock_irq

base

lock

set_running_timer

base

NULL

spin_unlock_irq

base

lock

CONFIG_NO_IDLE_HZ

CONFIG_NO_HZ

static

__next_timer_interrupt

tvec_base_t

base

timer_jiffies

base

timer_jiffies

expires

timer_jiffies

NEXT_TIMER_MAX_DELTA

index

slot

array

found

timer_list

nte

tvec_t

varray

index

slot

timer_jiffies

TVR_MASK

list_for_each_entry

nte

base

tv1

vec

slot

entry

tbase_get_deferrable

nte

base

found

expires

nte

expires

index

slot

index

goto

cascade

return

expires

slot

slot

TVR_MASK

slot

index

cascade

index

timer_jiffies

TVR_SIZE

index

timer_jiffies

TVR_BITS

varray

base

tv2

varray

base

tv3

varray

base

tv4

varray

base

tv5

array

array

array

tvec_t

varp

varray

array

index

slot

timer_jiffies

TVN_MASK

list_for_each_entry

nte

varp

vec

slot

entry

found

time_before

nte

expires

expires

expires

nte

expires

found

index

slot

index

return

expires

slot

slot

TVN_MASK

slot

index

index

timer_jiffies

TVN_SIZE

index

timer_jiffies

TVN_BITS

return

expires

static

cmp_next_hrtimer_event

now

expires

ktime_t

hr_delta

hrtimer_get_next_event

timespec

tsdelta

delta

hr_delta

tv64

KTIME_MAX

return

expires

hr_delta

tv64

return

now

tsdelta

ktime_to_timespec

hr_delta

delta

timespec_to_jiffies

tsdelta

delta

NEXT_TIMER_MAX_DELTA

delta

NEXT_TIMER_MAX_DELTA

delta

delta

now

delta

time_before

now

expires

return

now

return

expires

get_next_timer_interrupt

now

tvec_base_t

base

__get_cpu_var

tvec_bases

expires

spin_lock

base

lock

expires

__next_timer_interrupt

base

spin_unlock

base

lock

time_before_eq

expires

now

return

now

CONFIG_XEN

return

cmp_next_hrtimer_event

now

expires

expires

cmp_next_hrtimer_event

now

expires

sl_next

softlockup_get_next_event

return

expires

now

expires

now

sl_next

expires

now

sl_next

CONFIG_NO_IDLE_HZ

next_timer_interrupt

void

return

get_next_timer_interrupt

jiffies

void

update_process_times

user_tick

task_struct

p

current

cpu

smp_processor_id

user_tick

account_user_time

p

jiffies_to_cputime

account_system_time

p

HARDIRQ_OFFSET

jiffies_to_cputime

run_local_timers

rcu_pending

cpu

rcu_check_callbacks

cpu

user_tick

scheduler_tick

run_posix_cpu_timers

p

static

count_active_tasks

void

return

nr_active

FIXED_1

avenrun

EXPORT_SYMBOL

avenrun

static

inline

void

calc_load

ticks

active_tasks

static

count

LOAD_FREQ

count

ticks

unlikely

count

active_tasks

count_active_tasks

CALC_LOAD

avenrun

EXP_1

active_tasks

CALC_LOAD

avenrun

EXP_5

active_tasks

CALC_LOAD

avenrun

EXP_15

active_tasks

count

LOAD_FREQ

count

static

void

run_timer_softirq

softirq_action

h

tvec_base_t

base

__get_cpu_var

tvec_bases

hrtimer_run_queues

time_after_eq

jiffies

base

timer_jiffies

__run_timers

base

void

run_local_timers

void

raise_softirq

TIMER_SOFTIRQ

softlockup_tick

static

inline

void

update_times

ticks

update_wall_time

calc_load

ticks

void

do_timer

ticks

jiffies_64

ticks

update_times

ticks

__ARCH_WANT_SYS_ALARM

asmlinkage

sys_alarm

seconds

return

alarm_setitimer

seconds

__alpha__

asmlinkage

sys_getpid

void

return

current

tgid

asmlinkage

sys_getppid

void

pid

rcu_read_lock

pid

rcu_dereference

current

real_parent

tgid

rcu_read_unlock

return

pid

asmlinkage

sys_getuid

void

return

current

uid

asmlinkage

sys_geteuid

void

return

current

euid

asmlinkage

sys_getgid

void

return

current

gid

asmlinkage

sys_getegid

void

return

current

egid

static

void

process_timeout

__data

wake_up_process

task_struct

__data

fastcall

signed

__sched

schedule_timeout

signed

timeout

timer_list

timer

expire

timeout

case

MAX_SCHEDULE_TIMEOUT

schedule

goto

out

default

timeout

printk

KERN_ERR

timeout

dump_stack

current

state

TASK_RUNNING

goto

out

expire

timeout

jiffies

setup_timer

timer

process_timeout

current

__mod_timer

timer

expire

schedule

del_singleshot_timer_sync

timer

timeout

expire

jiffies

out

return

timeout

timeout

EXPORT_SYMBOL

schedule_timeout

signed

__sched

schedule_timeout_interruptible

signed

timeout

__set_current_state

TASK_INTERRUPTIBLE

return

schedule_timeout

timeout

EXPORT_SYMBOL

schedule_timeout_interruptible

signed

__sched

schedule_timeout_uninterruptible

signed

timeout

__set_current_state

TASK_UNINTERRUPTIBLE

return

schedule_timeout

timeout

EXPORT_SYMBOL

schedule_timeout_uninterruptible

asmlinkage

sys_gettid

void

return

current

pid

do_sysinfo

sysinfo

info

mem_total

sav_total

mem_unit

bitcount

seq

memset

info

sizeof

sysinfo

timespec

tp

seq

read_seqbegin

xtime_lock

getnstimeofday

tp

tp

tv_sec

wall_to_monotonic

tv_sec

tp

tv_nsec

wall_to_monotonic

tv_nsec

tp

tv_nsec

NSEC_PER_SEC

tp

tv_nsec

tp

tv_nsec

NSEC_PER_SEC

tp

tv_sec

info

uptime

tp

tv_sec

tp

tv_nsec

info

loads

avenrun

SI_LOAD_SHIFT

FSHIFT

info

loads

avenrun

SI_LOAD_SHIFT

FSHIFT

info

loads

avenrun

SI_LOAD_SHIFT

FSHIFT

info

procs

nr_threads

read_seqretry

xtime_lock

seq

si_meminfo

info

si_swapinfo

info

mem_total

info

totalram

info

totalswap

mem_total

info

totalram

mem_total

info

totalswap

goto

out

bitcount

mem_unit

info

mem_unit

mem_unit

bitcount

mem_unit

sav_total

mem_total

mem_total

mem_total

sav_total

goto

out

info

mem_unit

info

totalram

bitcount

info

freeram

bitcount

info

sharedram

bitcount

info

bufferram

bitcount

info

totalswap

bitcount

info

freeswap

bitcount

info

totalhigh

bitcount

info

freehigh

bitcount

out

return

asmlinkage

sys_sysinfo

sysinfo

__user

info

sysinfo

val

do_sysinfo

val

copy_to_user

info

val

sizeof

sysinfo

return

EFAULT

return

static

lock_class_key

base_lock_keys

NR_CPUS

static

__devinit

init_timers_cpu

cpu

j

tvec_base_t

base

static

__devinitdata

tvec_base_done

NR_CPUS

tvec_base_done

cpu

static

boot_done

boot_done

base

kmalloc_node

sizeof

base

GFP_KERNEL

cpu_to_node

cpu

base

return

ENOMEM

tbase_get_deferrable

base

WARN_ON

kfree

base

return

ENOMEM

memset

base

sizeof

base

per_cpu

tvec_bases

cpu

base

boot_done

base

boot_tvec_bases

tvec_base_done

cpu

base

per_cpu

tvec_bases

cpu

spin_lock_init

base

lock

lockdep_set_class

base

lock

base_lock_keys

cpu

j

j

TVN_SIZE

j

INIT_LIST_HEAD

base

tv5

vec

j

INIT_LIST_HEAD

base

tv4

vec

j

INIT_LIST_HEAD

base

tv3

vec

j

INIT_LIST_HEAD

base

tv2

vec

j

j

j

TVR_SIZE

j

INIT_LIST_HEAD

base

tv1

vec

j

base

timer_jiffies

jiffies

return

CONFIG_HOTPLUG_CPU

static

void

migrate_timer_list

tvec_base_t

new_base

list_head

head

timer_list

timer

list_empty

head

timer

list_first_entry

head

timer_list

entry

detach_timer

timer

timer_set_base

timer

new_base

internal_add_timer

new_base

timer

static

void

__devinit

migrate_timers

cpu

tvec_base_t

old_base

tvec_base_t

new_base

i

BUG_ON

cpu_online

cpu

old_base

per_cpu

tvec_bases

cpu

new_base

get_cpu_var

tvec_bases

local_irq_disable

double_spin_lock

new_base

lock

old_base

lock

smp_processor_id

cpu

BUG_ON

old_base

running_timer

i

i

TVR_SIZE

i

migrate_timer_list

new_base

old_base

tv1

vec

i

i

i

TVN_SIZE

i

migrate_timer_list

new_base

old_base

tv2

vec

i

migrate_timer_list

new_base

old_base

tv3

vec

i

migrate_timer_list

new_base

old_base

tv4

vec

i

migrate_timer_list

new_base

old_base

tv5

vec

i

double_spin_unlock

new_base

lock

old_base

lock

smp_processor_id

cpu

local_irq_enable

put_cpu_var

tvec_bases

static

__cpuinit

timer_cpu_notify

notifier_block

self

action

void

hcpu

cpu

hcpu

action

case

CPU_UP_PREPARE

case

CPU_UP_PREPARE_FROZEN

init_timers_cpu

cpu

return

NOTIFY_BAD

CONFIG_HOTPLUG_CPU

case

CPU_DEAD

case

CPU_DEAD_FROZEN

migrate_timers

cpu

default

return

NOTIFY_OK

static

notifier_block

__cpuinitdata

timers_nb

notifier_call

timer_cpu_notify

void

__init

init_timers

void

err

timer_cpu_notify

timers_nb

CPU_UP_PREPARE

void

smp_processor_id

init_timer_stats

BUG_ON

err

NOTIFY_BAD

register_cpu_notifier

timers_nb

open_softirq

TIMER_SOFTIRQ

run_timer_softirq

NULL

CONFIG_TIME_INTERPOLATION

time_interpolator

time_interpolator

__read_mostly

static

time_interpolator

time_interpolator_list

__read_mostly

static

DEFINE_SPINLOCK

time_interpolator_lock

static

inline

cycles_t

time_interpolator_get_cycles

src

x

void

src

case

TIME_SOURCE_FUNCTION

x

time_interpolator

addr

return

x

case

TIME_SOURCE_MMIO64

return

readq_relaxed

void

__iomem

time_interpolator

addr

case

TIME_SOURCE_MMIO32

return

readl_relaxed

void

__iomem

time_interpolator

addr

default

return

get_cycles

static

inline

u64

time_interpolator_get_counter

writelock

src

time_interpolator

source

time_interpolator

jitter

cycles_t

lcycle

cycles_t

now

lcycle

time_interpolator

last_cycle

now

time_interpolator_get_cycles

src

lcycle

time_after

lcycle

now

return

lcycle

writelock

time_interpolator

last_cycle

now

return

now

unlikely

cmpxchg

time_interpolator

last_cycle

lcycle

now

lcycle

return

now

return

time_interpolator_get_cycles

src

void

time_interpolator_reset

void

time_interpolator

offset

time_interpolator

last_counter

time_interpolator_get_counter

GET_TI_NSECS

count

i

count

i

last_counter

i

mask

i

nsec_per_cyc

i

shift

time_interpolator_get_offset

void

time_interpolator

return

return

time_interpolator

offset

GET_TI_NSECS

time_interpolator_get_counter

time_interpolator

INTERPOLATOR_ADJUST

INTERPOLATOR_MAX_SKIP

INTERPOLATOR_ADJUST

void

time_interpolator_update

delta_nsec

u64

counter

offset

time_interpolator

return

counter

time_interpolator_get_counter

offset

time_interpolator

offset

GET_TI_NSECS

counter

time_interpolator

delta_nsec

delta_nsec

offset

time_interpolator

offset

offset

delta_nsec

time_interpolator

skips

time_interpolator

ns_skipped

delta_nsec

offset

time_interpolator

offset

time_interpolator

last_counter

counter

jiffies

INTERPOLATOR_ADJUST

time_interpolator

skips

time_interpolator

offset

tick_nsec

time_interpolator

nsec_per_cyc

time_interpolator

ns_skipped

INTERPOLATOR_MAX_SKIP

time_interpolator

offset

time_interpolator

nsec_per_cyc

time_interpolator

skips

time_interpolator

ns_skipped

static

inline

is_better_time_interpolator

time_interpolator

new

time_interpolator

return

return

new

frequency

time_interpolator

frequency

new

drift

time_interpolator

drift

void

register_time_interpolator

time_interpolator

ti

flags

BUG_ON

ti

frequency

ti

mask

ti

nsec_per_cyc

u64

NSEC_PER_SEC

ti

shift

ti

frequency

spin_lock

time_interpolator_lock

write_seqlock_irqsave

xtime_lock

flags

is_better_time_interpolator

ti

time_interpolator

ti

time_interpolator_reset

write_sequnlock_irqrestore

xtime_lock

flags

ti

next

time_interpolator_list

time_interpolator_list

ti

spin_unlock

time_interpolator_lock

void

unregister_time_interpolator

time_interpolator

ti

time_interpolator

curr

prev

flags

spin_lock

time_interpolator_lock

prev

time_interpolator_list

curr

prev

curr

curr

curr

next

curr

ti

prev

curr

next

prev

curr

next

write_seqlock_irqsave

xtime_lock

flags

ti

time_interpolator

time_interpolator

NULL

curr

time_interpolator_list

curr

curr

curr

next

is_better_time_interpolator

curr

time_interpolator

curr

time_interpolator_reset

write_sequnlock_irqrestore

xtime_lock

flags

spin_unlock

time_interpolator_lock

void

msleep

msecs

timeout

msecs_to_jiffies

msecs

timeout

timeout

schedule_timeout_uninterruptible

timeout

EXPORT_SYMBOL

msleep

msleep_interruptible

msecs

timeout

msecs_to_jiffies

msecs

timeout

signal_pending

current

timeout

schedule_timeout_interruptible

timeout

return

jiffies_to_msecs

timeout

EXPORT_SYMBOL

msleep_interruptible

void

bacct_add_tsk

taskstats

stats

task_struct

tsk

timespec

uptime

ts

s64

ac_etime

BUILD_BUG_ON

TS_COMM_LEN

TASK_COMM_LEN

do_posix_clock_monotonic_gettime

uptime

ts

timespec_sub

uptime

tsk

start_time

ac_etime

timespec_to_ns

ts

do_div

ac_etime

NSEC_PER_USEC

stats

ac_etime

ac_etime

stats

ac_btime

xtime

tv_sec

ts

tv_sec

thread_group_leader

tsk

stats

ac_exitcode

tsk

exit_code

tsk

flags

PF_FORKNOEXEC

stats

ac_flag

AFORK

tsk

flags

PF_SUPERPRIV

stats

ac_flag

ASU

tsk

flags

PF_DUMPCORE

stats

ac_flag

ACORE

tsk

flags

PF_SIGNALED

stats

ac_flag

AXSIG

stats

ac_nice

task_nice

tsk

stats

ac_sched

tsk

policy

stats

ac_uid

tsk

uid

stats

ac_gid

tsk

gid

stats

ac_pid

tsk

pid

rcu_read_lock

stats

ac_ppid

pid_alive

tsk

rcu_dereference

tsk

real_parent

tgid

rcu_read_unlock

stats

ac_utime

cputime_to_msecs

tsk

utime

USEC_PER_MSEC

stats

ac_stime

cputime_to_msecs

tsk

stime

USEC_PER_MSEC

stats

ac_minflt

tsk

min_flt

stats

ac_majflt

tsk

maj_flt

strncpy

stats

ac_comm

tsk

comm

sizeof

stats

ac_comm

CONFIG_TASK_XACCT

KB

MB

KB

void

xacct_add_tsk

taskstats

stats

task_struct

p

mm_struct

mm

stats

coremem

jiffies_to_usecs

p

acct_rss_mem1

PAGE_SIZE

MB

stats

virtmem

jiffies_to_usecs

p

acct_vm_mem1

PAGE_SIZE

MB

mm

get_task_mm

p

mm

stats

hiwater_rss

mm

hiwater_rss

PAGE_SIZE

KB

stats

hiwater_vm

mm

hiwater_vm

PAGE_SIZE

KB

mmput

mm

stats

read_char

p

rchar

stats

write_char

p

wchar

stats

read_syscalls

p

syscr

stats

write_syscalls

p

syscw

CONFIG_TASK_IO_ACCOUNTING

stats

read_bytes

p

ioac

read_bytes

stats

write_bytes

p

ioac

write_bytes

stats

cancelled_write_bytes

p

ioac

cancelled_write_bytes

stats

read_bytes

stats

write_bytes

stats

cancelled_write_bytes

undef

KB

undef

MB

void

acct_update_integrals

task_struct

tsk

likely

tsk

mm

delta

cputime_to_jiffies

cputime_sub

tsk

stime

tsk

acct_stimexpd

delta

return

tsk

acct_stimexpd

tsk

stime

tsk

acct_rss_mem1

delta

get_mm_rss

tsk

mm

tsk

acct_vm_mem1

delta

tsk

mm

total_vm

void

acct_clear_integrals

task_struct

tsk

tsk

acct_stimexpd

tsk

acct_rss_mem1

tsk

acct_vm_mem1

asmlinkage

sys_chown16

__user

filename

old_uid_t

user

old_gid_t

group

ret

sys_chown

filename

low2highuid

user

low2highgid

group

prevent_tail_call

ret

return

ret

asmlinkage

sys_lchown16

__user

filename

old_uid_t

user

old_gid_t

group

ret

sys_lchown

filename

low2highuid

user

low2highgid

group

prevent_tail_call

ret

return

ret

asmlinkage

sys_fchown16

fd

old_uid_t

user

old_gid_t

group

ret

sys_fchown

fd

low2highuid

user

low2highgid

group

prevent_tail_call

ret

return

ret

asmlinkage

sys_setregid16

old_gid_t

rgid

old_gid_t

egid

ret

sys_setregid

low2highgid

rgid

low2highgid

egid

prevent_tail_call

ret

return

ret

asmlinkage

sys_setgid16

old_gid_t

gid

ret

sys_setgid

low2highgid

gid

prevent_tail_call

ret

return

ret

asmlinkage

sys_setreuid16

old_uid_t

ruid

old_uid_t

euid

ret

sys_setreuid

low2highuid

ruid

low2highuid

euid

prevent_tail_call

ret

return

ret

asmlinkage

sys_setuid16

old_uid_t

uid

ret

sys_setuid

low2highuid

uid

prevent_tail_call

ret

return

ret

asmlinkage

sys_setresuid16

old_uid_t

ruid

old_uid_t

euid

old_uid_t

suid

ret

sys_setresuid

low2highuid

ruid

low2highuid

euid

low2highuid

suid

prevent_tail_call

ret

return

ret

asmlinkage

sys_getresuid16

old_uid_t

__user

ruid

old_uid_t

__user

euid

old_uid_t

__user

suid

retval

retval

put_user

high2lowuid

current

uid

ruid

retval

put_user

high2lowuid

current

euid

euid

retval

put_user

high2lowuid

current

suid

suid

return

retval

asmlinkage

sys_setresgid16

old_gid_t

rgid

old_gid_t

egid

old_gid_t

sgid

ret

sys_setresgid

low2highgid

rgid

low2highgid

egid

low2highgid

sgid

prevent_tail_call

ret

return

ret

asmlinkage

sys_getresgid16

old_gid_t

__user

rgid

old_gid_t

__user

egid

old_gid_t

__user

sgid

retval

retval

put_user

high2lowgid

current

gid

rgid

retval

put_user

high2lowgid

current

egid

egid

retval

put_user

high2lowgid

current

sgid

sgid

return

retval

asmlinkage

sys_setfsuid16

old_uid_t

uid

ret

sys_setfsuid

low2highuid

uid

prevent_tail_call

ret

return

ret

asmlinkage

sys_setfsgid16

old_gid_t

gid

ret

sys_setfsgid

low2highgid

gid

prevent_tail_call

ret

return

ret

static

groups16_to_user

old_gid_t

__user

grouplist

group_info

group_info

i

old_gid_t

group

i

i

group_info

ngroups

i

group

high2lowgid

GROUP_AT

group_info

i

put_user

group

grouplist

i

return

EFAULT

return

static

groups16_from_user

group_info

group_info

old_gid_t

__user

grouplist

i

old_gid_t

group

i

i

group_info

ngroups

i

get_user

group

grouplist

i

return

EFAULT

GROUP_AT

group_info

i

low2highgid

group

return

asmlinkage

sys_getgroups16

gidsetsize

old_gid_t

__user

grouplist

i

gidsetsize

return

EINVAL

get_group_info

current

group_info

i

current

group_info

ngroups

gidsetsize

i

gidsetsize

i

EINVAL

goto

out

groups16_to_user

grouplist

current

group_info

i

EFAULT

goto

out

out

put_group_info

current

group_info

return

i

asmlinkage

sys_setgroups16

gidsetsize

old_gid_t

__user

grouplist

group_info

group_info

retval

capable

CAP_SETGID

return

EPERM

gidsetsize

NGROUPS_MAX

return

EINVAL

group_info

groups_alloc

gidsetsize

group_info

return

ENOMEM

retval

groups16_from_user

group_info

grouplist

retval

put_group_info

group_info

return

retval

retval

set_current_groups

group_info

put_group_info

group_info

return

retval

asmlinkage

sys_getuid16

void

return

high2lowuid

current

uid

asmlinkage

sys_geteuid16

void

return

high2lowuid

current

euid

asmlinkage

sys_getgid16

void

return

high2lowgid

current

gid

asmlinkage

sys_getegid16

void

return

high2lowgid

current

egid

UIDHASH_BITS

CONFIG_BASE_SMALL

UIDHASH_SZ

UIDHASH_BITS

UIDHASH_MASK

UIDHASH_SZ

__uidhashfn

uid

uid

UIDHASH_BITS

uid

UIDHASH_MASK

uidhashentry

uid

uidhash_table

__uidhashfn

uid

static

kmem_cache

uid_cachep

static

list_head

uidhash_table

UIDHASH_SZ

static

DEFINE_SPINLOCK

uidhash_lock

user_struct

root_user

__count

ATOMIC_INIT

processes

ATOMIC_INIT

files

ATOMIC_INIT

sigpending

ATOMIC_INIT

mq_bytes

locked_shm

CONFIG_KEYS

uid_keyring

root_user_keyring

session_keyring

root_session_keyring

static

inline

void

uid_hash_insert

user_struct

up

list_head

hashent

list_add

up

uidhash_list

hashent

static

inline

void

uid_hash_remove

user_struct

up

list_del

up

uidhash_list

static

inline

user_struct

uid_hash_find

uid_t

uid

list_head

hashent

list_head

up

list_for_each

up

hashent

user_struct

user

user

list_entry

up

user_struct

uidhash_list

user

uid

uid

atomic_inc

user

__count

return

user

return

NULL

user_struct

find_user

uid_t

uid

user_struct

ret

flags

spin_lock_irqsave

uidhash_lock

flags

ret

uid_hash_find

uid

uidhashentry

uid

spin_unlock_irqrestore

uidhash_lock

flags

return

ret

void

free_uid

user_struct

up

flags

up

return

local_irq_save

flags

atomic_dec_and_lock

up

__count

uidhash_lock

uid_hash_remove

up

spin_unlock_irqrestore

uidhash_lock

flags

key_put

up

uid_keyring

key_put

up

session_keyring

kmem_cache_free

uid_cachep

up

local_irq_restore

flags

user_struct

alloc_uid

uid_t

uid

list_head

hashent

uidhashentry

uid

user_struct

up

spin_lock_irq

uidhash_lock

up

uid_hash_find

uid

hashent

spin_unlock_irq

uidhash_lock

up

user_struct

new

new

kmem_cache_alloc

uid_cachep

GFP_KERNEL

new

return

NULL

new

uid

uid

atomic_set

new

__count

atomic_set

new

processes

atomic_set

new

files

atomic_set

new

sigpending

CONFIG_INOTIFY_USER

atomic_set

new

inotify_watches

atomic_set

new

inotify_devs

new

mq_bytes

new

locked_shm

alloc_uid_keyring

new

current

kmem_cache_free

uid_cachep

new

return

NULL

spin_lock_irq

uidhash_lock

up

uid_hash_find

uid

hashent

up

key_put

new

uid_keyring

key_put

new

session_keyring

kmem_cache_free

uid_cachep

new

uid_hash_insert

new

hashent

up

new

spin_unlock_irq

uidhash_lock

return

up

void

switch_uid

user_struct

new_user

user_struct

old_user

old_user

current

user

atomic_inc

new_user

processes

atomic_dec

old_user

processes

switch_uid_keyring

new_user

current

user

new_user

smp_mb

spin_unlock_wait

current

sighand

siglock

free_uid

old_user

suid_keys

current

static

__init

uid_cache_init

void

n

uid_cachep

kmem_cache_create

sizeof

user_struct

SLAB_HWCACHE_ALIGN

SLAB_PANIC

NULL

NULL

n

n

UIDHASH_SZ

n

INIT_LIST_HEAD

uidhash_table

n

spin_lock_irq

uidhash_lock

uid_hash_insert

root_user

uidhashentry

spin_unlock_irq

uidhash_lock

return

module_init

uid_cache_init

static

uts_namespace

clone_uts_ns

uts_namespace

old_ns

uts_namespace

ns

ns

kmalloc

sizeof

uts_namespace

GFP_KERNEL

ns

memcpy

ns

name

old_ns

name

sizeof

ns

name

kref_init

ns

kref

return

ns

uts_namespace

copy_utsname

flags

uts_namespace

old_ns

uts_namespace

new_ns

BUG_ON

old_ns

get_uts_ns

old_ns

flags

CLONE_NEWUTS

return

old_ns

new_ns

clone_uts_ns

old_ns

put_uts_ns

old_ns

return

new_ns

void

free_uts_ns

kref

kref

uts_namespace

ns

ns

container_of

kref

uts_namespace

kref

kfree

ns

static

void

get_uts

ctl_table

table

write

which

table

data

CONFIG_UTS_NS

uts_namespace

uts_ns

current

nsproxy

uts_ns

which

which

init_uts_ns

uts_ns

write

down_read

uts_sem

down_write

uts_sem

return

which

static

void

put_uts

ctl_table

table

write

void

which

write

up_read

uts_sem

up_write

uts_sem

CONFIG_PROC_FS

static

proc_do_uts_string

ctl_table

table

write

file

filp

void

__user

buffer

size_t

lenp

loff_t

ppos

ctl_table

uts_table

r

memcpy

uts_table

table

sizeof

uts_table

uts_table

data

get_uts

table

write

r

proc_dostring

uts_table

write

filp

buffer

lenp

ppos

put_uts

table

write

uts_table

data

return

r

proc_do_uts_string

NULL

CONFIG_SYSCTL_SYSCALL

static

sysctl_uts_string

ctl_table

table

__user

name

nlen

void

__user

oldval

size_t

__user

oldlenp

void

__user

newval

size_t

newlen

ctl_table

uts_table

r

write

write

newval

newlen

memcpy

uts_table

table

sizeof

uts_table

uts_table

data

get_uts

table

write

r

sysctl_string

uts_table

name

nlen

oldval

oldlenp

newval

newlen

put_uts

table

write

uts_table

data

return

r

sysctl_uts_string

NULL

static

ctl_table

uts_kern_table

ctl_name

KERN_OSTYPE

procname

data

init_uts_ns

name

sysname

maxlen

sizeof

init_uts_ns

name

sysname

mode

proc_handler

proc_do_uts_string

strategy

sysctl_uts_string

ctl_name

KERN_OSRELEASE

procname

data

init_uts_ns

name

release

maxlen

sizeof

init_uts_ns

name

release

mode

proc_handler

proc_do_uts_string

strategy

sysctl_uts_string

ctl_name

KERN_VERSION

procname

data

init_uts_ns

name

version

maxlen

sizeof

init_uts_ns

name

version

mode

proc_handler

proc_do_uts_string

strategy

sysctl_uts_string

ctl_name

KERN_NODENAME

procname

data

init_uts_ns

name

nodename

maxlen

sizeof

init_uts_ns

name

nodename

mode

proc_handler

proc_do_uts_string

strategy

sysctl_uts_string

ctl_name

KERN_DOMAINNAME

procname

data

init_uts_ns

name

domainname

maxlen

sizeof

init_uts_ns

name

domainname

mode

proc_handler

proc_do_uts_string

strategy

sysctl_uts_string

static

ctl_table

uts_root_table

ctl_name

CTL_KERN

procname

mode

child

uts_kern_table

static

__init

utsname_sysctl_init

void

register_sysctl_table

uts_root_table

return

__initcall

utsname_sysctl_init

void

init_waitqueue_head

wait_queue_head_t

q

spin_lock_init

q

lock

INIT_LIST_HEAD

q

task_list

EXPORT_SYMBOL

init_waitqueue_head

void

fastcall

add_wait_queue

wait_queue_head_t

q

wait_queue_t

wait

flags

wait

flags

WQ_FLAG_EXCLUSIVE

spin_lock_irqsave

q

lock

flags

__add_wait_queue

q

wait

spin_unlock_irqrestore

q

lock

flags

EXPORT_SYMBOL

add_wait_queue

void

fastcall

add_wait_queue_exclusive

wait_queue_head_t

q

wait_queue_t

wait

flags

wait

flags

WQ_FLAG_EXCLUSIVE

spin_lock_irqsave

q

lock

flags

__add_wait_queue_tail

q

wait

spin_unlock_irqrestore

q

lock

flags

EXPORT_SYMBOL

add_wait_queue_exclusive

void

fastcall

remove_wait_queue

wait_queue_head_t

q

wait_queue_t

wait

flags

spin_lock_irqsave

q

lock

flags

__remove_wait_queue

q

wait

spin_unlock_irqrestore

q

lock

flags

EXPORT_SYMBOL

remove_wait_queue

void

fastcall

prepare_to_wait

wait_queue_head_t

q

wait_queue_t

wait

state

flags

wait

flags

WQ_FLAG_EXCLUSIVE

spin_lock_irqsave

q

lock

flags

list_empty

wait

task_list

__add_wait_queue

q

wait

is_sync_wait

wait

set_current_state

state

spin_unlock_irqrestore

q

lock

flags

EXPORT_SYMBOL

prepare_to_wait

void

fastcall

prepare_to_wait_exclusive

wait_queue_head_t

q

wait_queue_t

wait

state

flags

wait

flags

WQ_FLAG_EXCLUSIVE

spin_lock_irqsave

q

lock

flags

list_empty

wait

task_list

__add_wait_queue_tail

q

wait

is_sync_wait

wait

set_current_state

state

spin_unlock_irqrestore

q

lock

flags

EXPORT_SYMBOL

prepare_to_wait_exclusive

void

fastcall

finish_wait

wait_queue_head_t

q

wait_queue_t

wait

flags

__set_current_state

TASK_RUNNING

list_empty_careful

wait

task_list

spin_lock_irqsave

q

lock

flags

list_del_init

wait

task_list

spin_unlock_irqrestore

q

lock

flags

EXPORT_SYMBOL

finish_wait

autoremove_wake_function

wait_queue_t

wait

mode

sync

void

key

ret

default_wake_function

wait

mode

sync

key

ret

list_del_init

wait

task_list

return

ret

EXPORT_SYMBOL

autoremove_wake_function

wake_bit_function

wait_queue_t

wait

mode

sync

void

arg

wait_bit_key

key

arg

wait_bit_queue

wait_bit

container_of

wait

wait_bit_queue

wait

wait_bit

key

flags

key

flags

wait_bit

key

bit_nr

key

bit_nr

test_bit

key

bit_nr

key

flags

return

return

autoremove_wake_function

wait

mode

sync

key

EXPORT_SYMBOL

wake_bit_function

__sched

fastcall

__wait_on_bit

wait_queue_head_t

wq

wait_bit_queue

q

action

void

mode

ret

prepare_to_wait

wq

q

wait

mode

test_bit

q

key

bit_nr

q

key

flags

ret

action

q

key

flags

test_bit

q

key

bit_nr

q

key

flags

ret

finish_wait

wq

q

wait

return

ret

EXPORT_SYMBOL

__wait_on_bit

__sched

fastcall

out_of_line_wait_on_bit

void

word

bit

action

void

mode

wait_queue_head_t

wq

bit_waitqueue

word

bit

DEFINE_WAIT_BIT

wait

word

bit

return

__wait_on_bit

wq

wait

action

mode

EXPORT_SYMBOL

out_of_line_wait_on_bit

__sched

fastcall

__wait_on_bit_lock

wait_queue_head_t

wq

wait_bit_queue

q

action

void

mode

ret

prepare_to_wait_exclusive

wq

q

wait

mode

test_bit

q

key

bit_nr

q

key

flags

ret

action

q

key

flags

test_and_set_bit

q

key

bit_nr

q

key

flags

finish_wait

wq

q

wait

return

ret

EXPORT_SYMBOL

__wait_on_bit_lock

__sched

fastcall

out_of_line_wait_on_bit_lock

void

word

bit

action

void

mode

wait_queue_head_t

wq

bit_waitqueue

word

bit

DEFINE_WAIT_BIT

wait

word

bit

return

__wait_on_bit_lock

wq

wait

action

mode

EXPORT_SYMBOL

out_of_line_wait_on_bit_lock

void

fastcall

__wake_up_bit

wait_queue_head_t

wq

void

word

bit

wait_bit_key

key

__WAIT_BIT_KEY_INITIALIZER

word

bit

waitqueue_active

wq

__wake_up

wq

TASK_INTERRUPTIBLE

TASK_UNINTERRUPTIBLE

key

EXPORT_SYMBOL

__wake_up_bit

void

fastcall

wake_up_bit

void

word

bit

__wake_up_bit

bit_waitqueue

word

bit

word

bit

EXPORT_SYMBOL

wake_up_bit

fastcall

wait_queue_head_t

bit_waitqueue

void

word

bit

shift

BITS_PER_LONG

zone

zone

page_zone

virt_to_page

word

val

word

shift

bit

return

zone

wait_table

hash_long

val

zone

wait_table_bits

EXPORT_SYMBOL

bit_waitqueue

cpu_workqueue_struct

spinlock_t

lock

list_head

worklist

wait_queue_head_t

more_work

work_struct

current_work

workqueue_struct

wq

task_struct

thread

run_depth

____cacheline_aligned

workqueue_struct

cpu_workqueue_struct

cpu_wq

list_head

list

name

singlethread

freezeable

static

DEFINE_MUTEX

workqueue_mutex

static

LIST_HEAD

workqueues

static

singlethread_cpu

__read_mostly

static

cpumask_t

cpu_singlethread_map

__read_mostly

static

cpumask_t

cpu_populated_map

__read_mostly

static

inline

is_single_threaded

workqueue_struct

wq

return

wq

singlethread

static

cpumask_t

wq_cpu_map

workqueue_struct

wq

return

is_single_threaded

wq

cpu_singlethread_map

cpu_populated_map

static

cpu_workqueue_struct

wq_per_cpu

workqueue_struct

wq

cpu

unlikely

is_single_threaded

wq

cpu

singlethread_cpu

return

per_cpu_ptr

wq

cpu_wq

cpu

static

inline

void

set_wq_data

work_struct

work

cpu_workqueue_struct

cwq

new

BUG_ON

work_pending

work

new

cwq

UL

WORK_STRUCT_PENDING

new

WORK_STRUCT_FLAG_MASK

work_data_bits

work

atomic_long_set

work

data

new

static

inline

cpu_workqueue_struct

get_wq_data

work_struct

work

return

void

atomic_long_read

work

data

WORK_STRUCT_WQ_DATA_MASK

static

void

insert_work

cpu_workqueue_struct

cwq

work_struct

work

tail

set_wq_data

work

cwq

smp_wmb

tail

list_add_tail

work

entry

cwq

worklist

list_add

work

entry

cwq

worklist

wake_up

cwq

more_work

static

void

__queue_work

cpu_workqueue_struct

cwq

work_struct

work

flags

spin_lock_irqsave

cwq

lock

flags

insert_work

cwq

work

spin_unlock_irqrestore

cwq

lock

flags

fastcall

queue_work

workqueue_struct

wq

work_struct

work

ret

test_and_set_bit

WORK_STRUCT_PENDING

work_data_bits

work

BUG_ON

list_empty

work

entry

__queue_work

wq_per_cpu

wq

get_cpu

work

put_cpu

ret

return

ret

EXPORT_SYMBOL_GPL

queue_work

void

delayed_work_timer_fn

__data

delayed_work

dwork

delayed_work

__data

cpu_workqueue_struct

cwq

get_wq_data

dwork

work

workqueue_struct

wq

cwq

wq

__queue_work

wq_per_cpu

wq

smp_processor_id

dwork

work

fastcall

queue_delayed_work

workqueue_struct

wq

delayed_work

dwork

delay

timer_stats_timer_set_start_info

dwork

timer

delay

return

queue_work

wq

dwork

work

return

queue_delayed_work_on

wq

dwork

delay

EXPORT_SYMBOL_GPL

queue_delayed_work

queue_delayed_work_on

cpu

workqueue_struct

wq

delayed_work

dwork

delay

ret

timer_list

timer

dwork

timer

work_struct

work

dwork

work

test_and_set_bit

WORK_STRUCT_PENDING

work_data_bits

work

BUG_ON

timer_pending

timer

BUG_ON

list_empty

work

entry

set_wq_data

work

wq_per_cpu

wq

raw_smp_processor_id

timer

expires

jiffies

delay

timer

data

dwork

timer

function

delayed_work_timer_fn

unlikely

cpu

add_timer_on

timer

cpu

add_timer

timer

ret

return

ret

EXPORT_SYMBOL_GPL

queue_delayed_work_on

static

void

run_workqueue

cpu_workqueue_struct

cwq

spin_lock_irq

cwq

lock

cwq

run_depth

cwq

run_depth

printk

__FUNCTION__

cwq

run_depth

dump_stack

list_empty

cwq

worklist

work_struct

work

list_entry

cwq

worklist

next

work_struct

entry

work_func_t

f

work

func

cwq

current_work

work

list_del_init

cwq

worklist

next

spin_unlock_irq

cwq

lock

BUG_ON

get_wq_data

work

cwq

work_clear_pending

work

f

work

unlikely

in_atomic

lockdep_depth

current

printk

KERN_ERR

current

comm

preempt_count

current

pid

printk

KERN_ERR

print_symbol

f

debug_show_held_locks

current

dump_stack

spin_lock_irq

cwq

lock

cwq

current_work

NULL

cwq

run_depth

spin_unlock_irq

cwq

lock

static

worker_thread

void

__cwq

cpu_workqueue_struct

cwq

__cwq

DEFINE_WAIT

wait

cwq

wq

freezeable

current

flags

PF_NOFREEZE

set_user_nice

current

prepare_to_wait

cwq

more_work

wait

TASK_INTERRUPTIBLE

freezing

current

kthread_should_stop

list_empty

cwq

worklist

schedule

finish_wait

cwq

more_work

wait

try_to_freeze

kthread_should_stop

run_workqueue

cwq

return

wq_barrier

work_struct

work

completion

done

static

void

wq_barrier_func

work_struct

work

wq_barrier

barr

container_of

work

wq_barrier

work

complete

barr

done

static

void

insert_wq_barrier

cpu_workqueue_struct

cwq

wq_barrier

barr

tail

INIT_WORK

barr

work

wq_barrier_func

__set_bit

WORK_STRUCT_PENDING

work_data_bits

barr

work

init_completion

barr

done

insert_work

cwq

barr

work

tail

static

flush_cpu_workqueue

cpu_workqueue_struct

cwq

active

cwq

thread

current

run_workqueue

cwq

active

wq_barrier

barr

active

spin_lock_irq

cwq

lock

list_empty

cwq

worklist

cwq

current_work

NULL

insert_wq_barrier

cwq

barr

active

spin_unlock_irq

cwq

lock

active

wait_for_completion

barr

done

return

active

void

fastcall

flush_workqueue

workqueue_struct

wq

cpumask_t

cpu_map

wq_cpu_map

wq

cpu

might_sleep

for_each_cpu_mask

cpu

cpu_map

flush_cpu_workqueue

per_cpu_ptr

wq

cpu_wq

cpu

EXPORT_SYMBOL_GPL

flush_workqueue

static

try_to_grab_pending

work_struct

work

cpu_workqueue_struct

cwq

ret

test_and_set_bit

WORK_STRUCT_PENDING

work_data_bits

work

return

cwq

get_wq_data

work

cwq

return

ret

spin_lock_irq

cwq

lock

list_empty

work

entry

smp_rmb

cwq

get_wq_data

work

list_del_init

work

entry

ret

spin_unlock_irq

cwq

lock

return

ret

static

void

wait_on_cpu_work

cpu_workqueue_struct

cwq

work_struct

work

wq_barrier

barr

running

spin_lock_irq

cwq

lock

unlikely

cwq

current_work

work

insert_wq_barrier

cwq

barr

running

spin_unlock_irq

cwq

lock

unlikely

running

wait_for_completion

barr

done

static

void

wait_on_work

work_struct

work

cpu_workqueue_struct

cwq

workqueue_struct

wq

cpumask_t

cpu_map

cpu

might_sleep

cwq

get_wq_data

work

cwq

return

wq

cwq

wq

cpu_map

wq_cpu_map

wq

for_each_cpu_mask

cpu

cpu_map

wait_on_cpu_work

per_cpu_ptr

wq

cpu_wq

cpu

work

void

cancel_work_sync

work_struct

work

try_to_grab_pending

work

cpu_relax

wait_on_work

work

work_clear_pending

work

EXPORT_SYMBOL_GPL

cancel_work_sync

void

cancel_rearming_delayed_work

delayed_work

dwork

del_timer

dwork

timer

try_to_grab_pending

dwork

work

cpu_relax

wait_on_work

dwork

work

work_clear_pending

dwork

work

EXPORT_SYMBOL

cancel_rearming_delayed_work

static

workqueue_struct

keventd_wq

__read_mostly

fastcall

schedule_work

work_struct

work

return

queue_work

keventd_wq

work

EXPORT_SYMBOL

schedule_work

fastcall

schedule_delayed_work

delayed_work

dwork

delay

timer_stats_timer_set_start_info

dwork

timer

return

queue_delayed_work

keventd_wq

dwork

delay

EXPORT_SYMBOL

schedule_delayed_work

schedule_delayed_work_on

cpu

delayed_work

dwork

delay

return

queue_delayed_work_on

cpu

keventd_wq

dwork

delay

EXPORT_SYMBOL

schedule_delayed_work_on

schedule_on_each_cpu

work_func_t

func

cpu

work_struct

works

works

alloc_percpu

work_struct

works

return

ENOMEM

preempt_disable

for_each_online_cpu

cpu

work_struct

work

per_cpu_ptr

works

cpu

INIT_WORK

work

func

set_bit

WORK_STRUCT_PENDING

work_data_bits

work

__queue_work

per_cpu_ptr

keventd_wq

cpu_wq

cpu

work

preempt_enable

flush_workqueue

keventd_wq

free_percpu

works

return

void

flush_scheduled_work

void

flush_workqueue

keventd_wq

EXPORT_SYMBOL

flush_scheduled_work

execute_in_process_context

work_func_t

fn

execute_work

ew

in_interrupt

fn

ew

work

return

INIT_WORK

ew

work

fn

schedule_work

ew

work

return

EXPORT_SYMBOL_GPL

execute_in_process_context

keventd_up

void

return

keventd_wq

NULL

current_is_keventd

void

cpu_workqueue_struct

cwq

cpu

smp_processor_id

ret

BUG_ON

keventd_wq

cwq

per_cpu_ptr

keventd_wq

cpu_wq

cpu

current

cwq

thread

ret

return

ret

static

cpu_workqueue_struct

init_cpu_workqueue

workqueue_struct

wq

cpu

cpu_workqueue_struct

cwq

per_cpu_ptr

wq

cpu_wq

cpu

cwq

wq

wq

spin_lock_init

cwq

lock

INIT_LIST_HEAD

cwq

worklist

init_waitqueue_head

cwq

more_work

return

cwq

static

create_workqueue_thread

cpu_workqueue_struct

cwq

cpu

workqueue_struct

wq

cwq

wq

fmt

is_single_threaded

wq

task_struct

p

p

kthread_create

worker_thread

cwq

fmt

wq

name

cpu

IS_ERR

p

return

PTR_ERR

p

cwq

thread

p

return

static

void

start_workqueue_thread

cpu_workqueue_struct

cwq

cpu

task_struct

p

cwq

thread

p

NULL

cpu

kthread_bind

p

cpu

wake_up_process

p

workqueue_struct

__create_workqueue

name

singlethread

freezeable

workqueue_struct

wq

cpu_workqueue_struct

cwq

err

cpu

wq

kzalloc

sizeof

wq

GFP_KERNEL

wq

return

NULL

wq

cpu_wq

alloc_percpu

cpu_workqueue_struct

wq

cpu_wq

kfree

wq

return

NULL

wq

name

name

wq

singlethread

singlethread

wq

freezeable

freezeable

INIT_LIST_HEAD

wq

list

singlethread

cwq

init_cpu_workqueue

wq

singlethread_cpu

err

create_workqueue_thread

cwq

singlethread_cpu

start_workqueue_thread

cwq

mutex_lock

workqueue_mutex

list_add

wq

list

workqueues

for_each_possible_cpu

cpu

cwq

init_cpu_workqueue

wq

cpu

err

cpu_online

cpu

err

create_workqueue_thread

cwq

cpu

start_workqueue_thread

cwq

cpu

mutex_unlock

workqueue_mutex

err

destroy_workqueue

wq

wq

NULL

return

wq

EXPORT_SYMBOL_GPL

__create_workqueue

static

void

cleanup_workqueue_thread

cpu_workqueue_struct

cwq

cpu

cwq

thread

NULL

return

flush_cpu_workqueue

cwq

kthread_stop

cwq

thread

cwq

thread

NULL

void

destroy_workqueue

workqueue_struct

wq

cpumask_t

cpu_map

wq_cpu_map

wq

cpu_workqueue_struct

cwq

cpu

mutex_lock

workqueue_mutex

list_del

wq

list

mutex_unlock

workqueue_mutex

for_each_cpu_mask

cpu

cpu_map

cwq

per_cpu_ptr

wq

cpu_wq

cpu

cleanup_workqueue_thread

cwq

cpu

free_percpu

wq

cpu_wq

kfree

wq

EXPORT_SYMBOL_GPL

destroy_workqueue

static

__devinit

workqueue_cpu_callback

notifier_block

nfb

action

void

hcpu

cpu

hcpu

cpu_workqueue_struct

cwq

workqueue_struct

wq

action

CPU_TASKS_FROZEN

action

case

CPU_LOCK_ACQUIRE

mutex_lock

workqueue_mutex

return

NOTIFY_OK

case

CPU_LOCK_RELEASE

mutex_unlock

workqueue_mutex

return

NOTIFY_OK

case

CPU_UP_PREPARE

cpu_set

cpu

cpu_populated_map

list_for_each_entry

wq

workqueues

list

cwq

per_cpu_ptr

wq

cpu_wq

cpu

action

case

CPU_UP_PREPARE

create_workqueue_thread

cwq

cpu

printk

KERN_ERR

cpu

return

NOTIFY_BAD

case

CPU_ONLINE

start_workqueue_thread

cwq

cpu

case

CPU_UP_CANCELED

start_workqueue_thread

cwq

case

CPU_DEAD

cleanup_workqueue_thread

cwq

cpu

return

NOTIFY_OK

void

__init

init_workqueues

void

cpu_populated_map

cpu_online_map

singlethread_cpu

first_cpu

cpu_possible_map

cpu_singlethread_map

cpumask_of_cpu

singlethread_cpu

hotcpu_notifier

workqueue_cpu_callback

keventd_wq

create_workqueue

BUG_ON

keventd_wq
// TokenN: 158588 [1]
// FileSize: 1585337 [Byte] = 1548.18 [kB] = 1.5119 [MB].
,------------------------------------------------------------------------------------
| [START]
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
TYPE_INT

acct_parm
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
NUMBER
COMMA
NUMBER
COMMA
NUMBER
CURLY_BRACKET_C
SEMICOLON
PP_DEFINE

RESUME
BRACKET_O

acct_parm
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
PP_DEFINE

SUSPEND
BRACKET_O

acct_parm
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
PP_DEFINE

ACCT_TIMEOUT
BRACKET_O

acct_parm
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C

static

void

do_acct_process
BRACKET_O
STRUCT

file
MULT
BRACKET_C
SEMICOLON
STRUCT

acct_glbs
CURLY_BRACKET_O

spinlock_t

lock
SEMICOLON

volatile
TYPE_INT

active
SEMICOLON

volatile
TYPE_INT

needcheck
SEMICOLON
STRUCT

file
MULT

file
SEMICOLON
STRUCT

timer_list

timer
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

acct_glbs

acct_globals

__cacheline_aligned
OP_ASSIGNMENT
CURLY_BRACKET_O

__SPIN_LOCK_UNLOCKED
BRACKET_O

acct_globals
DOT

lock
BRACKET_C
CURLY_BRACKET_C
SEMICOLON

static

void

acct_timeout
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

unused
BRACKET_C
CURLY_BRACKET_O

acct_globals
DOT

needcheck
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

check_free_space
BRACKET_O
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
STRUCT

kstatfs

sbuf
SEMICOLON
TYPE_INT

res
SEMICOLON
TYPE_INT

act
SEMICOLON

sector_t

resume
SEMICOLON

sector_t

suspend
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON

res
OP_ASSIGNMENT

acct_globals
DOT

active
SEMICOLON
IF
BRACKET_O
NOT

file
OR
NOT

acct_globals
DOT

needcheck
BRACKET_C

goto

out
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

vfs_statfs
BRACKET_O

file
MINUS
GREATER

f_path
DOT

dentry
COMMA
AMPERSANT

sbuf
BRACKET_C
BRACKET_C

return

res
SEMICOLON

suspend
OP_ASSIGNMENT

sbuf
DOT

f_blocks
MULT

SUSPEND
SEMICOLON

resume
OP_ASSIGNMENT

sbuf
DOT

f_blocks
MULT

RESUME
SEMICOLON

sector_div
BRACKET_O

suspend
COMMA
NUMBER
BRACKET_C
SEMICOLON

sector_div
BRACKET_O

resume
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

sbuf
DOT

f_bavail
LE_EQ

suspend
BRACKET_C

act
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
ELSE
IF
BRACKET_O

sbuf
DOT

f_bavail
GR_EQ

resume
BRACKET_C

act
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE

act
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

file
NOT_EQ

acct_globals
DOT

file
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

act
BRACKET_C

res
OP_ASSIGNMENT

act
GREATER
NUMBER
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

acct_globals
DOT

active
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

act
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

acct_globals
DOT

active
OP_ASSIGNMENT
NUMBER
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

act
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

acct_globals
DOT

active
OP_ASSIGNMENT
NUMBER
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

del_timer
BRACKET_O
AMPERSANT

acct_globals
DOT

timer
BRACKET_C
SEMICOLON

acct_globals
DOT

needcheck
OP_ASSIGNMENT
NUMBER
SEMICOLON

acct_globals
DOT

timer
DOT

expires
OP_ASSIGNMENT

jiffies
PLUS

ACCT_TIMEOUT
MULT

HZ
SEMICOLON

add_timer
BRACKET_O
AMPERSANT

acct_globals
DOT

timer
BRACKET_C
SEMICOLON

res
OP_ASSIGNMENT

acct_globals
DOT

active
SEMICOLON

out
COLON

spin_unlock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON

return

res
SEMICOLON
CURLY_BRACKET_C

static

void

acct_file_reopen
BRACKET_O
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
STRUCT

file
MULT

old_acct
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

acct_globals
DOT

file
BRACKET_C
CURLY_BRACKET_O

old_acct
OP_ASSIGNMENT

acct_globals
DOT

file
SEMICOLON

del_timer
BRACKET_O
AMPERSANT

acct_globals
DOT

timer
BRACKET_C
SEMICOLON

acct_globals
DOT

active
OP_ASSIGNMENT
NUMBER
SEMICOLON

acct_globals
DOT

needcheck
OP_ASSIGNMENT
NUMBER
SEMICOLON

acct_globals
DOT

file
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

file
BRACKET_C
CURLY_BRACKET_O

acct_globals
DOT

file
OP_ASSIGNMENT

file
SEMICOLON

acct_globals
DOT

needcheck
OP_ASSIGNMENT
NUMBER
SEMICOLON

acct_globals
DOT

active
OP_ASSIGNMENT
NUMBER
SEMICOLON

init_timer
BRACKET_O
AMPERSANT

acct_globals
DOT

timer
BRACKET_C
SEMICOLON

acct_globals
DOT

timer
DOT

function
OP_ASSIGNMENT

acct_timeout
SEMICOLON

acct_globals
DOT

timer
DOT

expires
OP_ASSIGNMENT

jiffies
PLUS

ACCT_TIMEOUT
MULT

HZ
SEMICOLON

add_timer
BRACKET_O
AMPERSANT

acct_globals
DOT

timer
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

old_acct
BRACKET_C
CURLY_BRACKET_O

mnt_unpin
BRACKET_O

old_acct
MINUS
GREATER

f_path
DOT

mnt
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON

do_acct_process
BRACKET_O

old_acct
BRACKET_C
SEMICOLON

filp_close
BRACKET_O

old_acct
COMMA

NULL
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

acct_on
BRACKET_O
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
STRUCT

file
MULT

file
SEMICOLON
TYPE_INT

error
SEMICOLON

file
OP_ASSIGNMENT

filp_open
BRACKET_O

name
COMMA

O_WRONLY
LOGICAL_OR

O_APPEND
LOGICAL_OR

O_LARGEFILE
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

file
BRACKET_C
BRACKET_C

return

PTR_ERR
BRACKET_O

file
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

S_ISREG
BRACKET_O

file
MINUS
GREATER

f_path
DOT

dentry
MINUS
GREATER

d_inode
MINUS
GREATER

i_mode
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

filp_close
BRACKET_O

file
COMMA

NULL
BRACKET_C
SEMICOLON

return
MINUS

EACCES
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

file
MINUS
GREATER

f_op
MINUS
GREATER

write
BRACKET_C
CURLY_BRACKET_O

filp_close
BRACKET_O

file
COMMA

NULL
BRACKET_C
SEMICOLON

return
MINUS

EIO
SEMICOLON
CURLY_BRACKET_C

error
OP_ASSIGNMENT

security_acct
BRACKET_O

file
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C
CURLY_BRACKET_O

filp_close
BRACKET_O

file
COMMA

NULL
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C

spin_lock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON

mnt_pin
BRACKET_O

file
MINUS
GREATER

f_path
DOT

mnt
BRACKET_C
SEMICOLON

acct_file_reopen
BRACKET_O

file
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON

mntput
BRACKET_O

file
MINUS
GREATER

f_path
DOT

mnt
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_acct
BRACKET_O
CONST
TYPE_CHAR

__user
MULT

name
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SYS_PACCT
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

name
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

tmp
OP_ASSIGNMENT

getname
BRACKET_O

name
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

tmp
BRACKET_C
BRACKET_C

return
BRACKET_O

PTR_ERR
BRACKET_O

tmp
BRACKET_C
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

acct_on
BRACKET_O

tmp
BRACKET_C
SEMICOLON

putname
BRACKET_O

tmp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

error
OP_ASSIGNMENT

security_acct
BRACKET_O

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON

acct_file_reopen
BRACKET_O

NULL
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

error
SEMICOLON
CURLY_BRACKET_C

void

acct_auto_close_mnt
BRACKET_O
STRUCT

vfsmount
MULT

m
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

acct_globals
DOT

file
AND

acct_globals
DOT

file
MINUS
GREATER

f_path
DOT

mnt
EQ

m
BRACKET_C

acct_file_reopen
BRACKET_O

NULL
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

acct_auto_close
BRACKET_O
STRUCT

super_block
MULT

sb
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

acct_globals
DOT

file
AND

acct_globals
DOT

file
MINUS
GREATER

f_path
DOT

mnt
MINUS
GREATER

mnt_sb
EQ

sb
BRACKET_C
CURLY_BRACKET_O

acct_file_reopen
BRACKET_O

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

MANTSIZE
NUMBER
PP_DEFINE

EXPSIZE
NUMBER
PP_DEFINE

MAXFRACT
BRACKET_O
BRACKET_O
NUMBER
LESS
LESS

MANTSIZE
BRACKET_C
MINUS
NUMBER
BRACKET_C

static

comp_t

encode_comp_t
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

value
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

exp
COMMA

rnd
SEMICOLON

exp
OP_ASSIGNMENT

rnd
OP_ASSIGNMENT
NUMBER
SEMICOLON
WHILE
BRACKET_O

value
GREATER

MAXFRACT
BRACKET_C
CURLY_BRACKET_O

rnd
OP_ASSIGNMENT

value
AMPERSANT
BRACKET_O
NUMBER
LESS
LESS
BRACKET_O

EXPSIZE
MINUS
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

value
GREATER
GR_EQ

EXPSIZE
SEMICOLON

exp
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

rnd
AND
BRACKET_O
PLUS
PLUS

value
GREATER

MAXFRACT
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

value
GREATER
GR_EQ

EXPSIZE
SEMICOLON

exp
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

exp
LESS
LE_EQ

MANTSIZE
SEMICOLON

exp
ASSIGN_PLUS

value
SEMICOLON

return

exp
SEMICOLON
CURLY_BRACKET_C
PP_IF

ACCT_VERSION
EQ
NUMBER
OR

ACCT_VERSION
EQ
NUMBER
PP_DEFINE

MANTSIZE2
NUMBER
PP_DEFINE

EXPSIZE2
NUMBER
PP_DEFINE

MAXFRACT2
BRACKET_O
BRACKET_O
NUMBER

ul
LESS
LESS

MANTSIZE2
BRACKET_C
MINUS
NUMBER
BRACKET_C
PP_DEFINE

MAXEXP2
BRACKET_O
BRACKET_O
NUMBER
LESS
LESS

EXPSIZE2
BRACKET_C
MINUS
NUMBER
BRACKET_C

static

comp2_t

encode_comp2_t
BRACKET_O

u64

value
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

exp
COMMA

rnd
SEMICOLON

exp
OP_ASSIGNMENT
BRACKET_O

value
GREATER
BRACKET_O

MAXFRACT2
GREATER
GREATER
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

rnd
OP_ASSIGNMENT
NUMBER
SEMICOLON
WHILE
BRACKET_O

value
GREATER

MAXFRACT2
BRACKET_C
CURLY_BRACKET_O

rnd
OP_ASSIGNMENT

value
AMPERSANT
NUMBER
SEMICOLON

value
GREATER
GR_EQ
NUMBER
SEMICOLON

exp
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

rnd
AND
BRACKET_O
PLUS
PLUS

value
GREATER

MAXFRACT2
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

value
GREATER
GR_EQ
NUMBER
SEMICOLON

exp
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

exp
GREATER

MAXEXP2
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O
NUMBER

ul
LESS
LESS
BRACKET_O

MANTSIZE2
PLUS

EXPSIZE2
MINUS
NUMBER
BRACKET_C
BRACKET_C
MINUS
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

return
BRACKET_O

value
AMPERSANT
BRACKET_O

MAXFRACT2
GREATER
GREATER
NUMBER
BRACKET_C
BRACKET_C
LOGICAL_OR
BRACKET_O

exp
LESS
LESS
BRACKET_O

MANTSIZE2
MINUS
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ENDIF
PP_IF

ACCT_VERSION
EQ
NUMBER

static

u32

encode_float
BRACKET_O

u64

value
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED

exp
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED

u
SEMICOLON
IF
BRACKET_O

value
EQ
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON
WHILE
BRACKET_O
BRACKET_O

s64
BRACKET_C

value
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

value
LESS
LE_EQ
NUMBER
SEMICOLON

exp
MINUS
MINUS
SEMICOLON
CURLY_BRACKET_C

u
OP_ASSIGNMENT
BRACKET_O

u32
BRACKET_C
BRACKET_O

value
GREATER
GREATER
NUMBER
BRACKET_C
AMPERSANT
NUMBER

x7fffffu
SEMICOLON

return

u
LOGICAL_OR
BRACKET_O

exp
LESS
LESS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static

void

do_acct_process
BRACKET_O
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
STRUCT

pacct_struct
MULT

pacct
OP_ASSIGNMENT
AMPERSANT

current
MINUS
GREATER

signal
MINUS
GREATER

pacct
SEMICOLON

acct_t

ac
SEMICOLON

mm_segment_t

fs
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flim
SEMICOLON

u64

elapsed
SEMICOLON

u64

run_time
SEMICOLON
STRUCT

timespec

uptime
SEMICOLON
STRUCT

tty_struct
MULT

tty
SEMICOLON
IF
BRACKET_O
NOT

check_free_space
BRACKET_O

file
BRACKET_C
BRACKET_C

return
SEMICOLON

memset
BRACKET_O
BRACKET_O

caddr_t
BRACKET_C
AMPERSANT

ac
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

acct_t
BRACKET_C
BRACKET_C
SEMICOLON

ac
DOT

ac_version
OP_ASSIGNMENT

ACCT_VERSION
LOGICAL_OR

ACCT_BYTEORDER
SEMICOLON

strlcpy
BRACKET_O

ac
DOT

ac_comm
COMMA

current
MINUS
GREATER

comm
COMMA

sizeof
BRACKET_O

ac
DOT

ac_comm
BRACKET_C
BRACKET_C
SEMICOLON

do_posix_clock_monotonic_gettime
BRACKET_O
AMPERSANT

uptime
BRACKET_C
SEMICOLON

run_time
OP_ASSIGNMENT
BRACKET_O

u64
BRACKET_C

uptime
DOT

tv_sec
MULT

NSEC_PER_SEC
PLUS

uptime
DOT

tv_nsec
SEMICOLON

run_time
ASSIGN_MINUS
BRACKET_O

u64
BRACKET_C

current
MINUS
GREATER

group_leader
MINUS
GREATER

start_time
DOT

tv_sec
MULT

NSEC_PER_SEC
PLUS

current
MINUS
GREATER

group_leader
MINUS
GREATER

start_time
DOT

tv_nsec
SEMICOLON

elapsed
OP_ASSIGNMENT

nsec_to_AHZ
BRACKET_O

run_time
BRACKET_C
SEMICOLON
PP_IF

ACCT_VERSION
EQ
NUMBER

ac
DOT

ac_etime
OP_ASSIGNMENT

encode_float
BRACKET_O

elapsed
BRACKET_C
SEMICOLON
PP_ELSE

ac
DOT

ac_etime
OP_ASSIGNMENT

encode_comp_t
BRACKET_O

elapsed
LESS
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS
NUMBER

l
QUESTION_MARK
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

elapsed
COLON
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS
NUMBER

l
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IF

ACCT_VERSION
EQ
NUMBER
OR

ACCT_VERSION
EQ
NUMBER
CURLY_BRACKET_O

comp2_t

etime
OP_ASSIGNMENT

encode_comp2_t
BRACKET_O

elapsed
BRACKET_C
SEMICOLON

ac
DOT

ac_etime_hi
OP_ASSIGNMENT

etime
GREATER
GREATER
NUMBER
SEMICOLON

ac
DOT

ac_etime_lo
OP_ASSIGNMENT
BRACKET_O

u16
BRACKET_C

etime
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

do_div
BRACKET_O

elapsed
COMMA

AHZ
BRACKET_C
SEMICOLON

ac
DOT

ac_btime
OP_ASSIGNMENT

xtime
DOT

tv_sec
MINUS

elapsed
SEMICOLON

ac
DOT

ac_uid
OP_ASSIGNMENT

current
MINUS
GREATER

uid
SEMICOLON

ac
DOT

ac_gid
OP_ASSIGNMENT

current
MINUS
GREATER

gid
SEMICOLON
PP_IF

ACCT_VERSION
EQ
NUMBER

ac
DOT

ac_ahz
OP_ASSIGNMENT

AHZ
SEMICOLON
PP_ENDIF
PP_IF

ACCT_VERSION
EQ
NUMBER
OR

ACCT_VERSION
EQ
NUMBER

ac
DOT

ac_uid16
OP_ASSIGNMENT

current
MINUS
GREATER

uid
SEMICOLON

ac
DOT

ac_gid16
OP_ASSIGNMENT

current
MINUS
GREATER

gid
SEMICOLON
PP_ENDIF
PP_IF

ACCT_VERSION
EQ
NUMBER

ac
DOT

ac_pid
OP_ASSIGNMENT

current
MINUS
GREATER

tgid
SEMICOLON

ac
DOT

ac_ppid
OP_ASSIGNMENT

current
MINUS
GREATER

parent
MINUS
GREATER

tgid
SEMICOLON
PP_ENDIF

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

tty
OP_ASSIGNMENT

current
MINUS
GREATER

signal
MINUS
GREATER

tty
SEMICOLON

ac
DOT

ac_tty
OP_ASSIGNMENT

tty
QUESTION_MARK

old_encode_dev
BRACKET_O

tty_devnum
BRACKET_O

tty
BRACKET_C
BRACKET_C
COLON
NUMBER
SEMICOLON

ac
DOT

ac_utime
OP_ASSIGNMENT

encode_comp_t
BRACKET_O

jiffies_to_AHZ
BRACKET_O

cputime_to_jiffies
BRACKET_O

pacct
MINUS
GREATER

ac_utime
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

ac
DOT

ac_stime
OP_ASSIGNMENT

encode_comp_t
BRACKET_O

jiffies_to_AHZ
BRACKET_O

cputime_to_jiffies
BRACKET_O

pacct
MINUS
GREATER

ac_stime
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

ac
DOT

ac_flag
OP_ASSIGNMENT

pacct
MINUS
GREATER

ac_flag
SEMICOLON

ac
DOT

ac_mem
OP_ASSIGNMENT

encode_comp_t
BRACKET_O

pacct
MINUS
GREATER

ac_mem
BRACKET_C
SEMICOLON

ac
DOT

ac_minflt
OP_ASSIGNMENT

encode_comp_t
BRACKET_O

pacct
MINUS
GREATER

ac_minflt
BRACKET_C
SEMICOLON

ac
DOT

ac_majflt
OP_ASSIGNMENT

encode_comp_t
BRACKET_O

pacct
MINUS
GREATER

ac_majflt
BRACKET_C
SEMICOLON

ac
DOT

ac_exitcode
OP_ASSIGNMENT

pacct
MINUS
GREATER

ac_exitcode
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

ac
DOT

ac_io
OP_ASSIGNMENT

encode_comp_t
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

ac
DOT

ac_rw
OP_ASSIGNMENT

encode_comp_t
BRACKET_O

ac
DOT

ac_io
DIV
NUMBER
BRACKET_C
SEMICOLON

ac
DOT

ac_swaps
OP_ASSIGNMENT

encode_comp_t
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

fs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

flim
OP_ASSIGNMENT

current
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_FSIZE
CORNER_BRACKET_C
DOT

rlim_cur
SEMICOLON

current
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_FSIZE
CORNER_BRACKET_C
DOT

rlim_cur
OP_ASSIGNMENT

RLIM_INFINITY
SEMICOLON

file
MINUS
GREATER

f_op
MINUS
GREATER

write
BRACKET_O

file
COMMA
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C
AMPERSANT

ac
COMMA

sizeof
BRACKET_O

acct_t
BRACKET_C
COMMA
AMPERSANT

file
MINUS
GREATER

f_pos
BRACKET_C
SEMICOLON

current
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_FSIZE
CORNER_BRACKET_C
DOT

rlim_cur
OP_ASSIGNMENT

flim
SEMICOLON

set_fs
BRACKET_O

fs
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

acct_init_pacct
BRACKET_O
STRUCT

pacct_struct
MULT

pacct
BRACKET_C
CURLY_BRACKET_O

memset
BRACKET_O

pacct
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
STRUCT

pacct_struct
BRACKET_C
BRACKET_C
SEMICOLON

pacct
MINUS
GREATER

ac_utime
OP_ASSIGNMENT

pacct
MINUS
GREATER

ac_stime
OP_ASSIGNMENT

cputime_zero
SEMICOLON
CURLY_BRACKET_C

void

acct_collect
BRACKET_O
TYPE_LONG

exitcode
COMMA
TYPE_INT

group_dead
BRACKET_C
CURLY_BRACKET_O
STRUCT

pacct_struct
MULT

pacct
OP_ASSIGNMENT
AMPERSANT

current
MINUS
GREATER

signal
MINUS
GREATER

pacct
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

vsize
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

group_dead
AND

current
MINUS
GREATER

mm
BRACKET_C
CURLY_BRACKET_O
STRUCT

vm_area_struct
MULT

vma
SEMICOLON

down_read
BRACKET_O
AMPERSANT

current
MINUS
GREATER

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON

vma
OP_ASSIGNMENT

current
MINUS
GREATER

mm
MINUS
GREATER

mmap
SEMICOLON
WHILE
BRACKET_O

vma
BRACKET_C
CURLY_BRACKET_O

vsize
ASSIGN_PLUS

vma
MINUS
GREATER

vm_end
MINUS

vma
MINUS
GREATER

vm_start
SEMICOLON

vma
OP_ASSIGNMENT

vma
MINUS
GREATER

vm_next
SEMICOLON
CURLY_BRACKET_C

up_read
BRACKET_O
AMPERSANT

current
MINUS
GREATER

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

group_dead
BRACKET_C

pacct
MINUS
GREATER

ac_mem
OP_ASSIGNMENT

vsize
DIV
NUMBER
SEMICOLON
IF
BRACKET_O

thread_group_leader
BRACKET_O

current
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

pacct
MINUS
GREATER

ac_exitcode
OP_ASSIGNMENT

exitcode
SEMICOLON
IF
BRACKET_O

current
MINUS
GREATER

flags
AMPERSANT

PF_FORKNOEXEC
BRACKET_C

pacct
MINUS
GREATER

ac_flag
LOGICAL_OR
OP_ASSIGNMENT

AFORK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

current
MINUS
GREATER

flags
AMPERSANT

PF_SUPERPRIV
BRACKET_C

pacct
MINUS
GREATER

ac_flag
LOGICAL_OR
OP_ASSIGNMENT

ASU
SEMICOLON
IF
BRACKET_O

current
MINUS
GREATER

flags
AMPERSANT

PF_DUMPCORE
BRACKET_C

pacct
MINUS
GREATER

ac_flag
LOGICAL_OR
OP_ASSIGNMENT

ACORE
SEMICOLON
IF
BRACKET_O

current
MINUS
GREATER

flags
AMPERSANT

PF_SIGNALED
BRACKET_C

pacct
MINUS
GREATER

ac_flag
LOGICAL_OR
OP_ASSIGNMENT

AXSIG
SEMICOLON

pacct
MINUS
GREATER

ac_utime
OP_ASSIGNMENT

cputime_add
BRACKET_O

pacct
MINUS
GREATER

ac_utime
COMMA

current
MINUS
GREATER

utime
BRACKET_C
SEMICOLON

pacct
MINUS
GREATER

ac_stime
OP_ASSIGNMENT

cputime_add
BRACKET_O

pacct
MINUS
GREATER

ac_stime
COMMA

current
MINUS
GREATER

stime
BRACKET_C
SEMICOLON

pacct
MINUS
GREATER

ac_minflt
ASSIGN_PLUS

current
MINUS
GREATER

min_flt
SEMICOLON

pacct
MINUS
GREATER

ac_majflt
ASSIGN_PLUS

current
MINUS
GREATER

maj_flt
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

acct_process
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

file
MULT

file
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O
NOT

acct_globals
DOT

file
BRACKET_C

return
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON

file
OP_ASSIGNMENT

acct_globals
DOT

file
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

file
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

get_file
BRACKET_O

file
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

acct_globals
DOT

lock
BRACKET_C
SEMICOLON

do_acct_process
BRACKET_O

file
BRACKET_C
SEMICOLON

fput
BRACKET_O

file
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static
TYPE_INT

audit_initialized
SEMICOLON
TYPE_INT

audit_enabled
SEMICOLON

static
TYPE_INT

audit_default
SEMICOLON

static
TYPE_INT

audit_failure
OP_ASSIGNMENT

AUDIT_FAIL_PRINTK
SEMICOLON
TYPE_INT

audit_pid
SEMICOLON

static
TYPE_INT

audit_rate_limit
SEMICOLON

static
TYPE_INT

audit_backlog_limit
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
TYPE_INT

audit_backlog_wait_time
OP_ASSIGNMENT
NUMBER
MULT

HZ
SEMICOLON

static
TYPE_INT

audit_backlog_wait_overflow
OP_ASSIGNMENT
NUMBER
SEMICOLON

uid_t

audit_sig_uid
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

pid_t

audit_sig_pid
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

u32

audit_sig_sid
OP_ASSIGNMENT
NUMBER
SEMICOLON

static

atomic_t

audit_lost
OP_ASSIGNMENT

ATOMIC_INIT
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

static
STRUCT

sock
MULT

audit_sock
SEMICOLON
STRUCT

inotify_handle
MULT

audit_ih
SEMICOLON
STRUCT

list_head

audit_inode_hash
CORNER_BRACKET_O

AUDIT_INODE_BUCKETS
CORNER_BRACKET_C
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

audit_freelist_lock
BRACKET_C
SEMICOLON

static
TYPE_INT

audit_freelist_count
SEMICOLON

static

LIST_HEAD
BRACKET_O

audit_freelist
BRACKET_C
SEMICOLON

static
STRUCT

sk_buff_head

audit_skb_queue
SEMICOLON

static
STRUCT

task_struct
MULT

kauditd_task
SEMICOLON

static

DECLARE_WAIT_QUEUE_HEAD
BRACKET_O

kauditd_wait
BRACKET_C
SEMICOLON

static

DECLARE_WAIT_QUEUE_HEAD
BRACKET_O

audit_backlog_wait
BRACKET_C
SEMICOLON

static

DEFINE_MUTEX
BRACKET_O

audit_cmd_mutex
BRACKET_C
SEMICOLON
PP_DEFINE

AUDIT_BUFSIZ
NUMBER
PP_DEFINE

AUDIT_MAXFREE
BRACKET_O
NUMBER
MULT

NR_CPUS
BRACKET_C
STRUCT

audit_buffer
CURLY_BRACKET_O
STRUCT

list_head

list
SEMICOLON
STRUCT

sk_buff
MULT

skb
SEMICOLON
STRUCT

audit_context
MULT

ctx
SEMICOLON

gfp_t

gfp_mask
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static

void

audit_set_pid
BRACKET_O
STRUCT

audit_buffer
MULT

ab
COMMA

pid_t

pid
BRACKET_C
CURLY_BRACKET_O
STRUCT

nlmsghdr
MULT

nlh
OP_ASSIGNMENT

nlmsg_hdr
BRACKET_O

ab
MINUS
GREATER

skb
BRACKET_C
SEMICOLON

nlh
MINUS
GREATER

nlmsg_pid
OP_ASSIGNMENT

pid
SEMICOLON
CURLY_BRACKET_C

void

audit_panic
BRACKET_O
CONST
TYPE_CHAR
MULT

message
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

audit_failure
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_FAIL_SILENT
COLON
BREAK
SEMICOLON

case

AUDIT_FAIL_PRINTK
COLON

printk
BRACKET_O

KERN_ERR
STRING
COMMA

message
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_FAIL_PANIC
COLON

panic
BRACKET_O
STRING
COMMA

message
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline
TYPE_INT

audit_rate_check
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

static
TYPE_UNSIGNED
TYPE_LONG

last_check
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
TYPE_INT

messages
OP_ASSIGNMENT
NUMBER
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

lock
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

now
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

elapsed
SEMICOLON
TYPE_INT

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

audit_rate_limit
BRACKET_C

return
NUMBER
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
PLUS
PLUS

messages
LESS

audit_rate_limit
BRACKET_C
CURLY_BRACKET_O

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

now
OP_ASSIGNMENT

jiffies
SEMICOLON

elapsed
OP_ASSIGNMENT

now
MINUS

last_check
SEMICOLON
IF
BRACKET_O

elapsed
GREATER

HZ
BRACKET_C
CURLY_BRACKET_O

last_check
OP_ASSIGNMENT

now
SEMICOLON

messages
OP_ASSIGNMENT
NUMBER
SEMICOLON

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

lock
COMMA

flags
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

void

audit_log_lost
BRACKET_O
CONST
TYPE_CHAR
MULT

message
BRACKET_C
CURLY_BRACKET_O

static
TYPE_UNSIGNED
TYPE_LONG

last_msg
OP_ASSIGNMENT
NUMBER
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

lock
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

now
SEMICOLON
TYPE_INT

print
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

audit_lost
BRACKET_C
SEMICOLON

print
OP_ASSIGNMENT
BRACKET_O

audit_failure
EQ

AUDIT_FAIL_PANIC
OR
NOT

audit_rate_limit
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

print
BRACKET_C
CURLY_BRACKET_O

spin_lock_irqsave
BRACKET_O
AMPERSANT

lock
COMMA

flags
BRACKET_C
SEMICOLON

now
OP_ASSIGNMENT

jiffies
SEMICOLON
IF
BRACKET_O

now
MINUS

last_msg
GREATER

HZ
BRACKET_C
CURLY_BRACKET_O

print
OP_ASSIGNMENT
NUMBER
SEMICOLON

last_msg
OP_ASSIGNMENT

now
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

print
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

atomic_read
BRACKET_O
AMPERSANT

audit_lost
BRACKET_C
COMMA

audit_rate_limit
COMMA

audit_backlog_limit
BRACKET_C
SEMICOLON

audit_panic
BRACKET_O

message
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

audit_set_rate_limit
BRACKET_O
TYPE_INT

limit
COMMA

uid_t

loginuid
COMMA

u32

sid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

res
COMMA

rc
OP_ASSIGNMENT
NUMBER
COMMA

old
OP_ASSIGNMENT

audit_rate_limit
SEMICOLON
IF
BRACKET_O

audit_enabled
EQ
NUMBER
BRACKET_C

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

sid
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

ctx
OP_ASSIGNMENT

NULL
SEMICOLON

u32

len
SEMICOLON
IF
BRACKET_O
BRACKET_O

rc
OP_ASSIGNMENT

selinux_sid_to_string
BRACKET_O

sid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

audit_log
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
COMMA
STRING
STRING
COMMA

limit
COMMA

old
COMMA

loginuid
COMMA

ctx
COMMA

res
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

audit_log
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
COMMA
STRING
COMMA

limit
COMMA

old
COMMA

loginuid
COMMA

res
BRACKET_C
SEMICOLON
IF
BRACKET_O

res
EQ
NUMBER
BRACKET_C

audit_rate_limit
OP_ASSIGNMENT

limit
SEMICOLON
ELSE
IF
BRACKET_O

rc
EQ
NUMBER
BRACKET_C

rc
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON

return

rc
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_set_backlog_limit
BRACKET_O
TYPE_INT

limit
COMMA

uid_t

loginuid
COMMA

u32

sid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

res
COMMA

rc
OP_ASSIGNMENT
NUMBER
COMMA

old
OP_ASSIGNMENT

audit_backlog_limit
SEMICOLON
IF
BRACKET_O

audit_enabled
EQ
NUMBER
BRACKET_C

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

sid
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

ctx
OP_ASSIGNMENT

NULL
SEMICOLON

u32

len
SEMICOLON
IF
BRACKET_O
BRACKET_O

rc
OP_ASSIGNMENT

selinux_sid_to_string
BRACKET_O

sid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

audit_log
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
COMMA
STRING
STRING
COMMA

limit
COMMA

old
COMMA

loginuid
COMMA

ctx
COMMA

res
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

audit_log
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
COMMA
STRING
COMMA

limit
COMMA

old
COMMA

loginuid
COMMA

res
BRACKET_C
SEMICOLON
IF
BRACKET_O

res
EQ
NUMBER
BRACKET_C

audit_backlog_limit
OP_ASSIGNMENT

limit
SEMICOLON
ELSE
IF
BRACKET_O

rc
EQ
NUMBER
BRACKET_C

rc
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON

return

rc
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_set_enabled
BRACKET_O
TYPE_INT

state
COMMA

uid_t

loginuid
COMMA

u32

sid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

res
COMMA

rc
OP_ASSIGNMENT
NUMBER
COMMA

old
OP_ASSIGNMENT

audit_enabled
SEMICOLON
IF
BRACKET_O

state
LESS
NUMBER
OR

state
GREATER
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

audit_enabled
EQ
NUMBER
BRACKET_C

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

sid
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

ctx
OP_ASSIGNMENT

NULL
SEMICOLON

u32

len
SEMICOLON
IF
BRACKET_O
BRACKET_O

rc
OP_ASSIGNMENT

selinux_sid_to_string
BRACKET_O

sid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

audit_log
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
COMMA
STRING
STRING
COMMA

state
COMMA

old
COMMA

loginuid
COMMA

ctx
COMMA

res
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

audit_log
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
COMMA
STRING
COMMA

state
COMMA

old
COMMA

loginuid
COMMA

res
BRACKET_C
SEMICOLON
IF
BRACKET_O

res
EQ
NUMBER
BRACKET_C

audit_enabled
OP_ASSIGNMENT

state
SEMICOLON
ELSE
IF
BRACKET_O

rc
EQ
NUMBER
BRACKET_C

rc
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON

return

rc
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_set_failure
BRACKET_O
TYPE_INT

state
COMMA

uid_t

loginuid
COMMA

u32

sid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

res
COMMA

rc
OP_ASSIGNMENT
NUMBER
COMMA

old
OP_ASSIGNMENT

audit_failure
SEMICOLON
IF
BRACKET_O

state
NOT_EQ

AUDIT_FAIL_SILENT
AND

state
NOT_EQ

AUDIT_FAIL_PRINTK
AND

state
NOT_EQ

AUDIT_FAIL_PANIC
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

audit_enabled
EQ
NUMBER
BRACKET_C

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

sid
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

ctx
OP_ASSIGNMENT

NULL
SEMICOLON

u32

len
SEMICOLON
IF
BRACKET_O
BRACKET_O

rc
OP_ASSIGNMENT

selinux_sid_to_string
BRACKET_O

sid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

audit_log
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
COMMA
STRING
STRING
COMMA

state
COMMA

old
COMMA

loginuid
COMMA

ctx
COMMA

res
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

audit_log
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
COMMA
STRING
COMMA

state
COMMA

old
COMMA

loginuid
COMMA

res
BRACKET_C
SEMICOLON
IF
BRACKET_O

res
EQ
NUMBER
BRACKET_C

audit_failure
OP_ASSIGNMENT

state
SEMICOLON
ELSE
IF
BRACKET_O

rc
EQ
NUMBER
BRACKET_C

rc
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON

return

rc
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

kauditd_thread
BRACKET_O

void
MULT

dummy
BRACKET_C
CURLY_BRACKET_O
STRUCT

sk_buff
MULT

skb
SEMICOLON
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

skb
OP_ASSIGNMENT

skb_dequeue
BRACKET_O
AMPERSANT

audit_skb_queue
BRACKET_C
SEMICOLON

wake_up
BRACKET_O
AMPERSANT

audit_backlog_wait
BRACKET_C
SEMICOLON
IF
BRACKET_O

skb
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

audit_pid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT

netlink_unicast
BRACKET_O

audit_sock
COMMA

skb
COMMA

audit_pid
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

err
NOT_EQ
MINUS

ECONNREFUSED
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_ERR
STRING
COMMA

audit_pid
BRACKET_C
SEMICOLON

audit_pid
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

printk
BRACKET_O

KERN_NOTICE
STRING
COMMA

skb
MINUS
GREATER

data
PLUS

NLMSG_SPACE
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

kfree_skb
BRACKET_O

skb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

DECLARE_WAITQUEUE
BRACKET_O

wait
COMMA

current
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON

add_wait_queue
BRACKET_O
AMPERSANT

kauditd_wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

skb_queue_len
BRACKET_O
AMPERSANT

audit_skb_queue
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

try_to_freeze
BRACKET_O
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON

remove_wait_queue
BRACKET_O
AMPERSANT

kauditd_wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_send_list
BRACKET_O

void
MULT

_dest
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_netlink_list
MULT

dest
OP_ASSIGNMENT

_dest
SEMICOLON
TYPE_INT

pid
OP_ASSIGNMENT

dest
MINUS
GREATER

pid
SEMICOLON
STRUCT

sk_buff
MULT

skb
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

audit_cmd_mutex
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

audit_cmd_mutex
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
BRACKET_O

skb
OP_ASSIGNMENT

__skb_dequeue
BRACKET_O
AMPERSANT

dest
MINUS
GREATER

q
BRACKET_C
BRACKET_C
NOT_EQ

NULL
BRACKET_C

netlink_unicast
BRACKET_O

audit_sock
COMMA

skb
COMMA

pid
COMMA
NUMBER
BRACKET_C
SEMICOLON

kfree
BRACKET_O

dest
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
STRUCT

sk_buff
MULT

audit_make_reply
BRACKET_O
TYPE_INT

pid
COMMA
TYPE_INT

seq
COMMA
TYPE_INT

type
COMMA
TYPE_INT

done
COMMA
TYPE_INT

multi
COMMA

void
MULT

payload
COMMA
TYPE_INT

size
BRACKET_C
CURLY_BRACKET_O
STRUCT

sk_buff
MULT

skb
SEMICOLON
STRUCT

nlmsghdr
MULT

nlh
SEMICOLON
TYPE_INT

len
OP_ASSIGNMENT

NLMSG_SPACE
BRACKET_O

size
BRACKET_C
SEMICOLON

void
MULT

data
SEMICOLON
TYPE_INT

flags
OP_ASSIGNMENT

multi
QUESTION_MARK

NLM_F_MULTI
COLON
NUMBER
SEMICOLON
TYPE_INT

t
OP_ASSIGNMENT

done
QUESTION_MARK

NLMSG_DONE
COLON

type
SEMICOLON

skb
OP_ASSIGNMENT

alloc_skb
BRACKET_O

len
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

skb
BRACKET_C

return

NULL
SEMICOLON

nlh
OP_ASSIGNMENT

NLMSG_PUT
BRACKET_O

skb
COMMA

pid
COMMA

seq
COMMA

t
COMMA

size
BRACKET_C
SEMICOLON

nlh
MINUS
GREATER

nlmsg_flags
OP_ASSIGNMENT

flags
SEMICOLON

data
OP_ASSIGNMENT

NLMSG_DATA
BRACKET_O

nlh
BRACKET_C
SEMICOLON

memcpy
BRACKET_O

data
COMMA

payload
COMMA

size
BRACKET_C
SEMICOLON

return

skb
SEMICOLON

nlmsg_failure
COLON
IF
BRACKET_O

skb
BRACKET_C

kfree_skb
BRACKET_O

skb
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

void

audit_send_reply
BRACKET_O
TYPE_INT

pid
COMMA
TYPE_INT

seq
COMMA
TYPE_INT

type
COMMA
TYPE_INT

done
COMMA
TYPE_INT

multi
COMMA

void
MULT

payload
COMMA
TYPE_INT

size
BRACKET_C
CURLY_BRACKET_O
STRUCT

sk_buff
MULT

skb
SEMICOLON

skb
OP_ASSIGNMENT

audit_make_reply
BRACKET_O

pid
COMMA

seq
COMMA

type
COMMA

done
COMMA

multi
COMMA

payload
COMMA

size
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

skb
BRACKET_C

return
SEMICOLON

netlink_unicast
BRACKET_O

audit_sock
COMMA

skb
COMMA

pid
COMMA
NUMBER
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_netlink_ok
BRACKET_O
STRUCT

sk_buff
MULT

skb
COMMA

u16

msg_type
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
SEMICOLON
SWITCH
BRACKET_O

msg_type
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_GET
COLON

case

AUDIT_LIST
COLON

case

AUDIT_LIST_RULES
COLON

case

AUDIT_SET
COLON

case

AUDIT_ADD
COLON

case

AUDIT_ADD_RULE
COLON

case

AUDIT_DEL
COLON

case

AUDIT_DEL_RULE
COLON

case

AUDIT_SIGNAL_INFO
COLON
IF
BRACKET_O

security_netlink_recv
BRACKET_O

skb
COMMA

CAP_AUDIT_CONTROL
BRACKET_C
BRACKET_C

err
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_USER
COLON

case

AUDIT_FIRST_USER_MSG
DOT
DOT
DOT

AUDIT_LAST_USER_MSG
COLON

case

AUDIT_FIRST_USER_MSG2
DOT
DOT
DOT

AUDIT_LAST_USER_MSG2
COLON
IF
BRACKET_O

security_netlink_recv
BRACKET_O

skb
COMMA

CAP_AUDIT_WRITE
BRACKET_C
BRACKET_C

err
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
BREAK
SEMICOLON

default
COLON

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

return

err
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_receive_msg
BRACKET_O
STRUCT

sk_buff
MULT

skb
COMMA
STRUCT

nlmsghdr
MULT

nlh
BRACKET_C
CURLY_BRACKET_O

u32

uid
COMMA

pid
COMMA

seq
COMMA

sid
SEMICOLON

void
MULT

data
SEMICOLON
STRUCT

audit_status
MULT

status_get
COMMA

status_set
SEMICOLON
TYPE_INT

err
SEMICOLON
STRUCT

audit_buffer
MULT

ab
SEMICOLON

u16

msg_type
OP_ASSIGNMENT

nlh
MINUS
GREATER

nlmsg_type
SEMICOLON

uid_t

loginuid
SEMICOLON
STRUCT

audit_sig_info
MULT

sig_data
SEMICOLON
TYPE_CHAR
MULT

ctx
SEMICOLON

u32

len
SEMICOLON

err
OP_ASSIGNMENT

audit_netlink_ok
BRACKET_O

skb
COMMA

msg_type
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

return

err
SEMICOLON
IF
BRACKET_O
NOT

kauditd_task
BRACKET_C

kauditd_task
OP_ASSIGNMENT

kthread_run
BRACKET_O

kauditd_thread
COMMA

NULL
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

kauditd_task
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

kauditd_task
BRACKET_C
SEMICOLON

kauditd_task
OP_ASSIGNMENT

NULL
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C

pid
OP_ASSIGNMENT

NETLINK_CREDS
BRACKET_O

skb
BRACKET_C
MINUS
GREATER

pid
SEMICOLON

uid
OP_ASSIGNMENT

NETLINK_CREDS
BRACKET_O

skb
BRACKET_C
MINUS
GREATER

uid
SEMICOLON

loginuid
OP_ASSIGNMENT

NETLINK_CB
BRACKET_O

skb
BRACKET_C
DOT

loginuid
SEMICOLON

sid
OP_ASSIGNMENT

NETLINK_CB
BRACKET_O

skb
BRACKET_C
DOT

sid
SEMICOLON

seq
OP_ASSIGNMENT

nlh
MINUS
GREATER

nlmsg_seq
SEMICOLON

data
OP_ASSIGNMENT

NLMSG_DATA
BRACKET_O

nlh
BRACKET_C
SEMICOLON
SWITCH
BRACKET_O

msg_type
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_GET
COLON

status_set
DOT

enabled
OP_ASSIGNMENT

audit_enabled
SEMICOLON

status_set
DOT

failure
OP_ASSIGNMENT

audit_failure
SEMICOLON

status_set
DOT

pid
OP_ASSIGNMENT

audit_pid
SEMICOLON

status_set
DOT

rate_limit
OP_ASSIGNMENT

audit_rate_limit
SEMICOLON

status_set
DOT

backlog_limit
OP_ASSIGNMENT

audit_backlog_limit
SEMICOLON

status_set
DOT

lost
OP_ASSIGNMENT

atomic_read
BRACKET_O
AMPERSANT

audit_lost
BRACKET_C
SEMICOLON

status_set
DOT

backlog
OP_ASSIGNMENT

skb_queue_len
BRACKET_O
AMPERSANT

audit_skb_queue
BRACKET_C
SEMICOLON

audit_send_reply
BRACKET_O

NETLINK_CB
BRACKET_O

skb
BRACKET_C
DOT

pid
COMMA

seq
COMMA

AUDIT_GET
COMMA
NUMBER
COMMA
NUMBER
COMMA
AMPERSANT

status_set
COMMA

sizeof
BRACKET_O

status_set
BRACKET_C
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_SET
COLON
IF
BRACKET_O

nlh
MINUS
GREATER

nlmsg_len
LESS

sizeof
BRACKET_O
STRUCT

audit_status
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

status_get
OP_ASSIGNMENT
BRACKET_O
STRUCT

audit_status
MULT
BRACKET_C

data
SEMICOLON
IF
BRACKET_O

status_get
MINUS
GREATER

mask
AMPERSANT

AUDIT_STATUS_ENABLED
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT

audit_set_enabled
BRACKET_O

status_get
MINUS
GREATER

enabled
COMMA

loginuid
COMMA

sid
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

status_get
MINUS
GREATER

mask
AMPERSANT

AUDIT_STATUS_FAILURE
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT

audit_set_failure
BRACKET_O

status_get
MINUS
GREATER

failure
COMMA

loginuid
COMMA

sid
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

status_get
MINUS
GREATER

mask
AMPERSANT

AUDIT_STATUS_PID
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

old
OP_ASSIGNMENT

audit_pid
SEMICOLON
IF
BRACKET_O

sid
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

selinux_sid_to_string
BRACKET_O

sid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C
BRACKET_C

return

err
SEMICOLON
ELSE

audit_log
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
COMMA
STRING
COMMA

status_get
MINUS
GREATER

pid
COMMA

old
COMMA

loginuid
COMMA

ctx
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

audit_log
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
COMMA
STRING
COMMA

status_get
MINUS
GREATER

pid
COMMA

old
COMMA

loginuid
BRACKET_C
SEMICOLON

audit_pid
OP_ASSIGNMENT

status_get
MINUS
GREATER

pid
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

status_get
MINUS
GREATER

mask
AMPERSANT

AUDIT_STATUS_RATE_LIMIT
BRACKET_C

err
OP_ASSIGNMENT

audit_set_rate_limit
BRACKET_O

status_get
MINUS
GREATER

rate_limit
COMMA

loginuid
COMMA

sid
BRACKET_C
SEMICOLON
IF
BRACKET_O

status_get
MINUS
GREATER

mask
AMPERSANT

AUDIT_STATUS_BACKLOG_LIMIT
BRACKET_C

err
OP_ASSIGNMENT

audit_set_backlog_limit
BRACKET_O

status_get
MINUS
GREATER

backlog_limit
COMMA

loginuid
COMMA

sid
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_USER
COLON

case

AUDIT_FIRST_USER_MSG
DOT
DOT
DOT

AUDIT_LAST_USER_MSG
COLON

case

AUDIT_FIRST_USER_MSG2
DOT
DOT
DOT

AUDIT_LAST_USER_MSG2
COLON
IF
BRACKET_O
NOT

audit_enabled
AND

msg_type
NOT_EQ

AUDIT_USER_AVC
BRACKET_C

return
NUMBER
SEMICOLON

err
OP_ASSIGNMENT

audit_filter_user
BRACKET_O
AMPERSANT

NETLINK_CB
BRACKET_O

skb
BRACKET_C
COMMA

msg_type
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
NUMBER
SEMICOLON

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

msg_type
BRACKET_C
SEMICOLON
IF
BRACKET_O

ab
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

pid
COMMA

uid
COMMA

loginuid
BRACKET_C
SEMICOLON
IF
BRACKET_O

sid
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

selinux_sid_to_string
BRACKET_O

sid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

sid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

ctx
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

data
BRACKET_C
SEMICOLON

audit_set_pid
BRACKET_O

ab
COMMA

pid
BRACKET_C
SEMICOLON

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
BREAK
SEMICOLON

case

AUDIT_ADD
COLON

case

AUDIT_DEL
COLON
IF
BRACKET_O

nlmsg_len
BRACKET_O

nlh
BRACKET_C
LESS

sizeof
BRACKET_O
STRUCT

audit_rule
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

audit_enabled
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
BRACKET_C
SEMICOLON
IF
BRACKET_O

ab
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

pid
COMMA

uid
COMMA

loginuid
BRACKET_C
SEMICOLON
IF
BRACKET_O

sid
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

selinux_sid_to_string
BRACKET_O

sid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

sid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

ctx
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

audit_enabled
BRACKET_C
SEMICOLON

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
MINUS

EPERM
SEMICOLON
CURLY_BRACKET_C

case

AUDIT_LIST
COLON

err
OP_ASSIGNMENT

audit_receive_filter
BRACKET_O

nlh
MINUS
GREATER

nlmsg_type
COMMA

NETLINK_CB
BRACKET_O

skb
BRACKET_C
DOT

pid
COMMA

uid
COMMA

seq
COMMA

data
COMMA

nlmsg_len
BRACKET_O

nlh
BRACKET_C
COMMA

loginuid
COMMA

sid
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_ADD_RULE
COLON

case

AUDIT_DEL_RULE
COLON
IF
BRACKET_O

nlmsg_len
BRACKET_O

nlh
BRACKET_C
LESS

sizeof
BRACKET_O
STRUCT

audit_rule_data
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

audit_enabled
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
BRACKET_C
SEMICOLON
IF
BRACKET_O

ab
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

pid
COMMA

uid
COMMA

loginuid
BRACKET_C
SEMICOLON
IF
BRACKET_O

sid
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

selinux_sid_to_string
BRACKET_O

sid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

sid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

ctx
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

audit_enabled
BRACKET_C
SEMICOLON

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
MINUS

EPERM
SEMICOLON
CURLY_BRACKET_C

case

AUDIT_LIST_RULES
COLON

err
OP_ASSIGNMENT

audit_receive_filter
BRACKET_O

nlh
MINUS
GREATER

nlmsg_type
COMMA

NETLINK_CB
BRACKET_O

skb
BRACKET_C
DOT

pid
COMMA

uid
COMMA

seq
COMMA

data
COMMA

nlmsg_len
BRACKET_O

nlh
BRACKET_C
COMMA

loginuid
COMMA

sid
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_SIGNAL_INFO
COLON

err
OP_ASSIGNMENT

selinux_sid_to_string
BRACKET_O

audit_sig_sid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

return

err
SEMICOLON

sig_data
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

sig_data
BRACKET_C
PLUS

len
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sig_data
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

sig_data
MINUS
GREATER

uid
OP_ASSIGNMENT

audit_sig_uid
SEMICOLON

sig_data
MINUS
GREATER

pid
OP_ASSIGNMENT

audit_sig_pid
SEMICOLON

memcpy
BRACKET_O

sig_data
MINUS
GREATER

ctx
COMMA

ctx
COMMA

len
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON

audit_send_reply
BRACKET_O

NETLINK_CB
BRACKET_O

skb
BRACKET_C
DOT

pid
COMMA

seq
COMMA

AUDIT_SIGNAL_INFO
COMMA
NUMBER
COMMA
NUMBER
COMMA

sig_data
COMMA

sizeof
BRACKET_O
MULT

sig_data
BRACKET_C
PLUS

len
BRACKET_C
SEMICOLON

kfree
BRACKET_O

sig_data
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

err
LESS
NUMBER
QUESTION_MARK

err
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

audit_receive_skb
BRACKET_O
STRUCT

sk_buff
MULT

skb
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
SEMICOLON
STRUCT

nlmsghdr
MULT

nlh
SEMICOLON

u32

rlen
SEMICOLON
WHILE
BRACKET_O

skb
MINUS
GREATER

len
GR_EQ

NLMSG_SPACE
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

nlh
OP_ASSIGNMENT

nlmsg_hdr
BRACKET_O

skb
BRACKET_C
SEMICOLON
IF
BRACKET_O

nlh
MINUS
GREATER

nlmsg_len
LESS

sizeof
BRACKET_O
MULT

nlh
BRACKET_C
OR

skb
MINUS
GREATER

len
LESS

nlh
MINUS
GREATER

nlmsg_len
BRACKET_C

return
SEMICOLON

rlen
OP_ASSIGNMENT

NLMSG_ALIGN
BRACKET_O

nlh
MINUS
GREATER

nlmsg_len
BRACKET_C
SEMICOLON
IF
BRACKET_O

rlen
GREATER

skb
MINUS
GREATER

len
BRACKET_C

rlen
OP_ASSIGNMENT

skb
MINUS
GREATER

len
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

audit_receive_msg
BRACKET_O

skb
COMMA

nlh
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

netlink_ack
BRACKET_O

skb
COMMA

nlh
COMMA

err
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

nlh
MINUS
GREATER

nlmsg_flags
AMPERSANT

NLM_F_ACK
BRACKET_C

netlink_ack
BRACKET_O

skb
COMMA

nlh
COMMA
NUMBER
BRACKET_C
SEMICOLON

skb_pull
BRACKET_O

skb
COMMA

rlen
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

audit_receive
BRACKET_O
STRUCT

sock
MULT

sk
COMMA
TYPE_INT

length
BRACKET_C
CURLY_BRACKET_O
STRUCT

sk_buff
MULT

skb
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

qlen
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

audit_cmd_mutex
BRACKET_C
SEMICOLON
FOR
BRACKET_O

qlen
OP_ASSIGNMENT

skb_queue_len
BRACKET_O
AMPERSANT

sk
MINUS
GREATER

sk_receive_queue
BRACKET_C
SEMICOLON

qlen
SEMICOLON

qlen
MINUS
MINUS
BRACKET_C
CURLY_BRACKET_O

skb
OP_ASSIGNMENT

skb_dequeue
BRACKET_O
AMPERSANT

sk
MINUS
GREATER

sk_receive_queue
BRACKET_C
SEMICOLON

audit_receive_skb
BRACKET_O

skb
BRACKET_C
SEMICOLON

kfree_skb
BRACKET_O

skb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

audit_cmd_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_AUDITSYSCALL

static
CONST
STRUCT

inotify_operations

audit_inotify_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

handle_event
OP_ASSIGNMENT

audit_handle_ievent
COMMA
DOT

destroy_watch
OP_ASSIGNMENT

audit_free_parent
COMMA
CURLY_BRACKET_C
SEMICOLON
PP_ENDIF

static
TYPE_INT

__init

audit_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
COMMA

audit_default
QUESTION_MARK
STRING
COLON
STRING
BRACKET_C
SEMICOLON

audit_sock
OP_ASSIGNMENT

netlink_kernel_create
BRACKET_O

NETLINK_AUDIT
COMMA
NUMBER
COMMA

audit_receive
COMMA

NULL
COMMA

THIS_MODULE
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

audit_sock
BRACKET_C

audit_panic
BRACKET_O
STRING
BRACKET_C
SEMICOLON
ELSE

audit_sock
MINUS
GREATER

sk_sndtimeo
OP_ASSIGNMENT

MAX_SCHEDULE_TIMEOUT
SEMICOLON

skb_queue_head_init
BRACKET_O
AMPERSANT

audit_skb_queue
BRACKET_C
SEMICOLON

audit_initialized
OP_ASSIGNMENT
NUMBER
SEMICOLON

audit_enabled
OP_ASSIGNMENT

audit_default
SEMICOLON

selinux_audit_set_callback
BRACKET_O
AMPERSANT

selinux_audit_rule_update
BRACKET_C
SEMICOLON

audit_log
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_KERNEL
COMMA
STRING
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_AUDITSYSCALL

audit_ih
OP_ASSIGNMENT

inotify_init
BRACKET_O
AMPERSANT

audit_inotify_ops
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

audit_ih
BRACKET_C
BRACKET_C

audit_panic
BRACKET_O
STRING
BRACKET_C
SEMICOLON
PP_ENDIF
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_INODE_BUCKETS
SEMICOLON

i
PLUS
PLUS
BRACKET_C

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

audit_inode_hash
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__initcall
BRACKET_O

audit_init
BRACKET_C
SEMICOLON

static
TYPE_INT

__init

audit_enable
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

audit_default
OP_ASSIGNMENT
NOT
NOT

simple_strtol
BRACKET_O

str
COMMA

NULL
COMMA
NUMBER
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
COMMA

audit_default
QUESTION_MARK
STRING
COLON
STRING
COMMA

audit_initialized
QUESTION_MARK
STRING
COLON
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

audit_initialized
BRACKET_C

audit_enabled
OP_ASSIGNMENT

audit_default
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

audit_enable
BRACKET_C
SEMICOLON

static

void

audit_buffer_free
BRACKET_O
STRUCT

audit_buffer
MULT

ab
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

ab
MINUS
GREATER

skb
BRACKET_C

kfree_skb
BRACKET_O

ab
MINUS
GREATER

skb
BRACKET_C
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

audit_freelist_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

audit_freelist_count
GREATER

AUDIT_MAXFREE
BRACKET_C

kfree
BRACKET_O

ab
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O

audit_freelist_count
PLUS
PLUS
SEMICOLON

list_add
BRACKET_O
AMPERSANT

ab
MINUS
GREATER

list
COMMA
AMPERSANT

audit_freelist
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

audit_freelist_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

audit_buffer
MULT

audit_buffer_alloc
BRACKET_O
STRUCT

audit_context
MULT

ctx
COMMA

gfp_t

gfp_mask
COMMA
TYPE_INT

type
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

audit_buffer
MULT

ab
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

nlmsghdr
MULT

nlh
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

audit_freelist_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

audit_freelist
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ab
OP_ASSIGNMENT

list_entry
BRACKET_O

audit_freelist
DOT

next
COMMA
STRUCT

audit_buffer
COMMA

list
BRACKET_C
SEMICOLON

list_del
BRACKET_O
AMPERSANT

ab
MINUS
GREATER

list
BRACKET_C
SEMICOLON
MINUS
MINUS

audit_freelist_count
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

audit_freelist_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C
CURLY_BRACKET_O

ab
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ab
BRACKET_C
COMMA

gfp_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C

goto

err
SEMICOLON
CURLY_BRACKET_C

ab
MINUS
GREATER

skb
OP_ASSIGNMENT

alloc_skb
BRACKET_O

AUDIT_BUFSIZ
COMMA

gfp_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ab
MINUS
GREATER

skb
BRACKET_C

goto

err
SEMICOLON

ab
MINUS
GREATER

ctx
OP_ASSIGNMENT

ctx
SEMICOLON

ab
MINUS
GREATER

gfp_mask
OP_ASSIGNMENT

gfp_mask
SEMICOLON

nlh
OP_ASSIGNMENT
BRACKET_O
STRUCT

nlmsghdr
MULT
BRACKET_C

skb_put
BRACKET_O

ab
MINUS
GREATER

skb
COMMA

NLMSG_SPACE
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

nlh
MINUS
GREATER

nlmsg_type
OP_ASSIGNMENT

type
SEMICOLON

nlh
MINUS
GREATER

nlmsg_flags
OP_ASSIGNMENT
NUMBER
SEMICOLON

nlh
MINUS
GREATER

nlmsg_pid
OP_ASSIGNMENT
NUMBER
SEMICOLON

nlh
MINUS
GREATER

nlmsg_seq
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

ab
SEMICOLON

err
COLON

audit_buffer_free
BRACKET_O

ab
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_INT

audit_serial
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

static

DEFINE_SPINLOCK
BRACKET_O

serial_lock
BRACKET_C
SEMICOLON

static
TYPE_UNSIGNED
TYPE_INT

serial
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

ret
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

serial_lock
COMMA

flags
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
PLUS
PLUS

serial
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

unlikely
BRACKET_O
NOT

ret
BRACKET_C
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

serial_lock
COMMA

flags
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

inline

void

audit_get_stamp
BRACKET_O
STRUCT

audit_context
MULT

ctx
COMMA
STRUCT

timespec
MULT

t
COMMA
TYPE_UNSIGNED
TYPE_INT
MULT

serial
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

ctx
BRACKET_C

auditsc_get_stamp
BRACKET_O

ctx
COMMA

t
COMMA

serial
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O
MULT

t
OP_ASSIGNMENT

CURRENT_TIME
SEMICOLON
MULT

serial
OP_ASSIGNMENT

audit_serial
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
STRUCT

audit_buffer
MULT

audit_log_start
BRACKET_O
STRUCT

audit_context
MULT

ctx
COMMA

gfp_t

gfp_mask
COMMA
TYPE_INT

type
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_buffer
MULT

ab
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

timespec

t
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

serial
SEMICOLON
TYPE_INT

reserve
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

timeout_start
OP_ASSIGNMENT

jiffies
SEMICOLON
IF
BRACKET_O
NOT

audit_initialized
BRACKET_C

return

NULL
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

audit_filter_type
BRACKET_O

type
BRACKET_C
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON
IF
BRACKET_O

gfp_mask
AMPERSANT

__GFP_WAIT
BRACKET_C

reserve
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE

reserve
OP_ASSIGNMENT
NUMBER
SEMICOLON
WHILE
BRACKET_O

audit_backlog_limit
AND

skb_queue_len
BRACKET_O
AMPERSANT

audit_skb_queue
BRACKET_C
GREATER

audit_backlog_limit
PLUS

reserve
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

gfp_mask
AMPERSANT

__GFP_WAIT
AND

audit_backlog_wait_time
AND

time_before
BRACKET_O

jiffies
COMMA

timeout_start
PLUS

audit_backlog_wait_time
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

DECLARE_WAITQUEUE
BRACKET_O

wait
COMMA

current
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON

add_wait_queue
BRACKET_O
AMPERSANT

audit_backlog_wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
IF
BRACKET_O

audit_backlog_limit
AND

skb_queue_len
BRACKET_O
AMPERSANT

audit_skb_queue
BRACKET_C
GREATER

audit_backlog_limit
BRACKET_C

schedule_timeout
BRACKET_O

timeout_start
PLUS

audit_backlog_wait_time
MINUS

jiffies
BRACKET_C
SEMICOLON

__set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON

remove_wait_queue
BRACKET_O
AMPERSANT

audit_backlog_wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

audit_rate_check
BRACKET_O
BRACKET_C
BRACKET_C

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA

skb_queue_len
BRACKET_O
AMPERSANT

audit_skb_queue
BRACKET_C
COMMA

audit_backlog_limit
BRACKET_C
SEMICOLON

audit_log_lost
BRACKET_O
STRING
BRACKET_C
SEMICOLON

audit_backlog_wait_time
OP_ASSIGNMENT

audit_backlog_wait_overflow
SEMICOLON

wake_up
BRACKET_O
AMPERSANT

audit_backlog_wait
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

ab
OP_ASSIGNMENT

audit_buffer_alloc
BRACKET_O

ctx
COMMA

gfp_mask
COMMA

type
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C
CURLY_BRACKET_O

audit_log_lost
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

audit_get_stamp
BRACKET_O

ab
MINUS
GREATER

ctx
COMMA
AMPERSANT

t
COMMA
AMPERSANT

serial
BRACKET_C
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

t
DOT

tv_sec
COMMA

t
DOT

tv_nsec
DIV
NUMBER
COMMA

serial
BRACKET_C
SEMICOLON

return

ab
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

audit_expand
BRACKET_O
STRUCT

audit_buffer
MULT

ab
COMMA
TYPE_INT

extra
BRACKET_C
CURLY_BRACKET_O
STRUCT

sk_buff
MULT

skb
OP_ASSIGNMENT

ab
MINUS
GREATER

skb
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT

pskb_expand_head
BRACKET_O

skb
COMMA

skb_headroom
BRACKET_O

skb
BRACKET_C
COMMA

extra
COMMA

ab
MINUS
GREATER

gfp_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

audit_log_lost
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

skb_tailroom
BRACKET_O

skb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

audit_log_vformat
BRACKET_O
STRUCT

audit_buffer
MULT

ab
COMMA
CONST
TYPE_CHAR
MULT

fmt
COMMA

va_list

args
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

len
COMMA

avail
SEMICOLON
STRUCT

sk_buff
MULT

skb
SEMICOLON

va_list

args2
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C

return
SEMICOLON

BUG_ON
BRACKET_O
NOT

ab
MINUS
GREATER

skb
BRACKET_C
SEMICOLON

skb
OP_ASSIGNMENT

ab
MINUS
GREATER

skb
SEMICOLON

avail
OP_ASSIGNMENT

skb_tailroom
BRACKET_O

skb
BRACKET_C
SEMICOLON
IF
BRACKET_O

avail
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

avail
OP_ASSIGNMENT

audit_expand
BRACKET_O

ab
COMMA

AUDIT_BUFSIZ
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

avail
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

va_copy
BRACKET_O

args2
COMMA

args
BRACKET_C
SEMICOLON

len
OP_ASSIGNMENT

vsnprintf
BRACKET_O

skb_tail_pointer
BRACKET_O

skb
BRACKET_C
COMMA

avail
COMMA

fmt
COMMA

args
BRACKET_C
SEMICOLON
IF
BRACKET_O

len
GR_EQ

avail
BRACKET_C
CURLY_BRACKET_O

avail
OP_ASSIGNMENT

audit_expand
BRACKET_O

ab
COMMA

max_t
BRACKET_O
TYPE_UNSIGNED
COMMA

AUDIT_BUFSIZ
COMMA
NUMBER
PLUS

len
MINUS

avail
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

avail
BRACKET_C

goto

out
SEMICOLON

len
OP_ASSIGNMENT

vsnprintf
BRACKET_O

skb_tail_pointer
BRACKET_O

skb
BRACKET_C
COMMA

avail
COMMA

fmt
COMMA

args2
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

len
GREATER
NUMBER
BRACKET_C

skb_put
BRACKET_O

skb
COMMA

len
BRACKET_C
SEMICOLON

out
COLON

return
SEMICOLON
CURLY_BRACKET_C

void

audit_log_format
BRACKET_O
STRUCT

audit_buffer
MULT

ab
COMMA
CONST
TYPE_CHAR
MULT

fmt
COMMA
DOT
DOT
DOT
BRACKET_C
CURLY_BRACKET_O

va_list

args
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C

return
SEMICOLON

va_start
BRACKET_O

args
COMMA

fmt
BRACKET_C
SEMICOLON

audit_log_vformat
BRACKET_O

ab
COMMA

fmt
COMMA

args
BRACKET_C
SEMICOLON

va_end
BRACKET_O

args
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

audit_log_hex
BRACKET_O
STRUCT

audit_buffer
MULT

ab
COMMA
CONST
TYPE_UNSIGNED
TYPE_CHAR
MULT

buf
COMMA

size_t

len
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

avail
COMMA

new_len
SEMICOLON
TYPE_UNSIGNED
TYPE_CHAR
MULT

ptr
SEMICOLON
STRUCT

sk_buff
MULT

skb
SEMICOLON

static
CONST
TYPE_UNSIGNED
TYPE_CHAR
MULT

hex
OP_ASSIGNMENT
STRING
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C

return
SEMICOLON

BUG_ON
BRACKET_O
NOT

ab
MINUS
GREATER

skb
BRACKET_C
SEMICOLON

skb
OP_ASSIGNMENT

ab
MINUS
GREATER

skb
SEMICOLON

avail
OP_ASSIGNMENT

skb_tailroom
BRACKET_O

skb
BRACKET_C
SEMICOLON

new_len
OP_ASSIGNMENT

len
LESS
LESS
NUMBER
SEMICOLON
IF
BRACKET_O

new_len
GR_EQ

avail
BRACKET_C
CURLY_BRACKET_O

new_len
OP_ASSIGNMENT

AUDIT_BUFSIZ
MULT
BRACKET_O
BRACKET_O
BRACKET_O

new_len
MINUS

avail
BRACKET_C
DIV

AUDIT_BUFSIZ
BRACKET_C
PLUS
NUMBER
BRACKET_C
SEMICOLON

avail
OP_ASSIGNMENT

audit_expand
BRACKET_O

ab
COMMA

new_len
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

avail
BRACKET_C

return
SEMICOLON
CURLY_BRACKET_C

ptr
OP_ASSIGNMENT

skb_tail_pointer
BRACKET_O

skb
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

len
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
MULT

ptr
PLUS
PLUS
OP_ASSIGNMENT

hex
CORNER_BRACKET_O
BRACKET_O

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
AMPERSANT
NUMBER

xF0
BRACKET_C
GREATER
GREATER
NUMBER
CORNER_BRACKET_C
SEMICOLON
MULT

ptr
PLUS
PLUS
OP_ASSIGNMENT

hex
CORNER_BRACKET_O

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
AMPERSANT
NUMBER

x0F
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
MULT

ptr
OP_ASSIGNMENT
NUMBER
SEMICOLON

skb_put
BRACKET_O

skb
COMMA

len
LESS
LESS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

audit_log_n_string
BRACKET_O
STRUCT

audit_buffer
MULT

ab
COMMA

size_t

slen
COMMA
CONST
TYPE_CHAR
MULT

string
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

avail
COMMA

new_len
SEMICOLON
TYPE_UNSIGNED
TYPE_CHAR
MULT

ptr
SEMICOLON
STRUCT

sk_buff
MULT

skb
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C

return
SEMICOLON

BUG_ON
BRACKET_O
NOT

ab
MINUS
GREATER

skb
BRACKET_C
SEMICOLON

skb
OP_ASSIGNMENT

ab
MINUS
GREATER

skb
SEMICOLON

avail
OP_ASSIGNMENT

skb_tailroom
BRACKET_O

skb
BRACKET_C
SEMICOLON

new_len
OP_ASSIGNMENT

slen
PLUS
NUMBER
SEMICOLON
IF
BRACKET_O

new_len
GREATER

avail
BRACKET_C
CURLY_BRACKET_O

avail
OP_ASSIGNMENT

audit_expand
BRACKET_O

ab
COMMA

new_len
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

avail
BRACKET_C

return
SEMICOLON
CURLY_BRACKET_C

ptr
OP_ASSIGNMENT

skb_tail_pointer
BRACKET_O

skb
BRACKET_C
SEMICOLON
MULT

ptr
PLUS
PLUS
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

memcpy
BRACKET_O

ptr
COMMA

string
COMMA

slen
BRACKET_C
SEMICOLON

ptr
ASSIGN_PLUS

slen
SEMICOLON
MULT

ptr
PLUS
PLUS
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
MULT

ptr
OP_ASSIGNMENT
NUMBER
SEMICOLON

skb_put
BRACKET_O

skb
COMMA

slen
PLUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CONST
TYPE_CHAR
MULT

audit_log_n_untrustedstring
BRACKET_O
STRUCT

audit_buffer
MULT

ab
COMMA

size_t

len
COMMA
CONST
TYPE_CHAR
MULT

string
BRACKET_C
CURLY_BRACKET_O
CONST
TYPE_UNSIGNED
TYPE_CHAR
MULT

p
OP_ASSIGNMENT

string
SEMICOLON
WHILE
BRACKET_O
MULT

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
MULT

p
EQ
QUOTED_CHAR
OR
MULT

p
LESS
NUMBER

x21
OR
MULT

p
GREATER
NUMBER

x7f
BRACKET_C
CURLY_BRACKET_O

audit_log_hex
BRACKET_O

ab
COMMA

string
COMMA

len
BRACKET_C
SEMICOLON

return

string
PLUS

len
PLUS
NUMBER
SEMICOLON
CURLY_BRACKET_C

p
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

audit_log_n_string
BRACKET_O

ab
COMMA

len
COMMA

string
BRACKET_C
SEMICOLON

return

p
PLUS
NUMBER
SEMICOLON
CURLY_BRACKET_C
CONST
TYPE_CHAR
MULT

audit_log_untrustedstring
BRACKET_O
STRUCT

audit_buffer
MULT

ab
COMMA
CONST
TYPE_CHAR
MULT

string
BRACKET_C
CURLY_BRACKET_O

return

audit_log_n_untrustedstring
BRACKET_O

ab
COMMA

strlen
BRACKET_O

string
BRACKET_C
COMMA

string
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

audit_log_d_path
BRACKET_O
STRUCT

audit_buffer
MULT

ab
COMMA
CONST
TYPE_CHAR
MULT

prefix
COMMA
STRUCT

dentry
MULT

dentry
COMMA
STRUCT

vfsmount
MULT

vfsmnt
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

p
COMMA
MULT

path
SEMICOLON
IF
BRACKET_O

prefix
BRACKET_C

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

prefix
BRACKET_C
SEMICOLON

path
OP_ASSIGNMENT

kmalloc
BRACKET_O

PATH_MAX
PLUS
NUMBER
COMMA

ab
MINUS
GREATER

gfp_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

path
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

p
OP_ASSIGNMENT

d_path
BRACKET_O

dentry
COMMA

vfsmnt
COMMA

path
COMMA

PATH_MAX
PLUS
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

audit_log_untrustedstring
BRACKET_O

ab
COMMA

p
BRACKET_C
SEMICOLON

kfree
BRACKET_O

path
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

audit_log_end
BRACKET_O
STRUCT

audit_buffer
MULT

ab
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

ab
BRACKET_C

return
SEMICOLON
IF
BRACKET_O
NOT

audit_rate_check
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

audit_log_lost
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

audit_pid
BRACKET_C
CURLY_BRACKET_O
STRUCT

nlmsghdr
MULT

nlh
OP_ASSIGNMENT

nlmsg_hdr
BRACKET_O

ab
MINUS
GREATER

skb
BRACKET_C
SEMICOLON

nlh
MINUS
GREATER

nlmsg_len
OP_ASSIGNMENT

ab
MINUS
GREATER

skb
MINUS
GREATER

len
MINUS

NLMSG_SPACE
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

skb_queue_tail
BRACKET_O
AMPERSANT

audit_skb_queue
COMMA

ab
MINUS
GREATER

skb
BRACKET_C
SEMICOLON

ab
MINUS
GREATER

skb
OP_ASSIGNMENT

NULL
SEMICOLON

wake_up_interruptible
BRACKET_O
AMPERSANT

kauditd_wait
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

printk
BRACKET_O

KERN_NOTICE
STRING
COMMA

ab
MINUS
GREATER

skb
MINUS
GREATER

data
PLUS

NLMSG_SPACE
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

audit_buffer_free
BRACKET_O

ab
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

audit_log
BRACKET_O
STRUCT

audit_context
MULT

ctx
COMMA

gfp_t

gfp_mask
COMMA
TYPE_INT

type
COMMA
CONST
TYPE_CHAR
MULT

fmt
COMMA
DOT
DOT
DOT
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_buffer
MULT

ab
SEMICOLON

va_list

args
SEMICOLON

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

ctx
COMMA

gfp_mask
COMMA

type
BRACKET_C
SEMICOLON
IF
BRACKET_O

ab
BRACKET_C
CURLY_BRACKET_O

va_start
BRACKET_O

args
COMMA

fmt
BRACKET_C
SEMICOLON

audit_log_vformat
BRACKET_O

ab
COMMA

fmt
COMMA

args
BRACKET_C
SEMICOLON

va_end
BRACKET_O

args
BRACKET_C
SEMICOLON

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

audit_log_start
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

audit_log_end
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

audit_log_format
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

audit_log
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

audit_log_vformat
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

audit_log_untrustedstring
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

audit_log_d_path
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
STRUCT

audit_parent
CURLY_BRACKET_O
STRUCT

list_head

ilist
SEMICOLON
STRUCT

list_head

watches
SEMICOLON
STRUCT

inotify_watch

wdata
SEMICOLON
TYPE_UNSIGNED

flags
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
PP_DEFINE

AUDIT_PARENT_INVALID
NUMBER

x001
STRUCT

list_head

audit_filter_list
CORNER_BRACKET_O

AUDIT_NR_FILTERS
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O

LIST_HEAD_INIT
BRACKET_O

audit_filter_list
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
COMMA

LIST_HEAD_INIT
BRACKET_O

audit_filter_list
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
COMMA

LIST_HEAD_INIT
BRACKET_O

audit_filter_list
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
COMMA

LIST_HEAD_INIT
BRACKET_O

audit_filter_list
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
COMMA

LIST_HEAD_INIT
BRACKET_O

audit_filter_list
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
COMMA

LIST_HEAD_INIT
BRACKET_O

audit_filter_list
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
COMMA
PP_IF

AUDIT_NR_FILTERS
NOT_EQ
NUMBER
PP_ERROR

Fix

audit_filter_list

initialiser
PP_ENDIF
CURLY_BRACKET_C
SEMICOLON

static

DEFINE_MUTEX
BRACKET_O

audit_filter_mutex
BRACKET_C
SEMICOLON

extern
STRUCT

inotify_handle
MULT

audit_ih
SEMICOLON
PP_DEFINE

AUDIT_IN_WATCH

IN_MOVE
LOGICAL_OR

IN_CREATE
LOGICAL_OR

IN_DELETE
LOGICAL_OR

IN_DELETE_SELF
LOGICAL_OR

IN_MOVE_SELF

void

audit_free_parent
BRACKET_O
STRUCT

inotify_watch
MULT

i_watch
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_parent
MULT

parent
SEMICOLON

parent
OP_ASSIGNMENT

container_of
BRACKET_O

i_watch
COMMA
STRUCT

audit_parent
COMMA

wdata
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

parent
MINUS
GREATER

watches
BRACKET_C
BRACKET_C
SEMICOLON

kfree
BRACKET_O

parent
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

audit_get_watch
BRACKET_O
STRUCT

audit_watch
MULT

watch
BRACKET_C
CURLY_BRACKET_O

atomic_inc
BRACKET_O
AMPERSANT

watch
MINUS
GREATER

count
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

audit_put_watch
BRACKET_O
STRUCT

audit_watch
MULT

watch
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

atomic_dec_and_test
BRACKET_O
AMPERSANT

watch
MINUS
GREATER

count
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

WARN_ON
BRACKET_O

watch
MINUS
GREATER

parent
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

watch
MINUS
GREATER

rules
BRACKET_C
BRACKET_C
SEMICOLON

kfree
BRACKET_O

watch
MINUS
GREATER

path
BRACKET_C
SEMICOLON

kfree
BRACKET_O

watch
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

audit_remove_watch
BRACKET_O
STRUCT

audit_watch
MULT

watch
BRACKET_C
CURLY_BRACKET_O

list_del
BRACKET_O
AMPERSANT

watch
MINUS
GREATER

wlist
BRACKET_C
SEMICOLON

put_inotify_watch
BRACKET_O
AMPERSANT

watch
MINUS
GREATER

parent
MINUS
GREATER

wdata
BRACKET_C
SEMICOLON

watch
MINUS
GREATER

parent
OP_ASSIGNMENT

NULL
SEMICOLON

audit_put_watch
BRACKET_O

watch
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

audit_free_rule
BRACKET_O
STRUCT

audit_entry
MULT

e
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

e
MINUS
GREATER

rule
DOT

watch
BRACKET_C

audit_put_watch
BRACKET_O

e
MINUS
GREATER

rule
DOT

watch
BRACKET_C
SEMICOLON
IF
BRACKET_O

e
MINUS
GREATER

rule
DOT

fields
BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

e
MINUS
GREATER

rule
DOT

field_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_field
MULT

f
OP_ASSIGNMENT
AMPERSANT

e
MINUS
GREATER

rule
DOT

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

kfree
BRACKET_O

f
MINUS
GREATER

se_str
BRACKET_C
SEMICOLON

selinux_audit_rule_free
BRACKET_O

f
MINUS
GREATER

se_rule
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

kfree
BRACKET_O

e
MINUS
GREATER

rule
DOT

fields
BRACKET_C
SEMICOLON

kfree
BRACKET_O

e
MINUS
GREATER

rule
DOT

filterkey
BRACKET_C
SEMICOLON

kfree
BRACKET_O

e
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

audit_free_rule_rcu
BRACKET_O
STRUCT

rcu_head
MULT

head
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_entry
MULT

e
OP_ASSIGNMENT

container_of
BRACKET_O

head
COMMA
STRUCT

audit_entry
COMMA

rcu
BRACKET_C
SEMICOLON

audit_free_rule
BRACKET_O

e
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

audit_parent
MULT

audit_init_parent
BRACKET_O
STRUCT

nameidata
MULT

ndp
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_parent
MULT

parent
SEMICOLON

s32

wd
SEMICOLON

parent
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
MULT

parent
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

parent
BRACKET_C
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ENOMEM
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

parent
MINUS
GREATER

watches
BRACKET_C
SEMICOLON

parent
MINUS
GREATER

flags
OP_ASSIGNMENT
NUMBER
SEMICOLON

inotify_init_watch
BRACKET_O
AMPERSANT

parent
MINUS
GREATER

wdata
BRACKET_C
SEMICOLON

get_inotify_watch
BRACKET_O
AMPERSANT

parent
MINUS
GREATER

wdata
BRACKET_C
SEMICOLON

wd
OP_ASSIGNMENT

inotify_add_watch
BRACKET_O

audit_ih
COMMA
AMPERSANT

parent
MINUS
GREATER

wdata
COMMA

ndp
MINUS
GREATER

dentry
MINUS
GREATER

d_inode
COMMA

AUDIT_IN_WATCH
BRACKET_C
SEMICOLON
IF
BRACKET_O

wd
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

audit_free_parent
BRACKET_O
AMPERSANT

parent
MINUS
GREATER

wdata
BRACKET_C
SEMICOLON

return

ERR_PTR
BRACKET_O

wd
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

parent
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

audit_watch
MULT

audit_init_watch
BRACKET_O
TYPE_CHAR
MULT

path
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_watch
MULT

watch
SEMICOLON

watch
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
MULT

watch
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

watch
BRACKET_C
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ENOMEM
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

watch
MINUS
GREATER

rules
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

watch
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

watch
MINUS
GREATER

path
OP_ASSIGNMENT

path
SEMICOLON

watch
MINUS
GREATER

dev
OP_ASSIGNMENT
BRACKET_O

dev_t
BRACKET_C
MINUS
NUMBER
SEMICOLON

watch
MINUS
GREATER

ino
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS
NUMBER
SEMICOLON

return

watch
SEMICOLON
CURLY_BRACKET_C

static

inline
STRUCT

audit_entry
MULT

audit_init_entry
BRACKET_O

u32

field_count
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_entry
MULT

entry
SEMICOLON
STRUCT

audit_field
MULT

fields
SEMICOLON

entry
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
MULT

entry
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

entry
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

fields
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
MULT

fields
BRACKET_C
MULT

field_count
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

fields
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

entry
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

entry
MINUS
GREATER

rule
DOT

fields
OP_ASSIGNMENT

fields
SEMICOLON

return

entry
SEMICOLON
CURLY_BRACKET_C

static
TYPE_CHAR
MULT

audit_unpack_string
BRACKET_O

void
MULT
MULT

bufp
COMMA

size_t
MULT

remain
COMMA

size_t

len
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

str
SEMICOLON
IF
BRACKET_O
NOT
MULT

bufp
OR
BRACKET_O

len
EQ
NUMBER
BRACKET_C
OR
BRACKET_O

len
GREATER
MULT

remain
BRACKET_C
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

EINVAL
BRACKET_C
SEMICOLON
IF
BRACKET_O

len
GREATER

PATH_MAX
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ENAMETOOLONG
BRACKET_C
SEMICOLON

str
OP_ASSIGNMENT

kmalloc
BRACKET_O

len
PLUS
NUMBER
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

str
BRACKET_C
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ENOMEM
BRACKET_C
SEMICOLON

memcpy
BRACKET_O

str
COMMA
MULT

bufp
COMMA

len
BRACKET_C
SEMICOLON

str
CORNER_BRACKET_O

len
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
MULT

bufp
ASSIGN_PLUS

len
SEMICOLON
MULT

remain
ASSIGN_MINUS

len
SEMICOLON

return

str
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

audit_to_inode
BRACKET_O
STRUCT

audit_krule
MULT

krule
COMMA
STRUCT

audit_field
MULT

f
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

krule
MINUS
GREATER

listnr
NOT_EQ

AUDIT_FILTER_EXIT
OR

krule
MINUS
GREATER

watch
OR

krule
MINUS
GREATER

inode_f
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

krule
MINUS
GREATER

inode_f
OP_ASSIGNMENT

f
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_to_watch
BRACKET_O
STRUCT

audit_krule
MULT

krule
COMMA
TYPE_CHAR
MULT

path
COMMA
TYPE_INT

len
COMMA

u32

op
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_watch
MULT

watch
SEMICOLON
IF
BRACKET_O
NOT

audit_ih
BRACKET_C

return
MINUS

EOPNOTSUPP
SEMICOLON
IF
BRACKET_O

path
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
NOT_EQ
QUOTED_CHAR
OR

path
CORNER_BRACKET_O

len
MINUS
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
OR

krule
MINUS
GREATER

listnr
NOT_EQ

AUDIT_FILTER_EXIT
OR

op
AMPERSANT
TILDE

AUDIT_EQUAL
OR

krule
MINUS
GREATER

inode_f
OR

krule
MINUS
GREATER

watch
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

watch
OP_ASSIGNMENT

audit_init_watch
BRACKET_O

path
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

IS_ERR
BRACKET_O

watch
BRACKET_C
BRACKET_C
BRACKET_C

return

PTR_ERR
BRACKET_O

watch
BRACKET_C
SEMICOLON

audit_get_watch
BRACKET_O

watch
BRACKET_C
SEMICOLON

krule
MINUS
GREATER

watch
OP_ASSIGNMENT

watch
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

__u32
MULT

classes
CORNER_BRACKET_O

AUDIT_SYSCALL_CLASSES
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

__init

audit_register_class
BRACKET_O
TYPE_INT

class
COMMA
TYPE_UNSIGNED
MULT

list
BRACKET_C
CURLY_BRACKET_O

__u32
MULT

p
OP_ASSIGNMENT

kzalloc
BRACKET_O

AUDIT_BITMASK_SIZE
MULT

sizeof
BRACKET_O

__u32
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON
WHILE
BRACKET_O
MULT

list
NOT_EQ
TILDE
NUMBER

U
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED

n
OP_ASSIGNMENT
MULT

list
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

n
GR_EQ

AUDIT_BITMASK_SIZE
MULT
NUMBER
MINUS

AUDIT_SYSCALL_CLASSES
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

p
BRACKET_C
SEMICOLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

p
CORNER_BRACKET_O

AUDIT_WORD
BRACKET_O

n
BRACKET_C
CORNER_BRACKET_C
LOGICAL_OR
OP_ASSIGNMENT

AUDIT_BIT
BRACKET_O

n
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

class
GR_EQ

AUDIT_SYSCALL_CLASSES
OR

classes
CORNER_BRACKET_O

class
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

p
BRACKET_C
SEMICOLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

classes
CORNER_BRACKET_O

class
CORNER_BRACKET_C
OP_ASSIGNMENT

p
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_match_class
BRACKET_O
TYPE_INT

class
COMMA
TYPE_UNSIGNED

syscall
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

syscall
GR_EQ

AUDIT_BITMASK_SIZE
MULT

sizeof
BRACKET_O

__u32
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

class
GR_EQ

AUDIT_SYSCALL_CLASSES
OR
NOT

classes
CORNER_BRACKET_O

class
CORNER_BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return

classes
CORNER_BRACKET_O

class
CORNER_BRACKET_C
CORNER_BRACKET_O

AUDIT_WORD
BRACKET_O

syscall
BRACKET_C
CORNER_BRACKET_C
AMPERSANT

AUDIT_BIT
BRACKET_O

syscall
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_AUDITSYSCALL

static

inline
TYPE_INT

audit_match_class_bits
BRACKET_O
TYPE_INT

class
COMMA

u32
MULT

mask
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

classes
CORNER_BRACKET_O

class
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_BITMASK_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

mask
CORNER_BRACKET_O

i
CORNER_BRACKET_C
AMPERSANT

classes
CORNER_BRACKET_O

class
CORNER_BRACKET_C
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_match_signal
BRACKET_O
STRUCT

audit_entry
MULT

entry
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_field
MULT

arch
OP_ASSIGNMENT

entry
MINUS
GREATER

rule
DOT

arch_f
SEMICOLON
IF
BRACKET_O
NOT

arch
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O

audit_match_class_bits
BRACKET_O

AUDIT_CLASS_SIGNAL
COMMA

entry
MINUS
GREATER

rule
DOT

mask
BRACKET_C
AND

audit_match_class_bits
BRACKET_O

AUDIT_CLASS_SIGNAL_32
COMMA

entry
MINUS
GREATER

rule
DOT

mask
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SWITCH
BRACKET_O

audit_classify_arch
BRACKET_O

arch
MINUS
GREATER

val
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

case
NUMBER
COLON

return
BRACKET_O

audit_match_class_bits
BRACKET_O

AUDIT_CLASS_SIGNAL
COMMA

entry
MINUS
GREATER

rule
DOT

mask
BRACKET_C
BRACKET_C
SEMICOLON

case
NUMBER
COLON

return
BRACKET_O

audit_match_class_bits
BRACKET_O

AUDIT_CLASS_SIGNAL_32
COMMA

entry
MINUS
GREATER

rule
DOT

mask
BRACKET_C
BRACKET_C
SEMICOLON

default
COLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ENDIF

static

inline
STRUCT

audit_entry
MULT

audit_to_entry_common
BRACKET_O
STRUCT

audit_rule
MULT

rule
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED

listnr
SEMICOLON
STRUCT

audit_entry
MULT

entry
SEMICOLON
TYPE_INT

i
COMMA

err
SEMICOLON

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

listnr
OP_ASSIGNMENT

rule
MINUS
GREATER

flags
AMPERSANT
TILDE

AUDIT_FILTER_PREPEND
SEMICOLON
SWITCH
BRACKET_O

listnr
BRACKET_C
CURLY_BRACKET_O

default
COLON

goto

exit_err
SEMICOLON

case

AUDIT_FILTER_USER
COLON

case

AUDIT_FILTER_TYPE
COLON
PP_IFDEF

CONFIG_AUDITSYSCALL

case

AUDIT_FILTER_ENTRY
COLON

case

AUDIT_FILTER_EXIT
COLON

case

AUDIT_FILTER_TASK
COLON
PP_ENDIF
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

rule
MINUS
GREATER

action
EQ

AUDIT_POSSIBLE
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
BRACKET_C
SEMICOLON

goto

exit_err
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

rule
MINUS
GREATER

action
NOT_EQ

AUDIT_NEVER
AND

rule
MINUS
GREATER

action
NOT_EQ

AUDIT_ALWAYS
BRACKET_C

goto

exit_err
SEMICOLON
IF
BRACKET_O

rule
MINUS
GREATER

field_count
GREATER

AUDIT_MAX_FIELDS
BRACKET_C

goto

exit_err
SEMICOLON

err
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

entry
OP_ASSIGNMENT

audit_init_entry
BRACKET_O

rule
MINUS
GREATER

field_count
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

entry
BRACKET_C

goto

exit_err
SEMICOLON

entry
MINUS
GREATER

rule
DOT

flags
OP_ASSIGNMENT

rule
MINUS
GREATER

flags
AMPERSANT

AUDIT_FILTER_PREPEND
SEMICOLON

entry
MINUS
GREATER

rule
DOT

listnr
OP_ASSIGNMENT

listnr
SEMICOLON

entry
MINUS
GREATER

rule
DOT

action
OP_ASSIGNMENT

rule
MINUS
GREATER

action
SEMICOLON

entry
MINUS
GREATER

rule
DOT

field_count
OP_ASSIGNMENT

rule
MINUS
GREATER

field_count
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_BITMASK_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C

entry
MINUS
GREATER

rule
DOT

mask
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

rule
MINUS
GREATER

mask
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_SYSCALL_CLASSES
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

bit
OP_ASSIGNMENT

AUDIT_BITMASK_SIZE
MULT
NUMBER
MINUS

i
MINUS
NUMBER
SEMICOLON

__u32
MULT

p
OP_ASSIGNMENT
AMPERSANT

entry
MINUS
GREATER

rule
DOT

mask
CORNER_BRACKET_O

AUDIT_WORD
BRACKET_O

bit
BRACKET_C
CORNER_BRACKET_C
SEMICOLON

__u32
MULT

class
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O
MULT

p
AMPERSANT

AUDIT_BIT
BRACKET_O

bit
BRACKET_C
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
MULT

p
AMPERSANT
OP_ASSIGNMENT
TILDE

AUDIT_BIT
BRACKET_O

bit
BRACKET_C
SEMICOLON

class
OP_ASSIGNMENT

classes
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

class
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

j
SEMICOLON
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

AUDIT_BITMASK_SIZE
SEMICOLON

j
PLUS
PLUS
BRACKET_C

entry
MINUS
GREATER

rule
DOT

mask
CORNER_BRACKET_O

j
CORNER_BRACKET_C
LOGICAL_OR
OP_ASSIGNMENT

class
CORNER_BRACKET_O

j
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

entry
SEMICOLON

exit_err
COLON

return

ERR_PTR
BRACKET_O

err
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

audit_entry
MULT

audit_rule_to_entry
BRACKET_O
STRUCT

audit_rule
MULT

rule
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_entry
MULT

entry
SEMICOLON
STRUCT

audit_field
MULT

f
SEMICOLON
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

i
SEMICOLON

entry
OP_ASSIGNMENT

audit_to_entry_common
BRACKET_O

rule
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

entry
BRACKET_C
BRACKET_C

goto

exit_nofree
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

rule
MINUS
GREATER

field_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_field
MULT

f
OP_ASSIGNMENT
AMPERSANT

entry
MINUS
GREATER

rule
DOT

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

f
MINUS
GREATER

op
OP_ASSIGNMENT

rule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
AMPERSANT
BRACKET_O

AUDIT_NEGATE
LOGICAL_OR

AUDIT_OPERATORS
BRACKET_C
SEMICOLON

f
MINUS
GREATER

type
OP_ASSIGNMENT

rule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
AMPERSANT
TILDE
BRACKET_O

AUDIT_NEGATE
LOGICAL_OR

AUDIT_OPERATORS
BRACKET_C
SEMICOLON

f
MINUS
GREATER

val
OP_ASSIGNMENT

rule
MINUS
GREATER

values
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
SWITCH
BRACKET_O

f
MINUS
GREATER

type
BRACKET_C
CURLY_BRACKET_O

default
COLON

goto

exit_free
SEMICOLON

case

AUDIT_PID
COLON

case

AUDIT_UID
COLON

case

AUDIT_EUID
COLON

case

AUDIT_SUID
COLON

case

AUDIT_FSUID
COLON

case

AUDIT_GID
COLON

case

AUDIT_EGID
COLON

case

AUDIT_SGID
COLON

case

AUDIT_FSGID
COLON

case

AUDIT_LOGINUID
COLON

case

AUDIT_PERS
COLON

case

AUDIT_MSGTYPE
COLON

case

AUDIT_PPID
COLON

case

AUDIT_DEVMAJOR
COLON

case

AUDIT_DEVMINOR
COLON

case

AUDIT_EXIT
COLON

case

AUDIT_SUCCESS
COLON

case

AUDIT_ARG0
COLON

case

AUDIT_ARG1
COLON

case

AUDIT_ARG2
COLON

case

AUDIT_ARG3
COLON
BREAK
SEMICOLON

case

AUDIT_ARCH
COLON
IF
BRACKET_O
BRACKET_O

f
MINUS
GREATER

op
NOT_EQ

AUDIT_NOT_EQUAL
BRACKET_C
AND
BRACKET_O

f
MINUS
GREATER

op
NOT_EQ

AUDIT_EQUAL
BRACKET_C
AND
BRACKET_O

f
MINUS
GREATER

op
NOT_EQ

AUDIT_NEGATE
BRACKET_C
AND
BRACKET_O

f
MINUS
GREATER

op
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

exit_free
SEMICOLON
CURLY_BRACKET_C

entry
MINUS
GREATER

rule
DOT

arch_f
OP_ASSIGNMENT

f
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_PERM
COLON
IF
BRACKET_O

f
MINUS
GREATER

val
AMPERSANT
TILDE
NUMBER
BRACKET_C

goto

exit_free
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_INODE
COLON

err
OP_ASSIGNMENT

audit_to_inode
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rule
COMMA

f
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

goto

exit_free
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

entry
MINUS
GREATER

rule
DOT

vers_ops
OP_ASSIGNMENT
BRACKET_O

f
MINUS
GREATER

op
AMPERSANT

AUDIT_OPERATORS
BRACKET_C
QUESTION_MARK
NUMBER
COLON
NUMBER
SEMICOLON
IF
BRACKET_O

f
MINUS
GREATER

op
AMPERSANT

AUDIT_NEGATE
BRACKET_C

f
MINUS
GREATER

op
OP_ASSIGNMENT

AUDIT_NOT_EQUAL
SEMICOLON
ELSE
IF
BRACKET_O
NOT

f
MINUS
GREATER

op
BRACKET_C

f
MINUS
GREATER

op
OP_ASSIGNMENT

AUDIT_EQUAL
SEMICOLON
ELSE
IF
BRACKET_O

f
MINUS
GREATER

op
EQ

AUDIT_OPERATORS
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

exit_free
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

f
OP_ASSIGNMENT

entry
MINUS
GREATER

rule
DOT

inode_f
SEMICOLON
IF
BRACKET_O

f
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

f
MINUS
GREATER

op
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_NOT_EQUAL
COLON

entry
MINUS
GREATER

rule
DOT

inode_f
OP_ASSIGNMENT

NULL
SEMICOLON

case

AUDIT_EQUAL
COLON
BREAK
SEMICOLON

default
COLON

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

exit_free
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

exit_nofree
COLON

return

entry
SEMICOLON

exit_free
COLON

audit_free_rule
BRACKET_O

entry
BRACKET_C
SEMICOLON

return

ERR_PTR
BRACKET_O

err
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

audit_entry
MULT

audit_data_to_entry
BRACKET_O
STRUCT

audit_rule_data
MULT

data
COMMA

size_t

datasz
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

audit_entry
MULT

entry
SEMICOLON
STRUCT

audit_field
MULT

f
SEMICOLON

void
MULT

bufp
SEMICOLON

size_t

remain
OP_ASSIGNMENT

datasz
MINUS

sizeof
BRACKET_O
STRUCT

audit_rule_data
BRACKET_C
SEMICOLON
TYPE_INT

i
SEMICOLON
TYPE_CHAR
MULT

str
SEMICOLON

entry
OP_ASSIGNMENT

audit_to_entry_common
BRACKET_O
BRACKET_O
STRUCT

audit_rule
MULT
BRACKET_C

data
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

entry
BRACKET_C
BRACKET_C

goto

exit_nofree
SEMICOLON

bufp
OP_ASSIGNMENT

data
MINUS
GREATER

buf
SEMICOLON

entry
MINUS
GREATER

rule
DOT

vers_ops
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

data
MINUS
GREATER

field_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_field
MULT

f
OP_ASSIGNMENT
AMPERSANT

entry
MINUS
GREATER

rule
DOT

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

data
MINUS
GREATER

fieldflags
CORNER_BRACKET_O

i
CORNER_BRACKET_C
AMPERSANT

AUDIT_OPERATORS
BRACKET_C
OR

data
MINUS
GREATER

fieldflags
CORNER_BRACKET_O

i
CORNER_BRACKET_C
AMPERSANT
TILDE

AUDIT_OPERATORS
BRACKET_C

goto

exit_free
SEMICOLON

f
MINUS
GREATER

op
OP_ASSIGNMENT

data
MINUS
GREATER

fieldflags
CORNER_BRACKET_O

i
CORNER_BRACKET_C
AMPERSANT

AUDIT_OPERATORS
SEMICOLON

f
MINUS
GREATER

type
OP_ASSIGNMENT

data
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

f
MINUS
GREATER

val
OP_ASSIGNMENT

data
MINUS
GREATER

values
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

f
MINUS
GREATER

se_str
OP_ASSIGNMENT

NULL
SEMICOLON

f
MINUS
GREATER

se_rule
OP_ASSIGNMENT

NULL
SEMICOLON
SWITCH
BRACKET_O

f
MINUS
GREATER

type
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_PID
COLON

case

AUDIT_UID
COLON

case

AUDIT_EUID
COLON

case

AUDIT_SUID
COLON

case

AUDIT_FSUID
COLON

case

AUDIT_GID
COLON

case

AUDIT_EGID
COLON

case

AUDIT_SGID
COLON

case

AUDIT_FSGID
COLON

case

AUDIT_LOGINUID
COLON

case

AUDIT_PERS
COLON

case

AUDIT_MSGTYPE
COLON

case

AUDIT_PPID
COLON

case

AUDIT_DEVMAJOR
COLON

case

AUDIT_DEVMINOR
COLON

case

AUDIT_EXIT
COLON

case

AUDIT_SUCCESS
COLON

case

AUDIT_ARG0
COLON

case

AUDIT_ARG1
COLON

case

AUDIT_ARG2
COLON

case

AUDIT_ARG3
COLON
BREAK
SEMICOLON

case

AUDIT_ARCH
COLON

entry
MINUS
GREATER

rule
DOT

arch_f
OP_ASSIGNMENT

f
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_SUBJ_USER
COLON

case

AUDIT_SUBJ_ROLE
COLON

case

AUDIT_SUBJ_TYPE
COLON

case

AUDIT_SUBJ_SEN
COLON

case

AUDIT_SUBJ_CLR
COLON

case

AUDIT_OBJ_USER
COLON

case

AUDIT_OBJ_ROLE
COLON

case

AUDIT_OBJ_TYPE
COLON

case

AUDIT_OBJ_LEV_LOW
COLON

case

AUDIT_OBJ_LEV_HIGH
COLON

str
OP_ASSIGNMENT

audit_unpack_string
BRACKET_O
AMPERSANT

bufp
COMMA
AMPERSANT

remain
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

str
BRACKET_C
BRACKET_C

goto

exit_free
SEMICOLON

entry
MINUS
GREATER

rule
DOT

buflen
ASSIGN_PLUS

f
MINUS
GREATER

val
SEMICOLON

err
OP_ASSIGNMENT

selinux_audit_rule_init
BRACKET_O

f
MINUS
GREATER

type
COMMA

f
MINUS
GREATER

op
COMMA

str
COMMA
AMPERSANT

f
MINUS
GREATER

se_rule
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
EQ
MINUS

EINVAL
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA

str
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

err
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

str
BRACKET_C
SEMICOLON

goto

exit_free
SEMICOLON
CURLY_BRACKET_C
ELSE

f
MINUS
GREATER

se_str
OP_ASSIGNMENT

str
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_WATCH
COLON

str
OP_ASSIGNMENT

audit_unpack_string
BRACKET_O
AMPERSANT

bufp
COMMA
AMPERSANT

remain
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

str
BRACKET_C
BRACKET_C

goto

exit_free
SEMICOLON

entry
MINUS
GREATER

rule
DOT

buflen
ASSIGN_PLUS

f
MINUS
GREATER

val
SEMICOLON

err
OP_ASSIGNMENT

audit_to_watch
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rule
COMMA

str
COMMA

f
MINUS
GREATER

val
COMMA

f
MINUS
GREATER

op
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

str
BRACKET_C
SEMICOLON

goto

exit_free
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON

case

AUDIT_INODE
COLON

err
OP_ASSIGNMENT

audit_to_inode
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rule
COMMA

f
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

goto

exit_free
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_FILTERKEY
COLON

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

entry
MINUS
GREATER

rule
DOT

filterkey
OR

f
MINUS
GREATER

val
GREATER

AUDIT_MAX_KEY_LEN
BRACKET_C

goto

exit_free
SEMICOLON

str
OP_ASSIGNMENT

audit_unpack_string
BRACKET_O
AMPERSANT

bufp
COMMA
AMPERSANT

remain
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

str
BRACKET_C
BRACKET_C

goto

exit_free
SEMICOLON

entry
MINUS
GREATER

rule
DOT

buflen
ASSIGN_PLUS

f
MINUS
GREATER

val
SEMICOLON

entry
MINUS
GREATER

rule
DOT

filterkey
OP_ASSIGNMENT

str
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_PERM
COLON
IF
BRACKET_O

f
MINUS
GREATER

val
AMPERSANT
TILDE
NUMBER
BRACKET_C

goto

exit_free
SEMICOLON
BREAK
SEMICOLON

default
COLON

goto

exit_free
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

f
OP_ASSIGNMENT

entry
MINUS
GREATER

rule
DOT

inode_f
SEMICOLON
IF
BRACKET_O

f
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

f
MINUS
GREATER

op
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_NOT_EQUAL
COLON

entry
MINUS
GREATER

rule
DOT

inode_f
OP_ASSIGNMENT

NULL
SEMICOLON

case

AUDIT_EQUAL
COLON
BREAK
SEMICOLON

default
COLON

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

exit_free
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

exit_nofree
COLON

return

entry
SEMICOLON

exit_free
COLON

audit_free_rule
BRACKET_O

entry
BRACKET_C
SEMICOLON

return

ERR_PTR
BRACKET_O

err
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

size_t

audit_pack_string
BRACKET_O

void
MULT
MULT

bufp
COMMA
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

size_t

len
OP_ASSIGNMENT

strlen
BRACKET_O

str
BRACKET_C
SEMICOLON

memcpy
BRACKET_O
MULT

bufp
COMMA

str
COMMA

len
BRACKET_C
SEMICOLON
MULT

bufp
ASSIGN_PLUS

len
SEMICOLON

return

len
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

audit_rule
MULT

audit_krule_to_rule
BRACKET_O
STRUCT

audit_krule
MULT

krule
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_rule
MULT

rule
SEMICOLON
TYPE_INT

i
SEMICOLON

rule
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
MULT

rule
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

rule
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

rule
MINUS
GREATER

flags
OP_ASSIGNMENT

krule
MINUS
GREATER

flags
LOGICAL_OR

krule
MINUS
GREATER

listnr
SEMICOLON

rule
MINUS
GREATER

action
OP_ASSIGNMENT

krule
MINUS
GREATER

action
SEMICOLON

rule
MINUS
GREATER

field_count
OP_ASSIGNMENT

krule
MINUS
GREATER

field_count
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

rule
MINUS
GREATER

field_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

rule
MINUS
GREATER

values
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

krule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

val
SEMICOLON

rule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

krule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

type
SEMICOLON
IF
BRACKET_O

krule
MINUS
GREATER

vers_ops
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

krule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

op
AMPERSANT

AUDIT_NOT_EQUAL
BRACKET_C

rule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
LOGICAL_OR
OP_ASSIGNMENT

AUDIT_NEGATE
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

rule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
LOGICAL_OR
OP_ASSIGNMENT

krule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

op
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_BITMASK_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C

rule
MINUS
GREATER

mask
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

krule
MINUS
GREATER

mask
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

return

rule
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

audit_rule_data
MULT

audit_krule_to_data
BRACKET_O
STRUCT

audit_krule
MULT

krule
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_rule_data
MULT

data
SEMICOLON

void
MULT

bufp
SEMICOLON
TYPE_INT

i
SEMICOLON

data
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

data
BRACKET_C
PLUS

krule
MINUS
GREATER

buflen
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

data
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

memset
BRACKET_O

data
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
MULT

data
BRACKET_C
BRACKET_C
SEMICOLON

data
MINUS
GREATER

flags
OP_ASSIGNMENT

krule
MINUS
GREATER

flags
LOGICAL_OR

krule
MINUS
GREATER

listnr
SEMICOLON

data
MINUS
GREATER

action
OP_ASSIGNMENT

krule
MINUS
GREATER

action
SEMICOLON

data
MINUS
GREATER

field_count
OP_ASSIGNMENT

krule
MINUS
GREATER

field_count
SEMICOLON

bufp
OP_ASSIGNMENT

data
MINUS
GREATER

buf
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

data
MINUS
GREATER

field_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_field
MULT

f
OP_ASSIGNMENT
AMPERSANT

krule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

data
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

f
MINUS
GREATER

type
SEMICOLON

data
MINUS
GREATER

fieldflags
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

f
MINUS
GREATER

op
SEMICOLON
SWITCH
BRACKET_O

f
MINUS
GREATER

type
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_SUBJ_USER
COLON

case

AUDIT_SUBJ_ROLE
COLON

case

AUDIT_SUBJ_TYPE
COLON

case

AUDIT_SUBJ_SEN
COLON

case

AUDIT_SUBJ_CLR
COLON

case

AUDIT_OBJ_USER
COLON

case

AUDIT_OBJ_ROLE
COLON

case

AUDIT_OBJ_TYPE
COLON

case

AUDIT_OBJ_LEV_LOW
COLON

case

AUDIT_OBJ_LEV_HIGH
COLON

data
MINUS
GREATER

buflen
ASSIGN_PLUS

data
MINUS
GREATER

values
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

audit_pack_string
BRACKET_O
AMPERSANT

bufp
COMMA

f
MINUS
GREATER

se_str
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_WATCH
COLON

data
MINUS
GREATER

buflen
ASSIGN_PLUS

data
MINUS
GREATER

values
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

audit_pack_string
BRACKET_O
AMPERSANT

bufp
COMMA

krule
MINUS
GREATER

watch
MINUS
GREATER

path
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_FILTERKEY
COLON

data
MINUS
GREATER

buflen
ASSIGN_PLUS

data
MINUS
GREATER

values
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

audit_pack_string
BRACKET_O
AMPERSANT

bufp
COMMA

krule
MINUS
GREATER

filterkey
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON

data
MINUS
GREATER

values
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

f
MINUS
GREATER

val
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_BITMASK_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C

data
MINUS
GREATER

mask
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

krule
MINUS
GREATER

mask
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

return

data
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_compare_rule
BRACKET_O
STRUCT

audit_krule
MULT

a
COMMA
STRUCT

audit_krule
MULT

b
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

a
MINUS
GREATER

flags
NOT_EQ

b
MINUS
GREATER

flags
OR

a
MINUS
GREATER

listnr
NOT_EQ

b
MINUS
GREATER

listnr
OR

a
MINUS
GREATER

action
NOT_EQ

b
MINUS
GREATER

action
OR

a
MINUS
GREATER

field_count
NOT_EQ

b
MINUS
GREATER

field_count
BRACKET_C

return
NUMBER
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

a
MINUS
GREATER

field_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

a
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

type
NOT_EQ

b
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

type
OR

a
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

op
NOT_EQ

b
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

op
BRACKET_C

return
NUMBER
SEMICOLON
SWITCH
BRACKET_O

a
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

type
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_SUBJ_USER
COLON

case

AUDIT_SUBJ_ROLE
COLON

case

AUDIT_SUBJ_TYPE
COLON

case

AUDIT_SUBJ_SEN
COLON

case

AUDIT_SUBJ_CLR
COLON

case

AUDIT_OBJ_USER
COLON

case

AUDIT_OBJ_ROLE
COLON

case

AUDIT_OBJ_TYPE
COLON

case

AUDIT_OBJ_LEV_LOW
COLON

case

AUDIT_OBJ_LEV_HIGH
COLON
IF
BRACKET_O

strcmp
BRACKET_O

a
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

se_str
COMMA

b
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

se_str
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_WATCH
COLON
IF
BRACKET_O

strcmp
BRACKET_O

a
MINUS
GREATER

watch
MINUS
GREATER

path
COMMA

b
MINUS
GREATER

watch
MINUS
GREATER

path
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_FILTERKEY
COLON
IF
BRACKET_O

strcmp
BRACKET_O

a
MINUS
GREATER

filterkey
COMMA

b
MINUS
GREATER

filterkey
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
BREAK
SEMICOLON

default
COLON
IF
BRACKET_O

a
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

val
NOT_EQ

b
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

val
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_BITMASK_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

a
MINUS
GREATER

mask
CORNER_BRACKET_O

i
CORNER_BRACKET_C
NOT_EQ

b
MINUS
GREATER

mask
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

audit_watch
MULT

audit_dupe_watch
BRACKET_O
STRUCT

audit_watch
MULT

old
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

path
SEMICOLON
STRUCT

audit_watch
MULT

new
SEMICOLON

path
OP_ASSIGNMENT

kstrdup
BRACKET_O

old
MINUS
GREATER

path
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

path
BRACKET_C
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ENOMEM
BRACKET_C
SEMICOLON

new
OP_ASSIGNMENT

audit_init_watch
BRACKET_O

path
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

IS_ERR
BRACKET_O

new
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

path
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

new
MINUS
GREATER

dev
OP_ASSIGNMENT

old
MINUS
GREATER

dev
SEMICOLON

new
MINUS
GREATER

ino
OP_ASSIGNMENT

old
MINUS
GREATER

ino
SEMICOLON

get_inotify_watch
BRACKET_O
AMPERSANT

old
MINUS
GREATER

parent
MINUS
GREATER

wdata
BRACKET_C
SEMICOLON

new
MINUS
GREATER

parent
OP_ASSIGNMENT

old
MINUS
GREATER

parent
SEMICOLON

out
COLON

return

new
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

audit_dupe_selinux_field
BRACKET_O
STRUCT

audit_field
MULT

df
COMMA
STRUCT

audit_field
MULT

sf
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_CHAR
MULT

se_str
SEMICOLON

se_str
OP_ASSIGNMENT

kstrdup
BRACKET_O

sf
MINUS
GREATER

se_str
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

se_str
BRACKET_C
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

df
MINUS
GREATER

se_str
OP_ASSIGNMENT

se_str
SEMICOLON

ret
OP_ASSIGNMENT

selinux_audit_rule_init
BRACKET_O

df
MINUS
GREATER

type
COMMA

df
MINUS
GREATER

op
COMMA

df
MINUS
GREATER

se_str
COMMA
AMPERSANT

df
MINUS
GREATER

se_rule
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
MINUS

EINVAL
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA

df
MINUS
GREATER

se_str
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

audit_entry
MULT

audit_dupe_rule
BRACKET_O
STRUCT

audit_krule
MULT

old
COMMA
STRUCT

audit_watch
MULT

watch
BRACKET_C
CURLY_BRACKET_O

u32

fcount
OP_ASSIGNMENT

old
MINUS
GREATER

field_count
SEMICOLON
STRUCT

audit_entry
MULT

entry
SEMICOLON
STRUCT

audit_krule
MULT

new
SEMICOLON
TYPE_CHAR
MULT

fk
SEMICOLON
TYPE_INT

i
COMMA

err
OP_ASSIGNMENT
NUMBER
SEMICOLON

entry
OP_ASSIGNMENT

audit_init_entry
BRACKET_O

fcount
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

entry
BRACKET_C
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ENOMEM
BRACKET_C
SEMICOLON

new
OP_ASSIGNMENT
AMPERSANT

entry
MINUS
GREATER

rule
SEMICOLON

new
MINUS
GREATER

vers_ops
OP_ASSIGNMENT

old
MINUS
GREATER

vers_ops
SEMICOLON

new
MINUS
GREATER

flags
OP_ASSIGNMENT

old
MINUS
GREATER

flags
SEMICOLON

new
MINUS
GREATER

listnr
OP_ASSIGNMENT

old
MINUS
GREATER

listnr
SEMICOLON

new
MINUS
GREATER

action
OP_ASSIGNMENT

old
MINUS
GREATER

action
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_BITMASK_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C

new
MINUS
GREATER

mask
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

old
MINUS
GREATER

mask
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

new
MINUS
GREATER

buflen
OP_ASSIGNMENT

old
MINUS
GREATER

buflen
SEMICOLON

new
MINUS
GREATER

inode_f
OP_ASSIGNMENT

old
MINUS
GREATER

inode_f
SEMICOLON

new
MINUS
GREATER

watch
OP_ASSIGNMENT

NULL
SEMICOLON

new
MINUS
GREATER

field_count
OP_ASSIGNMENT

old
MINUS
GREATER

field_count
SEMICOLON

memcpy
BRACKET_O

new
MINUS
GREATER

fields
COMMA

old
MINUS
GREATER

fields
COMMA

sizeof
BRACKET_O
STRUCT

audit_field
BRACKET_C
MULT

fcount
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

fcount
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

new
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

type
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_SUBJ_USER
COLON

case

AUDIT_SUBJ_ROLE
COLON

case

AUDIT_SUBJ_TYPE
COLON

case

AUDIT_SUBJ_SEN
COLON

case

AUDIT_SUBJ_CLR
COLON

case

AUDIT_OBJ_USER
COLON

case

AUDIT_OBJ_ROLE
COLON

case

AUDIT_OBJ_TYPE
COLON

case

AUDIT_OBJ_LEV_LOW
COLON

case

AUDIT_OBJ_LEV_HIGH
COLON

err
OP_ASSIGNMENT

audit_dupe_selinux_field
BRACKET_O
AMPERSANT

new
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA
AMPERSANT

old
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_FILTERKEY
COLON

fk
OP_ASSIGNMENT

kstrdup
BRACKET_O

old
MINUS
GREATER

filterkey
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

fk
BRACKET_C
BRACKET_C

err
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON
ELSE

new
MINUS
GREATER

filterkey
OP_ASSIGNMENT

fk
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

err
BRACKET_C
CURLY_BRACKET_O

audit_free_rule
BRACKET_O

entry
BRACKET_C
SEMICOLON

return

ERR_PTR
BRACKET_O

err
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

watch
BRACKET_C
CURLY_BRACKET_O

audit_get_watch
BRACKET_O

watch
BRACKET_C
SEMICOLON

new
MINUS
GREATER

watch
OP_ASSIGNMENT

watch
SEMICOLON
CURLY_BRACKET_C

return

entry
SEMICOLON
CURLY_BRACKET_C

static

void

audit_update_watch
BRACKET_O
STRUCT

audit_parent
MULT

parent
COMMA
CONST
TYPE_CHAR
MULT

dname
COMMA

dev_t

dev
COMMA
TYPE_UNSIGNED
TYPE_LONG

ino
COMMA
TYPE_UNSIGNED

invalidating
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_watch
MULT

owatch
COMMA
MULT

nwatch
COMMA
MULT

nextw
SEMICOLON
STRUCT

audit_krule
MULT

r
COMMA
MULT

nextr
SEMICOLON
STRUCT

audit_entry
MULT

oentry
COMMA
MULT

nentry
SEMICOLON
STRUCT

audit_buffer
MULT

ab
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON

list_for_each_entry_safe
BRACKET_O

owatch
COMMA

nextw
COMMA
AMPERSANT

parent
MINUS
GREATER

watches
COMMA

wlist
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

audit_compare_dname_path
BRACKET_O

dname
COMMA

owatch
MINUS
GREATER

path
COMMA

NULL
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

invalidating
AND

current
MINUS
GREATER

audit_context
AND

audit_filter_inodes
BRACKET_O

current
COMMA

current
MINUS
GREATER

audit_context
BRACKET_C
EQ

AUDIT_RECORD_CONTEXT
BRACKET_C

audit_set_auditable
BRACKET_O

current
MINUS
GREATER

audit_context
BRACKET_C
SEMICOLON

nwatch
OP_ASSIGNMENT

audit_dupe_watch
BRACKET_O

owatch
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

IS_ERR
BRACKET_O

nwatch
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON

audit_panic
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

nwatch
MINUS
GREATER

dev
OP_ASSIGNMENT

dev
SEMICOLON

nwatch
MINUS
GREATER

ino
OP_ASSIGNMENT

ino
SEMICOLON

list_for_each_entry_safe
BRACKET_O

r
COMMA

nextr
COMMA
AMPERSANT

owatch
MINUS
GREATER

rules
COMMA

rlist
BRACKET_C
CURLY_BRACKET_O

oentry
OP_ASSIGNMENT

container_of
BRACKET_O

r
COMMA
STRUCT

audit_entry
COMMA

rule
BRACKET_C
SEMICOLON

list_del
BRACKET_O
AMPERSANT

oentry
MINUS
GREATER

rule
DOT

rlist
BRACKET_C
SEMICOLON

list_del_rcu
BRACKET_O
AMPERSANT

oentry
MINUS
GREATER

list
BRACKET_C
SEMICOLON

nentry
OP_ASSIGNMENT

audit_dupe_rule
BRACKET_O
AMPERSANT

oentry
MINUS
GREATER

rule
COMMA

nwatch
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

IS_ERR
BRACKET_O

nentry
BRACKET_C
BRACKET_C
BRACKET_C

audit_panic
BRACKET_O
STRING
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O
TYPE_INT

h
OP_ASSIGNMENT

audit_hash_ino
BRACKET_O
BRACKET_O

u32
BRACKET_C

ino
BRACKET_C
SEMICOLON

list_add
BRACKET_O
AMPERSANT

nentry
MINUS
GREATER

rule
DOT

rlist
COMMA
AMPERSANT

nwatch
MINUS
GREATER

rules
BRACKET_C
SEMICOLON

list_add_rcu
BRACKET_O
AMPERSANT

nentry
MINUS
GREATER

list
COMMA
AMPERSANT

audit_inode_hash
CORNER_BRACKET_O

h
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

call_rcu
BRACKET_O
AMPERSANT

oentry
MINUS
GREATER

rcu
COMMA

audit_free_rule_rcu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
BRACKET_C
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON

audit_log_untrustedstring
BRACKET_O

ab
COMMA

owatch
MINUS
GREATER

path
BRACKET_C
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

dev
COMMA

ino
BRACKET_C
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

r
MINUS
GREATER

listnr
BRACKET_C
SEMICOLON

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON

audit_remove_watch
BRACKET_O

owatch
BRACKET_C
SEMICOLON

goto

add_watch_to_parent
SEMICOLON
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON

return
SEMICOLON

add_watch_to_parent
COLON

list_add
BRACKET_O
AMPERSANT

nwatch
MINUS
GREATER

wlist
COMMA
AMPERSANT

parent
MINUS
GREATER

watches
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

static

void

audit_remove_parent_watches
BRACKET_O
STRUCT

audit_parent
MULT

parent
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_watch
MULT

w
COMMA
MULT

nextw
SEMICOLON
STRUCT

audit_krule
MULT

r
COMMA
MULT

nextr
SEMICOLON
STRUCT

audit_entry
MULT

e
SEMICOLON
STRUCT

audit_buffer
MULT

ab
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON

parent
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

AUDIT_PARENT_INVALID
SEMICOLON

list_for_each_entry_safe
BRACKET_O

w
COMMA

nextw
COMMA
AMPERSANT

parent
MINUS
GREATER

watches
COMMA

wlist
BRACKET_C
CURLY_BRACKET_O

list_for_each_entry_safe
BRACKET_O

r
COMMA

nextr
COMMA
AMPERSANT

w
MINUS
GREATER

rules
COMMA

rlist
BRACKET_C
CURLY_BRACKET_O

e
OP_ASSIGNMENT

container_of
BRACKET_O

r
COMMA
STRUCT

audit_entry
COMMA

rule
BRACKET_C
SEMICOLON

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
BRACKET_C
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON

audit_log_untrustedstring
BRACKET_O

ab
COMMA

w
MINUS
GREATER

path
BRACKET_C
SEMICOLON
IF
BRACKET_O

r
MINUS
GREATER

filterkey
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON

audit_log_untrustedstring
BRACKET_O

ab
COMMA

r
MINUS
GREATER

filterkey
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

r
MINUS
GREATER

listnr
BRACKET_C
SEMICOLON

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON

list_del
BRACKET_O
AMPERSANT

r
MINUS
GREATER

rlist
BRACKET_C
SEMICOLON

list_del_rcu
BRACKET_O
AMPERSANT

e
MINUS
GREATER

list
BRACKET_C
SEMICOLON

call_rcu
BRACKET_O
AMPERSANT

e
MINUS
GREATER

rcu
COMMA

audit_free_rule_rcu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

audit_remove_watch
BRACKET_O

w
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

audit_inotify_unregister
BRACKET_O
STRUCT

list_head
MULT

in_list
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_parent
MULT

p
COMMA
MULT

n
SEMICOLON

list_for_each_entry_safe
BRACKET_O

p
COMMA

n
COMMA

in_list
COMMA

ilist
BRACKET_C
CURLY_BRACKET_O

list_del
BRACKET_O
AMPERSANT

p
MINUS
GREATER

ilist
BRACKET_C
SEMICOLON

inotify_rm_watch
BRACKET_O

audit_ih
COMMA
AMPERSANT

p
MINUS
GREATER

wdata
BRACKET_C
SEMICOLON

put_inotify_watch
BRACKET_O
AMPERSANT

p
MINUS
GREATER

wdata
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
STRUCT

audit_entry
MULT

audit_find_rule
BRACKET_O
STRUCT

audit_entry
MULT

entry
COMMA
STRUCT

list_head
MULT

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_entry
MULT

e
COMMA
MULT

found
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_INT

h
SEMICOLON
IF
BRACKET_O

entry
MINUS
GREATER

rule
DOT

watch
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

h
OP_ASSIGNMENT
NUMBER
SEMICOLON

h
LESS

AUDIT_INODE_BUCKETS
SEMICOLON

h
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

list
OP_ASSIGNMENT
AMPERSANT

audit_inode_hash
CORNER_BRACKET_O

h
CORNER_BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

e
COMMA

list
COMMA

list
BRACKET_C
IF
BRACKET_O
NOT

audit_compare_rule
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rule
COMMA
AMPERSANT

e
MINUS
GREATER

rule
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

found
OP_ASSIGNMENT

e
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

list_for_each_entry
BRACKET_O

e
COMMA

list
COMMA

list
BRACKET_C
IF
BRACKET_O
NOT

audit_compare_rule
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rule
COMMA
AMPERSANT

e
MINUS
GREATER

rule
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

found
OP_ASSIGNMENT

e
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

out
COLON

return

found
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_get_nd
BRACKET_O
TYPE_CHAR
MULT

path
COMMA
STRUCT

nameidata
MULT
MULT

ndp
COMMA
STRUCT

nameidata
MULT
MULT

ndw
BRACKET_C
CURLY_BRACKET_O
STRUCT

nameidata
MULT

ndparent
COMMA
MULT

ndwatch
SEMICOLON
TYPE_INT

err
SEMICOLON

ndparent
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ndparent
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

ndparent
BRACKET_C
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

ndwatch
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ndwatch
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

ndwatch
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

ndparent
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

err
OP_ASSIGNMENT

path_lookup
BRACKET_O

path
COMMA

LOOKUP_PARENT
COMMA

ndparent
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

ndparent
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ndwatch
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C

err
OP_ASSIGNMENT

path_lookup
BRACKET_O

path
COMMA
NUMBER
COMMA

ndwatch
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

ndwatch
BRACKET_C
SEMICOLON

ndwatch
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
MULT

ndp
OP_ASSIGNMENT

ndparent
SEMICOLON
MULT

ndw
OP_ASSIGNMENT

ndwatch
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

audit_put_nd
BRACKET_O
STRUCT

nameidata
MULT

ndp
COMMA
STRUCT

nameidata
MULT

ndw
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

ndp
BRACKET_C
CURLY_BRACKET_O

path_release
BRACKET_O

ndp
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ndp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

ndw
BRACKET_C
CURLY_BRACKET_O

path_release
BRACKET_O

ndw
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ndw
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

audit_add_to_parent
BRACKET_O
STRUCT

audit_krule
MULT

krule
COMMA
STRUCT

audit_parent
MULT

parent
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_watch
MULT

w
COMMA
MULT

watch
OP_ASSIGNMENT

krule
MINUS
GREATER

watch
SEMICOLON
TYPE_INT

watch_found
OP_ASSIGNMENT
NUMBER
SEMICOLON

list_for_each_entry
BRACKET_O

w
COMMA
AMPERSANT

parent
MINUS
GREATER

watches
COMMA

wlist
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

strcmp
BRACKET_O

watch
MINUS
GREATER

path
COMMA

w
MINUS
GREATER

path
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

watch_found
OP_ASSIGNMENT
NUMBER
SEMICOLON

audit_put_watch
BRACKET_O

watch
BRACKET_C
SEMICOLON

audit_put_watch
BRACKET_O

watch
BRACKET_C
SEMICOLON

audit_get_watch
BRACKET_O

w
BRACKET_C
SEMICOLON

krule
MINUS
GREATER

watch
OP_ASSIGNMENT

watch
OP_ASSIGNMENT

w
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

watch_found
BRACKET_C
CURLY_BRACKET_O

get_inotify_watch
BRACKET_O
AMPERSANT

parent
MINUS
GREATER

wdata
BRACKET_C
SEMICOLON

watch
MINUS
GREATER

parent
OP_ASSIGNMENT

parent
SEMICOLON

list_add
BRACKET_O
AMPERSANT

watch
MINUS
GREATER

wlist
COMMA
AMPERSANT

parent
MINUS
GREATER

watches
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

list_add
BRACKET_O
AMPERSANT

krule
MINUS
GREATER

rlist
COMMA
AMPERSANT

watch
MINUS
GREATER

rules
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_add_watch
BRACKET_O
STRUCT

audit_krule
MULT

krule
COMMA
STRUCT

nameidata
MULT

ndp
COMMA
STRUCT

nameidata
MULT

ndw
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_watch
MULT

watch
OP_ASSIGNMENT

krule
MINUS
GREATER

watch
SEMICOLON
STRUCT

inotify_watch
MULT

i_watch
SEMICOLON
STRUCT

audit_parent
MULT

parent
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

ndw
BRACKET_C
CURLY_BRACKET_O

watch
MINUS
GREATER

dev
OP_ASSIGNMENT

ndw
MINUS
GREATER

dentry
MINUS
GREATER

d_inode
MINUS
GREATER

i_sb
MINUS
GREATER

s_dev
SEMICOLON

watch
MINUS
GREATER

ino
OP_ASSIGNMENT

ndw
MINUS
GREATER

dentry
MINUS
GREATER

d_inode
MINUS
GREATER

i_ino
SEMICOLON
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

inotify_find_watch
BRACKET_O

audit_ih
COMMA

ndp
MINUS
GREATER

dentry
MINUS
GREATER

d_inode
COMMA
AMPERSANT

i_watch
BRACKET_C
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

parent
OP_ASSIGNMENT

audit_init_parent
BRACKET_O

ndp
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

parent
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

mutex_lock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON

return

PTR_ERR
BRACKET_O

parent
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE

parent
OP_ASSIGNMENT

container_of
BRACKET_O

i_watch
COMMA
STRUCT

audit_parent
COMMA

wdata
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

parent
MINUS
GREATER

flags
AMPERSANT

AUDIT_PARENT_INVALID
BRACKET_C

ret
OP_ASSIGNMENT
MINUS

ENOENT
SEMICOLON
ELSE

audit_add_to_parent
BRACKET_O

krule
COMMA

parent
BRACKET_C
SEMICOLON

put_inotify_watch
BRACKET_O
AMPERSANT

parent
MINUS
GREATER

wdata
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

audit_add_rule
BRACKET_O
STRUCT

audit_entry
MULT

entry
COMMA
STRUCT

list_head
MULT

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_entry
MULT

e
SEMICOLON
STRUCT

audit_field
MULT

inode_f
OP_ASSIGNMENT

entry
MINUS
GREATER

rule
DOT

inode_f
SEMICOLON
STRUCT

audit_watch
MULT

watch
OP_ASSIGNMENT

entry
MINUS
GREATER

rule
DOT

watch
SEMICOLON
STRUCT

nameidata
MULT

ndp
COMMA
MULT

ndw
SEMICOLON
TYPE_INT

h
COMMA

err
COMMA

putnd_needed
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_IFDEF

CONFIG_AUDITSYSCALL
TYPE_INT

dont_count
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

entry
MINUS
GREATER

rule
DOT

listnr
EQ

AUDIT_FILTER_USER
OR

entry
MINUS
GREATER

rule
DOT

listnr
EQ

AUDIT_FILTER_TYPE
BRACKET_C

dont_count
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF
IF
BRACKET_O

inode_f
BRACKET_C
CURLY_BRACKET_O

h
OP_ASSIGNMENT

audit_hash_ino
BRACKET_O

inode_f
MINUS
GREATER

val
BRACKET_C
SEMICOLON

list
OP_ASSIGNMENT
AMPERSANT

audit_inode_hash
CORNER_BRACKET_O

h
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

mutex_lock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON

e
OP_ASSIGNMENT

audit_find_rule
BRACKET_O

entry
COMMA

list
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

e
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

EEXIST
SEMICOLON

goto

error
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

watch
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT

audit_get_nd
BRACKET_O

watch
MINUS
GREATER

path
COMMA
AMPERSANT

ndp
COMMA
AMPERSANT

ndw
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

goto

error
SEMICOLON

putnd_needed
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

mutex_lock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

watch
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT

audit_add_watch
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rule
COMMA

ndp
COMMA

ndw
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON

goto

error
SEMICOLON
CURLY_BRACKET_C

h
OP_ASSIGNMENT

audit_hash_ino
BRACKET_O
BRACKET_O

u32
BRACKET_C

watch
MINUS
GREATER

ino
BRACKET_C
SEMICOLON

list
OP_ASSIGNMENT
AMPERSANT

audit_inode_hash
CORNER_BRACKET_O

h
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

entry
MINUS
GREATER

rule
DOT

flags
AMPERSANT

AUDIT_FILTER_PREPEND
BRACKET_C
CURLY_BRACKET_O

list_add_rcu
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

list
COMMA

list
BRACKET_C
SEMICOLON

entry
MINUS
GREATER

rule
DOT

flags
AMPERSANT
OP_ASSIGNMENT
TILDE

AUDIT_FILTER_PREPEND
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

list_add_tail_rcu
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

list
COMMA

list
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_AUDITSYSCALL
IF
BRACKET_O
NOT

dont_count
BRACKET_C

audit_n_rules
PLUS
PLUS
SEMICOLON
IF
BRACKET_O
NOT

audit_match_signal
BRACKET_O

entry
BRACKET_C
BRACKET_C

audit_signals
PLUS
PLUS
SEMICOLON
PP_ENDIF

mutex_unlock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

putnd_needed
BRACKET_C

audit_put_nd
BRACKET_O

ndp
COMMA

ndw
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON

error
COLON
IF
BRACKET_O

putnd_needed
BRACKET_C

audit_put_nd
BRACKET_O

ndp
COMMA

ndw
BRACKET_C
SEMICOLON
IF
BRACKET_O

watch
BRACKET_C

audit_put_watch
BRACKET_O

watch
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

audit_del_rule
BRACKET_O
STRUCT

audit_entry
MULT

entry
COMMA
STRUCT

list_head
MULT

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_entry
MULT

e
SEMICOLON
STRUCT

audit_field
MULT

inode_f
OP_ASSIGNMENT

entry
MINUS
GREATER

rule
DOT

inode_f
SEMICOLON
STRUCT

audit_watch
MULT

watch
COMMA
MULT

tmp_watch
OP_ASSIGNMENT

entry
MINUS
GREATER

rule
DOT

watch
SEMICOLON

LIST_HEAD
BRACKET_O

inotify_list
BRACKET_C
SEMICOLON
TYPE_INT

h
COMMA

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_IFDEF

CONFIG_AUDITSYSCALL
TYPE_INT

dont_count
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

entry
MINUS
GREATER

rule
DOT

listnr
EQ

AUDIT_FILTER_USER
OR

entry
MINUS
GREATER

rule
DOT

listnr
EQ

AUDIT_FILTER_TYPE
BRACKET_C

dont_count
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF
IF
BRACKET_O

inode_f
BRACKET_C
CURLY_BRACKET_O

h
OP_ASSIGNMENT

audit_hash_ino
BRACKET_O

inode_f
MINUS
GREATER

val
BRACKET_C
SEMICOLON

list
OP_ASSIGNMENT
AMPERSANT

audit_inode_hash
CORNER_BRACKET_O

h
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

mutex_lock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON

e
OP_ASSIGNMENT

audit_find_rule
BRACKET_O

entry
COMMA

list
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

e
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
MINUS

ENOENT
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

watch
OP_ASSIGNMENT

e
MINUS
GREATER

rule
DOT

watch
SEMICOLON
IF
BRACKET_O

watch
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_parent
MULT

parent
OP_ASSIGNMENT

watch
MINUS
GREATER

parent
SEMICOLON

list_del
BRACKET_O
AMPERSANT

e
MINUS
GREATER

rule
DOT

rlist
BRACKET_C
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

watch
MINUS
GREATER

rules
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

audit_remove_watch
BRACKET_O

watch
BRACKET_C
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

parent
MINUS
GREATER

watches
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

list_add
BRACKET_O
AMPERSANT

parent
MINUS
GREATER

ilist
COMMA
AMPERSANT

inotify_list
BRACKET_C
SEMICOLON

get_inotify_watch
BRACKET_O
AMPERSANT

parent
MINUS
GREATER

wdata
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

list_del_rcu
BRACKET_O
AMPERSANT

e
MINUS
GREATER

list
BRACKET_C
SEMICOLON

call_rcu
BRACKET_O
AMPERSANT

e
MINUS
GREATER

rcu
COMMA

audit_free_rule_rcu
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_AUDITSYSCALL
IF
BRACKET_O
NOT

dont_count
BRACKET_C

audit_n_rules
MINUS
MINUS
SEMICOLON
IF
BRACKET_O
NOT

audit_match_signal
BRACKET_O

entry
BRACKET_C
BRACKET_C

audit_signals
MINUS
MINUS
SEMICOLON
PP_ENDIF

mutex_unlock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

inotify_list
BRACKET_C
BRACKET_C

audit_inotify_unregister
BRACKET_O
AMPERSANT

inotify_list
BRACKET_C
SEMICOLON

out
COLON
IF
BRACKET_O

tmp_watch
BRACKET_C

audit_put_watch
BRACKET_O

tmp_watch
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

void

audit_list
BRACKET_O
TYPE_INT

pid
COMMA
TYPE_INT

seq
COMMA
STRUCT

sk_buff_head
MULT

q
BRACKET_C
CURLY_BRACKET_O
STRUCT

sk_buff
MULT

skb
SEMICOLON
STRUCT

audit_entry
MULT

entry
SEMICOLON
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_NR_FILTERS
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

list_for_each_entry
BRACKET_O

entry
COMMA
AMPERSANT

audit_filter_list
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_rule
MULT

rule
SEMICOLON

rule
OP_ASSIGNMENT

audit_krule_to_rule
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rule
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

rule
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

skb
OP_ASSIGNMENT

audit_make_reply
BRACKET_O

pid
COMMA

seq
COMMA

AUDIT_LIST
COMMA
NUMBER
COMMA
NUMBER
COMMA

rule
COMMA

sizeof
BRACKET_O
MULT

rule
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

skb
BRACKET_C

skb_queue_tail
BRACKET_O

q
COMMA

skb
BRACKET_C
SEMICOLON

kfree
BRACKET_O

rule
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_INODE_BUCKETS
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

list_for_each_entry
BRACKET_O

entry
COMMA
AMPERSANT

audit_inode_hash
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_rule
MULT

rule
SEMICOLON

rule
OP_ASSIGNMENT

audit_krule_to_rule
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rule
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

rule
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

skb
OP_ASSIGNMENT

audit_make_reply
BRACKET_O

pid
COMMA

seq
COMMA

AUDIT_LIST
COMMA
NUMBER
COMMA
NUMBER
COMMA

rule
COMMA

sizeof
BRACKET_O
MULT

rule
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

skb
BRACKET_C

skb_queue_tail
BRACKET_O

q
COMMA

skb
BRACKET_C
SEMICOLON

kfree
BRACKET_O

rule
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

skb
OP_ASSIGNMENT

audit_make_reply
BRACKET_O

pid
COMMA

seq
COMMA

AUDIT_LIST
COMMA
NUMBER
COMMA
NUMBER
COMMA

NULL
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

skb
BRACKET_C

skb_queue_tail
BRACKET_O

q
COMMA

skb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

audit_list_rules
BRACKET_O
TYPE_INT

pid
COMMA
TYPE_INT

seq
COMMA
STRUCT

sk_buff_head
MULT

q
BRACKET_C
CURLY_BRACKET_O
STRUCT

sk_buff
MULT

skb
SEMICOLON
STRUCT

audit_entry
MULT

e
SEMICOLON
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_NR_FILTERS
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

list_for_each_entry
BRACKET_O

e
COMMA
AMPERSANT

audit_filter_list
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_rule_data
MULT

data
SEMICOLON

data
OP_ASSIGNMENT

audit_krule_to_data
BRACKET_O
AMPERSANT

e
MINUS
GREATER

rule
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

data
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

skb
OP_ASSIGNMENT

audit_make_reply
BRACKET_O

pid
COMMA

seq
COMMA

AUDIT_LIST_RULES
COMMA
NUMBER
COMMA
NUMBER
COMMA

data
COMMA

sizeof
BRACKET_O
MULT

data
BRACKET_C
PLUS

data
MINUS
GREATER

buflen
BRACKET_C
SEMICOLON
IF
BRACKET_O

skb
BRACKET_C

skb_queue_tail
BRACKET_O

q
COMMA

skb
BRACKET_C
SEMICOLON

kfree
BRACKET_O

data
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_INODE_BUCKETS
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

list_for_each_entry
BRACKET_O

e
COMMA
AMPERSANT

audit_inode_hash
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_rule_data
MULT

data
SEMICOLON

data
OP_ASSIGNMENT

audit_krule_to_data
BRACKET_O
AMPERSANT

e
MINUS
GREATER

rule
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

data
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

skb
OP_ASSIGNMENT

audit_make_reply
BRACKET_O

pid
COMMA

seq
COMMA

AUDIT_LIST_RULES
COMMA
NUMBER
COMMA
NUMBER
COMMA

data
COMMA

sizeof
BRACKET_O
MULT

data
BRACKET_C
PLUS

data
MINUS
GREATER

buflen
BRACKET_C
SEMICOLON
IF
BRACKET_O

skb
BRACKET_C

skb_queue_tail
BRACKET_O

q
COMMA

skb
BRACKET_C
SEMICOLON

kfree
BRACKET_O

data
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

skb
OP_ASSIGNMENT

audit_make_reply
BRACKET_O

pid
COMMA

seq
COMMA

AUDIT_LIST_RULES
COMMA
NUMBER
COMMA
NUMBER
COMMA

NULL
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

skb
BRACKET_C

skb_queue_tail
BRACKET_O

q
COMMA

skb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

audit_log_rule_change
BRACKET_O

uid_t

loginuid
COMMA

u32

sid
COMMA
TYPE_CHAR
MULT

action
COMMA
STRUCT

audit_krule
MULT

rule
COMMA
TYPE_INT

res
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_buffer
MULT

ab
SEMICOLON

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_CONFIG_CHANGE
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C

return
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

loginuid
BRACKET_C
SEMICOLON
IF
BRACKET_O

sid
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

ctx
OP_ASSIGNMENT

NULL
SEMICOLON

u32

len
SEMICOLON
IF
BRACKET_O

selinux_sid_to_string
BRACKET_O

sid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

sid
BRACKET_C
SEMICOLON
ELSE

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

ctx
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

action
BRACKET_C
SEMICOLON
IF
BRACKET_O

rule
MINUS
GREATER

filterkey
BRACKET_C

audit_log_untrustedstring
BRACKET_O

ab
COMMA

rule
MINUS
GREATER

filterkey
BRACKET_C
SEMICOLON
ELSE

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

rule
MINUS
GREATER

listnr
COMMA

res
BRACKET_C
SEMICOLON

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_receive_filter
BRACKET_O
TYPE_INT

type
COMMA
TYPE_INT

pid
COMMA
TYPE_INT

uid
COMMA
TYPE_INT

seq
COMMA

void
MULT

data
COMMA

size_t

datasz
COMMA

uid_t

loginuid
COMMA

u32

sid
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
SEMICOLON
STRUCT

audit_netlink_list
MULT

dest
SEMICOLON
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

audit_entry
MULT

entry
SEMICOLON
SWITCH
BRACKET_O

type
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_LIST
COLON

case

AUDIT_LIST_RULES
COLON

dest
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

audit_netlink_list
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

dest
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

dest
MINUS
GREATER

pid
OP_ASSIGNMENT

pid
SEMICOLON

skb_queue_head_init
BRACKET_O
AMPERSANT

dest
MINUS
GREATER

q
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

type
EQ

AUDIT_LIST
BRACKET_C

audit_list
BRACKET_O

pid
COMMA

seq
COMMA
AMPERSANT

dest
MINUS
GREATER

q
BRACKET_C
SEMICOLON
ELSE

audit_list_rules
BRACKET_O

pid
COMMA

seq
COMMA
AMPERSANT

dest
MINUS
GREATER

q
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON

tsk
OP_ASSIGNMENT

kthread_run
BRACKET_O

audit_send_list
COMMA

dest
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

tsk
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

skb_queue_purge
BRACKET_O
AMPERSANT

dest
MINUS
GREATER

q
BRACKET_C
SEMICOLON

kfree
BRACKET_O

dest
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON

case

AUDIT_ADD
COLON

case

AUDIT_ADD_RULE
COLON
IF
BRACKET_O

type
EQ

AUDIT_ADD
BRACKET_C

entry
OP_ASSIGNMENT

audit_rule_to_entry
BRACKET_O

data
BRACKET_C
SEMICOLON
ELSE

entry
OP_ASSIGNMENT

audit_data_to_entry
BRACKET_O

data
COMMA

datasz
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

entry
BRACKET_C
BRACKET_C

return

PTR_ERR
BRACKET_O

entry
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

audit_add_rule
BRACKET_O

entry
COMMA
AMPERSANT

audit_filter_list
CORNER_BRACKET_O

entry
MINUS
GREATER

rule
DOT

listnr
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

audit_log_rule_change
BRACKET_O

loginuid
COMMA

sid
COMMA
STRING
COMMA
AMPERSANT

entry
MINUS
GREATER

rule
COMMA
NOT

err
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

audit_free_rule
BRACKET_O

entry
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_DEL
COLON

case

AUDIT_DEL_RULE
COLON
IF
BRACKET_O

type
EQ

AUDIT_DEL
BRACKET_C

entry
OP_ASSIGNMENT

audit_rule_to_entry
BRACKET_O

data
BRACKET_C
SEMICOLON
ELSE

entry
OP_ASSIGNMENT

audit_data_to_entry
BRACKET_O

data
COMMA

datasz
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

entry
BRACKET_C
BRACKET_C

return

PTR_ERR
BRACKET_O

entry
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

audit_del_rule
BRACKET_O

entry
COMMA
AMPERSANT

audit_filter_list
CORNER_BRACKET_O

entry
MINUS
GREATER

rule
DOT

listnr
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

audit_log_rule_change
BRACKET_O

loginuid
COMMA

sid
COMMA
STRING
COMMA
AMPERSANT

entry
MINUS
GREATER

rule
COMMA
NOT

err
BRACKET_C
SEMICOLON

audit_free_rule
BRACKET_O

entry
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

return

err
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_comparator
BRACKET_O
CONST

u32

left
COMMA
CONST

u32

op
COMMA
CONST

u32

right
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

op
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_EQUAL
COLON

return
BRACKET_O

left
EQ

right
BRACKET_C
SEMICOLON

case

AUDIT_NOT_EQUAL
COLON

return
BRACKET_O

left
NOT_EQ

right
BRACKET_C
SEMICOLON

case

AUDIT_LESS_THAN
COLON

return
BRACKET_O

left
LESS

right
BRACKET_C
SEMICOLON

case

AUDIT_LESS_THAN_OR_EQUAL
COLON

return
BRACKET_O

left
LE_EQ

right
BRACKET_C
SEMICOLON

case

AUDIT_GREATER_THAN
COLON

return
BRACKET_O

left
GREATER

right
BRACKET_C
SEMICOLON

case

AUDIT_GREATER_THAN_OR_EQUAL
COLON

return
BRACKET_O

left
GR_EQ

right
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_compare_dname_path
BRACKET_O
CONST
TYPE_CHAR
MULT

dname
COMMA
CONST
TYPE_CHAR
MULT

path
COMMA
TYPE_INT
MULT

dirlen
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

dlen
COMMA

plen
SEMICOLON
CONST
TYPE_CHAR
MULT

p
SEMICOLON
IF
BRACKET_O
NOT

dname
OR
NOT

path
BRACKET_C

return
NUMBER
SEMICOLON

dlen
OP_ASSIGNMENT

strlen
BRACKET_O

dname
BRACKET_C
SEMICOLON

plen
OP_ASSIGNMENT

strlen
BRACKET_O

path
BRACKET_C
SEMICOLON
IF
BRACKET_O

plen
LESS

dlen
BRACKET_C

return
NUMBER
SEMICOLON

p
OP_ASSIGNMENT

path
PLUS

plen
MINUS
NUMBER
SEMICOLON
WHILE
BRACKET_O
BRACKET_O
MULT

p
EQ
QUOTED_CHAR
BRACKET_C
AND
BRACKET_O

p
GREATER

path
BRACKET_C
BRACKET_C

p
MINUS
MINUS
SEMICOLON

p
OP_ASSIGNMENT

p
MINUS

dlen
PLUS
NUMBER
SEMICOLON
IF
BRACKET_O

p
LESS

path
BRACKET_C

return
NUMBER
SEMICOLON
ELSE
IF
BRACKET_O

p
GREATER

path
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
MULT
MINUS
MINUS

p
NOT_EQ
QUOTED_CHAR
BRACKET_C

return
NUMBER
SEMICOLON
ELSE

p
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

dirlen
BRACKET_C
MULT

dirlen
OP_ASSIGNMENT

p
MINUS

path
SEMICOLON

return

strncmp
BRACKET_O

p
COMMA

dname
COMMA

dlen
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_filter_user_rules
BRACKET_O
STRUCT

netlink_skb_parms
MULT

cb
COMMA
STRUCT

audit_krule
MULT

rule
COMMA

enum

audit_state
MULT

state
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

rule
MINUS
GREATER

field_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_field
MULT

f
OP_ASSIGNMENT
AMPERSANT

rule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

result
OP_ASSIGNMENT
NUMBER
SEMICOLON
SWITCH
BRACKET_O

f
MINUS
GREATER

type
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_PID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

cb
MINUS
GREATER

creds
DOT

pid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_UID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

cb
MINUS
GREATER

creds
DOT

uid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_GID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

cb
MINUS
GREATER

creds
DOT

gid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_LOGINUID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

cb
MINUS
GREATER

loginuid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

result
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
SWITCH
BRACKET_O

rule
MINUS
GREATER

action
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_NEVER
COLON
MULT

state
OP_ASSIGNMENT

AUDIT_DISABLED
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_ALWAYS
COLON
MULT

state
OP_ASSIGNMENT

AUDIT_RECORD_CONTEXT
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_filter_user
BRACKET_O
STRUCT

netlink_skb_parms
MULT

cb
COMMA
TYPE_INT

type
BRACKET_C
CURLY_BRACKET_O

enum

audit_state

state
OP_ASSIGNMENT

AUDIT_DISABLED
SEMICOLON
STRUCT

audit_entry
MULT

e
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

list_for_each_entry_rcu
BRACKET_O

e
COMMA
AMPERSANT

audit_filter_list
CORNER_BRACKET_O

AUDIT_FILTER_USER
CORNER_BRACKET_C
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

audit_filter_user_rules
BRACKET_O

cb
COMMA
AMPERSANT

e
MINUS
GREATER

rule
COMMA
AMPERSANT

state
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

state
EQ

AUDIT_DISABLED
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_filter_type
BRACKET_O
TYPE_INT

type
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_entry
MULT

e
SEMICOLON
TYPE_INT

result
OP_ASSIGNMENT
NUMBER
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

audit_filter_list
CORNER_BRACKET_O

AUDIT_FILTER_TYPE
CORNER_BRACKET_C
BRACKET_C
BRACKET_C

goto

unlock_and_return
SEMICOLON

list_for_each_entry_rcu
BRACKET_O

e
COMMA
AMPERSANT

audit_filter_list
CORNER_BRACKET_O

AUDIT_FILTER_TYPE
CORNER_BRACKET_C
COMMA

list
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

e
MINUS
GREATER

rule
DOT

field_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_field
MULT

f
OP_ASSIGNMENT
AMPERSANT

e
MINUS
GREATER

rule
DOT

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

f
MINUS
GREATER

type
EQ

AUDIT_MSGTYPE
BRACKET_C
CURLY_BRACKET_O

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

type
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

result
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

result
BRACKET_C

goto

unlock_and_return
SEMICOLON
CURLY_BRACKET_C

unlock_and_return
COLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

result
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

audit_rule_has_selinux
BRACKET_O
STRUCT

audit_krule
MULT

rule
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

rule
MINUS
GREATER

field_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_field
MULT

f
OP_ASSIGNMENT
AMPERSANT

rule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
SWITCH
BRACKET_O

f
MINUS
GREATER

type
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_SUBJ_USER
COLON

case

AUDIT_SUBJ_ROLE
COLON

case

AUDIT_SUBJ_TYPE
COLON

case

AUDIT_SUBJ_SEN
COLON

case

AUDIT_SUBJ_CLR
COLON

case

AUDIT_OBJ_USER
COLON

case

AUDIT_OBJ_ROLE
COLON

case

AUDIT_OBJ_TYPE
COLON

case

AUDIT_OBJ_LEV_LOW
COLON

case

AUDIT_OBJ_LEV_HIGH
COLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

selinux_audit_rule_update
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_entry
MULT

entry
COMMA
MULT

n
COMMA
MULT

nentry
SEMICOLON
STRUCT

audit_watch
MULT

watch
SEMICOLON
TYPE_INT

i
COMMA

err
OP_ASSIGNMENT
NUMBER
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

AUDIT_NR_FILTERS
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

list_for_each_entry_safe
BRACKET_O

entry
COMMA

n
COMMA
AMPERSANT

audit_filter_list
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

audit_rule_has_selinux
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rule
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

watch
OP_ASSIGNMENT

entry
MINUS
GREATER

rule
DOT

watch
SEMICOLON

nentry
OP_ASSIGNMENT

audit_dupe_rule
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rule
COMMA

watch
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

IS_ERR
BRACKET_O

nentry
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

err
BRACKET_C

err
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

nentry
BRACKET_C
SEMICOLON

audit_panic
BRACKET_O
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

watch
BRACKET_C

list_del
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rule
DOT

rlist
BRACKET_C
SEMICOLON

list_del_rcu
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

list
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

watch
BRACKET_C
CURLY_BRACKET_O

list_add
BRACKET_O
AMPERSANT

nentry
MINUS
GREATER

rule
DOT

rlist
COMMA
AMPERSANT

watch
MINUS
GREATER

rules
BRACKET_C
SEMICOLON

list_del
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rule
DOT

rlist
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

list_replace_rcu
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

list
COMMA
AMPERSANT

nentry
MINUS
GREATER

list
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

call_rcu
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

rcu
COMMA

audit_free_rule_rcu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

audit_filter_mutex
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C

void

audit_handle_ievent
BRACKET_O
STRUCT

inotify_watch
MULT

i_watch
COMMA

u32

wd
COMMA

u32

mask
COMMA

u32

cookie
COMMA
CONST
TYPE_CHAR
MULT

dname
COMMA
STRUCT

inode
MULT

inode
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_parent
MULT

parent
SEMICOLON

parent
OP_ASSIGNMENT

container_of
BRACKET_O

i_watch
COMMA
STRUCT

audit_parent
COMMA

wdata
BRACKET_C
SEMICOLON
IF
BRACKET_O

mask
AMPERSANT
BRACKET_O

IN_CREATE
LOGICAL_OR

IN_MOVED_TO
BRACKET_C
AND

inode
BRACKET_C

audit_update_watch
BRACKET_O

parent
COMMA

dname
COMMA

inode
MINUS
GREATER

i_sb
MINUS
GREATER

s_dev
COMMA

inode
MINUS
GREATER

i_ino
COMMA
NUMBER
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O

mask
AMPERSANT
BRACKET_O

IN_DELETE
LOGICAL_OR

IN_MOVED_FROM
BRACKET_C
BRACKET_C

audit_update_watch
BRACKET_O

parent
COMMA

dname
COMMA
BRACKET_O

dev_t
BRACKET_C
MINUS
NUMBER
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS
NUMBER
COMMA
NUMBER
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O

mask
AMPERSANT
BRACKET_O

IN_DELETE_SELF
LOGICAL_OR

IN_UNMOUNT
BRACKET_C
BRACKET_C

audit_remove_parent_watches
BRACKET_O

parent
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O

mask
AMPERSANT

IN_MOVE_SELF
BRACKET_C
CURLY_BRACKET_O

audit_remove_parent_watches
BRACKET_O

parent
BRACKET_C
SEMICOLON

inotify_remove_watch_locked
BRACKET_O

audit_ih
COMMA

i_watch
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

mask
AMPERSANT

IN_IGNORED
BRACKET_C

put_inotify_watch
BRACKET_O

i_watch
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

extern
STRUCT

list_head

audit_filter_list
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
TYPE_INT

audit_enabled
SEMICOLON
PP_DEFINE

AUDIT_NAMES
NUMBER
PP_DEFINE

AUDIT_NAME_FULL
MINUS
NUMBER
TYPE_INT

audit_n_rules
SEMICOLON
TYPE_INT

audit_signals
SEMICOLON
STRUCT

audit_names
CURLY_BRACKET_O
CONST
TYPE_CHAR
MULT

name
SEMICOLON
TYPE_INT

name_len
SEMICOLON
TYPE_UNSIGNED

name_put
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

ino
SEMICOLON

dev_t

dev
SEMICOLON

umode_t

mode
SEMICOLON

uid_t

uid
SEMICOLON

gid_t

gid
SEMICOLON

dev_t

rdev
SEMICOLON

u32

osid
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

audit_aux_data
CURLY_BRACKET_O
STRUCT

audit_aux_data
MULT

next
SEMICOLON
TYPE_INT

type
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
PP_DEFINE

AUDIT_AUX_IPCPERM
NUMBER
PP_DEFINE

AUDIT_AUX_PIDS
NUMBER
STRUCT

audit_aux_data_mq_open
CURLY_BRACKET_O
STRUCT

audit_aux_data

d
SEMICOLON
TYPE_INT

oflag
SEMICOLON

mode_t

mode
SEMICOLON
STRUCT

mq_attr

attr
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

audit_aux_data_mq_sendrecv
CURLY_BRACKET_O
STRUCT

audit_aux_data

d
SEMICOLON

mqd_t

mqdes
SEMICOLON

size_t

msg_len
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

msg_prio
SEMICOLON
STRUCT

timespec

abs_timeout
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

audit_aux_data_mq_notify
CURLY_BRACKET_O
STRUCT

audit_aux_data

d
SEMICOLON

mqd_t

mqdes
SEMICOLON
STRUCT

sigevent

notification
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

audit_aux_data_mq_getsetattr
CURLY_BRACKET_O
STRUCT

audit_aux_data

d
SEMICOLON

mqd_t

mqdes
SEMICOLON
STRUCT

mq_attr

mqstat
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

audit_aux_data_ipcctl
CURLY_BRACKET_O
STRUCT

audit_aux_data

d
SEMICOLON
STRUCT

ipc_perm

p
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

qbytes
SEMICOLON

uid_t

uid
SEMICOLON

gid_t

gid
SEMICOLON

mode_t

mode
SEMICOLON

u32

osid
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

audit_aux_data_execve
CURLY_BRACKET_O
STRUCT

audit_aux_data

d
SEMICOLON
TYPE_INT

argc
SEMICOLON
TYPE_INT

envc
SEMICOLON
TYPE_CHAR

mem
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

audit_aux_data_socketcall
CURLY_BRACKET_O
STRUCT

audit_aux_data

d
SEMICOLON
TYPE_INT

nargs
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

args
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

audit_aux_data_sockaddr
CURLY_BRACKET_O
STRUCT

audit_aux_data

d
SEMICOLON
TYPE_INT

len
SEMICOLON
TYPE_CHAR

a
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

audit_aux_data_fd_pair
CURLY_BRACKET_O
STRUCT

audit_aux_data

d
SEMICOLON
TYPE_INT

fd
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

audit_aux_data_path
CURLY_BRACKET_O
STRUCT

audit_aux_data

d
SEMICOLON
STRUCT

dentry
MULT

dentry
SEMICOLON
STRUCT

vfsmount
MULT

mnt
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

audit_aux_data_pids
CURLY_BRACKET_O
STRUCT

audit_aux_data

d
SEMICOLON

pid_t

target_pid
CORNER_BRACKET_O

AUDIT_AUX_PIDS
CORNER_BRACKET_C
SEMICOLON

u32

target_sid
CORNER_BRACKET_O

AUDIT_AUX_PIDS
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

pid_count
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

audit_context
CURLY_BRACKET_O
TYPE_INT

dummy
SEMICOLON
TYPE_INT

in_syscall
SEMICOLON

enum

audit_state

state
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

serial
SEMICOLON
STRUCT

timespec

ctime
SEMICOLON

uid_t

loginuid
SEMICOLON
TYPE_INT

major
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

return_valid
SEMICOLON
TYPE_LONG

return_code
SEMICOLON
TYPE_INT

auditable
SEMICOLON
TYPE_INT

name_count
SEMICOLON
STRUCT

audit_names

names
CORNER_BRACKET_O

AUDIT_NAMES
CORNER_BRACKET_C
SEMICOLON
TYPE_CHAR
MULT

filterkey
SEMICOLON
STRUCT

dentry
MULT

pwd
SEMICOLON
STRUCT

vfsmount
MULT

pwdmnt
SEMICOLON
STRUCT

audit_context
MULT

previous
SEMICOLON
STRUCT

audit_aux_data
MULT

aux
SEMICOLON
STRUCT

audit_aux_data
MULT

aux_pids
SEMICOLON

pid_t

pid
COMMA

ppid
SEMICOLON

uid_t

uid
COMMA

euid
COMMA

suid
COMMA

fsuid
SEMICOLON

gid_t

gid
COMMA

egid
COMMA

sgid
COMMA

fsgid
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

personality
SEMICOLON
TYPE_INT

arch
SEMICOLON

pid_t

target_pid
SEMICOLON

u32

target_sid
SEMICOLON
PP_IF

AUDIT_DEBUG
TYPE_INT

put_count
SEMICOLON
TYPE_INT

ino_count
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C
SEMICOLON
PP_DEFINE

ACC_MODE
BRACKET_O

x
BRACKET_C
BRACKET_O
STRING
CORNER_BRACKET_O
BRACKET_O

x
BRACKET_C
AMPERSANT

O_ACCMODE
CORNER_BRACKET_C
BRACKET_C

static

inline
TYPE_INT

open_arg
BRACKET_O
TYPE_INT

flags
COMMA
TYPE_INT

mask
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

n
OP_ASSIGNMENT

ACC_MODE
BRACKET_O

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

flags
AMPERSANT
BRACKET_O

O_TRUNC
LOGICAL_OR

O_CREAT
BRACKET_C
BRACKET_C

n
LOGICAL_OR
OP_ASSIGNMENT

AUDIT_PERM_WRITE
SEMICOLON

return

n
AMPERSANT

mask
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_match_perm
BRACKET_O
STRUCT

audit_context
MULT

ctx
COMMA
TYPE_INT

mask
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED

n
OP_ASSIGNMENT

ctx
MINUS
GREATER

major
SEMICOLON
SWITCH
BRACKET_O

audit_classify_syscall
BRACKET_O

ctx
MINUS
GREATER

arch
COMMA

n
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

case
NUMBER
COLON
IF
BRACKET_O
BRACKET_O

mask
AMPERSANT

AUDIT_PERM_WRITE
BRACKET_C
AND

audit_match_class
BRACKET_O

AUDIT_CLASS_WRITE
COMMA

n
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O

mask
AMPERSANT

AUDIT_PERM_READ
BRACKET_C
AND

audit_match_class
BRACKET_O

AUDIT_CLASS_READ
COMMA

n
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O

mask
AMPERSANT

AUDIT_PERM_ATTR
BRACKET_C
AND

audit_match_class
BRACKET_O

AUDIT_CLASS_CHATTR
COMMA

n
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON

case
NUMBER
COLON
IF
BRACKET_O
BRACKET_O

mask
AMPERSANT

AUDIT_PERM_WRITE
BRACKET_C
AND

audit_match_class
BRACKET_O

AUDIT_CLASS_WRITE_32
COMMA

n
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O

mask
AMPERSANT

AUDIT_PERM_READ
BRACKET_C
AND

audit_match_class
BRACKET_O

AUDIT_CLASS_READ_32
COMMA

n
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O

mask
AMPERSANT

AUDIT_PERM_ATTR
BRACKET_C
AND

audit_match_class
BRACKET_O

AUDIT_CLASS_CHATTR_32
COMMA

n
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON

case
NUMBER
COLON

return

mask
AMPERSANT

ACC_MODE
BRACKET_O

ctx
MINUS
GREATER

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

case
NUMBER
COLON

return

mask
AMPERSANT

ACC_MODE
BRACKET_O

ctx
MINUS
GREATER

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

case
NUMBER
COLON

return
BRACKET_O
BRACKET_O

mask
AMPERSANT

AUDIT_PERM_WRITE
BRACKET_C
AND

ctx
MINUS
GREATER

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ

SYS_BIND
BRACKET_C
SEMICOLON

case
NUMBER
COLON

return

mask
AMPERSANT

AUDIT_PERM_EXEC
SEMICOLON

default
COLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

audit_filter_rules
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
STRUCT

audit_krule
MULT

rule
COMMA
STRUCT

audit_context
MULT

ctx
COMMA
STRUCT

audit_names
MULT

name
COMMA

enum

audit_state
MULT

state
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

j
COMMA

need_sid
OP_ASSIGNMENT
NUMBER
SEMICOLON

u32

sid
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

rule
MINUS
GREATER

field_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_field
MULT

f
OP_ASSIGNMENT
AMPERSANT

rule
MINUS
GREATER

fields
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

result
OP_ASSIGNMENT
NUMBER
SEMICOLON
SWITCH
BRACKET_O

f
MINUS
GREATER

type
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_PID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

tsk
MINUS
GREATER

pid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_PPID
COLON
IF
BRACKET_O

ctx
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

ctx
MINUS
GREATER

ppid
BRACKET_C

ctx
MINUS
GREATER

ppid
OP_ASSIGNMENT

sys_getppid
BRACKET_O
BRACKET_C
SEMICOLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

ctx
MINUS
GREATER

ppid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON

case

AUDIT_UID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

tsk
MINUS
GREATER

uid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_EUID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

tsk
MINUS
GREATER

euid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_SUID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

tsk
MINUS
GREATER

suid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_FSUID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

tsk
MINUS
GREATER

fsuid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_GID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

tsk
MINUS
GREATER

gid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_EGID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

tsk
MINUS
GREATER

egid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_SGID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

tsk
MINUS
GREATER

sgid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_FSGID
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

tsk
MINUS
GREATER

fsgid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_PERS
COLON

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

tsk
MINUS
GREATER

personality
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_ARCH
COLON
IF
BRACKET_O

ctx
BRACKET_C

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

ctx
MINUS
GREATER

arch
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_EXIT
COLON
IF
BRACKET_O

ctx
AND

ctx
MINUS
GREATER

return_valid
BRACKET_C

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

ctx
MINUS
GREATER

return_code
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_SUCCESS
COLON
IF
BRACKET_O

ctx
AND

ctx
MINUS
GREATER

return_valid
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

f
MINUS
GREATER

val
BRACKET_C

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

ctx
MINUS
GREATER

return_valid
COMMA

f
MINUS
GREATER

op
COMMA

AUDITSC_SUCCESS
BRACKET_C
SEMICOLON
ELSE

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

ctx
MINUS
GREATER

return_valid
COMMA

f
MINUS
GREATER

op
COMMA

AUDITSC_FAILURE
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON

case

AUDIT_DEVMAJOR
COLON
IF
BRACKET_O

name
BRACKET_C

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

MAJOR
BRACKET_O

name
MINUS
GREATER

dev
BRACKET_C
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O

ctx
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

ctx
MINUS
GREATER

name_count
SEMICOLON

j
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

audit_comparator
BRACKET_O

MAJOR
BRACKET_O

ctx
MINUS
GREATER

names
CORNER_BRACKET_O

j
CORNER_BRACKET_C
DOT

dev
BRACKET_C
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
PLUS
PLUS

result
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
BREAK
SEMICOLON

case

AUDIT_DEVMINOR
COLON
IF
BRACKET_O

name
BRACKET_C

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

MINOR
BRACKET_O

name
MINUS
GREATER

dev
BRACKET_C
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O

ctx
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

ctx
MINUS
GREATER

name_count
SEMICOLON

j
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

audit_comparator
BRACKET_O

MINOR
BRACKET_O

ctx
MINUS
GREATER

names
CORNER_BRACKET_O

j
CORNER_BRACKET_C
DOT

dev
BRACKET_C
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
PLUS
PLUS

result
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
BREAK
SEMICOLON

case

AUDIT_INODE
COLON
IF
BRACKET_O

name
BRACKET_C

result
OP_ASSIGNMENT
BRACKET_O

name
MINUS
GREATER

ino
EQ

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O

ctx
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

ctx
MINUS
GREATER

name_count
SEMICOLON

j
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

audit_comparator
BRACKET_O

ctx
MINUS
GREATER

names
CORNER_BRACKET_O

j
CORNER_BRACKET_C
DOT

ino
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
PLUS
PLUS

result
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
BREAK
SEMICOLON

case

AUDIT_WATCH
COLON
IF
BRACKET_O

name
AND

rule
MINUS
GREATER

watch
MINUS
GREATER

ino
NOT_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS
NUMBER
BRACKET_C

result
OP_ASSIGNMENT
BRACKET_O

name
MINUS
GREATER

dev
EQ

rule
MINUS
GREATER

watch
MINUS
GREATER

dev
AND

name
MINUS
GREATER

ino
EQ

rule
MINUS
GREATER

watch
MINUS
GREATER

ino
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_LOGINUID
COLON

result
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

ctx
BRACKET_C

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

ctx
MINUS
GREATER

loginuid
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_SUBJ_USER
COLON

case

AUDIT_SUBJ_ROLE
COLON

case

AUDIT_SUBJ_TYPE
COLON

case

AUDIT_SUBJ_SEN
COLON

case

AUDIT_SUBJ_CLR
COLON
IF
BRACKET_O

f
MINUS
GREATER

se_rule
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

need_sid
BRACKET_C
CURLY_BRACKET_O

selinux_get_task_sid
BRACKET_O

tsk
COMMA
AMPERSANT

sid
BRACKET_C
SEMICOLON

need_sid
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

result
OP_ASSIGNMENT

selinux_audit_rule_match
BRACKET_O

sid
COMMA

f
MINUS
GREATER

type
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

se_rule
COMMA

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON

case

AUDIT_OBJ_USER
COLON

case

AUDIT_OBJ_ROLE
COLON

case

AUDIT_OBJ_TYPE
COLON

case

AUDIT_OBJ_LEV_LOW
COLON

case

AUDIT_OBJ_LEV_HIGH
COLON
IF
BRACKET_O

f
MINUS
GREATER

se_rule
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

name
BRACKET_C
CURLY_BRACKET_O

result
OP_ASSIGNMENT

selinux_audit_rule_match
BRACKET_O

name
MINUS
GREATER

osid
COMMA

f
MINUS
GREATER

type
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

se_rule
COMMA

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

ctx
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

ctx
MINUS
GREATER

name_count
SEMICOLON

j
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

selinux_audit_rule_match
BRACKET_O

ctx
MINUS
GREATER

names
CORNER_BRACKET_O

j
CORNER_BRACKET_C
DOT

osid
COMMA

f
MINUS
GREATER

type
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

se_rule
COMMA

ctx
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
PLUS
PLUS

result
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

ctx
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data
MULT

aux
SEMICOLON
FOR
BRACKET_O

aux
OP_ASSIGNMENT

ctx
MINUS
GREATER

aux
SEMICOLON

aux
SEMICOLON

aux
OP_ASSIGNMENT

aux
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

aux
MINUS
GREATER

type
EQ

AUDIT_IPC
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_ipcctl
MULT

axi
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON
IF
BRACKET_O

selinux_audit_rule_match
BRACKET_O

axi
MINUS
GREATER

osid
COMMA

f
MINUS
GREATER

type
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

se_rule
COMMA

ctx
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
PLUS
PLUS

result
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
BREAK
SEMICOLON

case

AUDIT_ARG0
COLON

case

AUDIT_ARG1
COLON

case

AUDIT_ARG2
COLON

case

AUDIT_ARG3
COLON
IF
BRACKET_O

ctx
BRACKET_C

result
OP_ASSIGNMENT

audit_comparator
BRACKET_O

ctx
MINUS
GREATER

argv
CORNER_BRACKET_O

f
MINUS
GREATER

type
MINUS

AUDIT_ARG0
CORNER_BRACKET_C
COMMA

f
MINUS
GREATER

op
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_FILTERKEY
COLON

result
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_PERM
COLON

result
OP_ASSIGNMENT

audit_match_perm
BRACKET_O

ctx
COMMA

f
MINUS
GREATER

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

result
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

rule
MINUS
GREATER

filterkey
BRACKET_C

ctx
MINUS
GREATER

filterkey
OP_ASSIGNMENT

kstrdup
BRACKET_O

rule
MINUS
GREATER

filterkey
COMMA

GFP_ATOMIC
BRACKET_C
SEMICOLON
SWITCH
BRACKET_O

rule
MINUS
GREATER

action
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_NEVER
COLON
MULT

state
OP_ASSIGNMENT

AUDIT_DISABLED
SEMICOLON
BREAK
SEMICOLON

case

AUDIT_ALWAYS
COLON
MULT

state
OP_ASSIGNMENT

AUDIT_RECORD_CONTEXT
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

enum

audit_state

audit_filter_task
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_entry
MULT

e
SEMICOLON

enum

audit_state

state
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

list_for_each_entry_rcu
BRACKET_O

e
COMMA
AMPERSANT

audit_filter_list
CORNER_BRACKET_O

AUDIT_FILTER_TASK
CORNER_BRACKET_C
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

audit_filter_rules
BRACKET_O

tsk
COMMA
AMPERSANT

e
MINUS
GREATER

rule
COMMA

NULL
COMMA

NULL
COMMA
AMPERSANT

state
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

state
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

AUDIT_BUILD_CONTEXT
SEMICOLON
CURLY_BRACKET_C

static

enum

audit_state

audit_filter_syscall
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
STRUCT

audit_context
MULT

ctx
COMMA
STRUCT

list_head
MULT

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_entry
MULT

e
SEMICOLON

enum

audit_state

state
SEMICOLON
IF
BRACKET_O

audit_pid
AND

tsk
MINUS
GREATER

tgid
EQ

audit_pid
BRACKET_C

return

AUDIT_DISABLED
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

list_empty
BRACKET_O

list
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

word
OP_ASSIGNMENT

AUDIT_WORD
BRACKET_O

ctx
MINUS
GREATER

major
BRACKET_C
SEMICOLON
TYPE_INT

bit
OP_ASSIGNMENT

AUDIT_BIT
BRACKET_O

ctx
MINUS
GREATER

major
BRACKET_C
SEMICOLON

list_for_each_entry_rcu
BRACKET_O

e
COMMA

list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

e
MINUS
GREATER

rule
DOT

mask
CORNER_BRACKET_O

word
CORNER_BRACKET_C
AMPERSANT

bit
BRACKET_C
EQ

bit
AND

audit_filter_rules
BRACKET_O

tsk
COMMA
AMPERSANT

e
MINUS
GREATER

rule
COMMA

ctx
COMMA

NULL
COMMA
AMPERSANT

state
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

state
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

AUDIT_BUILD_CONTEXT
SEMICOLON
CURLY_BRACKET_C

enum

audit_state

audit_filter_inodes
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
STRUCT

audit_context
MULT

ctx
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
STRUCT

audit_entry
MULT

e
SEMICOLON

enum

audit_state

state
SEMICOLON
IF
BRACKET_O

audit_pid
AND

tsk
MINUS
GREATER

tgid
EQ

audit_pid
BRACKET_C

return

AUDIT_DISABLED
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

ctx
MINUS
GREATER

name_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

word
OP_ASSIGNMENT

AUDIT_WORD
BRACKET_O

ctx
MINUS
GREATER

major
BRACKET_C
SEMICOLON
TYPE_INT

bit
OP_ASSIGNMENT

AUDIT_BIT
BRACKET_O

ctx
MINUS
GREATER

major
BRACKET_C
SEMICOLON
STRUCT

audit_names
MULT

n
OP_ASSIGNMENT
AMPERSANT

ctx
MINUS
GREATER

names
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

h
OP_ASSIGNMENT

audit_hash_ino
BRACKET_O
BRACKET_O

u32
BRACKET_C

n
MINUS
GREATER

ino
BRACKET_C
SEMICOLON
STRUCT

list_head
MULT

list
OP_ASSIGNMENT
AMPERSANT

audit_inode_hash
CORNER_BRACKET_O

h
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O

list
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

list_for_each_entry_rcu
BRACKET_O

e
COMMA

list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

e
MINUS
GREATER

rule
DOT

mask
CORNER_BRACKET_O

word
CORNER_BRACKET_C
AMPERSANT

bit
BRACKET_C
EQ

bit
AND

audit_filter_rules
BRACKET_O

tsk
COMMA
AMPERSANT

e
MINUS
GREATER

rule
COMMA

ctx
COMMA

n
COMMA
AMPERSANT

state
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

state
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

AUDIT_BUILD_CONTEXT
SEMICOLON
CURLY_BRACKET_C

void

audit_set_auditable
BRACKET_O
STRUCT

audit_context
MULT

ctx
BRACKET_C
CURLY_BRACKET_O

ctx
MINUS
GREATER

auditable
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
STRUCT

audit_context
MULT

audit_get_context
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
TYPE_INT

return_valid
COMMA
TYPE_INT

return_code
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

tsk
MINUS
GREATER

audit_context
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

context
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

context
MINUS
GREATER

return_valid
OP_ASSIGNMENT

return_valid
SEMICOLON

context
MINUS
GREATER

return_code
OP_ASSIGNMENT

return_code
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

in_syscall
AND
NOT

context
MINUS
GREATER

dummy
AND
NOT

context
MINUS
GREATER

auditable
BRACKET_C
CURLY_BRACKET_O

enum

audit_state

state
SEMICOLON

state
OP_ASSIGNMENT

audit_filter_syscall
BRACKET_O

tsk
COMMA

context
COMMA
AMPERSANT

audit_filter_list
CORNER_BRACKET_O

AUDIT_FILTER_EXIT
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

state
EQ

AUDIT_RECORD_CONTEXT
BRACKET_C
CURLY_BRACKET_O

context
MINUS
GREATER

auditable
OP_ASSIGNMENT
NUMBER
SEMICOLON

goto

get_context
SEMICOLON
CURLY_BRACKET_C

state
OP_ASSIGNMENT

audit_filter_inodes
BRACKET_O

tsk
COMMA

context
BRACKET_C
SEMICOLON
IF
BRACKET_O

state
EQ

AUDIT_RECORD_CONTEXT
BRACKET_C

context
MINUS
GREATER

auditable
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

get_context
COLON

tsk
MINUS
GREATER

audit_context
OP_ASSIGNMENT

NULL
SEMICOLON

return

context
SEMICOLON
CURLY_BRACKET_C

static

inline

void

audit_free_names
BRACKET_O
STRUCT

audit_context
MULT

context
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
PP_IF

AUDIT_DEBUG
EQ
NUMBER
IF
BRACKET_O

context
MINUS
GREATER

auditable
OR

context
MINUS
GREATER

put_count
PLUS

context
MINUS
GREATER

ino_count
NOT_EQ

context
MINUS
GREATER

name_count
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
STRING
STRING
COMMA

__FILE__
COMMA

__LINE__
COMMA

context
MINUS
GREATER

serial
COMMA

context
MINUS
GREATER

major
COMMA

context
MINUS
GREATER

in_syscall
COMMA

context
MINUS
GREATER

name_count
COMMA

context
MINUS
GREATER

put_count
COMMA

context
MINUS
GREATER

ino_count
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

context
MINUS
GREATER

name_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
COMMA

i
COMMA

context
MINUS
GREATER

names
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
COMMA

context
MINUS
GREATER

names
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
QUESTION_MARK
COLON
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IF

AUDIT_DEBUG

context
MINUS
GREATER

put_count
OP_ASSIGNMENT
NUMBER
SEMICOLON

context
MINUS
GREATER

ino_count
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

context
MINUS
GREATER

name_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

context
MINUS
GREATER

names
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
AND

context
MINUS
GREATER

names
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name_put
BRACKET_C

__putname
BRACKET_O

context
MINUS
GREATER

names
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

context
MINUS
GREATER

name_count
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

pwd
BRACKET_C

dput
BRACKET_O

context
MINUS
GREATER

pwd
BRACKET_C
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

pwdmnt
BRACKET_C

mntput
BRACKET_O

context
MINUS
GREATER

pwdmnt
BRACKET_C
SEMICOLON

context
MINUS
GREATER

pwd
OP_ASSIGNMENT

NULL
SEMICOLON

context
MINUS
GREATER

pwdmnt
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

static

inline

void

audit_free_aux
BRACKET_O
STRUCT

audit_context
MULT

context
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data
MULT

aux
SEMICOLON
WHILE
BRACKET_O
BRACKET_O

aux
OP_ASSIGNMENT

context
MINUS
GREATER

aux
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

aux
MINUS
GREATER

type
EQ

AUDIT_AVC_PATH
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_path
MULT

axi
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON

dput
BRACKET_O

axi
MINUS
GREATER

dentry
BRACKET_C
SEMICOLON

mntput
BRACKET_O

axi
MINUS
GREATER

mnt
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

context
MINUS
GREATER

aux
OP_ASSIGNMENT

aux
MINUS
GREATER

next
SEMICOLON

kfree
BRACKET_O

aux
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
BRACKET_O

aux
OP_ASSIGNMENT

context
MINUS
GREATER

aux_pids
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

context
MINUS
GREATER

aux_pids
OP_ASSIGNMENT

aux
MINUS
GREATER

next
SEMICOLON

kfree
BRACKET_O

aux
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline

void

audit_zero_context
BRACKET_O
STRUCT

audit_context
MULT

context
COMMA

enum

audit_state

state
BRACKET_C
CURLY_BRACKET_O

uid_t

loginuid
OP_ASSIGNMENT

context
MINUS
GREATER

loginuid
SEMICOLON

memset
BRACKET_O

context
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
MULT

context
BRACKET_C
BRACKET_C
SEMICOLON

context
MINUS
GREATER

state
OP_ASSIGNMENT

state
SEMICOLON

context
MINUS
GREATER

loginuid
OP_ASSIGNMENT

loginuid
SEMICOLON
CURLY_BRACKET_C

static

inline
STRUCT

audit_context
MULT

audit_alloc_context
BRACKET_O

enum

audit_state

state
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_context
MULT

context
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

context
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

context
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

audit_zero_context
BRACKET_O

context
COMMA

state
BRACKET_C
SEMICOLON

return

context
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_alloc
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_context
MULT

context
SEMICOLON

enum

audit_state

state
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

audit_enabled
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

state
OP_ASSIGNMENT

audit_filter_task
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

state
EQ

AUDIT_DISABLED
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

context
OP_ASSIGNMENT

audit_alloc_context
BRACKET_O

state
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

audit_log_lost
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

context
MINUS
GREATER

loginuid
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

current
MINUS
GREATER

audit_context
BRACKET_C

context
MINUS
GREATER

loginuid
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
MINUS
GREATER

loginuid
SEMICOLON

tsk
MINUS
GREATER

audit_context
OP_ASSIGNMENT

context
SEMICOLON

set_tsk_thread_flag
BRACKET_O

tsk
COMMA

TIF_SYSCALL_AUDIT
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline

void

audit_free_context
BRACKET_O
STRUCT

audit_context
MULT

context
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_context
MULT

previous
SEMICOLON
TYPE_INT

count
OP_ASSIGNMENT
NUMBER
SEMICOLON
DO
CURLY_BRACKET_O

previous
OP_ASSIGNMENT

context
MINUS
GREATER

previous
SEMICOLON
IF
BRACKET_O

previous
OR
BRACKET_O

count
AND

count
LESS
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
PLUS
PLUS

count
SEMICOLON

printk
BRACKET_O

KERN_ERR
STRING
STRING
COMMA

context
MINUS
GREATER

serial
COMMA

context
MINUS
GREATER

major
COMMA

context
MINUS
GREATER

name_count
COMMA

count
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

audit_free_names
BRACKET_O

context
BRACKET_C
SEMICOLON

audit_free_aux
BRACKET_O

context
BRACKET_C
SEMICOLON

kfree
BRACKET_O

context
MINUS
GREATER

filterkey
BRACKET_C
SEMICOLON

kfree
BRACKET_O

context
BRACKET_C
SEMICOLON

context
OP_ASSIGNMENT

previous
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

context
BRACKET_C
SEMICOLON
IF
BRACKET_O

count
GR_EQ
NUMBER
BRACKET_C

printk
BRACKET_O

KERN_ERR
STRING
COMMA

count
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

audit_log_task_context
BRACKET_O
STRUCT

audit_buffer
MULT

ab
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

ctx
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_UNSIGNED

len
SEMICOLON
TYPE_INT

error
SEMICOLON

u32

sid
SEMICOLON

selinux_get_task_sid
BRACKET_O

current
COMMA
AMPERSANT

sid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sid
BRACKET_C

return
SEMICOLON

error
OP_ASSIGNMENT

selinux_sid_to_string
BRACKET_O

sid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

error
NOT_EQ
MINUS

EINVAL
BRACKET_C

goto

error_path
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

ctx
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON

return
SEMICOLON

error_path
COLON

audit_panic
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

audit_log_task_context
BRACKET_C
SEMICOLON

static

void

audit_log_task_info
BRACKET_O
STRUCT

audit_buffer
MULT

ab
COMMA
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

name
CORNER_BRACKET_O

sizeof
BRACKET_O

tsk
MINUS
GREATER

comm
BRACKET_C
CORNER_BRACKET_C
SEMICOLON
STRUCT

mm_struct
MULT

mm
OP_ASSIGNMENT

tsk
MINUS
GREATER

mm
SEMICOLON
STRUCT

vm_area_struct
MULT

vma
SEMICOLON

get_task_comm
BRACKET_O

name
COMMA

tsk
BRACKET_C
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON

audit_log_untrustedstring
BRACKET_O

ab
COMMA

name
BRACKET_C
SEMICOLON
IF
BRACKET_O

mm
BRACKET_C
CURLY_BRACKET_O

down_read
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON

vma
OP_ASSIGNMENT

mm
MINUS
GREATER

mmap
SEMICOLON
WHILE
BRACKET_O

vma
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

vma
MINUS
GREATER

vm_flags
AMPERSANT

VM_EXECUTABLE
BRACKET_C
AND

vma
MINUS
GREATER

vm_file
BRACKET_C
CURLY_BRACKET_O

audit_log_d_path
BRACKET_O

ab
COMMA
STRING
COMMA

vma
MINUS
GREATER

vm_file
MINUS
GREATER

f_path
DOT

dentry
COMMA

vma
MINUS
GREATER

vm_file
MINUS
GREATER

f_path
DOT

mnt
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

vma
OP_ASSIGNMENT

vma
MINUS
GREATER

vm_next
SEMICOLON
CURLY_BRACKET_C

up_read
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

audit_log_task_context
BRACKET_O

ab
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

audit_log_pid_context
BRACKET_O
STRUCT

audit_context
MULT

context
COMMA

pid_t

pid
COMMA

u32

sid
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_buffer
MULT

ab
SEMICOLON
TYPE_CHAR
MULT

s
OP_ASSIGNMENT

NULL
SEMICOLON

u32

len
SEMICOLON
TYPE_INT

rc
OP_ASSIGNMENT
NUMBER
SEMICOLON

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

context
COMMA

GFP_KERNEL
COMMA

AUDIT_OBJ_PID
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

selinux_sid_to_string
BRACKET_O

sid
COMMA
AMPERSANT

s
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

pid
BRACKET_C
SEMICOLON

rc
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

pid
COMMA

s
BRACKET_C
SEMICOLON

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON

kfree
BRACKET_O

s
BRACKET_C
SEMICOLON

return

rc
SEMICOLON
CURLY_BRACKET_C

static

void

audit_log_exit
BRACKET_O
STRUCT

audit_context
MULT

context
COMMA
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

call_panic
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

audit_buffer
MULT

ab
SEMICOLON
STRUCT

audit_aux_data
MULT

aux
SEMICOLON
CONST
TYPE_CHAR
MULT

tty
SEMICOLON

context
MINUS
GREATER

pid
OP_ASSIGNMENT

tsk
MINUS
GREATER

pid
SEMICOLON
IF
BRACKET_O
NOT

context
MINUS
GREATER

ppid
BRACKET_C

context
MINUS
GREATER

ppid
OP_ASSIGNMENT

sys_getppid
BRACKET_O
BRACKET_C
SEMICOLON

context
MINUS
GREATER

uid
OP_ASSIGNMENT

tsk
MINUS
GREATER

uid
SEMICOLON

context
MINUS
GREATER

gid
OP_ASSIGNMENT

tsk
MINUS
GREATER

gid
SEMICOLON

context
MINUS
GREATER

euid
OP_ASSIGNMENT

tsk
MINUS
GREATER

euid
SEMICOLON

context
MINUS
GREATER

suid
OP_ASSIGNMENT

tsk
MINUS
GREATER

suid
SEMICOLON

context
MINUS
GREATER

fsuid
OP_ASSIGNMENT

tsk
MINUS
GREATER

fsuid
SEMICOLON

context
MINUS
GREATER

egid
OP_ASSIGNMENT

tsk
MINUS
GREATER

egid
SEMICOLON

context
MINUS
GREATER

sgid
OP_ASSIGNMENT

tsk
MINUS
GREATER

sgid
SEMICOLON

context
MINUS
GREATER

fsgid
OP_ASSIGNMENT

tsk
MINUS
GREATER

fsgid
SEMICOLON

context
MINUS
GREATER

personality
OP_ASSIGNMENT

tsk
MINUS
GREATER

personality
SEMICOLON

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

context
COMMA

GFP_KERNEL
COMMA

AUDIT_SYSCALL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C

return
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

context
MINUS
GREATER

arch
COMMA

context
MINUS
GREATER

major
BRACKET_C
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

personality
NOT_EQ

PER_LINUX
BRACKET_C

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

context
MINUS
GREATER

personality
BRACKET_C
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

return_valid
BRACKET_C

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA
BRACKET_O

context
MINUS
GREATER

return_valid
EQ

AUDITSC_SUCCESS
BRACKET_C
QUESTION_MARK
STRING
COLON
STRING
COMMA

context
MINUS
GREATER

return_code
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

tty_mutex
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

signal
AND

tsk
MINUS
GREATER

signal
MINUS
GREATER

tty
AND

tsk
MINUS
GREATER

signal
MINUS
GREATER

tty
MINUS
GREATER

name
BRACKET_C

tty
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

tty
MINUS
GREATER

name
SEMICOLON
ELSE

tty
OP_ASSIGNMENT
STRING
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
STRING
STRING
STRING
COMMA

context
MINUS
GREATER

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

context
MINUS
GREATER

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

context
MINUS
GREATER

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

context
MINUS
GREATER

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

context
MINUS
GREATER

name_count
COMMA

context
MINUS
GREATER

ppid
COMMA

context
MINUS
GREATER

pid
COMMA

context
MINUS
GREATER

loginuid
COMMA

context
MINUS
GREATER

uid
COMMA

context
MINUS
GREATER

gid
COMMA

context
MINUS
GREATER

euid
COMMA

context
MINUS
GREATER

suid
COMMA

context
MINUS
GREATER

fsuid
COMMA

context
MINUS
GREATER

egid
COMMA

context
MINUS
GREATER

sgid
COMMA

context
MINUS
GREATER

fsgid
COMMA

tty
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

tty_mutex
BRACKET_C
SEMICOLON

audit_log_task_info
BRACKET_O

ab
COMMA

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

filterkey
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON

audit_log_untrustedstring
BRACKET_O

ab
COMMA

context
MINUS
GREATER

filterkey
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON
FOR
BRACKET_O

aux
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

aux
SEMICOLON

aux
OP_ASSIGNMENT

aux
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

context
COMMA

GFP_KERNEL
COMMA

aux
MINUS
GREATER

type
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C
CONTINUE
SEMICOLON
SWITCH
BRACKET_O

aux
MINUS
GREATER

type
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_MQ_OPEN
COLON
CURLY_BRACKET_O
STRUCT

audit_aux_data_mq_open
MULT

axi
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
STRING
COMMA

axi
MINUS
GREATER

oflag
COMMA

axi
MINUS
GREATER

mode
COMMA

axi
MINUS
GREATER

attr
DOT

mq_flags
COMMA

axi
MINUS
GREATER

attr
DOT

mq_maxmsg
COMMA

axi
MINUS
GREATER

attr
DOT

mq_msgsize
COMMA

axi
MINUS
GREATER

attr
DOT

mq_curmsgs
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

case

AUDIT_MQ_SENDRECV
COLON
CURLY_BRACKET_O
STRUCT

audit_aux_data_mq_sendrecv
MULT

axi
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
STRING
COMMA

axi
MINUS
GREATER

mqdes
COMMA

axi
MINUS
GREATER

msg_len
COMMA

axi
MINUS
GREATER

msg_prio
COMMA

axi
MINUS
GREATER

abs_timeout
DOT

tv_sec
COMMA

axi
MINUS
GREATER

abs_timeout
DOT

tv_nsec
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

case

AUDIT_MQ_NOTIFY
COLON
CURLY_BRACKET_O
STRUCT

audit_aux_data_mq_notify
MULT

axi
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

axi
MINUS
GREATER

mqdes
COMMA

axi
MINUS
GREATER

notification
DOT

sigev_signo
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

case

AUDIT_MQ_GETSETATTR
COLON
CURLY_BRACKET_O
STRUCT

audit_aux_data_mq_getsetattr
MULT

axi
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
STRING
COMMA

axi
MINUS
GREATER

mqdes
COMMA

axi
MINUS
GREATER

mqstat
DOT

mq_flags
COMMA

axi
MINUS
GREATER

mqstat
DOT

mq_maxmsg
COMMA

axi
MINUS
GREATER

mqstat
DOT

mq_msgsize
COMMA

axi
MINUS
GREATER

mqstat
DOT

mq_curmsgs
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

case

AUDIT_IPC
COLON
CURLY_BRACKET_O
STRUCT

audit_aux_data_ipcctl
MULT

axi
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

axi
MINUS
GREATER

uid
COMMA

axi
MINUS
GREATER

gid
COMMA

axi
MINUS
GREATER

mode
BRACKET_C
SEMICOLON
IF
BRACKET_O

axi
MINUS
GREATER

osid
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

ctx
OP_ASSIGNMENT

NULL
SEMICOLON

u32

len
SEMICOLON
IF
BRACKET_O

selinux_sid_to_string
BRACKET_O

axi
MINUS
GREATER

osid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

axi
MINUS
GREATER

osid
BRACKET_C
SEMICOLON

call_panic
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

ctx
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

case

AUDIT_IPC_SET_PERM
COLON
CURLY_BRACKET_O
STRUCT

audit_aux_data_ipcctl
MULT

axi
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

axi
MINUS
GREATER

qbytes
COMMA

axi
MINUS
GREATER

uid
COMMA

axi
MINUS
GREATER

gid
COMMA

axi
MINUS
GREATER

mode
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

case

AUDIT_EXECVE
COLON
CURLY_BRACKET_O
STRUCT

audit_aux_data_execve
MULT

axi
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON
TYPE_INT

i
SEMICOLON
CONST
TYPE_CHAR
MULT

p
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
COMMA

p
OP_ASSIGNMENT

axi
MINUS
GREATER

mem
SEMICOLON

i
LESS

axi
MINUS
GREATER

argc
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

i
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

audit_log_untrustedstring
BRACKET_O

ab
COMMA

p
BRACKET_C
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

case

AUDIT_SOCKETCALL
COLON
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
STRUCT

audit_aux_data_socketcall
MULT

axs
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

axs
MINUS
GREATER

nargs
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

axs
MINUS
GREATER

nargs
SEMICOLON

i
PLUS
PLUS
BRACKET_C

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

i
COMMA

axs
MINUS
GREATER

args
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

case

AUDIT_SOCKADDR
COLON
CURLY_BRACKET_O
STRUCT

audit_aux_data_sockaddr
MULT

axs
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON

audit_log_hex
BRACKET_O

ab
COMMA

axs
MINUS
GREATER

a
COMMA

axs
MINUS
GREATER

len
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

case

AUDIT_AVC_PATH
COLON
CURLY_BRACKET_O
STRUCT

audit_aux_data_path
MULT

axi
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON

audit_log_d_path
BRACKET_O

ab
COMMA
STRING
COMMA

axi
MINUS
GREATER

dentry
COMMA

axi
MINUS
GREATER

mnt
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

case

AUDIT_FD_PAIR
COLON
CURLY_BRACKET_O
STRUCT

audit_aux_data_fd_pair
MULT

axs
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

axs
MINUS
GREATER

fd
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

axs
MINUS
GREATER

fd
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
FOR
BRACKET_O

aux
OP_ASSIGNMENT

context
MINUS
GREATER

aux_pids
SEMICOLON

aux
SEMICOLON

aux
OP_ASSIGNMENT

aux
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_pids
MULT

axs
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

aux
SEMICOLON
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

axs
MINUS
GREATER

pid_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

audit_log_pid_context
BRACKET_O

context
COMMA

axs
MINUS
GREATER

target_pid
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

axs
MINUS
GREATER

target_sid
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
BRACKET_C

call_panic
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

context
MINUS
GREATER

target_pid
AND

audit_log_pid_context
BRACKET_O

context
COMMA

context
MINUS
GREATER

target_pid
COMMA

context
MINUS
GREATER

target_sid
BRACKET_C
BRACKET_C

call_panic
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

pwd
AND

context
MINUS
GREATER

pwdmnt
BRACKET_C
CURLY_BRACKET_O

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

context
COMMA

GFP_KERNEL
COMMA

AUDIT_CWD
BRACKET_C
SEMICOLON
IF
BRACKET_O

ab
BRACKET_C
CURLY_BRACKET_O

audit_log_d_path
BRACKET_O

ab
COMMA
STRING
COMMA

context
MINUS
GREATER

pwd
COMMA

context
MINUS
GREATER

pwdmnt
BRACKET_C
SEMICOLON

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

context
MINUS
GREATER

name_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_names
MULT

n
OP_ASSIGNMENT
AMPERSANT

context
MINUS
GREATER

names
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

context
COMMA

GFP_KERNEL
COMMA

AUDIT_PATH
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ab
BRACKET_C
CONTINUE
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

i
BRACKET_C
SEMICOLON
IF
BRACKET_O

n
MINUS
GREATER

name
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

n
MINUS
GREATER

name_len
BRACKET_C
CURLY_BRACKET_O

case

AUDIT_NAME_FULL
COLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON

audit_log_untrustedstring
BRACKET_O

ab
COMMA

n
MINUS
GREATER

name
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case
NUMBER
COLON

audit_log_d_path
BRACKET_O

ab
COMMA
STRING
COMMA

context
MINUS
GREATER

pwd
COMMA

context
MINUS
GREATER

pwdmnt
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON

audit_log_n_untrustedstring
BRACKET_O

ab
COMMA

n
MINUS
GREATER

name_len
COMMA

n
MINUS
GREATER

name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE

audit_log_format
BRACKET_O

ab
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

n
MINUS
GREATER

ino
NOT_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
STRING
STRING
COMMA

n
MINUS
GREATER

ino
COMMA

MAJOR
BRACKET_O

n
MINUS
GREATER

dev
BRACKET_C
COMMA

MINOR
BRACKET_O

n
MINUS
GREATER

dev
BRACKET_C
COMMA

n
MINUS
GREATER

mode
COMMA

n
MINUS
GREATER

uid
COMMA

n
MINUS
GREATER

gid
COMMA

MAJOR
BRACKET_O

n
MINUS
GREATER

rdev
BRACKET_C
COMMA

MINOR
BRACKET_O

n
MINUS
GREATER

rdev
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

n
MINUS
GREATER

osid
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

ctx
OP_ASSIGNMENT

NULL
SEMICOLON

u32

len
SEMICOLON
IF
BRACKET_O

selinux_sid_to_string
BRACKET_O

n
MINUS
GREATER

osid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

n
MINUS
GREATER

osid
BRACKET_C
SEMICOLON

call_panic
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

ctx
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

call_panic
BRACKET_C

audit_panic
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

audit_free
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_context
MULT

context
SEMICOLON

context
OP_ASSIGNMENT

audit_get_context
BRACKET_O

tsk
COMMA
NUMBER
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

context
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

in_syscall
AND

context
MINUS
GREATER

auditable
BRACKET_C

audit_log_exit
BRACKET_O

context
COMMA

tsk
BRACKET_C
SEMICOLON

audit_free_context
BRACKET_O

context
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

audit_syscall_entry
BRACKET_O
TYPE_INT

arch
COMMA
TYPE_INT

major
COMMA
TYPE_UNSIGNED
TYPE_LONG

a1
COMMA
TYPE_UNSIGNED
TYPE_LONG

a2
COMMA
TYPE_UNSIGNED
TYPE_LONG

a3
COMMA
TYPE_UNSIGNED
TYPE_LONG

a4
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

tsk
MINUS
GREATER

audit_context
SEMICOLON

enum

audit_state

state
SEMICOLON

BUG_ON
BRACKET_O
NOT

context
BRACKET_C
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

in_syscall
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_context
MULT

newctx
SEMICOLON
PP_IF

AUDIT_DEBUG

printk
BRACKET_O

KERN_ERR
STRING
STRING
COMMA

context
MINUS
GREATER

serial
COMMA

tsk
MINUS
GREATER

pid
COMMA

context
MINUS
GREATER

major
COMMA

major
BRACKET_C
SEMICOLON
PP_ENDIF

newctx
OP_ASSIGNMENT

audit_alloc_context
BRACKET_O

context
MINUS
GREATER

state
BRACKET_C
SEMICOLON
IF
BRACKET_O

newctx
BRACKET_C
CURLY_BRACKET_O

newctx
MINUS
GREATER

previous
OP_ASSIGNMENT

context
SEMICOLON

context
OP_ASSIGNMENT

newctx
SEMICOLON

tsk
MINUS
GREATER

audit_context
OP_ASSIGNMENT

newctx
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

audit_zero_context
BRACKET_O

context
COMMA

context
MINUS
GREATER

state
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

BUG_ON
BRACKET_O

context
MINUS
GREATER

in_syscall
OR

context
MINUS
GREATER

name_count
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

audit_enabled
BRACKET_C

return
SEMICOLON

context
MINUS
GREATER

arch
OP_ASSIGNMENT

arch
SEMICOLON

context
MINUS
GREATER

major
OP_ASSIGNMENT

major
SEMICOLON

context
MINUS
GREATER

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

a1
SEMICOLON

context
MINUS
GREATER

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

a2
SEMICOLON

context
MINUS
GREATER

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

a3
SEMICOLON

context
MINUS
GREATER

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

a4
SEMICOLON

state
OP_ASSIGNMENT

context
MINUS
GREATER

state
SEMICOLON

context
MINUS
GREATER

dummy
OP_ASSIGNMENT
NOT

audit_n_rules
SEMICOLON
IF
BRACKET_O
NOT

context
MINUS
GREATER

dummy
AND
BRACKET_O

state
EQ

AUDIT_SETUP_CONTEXT
OR

state
EQ

AUDIT_BUILD_CONTEXT
BRACKET_C
BRACKET_C

state
OP_ASSIGNMENT

audit_filter_syscall
BRACKET_O

tsk
COMMA

context
COMMA
AMPERSANT

audit_filter_list
CORNER_BRACKET_O

AUDIT_FILTER_ENTRY
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

state
EQ

AUDIT_DISABLED
BRACKET_C
BRACKET_C

return
SEMICOLON

context
MINUS
GREATER

serial
OP_ASSIGNMENT
NUMBER
SEMICOLON

context
MINUS
GREATER

ctime
OP_ASSIGNMENT

CURRENT_TIME
SEMICOLON

context
MINUS
GREATER

in_syscall
OP_ASSIGNMENT
NUMBER
SEMICOLON

context
MINUS
GREATER

auditable
OP_ASSIGNMENT
NOT
NOT
BRACKET_O

state
EQ

AUDIT_RECORD_CONTEXT
BRACKET_C
SEMICOLON

context
MINUS
GREATER

ppid
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

audit_syscall_exit
BRACKET_O
TYPE_INT

valid
COMMA
TYPE_LONG

return_code
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

audit_context
MULT

context
SEMICOLON

context
OP_ASSIGNMENT

audit_get_context
BRACKET_O

tsk
COMMA

valid
COMMA

return_code
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

context
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

in_syscall
AND

context
MINUS
GREATER

auditable
BRACKET_C

audit_log_exit
BRACKET_O

context
COMMA

tsk
BRACKET_C
SEMICOLON

context
MINUS
GREATER

in_syscall
OP_ASSIGNMENT
NUMBER
SEMICOLON

context
MINUS
GREATER

auditable
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

previous
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_context
MULT

new_context
OP_ASSIGNMENT

context
MINUS
GREATER

previous
SEMICOLON

context
MINUS
GREATER

previous
OP_ASSIGNMENT

NULL
SEMICOLON

audit_free_context
BRACKET_O

context
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

audit_context
OP_ASSIGNMENT

new_context
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

audit_free_names
BRACKET_O

context
BRACKET_C
SEMICOLON

audit_free_aux
BRACKET_O

context
BRACKET_C
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT

NULL
SEMICOLON

context
MINUS
GREATER

aux_pids
OP_ASSIGNMENT

NULL
SEMICOLON

context
MINUS
GREATER

target_pid
OP_ASSIGNMENT
NUMBER
SEMICOLON

context
MINUS
GREATER

target_sid
OP_ASSIGNMENT
NUMBER
SEMICOLON

kfree
BRACKET_O

context
MINUS
GREATER

filterkey
BRACKET_C
SEMICOLON

context
MINUS
GREATER

filterkey
OP_ASSIGNMENT

NULL
SEMICOLON

tsk
MINUS
GREATER

audit_context
OP_ASSIGNMENT

context
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

__audit_getname
BRACKET_O
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

name
BRACKET_C
OR
NOT

name
BRACKET_C

return
SEMICOLON
IF
BRACKET_O
NOT

context
MINUS
GREATER

in_syscall
BRACKET_C
CURLY_BRACKET_O
PP_IF

AUDIT_DEBUG
EQ
NUMBER

printk
BRACKET_O

KERN_ERR
STRING
COMMA

__FILE__
COMMA

__LINE__
COMMA

context
MINUS
GREATER

serial
COMMA

name
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON
PP_ENDIF

return
SEMICOLON
CURLY_BRACKET_C

BUG_ON
BRACKET_O

context
MINUS
GREATER

name_count
GR_EQ

AUDIT_NAMES
BRACKET_C
SEMICOLON

context
MINUS
GREATER

names
CORNER_BRACKET_O

context
MINUS
GREATER

name_count
CORNER_BRACKET_C
DOT

name
OP_ASSIGNMENT

name
SEMICOLON

context
MINUS
GREATER

names
CORNER_BRACKET_O

context
MINUS
GREATER

name_count
CORNER_BRACKET_C
DOT

name_len
OP_ASSIGNMENT

AUDIT_NAME_FULL
SEMICOLON

context
MINUS
GREATER

names
CORNER_BRACKET_O

context
MINUS
GREATER

name_count
CORNER_BRACKET_C
DOT

name_put
OP_ASSIGNMENT
NUMBER
SEMICOLON

context
MINUS
GREATER

names
CORNER_BRACKET_O

context
MINUS
GREATER

name_count
CORNER_BRACKET_C
DOT

ino
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS
NUMBER
SEMICOLON

context
MINUS
GREATER

names
CORNER_BRACKET_O

context
MINUS
GREATER

name_count
CORNER_BRACKET_C
DOT

osid
OP_ASSIGNMENT
NUMBER
SEMICOLON
PLUS
PLUS

context
MINUS
GREATER

name_count
SEMICOLON
IF
BRACKET_O
NOT

context
MINUS
GREATER

pwd
BRACKET_C
CURLY_BRACKET_O

read_lock
BRACKET_O
AMPERSANT

current
MINUS
GREATER

fs
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

context
MINUS
GREATER

pwd
OP_ASSIGNMENT

dget
BRACKET_O

current
MINUS
GREATER

fs
MINUS
GREATER

pwd
BRACKET_C
SEMICOLON

context
MINUS
GREATER

pwdmnt
OP_ASSIGNMENT

mntget
BRACKET_O

current
MINUS
GREATER

fs
MINUS
GREATER

pwdmnt
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

current
MINUS
GREATER

fs
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

audit_putname
BRACKET_O
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON

BUG_ON
BRACKET_O
NOT

context
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

context
MINUS
GREATER

in_syscall
BRACKET_C
CURLY_BRACKET_O
PP_IF

AUDIT_DEBUG
EQ
NUMBER

printk
BRACKET_O

KERN_ERR
STRING
COMMA

__FILE__
COMMA

__LINE__
COMMA

context
MINUS
GREATER

serial
COMMA

name
BRACKET_C
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

name_count
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

context
MINUS
GREATER

name_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C

printk
BRACKET_O

KERN_ERR
STRING
COMMA

i
COMMA

context
MINUS
GREATER

names
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
COMMA

context
MINUS
GREATER

names
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
QUESTION_MARK
COLON
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

__putname
BRACKET_O

name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IF

AUDIT_DEBUG
ELSE
CURLY_BRACKET_O
PLUS
PLUS

context
MINUS
GREATER

put_count
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

put_count
GREATER

context
MINUS
GREATER

name_count
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
STRING
STRING
COMMA

__FILE__
COMMA

__LINE__
COMMA

context
MINUS
GREATER

serial
COMMA

context
MINUS
GREATER

major
COMMA

context
MINUS
GREATER

in_syscall
COMMA

name
COMMA

context
MINUS
GREATER

name_count
COMMA

context
MINUS
GREATER

put_count
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ENDIF
CURLY_BRACKET_C

static
TYPE_INT

audit_inc_name_count
BRACKET_O
STRUCT

audit_context
MULT

context
COMMA
CONST
STRUCT

inode
MULT

inode
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

context
MINUS
GREATER

name_count
GR_EQ

AUDIT_NAMES
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

inode
BRACKET_C

printk
BRACKET_O

KERN_DEBUG
STRING
STRING
COMMA

MAJOR
BRACKET_O

inode
MINUS
GREATER

i_sb
MINUS
GREATER

s_dev
BRACKET_C
COMMA

MINOR
BRACKET_O

inode
MINUS
GREATER

i_sb
MINUS
GREATER

s_dev
BRACKET_C
COMMA

inode
MINUS
GREATER

i_ino
BRACKET_C
SEMICOLON
ELSE

printk
BRACKET_O

KERN_DEBUG
STRING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

context
MINUS
GREATER

name_count
PLUS
PLUS
SEMICOLON
PP_IF

AUDIT_DEBUG

context
MINUS
GREATER

ino_count
PLUS
PLUS
SEMICOLON
PP_ENDIF

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

audit_copy_inode
BRACKET_O
STRUCT

audit_names
MULT

name
COMMA
CONST
STRUCT

inode
MULT

inode
BRACKET_C
CURLY_BRACKET_O

name
MINUS
GREATER

ino
OP_ASSIGNMENT

inode
MINUS
GREATER

i_ino
SEMICOLON

name
MINUS
GREATER

dev
OP_ASSIGNMENT

inode
MINUS
GREATER

i_sb
MINUS
GREATER

s_dev
SEMICOLON

name
MINUS
GREATER

mode
OP_ASSIGNMENT

inode
MINUS
GREATER

i_mode
SEMICOLON

name
MINUS
GREATER

uid
OP_ASSIGNMENT

inode
MINUS
GREATER

i_uid
SEMICOLON

name
MINUS
GREATER

gid
OP_ASSIGNMENT

inode
MINUS
GREATER

i_gid
SEMICOLON

name
MINUS
GREATER

rdev
OP_ASSIGNMENT

inode
MINUS
GREATER

i_rdev
SEMICOLON

selinux_get_inode_sid
BRACKET_O

inode
COMMA
AMPERSANT

name
MINUS
GREATER

osid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__audit_inode
BRACKET_O
CONST
TYPE_CHAR
MULT

name
COMMA
CONST
STRUCT

inode
MULT

inode
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

idx
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
IF
BRACKET_O
NOT

context
MINUS
GREATER

in_syscall
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

context
MINUS
GREATER

name_count
AND

context
MINUS
GREATER

names
CORNER_BRACKET_O

context
MINUS
GREATER

name_count
MINUS
NUMBER
CORNER_BRACKET_C
DOT

name
AND

context
MINUS
GREATER

names
CORNER_BRACKET_O

context
MINUS
GREATER

name_count
MINUS
NUMBER
CORNER_BRACKET_C
DOT

name
EQ

name
BRACKET_C

idx
OP_ASSIGNMENT

context
MINUS
GREATER

name_count
MINUS
NUMBER
SEMICOLON
ELSE
IF
BRACKET_O

context
MINUS
GREATER

name_count
GREATER
NUMBER
AND

context
MINUS
GREATER

names
CORNER_BRACKET_O

context
MINUS
GREATER

name_count
MINUS
NUMBER
CORNER_BRACKET_C
DOT

name
AND

context
MINUS
GREATER

names
CORNER_BRACKET_O

context
MINUS
GREATER

name_count
MINUS
NUMBER
CORNER_BRACKET_C
DOT

name
EQ

name
BRACKET_C

idx
OP_ASSIGNMENT

context
MINUS
GREATER

name_count
MINUS
NUMBER
SEMICOLON
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

audit_inc_name_count
BRACKET_O

context
COMMA

inode
BRACKET_C
BRACKET_C

return
SEMICOLON

idx
OP_ASSIGNMENT

context
MINUS
GREATER

name_count
MINUS
NUMBER
SEMICOLON

context
MINUS
GREATER

names
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
DOT

name
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

audit_copy_inode
BRACKET_O
AMPERSANT

context
MINUS
GREATER

names
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
COMMA

inode
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__audit_inode_child
BRACKET_O
CONST
TYPE_CHAR
MULT

dname
COMMA
CONST
STRUCT

inode
MULT

inode
COMMA
CONST
STRUCT

inode
MULT

parent
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

idx
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
CONST
TYPE_CHAR
MULT

found_parent
OP_ASSIGNMENT

NULL
COMMA
MULT

found_child
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_INT

dirlen
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

context
MINUS
GREATER

in_syscall
BRACKET_C

return
SEMICOLON
IF
BRACKET_O
NOT

dname
BRACKET_C

goto

add_names
SEMICOLON
FOR
BRACKET_O

idx
OP_ASSIGNMENT
NUMBER
SEMICOLON

idx
LESS

context
MINUS
GREATER

name_count
SEMICOLON

idx
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_names
MULT

n
OP_ASSIGNMENT
AMPERSANT

context
MINUS
GREATER

names
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

n
MINUS
GREATER

name
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

n
MINUS
GREATER

ino
EQ

parent
MINUS
GREATER

i_ino
AND
NOT

audit_compare_dname_path
BRACKET_O

dname
COMMA

n
MINUS
GREATER

name
COMMA
AMPERSANT

dirlen
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

n
MINUS
GREATER

name_len
OP_ASSIGNMENT

dirlen
SEMICOLON

found_parent
OP_ASSIGNMENT

n
MINUS
GREATER

name
SEMICOLON

goto

add_names
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
FOR
BRACKET_O

idx
OP_ASSIGNMENT
NUMBER
SEMICOLON

idx
LESS

context
MINUS
GREATER

name_count
SEMICOLON

idx
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_names
MULT

n
OP_ASSIGNMENT
AMPERSANT

context
MINUS
GREATER

names
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

n
MINUS
GREATER

name
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O
NOT

strcmp
BRACKET_O

dname
COMMA

n
MINUS
GREATER

name
BRACKET_C
OR
NOT

audit_compare_dname_path
BRACKET_O

dname
COMMA

n
MINUS
GREATER

name
COMMA
AMPERSANT

dirlen
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

inode
BRACKET_C

audit_copy_inode
BRACKET_O

n
COMMA

inode
BRACKET_C
SEMICOLON
ELSE

n
MINUS
GREATER

ino
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS
NUMBER
SEMICOLON

found_child
OP_ASSIGNMENT

n
MINUS
GREATER

name
SEMICOLON

goto

add_names
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

add_names
COLON
IF
BRACKET_O
NOT

found_parent
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

audit_inc_name_count
BRACKET_O

context
COMMA

parent
BRACKET_C
BRACKET_C

return
SEMICOLON

idx
OP_ASSIGNMENT

context
MINUS
GREATER

name_count
MINUS
NUMBER
SEMICOLON

context
MINUS
GREATER

names
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
DOT

name
OP_ASSIGNMENT

NULL
SEMICOLON

audit_copy_inode
BRACKET_O
AMPERSANT

context
MINUS
GREATER

names
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
COMMA

parent
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

found_child
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

audit_inc_name_count
BRACKET_O

context
COMMA

inode
BRACKET_C
BRACKET_C

return
SEMICOLON

idx
OP_ASSIGNMENT

context
MINUS
GREATER

name_count
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

found_parent
BRACKET_C
CURLY_BRACKET_O

context
MINUS
GREATER

names
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
DOT

name
OP_ASSIGNMENT

found_parent
SEMICOLON

context
MINUS
GREATER

names
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
DOT

name_len
OP_ASSIGNMENT

AUDIT_NAME_FULL
SEMICOLON

context
MINUS
GREATER

names
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
DOT

name_put
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

context
MINUS
GREATER

names
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
DOT

name
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

inode
BRACKET_C

audit_copy_inode
BRACKET_O
AMPERSANT

context
MINUS
GREATER

names
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
COMMA

inode
BRACKET_C
SEMICOLON
ELSE

context
MINUS
GREATER

names
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
DOT

ino
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

auditsc_get_stamp
BRACKET_O
STRUCT

audit_context
MULT

ctx
COMMA
STRUCT

timespec
MULT

t
COMMA
TYPE_UNSIGNED
TYPE_INT
MULT

serial
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

ctx
MINUS
GREATER

serial
BRACKET_C

ctx
MINUS
GREATER

serial
OP_ASSIGNMENT

audit_serial
BRACKET_O
BRACKET_C
SEMICOLON

t
MINUS
GREATER

tv_sec
OP_ASSIGNMENT

ctx
MINUS
GREATER

ctime
DOT

tv_sec
SEMICOLON

t
MINUS
GREATER

tv_nsec
OP_ASSIGNMENT

ctx
MINUS
GREATER

ctime
DOT

tv_nsec
SEMICOLON
MULT

serial
OP_ASSIGNMENT

ctx
MINUS
GREATER

serial
SEMICOLON

ctx
MINUS
GREATER

auditable
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_set_loginuid
BRACKET_O
STRUCT

task_struct
MULT

task
COMMA

uid_t

loginuid
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

task
MINUS
GREATER

audit_context
SEMICOLON
IF
BRACKET_O

context
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

context
MINUS
GREATER

in_syscall
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_buffer
MULT

ab
SEMICOLON

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_LOGIN
BRACKET_C
SEMICOLON
IF
BRACKET_O

ab
BRACKET_C
CURLY_BRACKET_O

audit_log_format
BRACKET_O

ab
COMMA
STRING
STRING
COMMA

task
MINUS
GREATER

pid
COMMA

task
MINUS
GREATER

uid
COMMA

context
MINUS
GREATER

loginuid
COMMA

loginuid
BRACKET_C
SEMICOLON

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

context
MINUS
GREATER

loginuid
OP_ASSIGNMENT

loginuid
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

uid_t

audit_get_loginuid
BRACKET_O
STRUCT

audit_context
MULT

ctx
BRACKET_C
CURLY_BRACKET_O

return

ctx
QUESTION_MARK

ctx
MINUS
GREATER

loginuid
COLON
MINUS
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

audit_get_loginuid
BRACKET_C
SEMICOLON
TYPE_INT

__audit_mq_open
BRACKET_O
TYPE_INT

oflag
COMMA

mode_t

mode
COMMA
STRUCT

mq_attr

__user
MULT

u_attr
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_mq_open
MULT

ax
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
IF
BRACKET_O
NOT

audit_enabled
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

context
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

ax
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ax
BRACKET_C
COMMA

GFP_ATOMIC
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ax
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON
IF
BRACKET_O

u_attr
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

ax
MINUS
GREATER

attr
COMMA

u_attr
COMMA

sizeof
BRACKET_O

ax
MINUS
GREATER

attr
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

ax
BRACKET_C
SEMICOLON

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE

memset
BRACKET_O
AMPERSANT

ax
MINUS
GREATER

attr
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

ax
MINUS
GREATER

attr
BRACKET_C
BRACKET_C
SEMICOLON

ax
MINUS
GREATER

oflag
OP_ASSIGNMENT

oflag
SEMICOLON

ax
MINUS
GREATER

mode
OP_ASSIGNMENT

mode
SEMICOLON

ax
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_MQ_OPEN
SEMICOLON

ax
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ax
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__audit_mq_timedsend
BRACKET_O

mqd_t

mqdes
COMMA

size_t

msg_len
COMMA
TYPE_UNSIGNED
TYPE_INT

msg_prio
COMMA
CONST
STRUCT

timespec

__user
MULT

u_abs_timeout
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_mq_sendrecv
MULT

ax
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
IF
BRACKET_O
NOT

audit_enabled
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

context
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

ax
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ax
BRACKET_C
COMMA

GFP_ATOMIC
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ax
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON
IF
BRACKET_O

u_abs_timeout
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

ax
MINUS
GREATER

abs_timeout
COMMA

u_abs_timeout
COMMA

sizeof
BRACKET_O

ax
MINUS
GREATER

abs_timeout
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

ax
BRACKET_C
SEMICOLON

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE

memset
BRACKET_O
AMPERSANT

ax
MINUS
GREATER

abs_timeout
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

ax
MINUS
GREATER

abs_timeout
BRACKET_C
BRACKET_C
SEMICOLON

ax
MINUS
GREATER

mqdes
OP_ASSIGNMENT

mqdes
SEMICOLON

ax
MINUS
GREATER

msg_len
OP_ASSIGNMENT

msg_len
SEMICOLON

ax
MINUS
GREATER

msg_prio
OP_ASSIGNMENT

msg_prio
SEMICOLON

ax
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_MQ_SENDRECV
SEMICOLON

ax
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ax
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__audit_mq_timedreceive
BRACKET_O

mqd_t

mqdes
COMMA

size_t

msg_len
COMMA
TYPE_UNSIGNED
TYPE_INT

__user
MULT

u_msg_prio
COMMA
CONST
STRUCT

timespec

__user
MULT

u_abs_timeout
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_mq_sendrecv
MULT

ax
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
IF
BRACKET_O
NOT

audit_enabled
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

context
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

ax
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ax
BRACKET_C
COMMA

GFP_ATOMIC
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ax
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON
IF
BRACKET_O

u_msg_prio
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

get_user
BRACKET_O

ax
MINUS
GREATER

msg_prio
COMMA

u_msg_prio
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

ax
BRACKET_C
SEMICOLON

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE

ax
MINUS
GREATER

msg_prio
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

u_abs_timeout
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

ax
MINUS
GREATER

abs_timeout
COMMA

u_abs_timeout
COMMA

sizeof
BRACKET_O

ax
MINUS
GREATER

abs_timeout
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

ax
BRACKET_C
SEMICOLON

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE

memset
BRACKET_O
AMPERSANT

ax
MINUS
GREATER

abs_timeout
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

ax
MINUS
GREATER

abs_timeout
BRACKET_C
BRACKET_C
SEMICOLON

ax
MINUS
GREATER

mqdes
OP_ASSIGNMENT

mqdes
SEMICOLON

ax
MINUS
GREATER

msg_len
OP_ASSIGNMENT

msg_len
SEMICOLON

ax
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_MQ_SENDRECV
SEMICOLON

ax
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ax
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__audit_mq_notify
BRACKET_O

mqd_t

mqdes
COMMA
CONST
STRUCT

sigevent

__user
MULT

u_notification
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_mq_notify
MULT

ax
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
IF
BRACKET_O
NOT

audit_enabled
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

context
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

ax
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ax
BRACKET_C
COMMA

GFP_ATOMIC
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ax
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON
IF
BRACKET_O

u_notification
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

ax
MINUS
GREATER

notification
COMMA

u_notification
COMMA

sizeof
BRACKET_O

ax
MINUS
GREATER

notification
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

ax
BRACKET_C
SEMICOLON

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE

memset
BRACKET_O
AMPERSANT

ax
MINUS
GREATER

notification
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

ax
MINUS
GREATER

notification
BRACKET_C
BRACKET_C
SEMICOLON

ax
MINUS
GREATER

mqdes
OP_ASSIGNMENT

mqdes
SEMICOLON

ax
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_MQ_NOTIFY
SEMICOLON

ax
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ax
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__audit_mq_getsetattr
BRACKET_O

mqd_t

mqdes
COMMA
STRUCT

mq_attr
MULT

mqstat
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_mq_getsetattr
MULT

ax
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
IF
BRACKET_O
NOT

audit_enabled
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

context
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

ax
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ax
BRACKET_C
COMMA

GFP_ATOMIC
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ax
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

ax
MINUS
GREATER

mqdes
OP_ASSIGNMENT

mqdes
SEMICOLON

ax
MINUS
GREATER

mqstat
OP_ASSIGNMENT
MULT

mqstat
SEMICOLON

ax
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_MQ_GETSETATTR
SEMICOLON

ax
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ax
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__audit_ipc_obj
BRACKET_O
STRUCT

kern_ipc_perm
MULT

ipcp
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_ipcctl
MULT

ax
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON

ax
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ax
BRACKET_C
COMMA

GFP_ATOMIC
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ax
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

ax
MINUS
GREATER

uid
OP_ASSIGNMENT

ipcp
MINUS
GREATER

uid
SEMICOLON

ax
MINUS
GREATER

gid
OP_ASSIGNMENT

ipcp
MINUS
GREATER

gid
SEMICOLON

ax
MINUS
GREATER

mode
OP_ASSIGNMENT

ipcp
MINUS
GREATER

mode
SEMICOLON

selinux_get_ipc_sid
BRACKET_O

ipcp
COMMA
AMPERSANT

ax
MINUS
GREATER

osid
BRACKET_C
SEMICOLON

ax
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_IPC
SEMICOLON

ax
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ax
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__audit_ipc_set_perm
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

qbytes
COMMA

uid_t

uid
COMMA

gid_t

gid
COMMA

mode_t

mode
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_ipcctl
MULT

ax
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON

ax
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ax
BRACKET_C
COMMA

GFP_ATOMIC
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ax
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

ax
MINUS
GREATER

qbytes
OP_ASSIGNMENT

qbytes
SEMICOLON

ax
MINUS
GREATER

uid
OP_ASSIGNMENT

uid
SEMICOLON

ax
MINUS
GREATER

gid
OP_ASSIGNMENT

gid
SEMICOLON

ax
MINUS
GREATER

mode
OP_ASSIGNMENT

mode
SEMICOLON

ax
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_IPC_SET_PERM
SEMICOLON

ax
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ax
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_bprm
BRACKET_O
STRUCT

linux_binprm
MULT

bprm
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_execve
MULT

ax
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

p
COMMA

next
SEMICOLON

void
MULT

to
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

audit_enabled
OR
NOT

context
OR

context
MINUS
GREATER

dummy
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

ax
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ax
BRACKET_C
PLUS

PAGE_SIZE
MULT

MAX_ARG_PAGES
MINUS

bprm
MINUS
GREATER

p
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ax
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

ax
MINUS
GREATER

argc
OP_ASSIGNMENT

bprm
MINUS
GREATER

argc
SEMICOLON

ax
MINUS
GREATER

envc
OP_ASSIGNMENT

bprm
MINUS
GREATER

envc
SEMICOLON
FOR
BRACKET_O

p
OP_ASSIGNMENT

bprm
MINUS
GREATER

p
COMMA

to
OP_ASSIGNMENT

ax
MINUS
GREATER

mem
SEMICOLON

p
LESS

MAX_ARG_PAGES
MULT

PAGE_SIZE
SEMICOLON

p
OP_ASSIGNMENT

next
BRACKET_C
CURLY_BRACKET_O
STRUCT

page
MULT

page
OP_ASSIGNMENT

bprm
MINUS
GREATER

page
CORNER_BRACKET_O

p
DIV

PAGE_SIZE
CORNER_BRACKET_C
SEMICOLON

void
MULT

kaddr
OP_ASSIGNMENT

kmap
BRACKET_O

page
BRACKET_C
SEMICOLON

next
OP_ASSIGNMENT
BRACKET_O

p
PLUS

PAGE_SIZE
BRACKET_C
AMPERSANT
TILDE
BRACKET_O

PAGE_SIZE
MINUS
NUMBER
BRACKET_C
SEMICOLON

memcpy
BRACKET_O

to
COMMA

kaddr
PLUS
BRACKET_O

p
AMPERSANT
BRACKET_O

PAGE_SIZE
MINUS
NUMBER
BRACKET_C
BRACKET_C
COMMA

next
MINUS

p
BRACKET_C
SEMICOLON

to
ASSIGN_PLUS

next
MINUS

p
SEMICOLON

kunmap
BRACKET_O

page
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

ax
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_EXECVE
SEMICOLON

ax
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ax
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_socketcall
BRACKET_O
TYPE_INT

nargs
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

args
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_socketcall
MULT

ax
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

context
OR

context
MINUS
GREATER

dummy
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

ax
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ax
BRACKET_C
PLUS

nargs
MULT

sizeof
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ax
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

ax
MINUS
GREATER

nargs
OP_ASSIGNMENT

nargs
SEMICOLON

memcpy
BRACKET_O

ax
MINUS
GREATER

args
COMMA

args
COMMA

nargs
MULT

sizeof
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
BRACKET_C
SEMICOLON

ax
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_SOCKETCALL
SEMICOLON

ax
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ax
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__audit_fd_pair
BRACKET_O
TYPE_INT

fd1
COMMA
TYPE_INT

fd2
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
STRUCT

audit_aux_data_fd_pair
MULT

ax
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

context
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

ax
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ax
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ax
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

ax
MINUS
GREATER

fd
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

fd1
SEMICOLON

ax
MINUS
GREATER

fd
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

fd2
SEMICOLON

ax
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_FD_PAIR
SEMICOLON

ax
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ax
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_sockaddr
BRACKET_O
TYPE_INT

len
COMMA

void
MULT

a
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_sockaddr
MULT

ax
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

context
OR

context
MINUS
GREATER

dummy
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

ax
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ax
BRACKET_C
PLUS

len
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ax
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

ax
MINUS
GREATER

len
OP_ASSIGNMENT

len
SEMICOLON

memcpy
BRACKET_O

ax
MINUS
GREATER

a
COMMA

a
COMMA

len
BRACKET_C
SEMICOLON

ax
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_SOCKADDR
SEMICOLON

ax
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ax
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

__audit_ptrace
BRACKET_O
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON

context
MINUS
GREATER

target_pid
OP_ASSIGNMENT

t
MINUS
GREATER

pid
SEMICOLON

selinux_get_task_sid
BRACKET_O

t
COMMA
AMPERSANT

context
MINUS
GREATER

target_sid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

audit_avc_path
BRACKET_O
STRUCT

dentry
MULT

dentry
COMMA
STRUCT

vfsmount
MULT

mnt
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_path
MULT

ax
SEMICOLON
STRUCT

audit_context
MULT

context
OP_ASSIGNMENT

current
MINUS
GREATER

audit_context
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

context
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

ax
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ax
BRACKET_C
COMMA

GFP_ATOMIC
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ax
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

ax
MINUS
GREATER

dentry
OP_ASSIGNMENT

dget
BRACKET_O

dentry
BRACKET_C
SEMICOLON

ax
MINUS
GREATER

mnt
OP_ASSIGNMENT

mntget
BRACKET_O

mnt
BRACKET_C
SEMICOLON

ax
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_AVC_PATH
SEMICOLON

ax
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

context
MINUS
GREATER

aux
SEMICOLON

context
MINUS
GREATER

aux
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ax
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__audit_signal_info
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_aux_data_pids
MULT

axp
SEMICOLON
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

audit_context
MULT

ctx
OP_ASSIGNMENT

tsk
MINUS
GREATER

audit_context
SEMICOLON

extern

pid_t

audit_sig_pid
SEMICOLON

extern

uid_t

audit_sig_uid
SEMICOLON

extern

u32

audit_sig_sid
SEMICOLON
IF
BRACKET_O

audit_pid
AND

t
MINUS
GREATER

tgid
EQ

audit_pid
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sig
EQ

SIGTERM
OR

sig
EQ

SIGHUP
OR

sig
EQ

SIGUSR1
BRACKET_C
CURLY_BRACKET_O

audit_sig_pid
OP_ASSIGNMENT

tsk
MINUS
GREATER

pid
SEMICOLON
IF
BRACKET_O

ctx
BRACKET_C

audit_sig_uid
OP_ASSIGNMENT

ctx
MINUS
GREATER

loginuid
SEMICOLON
ELSE

audit_sig_uid
OP_ASSIGNMENT

tsk
MINUS
GREATER

uid
SEMICOLON

selinux_get_task_sid
BRACKET_O

tsk
COMMA
AMPERSANT

audit_sig_sid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

audit_signals
OR

audit_dummy_context
BRACKET_O
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

ctx
MINUS
GREATER

target_pid
BRACKET_C
CURLY_BRACKET_O

ctx
MINUS
GREATER

target_pid
OP_ASSIGNMENT

t
MINUS
GREATER

tgid
SEMICOLON

selinux_get_task_sid
BRACKET_O

t
COMMA
AMPERSANT

ctx
MINUS
GREATER

target_sid
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

axp
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

ctx
MINUS
GREATER

aux_pids
SEMICOLON
IF
BRACKET_O
NOT

axp
OR

axp
MINUS
GREATER

pid_count
EQ

AUDIT_AUX_PIDS
BRACKET_C
CURLY_BRACKET_O

axp
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
MULT

axp
BRACKET_C
COMMA

GFP_ATOMIC
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

axp
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

axp
MINUS
GREATER

d
DOT

type
OP_ASSIGNMENT

AUDIT_OBJ_PID
SEMICOLON

axp
MINUS
GREATER

d
DOT

next
OP_ASSIGNMENT

ctx
MINUS
GREATER

aux_pids
SEMICOLON

ctx
MINUS
GREATER

aux_pids
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

axp
SEMICOLON
CURLY_BRACKET_C

BUG_ON
BRACKET_O

axp
MINUS
GREATER

pid_count
GREATER

AUDIT_AUX_PIDS
BRACKET_C
SEMICOLON

axp
MINUS
GREATER

target_pid
CORNER_BRACKET_O

axp
MINUS
GREATER

pid_count
CORNER_BRACKET_C
OP_ASSIGNMENT

t
MINUS
GREATER

tgid
SEMICOLON

selinux_get_task_sid
BRACKET_O

t
COMMA
AMPERSANT

axp
MINUS
GREATER

target_sid
CORNER_BRACKET_O

axp
MINUS
GREATER

pid_count
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

axp
MINUS
GREATER

pid_count
PLUS
PLUS
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

audit_core_dumps
BRACKET_O
TYPE_LONG

signr
BRACKET_C
CURLY_BRACKET_O
STRUCT

audit_buffer
MULT

ab
SEMICOLON

u32

sid
SEMICOLON
IF
BRACKET_O
NOT

audit_enabled
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

signr
EQ

SIGQUIT
BRACKET_C

return
SEMICOLON

ab
OP_ASSIGNMENT

audit_log_start
BRACKET_O

NULL
COMMA

GFP_KERNEL
COMMA

AUDIT_ANOM_ABEND
BRACKET_C
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

audit_get_loginuid
BRACKET_O

current
MINUS
GREATER

audit_context
BRACKET_C
COMMA

current
MINUS
GREATER

uid
COMMA

current
MINUS
GREATER

gid
BRACKET_C
SEMICOLON

selinux_get_task_sid
BRACKET_O

current
COMMA
AMPERSANT

sid
BRACKET_C
SEMICOLON
IF
BRACKET_O

sid
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

ctx
OP_ASSIGNMENT

NULL
SEMICOLON

u32

len
SEMICOLON
IF
BRACKET_O

selinux_sid_to_string
BRACKET_O

sid
COMMA
AMPERSANT

ctx
COMMA
AMPERSANT

len
BRACKET_C
BRACKET_C

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

sid
BRACKET_C
SEMICOLON
ELSE

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

ctx
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

current
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

audit_log_untrustedstring
BRACKET_O

ab
COMMA

current
MINUS
GREATER

comm
BRACKET_C
SEMICOLON

audit_log_format
BRACKET_O

ab
COMMA
STRING
COMMA

signr
BRACKET_C
SEMICOLON

audit_log_end
BRACKET_O

ab
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
TYPE_UNSIGNED

securebits
OP_ASSIGNMENT

SECUREBITS_DEFAULT
SEMICOLON

kernel_cap_t

cap_bset
OP_ASSIGNMENT

CAP_INIT_EFF_SET
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

securebits
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

cap_bset
BRACKET_C
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

task_capability_lock
BRACKET_C
SEMICOLON

asmlinkage
TYPE_LONG

sys_capget
BRACKET_O

cap_user_header_t

header
COMMA

cap_user_data_t

dataptr
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

pid_t

pid
SEMICOLON

__u32

version
SEMICOLON
STRUCT

task_struct
MULT

target
SEMICOLON
STRUCT

__user_cap_data_struct

data
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

version
COMMA
AMPERSANT

header
MINUS
GREATER

version
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

version
NOT_EQ

_LINUX_CAPABILITY_VERSION
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

put_user
BRACKET_O

_LINUX_CAPABILITY_VERSION
COMMA
AMPERSANT

header
MINUS
GREATER

version
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

get_user
BRACKET_O

pid
COMMA
AMPERSANT

header
MINUS
GREATER

pid
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

pid
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

task_capability_lock
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

pid
AND

pid
NOT_EQ

current
MINUS
GREATER

pid
BRACKET_C
CURLY_BRACKET_O

target
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

target
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE

target
OP_ASSIGNMENT

current
SEMICOLON

ret
OP_ASSIGNMENT

security_capget
BRACKET_O

target
COMMA
AMPERSANT

data
DOT

effective
COMMA
AMPERSANT

data
DOT

inheritable
COMMA
AMPERSANT

data
DOT

permitted
BRACKET_C
SEMICOLON

out
COLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

task_capability_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
AND

copy_to_user
BRACKET_O

dataptr
COMMA
AMPERSANT

data
COMMA

sizeof

data
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

cap_set_pg
BRACKET_O
TYPE_INT

pgrp_nr
COMMA

kernel_cap_t
MULT

effective
COMMA

kernel_cap_t
MULT

inheritable
COMMA

kernel_cap_t
MULT

permitted
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

g
COMMA
MULT

target
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
TYPE_INT

found
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

pid
MULT

pgrp
SEMICOLON

pgrp
OP_ASSIGNMENT

find_pid
BRACKET_O

pgrp_nr
BRACKET_C
SEMICOLON

do_each_pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
COMMA

g
BRACKET_C
CURLY_BRACKET_O

target
OP_ASSIGNMENT

g
SEMICOLON

while_each_thread
BRACKET_O

g
COMMA

target
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

security_capset_check
BRACKET_O

target
COMMA

effective
COMMA

inheritable
COMMA

permitted
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

security_capset_set
BRACKET_O

target
COMMA

effective
COMMA

inheritable
COMMA

permitted
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

found
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

while_each_pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
COMMA

g
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

found
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

cap_set_all
BRACKET_O

kernel_cap_t
MULT

effective
COMMA

kernel_cap_t
MULT

inheritable
COMMA

kernel_cap_t
MULT

permitted
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

g
COMMA
MULT

target
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
TYPE_INT

found
OP_ASSIGNMENT
NUMBER
SEMICOLON

do_each_thread
BRACKET_O

g
COMMA

target
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

target
EQ

current
OR

is_init
BRACKET_O

target
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

found
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

security_capset_check
BRACKET_O

target
COMMA

effective
COMMA

inheritable
COMMA

permitted
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

security_capset_set
BRACKET_O

target
COMMA

effective
COMMA

inheritable
COMMA

permitted
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

while_each_thread
BRACKET_O

g
COMMA

target
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

found
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_capset
BRACKET_O

cap_user_header_t

header
COMMA
CONST

cap_user_data_t

data
BRACKET_C
CURLY_BRACKET_O

kernel_cap_t

inheritable
COMMA

permitted
COMMA

effective
SEMICOLON

__u32

version
SEMICOLON
STRUCT

task_struct
MULT

target
SEMICOLON
TYPE_INT

ret
SEMICOLON

pid_t

pid
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

version
COMMA
AMPERSANT

header
MINUS
GREATER

version
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

version
NOT_EQ

_LINUX_CAPABILITY_VERSION
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

put_user
BRACKET_O

_LINUX_CAPABILITY_VERSION
COMMA
AMPERSANT

header
MINUS
GREATER

version
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

get_user
BRACKET_O

pid
COMMA
AMPERSANT

header
MINUS
GREATER

pid
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

pid
AND

pid
NOT_EQ

current
MINUS
GREATER

pid
AND
NOT

capable
BRACKET_O

CAP_SETPCAP
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

effective
COMMA
AMPERSANT

data
MINUS
GREATER

effective
COMMA

sizeof
BRACKET_O

effective
BRACKET_C
BRACKET_C
OR

copy_from_user
BRACKET_O
AMPERSANT

inheritable
COMMA
AMPERSANT

data
MINUS
GREATER

inheritable
COMMA

sizeof
BRACKET_O

inheritable
BRACKET_C
BRACKET_C
OR

copy_from_user
BRACKET_O
AMPERSANT

permitted
COMMA
AMPERSANT

data
MINUS
GREATER

permitted
COMMA

sizeof
BRACKET_O

permitted
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

task_capability_lock
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

pid
GREATER
NUMBER
AND

pid
NOT_EQ

current
MINUS
GREATER

pid
BRACKET_C
CURLY_BRACKET_O

target
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

target
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE

target
OP_ASSIGNMENT

current
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

pid
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

pid
EQ
MINUS
NUMBER
BRACKET_C

ret
OP_ASSIGNMENT

cap_set_all
BRACKET_O
AMPERSANT

effective
COMMA
AMPERSANT

inheritable
COMMA
AMPERSANT

permitted
BRACKET_C
SEMICOLON
ELSE

ret
OP_ASSIGNMENT

cap_set_pg
BRACKET_O
MINUS

pid
COMMA
AMPERSANT

effective
COMMA
AMPERSANT

inheritable
COMMA
AMPERSANT

permitted
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

security_capset_check
BRACKET_O

target
COMMA
AMPERSANT

effective
COMMA
AMPERSANT

inheritable
COMMA
AMPERSANT

permitted
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C

security_capset_set
BRACKET_O

target
COMMA
AMPERSANT

effective
COMMA
AMPERSANT

inheritable
COMMA
AMPERSANT

permitted
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

out
COLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

task_capability_lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__capable
BRACKET_O
STRUCT

task_struct
MULT

t
COMMA
TYPE_INT

cap
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

security_capable
BRACKET_O

t
COMMA

cap
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

t
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_SUPERPRIV
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__capable
BRACKET_C
SEMICOLON
TYPE_INT

capable
BRACKET_O
TYPE_INT

cap
BRACKET_C
CURLY_BRACKET_O

return

__capable
BRACKET_O

current
COMMA

cap
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

capable
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
TYPE_INT

get_compat_timespec
BRACKET_O
STRUCT

timespec
MULT

ts
COMMA
CONST
STRUCT

compat_timespec

__user
MULT

cts
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_READ
COMMA

cts
COMMA

sizeof
BRACKET_O
MULT

cts
BRACKET_C
BRACKET_C
OR

__get_user
BRACKET_O

ts
MINUS
GREATER

tv_sec
COMMA
AMPERSANT

cts
MINUS
GREATER

tv_sec
BRACKET_C
OR

__get_user
BRACKET_O

ts
MINUS
GREATER

tv_nsec
COMMA
AMPERSANT

cts
MINUS
GREATER

tv_nsec
BRACKET_C
BRACKET_C
QUESTION_MARK
MINUS

EFAULT
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

put_compat_timespec
BRACKET_O
CONST
STRUCT

timespec
MULT

ts
COMMA
STRUCT

compat_timespec

__user
MULT

cts
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_WRITE
COMMA

cts
COMMA

sizeof
BRACKET_O
MULT

cts
BRACKET_C
BRACKET_C
OR

__put_user
BRACKET_O

ts
MINUS
GREATER

tv_sec
COMMA
AMPERSANT

cts
MINUS
GREATER

tv_sec
BRACKET_C
OR

__put_user
BRACKET_O

ts
MINUS
GREATER

tv_nsec
COMMA
AMPERSANT

cts
MINUS
GREATER

tv_nsec
BRACKET_C
BRACKET_C
QUESTION_MARK
MINUS

EFAULT
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_LONG

compat_nanosleep_restart
BRACKET_O
STRUCT

restart_block
MULT

restart
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

expire
OP_ASSIGNMENT

restart
MINUS
GREATER

arg0
COMMA

now
OP_ASSIGNMENT

jiffies
SEMICOLON
STRUCT

compat_timespec

__user
MULT

rmtp
SEMICOLON
IF
BRACKET_O
NOT

time_after
BRACKET_O

expire
COMMA

now
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

expire
OP_ASSIGNMENT

schedule_timeout_interruptible
BRACKET_O

expire
MINUS

now
BRACKET_C
SEMICOLON
IF
BRACKET_O

expire
EQ
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON

rmtp
OP_ASSIGNMENT
BRACKET_O
STRUCT

compat_timespec

__user
MULT
BRACKET_C

restart
MINUS
GREATER

arg1
SEMICOLON
IF
BRACKET_O

rmtp
BRACKET_C
CURLY_BRACKET_O
STRUCT

compat_timespec

ct
SEMICOLON
STRUCT

timespec

t
SEMICOLON

jiffies_to_timespec
BRACKET_O

expire
COMMA
AMPERSANT

t
BRACKET_C
SEMICOLON

ct
DOT

tv_sec
OP_ASSIGNMENT

t
DOT

tv_sec
SEMICOLON

ct
DOT

tv_nsec
OP_ASSIGNMENT

t
DOT

tv_nsec
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

rmtp
COMMA
AMPERSANT

ct
COMMA

sizeof
BRACKET_O

ct
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return
MINUS

ERESTART_RESTARTBLOCK
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_nanosleep
BRACKET_O
STRUCT

compat_timespec

__user
MULT

rqtp
COMMA
STRUCT

compat_timespec

__user
MULT

rmtp
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

t
SEMICOLON
STRUCT

restart_block
MULT

restart
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

expire
SEMICOLON
IF
BRACKET_O

get_compat_timespec
BRACKET_O
AMPERSANT

t
COMMA

rqtp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
BRACKET_O

t
DOT

tv_nsec
GR_EQ
NUMBER

L
BRACKET_C
OR
BRACKET_O

t
DOT

tv_nsec
LESS
NUMBER
BRACKET_C
OR
BRACKET_O

t
DOT

tv_sec
LESS
NUMBER
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

expire
OP_ASSIGNMENT

timespec_to_jiffies
BRACKET_O
AMPERSANT

t
BRACKET_C
PLUS
BRACKET_O

t
DOT

tv_sec
OR

t
DOT

tv_nsec
BRACKET_C
SEMICOLON

expire
OP_ASSIGNMENT

schedule_timeout_interruptible
BRACKET_O

expire
BRACKET_C
SEMICOLON
IF
BRACKET_O

expire
EQ
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

rmtp
BRACKET_C
CURLY_BRACKET_O

jiffies_to_timespec
BRACKET_O

expire
COMMA
AMPERSANT

t
BRACKET_C
SEMICOLON
IF
BRACKET_O

put_compat_timespec
BRACKET_O
AMPERSANT

t
COMMA

rmtp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

restart
OP_ASSIGNMENT
AMPERSANT

current_thread_info
BRACKET_O
BRACKET_C
MINUS
GREATER

restart_block
SEMICOLON

restart
MINUS
GREATER

fn
OP_ASSIGNMENT

compat_nanosleep_restart
SEMICOLON

restart
MINUS
GREATER

arg0
OP_ASSIGNMENT

jiffies
PLUS

expire
SEMICOLON

restart
MINUS
GREATER

arg1
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

rmtp
SEMICOLON

return
MINUS

ERESTART_RESTARTBLOCK
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_LONG

get_compat_itimerval
BRACKET_O
STRUCT

itimerval
MULT

o
COMMA
STRUCT

compat_itimerval

__user
MULT

i
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_READ
COMMA

i
COMMA

sizeof
BRACKET_O
MULT

i
BRACKET_C
BRACKET_C
OR
BRACKET_O

__get_user
BRACKET_O

o
MINUS
GREATER

it_interval
DOT

tv_sec
COMMA
AMPERSANT

i
MINUS
GREATER

it_interval
DOT

tv_sec
BRACKET_C
LOGICAL_OR

__get_user
BRACKET_O

o
MINUS
GREATER

it_interval
DOT

tv_usec
COMMA
AMPERSANT

i
MINUS
GREATER

it_interval
DOT

tv_usec
BRACKET_C
LOGICAL_OR

__get_user
BRACKET_O

o
MINUS
GREATER

it_value
DOT

tv_sec
COMMA
AMPERSANT

i
MINUS
GREATER

it_value
DOT

tv_sec
BRACKET_C
LOGICAL_OR

__get_user
BRACKET_O

o
MINUS
GREATER

it_value
DOT

tv_usec
COMMA
AMPERSANT

i
MINUS
GREATER

it_value
DOT

tv_usec
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_LONG

put_compat_itimerval
BRACKET_O
STRUCT

compat_itimerval

__user
MULT

o
COMMA
STRUCT

itimerval
MULT

i
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_WRITE
COMMA

o
COMMA

sizeof
BRACKET_O
MULT

o
BRACKET_C
BRACKET_C
OR
BRACKET_O

__put_user
BRACKET_O

i
MINUS
GREATER

it_interval
DOT

tv_sec
COMMA
AMPERSANT

o
MINUS
GREATER

it_interval
DOT

tv_sec
BRACKET_C
LOGICAL_OR

__put_user
BRACKET_O

i
MINUS
GREATER

it_interval
DOT

tv_usec
COMMA
AMPERSANT

o
MINUS
GREATER

it_interval
DOT

tv_usec
BRACKET_C
LOGICAL_OR

__put_user
BRACKET_O

i
MINUS
GREATER

it_value
DOT

tv_sec
COMMA
AMPERSANT

o
MINUS
GREATER

it_value
DOT

tv_sec
BRACKET_C
LOGICAL_OR

__put_user
BRACKET_O

i
MINUS
GREATER

it_value
DOT

tv_usec
COMMA
AMPERSANT

o
MINUS
GREATER

it_value
DOT

tv_usec
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_getitimer
BRACKET_O
TYPE_INT

which
COMMA
STRUCT

compat_itimerval

__user
MULT

it
BRACKET_C
CURLY_BRACKET_O
STRUCT

itimerval

kit
SEMICOLON
TYPE_INT

error
SEMICOLON

error
OP_ASSIGNMENT

do_getitimer
BRACKET_O

which
COMMA
AMPERSANT

kit
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
AND

put_compat_itimerval
BRACKET_O

it
COMMA
AMPERSANT

kit
BRACKET_C
BRACKET_C

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_setitimer
BRACKET_O
TYPE_INT

which
COMMA
STRUCT

compat_itimerval

__user
MULT

in
COMMA
STRUCT

compat_itimerval

__user
MULT

out
BRACKET_C
CURLY_BRACKET_O
STRUCT

itimerval

kin
COMMA

kout
SEMICOLON
TYPE_INT

error
SEMICOLON
IF
BRACKET_O

in
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

get_compat_itimerval
BRACKET_O
AMPERSANT

kin
COMMA

in
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
ELSE

memset
BRACKET_O
AMPERSANT

kin
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

kin
BRACKET_C
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

do_setitimer
BRACKET_O

which
COMMA
AMPERSANT

kin
COMMA

out
QUESTION_MARK
AMPERSANT

kout
COLON

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
OR
NOT

out
BRACKET_C

return

error
SEMICOLON
IF
BRACKET_O

put_compat_itimerval
BRACKET_O

out
COMMA
AMPERSANT

kout
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_times
BRACKET_O
STRUCT

compat_tms

__user
MULT

tbuf
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

tbuf
BRACKET_C
CURLY_BRACKET_O
STRUCT

compat_tms

tmp
SEMICOLON
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

task_struct
MULT

t
SEMICOLON

cputime_t

utime
COMMA

stime
COMMA

cutime
COMMA

cstime
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

utime
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

utime
SEMICOLON

stime
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

stime
SEMICOLON

t
OP_ASSIGNMENT

tsk
SEMICOLON
DO
CURLY_BRACKET_O

utime
OP_ASSIGNMENT

cputime_add
BRACKET_O

utime
COMMA

t
MINUS
GREATER

utime
BRACKET_C
SEMICOLON

stime
OP_ASSIGNMENT

cputime_add
BRACKET_O

stime
COMMA

t
MINUS
GREATER

stime
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

tsk
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

cutime
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

cutime
SEMICOLON

cstime
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

cstime
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

tmp
DOT

tms_utime
OP_ASSIGNMENT

compat_jiffies_to_clock_t
BRACKET_O

cputime_to_jiffies
BRACKET_O

utime
BRACKET_C
BRACKET_C
SEMICOLON

tmp
DOT

tms_stime
OP_ASSIGNMENT

compat_jiffies_to_clock_t
BRACKET_O

cputime_to_jiffies
BRACKET_O

stime
BRACKET_C
BRACKET_C
SEMICOLON

tmp
DOT

tms_cutime
OP_ASSIGNMENT

compat_jiffies_to_clock_t
BRACKET_O

cputime_to_jiffies
BRACKET_O

cutime
BRACKET_C
BRACKET_C
SEMICOLON

tmp
DOT

tms_cstime
OP_ASSIGNMENT

compat_jiffies_to_clock_t
BRACKET_O

cputime_to_jiffies
BRACKET_O

cstime
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

tbuf
COMMA
AMPERSANT

tmp
COMMA

sizeof
BRACKET_O

tmp
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

compat_jiffies_to_clock_t
BRACKET_O

jiffies
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_sigpending
BRACKET_O

compat_old_sigset_t

__user
MULT

set
BRACKET_C
CURLY_BRACKET_O

old_sigset_t

s
SEMICOLON
TYPE_LONG

ret
SEMICOLON

mm_segment_t

old_fs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

sys_sigpending
BRACKET_O
BRACKET_O

old_sigset_t

__user
MULT
BRACKET_C
AMPERSANT

s
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

old_fs
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
NUMBER
BRACKET_C

ret
OP_ASSIGNMENT

put_user
BRACKET_O

s
COMMA

set
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_sigprocmask
BRACKET_O
TYPE_INT

how
COMMA

compat_old_sigset_t

__user
MULT

set
COMMA

compat_old_sigset_t

__user
MULT

oset
BRACKET_C
CURLY_BRACKET_O

old_sigset_t

s
SEMICOLON
TYPE_LONG

ret
SEMICOLON

mm_segment_t

old_fs
SEMICOLON
IF
BRACKET_O

set
AND

get_user
BRACKET_O

s
COMMA

set
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

old_fs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

sys_sigprocmask
BRACKET_O

how
COMMA

set
QUESTION_MARK
BRACKET_O

old_sigset_t

__user
MULT
BRACKET_C
AMPERSANT

s
COLON

NULL
COMMA

oset
QUESTION_MARK
BRACKET_O

old_sigset_t

__user
MULT
BRACKET_C
AMPERSANT

s
COLON

NULL
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

old_fs
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
NUMBER
BRACKET_C
IF
BRACKET_O

oset
BRACKET_C

ret
OP_ASSIGNMENT

put_user
BRACKET_O

s
COMMA

oset
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_setrlimit
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

resource
COMMA
STRUCT

compat_rlimit

__user
MULT

rlim
BRACKET_C
CURLY_BRACKET_O
STRUCT

rlimit

r
SEMICOLON
TYPE_INT

ret
SEMICOLON

mm_segment_t

old_fs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

resource
GR_EQ

RLIM_NLIMITS
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_READ
COMMA

rlim
COMMA

sizeof
BRACKET_O
MULT

rlim
BRACKET_C
BRACKET_C
OR

__get_user
BRACKET_O

r
DOT

rlim_cur
COMMA
AMPERSANT

rlim
MINUS
GREATER

rlim_cur
BRACKET_C
OR

__get_user
BRACKET_O

r
DOT

rlim_max
COMMA
AMPERSANT

rlim
MINUS
GREATER

rlim_max
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

r
DOT

rlim_cur
EQ

COMPAT_RLIM_INFINITY
BRACKET_C

r
DOT

rlim_cur
OP_ASSIGNMENT

RLIM_INFINITY
SEMICOLON
IF
BRACKET_O

r
DOT

rlim_max
EQ

COMPAT_RLIM_INFINITY
BRACKET_C

r
DOT

rlim_max
OP_ASSIGNMENT

RLIM_INFINITY
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

sys_setrlimit
BRACKET_O

resource
COMMA
BRACKET_O
STRUCT

rlimit

__user
MULT
BRACKET_C
AMPERSANT

r
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

old_fs
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

COMPAT_RLIM_OLD_INFINITY

asmlinkage
TYPE_LONG

compat_sys_old_getrlimit
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

resource
COMMA
STRUCT

compat_rlimit

__user
MULT

rlim
BRACKET_C
CURLY_BRACKET_O
STRUCT

rlimit

r
SEMICOLON
TYPE_INT

ret
SEMICOLON

mm_segment_t

old_fs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

sys_old_getrlimit
BRACKET_O

resource
COMMA
AMPERSANT

r
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

old_fs
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

r
DOT

rlim_cur
GREATER

COMPAT_RLIM_OLD_INFINITY
BRACKET_C

r
DOT

rlim_cur
OP_ASSIGNMENT

COMPAT_RLIM_INFINITY
SEMICOLON
IF
BRACKET_O

r
DOT

rlim_max
GREATER

COMPAT_RLIM_OLD_INFINITY
BRACKET_C

r
DOT

rlim_max
OP_ASSIGNMENT

COMPAT_RLIM_INFINITY
SEMICOLON
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_WRITE
COMMA

rlim
COMMA

sizeof
BRACKET_O
MULT

rlim
BRACKET_C
BRACKET_C
OR

__put_user
BRACKET_O

r
DOT

rlim_cur
COMMA
AMPERSANT

rlim
MINUS
GREATER

rlim_cur
BRACKET_C
OR

__put_user
BRACKET_O

r
DOT

rlim_max
COMMA
AMPERSANT

rlim
MINUS
GREATER

rlim_max
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

asmlinkage
TYPE_LONG

compat_sys_getrlimit
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

resource
COMMA
STRUCT

compat_rlimit

__user
MULT

rlim
BRACKET_C
CURLY_BRACKET_O
STRUCT

rlimit

r
SEMICOLON
TYPE_INT

ret
SEMICOLON

mm_segment_t

old_fs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

sys_getrlimit
BRACKET_O

resource
COMMA
BRACKET_O
STRUCT

rlimit

__user
MULT
BRACKET_C
AMPERSANT

r
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

old_fs
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

r
DOT

rlim_cur
GREATER

COMPAT_RLIM_INFINITY
BRACKET_C

r
DOT

rlim_cur
OP_ASSIGNMENT

COMPAT_RLIM_INFINITY
SEMICOLON
IF
BRACKET_O

r
DOT

rlim_max
GREATER

COMPAT_RLIM_INFINITY
BRACKET_C

r
DOT

rlim_max
OP_ASSIGNMENT

COMPAT_RLIM_INFINITY
SEMICOLON
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_WRITE
COMMA

rlim
COMMA

sizeof
BRACKET_O
MULT

rlim
BRACKET_C
BRACKET_C
OR

__put_user
BRACKET_O

r
DOT

rlim_cur
COMMA
AMPERSANT

rlim
MINUS
GREATER

rlim_cur
BRACKET_C
OR

__put_user
BRACKET_O

r
DOT

rlim_max
COMMA
AMPERSANT

rlim
MINUS
GREATER

rlim_max
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

put_compat_rusage
BRACKET_O
CONST
STRUCT

rusage
MULT

r
COMMA
STRUCT

compat_rusage

__user
MULT

ru
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_WRITE
COMMA

ru
COMMA

sizeof
BRACKET_O
MULT

ru
BRACKET_C
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_utime
DOT

tv_sec
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_utime
DOT

tv_sec
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_utime
DOT

tv_usec
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_utime
DOT

tv_usec
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_stime
DOT

tv_sec
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_stime
DOT

tv_sec
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_stime
DOT

tv_usec
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_stime
DOT

tv_usec
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_maxrss
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_maxrss
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_ixrss
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_ixrss
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_idrss
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_idrss
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_isrss
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_isrss
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_minflt
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_minflt
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_majflt
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_majflt
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_nswap
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_nswap
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_inblock
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_inblock
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_oublock
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_oublock
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_msgsnd
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_msgsnd
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_msgrcv
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_msgrcv
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_nsignals
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_nsignals
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_nvcsw
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_nvcsw
BRACKET_C
OR

__put_user
BRACKET_O

r
MINUS
GREATER

ru_nivcsw
COMMA
AMPERSANT

ru
MINUS
GREATER

ru_nivcsw
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_getrusage
BRACKET_O
TYPE_INT

who
COMMA
STRUCT

compat_rusage

__user
MULT

ru
BRACKET_C
CURLY_BRACKET_O
STRUCT

rusage

r
SEMICOLON
TYPE_INT

ret
SEMICOLON

mm_segment_t

old_fs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

sys_getrusage
BRACKET_O

who
COMMA
BRACKET_O
STRUCT

rusage

__user
MULT
BRACKET_C
AMPERSANT

r
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

old_fs
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

return

ret
SEMICOLON
IF
BRACKET_O

put_compat_rusage
BRACKET_O
AMPERSANT

r
COMMA

ru
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_wait4
BRACKET_O

compat_pid_t

pid
COMMA

compat_uint_t

__user
MULT

stat_addr
COMMA
TYPE_INT

options
COMMA
STRUCT

compat_rusage

__user
MULT

ru
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

ru
BRACKET_C
CURLY_BRACKET_O

return

sys_wait4
BRACKET_O

pid
COMMA

stat_addr
COMMA

options
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
STRUCT

rusage

r
SEMICOLON
TYPE_INT

ret
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

status
SEMICOLON

mm_segment_t

old_fs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

sys_wait4
BRACKET_O

pid
COMMA
BRACKET_O

stat_addr
QUESTION_MARK
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

__user
MULT
BRACKET_C
AMPERSANT

status
COLON

NULL
BRACKET_C
COMMA

options
COMMA
BRACKET_O
STRUCT

rusage

__user
MULT
BRACKET_C
AMPERSANT

r
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

old_fs
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

put_compat_rusage
BRACKET_O
AMPERSANT

r
COMMA

ru
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

stat_addr
AND

put_user
BRACKET_O

status
COMMA

stat_addr
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_waitid
BRACKET_O
TYPE_INT

which
COMMA

compat_pid_t

pid
COMMA
STRUCT

compat_siginfo

__user
MULT

uinfo
COMMA
TYPE_INT

options
COMMA
STRUCT

compat_rusage

__user
MULT

uru
BRACKET_C
CURLY_BRACKET_O

siginfo_t

info
SEMICOLON
STRUCT

rusage

ru
SEMICOLON
TYPE_LONG

ret
SEMICOLON

mm_segment_t

old_fs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

memset
BRACKET_O
AMPERSANT

info
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

info
BRACKET_C
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

sys_waitid
BRACKET_O

which
COMMA

pid
COMMA
BRACKET_O

siginfo_t

__user
MULT
BRACKET_C
AMPERSANT

info
COMMA

options
COMMA

uru
QUESTION_MARK
BRACKET_O
STRUCT

rusage

__user
MULT
BRACKET_C
AMPERSANT

ru
COLON

NULL
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

old_fs
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

ret
LESS
NUMBER
BRACKET_C
OR
BRACKET_O

info
DOT

si_signo
EQ
NUMBER
BRACKET_C
BRACKET_C

return

ret
SEMICOLON
IF
BRACKET_O

uru
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

put_compat_rusage
BRACKET_O
AMPERSANT

ru
COMMA

uru
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

BUG_ON
BRACKET_O

info
DOT

si_code
AMPERSANT

__SI_MASK
BRACKET_C
SEMICOLON

info
DOT

si_code
LOGICAL_OR
OP_ASSIGNMENT

__SI_CHLD
SEMICOLON

return

copy_siginfo_to_user32
BRACKET_O

uinfo
COMMA
AMPERSANT

info
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

compat_get_user_cpu_mask
BRACKET_O

compat_ulong_t

__user
MULT

user_mask_ptr
COMMA
TYPE_UNSIGNED

len
COMMA

cpumask_t
MULT

new_mask
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
MULT

k
SEMICOLON
IF
BRACKET_O

len
LESS

sizeof
BRACKET_O

cpumask_t
BRACKET_C
BRACKET_C

memset
BRACKET_O

new_mask
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

cpumask_t
BRACKET_C
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O

len
GREATER

sizeof
BRACKET_O

cpumask_t
BRACKET_C
BRACKET_C

len
OP_ASSIGNMENT

sizeof
BRACKET_O

cpumask_t
BRACKET_C
SEMICOLON

k
OP_ASSIGNMENT

cpus_addr
BRACKET_O
MULT

new_mask
BRACKET_C
SEMICOLON

return

compat_get_bitmap
BRACKET_O

k
COMMA

user_mask_ptr
COMMA

len
MULT
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_sched_setaffinity
BRACKET_O

compat_pid_t

pid
COMMA
TYPE_UNSIGNED
TYPE_INT

len
COMMA

compat_ulong_t

__user
MULT

user_mask_ptr
BRACKET_C
CURLY_BRACKET_O

cpumask_t

new_mask
SEMICOLON
TYPE_INT

retval
SEMICOLON

retval
OP_ASSIGNMENT

compat_get_user_cpu_mask
BRACKET_O

user_mask_ptr
COMMA

len
COMMA
AMPERSANT

new_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON

return

sched_setaffinity
BRACKET_O

pid
COMMA

new_mask
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_sched_getaffinity
BRACKET_O

compat_pid_t

pid
COMMA
TYPE_UNSIGNED
TYPE_INT

len
COMMA

compat_ulong_t

__user
MULT

user_mask_ptr
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

cpumask_t

mask
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG
MULT

k
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

min_length
OP_ASSIGNMENT

sizeof
BRACKET_O

cpumask_t
BRACKET_C
SEMICOLON
IF
BRACKET_O

NR_CPUS
LE_EQ

BITS_PER_COMPAT_LONG
BRACKET_C

min_length
OP_ASSIGNMENT

sizeof
BRACKET_O

compat_ulong_t
BRACKET_C
SEMICOLON
IF
BRACKET_O

len
LESS

min_length
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

ret
OP_ASSIGNMENT

sched_getaffinity
BRACKET_O

pid
COMMA
AMPERSANT

mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
LESS
NUMBER
BRACKET_C

return

ret
SEMICOLON

k
OP_ASSIGNMENT

cpus_addr
BRACKET_O

mask
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

compat_put_bitmap
BRACKET_O

user_mask_ptr
COMMA

k
COMMA

min_length
MULT
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

return

ret
SEMICOLON

return

min_length
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

get_compat_itimerspec
BRACKET_O
STRUCT

itimerspec
MULT

dst
COMMA
CONST
STRUCT

compat_itimerspec

__user
MULT

src
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

get_compat_timespec
BRACKET_O
AMPERSANT

dst
MINUS
GREATER

it_interval
COMMA
AMPERSANT

src
MINUS
GREATER

it_interval
BRACKET_C
OR

get_compat_timespec
BRACKET_O
AMPERSANT

dst
MINUS
GREATER

it_value
COMMA
AMPERSANT

src
MINUS
GREATER

it_value
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

put_compat_itimerspec
BRACKET_O
STRUCT

compat_itimerspec

__user
MULT

dst
COMMA
CONST
STRUCT

itimerspec
MULT

src
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

put_compat_timespec
BRACKET_O
AMPERSANT

src
MINUS
GREATER

it_interval
COMMA
AMPERSANT

dst
MINUS
GREATER

it_interval
BRACKET_C
OR

put_compat_timespec
BRACKET_O
AMPERSANT

src
MINUS
GREATER

it_value
COMMA
AMPERSANT

dst
MINUS
GREATER

it_value
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

compat_sys_timer_create
BRACKET_O

clockid_t

which_clock
COMMA
STRUCT

compat_sigevent

__user
MULT

timer_event_spec
COMMA

timer_t

__user
MULT

created_timer_id
BRACKET_C
CURLY_BRACKET_O
STRUCT

sigevent

__user
MULT

event
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

timer_event_spec
BRACKET_C
CURLY_BRACKET_O
STRUCT

sigevent

kevent
SEMICOLON

event
OP_ASSIGNMENT

compat_alloc_user_space
BRACKET_O

sizeof
BRACKET_O
MULT

event
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

get_compat_sigevent
BRACKET_O
AMPERSANT

kevent
COMMA

timer_event_spec
BRACKET_C
OR

copy_to_user
BRACKET_O

event
COMMA
AMPERSANT

kevent
COMMA

sizeof
BRACKET_O
MULT

event
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

sys_timer_create
BRACKET_O

which_clock
COMMA

event
COMMA

created_timer_id
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

compat_sys_timer_settime
BRACKET_O

timer_t

timer_id
COMMA
TYPE_INT

flags
COMMA
STRUCT

compat_itimerspec

__user
MULT

new
COMMA
STRUCT

compat_itimerspec

__user
MULT

old
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

err
SEMICOLON

mm_segment_t

oldfs
SEMICOLON
STRUCT

itimerspec

newts
COMMA

oldts
SEMICOLON
IF
BRACKET_O
NOT

new
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

get_compat_itimerspec
BRACKET_O
AMPERSANT

newts
COMMA

new
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

oldfs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

sys_timer_settime
BRACKET_O

timer_id
COMMA

flags
COMMA
BRACKET_O
STRUCT

itimerspec

__user
MULT
BRACKET_C
AMPERSANT

newts
COMMA
BRACKET_O
STRUCT

itimerspec

__user
MULT
BRACKET_C
AMPERSANT

oldts
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

oldfs
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

err
AND

old
AND

put_compat_itimerspec
BRACKET_O

old
COMMA
AMPERSANT

oldts
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

compat_sys_timer_gettime
BRACKET_O

timer_t

timer_id
COMMA
STRUCT

compat_itimerspec

__user
MULT

setting
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

err
SEMICOLON

mm_segment_t

oldfs
SEMICOLON
STRUCT

itimerspec

ts
SEMICOLON

oldfs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

sys_timer_gettime
BRACKET_O

timer_id
COMMA
BRACKET_O
STRUCT

itimerspec

__user
MULT
BRACKET_C
AMPERSANT

ts
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

oldfs
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

err
AND

put_compat_itimerspec
BRACKET_O

setting
COMMA
AMPERSANT

ts
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

compat_sys_clock_settime
BRACKET_O

clockid_t

which_clock
COMMA
STRUCT

compat_timespec

__user
MULT

tp
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

err
SEMICOLON

mm_segment_t

oldfs
SEMICOLON
STRUCT

timespec

ts
SEMICOLON
IF
BRACKET_O

get_compat_timespec
BRACKET_O
AMPERSANT

ts
COMMA

tp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

oldfs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

sys_clock_settime
BRACKET_O

which_clock
COMMA
BRACKET_O
STRUCT

timespec

__user
MULT
BRACKET_C
AMPERSANT

ts
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

oldfs
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

compat_sys_clock_gettime
BRACKET_O

clockid_t

which_clock
COMMA
STRUCT

compat_timespec

__user
MULT

tp
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

err
SEMICOLON

mm_segment_t

oldfs
SEMICOLON
STRUCT

timespec

ts
SEMICOLON

oldfs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

sys_clock_gettime
BRACKET_O

which_clock
COMMA
BRACKET_O
STRUCT

timespec

__user
MULT
BRACKET_C
AMPERSANT

ts
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

oldfs
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

err
AND

put_compat_timespec
BRACKET_O
AMPERSANT

ts
COMMA

tp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

compat_sys_clock_getres
BRACKET_O

clockid_t

which_clock
COMMA
STRUCT

compat_timespec

__user
MULT

tp
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

err
SEMICOLON

mm_segment_t

oldfs
SEMICOLON
STRUCT

timespec

ts
SEMICOLON

oldfs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

sys_clock_getres
BRACKET_O

which_clock
COMMA
BRACKET_O
STRUCT

timespec

__user
MULT
BRACKET_C
AMPERSANT

ts
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

oldfs
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

err
AND

tp
AND

put_compat_timespec
BRACKET_O
AMPERSANT

ts
COMMA

tp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C

static
TYPE_LONG

compat_clock_nanosleep_restart
BRACKET_O
STRUCT

restart_block
MULT

restart
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

err
SEMICOLON

mm_segment_t

oldfs
SEMICOLON
STRUCT

timespec

tu
SEMICOLON
STRUCT

compat_timespec
MULT

rmtp
OP_ASSIGNMENT
BRACKET_O
STRUCT

compat_timespec
MULT
BRACKET_C
BRACKET_O

restart
MINUS
GREATER

arg1
BRACKET_C
SEMICOLON

restart
MINUS
GREATER

arg1
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
AMPERSANT

tu
SEMICOLON

oldfs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

clock_nanosleep_restart
BRACKET_O

restart
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

oldfs
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
EQ
MINUS

ERESTART_RESTARTBLOCK
BRACKET_C
AND

rmtp
AND

put_compat_timespec
BRACKET_O
AMPERSANT

tu
COMMA

rmtp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

err
EQ
MINUS

ERESTART_RESTARTBLOCK
BRACKET_C
CURLY_BRACKET_O

restart
MINUS
GREATER

fn
OP_ASSIGNMENT

compat_clock_nanosleep_restart
SEMICOLON

restart
MINUS
GREATER

arg1
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

rmtp
SEMICOLON
CURLY_BRACKET_C

return

err
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

compat_sys_clock_nanosleep
BRACKET_O

clockid_t

which_clock
COMMA
TYPE_INT

flags
COMMA
STRUCT

compat_timespec

__user
MULT

rqtp
COMMA
STRUCT

compat_timespec

__user
MULT

rmtp
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

err
SEMICOLON

mm_segment_t

oldfs
SEMICOLON
STRUCT

timespec

in
COMMA

out
SEMICOLON
STRUCT

restart_block
MULT

restart
SEMICOLON
IF
BRACKET_O

get_compat_timespec
BRACKET_O
AMPERSANT

in
COMMA

rqtp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

oldfs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

sys_clock_nanosleep
BRACKET_O

which_clock
COMMA

flags
COMMA
BRACKET_O
STRUCT

timespec

__user
MULT
BRACKET_C
AMPERSANT

in
COMMA
BRACKET_O
STRUCT

timespec

__user
MULT
BRACKET_C
AMPERSANT

out
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

oldfs
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
EQ
MINUS

ERESTART_RESTARTBLOCK
BRACKET_C
AND

rmtp
AND

put_compat_timespec
BRACKET_O
AMPERSANT

out
COMMA

rmtp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

err
EQ
MINUS

ERESTART_RESTARTBLOCK
BRACKET_C
CURLY_BRACKET_O

restart
OP_ASSIGNMENT
AMPERSANT

current_thread_info
BRACKET_O
BRACKET_C
MINUS
GREATER

restart_block
SEMICOLON

restart
MINUS
GREATER

fn
OP_ASSIGNMENT

compat_clock_nanosleep_restart
SEMICOLON

restart
MINUS
GREATER

arg1
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

rmtp
SEMICOLON
CURLY_BRACKET_C

return

err
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

get_compat_sigevent
BRACKET_O
STRUCT

sigevent
MULT

event
COMMA
CONST
STRUCT

compat_sigevent

__user
MULT

u_event
BRACKET_C
CURLY_BRACKET_O

memset
BRACKET_O

event
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
MULT

event
BRACKET_C
BRACKET_C
SEMICOLON

return
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_READ
COMMA

u_event
COMMA

sizeof
BRACKET_O
MULT

u_event
BRACKET_C
BRACKET_C
OR

__get_user
BRACKET_O

event
MINUS
GREATER

sigev_value
DOT

sival_int
COMMA
AMPERSANT

u_event
MINUS
GREATER

sigev_value
DOT

sival_int
BRACKET_C
OR

__get_user
BRACKET_O

event
MINUS
GREATER

sigev_signo
COMMA
AMPERSANT

u_event
MINUS
GREATER

sigev_signo
BRACKET_C
OR

__get_user
BRACKET_O

event
MINUS
GREATER

sigev_notify
COMMA
AMPERSANT

u_event
MINUS
GREATER

sigev_notify
BRACKET_C
OR

__get_user
BRACKET_O

event
MINUS
GREATER

sigev_notify_thread_id
COMMA
AMPERSANT

u_event
MINUS
GREATER

sigev_notify_thread_id
BRACKET_C
BRACKET_C
QUESTION_MARK
MINUS

EFAULT
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

compat_get_bitmap
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
MULT

mask
COMMA
CONST

compat_ulong_t

__user
MULT

umask
COMMA
TYPE_UNSIGNED
TYPE_LONG

bitmap_size
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

j
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

m
SEMICOLON

compat_ulong_t

um
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

nr_compat_longs
SEMICOLON

bitmap_size
OP_ASSIGNMENT

ALIGN
BRACKET_O

bitmap_size
COMMA

BITS_PER_COMPAT_LONG
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_READ
COMMA

umask
COMMA

bitmap_size
DIV
NUMBER
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

nr_compat_longs
OP_ASSIGNMENT

BITS_TO_COMPAT_LONGS
BRACKET_O

bitmap_size
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

BITS_TO_LONGS
BRACKET_O

bitmap_size
BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

m
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

sizeof
BRACKET_O

m
BRACKET_C
DIV

sizeof
BRACKET_O

um
BRACKET_C
SEMICOLON

j
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

nr_compat_longs
MINUS
MINUS
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

__get_user
BRACKET_O

um
COMMA

umask
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

um
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

umask
PLUS
PLUS
SEMICOLON

m
LOGICAL_OR
OP_ASSIGNMENT
BRACKET_O
TYPE_LONG
BRACKET_C

um
LESS
LESS
BRACKET_O

j
MULT

BITS_PER_COMPAT_LONG
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
MULT

mask
PLUS
PLUS
OP_ASSIGNMENT

m
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

compat_put_bitmap
BRACKET_O

compat_ulong_t

__user
MULT

umask
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

mask
COMMA
TYPE_UNSIGNED
TYPE_LONG

bitmap_size
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

j
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

m
SEMICOLON

compat_ulong_t

um
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

nr_compat_longs
SEMICOLON

bitmap_size
OP_ASSIGNMENT

ALIGN
BRACKET_O

bitmap_size
COMMA

BITS_PER_COMPAT_LONG
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_WRITE
COMMA

umask
COMMA

bitmap_size
DIV
NUMBER
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

nr_compat_longs
OP_ASSIGNMENT

BITS_TO_COMPAT_LONGS
BRACKET_O

bitmap_size
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

BITS_TO_LONGS
BRACKET_O

bitmap_size
BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

m
OP_ASSIGNMENT
MULT

mask
PLUS
PLUS
SEMICOLON
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

sizeof
BRACKET_O

m
BRACKET_C
DIV

sizeof
BRACKET_O

um
BRACKET_C
SEMICOLON

j
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

um
OP_ASSIGNMENT

m
SEMICOLON
IF
BRACKET_O

nr_compat_longs
MINUS
MINUS
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

__put_user
BRACKET_O

um
COMMA

umask
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

umask
PLUS
PLUS
SEMICOLON

m
GREATER
GR_EQ
NUMBER
MULT

sizeof
BRACKET_O

um
BRACKET_C
SEMICOLON

m
GREATER
GR_EQ
NUMBER
MULT

sizeof
BRACKET_O

um
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

sigset_from_compat
BRACKET_O

sigset_t
MULT

set
COMMA

compat_sigset_t
MULT

compat
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

_NSIG_WORDS
BRACKET_C
CURLY_BRACKET_O

case
NUMBER
COLON

set
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

compat
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
LOGICAL_OR
BRACKET_O
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C

compat
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
LESS
LESS
NUMBER
BRACKET_C
SEMICOLON

case
NUMBER
COLON

set
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

compat
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
LOGICAL_OR
BRACKET_O
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C

compat
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
LESS
LESS
NUMBER
BRACKET_C
SEMICOLON

case
NUMBER
COLON

set
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

compat
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
LOGICAL_OR
BRACKET_O
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C

compat
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
LESS
LESS
NUMBER
BRACKET_C
SEMICOLON

case
NUMBER
COLON

set
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

compat
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
LOGICAL_OR
BRACKET_O
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C

compat
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
LESS
LESS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_rt_sigtimedwait
BRACKET_O

compat_sigset_t

__user
MULT

uthese
COMMA
STRUCT

compat_siginfo

__user
MULT

uinfo
COMMA
STRUCT

compat_timespec

__user
MULT

uts
COMMA

compat_size_t

sigsetsize
BRACKET_C
CURLY_BRACKET_O

compat_sigset_t

s32
SEMICOLON

sigset_t

s
SEMICOLON
TYPE_INT

sig
SEMICOLON
STRUCT

timespec

t
SEMICOLON

siginfo_t

info
SEMICOLON
TYPE_LONG

ret
COMMA

timeout
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

sigsetsize
NOT_EQ

sizeof
BRACKET_O

sigset_t
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

s32
COMMA

uthese
COMMA

sizeof
BRACKET_O

compat_sigset_t
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

sigset_from_compat
BRACKET_O
AMPERSANT

s
COMMA
AMPERSANT

s32
BRACKET_C
SEMICOLON

sigdelsetmask
BRACKET_O
AMPERSANT

s
COMMA

sigmask
BRACKET_O

SIGKILL
BRACKET_C
LOGICAL_OR

sigmask
BRACKET_O

SIGSTOP
BRACKET_C
BRACKET_C
SEMICOLON

signotset
BRACKET_O
AMPERSANT

s
BRACKET_C
SEMICOLON
IF
BRACKET_O

uts
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

get_compat_timespec
BRACKET_O
AMPERSANT

t
COMMA

uts
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

t
DOT

tv_nsec
GR_EQ
NUMBER

L
OR

t
DOT

tv_nsec
LESS
NUMBER
OR

t
DOT

tv_sec
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

sig
OP_ASSIGNMENT

dequeue_signal
BRACKET_O

current
COMMA
AMPERSANT

s
COMMA
AMPERSANT

info
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sig
BRACKET_C
CURLY_BRACKET_O

timeout
OP_ASSIGNMENT

MAX_SCHEDULE_TIMEOUT
SEMICOLON
IF
BRACKET_O

uts
BRACKET_C

timeout
OP_ASSIGNMENT

timespec_to_jiffies
BRACKET_O
AMPERSANT

t
BRACKET_C
PLUS
BRACKET_O

t
DOT

tv_sec
OR

t
DOT

tv_nsec
BRACKET_C
SEMICOLON
IF
BRACKET_O

timeout
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

real_blocked
OP_ASSIGNMENT

current
MINUS
GREATER

blocked
SEMICOLON

sigandsets
BRACKET_O
AMPERSANT

current
MINUS
GREATER

blocked
COMMA
AMPERSANT

current
MINUS
GREATER

blocked
COMMA
AMPERSANT

s
BRACKET_C
SEMICOLON

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

timeout
OP_ASSIGNMENT

schedule_timeout_interruptible
BRACKET_O

timeout
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

sig
OP_ASSIGNMENT

dequeue_signal
BRACKET_O

current
COMMA
AMPERSANT

s
COMMA
AMPERSANT

info
BRACKET_C
SEMICOLON

current
MINUS
GREATER

blocked
OP_ASSIGNMENT

current
MINUS
GREATER

real_blocked
SEMICOLON

siginitset
BRACKET_O
AMPERSANT

current
MINUS
GREATER

real_blocked
COMMA
NUMBER
BRACKET_C
SEMICOLON

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

sig
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

sig
SEMICOLON
IF
BRACKET_O

uinfo
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_siginfo_to_user32
BRACKET_O

uinfo
COMMA
AMPERSANT

info
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

timeout
QUESTION_MARK
MINUS

EINTR
COLON
MINUS

EAGAIN
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

__ARCH_WANT_COMPAT_SYS_TIME

asmlinkage
TYPE_LONG

compat_sys_time
BRACKET_O

compat_time_t

__user
MULT

tloc
BRACKET_C
CURLY_BRACKET_O

compat_time_t

i
SEMICOLON
STRUCT

timeval

tv
SEMICOLON

do_gettimeofday
BRACKET_O
AMPERSANT

tv
BRACKET_C
SEMICOLON

i
OP_ASSIGNMENT

tv
DOT

tv_sec
SEMICOLON
IF
BRACKET_O

tloc
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

put_user
BRACKET_O

i
COMMA

tloc
BRACKET_C
BRACKET_C

i
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

i
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_stime
BRACKET_O

compat_time_t

__user
MULT

tptr
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

tv
SEMICOLON
TYPE_INT

err
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

tv
DOT

tv_sec
COMMA

tptr
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

tv
DOT

tv_nsec
OP_ASSIGNMENT
NUMBER
SEMICOLON

err
OP_ASSIGNMENT

security_settime
BRACKET_O
AMPERSANT

tv
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

return

err
SEMICOLON

do_settimeofday
BRACKET_O
AMPERSANT

tv
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

__ARCH_WANT_COMPAT_SYS_RT_SIGSUSPEND

asmlinkage
TYPE_LONG

compat_sys_rt_sigsuspend
BRACKET_O

compat_sigset_t

__user
MULT

unewset
COMMA

compat_size_t

sigsetsize
BRACKET_C
CURLY_BRACKET_O

sigset_t

newset
SEMICOLON

compat_sigset_t

newset32
SEMICOLON
IF
BRACKET_O

sigsetsize
NOT_EQ

sizeof
BRACKET_O

sigset_t
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

newset32
COMMA

unewset
COMMA

sizeof
BRACKET_O

compat_sigset_t
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

sigset_from_compat
BRACKET_O
AMPERSANT

newset
COMMA
AMPERSANT

newset32
BRACKET_C
SEMICOLON

sigdelsetmask
BRACKET_O
AMPERSANT

newset
COMMA

sigmask
BRACKET_O

SIGKILL
BRACKET_C
LOGICAL_OR

sigmask
BRACKET_O

SIGSTOP
BRACKET_C
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

current
MINUS
GREATER

saved_sigmask
OP_ASSIGNMENT

current
MINUS
GREATER

blocked
SEMICOLON

current
MINUS
GREATER

blocked
OP_ASSIGNMENT

newset
SEMICOLON

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

current
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_INTERRUPTIBLE
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

set_thread_flag
BRACKET_O

TIF_RESTORE_SIGMASK
BRACKET_C
SEMICOLON

return
MINUS

ERESTARTNOHAND
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

asmlinkage
TYPE_LONG

compat_sys_adjtimex
BRACKET_O
STRUCT

compat_timex

__user
MULT

utp
BRACKET_C
CURLY_BRACKET_O
STRUCT

timex

txc
SEMICOLON
TYPE_INT

ret
SEMICOLON

memset
BRACKET_O
AMPERSANT

txc
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
STRUCT

timex
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_READ
COMMA

utp
COMMA

sizeof
BRACKET_O
STRUCT

compat_timex
BRACKET_C
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

modes
COMMA
AMPERSANT

utp
MINUS
GREATER

modes
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

offset
COMMA
AMPERSANT

utp
MINUS
GREATER

offset
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

freq
COMMA
AMPERSANT

utp
MINUS
GREATER

freq
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

maxerror
COMMA
AMPERSANT

utp
MINUS
GREATER

maxerror
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

esterror
COMMA
AMPERSANT

utp
MINUS
GREATER

esterror
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

status
COMMA
AMPERSANT

utp
MINUS
GREATER

status
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

constant
COMMA
AMPERSANT

utp
MINUS
GREATER

constant
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

precision
COMMA
AMPERSANT

utp
MINUS
GREATER

precision
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

tolerance
COMMA
AMPERSANT

utp
MINUS
GREATER

tolerance
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

time
DOT

tv_sec
COMMA
AMPERSANT

utp
MINUS
GREATER

time
DOT

tv_sec
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

time
DOT

tv_usec
COMMA
AMPERSANT

utp
MINUS
GREATER

time
DOT

tv_usec
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

tick
COMMA
AMPERSANT

utp
MINUS
GREATER

tick
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

ppsfreq
COMMA
AMPERSANT

utp
MINUS
GREATER

ppsfreq
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

jitter
COMMA
AMPERSANT

utp
MINUS
GREATER

jitter
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

shift
COMMA
AMPERSANT

utp
MINUS
GREATER

shift
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

stabil
COMMA
AMPERSANT

utp
MINUS
GREATER

stabil
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

jitcnt
COMMA
AMPERSANT

utp
MINUS
GREATER

jitcnt
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

calcnt
COMMA
AMPERSANT

utp
MINUS
GREATER

calcnt
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

errcnt
COMMA
AMPERSANT

utp
MINUS
GREATER

errcnt
BRACKET_C
OR

__get_user
BRACKET_O

txc
DOT

stbcnt
COMMA
AMPERSANT

utp
MINUS
GREATER

stbcnt
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

ret
OP_ASSIGNMENT

do_adjtimex
BRACKET_O
AMPERSANT

txc
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_WRITE
COMMA

utp
COMMA

sizeof
BRACKET_O
STRUCT

compat_timex
BRACKET_C
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

modes
COMMA
AMPERSANT

utp
MINUS
GREATER

modes
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

offset
COMMA
AMPERSANT

utp
MINUS
GREATER

offset
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

freq
COMMA
AMPERSANT

utp
MINUS
GREATER

freq
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

maxerror
COMMA
AMPERSANT

utp
MINUS
GREATER

maxerror
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

esterror
COMMA
AMPERSANT

utp
MINUS
GREATER

esterror
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

status
COMMA
AMPERSANT

utp
MINUS
GREATER

status
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

constant
COMMA
AMPERSANT

utp
MINUS
GREATER

constant
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

precision
COMMA
AMPERSANT

utp
MINUS
GREATER

precision
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

tolerance
COMMA
AMPERSANT

utp
MINUS
GREATER

tolerance
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

time
DOT

tv_sec
COMMA
AMPERSANT

utp
MINUS
GREATER

time
DOT

tv_sec
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

time
DOT

tv_usec
COMMA
AMPERSANT

utp
MINUS
GREATER

time
DOT

tv_usec
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

tick
COMMA
AMPERSANT

utp
MINUS
GREATER

tick
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

ppsfreq
COMMA
AMPERSANT

utp
MINUS
GREATER

ppsfreq
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

jitter
COMMA
AMPERSANT

utp
MINUS
GREATER

jitter
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

shift
COMMA
AMPERSANT

utp
MINUS
GREATER

shift
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

stabil
COMMA
AMPERSANT

utp
MINUS
GREATER

stabil
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

jitcnt
COMMA
AMPERSANT

utp
MINUS
GREATER

jitcnt
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

calcnt
COMMA
AMPERSANT

utp
MINUS
GREATER

calcnt
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

errcnt
COMMA
AMPERSANT

utp
MINUS
GREATER

errcnt
BRACKET_C
OR

__put_user
BRACKET_O

txc
DOT

stbcnt
COMMA
AMPERSANT

utp
MINUS
GREATER

stbcnt
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_NUMA

asmlinkage
TYPE_LONG

compat_sys_move_pages
BRACKET_O

pid_t

pid
COMMA
TYPE_UNSIGNED
TYPE_LONG

nr_pages
COMMA

compat_uptr_t

__user
MULT

pages32
COMMA
CONST
TYPE_INT

__user
MULT

nodes
COMMA
TYPE_INT

__user
MULT

status
COMMA
TYPE_INT

flags
BRACKET_C
CURLY_BRACKET_O
CONST

void

__user
MULT

__user
MULT

pages
SEMICOLON
TYPE_INT

i
SEMICOLON

pages
OP_ASSIGNMENT

compat_alloc_user_space
BRACKET_O

nr_pages
MULT

sizeof
BRACKET_O

void
MULT
BRACKET_C
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nr_pages
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

compat_uptr_t

p
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

p
COMMA

pages32
PLUS

i
BRACKET_C
OR

put_user
BRACKET_O

compat_ptr
BRACKET_O

p
BRACKET_C
COMMA

pages
PLUS

i
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

sys_move_pages
BRACKET_O

pid
COMMA

nr_pages
COMMA

pages
COMMA

nodes
COMMA

status
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_migrate_pages
BRACKET_O

compat_pid_t

pid
COMMA

compat_ulong_t

maxnode
COMMA
CONST

compat_ulong_t

__user
MULT

old_nodes
COMMA
CONST

compat_ulong_t

__user
MULT

new_nodes
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

__user
MULT

old
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

__user
MULT

new
OP_ASSIGNMENT

NULL
SEMICOLON

nodemask_t

tmp_mask
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

nr_bits
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

size
SEMICOLON

nr_bits
OP_ASSIGNMENT

min_t
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
COMMA

maxnode
MINUS
NUMBER
COMMA

MAX_NUMNODES
BRACKET_C
SEMICOLON

size
OP_ASSIGNMENT

ALIGN
BRACKET_O

nr_bits
COMMA

BITS_PER_LONG
BRACKET_C
DIV
NUMBER
SEMICOLON
IF
BRACKET_O

old_nodes
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

compat_get_bitmap
BRACKET_O

nodes_addr
BRACKET_O

tmp_mask
BRACKET_C
COMMA

old_nodes
COMMA

nr_bits
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

old
OP_ASSIGNMENT

compat_alloc_user_space
BRACKET_O

new_nodes
QUESTION_MARK

size
MULT
NUMBER
COLON

size
BRACKET_C
SEMICOLON
IF
BRACKET_O

new_nodes
BRACKET_C

new
OP_ASSIGNMENT

old
PLUS

size
DIV

sizeof
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

old
COMMA

nodes_addr
BRACKET_O

tmp_mask
BRACKET_C
COMMA

size
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

new_nodes
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

compat_get_bitmap
BRACKET_O

nodes_addr
BRACKET_O

tmp_mask
BRACKET_C
COMMA

new_nodes
COMMA

nr_bits
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

new
EQ

NULL
BRACKET_C

new
OP_ASSIGNMENT

compat_alloc_user_space
BRACKET_O

size
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

new
COMMA

nodes_addr
BRACKET_O

tmp_mask
BRACKET_C
COMMA

size
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

sys_migrate_pages
BRACKET_O

pid
COMMA

nr_bits
PLUS
NUMBER
COMMA

old
COMMA

new
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
STRUCT

compat_sysinfo
CURLY_BRACKET_O

s32

uptime
SEMICOLON

u32

loads
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

u32

totalram
SEMICOLON

u32

freeram
SEMICOLON

u32

sharedram
SEMICOLON

u32

bufferram
SEMICOLON

u32

totalswap
SEMICOLON

u32

freeswap
SEMICOLON

u16

procs
SEMICOLON

u16

pad
SEMICOLON

u32

totalhigh
SEMICOLON

u32

freehigh
SEMICOLON

u32

mem_unit
SEMICOLON
TYPE_CHAR

_f
CORNER_BRACKET_O
NUMBER
MINUS
NUMBER
MULT

sizeof
BRACKET_O

u32
BRACKET_C
MINUS

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

asmlinkage
TYPE_LONG

compat_sys_sysinfo
BRACKET_O
STRUCT

compat_sysinfo

__user
MULT

info
BRACKET_C
CURLY_BRACKET_O
STRUCT

sysinfo

s
SEMICOLON

do_sysinfo
BRACKET_O
AMPERSANT

s
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

s
DOT

totalram
GREATER
GREATER
NUMBER
BRACKET_C
OR
BRACKET_O

s
DOT

totalswap
GREATER
GREATER
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

bitcount
OP_ASSIGNMENT
NUMBER
SEMICOLON
WHILE
BRACKET_O

s
DOT

mem_unit
LESS

PAGE_SIZE
BRACKET_C
CURLY_BRACKET_O

s
DOT

mem_unit
LESS
LE_EQ
NUMBER
SEMICOLON

bitcount
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

s
DOT

totalram
GREATER
GR_EQ

bitcount
SEMICOLON

s
DOT

freeram
GREATER
GR_EQ

bitcount
SEMICOLON

s
DOT

sharedram
GREATER
GR_EQ

bitcount
SEMICOLON

s
DOT

bufferram
GREATER
GR_EQ

bitcount
SEMICOLON

s
DOT

totalswap
GREATER
GR_EQ

bitcount
SEMICOLON

s
DOT

freeswap
GREATER
GR_EQ

bitcount
SEMICOLON

s
DOT

totalhigh
GREATER
GR_EQ

bitcount
SEMICOLON

s
DOT

freehigh
GREATER
GR_EQ

bitcount
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_WRITE
COMMA

info
COMMA

sizeof
BRACKET_O
STRUCT

compat_sysinfo
BRACKET_C
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

uptime
COMMA
AMPERSANT

info
MINUS
GREATER

uptime
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

loads
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA
AMPERSANT

info
MINUS
GREATER

loads
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

loads
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA
AMPERSANT

info
MINUS
GREATER

loads
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

loads
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA
AMPERSANT

info
MINUS
GREATER

loads
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

totalram
COMMA
AMPERSANT

info
MINUS
GREATER

totalram
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

freeram
COMMA
AMPERSANT

info
MINUS
GREATER

freeram
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

sharedram
COMMA
AMPERSANT

info
MINUS
GREATER

sharedram
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

bufferram
COMMA
AMPERSANT

info
MINUS
GREATER

bufferram
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

totalswap
COMMA
AMPERSANT

info
MINUS
GREATER

totalswap
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

freeswap
COMMA
AMPERSANT

info
MINUS
GREATER

freeswap
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

procs
COMMA
AMPERSANT

info
MINUS
GREATER

procs
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

totalhigh
COMMA
AMPERSANT

info
MINUS
GREATER

totalhigh
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

freehigh
COMMA
AMPERSANT

info
MINUS
GREATER

freehigh
BRACKET_C
OR

__put_user
BRACKET_O

s
DOT

mem_unit
COMMA
AMPERSANT

info
MINUS
GREATER

mem_unit
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_DEFINE

MAGIC_START
STRING
PP_DEFINE

MAGIC_END
STRING
PP_INCLUDE
PP_DEFINE

MAGIC_SIZE
BRACKET_O

sizeof
BRACKET_O

MAGIC_START
BRACKET_C
MINUS
NUMBER
BRACKET_C
PP_DEFINE

kernel_config_data_size
BACKLASHED_NEWLINE
BRACKET_O

sizeof
BRACKET_O

kernel_config_data
BRACKET_C
MINUS
NUMBER
MINUS

MAGIC_SIZE
MULT
NUMBER
BRACKET_C
PP_IFDEF

CONFIG_IKCONFIG_PROC

static

ssize_t

ikconfig_read_current
BRACKET_O
STRUCT

file
MULT

file
COMMA
TYPE_CHAR

__user
MULT

buf
COMMA

size_t

len
COMMA

loff_t
MULT

offset
BRACKET_C
CURLY_BRACKET_O

return

simple_read_from_buffer
BRACKET_O

buf
COMMA

len
COMMA

offset
COMMA

kernel_config_data
PLUS

MAGIC_SIZE
COMMA

kernel_config_data_size
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

file_operations

ikconfig_file_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

owner
OP_ASSIGNMENT

THIS_MODULE
COMMA
DOT

read
OP_ASSIGNMENT

ikconfig_read_current
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__init

ikconfig_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

proc_dir_entry
MULT

entry
SEMICOLON

entry
OP_ASSIGNMENT

create_proc_entry
BRACKET_O
STRING
COMMA

S_IFREG
LOGICAL_OR

S_IRUGO
COMMA
AMPERSANT

proc_root
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

entry
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

entry
MINUS
GREATER

proc_fops
OP_ASSIGNMENT
AMPERSANT

ikconfig_file_ops
SEMICOLON

entry
MINUS
GREATER

size
OP_ASSIGNMENT

kernel_config_data_size
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

__exit

ikconfig_cleanup
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

remove_proc_entry
BRACKET_O
STRING
COMMA
AMPERSANT

proc_root
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

module_init
BRACKET_O

ikconfig_init
BRACKET_C
SEMICOLON

module_exit
BRACKET_O

ikconfig_cleanup
BRACKET_C
SEMICOLON

MODULE_LICENSE
BRACKET_O
STRING
BRACKET_C
SEMICOLON

MODULE_AUTHOR
BRACKET_O
STRING
BRACKET_C
SEMICOLON

MODULE_DESCRIPTION
BRACKET_O
STRING
BRACKET_C
SEMICOLON
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static

DEFINE_MUTEX
BRACKET_O

cpu_add_remove_lock
BRACKET_C
SEMICOLON

static

DEFINE_MUTEX
BRACKET_O

cpu_bitmask_lock
BRACKET_C
SEMICOLON

static

__cpuinitdata

RAW_NOTIFIER_HEAD
BRACKET_O

cpu_chain
BRACKET_C
SEMICOLON

static
TYPE_INT

cpu_hotplug_disabled
SEMICOLON
PP_IFDEF

CONFIG_HOTPLUG_CPU

static
STRUCT

task_struct
MULT

recursive
SEMICOLON

static
TYPE_INT

recursive_depth
SEMICOLON

void

lock_cpu_hotplug
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON
IF
BRACKET_O

tsk
EQ

recursive
BRACKET_C
CURLY_BRACKET_O

static
TYPE_INT

warnings
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

warnings
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

warnings
MINUS
MINUS
SEMICOLON
CURLY_BRACKET_C

recursive_depth
PLUS
PLUS
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

mutex_lock
BRACKET_O
AMPERSANT

cpu_bitmask_lock
BRACKET_C
SEMICOLON

recursive
OP_ASSIGNMENT

tsk
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

lock_cpu_hotplug
BRACKET_C
SEMICOLON

void

unlock_cpu_hotplug
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

WARN_ON
BRACKET_O

recursive
NOT_EQ

current
BRACKET_C
SEMICOLON
IF
BRACKET_O

recursive_depth
BRACKET_C
CURLY_BRACKET_O

recursive_depth
MINUS
MINUS
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

recursive
OP_ASSIGNMENT

NULL
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

cpu_bitmask_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

unlock_cpu_hotplug
BRACKET_C
SEMICOLON
PP_ENDIF
TYPE_INT

__cpuinit

register_cpu_notifier
BRACKET_O
STRUCT

notifier_block
MULT

nb
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

cpu_add_remove_lock
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

raw_notifier_chain_register
BRACKET_O
AMPERSANT

cpu_chain
COMMA

nb
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

cpu_add_remove_lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_HOTPLUG_CPU

EXPORT_SYMBOL
BRACKET_O

register_cpu_notifier
BRACKET_C
SEMICOLON

void

unregister_cpu_notifier
BRACKET_O
STRUCT

notifier_block
MULT

nb
BRACKET_C
CURLY_BRACKET_O

mutex_lock
BRACKET_O
AMPERSANT

cpu_add_remove_lock
BRACKET_C
SEMICOLON

raw_notifier_chain_unregister
BRACKET_O
AMPERSANT

cpu_chain
COMMA

nb
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

cpu_add_remove_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

unregister_cpu_notifier
BRACKET_C
SEMICOLON

static

inline

void

check_for_tasks
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

for_each_process
BRACKET_O

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

task_cpu
BRACKET_O

p
BRACKET_C
EQ

cpu
AND
BRACKET_O
NOT

cputime_eq
BRACKET_O

p
MINUS
GREATER

utime
COMMA

cputime_zero
BRACKET_C
OR
NOT

cputime_eq
BRACKET_O

p
MINUS
GREATER

stime
COMMA

cputime_zero
BRACKET_C
BRACKET_C
BRACKET_C

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

p
MINUS
GREATER

comm
COMMA

p
MINUS
GREATER

pid
COMMA

cpu
COMMA

p
MINUS
GREATER

state
COMMA

p
MINUS
GREATER

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

take_cpu_down
BRACKET_O

void
MULT

unused
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
SEMICOLON

err
OP_ASSIGNMENT

__cpu_disable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON

sched_idle_next
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

_cpu_down
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

cpu
COMMA
TYPE_INT

tasks_frozen
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
COMMA

nr_calls
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON

cpumask_t

old_allowed
COMMA

tmp
SEMICOLON

void
MULT

hcpu
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C
BRACKET_O
TYPE_LONG
BRACKET_C

cpu
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

mod
OP_ASSIGNMENT

tasks_frozen
QUESTION_MARK

CPU_TASKS_FROZEN
COLON
NUMBER
SEMICOLON
IF
BRACKET_O

num_online_cpus
BRACKET_O
BRACKET_C
EQ
NUMBER
BRACKET_C

return
MINUS

EBUSY
SEMICOLON
IF
BRACKET_O
NOT

cpu_online
BRACKET_O

cpu
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

raw_notifier_call_chain
BRACKET_O
AMPERSANT

cpu_chain
COMMA

CPU_LOCK_ACQUIRE
COMMA

hcpu
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

__raw_notifier_call_chain
BRACKET_O
AMPERSANT

cpu_chain
COMMA

CPU_DOWN_PREPARE
LOGICAL_OR

mod
COMMA

hcpu
COMMA
MINUS
NUMBER
COMMA
AMPERSANT

nr_calls
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
EQ

NOTIFY_BAD
BRACKET_C
CURLY_BRACKET_O

__raw_notifier_call_chain
BRACKET_O
AMPERSANT

cpu_chain
COMMA

CPU_DOWN_FAILED
LOGICAL_OR

mod
COMMA

hcpu
COMMA

nr_calls
COMMA

NULL
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

__FUNCTION__
COMMA

cpu
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

out_release
SEMICOLON
CURLY_BRACKET_C

old_allowed
OP_ASSIGNMENT

current
MINUS
GREATER

cpus_allowed
SEMICOLON

tmp
OP_ASSIGNMENT

CPU_MASK_ALL
SEMICOLON

cpu_clear
BRACKET_O

cpu
COMMA

tmp
BRACKET_C
SEMICOLON

set_cpus_allowed
BRACKET_O

current
COMMA

tmp
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

cpu_bitmask_lock
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

__stop_machine_run
BRACKET_O

take_cpu_down
COMMA

NULL
COMMA

cpu
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

cpu_bitmask_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

p
BRACKET_C
OR

cpu_online
BRACKET_O

cpu
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

raw_notifier_call_chain
BRACKET_O
AMPERSANT

cpu_chain
COMMA

CPU_DOWN_FAILED
LOGICAL_OR

mod
COMMA

hcpu
BRACKET_C
EQ

NOTIFY_BAD
BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

p
BRACKET_C
SEMICOLON

goto

out_allowed
SEMICOLON
CURLY_BRACKET_C

goto

out_thread
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

idle_cpu
BRACKET_O

cpu
BRACKET_C
BRACKET_C

yield
BRACKET_O
BRACKET_C
SEMICOLON

__cpu_die
BRACKET_O

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

raw_notifier_call_chain
BRACKET_O
AMPERSANT

cpu_chain
COMMA

CPU_DEAD
LOGICAL_OR

mod
COMMA

hcpu
BRACKET_C
EQ

NOTIFY_BAD
BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON

check_for_tasks
BRACKET_O

cpu
BRACKET_C
SEMICOLON

out_thread
COLON

err
OP_ASSIGNMENT

kthread_stop
BRACKET_O

p
BRACKET_C
SEMICOLON

out_allowed
COLON

set_cpus_allowed
BRACKET_O

current
COMMA

old_allowed
BRACKET_C
SEMICOLON

out_release
COLON

raw_notifier_call_chain
BRACKET_O
AMPERSANT

cpu_chain
COMMA

CPU_LOCK_RELEASE
COMMA

hcpu
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

cpu_down
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

cpu_add_remove_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpu_hotplug_disabled
BRACKET_C

err
OP_ASSIGNMENT
MINUS

EBUSY
SEMICOLON
ELSE

err
OP_ASSIGNMENT

_cpu_down
BRACKET_O

cpu
COMMA
NUMBER
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

cpu_add_remove_lock
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

__cpuinit

_cpu_up
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

cpu
COMMA
TYPE_INT

tasks_frozen
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
COMMA

nr_calls
OP_ASSIGNMENT
NUMBER
SEMICOLON

void
MULT

hcpu
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C
BRACKET_O
TYPE_LONG
BRACKET_C

cpu
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

mod
OP_ASSIGNMENT

tasks_frozen
QUESTION_MARK

CPU_TASKS_FROZEN
COLON
NUMBER
SEMICOLON
IF
BRACKET_O

cpu_online
BRACKET_O

cpu
BRACKET_C
OR
NOT

cpu_present
BRACKET_O

cpu
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

raw_notifier_call_chain
BRACKET_O
AMPERSANT

cpu_chain
COMMA

CPU_LOCK_ACQUIRE
COMMA

hcpu
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

__raw_notifier_call_chain
BRACKET_O
AMPERSANT

cpu_chain
COMMA

CPU_UP_PREPARE
LOGICAL_OR

mod
COMMA

hcpu
COMMA
MINUS
NUMBER
COMMA
AMPERSANT

nr_calls
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ

NOTIFY_BAD
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

__FUNCTION__
COMMA

cpu
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

out_notify
SEMICOLON
CURLY_BRACKET_C

mutex_lock
BRACKET_O
AMPERSANT

cpu_bitmask_lock
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

__cpu_up
BRACKET_O

cpu
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

cpu_bitmask_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
NOT_EQ
NUMBER
BRACKET_C

goto

out_notify
SEMICOLON

BUG_ON
BRACKET_O
NOT

cpu_online
BRACKET_O

cpu
BRACKET_C
BRACKET_C
SEMICOLON

raw_notifier_call_chain
BRACKET_O
AMPERSANT

cpu_chain
COMMA

CPU_ONLINE
LOGICAL_OR

mod
COMMA

hcpu
BRACKET_C
SEMICOLON

out_notify
COLON
IF
BRACKET_O

ret
NOT_EQ
NUMBER
BRACKET_C

__raw_notifier_call_chain
BRACKET_O
AMPERSANT

cpu_chain
COMMA

CPU_UP_CANCELED
LOGICAL_OR

mod
COMMA

hcpu
COMMA

nr_calls
COMMA

NULL
BRACKET_C
SEMICOLON

raw_notifier_call_chain
BRACKET_O
AMPERSANT

cpu_chain
COMMA

CPU_LOCK_RELEASE
COMMA

hcpu
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__cpuinit

cpu_up
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

cpu_add_remove_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpu_hotplug_disabled
BRACKET_C

err
OP_ASSIGNMENT
MINUS

EBUSY
SEMICOLON
ELSE

err
OP_ASSIGNMENT

_cpu_up
BRACKET_O

cpu
COMMA
NUMBER
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

cpu_add_remove_lock
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_SUSPEND_SMP

static

cpumask_t

frozen_cpus
SEMICOLON
TYPE_INT

disable_nonboot_cpus
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
COMMA

first_cpu
COMMA

error
OP_ASSIGNMENT
NUMBER
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

cpu_add_remove_lock
BRACKET_C
SEMICOLON

first_cpu
OP_ASSIGNMENT

first_cpu
BRACKET_O

cpu_online_map
BRACKET_C
SEMICOLON

cpus_clear
BRACKET_O

frozen_cpus
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

for_each_online_cpu
BRACKET_O

cpu
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cpu
EQ

first_cpu
BRACKET_C
CONTINUE
SEMICOLON

error
OP_ASSIGNMENT

_cpu_down
BRACKET_O

cpu
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
BRACKET_C
CURLY_BRACKET_O

cpu_set
BRACKET_O

cpu
COMMA

frozen_cpus
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
COMMA

cpu
COMMA

error
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

error
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

num_online_cpus
BRACKET_O
BRACKET_C
GREATER
NUMBER
BRACKET_C
SEMICOLON

cpu_hotplug_disabled
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

cpu_add_remove_lock
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C

void

enable_nonboot_cpus
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
COMMA

error
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

cpu_add_remove_lock
BRACKET_C
SEMICOLON

cpu_hotplug_disabled
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

cpus_empty
BRACKET_O

frozen_cpus
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

for_each_cpu_mask
BRACKET_O

cpu
COMMA

frozen_cpus
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT

_cpu_up
BRACKET_O

cpu
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

cpu
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

cpu
COMMA

error
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

cpus_clear
BRACKET_O

frozen_cpus
BRACKET_C
SEMICOLON

out
COLON

mutex_unlock
BRACKET_O
AMPERSANT

cpu_add_remove_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_DEFINE

CPUSET_SUPER_MAGIC
NUMBER

x27e0eb
TYPE_INT

number_of_cpusets

__read_mostly
SEMICOLON
STRUCT

fmeter
CURLY_BRACKET_O
TYPE_INT

cnt
SEMICOLON
TYPE_INT

val
SEMICOLON

time_t

time
SEMICOLON

spinlock_t

lock
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

cpuset
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

cpumask_t

cpus_allowed
SEMICOLON

nodemask_t

mems_allowed
SEMICOLON

atomic_t

count
SEMICOLON
STRUCT

list_head

sibling
SEMICOLON
STRUCT

list_head

children
SEMICOLON
STRUCT

cpuset
MULT

parent
SEMICOLON
STRUCT

dentry
MULT

dentry
SEMICOLON
TYPE_INT

mems_generation
SEMICOLON
STRUCT

fmeter

fmeter
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

typedef

enum
CURLY_BRACKET_O

CS_CPU_EXCLUSIVE
COMMA

CS_MEM_EXCLUSIVE
COMMA

CS_MEMORY_MIGRATE
COMMA

CS_REMOVED
COMMA

CS_NOTIFY_ON_RELEASE
COMMA

CS_SPREAD_PAGE
COMMA

CS_SPREAD_SLAB
COMMA
CURLY_BRACKET_C

cpuset_flagbits_t
SEMICOLON

static

inline
TYPE_INT

is_cpu_exclusive
BRACKET_O
CONST
STRUCT

cpuset
MULT

cs
BRACKET_C
CURLY_BRACKET_O

return

test_bit
BRACKET_O

CS_CPU_EXCLUSIVE
COMMA
AMPERSANT

cs
MINUS
GREATER

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

is_mem_exclusive
BRACKET_O
CONST
STRUCT

cpuset
MULT

cs
BRACKET_C
CURLY_BRACKET_O

return

test_bit
BRACKET_O

CS_MEM_EXCLUSIVE
COMMA
AMPERSANT

cs
MINUS
GREATER

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

is_removed
BRACKET_O
CONST
STRUCT

cpuset
MULT

cs
BRACKET_C
CURLY_BRACKET_O

return

test_bit
BRACKET_O

CS_REMOVED
COMMA
AMPERSANT

cs
MINUS
GREATER

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

notify_on_release
BRACKET_O
CONST
STRUCT

cpuset
MULT

cs
BRACKET_C
CURLY_BRACKET_O

return

test_bit
BRACKET_O

CS_NOTIFY_ON_RELEASE
COMMA
AMPERSANT

cs
MINUS
GREATER

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

is_memory_migrate
BRACKET_O
CONST
STRUCT

cpuset
MULT

cs
BRACKET_C
CURLY_BRACKET_O

return

test_bit
BRACKET_O

CS_MEMORY_MIGRATE
COMMA
AMPERSANT

cs
MINUS
GREATER

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

is_spread_page
BRACKET_O
CONST
STRUCT

cpuset
MULT

cs
BRACKET_C
CURLY_BRACKET_O

return

test_bit
BRACKET_O

CS_SPREAD_PAGE
COMMA
AMPERSANT

cs
MINUS
GREATER

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

is_spread_slab
BRACKET_O
CONST
STRUCT

cpuset
MULT

cs
BRACKET_C
CURLY_BRACKET_O

return

test_bit
BRACKET_O

CS_SPREAD_SLAB
COMMA
AMPERSANT

cs
MINUS
GREATER

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_mems_generation
SEMICOLON

static
STRUCT

cpuset

top_cpuset
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

flags
OP_ASSIGNMENT
BRACKET_O
BRACKET_O
NUMBER
LESS
LESS

CS_CPU_EXCLUSIVE
BRACKET_C
LOGICAL_OR
BRACKET_O
NUMBER
LESS
LESS

CS_MEM_EXCLUSIVE
BRACKET_C
BRACKET_C
COMMA
DOT

cpus_allowed
OP_ASSIGNMENT

CPU_MASK_ALL
COMMA
DOT

mems_allowed
OP_ASSIGNMENT

NODE_MASK_ALL
COMMA
DOT

count
OP_ASSIGNMENT

ATOMIC_INIT
BRACKET_O
NUMBER
BRACKET_C
COMMA
DOT

sibling
OP_ASSIGNMENT

LIST_HEAD_INIT
BRACKET_O

top_cpuset
DOT

sibling
BRACKET_C
COMMA
DOT

children
OP_ASSIGNMENT

LIST_HEAD_INIT
BRACKET_O

top_cpuset
DOT

children
BRACKET_C
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

vfsmount
MULT

cpuset_mount
SEMICOLON

static
STRUCT

super_block
MULT

cpuset_sb
SEMICOLON

static

DEFINE_MUTEX
BRACKET_O

manage_mutex
BRACKET_C
SEMICOLON

static

DEFINE_MUTEX
BRACKET_O

callback_mutex
BRACKET_C
SEMICOLON

static
TYPE_INT

cpuset_mkdir
BRACKET_O
STRUCT

inode
MULT

dir
COMMA
STRUCT

dentry
MULT

dentry
COMMA
TYPE_INT

mode
BRACKET_C
SEMICOLON

static
TYPE_INT

cpuset_rmdir
BRACKET_O
STRUCT

inode
MULT

unused_dir
COMMA
STRUCT

dentry
MULT

dentry
BRACKET_C
SEMICOLON

static
STRUCT

backing_dev_info

cpuset_backing_dev_info
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

ra_pages
OP_ASSIGNMENT
NUMBER
COMMA
DOT

capabilities
OP_ASSIGNMENT

BDI_CAP_NO_ACCT_DIRTY
LOGICAL_OR

BDI_CAP_NO_WRITEBACK
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

inode
MULT

cpuset_new_inode
BRACKET_O

mode_t

mode
BRACKET_C
CURLY_BRACKET_O
STRUCT

inode
MULT

inode
OP_ASSIGNMENT

new_inode
BRACKET_O

cpuset_sb
BRACKET_C
SEMICOLON
IF
BRACKET_O

inode
BRACKET_C
CURLY_BRACKET_O

inode
MINUS
GREATER

i_mode
OP_ASSIGNMENT

mode
SEMICOLON

inode
MINUS
GREATER

i_uid
OP_ASSIGNMENT

current
MINUS
GREATER

fsuid
SEMICOLON

inode
MINUS
GREATER

i_gid
OP_ASSIGNMENT

current
MINUS
GREATER

fsgid
SEMICOLON

inode
MINUS
GREATER

i_blocks
OP_ASSIGNMENT
NUMBER
SEMICOLON

inode
MINUS
GREATER

i_atime
OP_ASSIGNMENT

inode
MINUS
GREATER

i_mtime
OP_ASSIGNMENT

inode
MINUS
GREATER

i_ctime
OP_ASSIGNMENT

CURRENT_TIME
SEMICOLON

inode
MINUS
GREATER

i_mapping
MINUS
GREATER

backing_dev_info
OP_ASSIGNMENT
AMPERSANT

cpuset_backing_dev_info
SEMICOLON
CURLY_BRACKET_C

return

inode
SEMICOLON
CURLY_BRACKET_C

static

void

cpuset_diput
BRACKET_O
STRUCT

dentry
MULT

dentry
COMMA
STRUCT

inode
MULT

inode
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

S_ISDIR
BRACKET_O

inode
MINUS
GREATER

i_mode
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpuset
MULT

cs
OP_ASSIGNMENT

dentry
MINUS
GREATER

d_fsdata
SEMICOLON

BUG_ON
BRACKET_O
NOT
BRACKET_O

is_removed
BRACKET_O

cs
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

kfree
BRACKET_O

cs
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

iput
BRACKET_O

inode
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

dentry_operations

cpuset_dops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

d_iput
OP_ASSIGNMENT

cpuset_diput
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

dentry
MULT

cpuset_get_dentry
BRACKET_O
STRUCT

dentry
MULT

parent
COMMA
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
STRUCT

dentry
MULT

d
OP_ASSIGNMENT

lookup_one_len
BRACKET_O

name
COMMA

parent
COMMA

strlen
BRACKET_O

name
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

IS_ERR
BRACKET_O

d
BRACKET_C
BRACKET_C

d
MINUS
GREATER

d_op
OP_ASSIGNMENT
AMPERSANT

cpuset_dops
SEMICOLON

return

d
SEMICOLON
CURLY_BRACKET_C

static

void

remove_dir
BRACKET_O
STRUCT

dentry
MULT

d
BRACKET_C
CURLY_BRACKET_O
STRUCT

dentry
MULT

parent
OP_ASSIGNMENT

dget
BRACKET_O

d
MINUS
GREATER

d_parent
BRACKET_C
SEMICOLON

d_delete
BRACKET_O

d
BRACKET_C
SEMICOLON

simple_rmdir
BRACKET_O

parent
MINUS
GREATER

d_inode
COMMA

d
BRACKET_C
SEMICOLON

dput
BRACKET_O

parent
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

cpuset_d_remove_dir
BRACKET_O
STRUCT

dentry
MULT

dentry
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head
MULT

node
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

dcache_lock
BRACKET_C
SEMICOLON

node
OP_ASSIGNMENT

dentry
MINUS
GREATER

d_subdirs
DOT

next
SEMICOLON
WHILE
BRACKET_O

node
NOT_EQ
AMPERSANT

dentry
MINUS
GREATER

d_subdirs
BRACKET_C
CURLY_BRACKET_O
STRUCT

dentry
MULT

d
OP_ASSIGNMENT

list_entry
BRACKET_O

node
COMMA
STRUCT

dentry
COMMA

d_u
DOT

d_child
BRACKET_C
SEMICOLON

list_del_init
BRACKET_O

node
BRACKET_C
SEMICOLON
IF
BRACKET_O

d
MINUS
GREATER

d_inode
BRACKET_C
CURLY_BRACKET_O

d
OP_ASSIGNMENT

dget_locked
BRACKET_O

d
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

dcache_lock
BRACKET_C
SEMICOLON

d_delete
BRACKET_O

d
BRACKET_C
SEMICOLON

simple_unlink
BRACKET_O

dentry
MINUS
GREATER

d_inode
COMMA

d
BRACKET_C
SEMICOLON

dput
BRACKET_O

d
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

dcache_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

node
OP_ASSIGNMENT

dentry
MINUS
GREATER

d_subdirs
DOT

next
SEMICOLON
CURLY_BRACKET_C

list_del_init
BRACKET_O
AMPERSANT

dentry
MINUS
GREATER

d_u
DOT

d_child
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

dcache_lock
BRACKET_C
SEMICOLON

remove_dir
BRACKET_O

dentry
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

super_operations

cpuset_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

statfs
OP_ASSIGNMENT

simple_statfs
COMMA
DOT

drop_inode
OP_ASSIGNMENT

generic_delete_inode
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

cpuset_fill_super
BRACKET_O
STRUCT

super_block
MULT

sb
COMMA

void
MULT

unused_data
COMMA
TYPE_INT

unused_silent
BRACKET_C
CURLY_BRACKET_O
STRUCT

inode
MULT

inode
SEMICOLON
STRUCT

dentry
MULT

root
SEMICOLON

sb
MINUS
GREATER

s_blocksize
OP_ASSIGNMENT

PAGE_CACHE_SIZE
SEMICOLON

sb
MINUS
GREATER

s_blocksize_bits
OP_ASSIGNMENT

PAGE_CACHE_SHIFT
SEMICOLON

sb
MINUS
GREATER

s_magic
OP_ASSIGNMENT

CPUSET_SUPER_MAGIC
SEMICOLON

sb
MINUS
GREATER

s_op
OP_ASSIGNMENT
AMPERSANT

cpuset_ops
SEMICOLON

cpuset_sb
OP_ASSIGNMENT

sb
SEMICOLON

inode
OP_ASSIGNMENT

cpuset_new_inode
BRACKET_O

S_IFDIR
LOGICAL_OR

S_IRUGO
LOGICAL_OR

S_IXUGO
LOGICAL_OR

S_IWUSR
BRACKET_C
SEMICOLON
IF
BRACKET_O

inode
BRACKET_C
CURLY_BRACKET_O

inode
MINUS
GREATER

i_op
OP_ASSIGNMENT
AMPERSANT

simple_dir_inode_operations
SEMICOLON

inode
MINUS
GREATER

i_fop
OP_ASSIGNMENT
AMPERSANT

simple_dir_operations
SEMICOLON

inc_nlink
BRACKET_O

inode
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

root
OP_ASSIGNMENT

d_alloc_root
BRACKET_O

inode
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

root
BRACKET_C
CURLY_BRACKET_O

iput
BRACKET_O

inode
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

sb
MINUS
GREATER

s_root
OP_ASSIGNMENT

root
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_get_sb
BRACKET_O
STRUCT

file_system_type
MULT

fs_type
COMMA
TYPE_INT

flags
COMMA
CONST
TYPE_CHAR
MULT

unused_dev_name
COMMA

void
MULT

data
COMMA
STRUCT

vfsmount
MULT

mnt
BRACKET_C
CURLY_BRACKET_O

return

get_sb_single
BRACKET_O

fs_type
COMMA

flags
COMMA

data
COMMA

cpuset_fill_super
COMMA

mnt
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

file_system_type

cpuset_fs_type
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

get_sb
OP_ASSIGNMENT

cpuset_get_sb
COMMA
DOT

kill_sb
OP_ASSIGNMENT

kill_litter_super
COMMA
CURLY_BRACKET_C
SEMICOLON
STRUCT

cftype
CURLY_BRACKET_O
TYPE_CHAR
MULT

name
SEMICOLON
TYPE_INT

private
SEMICOLON
TYPE_INT
BRACKET_O
MULT

open
BRACKET_C
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
SEMICOLON

ssize_t
BRACKET_O
MULT

read
BRACKET_C
BRACKET_O
STRUCT

file
MULT

file
COMMA
TYPE_CHAR

__user
MULT

buf
COMMA

size_t

nbytes
COMMA

loff_t
MULT

ppos
BRACKET_C
SEMICOLON
TYPE_INT
BRACKET_O
MULT

write
BRACKET_C
BRACKET_O
STRUCT

file
MULT

file
COMMA
CONST
TYPE_CHAR

__user
MULT

buf
COMMA

size_t

nbytes
COMMA

loff_t
MULT

ppos
BRACKET_C
SEMICOLON
TYPE_INT
BRACKET_O
MULT

release
BRACKET_C
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static

inline
STRUCT

cpuset
MULT

__d_cs
BRACKET_O
STRUCT

dentry
MULT

dentry
BRACKET_C
CURLY_BRACKET_O

return

dentry
MINUS
GREATER

d_fsdata
SEMICOLON
CURLY_BRACKET_C

static

inline
STRUCT

cftype
MULT

__d_cft
BRACKET_O
STRUCT

dentry
MULT

dentry
BRACKET_C
CURLY_BRACKET_O

return

dentry
MINUS
GREATER

d_fsdata
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_path
BRACKET_O
CONST
STRUCT

cpuset
MULT

cs
COMMA
TYPE_CHAR
MULT

buf
COMMA
TYPE_INT

buflen
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

start
SEMICOLON

start
OP_ASSIGNMENT

buf
PLUS

buflen
SEMICOLON
MULT
MINUS
MINUS

start
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

len
OP_ASSIGNMENT

cs
MINUS
GREATER

dentry
MINUS
GREATER

d_name
DOT

len
SEMICOLON
IF
BRACKET_O
BRACKET_O

start
ASSIGN_MINUS

len
BRACKET_C
LESS

buf
BRACKET_C

return
MINUS

ENAMETOOLONG
SEMICOLON

memcpy
BRACKET_O

start
COMMA

cs
MINUS
GREATER

dentry
MINUS
GREATER

d_name
DOT

name
COMMA

len
BRACKET_C
SEMICOLON

cs
OP_ASSIGNMENT

cs
MINUS
GREATER

parent
SEMICOLON
IF
BRACKET_O
NOT

cs
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O
NOT

cs
MINUS
GREATER

parent
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O
MINUS
MINUS

start
LESS

buf
BRACKET_C

return
MINUS

ENAMETOOLONG
SEMICOLON
MULT

start
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
CURLY_BRACKET_C

memmove
BRACKET_O

buf
COMMA

start
COMMA

buf
PLUS

buflen
MINUS

start
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

cpuset_release_agent
BRACKET_O
CONST
TYPE_CHAR
MULT

pathbuf
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA
MULT

envp
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

i
SEMICOLON
IF
BRACKET_O
NOT

pathbuf
BRACKET_C

return
SEMICOLON

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

argv
CORNER_BRACKET_O

i
PLUS
PLUS
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
SEMICOLON

argv
CORNER_BRACKET_O

i
PLUS
PLUS
CORNER_BRACKET_C
OP_ASSIGNMENT
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

pathbuf
SEMICOLON

argv
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

envp
CORNER_BRACKET_O

i
PLUS
PLUS
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
SEMICOLON

envp
CORNER_BRACKET_O

i
PLUS
PLUS
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
SEMICOLON

envp
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

call_usermodehelper
BRACKET_O

argv
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

argv
COMMA

envp
COMMA
NUMBER
BRACKET_C
SEMICOLON

kfree
BRACKET_O

pathbuf
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

check_for_release
BRACKET_O
STRUCT

cpuset
MULT

cs
COMMA
TYPE_CHAR
MULT
MULT

ppathbuf
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

notify_on_release
BRACKET_O

cs
BRACKET_C
AND

atomic_read
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

count
BRACKET_C
EQ
NUMBER
AND

list_empty
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

children
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

buf
SEMICOLON

buf
OP_ASSIGNMENT

kmalloc
BRACKET_O

PAGE_SIZE
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

buf
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

cpuset_path
BRACKET_O

cs
COMMA

buf
COMMA

PAGE_SIZE
BRACKET_C
LESS
NUMBER
BRACKET_C

kfree
BRACKET_O

buf
BRACKET_C
SEMICOLON
ELSE
MULT

ppathbuf
OP_ASSIGNMENT

buf
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

guarantee_online_cpus
BRACKET_O
CONST
STRUCT

cpuset
MULT

cs
COMMA

cpumask_t
MULT

pmask
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O

cs
AND
NOT

cpus_intersects
BRACKET_O

cs
MINUS
GREATER

cpus_allowed
COMMA

cpu_online_map
BRACKET_C
BRACKET_C

cs
OP_ASSIGNMENT

cs
MINUS
GREATER

parent
SEMICOLON
IF
BRACKET_O

cs
BRACKET_C

cpus_and
BRACKET_O
MULT

pmask
COMMA

cs
MINUS
GREATER

cpus_allowed
COMMA

cpu_online_map
BRACKET_C
SEMICOLON
ELSE
MULT

pmask
OP_ASSIGNMENT

cpu_online_map
SEMICOLON

BUG_ON
BRACKET_O
NOT

cpus_intersects
BRACKET_O
MULT

pmask
COMMA

cpu_online_map
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

guarantee_online_mems
BRACKET_O
CONST
STRUCT

cpuset
MULT

cs
COMMA

nodemask_t
MULT

pmask
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O

cs
AND
NOT

nodes_intersects
BRACKET_O

cs
MINUS
GREATER

mems_allowed
COMMA

node_online_map
BRACKET_C
BRACKET_C

cs
OP_ASSIGNMENT

cs
MINUS
GREATER

parent
SEMICOLON
IF
BRACKET_O

cs
BRACKET_C

nodes_and
BRACKET_O
MULT

pmask
COMMA

cs
MINUS
GREATER

mems_allowed
COMMA

node_online_map
BRACKET_C
SEMICOLON
ELSE
MULT

pmask
OP_ASSIGNMENT

node_online_map
SEMICOLON

BUG_ON
BRACKET_O
NOT

nodes_intersects
BRACKET_O
MULT

pmask
COMMA

node_online_map
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

cpuset_update_task_memory_state
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

my_cpusets_mem_gen
SEMICOLON
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

cpuset
MULT

cs
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

cpuset
EQ
AMPERSANT

top_cpuset
BRACKET_C
CURLY_BRACKET_O

my_cpusets_mem_gen
OP_ASSIGNMENT

top_cpuset
DOT

mems_generation
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

cs
OP_ASSIGNMENT

rcu_dereference
BRACKET_O

tsk
MINUS
GREATER

cpuset
BRACKET_C
SEMICOLON

my_cpusets_mem_gen
OP_ASSIGNMENT

cs
MINUS
GREATER

mems_generation
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

my_cpusets_mem_gen
NOT_EQ

tsk
MINUS
GREATER

cpuset_mems_generation
BRACKET_C
CURLY_BRACKET_O

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

task_lock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

cs
OP_ASSIGNMENT

tsk
MINUS
GREATER

cpuset
SEMICOLON

guarantee_online_mems
BRACKET_O

cs
COMMA
AMPERSANT

tsk
MINUS
GREATER

mems_allowed
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

cpuset_mems_generation
OP_ASSIGNMENT

cs
MINUS
GREATER

mems_generation
SEMICOLON
IF
BRACKET_O

is_spread_page
BRACKET_O

cs
BRACKET_C
BRACKET_C

tsk
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_SPREAD_PAGE
SEMICOLON
ELSE

tsk
MINUS
GREATER

flags
AMPERSANT
OP_ASSIGNMENT
TILDE

PF_SPREAD_PAGE
SEMICOLON
IF
BRACKET_O

is_spread_slab
BRACKET_O

cs
BRACKET_C
BRACKET_C

tsk
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_SPREAD_SLAB
SEMICOLON
ELSE

tsk
MINUS
GREATER

flags
AMPERSANT
OP_ASSIGNMENT
TILDE

PF_SPREAD_SLAB
SEMICOLON

task_unlock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

mpol_rebind_task
BRACKET_O

tsk
COMMA
AMPERSANT

tsk
MINUS
GREATER

mems_allowed
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

is_cpuset_subset
BRACKET_O
CONST
STRUCT

cpuset
MULT

p
COMMA
CONST
STRUCT

cpuset
MULT

q
BRACKET_C
CURLY_BRACKET_O

return

cpus_subset
BRACKET_O

p
MINUS
GREATER

cpus_allowed
COMMA

q
MINUS
GREATER

cpus_allowed
BRACKET_C
AND

nodes_subset
BRACKET_O

p
MINUS
GREATER

mems_allowed
COMMA

q
MINUS
GREATER

mems_allowed
BRACKET_C
AND

is_cpu_exclusive
BRACKET_O

p
BRACKET_C
LE_EQ

is_cpu_exclusive
BRACKET_O

q
BRACKET_C
AND

is_mem_exclusive
BRACKET_O

p
BRACKET_C
LE_EQ

is_mem_exclusive
BRACKET_O

q
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

validate_change
BRACKET_O
CONST
STRUCT

cpuset
MULT

cur
COMMA
CONST
STRUCT

cpuset
MULT

trial
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpuset
MULT

c
COMMA
MULT

par
SEMICOLON

list_for_each_entry
BRACKET_O

c
COMMA
AMPERSANT

cur
MINUS
GREATER

children
COMMA

sibling
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

is_cpuset_subset
BRACKET_O

c
COMMA

trial
BRACKET_C
BRACKET_C

return
MINUS

EBUSY
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

cur
EQ
AMPERSANT

top_cpuset
BRACKET_C

return
NUMBER
SEMICOLON

par
OP_ASSIGNMENT

cur
MINUS
GREATER

parent
SEMICOLON
IF
BRACKET_O
NOT

is_cpuset_subset
BRACKET_O

trial
COMMA

par
BRACKET_C
BRACKET_C

return
MINUS

EACCES
SEMICOLON

list_for_each_entry
BRACKET_O

c
COMMA
AMPERSANT

par
MINUS
GREATER

children
COMMA

sibling
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

is_cpu_exclusive
BRACKET_O

trial
BRACKET_C
OR

is_cpu_exclusive
BRACKET_O

c
BRACKET_C
BRACKET_C
AND

c
NOT_EQ

cur
AND

cpus_intersects
BRACKET_O

trial
MINUS
GREATER

cpus_allowed
COMMA

c
MINUS
GREATER

cpus_allowed
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
BRACKET_O

is_mem_exclusive
BRACKET_O

trial
BRACKET_C
OR

is_mem_exclusive
BRACKET_O

c
BRACKET_C
BRACKET_C
AND

c
NOT_EQ

cur
AND

nodes_intersects
BRACKET_O

trial
MINUS
GREATER

mems_allowed
COMMA

c
MINUS
GREATER

mems_allowed
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

update_cpu_domains
BRACKET_O
STRUCT

cpuset
MULT

cur
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpuset
MULT

c
COMMA
MULT

par
OP_ASSIGNMENT

cur
MINUS
GREATER

parent
SEMICOLON

cpumask_t

pspan
COMMA

cspan
SEMICOLON
IF
BRACKET_O

par
EQ

NULL
OR

cpus_empty
BRACKET_O

cur
MINUS
GREATER

cpus_allowed
BRACKET_C
BRACKET_C

return
SEMICOLON

pspan
OP_ASSIGNMENT

par
MINUS
GREATER

cpus_allowed
SEMICOLON

list_for_each_entry
BRACKET_O

c
COMMA
AMPERSANT

par
MINUS
GREATER

children
COMMA

sibling
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

is_cpu_exclusive
BRACKET_O

c
BRACKET_C
BRACKET_C

cpus_andnot
BRACKET_O

pspan
COMMA

pspan
COMMA

c
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

is_cpu_exclusive
BRACKET_O

cur
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

cpus_or
BRACKET_O

pspan
COMMA

pspan
COMMA

cur
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpus_equal
BRACKET_O

pspan
COMMA

cur
MINUS
GREATER

cpus_allowed
BRACKET_C
BRACKET_C

return
SEMICOLON

cspan
OP_ASSIGNMENT

CPU_MASK_NONE
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

cpus_empty
BRACKET_O

pspan
BRACKET_C
BRACKET_C

return
SEMICOLON

cspan
OP_ASSIGNMENT

cur
MINUS
GREATER

cpus_allowed
SEMICOLON

list_for_each_entry
BRACKET_O

c
COMMA
AMPERSANT

cur
MINUS
GREATER

children
COMMA

sibling
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

is_cpu_exclusive
BRACKET_O

c
BRACKET_C
BRACKET_C

cpus_andnot
BRACKET_O

cspan
COMMA

cspan
COMMA

c
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

lock_cpu_hotplug
BRACKET_O
BRACKET_C
SEMICOLON

partition_sched_domains
BRACKET_O
AMPERSANT

pspan
COMMA
AMPERSANT

cspan
BRACKET_C
SEMICOLON

unlock_cpu_hotplug
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

update_cpumask
BRACKET_O
STRUCT

cpuset
MULT

cs
COMMA
TYPE_CHAR
MULT

buf
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpuset

trialcs
SEMICOLON
TYPE_INT

retval
COMMA

cpus_unchanged
SEMICOLON
IF
BRACKET_O

cs
EQ
AMPERSANT

top_cpuset
BRACKET_C

return
MINUS

EACCES
SEMICOLON

trialcs
OP_ASSIGNMENT
MULT

cs
SEMICOLON
IF
BRACKET_O
NOT

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OR
BRACKET_O

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
AND
NOT

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

cpus_clear
BRACKET_O

trialcs
DOT

cpus_allowed
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

retval
OP_ASSIGNMENT

cpulist_parse
BRACKET_O

buf
COMMA

trialcs
DOT

cpus_allowed
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
LESS
NUMBER
BRACKET_C

return

retval
SEMICOLON
CURLY_BRACKET_C

cpus_and
BRACKET_O

trialcs
DOT

cpus_allowed
COMMA

trialcs
DOT

cpus_allowed
COMMA

cpu_online_map
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

count
BRACKET_C
AND

cpus_empty
BRACKET_O

trialcs
DOT

cpus_allowed
BRACKET_C
BRACKET_C

return
MINUS

ENOSPC
SEMICOLON

retval
OP_ASSIGNMENT

validate_change
BRACKET_O

cs
COMMA
AMPERSANT

trialcs
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
LESS
NUMBER
BRACKET_C

return

retval
SEMICOLON

cpus_unchanged
OP_ASSIGNMENT

cpus_equal
BRACKET_O

cs
MINUS
GREATER

cpus_allowed
COMMA

trialcs
DOT

cpus_allowed
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

cs
MINUS
GREATER

cpus_allowed
OP_ASSIGNMENT

trialcs
DOT

cpus_allowed
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

is_cpu_exclusive
BRACKET_O

cs
BRACKET_C
AND
NOT

cpus_unchanged
BRACKET_C

update_cpu_domains
BRACKET_O

cs
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

cpuset_migrate_mm
BRACKET_O
STRUCT

mm_struct
MULT

mm
COMMA
CONST

nodemask_t
MULT

from
COMMA
CONST

nodemask_t
MULT

to
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON

cpuset_update_task_memory_state
BRACKET_O
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

mems_allowed
OP_ASSIGNMENT
MULT

to
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

do_migrate_pages
BRACKET_O

mm
COMMA

from
COMMA

to
COMMA

MPOL_MF_MOVE_ALL
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

guarantee_online_mems
BRACKET_O

tsk
MINUS
GREATER

cpuset
COMMA
AMPERSANT

tsk
MINUS
GREATER

mems_allowed
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

update_nodemask
BRACKET_O
STRUCT

cpuset
MULT

cs
COMMA
TYPE_CHAR
MULT

buf
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpuset

trialcs
SEMICOLON

nodemask_t

oldmem
SEMICOLON
STRUCT

task_struct
MULT

g
COMMA
MULT

p
SEMICOLON
STRUCT

mm_struct
MULT
MULT

mmarray
SEMICOLON
TYPE_INT

i
COMMA

n
COMMA

ntasks
SEMICOLON
TYPE_INT

migrate
SEMICOLON
TYPE_INT

fudge
SEMICOLON
TYPE_INT

retval
SEMICOLON
IF
BRACKET_O

cs
EQ
AMPERSANT

top_cpuset
BRACKET_C

return
MINUS

EACCES
SEMICOLON

trialcs
OP_ASSIGNMENT
MULT

cs
SEMICOLON
IF
BRACKET_O
NOT

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OR
BRACKET_O

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
AND
NOT

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

nodes_clear
BRACKET_O

trialcs
DOT

mems_allowed
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

retval
OP_ASSIGNMENT

nodelist_parse
BRACKET_O

buf
COMMA

trialcs
DOT

mems_allowed
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
LESS
NUMBER
BRACKET_C

goto

done
SEMICOLON
CURLY_BRACKET_C

nodes_and
BRACKET_O

trialcs
DOT

mems_allowed
COMMA

trialcs
DOT

mems_allowed
COMMA

node_online_map
BRACKET_C
SEMICOLON

oldmem
OP_ASSIGNMENT

cs
MINUS
GREATER

mems_allowed
SEMICOLON
IF
BRACKET_O

nodes_equal
BRACKET_O

oldmem
COMMA

trialcs
DOT

mems_allowed
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON

goto

done
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

count
BRACKET_C
AND

nodes_empty
BRACKET_O

trialcs
DOT

mems_allowed
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

retval
OP_ASSIGNMENT
MINUS

ENOSPC
SEMICOLON

goto

done
SEMICOLON
CURLY_BRACKET_C

retval
OP_ASSIGNMENT

validate_change
BRACKET_O

cs
COMMA
AMPERSANT

trialcs
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
LESS
NUMBER
BRACKET_C

goto

done
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

cs
MINUS
GREATER

mems_allowed
OP_ASSIGNMENT

trialcs
DOT

mems_allowed
SEMICOLON

cs
MINUS
GREATER

mems_generation
OP_ASSIGNMENT

cpuset_mems_generation
PLUS
PLUS
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

set_cpuset_being_rebound
BRACKET_O

cs
BRACKET_C
SEMICOLON

fudge
OP_ASSIGNMENT
NUMBER
SEMICOLON

fudge
ASSIGN_PLUS

cpus_weight
BRACKET_O

cs
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON
WHILE
BRACKET_O
NUMBER
BRACKET_C
CURLY_BRACKET_O

ntasks
OP_ASSIGNMENT

atomic_read
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

count
BRACKET_C
SEMICOLON

ntasks
ASSIGN_PLUS

fudge
SEMICOLON

mmarray
OP_ASSIGNMENT

kmalloc
BRACKET_O

ntasks
MULT

sizeof
BRACKET_O
MULT

mmarray
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

mmarray
BRACKET_C

goto

done
SEMICOLON

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

count
BRACKET_C
LE_EQ

ntasks
BRACKET_C
BREAK
SEMICOLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

kfree
BRACKET_O

mmarray
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

n
OP_ASSIGNMENT
NUMBER
SEMICOLON

do_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
CURLY_BRACKET_O
STRUCT

mm_struct
MULT

mm
SEMICOLON
IF
BRACKET_O

n
GR_EQ

ntasks
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

p
MINUS
GREATER

cpuset
NOT_EQ

cs
BRACKET_C
CONTINUE
SEMICOLON

mm
OP_ASSIGNMENT

get_task_mm
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

mm
BRACKET_C
CONTINUE
SEMICOLON

mmarray
CORNER_BRACKET_O

n
PLUS
PLUS
CORNER_BRACKET_C
OP_ASSIGNMENT

mm
SEMICOLON
CURLY_BRACKET_C

while_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
SEMICOLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

migrate
OP_ASSIGNMENT

is_memory_migrate
BRACKET_O

cs
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

n
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

mm_struct
MULT

mm
OP_ASSIGNMENT

mmarray
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

mpol_rebind_mm
BRACKET_O

mm
COMMA
AMPERSANT

cs
MINUS
GREATER

mems_allowed
BRACKET_C
SEMICOLON
IF
BRACKET_O

migrate
BRACKET_C

cpuset_migrate_mm
BRACKET_O

mm
COMMA
AMPERSANT

oldmem
COMMA
AMPERSANT

cs
MINUS
GREATER

mems_allowed
BRACKET_C
SEMICOLON

mmput
BRACKET_O

mm
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

kfree
BRACKET_O

mmarray
BRACKET_C
SEMICOLON

set_cpuset_being_rebound
BRACKET_O

NULL
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON

done
COLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

update_memory_pressure_enabled
BRACKET_O
STRUCT

cpuset
MULT

cs
COMMA
TYPE_CHAR
MULT

buf
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

simple_strtoul
BRACKET_O

buf
COMMA

NULL
COMMA
NUMBER
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

cpuset_memory_pressure_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE

cpuset_memory_pressure_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

update_flag
BRACKET_O

cpuset_flagbits_t

bit
COMMA
STRUCT

cpuset
MULT

cs
COMMA
TYPE_CHAR
MULT

buf
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

turning_on
SEMICOLON
STRUCT

cpuset

trialcs
SEMICOLON
TYPE_INT

err
COMMA

cpu_exclusive_changed
SEMICOLON

turning_on
OP_ASSIGNMENT
BRACKET_O

simple_strtoul
BRACKET_O

buf
COMMA

NULL
COMMA
NUMBER
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
SEMICOLON

trialcs
OP_ASSIGNMENT
MULT

cs
SEMICOLON
IF
BRACKET_O

turning_on
BRACKET_C

set_bit
BRACKET_O

bit
COMMA
AMPERSANT

trialcs
DOT

flags
BRACKET_C
SEMICOLON
ELSE

clear_bit
BRACKET_O

bit
COMMA
AMPERSANT

trialcs
DOT

flags
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

validate_change
BRACKET_O

cs
COMMA
AMPERSANT

trialcs
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON

cpu_exclusive_changed
OP_ASSIGNMENT
BRACKET_O

is_cpu_exclusive
BRACKET_O

cs
BRACKET_C
NOT_EQ

is_cpu_exclusive
BRACKET_O
AMPERSANT

trialcs
BRACKET_C
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

cs
MINUS
GREATER

flags
OP_ASSIGNMENT

trialcs
DOT

flags
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpu_exclusive_changed
BRACKET_C

update_cpu_domains
BRACKET_O

cs
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

FM_COEF
NUMBER
PP_DEFINE

FM_MAXTICKS
BRACKET_O
BRACKET_O

time_t
BRACKET_C
NUMBER
BRACKET_C
PP_DEFINE

FM_MAXCNT
NUMBER
PP_DEFINE

FM_SCALE
NUMBER

static

void

fmeter_init
BRACKET_O
STRUCT

fmeter
MULT

fmp
BRACKET_C
CURLY_BRACKET_O

fmp
MINUS
GREATER

cnt
OP_ASSIGNMENT
NUMBER
SEMICOLON

fmp
MINUS
GREATER

val
OP_ASSIGNMENT
NUMBER
SEMICOLON

fmp
MINUS
GREATER

time
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

fmp
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

fmeter_update
BRACKET_O
STRUCT

fmeter
MULT

fmp
BRACKET_C
CURLY_BRACKET_O

time_t

now
OP_ASSIGNMENT

get_seconds
BRACKET_O
BRACKET_C
SEMICOLON

time_t

ticks
OP_ASSIGNMENT

now
MINUS

fmp
MINUS
GREATER

time
SEMICOLON
IF
BRACKET_O

ticks
EQ
NUMBER
BRACKET_C

return
SEMICOLON

ticks
OP_ASSIGNMENT

min
BRACKET_O

FM_MAXTICKS
COMMA

ticks
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

ticks
MINUS
MINUS
GREATER
NUMBER
BRACKET_C

fmp
MINUS
GREATER

val
OP_ASSIGNMENT
BRACKET_O

FM_COEF
MULT

fmp
MINUS
GREATER

val
BRACKET_C
DIV

FM_SCALE
SEMICOLON

fmp
MINUS
GREATER

time
OP_ASSIGNMENT

now
SEMICOLON

fmp
MINUS
GREATER

val
ASSIGN_PLUS
BRACKET_O
BRACKET_O

FM_SCALE
MINUS

FM_COEF
BRACKET_C
MULT

fmp
MINUS
GREATER

cnt
BRACKET_C
DIV

FM_SCALE
SEMICOLON

fmp
MINUS
GREATER

cnt
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

fmeter_markevent
BRACKET_O
STRUCT

fmeter
MULT

fmp
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

fmp
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

fmeter_update
BRACKET_O

fmp
BRACKET_C
SEMICOLON

fmp
MINUS
GREATER

cnt
OP_ASSIGNMENT

min
BRACKET_O

FM_MAXCNT
COMMA

fmp
MINUS
GREATER

cnt
PLUS

FM_SCALE
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

fmp
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

fmeter_getrate
BRACKET_O
STRUCT

fmeter
MULT

fmp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

val
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

fmp
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

fmeter_update
BRACKET_O

fmp
BRACKET_C
SEMICOLON

val
OP_ASSIGNMENT

fmp
MINUS
GREATER

val
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

fmp
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

return

val
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

attach_task
BRACKET_O
STRUCT

cpuset
MULT

cs
COMMA
TYPE_CHAR
MULT

pidbuf
COMMA
TYPE_CHAR
MULT
MULT

ppathbuf
BRACKET_C
CURLY_BRACKET_O

pid_t

pid
SEMICOLON
STRUCT

task_struct
MULT

tsk
SEMICOLON
STRUCT

cpuset
MULT

oldcs
SEMICOLON

cpumask_t

cpus
SEMICOLON

nodemask_t

from
COMMA

to
SEMICOLON
STRUCT

mm_struct
MULT

mm
SEMICOLON
TYPE_INT

retval
SEMICOLON
IF
BRACKET_O

sscanf
BRACKET_O

pidbuf
COMMA
STRING
COMMA
AMPERSANT

pid
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

return
MINUS

EIO
SEMICOLON
IF
BRACKET_O

cpus_empty
BRACKET_O

cs
MINUS
GREATER

cpus_allowed
BRACKET_C
OR

nodes_empty
BRACKET_O

cs
MINUS
GREATER

mems_allowed
BRACKET_C
BRACKET_C

return
MINUS

ENOSPC
SEMICOLON
IF
BRACKET_O

pid
BRACKET_C
CURLY_BRACKET_O

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

tsk
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tsk
OR

tsk
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C
CURLY_BRACKET_O

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return
MINUS

ESRCH
SEMICOLON
CURLY_BRACKET_C

get_task_struct
BRACKET_O

tsk
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

current
MINUS
GREATER

euid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

tsk
MINUS
GREATER

uid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

tsk
MINUS
GREATER

suid
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

put_task_struct
BRACKET_O

tsk
BRACKET_C
SEMICOLON

return
MINUS

EACCES
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

tsk
OP_ASSIGNMENT

current
SEMICOLON

get_task_struct
BRACKET_O

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

retval
OP_ASSIGNMENT

security_task_setscheduler
BRACKET_O

tsk
COMMA
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C
CURLY_BRACKET_O

put_task_struct
BRACKET_O

tsk
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

task_lock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

oldcs
OP_ASSIGNMENT

tsk
MINUS
GREATER

cpuset
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C
CURLY_BRACKET_O

task_unlock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

put_task_struct
BRACKET_O

tsk
BRACKET_C
SEMICOLON

return
MINUS

ESRCH
SEMICOLON
CURLY_BRACKET_C

atomic_inc
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

count
BRACKET_C
SEMICOLON

rcu_assign_pointer
BRACKET_O

tsk
MINUS
GREATER

cpuset
COMMA

cs
BRACKET_C
SEMICOLON

task_unlock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

guarantee_online_cpus
BRACKET_O

cs
COMMA
AMPERSANT

cpus
BRACKET_C
SEMICOLON

set_cpus_allowed
BRACKET_O

tsk
COMMA

cpus
BRACKET_C
SEMICOLON

from
OP_ASSIGNMENT

oldcs
MINUS
GREATER

mems_allowed
SEMICOLON

to
OP_ASSIGNMENT

cs
MINUS
GREATER

mems_allowed
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

mm
OP_ASSIGNMENT

get_task_mm
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

mm
BRACKET_C
CURLY_BRACKET_O

mpol_rebind_mm
BRACKET_O

mm
COMMA
AMPERSANT

to
BRACKET_C
SEMICOLON
IF
BRACKET_O

is_memory_migrate
BRACKET_O

cs
BRACKET_C
BRACKET_C

cpuset_migrate_mm
BRACKET_O

mm
COMMA
AMPERSANT

from
COMMA
AMPERSANT

to
BRACKET_C
SEMICOLON

mmput
BRACKET_O

mm
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

put_task_struct
BRACKET_O

tsk
BRACKET_C
SEMICOLON

synchronize_rcu
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_dec_and_test
BRACKET_O
AMPERSANT

oldcs
MINUS
GREATER

count
BRACKET_C
BRACKET_C

check_for_release
BRACKET_O

oldcs
COMMA

ppathbuf
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

typedef

enum
CURLY_BRACKET_O

FILE_ROOT
COMMA

FILE_DIR
COMMA

FILE_MEMORY_MIGRATE
COMMA

FILE_CPULIST
COMMA

FILE_MEMLIST
COMMA

FILE_CPU_EXCLUSIVE
COMMA

FILE_MEM_EXCLUSIVE
COMMA

FILE_NOTIFY_ON_RELEASE
COMMA

FILE_MEMORY_PRESSURE_ENABLED
COMMA

FILE_MEMORY_PRESSURE
COMMA

FILE_SPREAD_PAGE
COMMA

FILE_SPREAD_SLAB
COMMA

FILE_TASKLIST
COMMA
CURLY_BRACKET_C

cpuset_filetype_t
SEMICOLON

static

ssize_t

cpuset_common_file_write
BRACKET_O
STRUCT

file
MULT

file
COMMA
CONST
TYPE_CHAR

__user
MULT

userbuf
COMMA

size_t

nbytes
COMMA

loff_t
MULT

unused_ppos
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpuset
MULT

cs
OP_ASSIGNMENT

__d_cs
BRACKET_O

file
MINUS
GREATER

f_path
DOT

dentry
MINUS
GREATER

d_parent
BRACKET_C
SEMICOLON
STRUCT

cftype
MULT

cft
OP_ASSIGNMENT

__d_cft
BRACKET_O

file
MINUS
GREATER

f_path
DOT

dentry
BRACKET_C
SEMICOLON

cpuset_filetype_t

type
OP_ASSIGNMENT

cft
MINUS
GREATER

private
SEMICOLON
TYPE_CHAR
MULT

buffer
SEMICOLON
TYPE_CHAR
MULT

pathbuf
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_INT

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

nbytes
GREATER
NUMBER
PLUS
NUMBER
MULT

max
BRACKET_O

NR_CPUS
COMMA

MAX_NUMNODES
BRACKET_C
BRACKET_C

return
MINUS

E2BIG
SEMICOLON
IF
BRACKET_O
BRACKET_O

buffer
OP_ASSIGNMENT

kmalloc
BRACKET_O

nbytes
PLUS
NUMBER
COMMA

GFP_KERNEL
BRACKET_C
BRACKET_C
EQ
NUMBER
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O

buffer
COMMA

userbuf
COMMA

nbytes
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

retval
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

goto

out1
SEMICOLON
CURLY_BRACKET_C

buffer
CORNER_BRACKET_O

nbytes
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

is_removed
BRACKET_O

cs
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

retval
OP_ASSIGNMENT
MINUS

ENODEV
SEMICOLON

goto

out2
SEMICOLON
CURLY_BRACKET_C
SWITCH
BRACKET_O

type
BRACKET_C
CURLY_BRACKET_O

case

FILE_CPULIST
COLON

retval
OP_ASSIGNMENT

update_cpumask
BRACKET_O

cs
COMMA

buffer
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FILE_MEMLIST
COLON

retval
OP_ASSIGNMENT

update_nodemask
BRACKET_O

cs
COMMA

buffer
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FILE_CPU_EXCLUSIVE
COLON

retval
OP_ASSIGNMENT

update_flag
BRACKET_O

CS_CPU_EXCLUSIVE
COMMA

cs
COMMA

buffer
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FILE_MEM_EXCLUSIVE
COLON

retval
OP_ASSIGNMENT

update_flag
BRACKET_O

CS_MEM_EXCLUSIVE
COMMA

cs
COMMA

buffer
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FILE_NOTIFY_ON_RELEASE
COLON

retval
OP_ASSIGNMENT

update_flag
BRACKET_O

CS_NOTIFY_ON_RELEASE
COMMA

cs
COMMA

buffer
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FILE_MEMORY_MIGRATE
COLON

retval
OP_ASSIGNMENT

update_flag
BRACKET_O

CS_MEMORY_MIGRATE
COMMA

cs
COMMA

buffer
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FILE_MEMORY_PRESSURE_ENABLED
COLON

retval
OP_ASSIGNMENT

update_memory_pressure_enabled
BRACKET_O

cs
COMMA

buffer
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FILE_MEMORY_PRESSURE
COLON

retval
OP_ASSIGNMENT
MINUS

EACCES
SEMICOLON
BREAK
SEMICOLON

case

FILE_SPREAD_PAGE
COLON

retval
OP_ASSIGNMENT

update_flag
BRACKET_O

CS_SPREAD_PAGE
COMMA

cs
COMMA

buffer
BRACKET_C
SEMICOLON

cs
MINUS
GREATER

mems_generation
OP_ASSIGNMENT

cpuset_mems_generation
PLUS
PLUS
SEMICOLON
BREAK
SEMICOLON

case

FILE_SPREAD_SLAB
COLON

retval
OP_ASSIGNMENT

update_flag
BRACKET_O

CS_SPREAD_SLAB
COMMA

cs
COMMA

buffer
BRACKET_C
SEMICOLON

cs
MINUS
GREATER

mems_generation
OP_ASSIGNMENT

cpuset_mems_generation
PLUS
PLUS
SEMICOLON
BREAK
SEMICOLON

case

FILE_TASKLIST
COLON

retval
OP_ASSIGNMENT

attach_task
BRACKET_O

cs
COMMA

buffer
COMMA
AMPERSANT

pathbuf
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON

retval
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

out2
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

retval
EQ
NUMBER
BRACKET_C

retval
OP_ASSIGNMENT

nbytes
SEMICOLON

out2
COLON

mutex_unlock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

cpuset_release_agent
BRACKET_O

pathbuf
BRACKET_C
SEMICOLON

out1
COLON

kfree
BRACKET_O

buffer
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

cpuset_file_write
BRACKET_O
STRUCT

file
MULT

file
COMMA
CONST
TYPE_CHAR

__user
MULT

buf
COMMA

size_t

nbytes
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

ssize_t

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

cftype
MULT

cft
OP_ASSIGNMENT

__d_cft
BRACKET_O

file
MINUS
GREATER

f_path
DOT

dentry
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cft
BRACKET_C

return
MINUS

ENODEV
SEMICOLON
IF
BRACKET_O

cft
MINUS
GREATER

write
BRACKET_C

retval
OP_ASSIGNMENT

cft
MINUS
GREATER

write
BRACKET_O

file
COMMA

buf
COMMA

nbytes
COMMA

ppos
BRACKET_C
SEMICOLON
ELSE

retval
OP_ASSIGNMENT

cpuset_common_file_write
BRACKET_O

file
COMMA

buf
COMMA

nbytes
COMMA

ppos
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_sprintf_cpulist
BRACKET_O
TYPE_CHAR
MULT

page
COMMA
STRUCT

cpuset
MULT

cs
BRACKET_C
CURLY_BRACKET_O

cpumask_t

mask
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

mask
OP_ASSIGNMENT

cs
MINUS
GREATER

cpus_allowed
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

return

cpulist_scnprintf
BRACKET_O

page
COMMA

PAGE_SIZE
COMMA

mask
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_sprintf_memlist
BRACKET_O
TYPE_CHAR
MULT

page
COMMA
STRUCT

cpuset
MULT

cs
BRACKET_C
CURLY_BRACKET_O

nodemask_t

mask
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

mask
OP_ASSIGNMENT

cs
MINUS
GREATER

mems_allowed
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

return

nodelist_scnprintf
BRACKET_O

page
COMMA

PAGE_SIZE
COMMA

mask
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

cpuset_common_file_read
BRACKET_O
STRUCT

file
MULT

file
COMMA
TYPE_CHAR

__user
MULT

buf
COMMA

size_t

nbytes
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O
STRUCT

cftype
MULT

cft
OP_ASSIGNMENT

__d_cft
BRACKET_O

file
MINUS
GREATER

f_path
DOT

dentry
BRACKET_C
SEMICOLON
STRUCT

cpuset
MULT

cs
OP_ASSIGNMENT

__d_cs
BRACKET_O

file
MINUS
GREATER

f_path
DOT

dentry
MINUS
GREATER

d_parent
BRACKET_C
SEMICOLON

cpuset_filetype_t

type
OP_ASSIGNMENT

cft
MINUS
GREATER

private
SEMICOLON
TYPE_CHAR
MULT

page
SEMICOLON

ssize_t

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_CHAR
MULT

s
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

page
OP_ASSIGNMENT
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

__get_free_page
BRACKET_O

GFP_KERNEL
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

s
OP_ASSIGNMENT

page
SEMICOLON
SWITCH
BRACKET_O

type
BRACKET_C
CURLY_BRACKET_O

case

FILE_CPULIST
COLON

s
ASSIGN_PLUS

cpuset_sprintf_cpulist
BRACKET_O

s
COMMA

cs
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FILE_MEMLIST
COLON

s
ASSIGN_PLUS

cpuset_sprintf_memlist
BRACKET_O

s
COMMA

cs
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FILE_CPU_EXCLUSIVE
COLON
MULT

s
PLUS
PLUS
OP_ASSIGNMENT

is_cpu_exclusive
BRACKET_O

cs
BRACKET_C
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
SEMICOLON
BREAK
SEMICOLON

case

FILE_MEM_EXCLUSIVE
COLON
MULT

s
PLUS
PLUS
OP_ASSIGNMENT

is_mem_exclusive
BRACKET_O

cs
BRACKET_C
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
SEMICOLON
BREAK
SEMICOLON

case

FILE_NOTIFY_ON_RELEASE
COLON
MULT

s
PLUS
PLUS
OP_ASSIGNMENT

notify_on_release
BRACKET_O

cs
BRACKET_C
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
SEMICOLON
BREAK
SEMICOLON

case

FILE_MEMORY_MIGRATE
COLON
MULT

s
PLUS
PLUS
OP_ASSIGNMENT

is_memory_migrate
BRACKET_O

cs
BRACKET_C
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
SEMICOLON
BREAK
SEMICOLON

case

FILE_MEMORY_PRESSURE_ENABLED
COLON
MULT

s
PLUS
PLUS
OP_ASSIGNMENT

cpuset_memory_pressure_enabled
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
SEMICOLON
BREAK
SEMICOLON

case

FILE_MEMORY_PRESSURE
COLON

s
ASSIGN_PLUS

sprintf
BRACKET_O

s
COMMA
STRING
COMMA

fmeter_getrate
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

fmeter
BRACKET_C
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FILE_SPREAD_PAGE
COLON
MULT

s
PLUS
PLUS
OP_ASSIGNMENT

is_spread_page
BRACKET_O

cs
BRACKET_C
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
SEMICOLON
BREAK
SEMICOLON

case

FILE_SPREAD_SLAB
COLON
MULT

s
PLUS
PLUS
OP_ASSIGNMENT

is_spread_slab
BRACKET_O

cs
BRACKET_C
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
SEMICOLON
BREAK
SEMICOLON

default
COLON

retval
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
MULT

s
PLUS
PLUS
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

retval
OP_ASSIGNMENT

simple_read_from_buffer
BRACKET_O

buf
COMMA

nbytes
COMMA

ppos
COMMA

page
COMMA

s
MINUS

page
BRACKET_C
SEMICOLON

out
COLON

free_page
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

page
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

cpuset_file_read
BRACKET_O
STRUCT

file
MULT

file
COMMA
TYPE_CHAR

__user
MULT

buf
COMMA

size_t

nbytes
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

ssize_t

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

cftype
MULT

cft
OP_ASSIGNMENT

__d_cft
BRACKET_O

file
MINUS
GREATER

f_path
DOT

dentry
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cft
BRACKET_C

return
MINUS

ENODEV
SEMICOLON
IF
BRACKET_O

cft
MINUS
GREATER

read
BRACKET_C

retval
OP_ASSIGNMENT

cft
MINUS
GREATER

read
BRACKET_O

file
COMMA

buf
COMMA

nbytes
COMMA

ppos
BRACKET_C
SEMICOLON
ELSE

retval
OP_ASSIGNMENT

cpuset_common_file_read
BRACKET_O

file
COMMA

buf
COMMA

nbytes
COMMA

ppos
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_file_open
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
SEMICOLON
STRUCT

cftype
MULT

cft
SEMICOLON

err
OP_ASSIGNMENT

generic_file_open
BRACKET_O

inode
COMMA

file
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

return

err
SEMICOLON

cft
OP_ASSIGNMENT

__d_cft
BRACKET_O

file
MINUS
GREATER

f_path
DOT

dentry
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cft
BRACKET_C

return
MINUS

ENODEV
SEMICOLON
IF
BRACKET_O

cft
MINUS
GREATER

open
BRACKET_C

err
OP_ASSIGNMENT

cft
MINUS
GREATER

open
BRACKET_O

inode
COMMA

file
BRACKET_C
SEMICOLON
ELSE

err
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_file_release
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
STRUCT

cftype
MULT

cft
OP_ASSIGNMENT

__d_cft
BRACKET_O

file
MINUS
GREATER

f_path
DOT

dentry
BRACKET_C
SEMICOLON
IF
BRACKET_O

cft
MINUS
GREATER

release
BRACKET_C

return

cft
MINUS
GREATER

release
BRACKET_O

inode
COMMA

file
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_rename
BRACKET_O
STRUCT

inode
MULT

old_dir
COMMA
STRUCT

dentry
MULT

old_dentry
COMMA
STRUCT

inode
MULT

new_dir
COMMA
STRUCT

dentry
MULT

new_dentry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

S_ISDIR
BRACKET_O

old_dentry
MINUS
GREATER

d_inode
MINUS
GREATER

i_mode
BRACKET_C
BRACKET_C

return
MINUS

ENOTDIR
SEMICOLON
IF
BRACKET_O

new_dentry
MINUS
GREATER

d_inode
BRACKET_C

return
MINUS

EEXIST
SEMICOLON
IF
BRACKET_O

old_dir
NOT_EQ

new_dir
BRACKET_C

return
MINUS

EIO
SEMICOLON

return

simple_rename
BRACKET_O

old_dir
COMMA

old_dentry
COMMA

new_dir
COMMA

new_dentry
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

file_operations

cpuset_file_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

read
OP_ASSIGNMENT

cpuset_file_read
COMMA
DOT

write
OP_ASSIGNMENT

cpuset_file_write
COMMA
DOT

llseek
OP_ASSIGNMENT

generic_file_llseek
COMMA
DOT

open
OP_ASSIGNMENT

cpuset_file_open
COMMA
DOT

release
OP_ASSIGNMENT

cpuset_file_release
COMMA
CURLY_BRACKET_C
SEMICOLON

static
CONST
STRUCT

inode_operations

cpuset_dir_inode_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

lookup
OP_ASSIGNMENT

simple_lookup
COMMA
DOT

mkdir
OP_ASSIGNMENT

cpuset_mkdir
COMMA
DOT

rmdir
OP_ASSIGNMENT

cpuset_rmdir
COMMA
DOT

rename
OP_ASSIGNMENT

cpuset_rename
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

cpuset_create_file
BRACKET_O
STRUCT

dentry
MULT

dentry
COMMA
TYPE_INT

mode
BRACKET_C
CURLY_BRACKET_O
STRUCT

inode
MULT

inode
SEMICOLON
IF
BRACKET_O
NOT

dentry
BRACKET_C

return
MINUS

ENOENT
SEMICOLON
IF
BRACKET_O

dentry
MINUS
GREATER

d_inode
BRACKET_C

return
MINUS

EEXIST
SEMICOLON

inode
OP_ASSIGNMENT

cpuset_new_inode
BRACKET_O

mode
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

inode
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON
IF
BRACKET_O

S_ISDIR
BRACKET_O

mode
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

inode
MINUS
GREATER

i_op
OP_ASSIGNMENT
AMPERSANT

cpuset_dir_inode_operations
SEMICOLON

inode
MINUS
GREATER

i_fop
OP_ASSIGNMENT
AMPERSANT

simple_dir_operations
SEMICOLON

inc_nlink
BRACKET_O

inode
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

S_ISREG
BRACKET_O

mode
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

inode
MINUS
GREATER

i_size
OP_ASSIGNMENT
NUMBER
SEMICOLON

inode
MINUS
GREATER

i_fop
OP_ASSIGNMENT
AMPERSANT

cpuset_file_operations
SEMICOLON
CURLY_BRACKET_C

d_instantiate
BRACKET_O

dentry
COMMA

inode
BRACKET_C
SEMICOLON

dget
BRACKET_O

dentry
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_create_dir
BRACKET_O
STRUCT

cpuset
MULT

cs
COMMA
CONST
TYPE_CHAR
MULT

name
COMMA
TYPE_INT

mode
BRACKET_C
CURLY_BRACKET_O
STRUCT

dentry
MULT

dentry
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

dentry
MULT

parent
SEMICOLON
TYPE_INT

error
OP_ASSIGNMENT
NUMBER
SEMICOLON

parent
OP_ASSIGNMENT

cs
MINUS
GREATER

parent
MINUS
GREATER

dentry
SEMICOLON

dentry
OP_ASSIGNMENT

cpuset_get_dentry
BRACKET_O

parent
COMMA

name
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

dentry
BRACKET_C
BRACKET_C

return

PTR_ERR
BRACKET_O

dentry
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

cpuset_create_file
BRACKET_O

dentry
COMMA

S_IFDIR
LOGICAL_OR

mode
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
BRACKET_C
CURLY_BRACKET_O

dentry
MINUS
GREATER

d_fsdata
OP_ASSIGNMENT

cs
SEMICOLON

inc_nlink
BRACKET_O

parent
MINUS
GREATER

d_inode
BRACKET_C
SEMICOLON

cs
MINUS
GREATER

dentry
OP_ASSIGNMENT

dentry
SEMICOLON
CURLY_BRACKET_C

dput
BRACKET_O

dentry
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_add_file
BRACKET_O
STRUCT

dentry
MULT

dir
COMMA
CONST
STRUCT

cftype
MULT

cft
BRACKET_C
CURLY_BRACKET_O
STRUCT

dentry
MULT

dentry
SEMICOLON
TYPE_INT

error
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

dir
MINUS
GREATER

d_inode
MINUS
GREATER

i_mutex
BRACKET_C
SEMICOLON

dentry
OP_ASSIGNMENT

cpuset_get_dentry
BRACKET_O

dir
COMMA

cft
MINUS
GREATER

name
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

IS_ERR
BRACKET_O

dentry
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT

cpuset_create_file
BRACKET_O

dentry
COMMA
NUMBER
LOGICAL_OR

S_IFREG
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
BRACKET_C

dentry
MINUS
GREATER

d_fsdata
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

cft
SEMICOLON

dput
BRACKET_O

dentry
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

error
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

dentry
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

dir
MINUS
GREATER

d_inode
MINUS
GREATER

i_mutex
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C
STRUCT

ctr_struct
CURLY_BRACKET_O
TYPE_CHAR
MULT

buf
SEMICOLON
TYPE_INT

bufsz
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

pid_array_load
BRACKET_O

pid_t
MULT

pidarray
COMMA
TYPE_INT

npids
COMMA
STRUCT

cpuset
MULT

cs
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

n
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

task_struct
MULT

g
COMMA
MULT

p
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

do_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

cpuset
EQ

cs
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

n
EQ

npids
BRACKET_C
BRACKET_C

goto

array_full
SEMICOLON

pidarray
CORNER_BRACKET_O

n
PLUS
PLUS
CORNER_BRACKET_C
OP_ASSIGNMENT

p
MINUS
GREATER

pid
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

while_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
SEMICOLON

array_full
COLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

n
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cmppid
BRACKET_O
CONST

void
MULT

a
COMMA
CONST

void
MULT

b
BRACKET_C
CURLY_BRACKET_O

return
MULT
BRACKET_O

pid_t
MULT
BRACKET_C

a
MINUS
MULT
BRACKET_O

pid_t
MULT
BRACKET_C

b
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

pid_array_to_buf
BRACKET_O
TYPE_CHAR
MULT

buf
COMMA
TYPE_INT

sz
COMMA

pid_t
MULT

a
COMMA
TYPE_INT

npids
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cnt
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

npids
SEMICOLON

i
PLUS
PLUS
BRACKET_C

cnt
ASSIGN_PLUS

snprintf
BRACKET_O

buf
PLUS

cnt
COMMA

max
BRACKET_O

sz
MINUS

cnt
COMMA
NUMBER
BRACKET_C
COMMA
STRING
COMMA

a
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

return

cnt
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_tasks_open
BRACKET_O
STRUCT

inode
MULT

unused
COMMA
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpuset
MULT

cs
OP_ASSIGNMENT

__d_cs
BRACKET_O

file
MINUS
GREATER

f_path
DOT

dentry
MINUS
GREATER

d_parent
BRACKET_C
SEMICOLON
STRUCT

ctr_struct
MULT

ctr
SEMICOLON

pid_t
MULT

pidarray
SEMICOLON
TYPE_INT

npids
SEMICOLON
TYPE_CHAR

c
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

file
MINUS
GREATER

f_mode
AMPERSANT

FMODE_READ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

ctr
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

ctr
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ctr
BRACKET_C

goto

err0
SEMICOLON

npids
OP_ASSIGNMENT

atomic_read
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

count
BRACKET_C
SEMICOLON

pidarray
OP_ASSIGNMENT

kmalloc
BRACKET_O

npids
MULT

sizeof
BRACKET_O

pid_t
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

pidarray
BRACKET_C

goto

err1
SEMICOLON

npids
OP_ASSIGNMENT

pid_array_load
BRACKET_O

pidarray
COMMA

npids
COMMA

cs
BRACKET_C
SEMICOLON

sort
BRACKET_O

pidarray
COMMA

npids
COMMA

sizeof
BRACKET_O

pid_t
BRACKET_C
COMMA

cmppid
COMMA

NULL
BRACKET_C
SEMICOLON

ctr
MINUS
GREATER

bufsz
OP_ASSIGNMENT

pid_array_to_buf
BRACKET_O
AMPERSANT

c
COMMA

sizeof
BRACKET_O

c
BRACKET_C
COMMA

pidarray
COMMA

npids
BRACKET_C
PLUS
NUMBER
SEMICOLON

ctr
MINUS
GREATER

buf
OP_ASSIGNMENT

kmalloc
BRACKET_O

ctr
MINUS
GREATER

bufsz
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ctr
MINUS
GREATER

buf
BRACKET_C

goto

err2
SEMICOLON

ctr
MINUS
GREATER

bufsz
OP_ASSIGNMENT

pid_array_to_buf
BRACKET_O

ctr
MINUS
GREATER

buf
COMMA

ctr
MINUS
GREATER

bufsz
COMMA

pidarray
COMMA

npids
BRACKET_C
SEMICOLON

kfree
BRACKET_O

pidarray
BRACKET_C
SEMICOLON

file
MINUS
GREATER

private_data
OP_ASSIGNMENT

ctr
SEMICOLON

return
NUMBER
SEMICOLON

err2
COLON

kfree
BRACKET_O

pidarray
BRACKET_C
SEMICOLON

err1
COLON

kfree
BRACKET_O

ctr
BRACKET_C
SEMICOLON

err0
COLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

cpuset_tasks_read
BRACKET_O
STRUCT

file
MULT

file
COMMA
TYPE_CHAR

__user
MULT

buf
COMMA

size_t

nbytes
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O
STRUCT

ctr_struct
MULT

ctr
OP_ASSIGNMENT

file
MINUS
GREATER

private_data
SEMICOLON

return

simple_read_from_buffer
BRACKET_O

buf
COMMA

nbytes
COMMA

ppos
COMMA

ctr
MINUS
GREATER

buf
COMMA

ctr
MINUS
GREATER

bufsz
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_tasks_release
BRACKET_O
STRUCT

inode
MULT

unused_inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
STRUCT

ctr_struct
MULT

ctr
SEMICOLON
IF
BRACKET_O

file
MINUS
GREATER

f_mode
AMPERSANT

FMODE_READ
BRACKET_C
CURLY_BRACKET_O

ctr
OP_ASSIGNMENT

file
MINUS
GREATER

private_data
SEMICOLON

kfree
BRACKET_O

ctr
MINUS
GREATER

buf
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ctr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

cftype

cft_tasks
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

open
OP_ASSIGNMENT

cpuset_tasks_open
COMMA
DOT

read
OP_ASSIGNMENT

cpuset_tasks_read
COMMA
DOT

release
OP_ASSIGNMENT

cpuset_tasks_release
COMMA
DOT

private
OP_ASSIGNMENT

FILE_TASKLIST
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

cftype

cft_cpus
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

private
OP_ASSIGNMENT

FILE_CPULIST
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

cftype

cft_mems
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

private
OP_ASSIGNMENT

FILE_MEMLIST
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

cftype

cft_cpu_exclusive
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

private
OP_ASSIGNMENT

FILE_CPU_EXCLUSIVE
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

cftype

cft_mem_exclusive
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

private
OP_ASSIGNMENT

FILE_MEM_EXCLUSIVE
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

cftype

cft_notify_on_release
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

private
OP_ASSIGNMENT

FILE_NOTIFY_ON_RELEASE
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

cftype

cft_memory_migrate
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

private
OP_ASSIGNMENT

FILE_MEMORY_MIGRATE
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

cftype

cft_memory_pressure_enabled
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

private
OP_ASSIGNMENT

FILE_MEMORY_PRESSURE_ENABLED
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

cftype

cft_memory_pressure
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

private
OP_ASSIGNMENT

FILE_MEMORY_PRESSURE
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

cftype

cft_spread_page
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

private
OP_ASSIGNMENT

FILE_SPREAD_PAGE
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

cftype

cft_spread_slab
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

private
OP_ASSIGNMENT

FILE_SPREAD_SLAB
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

cpuset_populate_dir
BRACKET_O
STRUCT

dentry
MULT

cs_dentry
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

cpuset_add_file
BRACKET_O

cs_dentry
COMMA
AMPERSANT

cft_cpus
BRACKET_C
BRACKET_C
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

cpuset_add_file
BRACKET_O

cs_dentry
COMMA
AMPERSANT

cft_mems
BRACKET_C
BRACKET_C
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

cpuset_add_file
BRACKET_O

cs_dentry
COMMA
AMPERSANT

cft_cpu_exclusive
BRACKET_C
BRACKET_C
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

cpuset_add_file
BRACKET_O

cs_dentry
COMMA
AMPERSANT

cft_mem_exclusive
BRACKET_C
BRACKET_C
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

cpuset_add_file
BRACKET_O

cs_dentry
COMMA
AMPERSANT

cft_notify_on_release
BRACKET_C
BRACKET_C
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

cpuset_add_file
BRACKET_O

cs_dentry
COMMA
AMPERSANT

cft_memory_migrate
BRACKET_C
BRACKET_C
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

cpuset_add_file
BRACKET_O

cs_dentry
COMMA
AMPERSANT

cft_memory_pressure
BRACKET_C
BRACKET_C
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

cpuset_add_file
BRACKET_O

cs_dentry
COMMA
AMPERSANT

cft_spread_page
BRACKET_C
BRACKET_C
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

cpuset_add_file
BRACKET_O

cs_dentry
COMMA
AMPERSANT

cft_spread_slab
BRACKET_C
BRACKET_C
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

cpuset_add_file
BRACKET_O

cs_dentry
COMMA
AMPERSANT

cft_tasks
BRACKET_C
BRACKET_C
LESS
NUMBER
BRACKET_C

return

err
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_LONG

cpuset_create
BRACKET_O
STRUCT

cpuset
MULT

parent
COMMA
CONST
TYPE_CHAR
MULT

name
COMMA
TYPE_INT

mode
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpuset
MULT

cs
SEMICOLON
TYPE_INT

err
SEMICOLON

cs
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

cs
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cs
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

cpuset_update_task_memory_state
BRACKET_O
BRACKET_C
SEMICOLON

cs
MINUS
GREATER

flags
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

notify_on_release
BRACKET_O

parent
BRACKET_C
BRACKET_C

set_bit
BRACKET_O

CS_NOTIFY_ON_RELEASE
COMMA
AMPERSANT

cs
MINUS
GREATER

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

is_spread_page
BRACKET_O

parent
BRACKET_C
BRACKET_C

set_bit
BRACKET_O

CS_SPREAD_PAGE
COMMA
AMPERSANT

cs
MINUS
GREATER

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

is_spread_slab
BRACKET_O

parent
BRACKET_C
BRACKET_C

set_bit
BRACKET_O

CS_SPREAD_SLAB
COMMA
AMPERSANT

cs
MINUS
GREATER

flags
BRACKET_C
SEMICOLON

cs
MINUS
GREATER

cpus_allowed
OP_ASSIGNMENT

CPU_MASK_NONE
SEMICOLON

cs
MINUS
GREATER

mems_allowed
OP_ASSIGNMENT

NODE_MASK_NONE
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

sibling
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

children
BRACKET_C
SEMICOLON

cs
MINUS
GREATER

mems_generation
OP_ASSIGNMENT

cpuset_mems_generation
PLUS
PLUS
SEMICOLON

fmeter_init
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

fmeter
BRACKET_C
SEMICOLON

cs
MINUS
GREATER

parent
OP_ASSIGNMENT

parent
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

list_add
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

sibling
COMMA
AMPERSANT

cs
MINUS
GREATER

parent
MINUS
GREATER

children
BRACKET_C
SEMICOLON

number_of_cpusets
PLUS
PLUS
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

cpuset_create_dir
BRACKET_O

cs
COMMA

name
COMMA

mode
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C

goto

err
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

cpuset_populate_dir
BRACKET_O

cs
MINUS
GREATER

dentry
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON

err
COLON

list_del
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

sibling
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

kfree
BRACKET_O

cs
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_mkdir
BRACKET_O
STRUCT

inode
MULT

dir
COMMA
STRUCT

dentry
MULT

dentry
COMMA
TYPE_INT

mode
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpuset
MULT

c_parent
OP_ASSIGNMENT

dentry
MINUS
GREATER

d_parent
MINUS
GREATER

d_fsdata
SEMICOLON

return

cpuset_create
BRACKET_O

c_parent
COMMA

dentry
MINUS
GREATER

d_name
DOT

name
COMMA

mode
LOGICAL_OR

S_IFDIR
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_rmdir
BRACKET_O
STRUCT

inode
MULT

unused_dir
COMMA
STRUCT

dentry
MULT

dentry
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpuset
MULT

cs
OP_ASSIGNMENT

dentry
MINUS
GREATER

d_fsdata
SEMICOLON
STRUCT

dentry
MULT

d
SEMICOLON
STRUCT

cpuset
MULT

parent
SEMICOLON
TYPE_CHAR
MULT

pathbuf
OP_ASSIGNMENT

NULL
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

cpuset_update_task_memory_state
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

count
BRACKET_C
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

return
MINUS

EBUSY
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

children
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

return
MINUS

EBUSY
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

is_cpu_exclusive
BRACKET_O

cs
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
OP_ASSIGNMENT

update_flag
BRACKET_O

CS_CPU_EXCLUSIVE
COMMA

cs
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

parent
OP_ASSIGNMENT

cs
MINUS
GREATER

parent
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

set_bit
BRACKET_O

CS_REMOVED
COMMA
AMPERSANT

cs
MINUS
GREATER

flags
BRACKET_C
SEMICOLON

list_del
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

sibling
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

dentry
MINUS
GREATER

d_lock
BRACKET_C
SEMICOLON

d
OP_ASSIGNMENT

dget
BRACKET_O

cs
MINUS
GREATER

dentry
BRACKET_C
SEMICOLON

cs
MINUS
GREATER

dentry
OP_ASSIGNMENT

NULL
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

d
MINUS
GREATER

d_lock
BRACKET_C
SEMICOLON

cpuset_d_remove_dir
BRACKET_O

d
BRACKET_C
SEMICOLON

dput
BRACKET_O

d
BRACKET_C
SEMICOLON

number_of_cpusets
MINUS
MINUS
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

parent
MINUS
GREATER

children
BRACKET_C
BRACKET_C

check_for_release
BRACKET_O

parent
COMMA
AMPERSANT

pathbuf
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

cpuset_release_agent
BRACKET_O

pathbuf
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__init

cpuset_init_early
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON

tsk
MINUS
GREATER

cpuset
OP_ASSIGNMENT
AMPERSANT

top_cpuset
SEMICOLON

tsk
MINUS
GREATER

cpuset
MINUS
GREATER

mems_generation
OP_ASSIGNMENT

cpuset_mems_generation
PLUS
PLUS
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

err
EQ
NUMBER
BRACKET_C

err
OP_ASSIGNMENT

cpuset_add_file
BRACKET_O

root
COMMA
AMPERSANT

cft_memory_pressure_enabled
BRACKET_C
SEMICOLON

out
COLON

return

err
SEMICOLON
CURLY_BRACKET_C

static

void

guarantee_online_cpus_mems_in_subtree
BRACKET_O
CONST
STRUCT

cpuset
MULT

cur
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpuset
MULT

c
SEMICOLON

list_for_each_entry
BRACKET_O

c
COMMA
AMPERSANT

cur
MINUS
GREATER

children
COMMA

sibling
BRACKET_C
CURLY_BRACKET_O

guarantee_online_cpus_mems_in_subtree
BRACKET_O

c
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cpus_empty
BRACKET_O

c
MINUS
GREATER

cpus_allowed
BRACKET_C
BRACKET_C

guarantee_online_cpus
BRACKET_O

c
COMMA
AMPERSANT

c
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

nodes_empty
BRACKET_O

c
MINUS
GREATER

mems_allowed
BRACKET_C
BRACKET_C

guarantee_online_mems
BRACKET_O

c
COMMA
AMPERSANT

c
MINUS
GREATER

mems_allowed
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

common_cpu_mem_hotplug_unplug
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

mutex_lock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

guarantee_online_cpus_mems_in_subtree
BRACKET_O
AMPERSANT

top_cpuset
BRACKET_C
SEMICOLON

top_cpuset
DOT

cpus_allowed
OP_ASSIGNMENT

cpu_online_map
SEMICOLON

top_cpuset
DOT

mems_allowed
OP_ASSIGNMENT

node_online_map
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_handle_cpuhp
BRACKET_O
STRUCT

notifier_block
MULT

nb
COMMA
TYPE_UNSIGNED
TYPE_LONG

phase
COMMA

void
MULT

cpu
BRACKET_C
CURLY_BRACKET_O

common_cpu_mem_hotplug_unplug
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_MEMORY_HOTPLUG

void

cpuset_track_online_nodes
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

common_cpu_mem_hotplug_unplug
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

task_unlock
BRACKET_O

current
BRACKET_C
SEMICOLON
IF
BRACKET_O

notify_on_release
BRACKET_O

cs
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

pathbuf
OP_ASSIGNMENT

NULL
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_dec_and_test
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

count
BRACKET_C
BRACKET_C

check_for_release
BRACKET_O

cs
COMMA
AMPERSANT

pathbuf
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

cpuset_release_agent
BRACKET_O

pathbuf
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

atomic_dec
BRACKET_O
AMPERSANT

cs
MINUS
GREATER

count
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
TYPE_INT

cpuset_zonelist_valid_mems_allowed
BRACKET_O
STRUCT

zonelist
MULT

zl
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

zl
MINUS
GREATER

zones
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

nid
OP_ASSIGNMENT

zone_to_nid
BRACKET_O

zl
MINUS
GREATER

zones
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

node_isset
BRACKET_O

nid
COMMA

current
MINUS
GREATER

mems_allowed
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

cpuset
MULT

nearest_exclusive_ancestor
BRACKET_O
CONST
STRUCT

cpuset
MULT

cs
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O
NOT

is_mem_exclusive
BRACKET_O

cs
BRACKET_C
AND

cs
MINUS
GREATER

parent
BRACKET_C

cs
OP_ASSIGNMENT

cs
MINUS
GREATER

parent
SEMICOLON

return

cs
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__cpuset_zone_allowed_softwall
BRACKET_O
STRUCT

zone
MULT

z
COMMA

gfp_t

gfp_mask
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

node
SEMICOLON
CONST
STRUCT

cpuset
MULT

cs
SEMICOLON
TYPE_INT

allowed
SEMICOLON
IF
BRACKET_O

in_interrupt
BRACKET_O
BRACKET_C
OR
BRACKET_O

gfp_mask
AMPERSANT

__GFP_THISNODE
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

node
OP_ASSIGNMENT

zone_to_nid
BRACKET_O

z
BRACKET_C
SEMICOLON

might_sleep_if
BRACKET_O
NOT
BRACKET_O

gfp_mask
AMPERSANT

__GFP_HARDWALL
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

node_isset
BRACKET_O

node
COMMA

current
MINUS
GREATER

mems_allowed
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

test_thread_flag
BRACKET_O

TIF_MEMDIE
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

gfp_mask
AMPERSANT

__GFP_HARDWALL
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

current
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C

return
NUMBER
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

task_lock
BRACKET_O

current
BRACKET_C
SEMICOLON

cs
OP_ASSIGNMENT

nearest_exclusive_ancestor
BRACKET_O

current
MINUS
GREATER

cpuset
BRACKET_C
SEMICOLON

task_unlock
BRACKET_O

current
BRACKET_C
SEMICOLON

allowed
OP_ASSIGNMENT

node_isset
BRACKET_O

node
COMMA

cs
MINUS
GREATER

mems_allowed
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON

return

allowed
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__cpuset_zone_allowed_hardwall
BRACKET_O
STRUCT

zone
MULT

z
COMMA

gfp_t

gfp_mask
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

node
SEMICOLON
IF
BRACKET_O

in_interrupt
BRACKET_O
BRACKET_C
OR
BRACKET_O

gfp_mask
AMPERSANT

__GFP_THISNODE
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

node
OP_ASSIGNMENT

zone_to_nid
BRACKET_O

z
BRACKET_C
SEMICOLON
IF
BRACKET_O

node_isset
BRACKET_O

node
COMMA

current
MINUS
GREATER

mems_allowed
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

test_thread_flag
BRACKET_O

TIF_MEMDIE
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

cpuset_lock
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

mutex_lock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

cpuset_unlock
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

callback_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

cpuset_mem_spread_node
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

node
SEMICOLON

node
OP_ASSIGNMENT

next_node
BRACKET_O

current
MINUS
GREATER

cpuset_mem_spread_rotor
COMMA

current
MINUS
GREATER

mems_allowed
BRACKET_C
SEMICOLON
IF
BRACKET_O

node
EQ

MAX_NUMNODES
BRACKET_C

node
OP_ASSIGNMENT

first_node
BRACKET_O

current
MINUS
GREATER

mems_allowed
BRACKET_C
SEMICOLON

current
MINUS
GREATER

cpuset_mem_spread_rotor
OP_ASSIGNMENT

node
SEMICOLON

return

node
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

cpuset_mem_spread_node
BRACKET_C
SEMICOLON
TYPE_INT

overlap
OP_ASSIGNMENT
NUMBER
SEMICOLON

task_lock
BRACKET_O

current
BRACKET_C
SEMICOLON
IF
BRACKET_O

current
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C
CURLY_BRACKET_O

task_unlock
BRACKET_O

current
BRACKET_C
SEMICOLON

goto

done
SEMICOLON
CURLY_BRACKET_C

cs1
OP_ASSIGNMENT

nearest_exclusive_ancestor
BRACKET_O

current
MINUS
GREATER

cpuset
BRACKET_C
SEMICOLON

task_unlock
BRACKET_O

current
BRACKET_C
SEMICOLON

task_lock
BRACKET_O
BRACKET_O
STRUCT

task_struct
MULT
BRACKET_C

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C
CURLY_BRACKET_O

task_unlock
BRACKET_O
BRACKET_O
STRUCT

task_struct
MULT
BRACKET_C

p
BRACKET_C
SEMICOLON

goto

done
SEMICOLON
CURLY_BRACKET_C

cs2
OP_ASSIGNMENT

nearest_exclusive_ancestor
BRACKET_O

p
MINUS
GREATER

cpuset
BRACKET_C
SEMICOLON

task_unlock
BRACKET_O
BRACKET_O
STRUCT

task_struct
MULT
BRACKET_C

p
BRACKET_C
SEMICOLON

overlap
OP_ASSIGNMENT

nodes_intersects
BRACKET_O

cs1
MINUS
GREATER

mems_allowed
COMMA

cs2
MINUS
GREATER

mems_allowed
BRACKET_C
SEMICOLON

done
COLON

return

overlap
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

cpuset_memory_pressure_enabled

__read_mostly
SEMICOLON

static
TYPE_INT

proc_cpuset_show
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O
STRUCT

pid
MULT

pid
SEMICOLON
STRUCT

task_struct
MULT

tsk
SEMICOLON
TYPE_CHAR
MULT

buf
SEMICOLON
TYPE_INT

retval
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

buf
OP_ASSIGNMENT

kmalloc
BRACKET_O

PAGE_SIZE
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

buf
BRACKET_C

goto

out
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

pid
OP_ASSIGNMENT

m
MINUS
GREATER

private
SEMICOLON

tsk
OP_ASSIGNMENT

get_pid_task
BRACKET_O

pid
COMMA

PIDTYPE_PID
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tsk
BRACKET_C

goto

out_free
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT

cpuset_path
BRACKET_O

tsk
MINUS
GREATER

cpuset
COMMA

buf
COMMA

PAGE_SIZE
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
LESS
NUMBER
BRACKET_C

goto

out_unlock
SEMICOLON

seq_puts
BRACKET_O

m
COMMA

buf
BRACKET_C
SEMICOLON

seq_putc
BRACKET_O

m
COMMA
QUOTED_CHAR
BRACKET_C
SEMICOLON

out_unlock
COLON

mutex_unlock
BRACKET_O
AMPERSANT

manage_mutex
BRACKET_C
SEMICOLON

put_task_struct
BRACKET_O

tsk
BRACKET_C
SEMICOLON

out_free
COLON

kfree
BRACKET_O

buf
BRACKET_C
SEMICOLON

out
COLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpuset_open
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
STRUCT

pid
MULT

pid
OP_ASSIGNMENT

PROC_I
BRACKET_O

inode
BRACKET_C
MINUS
GREATER

pid
SEMICOLON

return

single_open
BRACKET_O

file
COMMA

proc_cpuset_show
COMMA

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CONST
STRUCT

file_operations

proc_cpuset_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

open
OP_ASSIGNMENT

cpuset_open
COMMA
DOT

read
OP_ASSIGNMENT

seq_read
COMMA
DOT

llseek
OP_ASSIGNMENT

seq_lseek
COMMA
DOT

release
OP_ASSIGNMENT

single_release
COMMA
CURLY_BRACKET_C
SEMICOLON
TYPE_CHAR
MULT

cpuset_task_status_allowed
BRACKET_O
STRUCT

task_struct
MULT

task
COMMA
TYPE_CHAR
MULT

buffer
BRACKET_C
CURLY_BRACKET_O

buffer
ASSIGN_PLUS

sprintf
BRACKET_O

buffer
COMMA
STRING
BRACKET_C
SEMICOLON

buffer
ASSIGN_PLUS

cpumask_scnprintf
BRACKET_O

buffer
COMMA

PAGE_SIZE
COMMA

task
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON

buffer
ASSIGN_PLUS

sprintf
BRACKET_O

buffer
COMMA
STRING
BRACKET_C
SEMICOLON

buffer
ASSIGN_PLUS

sprintf
BRACKET_O

buffer
COMMA
STRING
BRACKET_C
SEMICOLON

buffer
ASSIGN_PLUS

nodemask_scnprintf
BRACKET_O

buffer
COMMA

PAGE_SIZE
COMMA

task
MINUS
GREATER

mems_allowed
BRACKET_C
SEMICOLON

buffer
ASSIGN_PLUS

sprintf
BRACKET_O

buffer
COMMA
STRING
BRACKET_C
SEMICOLON

return

buffer
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
TYPE_INT

delayacct_on

__read_mostly
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

kmem_cache
MULT

delayacct_cache
SEMICOLON

static
TYPE_INT

__init

delayacct_setup_disable
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

delayacct_on
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

delayacct_setup_disable
BRACKET_C
SEMICOLON

void

delayacct_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

delayacct_cache
OP_ASSIGNMENT

KMEM_CACHE
BRACKET_O

task_delay_info
COMMA

SLAB_PANIC
BRACKET_C
SEMICOLON

delayacct_tsk_init
BRACKET_O
AMPERSANT

init_task
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__delayacct_tsk_init
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O

tsk
MINUS
GREATER

delays
OP_ASSIGNMENT

kmem_cache_zalloc
BRACKET_O

delayacct_cache
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

delays
BRACKET_C

spin_lock_init
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

delays
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

delayacct_start
BRACKET_O
STRUCT

timespec
MULT

start
BRACKET_C
CURLY_BRACKET_O

do_posix_clock_monotonic_gettime
BRACKET_O

start
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

delayacct_end
BRACKET_O
STRUCT

timespec
MULT

start
COMMA
STRUCT

timespec
MULT

end
COMMA

u64
MULT

total
COMMA

u32
MULT

count
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

ts
SEMICOLON

s64

ns
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

do_posix_clock_monotonic_gettime
BRACKET_O

end
BRACKET_C
SEMICOLON

ts
OP_ASSIGNMENT

timespec_sub
BRACKET_O
MULT

end
COMMA
MULT

start
BRACKET_C
SEMICOLON

ns
OP_ASSIGNMENT

timespec_to_ns
BRACKET_O
AMPERSANT

ts
BRACKET_C
SEMICOLON
IF
BRACKET_O

ns
LESS
NUMBER
BRACKET_C

return
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

current
MINUS
GREATER

delays
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
MULT

total
ASSIGN_PLUS

ns
SEMICOLON
BRACKET_O
MULT

count
BRACKET_C
PLUS
PLUS
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

current
MINUS
GREATER

delays
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__delayacct_blkio_start
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

delayacct_start
BRACKET_O
AMPERSANT

current
MINUS
GREATER

delays
MINUS
GREATER

blkio_start
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__delayacct_blkio_end
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

current
MINUS
GREATER

delays
MINUS
GREATER

flags
AMPERSANT

DELAYACCT_PF_SWAPIN
BRACKET_C

delayacct_end
BRACKET_O
AMPERSANT

current
MINUS
GREATER

delays
MINUS
GREATER

blkio_start
COMMA
AMPERSANT

current
MINUS
GREATER

delays
MINUS
GREATER

blkio_end
COMMA
AMPERSANT

current
MINUS
GREATER

delays
MINUS
GREATER

swapin_delay
COMMA
AMPERSANT

current
MINUS
GREATER

delays
MINUS
GREATER

swapin_count
BRACKET_C
SEMICOLON
ELSE

delayacct_end
BRACKET_O
AMPERSANT

current
MINUS
GREATER

delays
MINUS
GREATER

blkio_start
COMMA
AMPERSANT

current
MINUS
GREATER

delays
MINUS
GREATER

blkio_end
COMMA
AMPERSANT

current
MINUS
GREATER

delays
MINUS
GREATER

blkio_delay
COMMA
AMPERSANT

current
MINUS
GREATER

delays
MINUS
GREATER

blkio_count
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__delayacct_add_tsk
BRACKET_O
STRUCT

taskstats
MULT

d
COMMA
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O

s64

tmp
SEMICOLON
STRUCT

timespec

ts
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

t1
COMMA

t2
COMMA

t3
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O
NOT

tsk
MINUS
GREATER

delays
BRACKET_C

goto

done
SEMICOLON

tmp
OP_ASSIGNMENT
BRACKET_O

s64
BRACKET_C

d
MINUS
GREATER

cpu_run_real_total
SEMICOLON

cputime_to_timespec
BRACKET_O

tsk
MINUS
GREATER

utime
PLUS

tsk
MINUS
GREATER

stime
COMMA
AMPERSANT

ts
BRACKET_C
SEMICOLON

tmp
ASSIGN_PLUS

timespec_to_ns
BRACKET_O
AMPERSANT

ts
BRACKET_C
SEMICOLON

d
MINUS
GREATER

cpu_run_real_total
OP_ASSIGNMENT
BRACKET_O

tmp
LESS
BRACKET_O

s64
BRACKET_C

d
MINUS
GREATER

cpu_run_real_total
BRACKET_C
QUESTION_MARK
NUMBER
COLON

tmp
SEMICOLON

t1
OP_ASSIGNMENT

tsk
MINUS
GREATER

sched_info
DOT

pcnt
SEMICOLON

t2
OP_ASSIGNMENT

tsk
MINUS
GREATER

sched_info
DOT

run_delay
SEMICOLON

t3
OP_ASSIGNMENT

tsk
MINUS
GREATER

sched_info
DOT

cpu_time
SEMICOLON

d
MINUS
GREATER

cpu_count
ASSIGN_PLUS

t1
SEMICOLON

jiffies_to_timespec
BRACKET_O

t2
COMMA
AMPERSANT

ts
BRACKET_C
SEMICOLON

tmp
OP_ASSIGNMENT
BRACKET_O

s64
BRACKET_C

d
MINUS
GREATER

cpu_delay_total
PLUS

timespec_to_ns
BRACKET_O
AMPERSANT

ts
BRACKET_C
SEMICOLON

d
MINUS
GREATER

cpu_delay_total
OP_ASSIGNMENT
BRACKET_O

tmp
LESS
BRACKET_O

s64
BRACKET_C

d
MINUS
GREATER

cpu_delay_total
BRACKET_C
QUESTION_MARK
NUMBER
COLON

tmp
SEMICOLON

tmp
OP_ASSIGNMENT
BRACKET_O

s64
BRACKET_C

d
MINUS
GREATER

cpu_run_virtual_total
PLUS
BRACKET_O

s64
BRACKET_C

jiffies_to_usecs
BRACKET_O

t3
BRACKET_C
MULT
NUMBER
SEMICOLON

d
MINUS
GREATER

cpu_run_virtual_total
OP_ASSIGNMENT
BRACKET_O

tmp
LESS
BRACKET_O

s64
BRACKET_C

d
MINUS
GREATER

cpu_run_virtual_total
BRACKET_C
QUESTION_MARK
NUMBER
COLON

tmp
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

delays
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

tmp
OP_ASSIGNMENT

d
MINUS
GREATER

blkio_delay_total
PLUS

tsk
MINUS
GREATER

delays
MINUS
GREATER

blkio_delay
SEMICOLON

d
MINUS
GREATER

blkio_delay_total
OP_ASSIGNMENT
BRACKET_O

tmp
LESS

d
MINUS
GREATER

blkio_delay_total
BRACKET_C
QUESTION_MARK
NUMBER
COLON

tmp
SEMICOLON

tmp
OP_ASSIGNMENT

d
MINUS
GREATER

swapin_delay_total
PLUS

tsk
MINUS
GREATER

delays
MINUS
GREATER

swapin_delay
SEMICOLON

d
MINUS
GREATER

swapin_delay_total
OP_ASSIGNMENT
BRACKET_O

tmp
LESS

d
MINUS
GREATER

swapin_delay_total
BRACKET_C
QUESTION_MARK
NUMBER
COLON

tmp
SEMICOLON

d
MINUS
GREATER

blkio_count
ASSIGN_PLUS

tsk
MINUS
GREATER

delays
MINUS
GREATER

blkio_count
SEMICOLON

d
MINUS
GREATER

swapin_count
ASSIGN_PLUS

tsk
MINUS
GREATER

delays
MINUS
GREATER

swapin_count
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

delays
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

done
COLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__u64

__delayacct_blkio_ticks
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O

__u64

ret
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

delays
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

nsec_to_clock_t
BRACKET_O

tsk
MINUS
GREATER

delays
MINUS
GREATER

blkio_delay
PLUS

tsk
MINUS
GREATER

delays
MINUS
GREATER

swapin_delay
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

delays
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static

ATOMIC_NOTIFIER_HEAD
BRACKET_O

die_chain
BRACKET_C
SEMICOLON
TYPE_INT

notify_die
BRACKET_O

enum

die_val

val
COMMA
CONST
TYPE_CHAR
MULT

str
COMMA
STRUCT

pt_regs
MULT

regs
COMMA
TYPE_LONG

err
COMMA
TYPE_INT

trap
COMMA
TYPE_INT

sig
BRACKET_C
CURLY_BRACKET_O
STRUCT

die_args

args
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

regs
OP_ASSIGNMENT

regs
COMMA
DOT

str
OP_ASSIGNMENT

str
COMMA
DOT

err
OP_ASSIGNMENT

err
COMMA
DOT

trapnr
OP_ASSIGNMENT

trap
COMMA
DOT

signr
OP_ASSIGNMENT

sig
COMMA
CURLY_BRACKET_C
SEMICOLON

return

atomic_notifier_call_chain
BRACKET_O
AMPERSANT

die_chain
COMMA

val
COMMA
AMPERSANT

args
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

register_die_notifier
BRACKET_O
STRUCT

notifier_block
MULT

nb
BRACKET_C
CURLY_BRACKET_O

vmalloc_sync_all
BRACKET_O
BRACKET_C
SEMICOLON

return

atomic_notifier_chain_register
BRACKET_O
AMPERSANT

die_chain
COMMA

nb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

register_die_notifier
BRACKET_C
SEMICOLON
TYPE_INT

unregister_die_notifier
BRACKET_O
STRUCT

notifier_block
MULT

nb
BRACKET_C
CURLY_BRACKET_O

return

atomic_notifier_chain_unregister
BRACKET_O
AMPERSANT

die_chain
COMMA

nb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

unregister_die_notifier
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

DEFINE_SPINLOCK
BRACKET_O

dma_spin_lock
BRACKET_C
SEMICOLON
PP_IFDEF

MAX_DMA_CHANNELS
STRUCT

dma_chan
CURLY_BRACKET_O
TYPE_INT

lock
SEMICOLON
CONST
TYPE_CHAR
MULT

device_id
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

dma_chan

dma_chan_busy
CORNER_BRACKET_O

MAX_DMA_CHANNELS
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
NUMBER
COMMA
STRING
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_C
SEMICOLON
TYPE_INT

request_dma
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

dmanr
COMMA
CONST
TYPE_CHAR
MULT

device_id
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

dmanr
GR_EQ

MAX_DMA_CHANNELS
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

xchg
BRACKET_O
AMPERSANT

dma_chan_busy
CORNER_BRACKET_O

dmanr
CORNER_BRACKET_C
DOT

lock
COMMA
NUMBER
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

return
MINUS

EBUSY
SEMICOLON

dma_chan_busy
CORNER_BRACKET_O

dmanr
CORNER_BRACKET_C
DOT

device_id
OP_ASSIGNMENT

device_id
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

free_dma
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

dmanr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

dmanr
GR_EQ

MAX_DMA_CHANNELS
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

dmanr
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

xchg
BRACKET_O
AMPERSANT

dma_chan_busy
CORNER_BRACKET_O

dmanr
CORNER_BRACKET_C
DOT

lock
COMMA
NUMBER
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

dmanr
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ELSE
TYPE_INT

request_dma
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

dmanr
COMMA
CONST
TYPE_CHAR
MULT

device_id
BRACKET_C
CURLY_BRACKET_O

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

void

free_dma
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

dmanr
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_PROC_FS
PP_IFDEF

MAX_DMA_CHANNELS

static
TYPE_INT

proc_dma_show
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

MAX_DMA_CHANNELS
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

dma_chan_busy
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

lock
BRACKET_C
CURLY_BRACKET_O

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

i
COMMA

dma_chan_busy
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

device_id
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static
TYPE_INT

proc_dma_show
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O

seq_puts
BRACKET_O

m
COMMA
STRING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

proc_dma_open
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O

return

single_open
BRACKET_O

file
COMMA

proc_dma_show
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

file_operations

proc_dma_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

open
OP_ASSIGNMENT

proc_dma_open
COMMA
DOT

read
OP_ASSIGNMENT

seq_read
COMMA
DOT

llseek
OP_ASSIGNMENT

seq_lseek
COMMA
DOT

release
OP_ASSIGNMENT

single_release
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__init

proc_dma_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

proc_dir_entry
MULT

e
SEMICOLON

e
OP_ASSIGNMENT

create_proc_entry
BRACKET_O
STRING
COMMA
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

e
BRACKET_C

e
MINUS
GREATER

proc_fops
OP_ASSIGNMENT
AMPERSANT

proc_dma_operations
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__initcall
BRACKET_O

proc_dma_init
BRACKET_C
SEMICOLON
PP_ENDIF

EXPORT_SYMBOL
BRACKET_O

request_dma
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

free_dma
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

dma_spin_lock
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static

void

default_handler
BRACKET_O
TYPE_INT
COMMA
STRUCT

pt_regs
MULT
BRACKET_C
SEMICOLON

static
STRUCT

exec_domain
MULT

exec_domains
OP_ASSIGNMENT
AMPERSANT

default_exec_domain
SEMICOLON

static

DEFINE_RWLOCK
BRACKET_O

exec_domains_lock
BRACKET_C
SEMICOLON

static

u_long

ident_map
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
CURLY_BRACKET_C
SEMICOLON
STRUCT

exec_domain

default_exec_domain
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

handler
OP_ASSIGNMENT

default_handler
COMMA
DOT

pers_low
OP_ASSIGNMENT
NUMBER
COMMA
DOT

pers_high
OP_ASSIGNMENT
NUMBER
COMMA
DOT

signal_map
OP_ASSIGNMENT

ident_map
COMMA
DOT

signal_invmap
OP_ASSIGNMENT

ident_map
COMMA
CURLY_BRACKET_C
SEMICOLON

static

void

default_handler
BRACKET_O
TYPE_INT

segment
COMMA
STRUCT

pt_regs
MULT

regp
BRACKET_C
CURLY_BRACKET_O

set_personality
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

current_thread_info
BRACKET_O
BRACKET_C
MINUS
GREATER

exec_domain
MINUS
GREATER

handler
NOT_EQ

default_handler
BRACKET_C

current_thread_info
BRACKET_O
BRACKET_C
MINUS
GREATER

exec_domain
MINUS
GREATER

handler
BRACKET_O

segment
COMMA

regp
BRACKET_C
SEMICOLON
ELSE

send_sig
BRACKET_O

SIGSEGV
COMMA

current
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

exec_domain
MULT

lookup_exec_domain
BRACKET_O

u_long

personality
BRACKET_C
CURLY_BRACKET_O
STRUCT

exec_domain
MULT

ep
SEMICOLON

u_long

pers
OP_ASSIGNMENT

personality
BRACKET_O

personality
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

exec_domains_lock
BRACKET_C
SEMICOLON
FOR
BRACKET_O

ep
OP_ASSIGNMENT

exec_domains
SEMICOLON

ep
SEMICOLON

ep
OP_ASSIGNMENT

ep
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

pers
GR_EQ

ep
MINUS
GREATER

pers_low
AND

pers
LE_EQ

ep
MINUS
GREATER

pers_high
BRACKET_C
IF
BRACKET_O

try_module_get
BRACKET_O

ep
MINUS
GREATER

module
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_KMOD

read_unlock
BRACKET_O
AMPERSANT

exec_domains_lock
BRACKET_C
SEMICOLON

request_module
BRACKET_O
STRING
COMMA

pers
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

exec_domains_lock
BRACKET_C
SEMICOLON
FOR
BRACKET_O

ep
OP_ASSIGNMENT

exec_domains
SEMICOLON

ep
SEMICOLON

ep
OP_ASSIGNMENT

ep
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

pers
GR_EQ

ep
MINUS
GREATER

pers_low
AND

pers
LE_EQ

ep
MINUS
GREATER

pers_high
BRACKET_C
IF
BRACKET_O

try_module_get
BRACKET_O

ep
MINUS
GREATER

module
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

ep
OP_ASSIGNMENT
AMPERSANT

default_exec_domain
SEMICOLON

out
COLON

read_unlock
BRACKET_O
AMPERSANT

exec_domains_lock
BRACKET_C
SEMICOLON

return
BRACKET_O

ep
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

register_exec_domain
BRACKET_O
STRUCT

exec_domain
MULT

ep
BRACKET_C
CURLY_BRACKET_O
STRUCT

exec_domain
MULT

tmp
SEMICOLON
TYPE_INT

err
OP_ASSIGNMENT
MINUS

EBUSY
SEMICOLON
IF
BRACKET_O

ep
EQ

NULL
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

ep
MINUS
GREATER

next
NOT_EQ

NULL
BRACKET_C

return
MINUS

EBUSY
SEMICOLON

write_lock
BRACKET_O
AMPERSANT

exec_domains_lock
BRACKET_C
SEMICOLON
FOR
BRACKET_O

tmp
OP_ASSIGNMENT

exec_domains
SEMICOLON

tmp
SEMICOLON

tmp
OP_ASSIGNMENT

tmp
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

tmp
EQ

ep
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

ep
MINUS
GREATER

next
OP_ASSIGNMENT

exec_domains
SEMICOLON

exec_domains
OP_ASSIGNMENT

ep
SEMICOLON

err
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON

write_unlock
BRACKET_O
AMPERSANT

exec_domains_lock
BRACKET_C
SEMICOLON

return
BRACKET_O

err
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

unregister_exec_domain
BRACKET_O
STRUCT

exec_domain
MULT

ep
BRACKET_C
CURLY_BRACKET_O
STRUCT

exec_domain
MULT
MULT

epp
SEMICOLON

epp
OP_ASSIGNMENT
AMPERSANT

exec_domains
SEMICOLON

write_lock
BRACKET_O
AMPERSANT

exec_domains_lock
BRACKET_C
SEMICOLON
FOR
BRACKET_O

epp
OP_ASSIGNMENT
AMPERSANT

exec_domains
SEMICOLON
MULT

epp
SEMICOLON

epp
OP_ASSIGNMENT
AMPERSANT
BRACKET_O
MULT

epp
BRACKET_C
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

ep
EQ
MULT

epp
BRACKET_C

goto

unregister
SEMICOLON
CURLY_BRACKET_C

write_unlock
BRACKET_O
AMPERSANT

exec_domains_lock
BRACKET_C
SEMICOLON

return
MINUS

EINVAL
SEMICOLON

unregister
COLON
MULT

epp
OP_ASSIGNMENT

ep
MINUS
GREATER

next
SEMICOLON

ep
MINUS
GREATER

next
OP_ASSIGNMENT

NULL
SEMICOLON

write_unlock
BRACKET_O
AMPERSANT

exec_domains_lock
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__set_personality
BRACKET_O

u_long

personality
BRACKET_C
CURLY_BRACKET_O
STRUCT

exec_domain
MULT

ep
COMMA
MULT

oep
SEMICOLON

ep
OP_ASSIGNMENT

lookup_exec_domain
BRACKET_O

personality
BRACKET_C
SEMICOLON
IF
BRACKET_O

ep
EQ

current_thread_info
BRACKET_O
BRACKET_C
MINUS
GREATER

exec_domain
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

personality
OP_ASSIGNMENT

personality
SEMICOLON

module_put
BRACKET_O

ep
MINUS
GREATER

module
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

current
MINUS
GREATER

fs
MINUS
GREATER

count
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
STRUCT

fs_struct
MULT

fsp
COMMA
MULT

ofsp
SEMICOLON

fsp
OP_ASSIGNMENT

copy_fs_struct
BRACKET_O

current
MINUS
GREATER

fs
BRACKET_C
SEMICOLON
IF
BRACKET_O

fsp
EQ

NULL
BRACKET_C
CURLY_BRACKET_O

module_put
BRACKET_O

ep
MINUS
GREATER

module
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

task_lock
BRACKET_O

current
BRACKET_C
SEMICOLON

ofsp
OP_ASSIGNMENT

current
MINUS
GREATER

fs
SEMICOLON

current
MINUS
GREATER

fs
OP_ASSIGNMENT

fsp
SEMICOLON

task_unlock
BRACKET_O

current
BRACKET_C
SEMICOLON

put_fs_struct
BRACKET_O

ofsp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

personality
OP_ASSIGNMENT

personality
SEMICOLON

oep
OP_ASSIGNMENT

current_thread_info
BRACKET_O
BRACKET_C
MINUS
GREATER

exec_domain
SEMICOLON

current_thread_info
BRACKET_O
BRACKET_C
MINUS
GREATER

exec_domain
OP_ASSIGNMENT

ep
SEMICOLON

set_fs_altroot
BRACKET_O
BRACKET_C
SEMICOLON

module_put
BRACKET_O

oep
MINUS
GREATER

module
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

get_exec_domain_list
BRACKET_O
TYPE_CHAR
MULT

page
BRACKET_C
CURLY_BRACKET_O
STRUCT

exec_domain
MULT

ep
SEMICOLON
TYPE_INT

len
OP_ASSIGNMENT
NUMBER
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

exec_domains_lock
BRACKET_C
SEMICOLON
FOR
BRACKET_O

ep
OP_ASSIGNMENT

exec_domains
SEMICOLON

ep
AND

len
LESS

PAGE_SIZE
MINUS
NUMBER
SEMICOLON

ep
OP_ASSIGNMENT

ep
MINUS
GREATER

next
BRACKET_C

len
ASSIGN_PLUS

sprintf
BRACKET_O

page
PLUS

len
COMMA
STRING
COMMA

ep
MINUS
GREATER

pers_low
COMMA

ep
MINUS
GREATER

pers_high
COMMA

ep
MINUS
GREATER

name
COMMA

module_name
BRACKET_O

ep
MINUS
GREATER

module
BRACKET_C
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

exec_domains_lock
BRACKET_C
SEMICOLON

return
BRACKET_O

len
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_personality
BRACKET_O

u_long

personality
BRACKET_C
CURLY_BRACKET_O

u_long

old
OP_ASSIGNMENT

current
MINUS
GREATER

personality
SEMICOLON
IF
BRACKET_O

personality
NOT_EQ
NUMBER

xffffffff
BRACKET_C
CURLY_BRACKET_O

set_personality
BRACKET_O

personality
BRACKET_C
SEMICOLON
IF
BRACKET_O

current
MINUS
GREATER

personality
NOT_EQ

personality
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

return
BRACKET_O
TYPE_LONG
BRACKET_C

old
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

register_exec_domain
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

unregister_exec_domain
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

__set_personality
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_KDB
PP_INCLUDE
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

extern

void

sem_exit
BRACKET_O

void
BRACKET_C
SEMICOLON

static

void

exit_mm
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
SEMICOLON

static

void

__unhash_process
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

nr_threads
MINUS
MINUS
SEMICOLON

detach_pid
BRACKET_O

p
COMMA

PIDTYPE_PID
BRACKET_C
SEMICOLON
IF
BRACKET_O

thread_group_leader
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

detach_pid
BRACKET_O

p
COMMA

PIDTYPE_PGID
BRACKET_C
SEMICOLON

detach_pid
BRACKET_O

p
COMMA

PIDTYPE_SID
BRACKET_C
SEMICOLON

list_del_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

tasks
BRACKET_C
SEMICOLON

__get_cpu_var
BRACKET_O

process_counts
BRACKET_C
MINUS
MINUS
SEMICOLON
CURLY_BRACKET_C

list_del_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

thread_group
BRACKET_C
SEMICOLON

remove_parent
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

__exit_signal
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

signal_struct
MULT

sig
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
SEMICOLON
STRUCT

sighand_struct
MULT

sighand
SEMICOLON

BUG_ON
BRACKET_O
NOT

sig
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

atomic_read
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

count
BRACKET_C
BRACKET_C
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

sighand
OP_ASSIGNMENT

rcu_dereference
BRACKET_O

tsk
MINUS
GREATER

sighand
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

signalfd_detach_locked
BRACKET_O

tsk
BRACKET_C
SEMICOLON

posix_cpu_timers_exit
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_dec_and_test
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

count
BRACKET_C
BRACKET_C

posix_cpu_timers_exit_group
BRACKET_O

tsk
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

sig
MINUS
GREATER

group_exit_task
AND

atomic_read
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

count
BRACKET_C
EQ

sig
MINUS
GREATER

notify_count
BRACKET_C
CURLY_BRACKET_O

wake_up_process
BRACKET_O

sig
MINUS
GREATER

group_exit_task
BRACKET_C
SEMICOLON

sig
MINUS
GREATER

group_exit_task
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

tsk
EQ

sig
MINUS
GREATER

curr_target
BRACKET_C

sig
MINUS
GREATER

curr_target
OP_ASSIGNMENT

next_thread
BRACKET_O

tsk
BRACKET_C
SEMICOLON

sig
MINUS
GREATER

utime
OP_ASSIGNMENT

cputime_add
BRACKET_O

sig
MINUS
GREATER

utime
COMMA

tsk
MINUS
GREATER

utime
BRACKET_C
SEMICOLON

sig
MINUS
GREATER

stime
OP_ASSIGNMENT

cputime_add
BRACKET_O

sig
MINUS
GREATER

stime
COMMA

tsk
MINUS
GREATER

stime
BRACKET_C
SEMICOLON

sig
MINUS
GREATER

min_flt
ASSIGN_PLUS

tsk
MINUS
GREATER

min_flt
SEMICOLON

sig
MINUS
GREATER

maj_flt
ASSIGN_PLUS

tsk
MINUS
GREATER

maj_flt
SEMICOLON

sig
MINUS
GREATER

nvcsw
ASSIGN_PLUS

tsk
MINUS
GREATER

nvcsw
SEMICOLON

sig
MINUS
GREATER

nivcsw
ASSIGN_PLUS

tsk
MINUS
GREATER

nivcsw
SEMICOLON

sig
MINUS
GREATER

sched_time
ASSIGN_PLUS

tsk
MINUS
GREATER

sched_time
SEMICOLON

sig
MINUS
GREATER

inblock
ASSIGN_PLUS

task_io_get_inblock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

sig
MINUS
GREATER

oublock
ASSIGN_PLUS

task_io_get_oublock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

sig
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

__unhash_process
BRACKET_O

tsk
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

signal
OP_ASSIGNMENT

NULL
SEMICOLON

tsk
MINUS
GREATER

sighand
OP_ASSIGNMENT

NULL
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

__cleanup_sighand
BRACKET_O

sighand
BRACKET_C
SEMICOLON

clear_tsk_thread_flag
BRACKET_O

tsk
COMMA

TIF_SIGPENDING
BRACKET_C
SEMICOLON

flush_sigqueue
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

pending
BRACKET_C
SEMICOLON
IF
BRACKET_O

sig
BRACKET_C
CURLY_BRACKET_O

flush_sigqueue
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

shared_pending
BRACKET_C
SEMICOLON

taskstats_tgid_free
BRACKET_O

sig
BRACKET_C
SEMICOLON

__cleanup_signal
BRACKET_O

sig
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

delayed_put_task_struct
BRACKET_O
STRUCT

rcu_head
MULT

rhp
BRACKET_C
CURLY_BRACKET_O

put_task_struct
BRACKET_O

container_of
BRACKET_O

rhp
COMMA
STRUCT

task_struct
COMMA

rcu
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

release_task
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

leader
SEMICOLON
TYPE_INT

zap_leader
SEMICOLON

repeat
COLON

atomic_dec
BRACKET_O
AMPERSANT

p
MINUS
GREATER

user
MINUS
GREATER

processes
BRACKET_C
SEMICOLON

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

ptrace_unlink
BRACKET_O

p
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

p
MINUS
GREATER

ptrace_list
BRACKET_C
OR
NOT

list_empty
BRACKET_O
AMPERSANT

p
MINUS
GREATER

ptrace_children
BRACKET_C
BRACKET_C
SEMICOLON

__exit_signal
BRACKET_O

p
BRACKET_C
SEMICOLON

zap_leader
OP_ASSIGNMENT
NUMBER
SEMICOLON

leader
OP_ASSIGNMENT

p
MINUS
GREATER

group_leader
SEMICOLON
IF
BRACKET_O

leader
NOT_EQ

p
AND

thread_group_empty
BRACKET_O

leader
BRACKET_C
AND

leader
MINUS
GREATER

exit_state
EQ

EXIT_ZOMBIE
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

leader
MINUS
GREATER

exit_signal
EQ
MINUS
NUMBER
BRACKET_C
SEMICOLON

do_notify_parent
BRACKET_O

leader
COMMA

leader
MINUS
GREATER

exit_signal
BRACKET_C
SEMICOLON

zap_leader
OP_ASSIGNMENT
BRACKET_O

leader
MINUS
GREATER

exit_signal
EQ
MINUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

sched_exit
BRACKET_O

p
BRACKET_C
SEMICOLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

proc_flush_task
BRACKET_O

p
BRACKET_C
SEMICOLON

release_thread
BRACKET_O

p
BRACKET_C
SEMICOLON

call_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

rcu
COMMA

delayed_put_task_struct
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

leader
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

zap_leader
BRACKET_C
BRACKET_C

goto

repeat
SEMICOLON
CURLY_BRACKET_C
STRUCT

pid
MULT

session_of_pgrp
BRACKET_O
STRUCT

pid
MULT

pgrp
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON
STRUCT

pid
MULT

sid
OP_ASSIGNMENT

NULL
SEMICOLON

p
OP_ASSIGNMENT

pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
EQ

NULL
BRACKET_C

p
OP_ASSIGNMENT

pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PID
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
NOT_EQ

NULL
BRACKET_C

sid
OP_ASSIGNMENT

task_session
BRACKET_O

p
BRACKET_C
SEMICOLON

return

sid
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

will_become_orphaned_pgrp
BRACKET_O
STRUCT

pid
MULT

pgrp
COMMA
STRUCT

task_struct
MULT

ignored_task
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

do_each_pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
COMMA

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
EQ

ignored_task
OR

p
MINUS
GREATER

exit_state
OR

is_init
BRACKET_O

p
MINUS
GREATER

real_parent
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

task_pgrp
BRACKET_O

p
MINUS
GREATER

real_parent
BRACKET_C
NOT_EQ

pgrp
AND

task_session
BRACKET_O

p
MINUS
GREATER

real_parent
BRACKET_C
EQ

task_session
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

while_each_pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
COMMA

p
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

is_current_pgrp_orphaned
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT

will_become_orphaned_pgrp
BRACKET_O

task_pgrp
BRACKET_O

current
BRACKET_C
COMMA

NULL
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

has_stopped_jobs
BRACKET_O
STRUCT

pid
MULT

pgrp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON

do_each_pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
COMMA

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

state
NOT_EQ

TASK_STOPPED
BRACKET_C
CONTINUE
SEMICOLON

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

while_each_pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
COMMA

p
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static

void

reparent_to_kthreadd
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

ptrace_unlink
BRACKET_O

current
BRACKET_C
SEMICOLON

remove_parent
BRACKET_O

current
BRACKET_C
SEMICOLON

current
MINUS
GREATER

real_parent
OP_ASSIGNMENT

current
MINUS
GREATER

parent
OP_ASSIGNMENT

kthreadd_task
SEMICOLON

add_parent
BRACKET_O

current
BRACKET_C
SEMICOLON

current
MINUS
GREATER

exit_signal
OP_ASSIGNMENT

SIGCHLD
SEMICOLON
IF
BRACKET_O
NOT

has_rt_policy
BRACKET_O

current
BRACKET_C
AND
BRACKET_O

task_nice
BRACKET_O

current
BRACKET_C
LESS
NUMBER
BRACKET_C
BRACKET_C

set_user_nice
BRACKET_O

current
COMMA
NUMBER
BRACKET_C
SEMICOLON

security_task_reparent_to_init
BRACKET_O

current
BRACKET_C
SEMICOLON

memcpy
BRACKET_O

current
MINUS
GREATER

signal
MINUS
GREATER

rlim
COMMA

init_task
DOT

signal
MINUS
GREATER

rlim
COMMA

sizeof
BRACKET_O

current
MINUS
GREATER

signal
MINUS
GREATER

rlim
BRACKET_C
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT
BRACKET_O

INIT_USER
MINUS
GREATER

__count
BRACKET_C
BRACKET_C
SEMICOLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

switch_uid
BRACKET_O

INIT_USER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__set_special_pids
BRACKET_O

pid_t

session
COMMA

pid_t

pgrp
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

curr
OP_ASSIGNMENT

current
MINUS
GREATER

group_leader
SEMICOLON
IF
BRACKET_O

process_session
BRACKET_O

curr
BRACKET_C
NOT_EQ

session
BRACKET_C
CURLY_BRACKET_O

detach_pid
BRACKET_O

curr
COMMA

PIDTYPE_SID
BRACKET_C
SEMICOLON

set_signal_session
BRACKET_O

curr
MINUS
GREATER

signal
COMMA

session
BRACKET_C
SEMICOLON

attach_pid
BRACKET_O

curr
COMMA

PIDTYPE_SID
COMMA

find_pid
BRACKET_O

session
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

process_group
BRACKET_O

curr
BRACKET_C
NOT_EQ

pgrp
BRACKET_C
CURLY_BRACKET_O

detach_pid
BRACKET_O

curr
COMMA

PIDTYPE_PGID
BRACKET_C
SEMICOLON

curr
MINUS
GREATER

signal
MINUS
GREATER

pgrp
OP_ASSIGNMENT

pgrp
SEMICOLON

attach_pid
BRACKET_O

curr
COMMA

PIDTYPE_PGID
COMMA

find_pid
BRACKET_O

pgrp
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

set_special_pids
BRACKET_O

pid_t

session
COMMA

pid_t

pgrp
BRACKET_C
CURLY_BRACKET_O

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

__set_special_pids
BRACKET_O

session
COMMA

pgrp
BRACKET_C
SEMICOLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

allow_signal
BRACKET_O
TYPE_INT

sig
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

valid_signal
BRACKET_O

sig
BRACKET_C
OR

sig
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

sigdelset
BRACKET_O
AMPERSANT

current
MINUS
GREATER

blocked
COMMA

sig
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

current
MINUS
GREATER

mm
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

sighand
MINUS
GREATER

action
CORNER_BRACKET_O
BRACKET_O

sig
BRACKET_C
MINUS
NUMBER
CORNER_BRACKET_C
DOT

sa
DOT

sa_handler
OP_ASSIGNMENT
BRACKET_O

void

__user
MULT
BRACKET_C
NUMBER
SEMICOLON
CURLY_BRACKET_C

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

allow_signal
BRACKET_C
SEMICOLON
TYPE_INT

disallow_signal
BRACKET_O
TYPE_INT

sig
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

valid_signal
BRACKET_O

sig
BRACKET_C
OR

sig
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

current
MINUS
GREATER

sighand
MINUS
GREATER

action
CORNER_BRACKET_O
BRACKET_O

sig
BRACKET_C
MINUS
NUMBER
CORNER_BRACKET_C
DOT

sa
DOT

sa_handler
OP_ASSIGNMENT

SIG_IGN
SEMICOLON

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

disallow_signal
BRACKET_C
SEMICOLON

void

daemonize
BRACKET_O
CONST
TYPE_CHAR
MULT

name
COMMA
DOT
DOT
DOT
BRACKET_C
CURLY_BRACKET_O

va_list

args
SEMICOLON
STRUCT

fs_struct
MULT

fs
SEMICOLON

sigset_t

blocked
SEMICOLON

va_start
BRACKET_O

args
COMMA

name
BRACKET_C
SEMICOLON

vsnprintf
BRACKET_O

current
MINUS
GREATER

comm
COMMA

sizeof
BRACKET_O

current
MINUS
GREATER

comm
BRACKET_C
COMMA

name
COMMA

args
BRACKET_C
SEMICOLON

va_end
BRACKET_O

args
BRACKET_C
SEMICOLON

exit_mm
BRACKET_O

current
BRACKET_C
SEMICOLON

set_special_pids
BRACKET_O
NUMBER
COMMA
NUMBER
BRACKET_C
SEMICOLON

proc_clear_tty
BRACKET_O

current
BRACKET_C
SEMICOLON

sigfillset
BRACKET_O
AMPERSANT

blocked
BRACKET_C
SEMICOLON

sigprocmask
BRACKET_O

SIG_BLOCK
COMMA
AMPERSANT

blocked
COMMA

NULL
BRACKET_C
SEMICOLON

flush_signals
BRACKET_O

current
BRACKET_C
SEMICOLON

exit_fs
BRACKET_O

current
BRACKET_C
SEMICOLON

fs
OP_ASSIGNMENT

init_task
DOT

fs
SEMICOLON

current
MINUS
GREATER

fs
OP_ASSIGNMENT

fs
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

fs
MINUS
GREATER

count
BRACKET_C
SEMICOLON

exit_task_namespaces
BRACKET_O

current
BRACKET_C
SEMICOLON

current
MINUS
GREATER

nsproxy
OP_ASSIGNMENT

init_task
DOT

nsproxy
SEMICOLON

get_task_namespaces
BRACKET_O

current
BRACKET_C
SEMICOLON

exit_files
BRACKET_O

current
BRACKET_C
SEMICOLON

current
MINUS
GREATER

files
OP_ASSIGNMENT

init_task
DOT

files
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

current
MINUS
GREATER

files
MINUS
GREATER

count
BRACKET_C
SEMICOLON

reparent_to_kthreadd
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

daemonize
BRACKET_C
SEMICOLON

static

void

close_files
BRACKET_O
STRUCT

files_struct
MULT

files
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

j
SEMICOLON
STRUCT

fdtable
MULT

fdt
SEMICOLON

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

fdt
OP_ASSIGNMENT

files_fdtable
BRACKET_O

files
BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

set
SEMICOLON

i
OP_ASSIGNMENT

j
MULT

__NFDBITS
SEMICOLON
IF
BRACKET_O

i
GR_EQ

fdt
MINUS
GREATER

max_fds
BRACKET_C
BREAK
SEMICOLON

set
OP_ASSIGNMENT

fdt
MINUS
GREATER

open_fds
MINUS
GREATER

fds_bits
CORNER_BRACKET_O

j
PLUS
PLUS
CORNER_BRACKET_C
SEMICOLON
WHILE
BRACKET_O

set
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

set
AMPERSANT
NUMBER
BRACKET_C
CURLY_BRACKET_O
STRUCT

file
MULT

file
OP_ASSIGNMENT

xchg
BRACKET_O
AMPERSANT

fdt
MINUS
GREATER

fd
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

file
BRACKET_C
CURLY_BRACKET_O

filp_close
BRACKET_O

file
COMMA

files
BRACKET_C
SEMICOLON

cond_resched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

i
PLUS
PLUS
SEMICOLON

set
GREATER
GR_EQ
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
STRUCT

files_struct
MULT

get_files_struct
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
STRUCT

files_struct
MULT

files
SEMICOLON

task_lock
BRACKET_O

task
BRACKET_C
SEMICOLON

files
OP_ASSIGNMENT

task
MINUS
GREATER

files
SEMICOLON
IF
BRACKET_O

files
BRACKET_C

atomic_inc
BRACKET_O
AMPERSANT

files
MINUS
GREATER

count
BRACKET_C
SEMICOLON

task_unlock
BRACKET_O

task
BRACKET_C
SEMICOLON

return

files
SEMICOLON
CURLY_BRACKET_C

void

fastcall

put_files_struct
BRACKET_O
STRUCT

files_struct
MULT

files
BRACKET_C
CURLY_BRACKET_O
STRUCT

fdtable
MULT

fdt
SEMICOLON
IF
BRACKET_O

atomic_dec_and_test
BRACKET_O
AMPERSANT

files
MINUS
GREATER

count
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

close_files
BRACKET_O

files
BRACKET_C
SEMICOLON

fdt
OP_ASSIGNMENT

files_fdtable
BRACKET_O

files
BRACKET_C
SEMICOLON
IF
BRACKET_O

fdt
NOT_EQ
AMPERSANT

files
MINUS
GREATER

fdtab
BRACKET_C

kmem_cache_free
BRACKET_O

files_cachep
COMMA

files
BRACKET_C
SEMICOLON

free_fdtable
BRACKET_O

fdt
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

put_files_struct
BRACKET_C
SEMICOLON

void

reset_files_struct
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
STRUCT

files_struct
MULT

files
BRACKET_C
CURLY_BRACKET_O
STRUCT

files_struct
MULT

old
SEMICOLON

old
OP_ASSIGNMENT

tsk
MINUS
GREATER

files
SEMICOLON

task_lock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

files
OP_ASSIGNMENT

files
SEMICOLON

task_unlock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

put_files_struct
BRACKET_O

old
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

reset_files_struct
BRACKET_C
SEMICOLON

static

inline

void

__exit_files
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

files_struct
MULT

files
OP_ASSIGNMENT

tsk
MINUS
GREATER

files
SEMICOLON
IF
BRACKET_O

files
BRACKET_C
CURLY_BRACKET_O

task_lock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

files
OP_ASSIGNMENT

NULL
SEMICOLON

task_unlock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

put_files_struct
BRACKET_O

files
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

exit_files
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O

__exit_files
BRACKET_O

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

__put_fs_struct
BRACKET_O
STRUCT

fs_struct
MULT

fs
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

atomic_dec_and_test
BRACKET_O
AMPERSANT

fs
MINUS
GREATER

count
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

dput
BRACKET_O

fs
MINUS
GREATER

root
BRACKET_C
SEMICOLON

mntput
BRACKET_O

fs
MINUS
GREATER

rootmnt
BRACKET_C
SEMICOLON

dput
BRACKET_O

fs
MINUS
GREATER

pwd
BRACKET_C
SEMICOLON

mntput
BRACKET_O

fs
MINUS
GREATER

pwdmnt
BRACKET_C
SEMICOLON
IF
BRACKET_O

fs
MINUS
GREATER

altroot
BRACKET_C
CURLY_BRACKET_O

dput
BRACKET_O

fs
MINUS
GREATER

altroot
BRACKET_C
SEMICOLON

mntput
BRACKET_O

fs
MINUS
GREATER

altrootmnt
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

kmem_cache_free
BRACKET_O

fs_cachep
COMMA

fs
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

put_fs_struct
BRACKET_O
STRUCT

fs_struct
MULT

fs
BRACKET_C
CURLY_BRACKET_O

__put_fs_struct
BRACKET_O

fs
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

__exit_fs
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

fs_struct
MULT

fs
OP_ASSIGNMENT

tsk
MINUS
GREATER

fs
SEMICOLON
IF
BRACKET_O

fs
BRACKET_C
CURLY_BRACKET_O

task_lock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

fs
OP_ASSIGNMENT

NULL
SEMICOLON

task_unlock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

__put_fs_struct
BRACKET_O

fs
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

exit_fs
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O

__exit_fs
BRACKET_O

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

exit_fs
BRACKET_C
SEMICOLON

static

void

exit_mm
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

mm_struct
MULT

mm
OP_ASSIGNMENT

tsk
MINUS
GREATER

mm
SEMICOLON

mm_release
BRACKET_O

tsk
COMMA

mm
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

mm
BRACKET_C

return
SEMICOLON

down_read
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON
IF
BRACKET_O

mm
MINUS
GREATER

core_waiters
BRACKET_C
CURLY_BRACKET_O

up_read
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON

down_write
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
MINUS
MINUS

mm
MINUS
GREATER

core_waiters
BRACKET_C

complete
BRACKET_O

mm
MINUS
GREATER

core_startup_done
BRACKET_C
SEMICOLON

up_write
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

core_done
BRACKET_C
SEMICOLON

down_read
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

atomic_inc
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mm_count
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

mm
NOT_EQ

tsk
MINUS
GREATER

active_mm
BRACKET_C
SEMICOLON

task_lock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

mm
OP_ASSIGNMENT

NULL
SEMICOLON

up_read
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON

enter_lazy_tlb
BRACKET_O

mm
COMMA

current
BRACKET_C
SEMICOLON

task_unlock
BRACKET_O

tsk
BRACKET_C
SEMICOLON

mmput
BRACKET_O

mm
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

choose_new_parent
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

task_struct
MULT

reaper
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

p
EQ

reaper
OR

reaper
MINUS
GREATER

exit_state
BRACKET_C
SEMICOLON

p
MINUS
GREATER

real_parent
OP_ASSIGNMENT

reaper
SEMICOLON
CURLY_BRACKET_C

static

void

reparent_thread
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

task_struct
MULT

father
COMMA
TYPE_INT

traced
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

pdeath_signal
BRACKET_C

group_send_sig_info
BRACKET_O

p
MINUS
GREATER

pdeath_signal
COMMA

SEND_SIG_NOINFO
COMMA

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

traced
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

list_del_init
BRACKET_O
AMPERSANT

p
MINUS
GREATER

ptrace_list
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

parent
NOT_EQ

p
MINUS
GREATER

real_parent
BRACKET_C

list_add
BRACKET_O
AMPERSANT

p
MINUS
GREATER

ptrace_list
COMMA
AMPERSANT

p
MINUS
GREATER

real_parent
MINUS
GREATER

ptrace_children
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

p
MINUS
GREATER

ptrace
OP_ASSIGNMENT
NUMBER
SEMICOLON

remove_parent
BRACKET_O

p
BRACKET_C
SEMICOLON

p
MINUS
GREATER

parent
OP_ASSIGNMENT

p
MINUS
GREATER

real_parent
SEMICOLON

add_parent
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

state
EQ

TASK_TRACED
BRACKET_C
CURLY_BRACKET_O

ptrace_untrace
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

p
MINUS
GREATER

real_parent
MINUS
GREATER

group_leader
EQ

father
MINUS
GREATER

group_leader
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

exit_signal
NOT_EQ
MINUS
NUMBER
BRACKET_C

p
MINUS
GREATER

exit_signal
OP_ASSIGNMENT

SIGCHLD
SEMICOLON
IF
BRACKET_O
NOT

traced
AND

p
MINUS
GREATER

exit_state
EQ

EXIT_ZOMBIE
AND

p
MINUS
GREATER

exit_signal
NOT_EQ
MINUS
NUMBER
AND

thread_group_empty
BRACKET_O

p
BRACKET_C
BRACKET_C

do_notify_parent
BRACKET_O

p
COMMA

p
MINUS
GREATER

exit_signal
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

task_pgrp
BRACKET_O

p
BRACKET_C
NOT_EQ

task_pgrp
BRACKET_O

father
BRACKET_C
BRACKET_C
AND
BRACKET_O

task_session
BRACKET_O

p
BRACKET_C
EQ

task_session
BRACKET_O

father
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

pid
MULT

pgrp
OP_ASSIGNMENT

task_pgrp
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

will_become_orphaned_pgrp
BRACKET_O

pgrp
COMMA

NULL
BRACKET_C
AND

has_stopped_jobs
BRACKET_O

pgrp
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

__kill_pgrp_info
BRACKET_O

SIGHUP
COMMA

SEND_SIG_PRIV
COMMA

pgrp
BRACKET_C
SEMICOLON

__kill_pgrp_info
BRACKET_O

SIGCONT
COMMA

SEND_SIG_PRIV
COMMA

pgrp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

forget_original_parent
BRACKET_O
STRUCT

task_struct
MULT

father
COMMA
STRUCT

list_head
MULT

to_release
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
MULT

reaper
OP_ASSIGNMENT

father
SEMICOLON
STRUCT

list_head
MULT

_p
COMMA
MULT

_n
SEMICOLON
DO
CURLY_BRACKET_O

reaper
OP_ASSIGNMENT

next_thread
BRACKET_O

reaper
BRACKET_C
SEMICOLON
IF
BRACKET_O

reaper
EQ

father
BRACKET_C
CURLY_BRACKET_O

reaper
OP_ASSIGNMENT

child_reaper
BRACKET_O

father
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
WHILE
BRACKET_O

reaper
MINUS
GREATER

exit_state
BRACKET_C
SEMICOLON

list_for_each_safe
BRACKET_O

_p
COMMA

_n
COMMA
AMPERSANT

father
MINUS
GREATER

children
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ptrace
SEMICOLON

p
OP_ASSIGNMENT

list_entry
BRACKET_O

_p
COMMA
STRUCT

task_struct
COMMA

sibling
BRACKET_C
SEMICOLON

ptrace
OP_ASSIGNMENT

p
MINUS
GREATER

ptrace
SEMICOLON

BUG_ON
BRACKET_O

father
NOT_EQ

p
MINUS
GREATER

real_parent
AND
NOT

ptrace
BRACKET_C
SEMICOLON
IF
BRACKET_O

father
EQ

p
MINUS
GREATER

real_parent
BRACKET_C
CURLY_BRACKET_O

choose_new_parent
BRACKET_O

p
COMMA

reaper
BRACKET_C
SEMICOLON

reparent_thread
BRACKET_O

p
COMMA

father
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

__ptrace_unlink
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

exit_state
EQ

EXIT_ZOMBIE
AND

p
MINUS
GREATER

exit_signal
NOT_EQ
MINUS
NUMBER
AND

thread_group_empty
BRACKET_O

p
BRACKET_C
BRACKET_C

do_notify_parent
BRACKET_O

p
COMMA

p
MINUS
GREATER

exit_signal
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

ptrace
AND

p
MINUS
GREATER

exit_state
EQ

EXIT_ZOMBIE
AND

p
MINUS
GREATER

exit_signal
EQ
MINUS
NUMBER
BRACKET_C
BRACKET_C

list_add
BRACKET_O
AMPERSANT

p
MINUS
GREATER

ptrace_list
COMMA

to_release
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

list_for_each_safe
BRACKET_O

_p
COMMA

_n
COMMA
AMPERSANT

father
MINUS
GREATER

ptrace_children
BRACKET_C
CURLY_BRACKET_O

p
OP_ASSIGNMENT

list_entry
BRACKET_O

_p
COMMA
STRUCT

task_struct
COMMA

ptrace_list
BRACKET_C
SEMICOLON

choose_new_parent
BRACKET_O

p
COMMA

reaper
BRACKET_C
SEMICOLON

reparent_thread
BRACKET_O

p
COMMA

father
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

exit_notify
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

state
SEMICOLON
STRUCT

task_struct
MULT

t
SEMICOLON
STRUCT

list_head

ptrace_dead
COMMA
MULT

_p
COMMA
MULT

_n
SEMICOLON
STRUCT

pid
MULT

pgrp
SEMICOLON
IF
BRACKET_O

signal_pending
BRACKET_O

tsk
BRACKET_C
AND
NOT
BRACKET_O

tsk
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_GROUP_EXIT
BRACKET_C
AND
NOT

thread_group_empty
BRACKET_O

tsk
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
FOR
BRACKET_O

t
OP_ASSIGNMENT

next_thread
BRACKET_O

tsk
BRACKET_C
SEMICOLON

t
NOT_EQ

tsk
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
BRACKET_C
IF
BRACKET_O
NOT

signal_pending
BRACKET_O

t
BRACKET_C
AND
NOT
BRACKET_O

t
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C
BRACKET_C

recalc_sigpending_and_wake
BRACKET_O

t
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

ptrace_dead
BRACKET_C
SEMICOLON

forget_original_parent
BRACKET_O

tsk
COMMA
AMPERSANT

ptrace_dead
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

children
BRACKET_C
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

ptrace_children
BRACKET_C
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

tsk
MINUS
GREATER

real_parent
SEMICOLON

pgrp
OP_ASSIGNMENT

task_pgrp
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

task_pgrp
BRACKET_O

t
BRACKET_C
NOT_EQ

pgrp
BRACKET_C
AND
BRACKET_O

task_session
BRACKET_O

t
BRACKET_C
EQ

task_session
BRACKET_O

tsk
BRACKET_C
BRACKET_C
AND

will_become_orphaned_pgrp
BRACKET_O

pgrp
COMMA

tsk
BRACKET_C
AND

has_stopped_jobs
BRACKET_O

pgrp
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

__kill_pgrp_info
BRACKET_O

SIGHUP
COMMA

SEND_SIG_PRIV
COMMA

pgrp
BRACKET_C
SEMICOLON

__kill_pgrp_info
BRACKET_O

SIGCONT
COMMA

SEND_SIG_PRIV
COMMA

pgrp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

tsk
MINUS
GREATER

exit_signal
NOT_EQ

SIGCHLD
AND

tsk
MINUS
GREATER

exit_signal
NOT_EQ
MINUS
NUMBER
AND
BRACKET_O

tsk
MINUS
GREATER

parent_exec_id
NOT_EQ

t
MINUS
GREATER

self_exec_id
OR

tsk
MINUS
GREATER

self_exec_id
NOT_EQ

tsk
MINUS
GREATER

parent_exec_id
BRACKET_C
AND
NOT

capable
BRACKET_O

CAP_KILL
BRACKET_C
BRACKET_C

tsk
MINUS
GREATER

exit_signal
OP_ASSIGNMENT

SIGCHLD
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

exit_signal
NOT_EQ
MINUS
NUMBER
AND

thread_group_empty
BRACKET_O

tsk
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

signal
OP_ASSIGNMENT

tsk
MINUS
GREATER

parent
EQ

tsk
MINUS
GREATER

real_parent
QUESTION_MARK

tsk
MINUS
GREATER

exit_signal
COLON

SIGCHLD
SEMICOLON

do_notify_parent
BRACKET_O

tsk
COMMA

signal
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

tsk
MINUS
GREATER

ptrace
BRACKET_C
CURLY_BRACKET_O

do_notify_parent
BRACKET_O

tsk
COMMA

SIGCHLD
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

state
OP_ASSIGNMENT

EXIT_ZOMBIE
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

exit_signal
EQ
MINUS
NUMBER
AND
BRACKET_O

likely
BRACKET_O

tsk
MINUS
GREATER

ptrace
EQ
NUMBER
BRACKET_C
OR

unlikely
BRACKET_O

tsk
MINUS
GREATER

parent
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_GROUP_EXIT
BRACKET_C
BRACKET_C
BRACKET_C

state
OP_ASSIGNMENT

EXIT_DEAD
SEMICOLON

tsk
MINUS
GREATER

exit_state
OP_ASSIGNMENT

state
SEMICOLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

list_for_each_safe
BRACKET_O

_p
COMMA

_n
COMMA
AMPERSANT

ptrace_dead
BRACKET_C
CURLY_BRACKET_O

list_del_init
BRACKET_O

_p
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

list_entry
BRACKET_O

_p
COMMA
STRUCT

task_struct
COMMA

ptrace_list
BRACKET_C
SEMICOLON

release_task
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

state
EQ

EXIT_DEAD
BRACKET_C

release_task
BRACKET_O

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

fastcall

NORET_TYPE

void

do_exit
BRACKET_O
TYPE_LONG

code
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON
TYPE_INT

group_dead
SEMICOLON

profile_task_exit
BRACKET_O

tsk
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

fs_excl
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

in_interrupt
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

panic
BRACKET_O
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

tsk
MINUS
GREATER

pid
BRACKET_C
BRACKET_C

panic
BRACKET_O
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

tsk
EQ

child_reaper
BRACKET_O

tsk
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

tsk
MINUS
GREATER

nsproxy
MINUS
GREATER

pid_ns
NOT_EQ
AMPERSANT

init_pid_ns
BRACKET_C

tsk
MINUS
GREATER

nsproxy
MINUS
GREATER

pid_ns
MINUS
GREATER

child_reaper
OP_ASSIGNMENT

init_pid_ns
DOT

child_reaper
SEMICOLON
ELSE

panic
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

current
MINUS
GREATER

ptrace
AMPERSANT

PT_TRACE_EXIT
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

ptrace_message
OP_ASSIGNMENT

code
SEMICOLON

ptrace_notify
BRACKET_O
BRACKET_O

PTRACE_EVENT_EXIT
LESS
LESS
NUMBER
BRACKET_C
LOGICAL_OR

SIGTRAP
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

tsk
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ALERT
STRING
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_EXITPIDONE
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

io_context
BRACKET_C

exit_io_context
BRACKET_O
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_UNINTERRUPTIBLE
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_lock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_EXITING
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

in_atomic
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

printk
BRACKET_O

KERN_INFO
STRING
COMMA

current
MINUS
GREATER

comm
COMMA

current
MINUS
GREATER

pid
COMMA

preempt_count
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

acct_update_integrals
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

mm
BRACKET_C
CURLY_BRACKET_O

update_hiwater_rss
BRACKET_O

tsk
MINUS
GREATER

mm
BRACKET_C
SEMICOLON

update_hiwater_vm
BRACKET_O

tsk
MINUS
GREATER

mm
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

group_dead
OP_ASSIGNMENT

atomic_dec_and_test
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

signal
MINUS
GREATER

live
BRACKET_C
SEMICOLON
IF
BRACKET_O

group_dead
BRACKET_C
CURLY_BRACKET_O

hrtimer_cancel
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

signal
MINUS
GREATER

real_timer
BRACKET_C
SEMICOLON

exit_itimers
BRACKET_O

tsk
MINUS
GREATER

signal
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

acct_collect
BRACKET_O

code
COMMA

group_dead
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

tsk
MINUS
GREATER

robust_list
BRACKET_C
BRACKET_C

exit_robust_list
BRACKET_O

tsk
BRACKET_C
SEMICOLON
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_FUTEX
BRACKET_C
AND
PP_DEFINED
BRACKET_O

CONFIG_COMPAT
BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

tsk
MINUS
GREATER

compat_robust_list
BRACKET_C
BRACKET_C

compat_exit_robust_list
BRACKET_O

tsk
BRACKET_C
SEMICOLON
PP_ENDIF
IF
BRACKET_O

unlikely
BRACKET_O

tsk
MINUS
GREATER

audit_context
BRACKET_C
BRACKET_C

audit_free
BRACKET_O

tsk
BRACKET_C
SEMICOLON

taskstats_exit
BRACKET_O

tsk
COMMA

group_dead
BRACKET_C
SEMICOLON

exit_mm
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

group_dead
BRACKET_C

acct_process
BRACKET_O
BRACKET_C
SEMICOLON

exit_sem
BRACKET_O

tsk
BRACKET_C
SEMICOLON

__exit_files
BRACKET_O

tsk
BRACKET_C
SEMICOLON

__exit_fs
BRACKET_O

tsk
BRACKET_C
SEMICOLON

exit_thread
BRACKET_O
BRACKET_C
SEMICOLON

cpuset_exit
BRACKET_O

tsk
BRACKET_C
SEMICOLON

exit_keys
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

group_dead
AND

tsk
MINUS
GREATER

signal
MINUS
GREATER

leader
BRACKET_C

disassociate_ctty
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

module_put
BRACKET_O

task_thread_info
BRACKET_O

tsk
BRACKET_C
MINUS
GREATER

exec_domain
MINUS
GREATER

module
BRACKET_C
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

binfmt
BRACKET_C

module_put
BRACKET_O

tsk
MINUS
GREATER

binfmt
MINUS
GREATER

module
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

exit_code
OP_ASSIGNMENT

code
SEMICOLON

proc_exit_connector
BRACKET_O

tsk
BRACKET_C
SEMICOLON

exit_task_namespaces
BRACKET_O

tsk
BRACKET_C
SEMICOLON

exit_notify
BRACKET_O

tsk
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_NUMA

mpol_free
BRACKET_O

tsk
MINUS
GREATER

mempolicy
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

mempolicy
OP_ASSIGNMENT

NULL
SEMICOLON
PP_ENDIF
IF
BRACKET_O

unlikely
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

pi_state_list
BRACKET_C
BRACKET_C
BRACKET_C

exit_pi_state_list
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

current
MINUS
GREATER

pi_state_cache
BRACKET_C
BRACKET_C

kfree
BRACKET_O

current
MINUS
GREATER

pi_state_cache
BRACKET_C
SEMICOLON

debug_check_no_locks_held
BRACKET_O

tsk
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_EXITPIDONE
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

io_context
BRACKET_C

exit_io_context
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

splice_pipe
BRACKET_C

__free_pipe_info
BRACKET_O

tsk
MINUS
GREATER

splice_pipe
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_DEAD
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

BUG
BRACKET_O
BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

do_exit
BRACKET_C
SEMICOLON

NORET_TYPE

void

complete_and_exit
BRACKET_O
STRUCT

completion
MULT

comp
COMMA
TYPE_LONG

code
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

comp
BRACKET_C

complete
BRACKET_O

comp
BRACKET_C
SEMICOLON

do_exit
BRACKET_O

code
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

complete_and_exit
BRACKET_C
SEMICOLON

asmlinkage
TYPE_LONG

sys_exit
BRACKET_O
TYPE_INT

error_code
BRACKET_C
CURLY_BRACKET_O

do_exit
BRACKET_O
BRACKET_O

error_code
AMPERSANT
NUMBER

xff
BRACKET_C
LESS
LESS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

NORET_TYPE

void

do_group_exit
BRACKET_O
TYPE_INT

exit_code
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

exit_code
AMPERSANT
NUMBER

x80
BRACKET_C
SEMICOLON
IF
BRACKET_O

current
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_GROUP_EXIT
BRACKET_C

exit_code
OP_ASSIGNMENT

current
MINUS
GREATER

signal
MINUS
GREATER

group_exit_code
SEMICOLON
ELSE
IF
BRACKET_O
NOT

thread_group_empty
BRACKET_O

current
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

signal_struct
MULT
CONST

sig
OP_ASSIGNMENT

current
MINUS
GREATER

signal
SEMICOLON
STRUCT

sighand_struct
MULT
CONST

sighand
OP_ASSIGNMENT

current
MINUS
GREATER

sighand
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

sig
MINUS
GREATER

flags
AMPERSANT

SIGNAL_GROUP_EXIT
BRACKET_C

exit_code
OP_ASSIGNMENT

sig
MINUS
GREATER

group_exit_code
SEMICOLON
ELSE
CURLY_BRACKET_O

sig
MINUS
GREATER

group_exit_code
OP_ASSIGNMENT

exit_code
SEMICOLON

zap_other_threads
BRACKET_O

current
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

do_exit
BRACKET_O

exit_code
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage

void

sys_exit_group
BRACKET_O
TYPE_INT

error_code
BRACKET_C
CURLY_BRACKET_O

do_group_exit
BRACKET_O
BRACKET_O

error_code
AMPERSANT
NUMBER

xff
BRACKET_C
LESS
LESS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

eligible_child
BRACKET_O

pid_t

pid
COMMA
TYPE_INT

options
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
SEMICOLON
IF
BRACKET_O

pid
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

pid
NOT_EQ

pid
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
NOT

pid
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

process_group
BRACKET_O

p
BRACKET_C
NOT_EQ

process_group
BRACKET_O

current
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

pid
NOT_EQ
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

process_group
BRACKET_O

p
BRACKET_C
NOT_EQ
MINUS

pid
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

p
MINUS
GREATER

exit_signal
EQ
MINUS
NUMBER
AND
NOT

p
MINUS
GREATER

ptrace
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O
BRACKET_O

p
MINUS
GREATER

exit_signal
NOT_EQ

SIGCHLD
BRACKET_C
EXCLUSIVE_OR
BRACKET_O
BRACKET_O

options
AMPERSANT

__WCLONE
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C
AND
NOT
BRACKET_O

options
AMPERSANT

__WALL
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

delay_group_leader
BRACKET_O

p
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

err
OP_ASSIGNMENT

security_task_wait
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

return

err
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

wait_noreap_copyout
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA

pid_t

pid
COMMA

uid_t

uid
COMMA
TYPE_INT

why
COMMA
TYPE_INT

status
COMMA
STRUCT

siginfo

__user
MULT

infop
COMMA
STRUCT

rusage

__user
MULT

rusagep
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
OP_ASSIGNMENT

rusagep
QUESTION_MARK

getrusage
BRACKET_O

p
COMMA

RUSAGE_BOTH
COMMA

rusagep
BRACKET_C
COLON
NUMBER
SEMICOLON

put_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

SIGCHLD
COMMA
AMPERSANT

infop
MINUS
GREATER

si_signo
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
NUMBER
COMMA
AMPERSANT

infop
MINUS
GREATER

si_errno
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
BRACKET_O

short
BRACKET_C

why
COMMA
AMPERSANT

infop
MINUS
GREATER

si_code
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

pid
COMMA
AMPERSANT

infop
MINUS
GREATER

si_pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

uid
COMMA
AMPERSANT

infop
MINUS
GREATER

si_uid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

status
COMMA
AMPERSANT

infop
MINUS
GREATER

si_status
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

pid
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

wait_task_zombie
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

noreap
COMMA
STRUCT

siginfo

__user
MULT

infop
COMMA
TYPE_INT

__user
MULT

stat_addr
COMMA
STRUCT

rusage

__user
MULT

ru
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

state
SEMICOLON
TYPE_INT

retval
SEMICOLON
TYPE_INT

status
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

noreap
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

pid_t

pid
OP_ASSIGNMENT

p
MINUS
GREATER

pid
SEMICOLON

uid_t

uid
OP_ASSIGNMENT

p
MINUS
GREATER

uid
SEMICOLON
TYPE_INT

exit_code
OP_ASSIGNMENT

p
MINUS
GREATER

exit_code
SEMICOLON
TYPE_INT

why
COMMA

status
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

exit_state
NOT_EQ

EXIT_ZOMBIE
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

exit_signal
EQ
MINUS
NUMBER
AND

p
MINUS
GREATER

ptrace
EQ
NUMBER
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

get_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

exit_code
AMPERSANT
NUMBER

x7f
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

why
OP_ASSIGNMENT

CLD_EXITED
SEMICOLON

status
OP_ASSIGNMENT

exit_code
GREATER
GREATER
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

why
OP_ASSIGNMENT
BRACKET_O

exit_code
AMPERSANT
NUMBER

x80
BRACKET_C
QUESTION_MARK

CLD_DUMPED
COLON

CLD_KILLED
SEMICOLON

status
OP_ASSIGNMENT

exit_code
AMPERSANT
NUMBER

x7f
SEMICOLON
CURLY_BRACKET_C

return

wait_noreap_copyout
BRACKET_O

p
COMMA

pid
COMMA

uid
COMMA

why
COMMA

status
COMMA

infop
COMMA

ru
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

state
OP_ASSIGNMENT

xchg
BRACKET_O
AMPERSANT

p
MINUS
GREATER

exit_state
COMMA

EXIT_DEAD
BRACKET_C
SEMICOLON
IF
BRACKET_O

state
NOT_EQ

EXIT_ZOMBIE
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

state
NOT_EQ

EXIT_DEAD
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

exit_signal
EQ
MINUS
NUMBER
AND

p
MINUS
GREATER

ptrace
EQ
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

likely
BRACKET_O

p
MINUS
GREATER

real_parent
EQ

p
MINUS
GREATER

parent
BRACKET_C
AND

likely
BRACKET_O

p
MINUS
GREATER

signal
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

signal_struct
MULT

psig
SEMICOLON
STRUCT

signal_struct
MULT

sig
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

p
MINUS
GREATER

parent
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

psig
OP_ASSIGNMENT

p
MINUS
GREATER

parent
MINUS
GREATER

signal
SEMICOLON

sig
OP_ASSIGNMENT

p
MINUS
GREATER

signal
SEMICOLON

psig
MINUS
GREATER

cutime
OP_ASSIGNMENT

cputime_add
BRACKET_O

psig
MINUS
GREATER

cutime
COMMA

cputime_add
BRACKET_O

p
MINUS
GREATER

utime
COMMA

cputime_add
BRACKET_O

sig
MINUS
GREATER

utime
COMMA

sig
MINUS
GREATER

cutime
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

psig
MINUS
GREATER

cstime
OP_ASSIGNMENT

cputime_add
BRACKET_O

psig
MINUS
GREATER

cstime
COMMA

cputime_add
BRACKET_O

p
MINUS
GREATER

stime
COMMA

cputime_add
BRACKET_O

sig
MINUS
GREATER

stime
COMMA

sig
MINUS
GREATER

cstime
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

psig
MINUS
GREATER

cmin_flt
ASSIGN_PLUS

p
MINUS
GREATER

min_flt
PLUS

sig
MINUS
GREATER

min_flt
PLUS

sig
MINUS
GREATER

cmin_flt
SEMICOLON

psig
MINUS
GREATER

cmaj_flt
ASSIGN_PLUS

p
MINUS
GREATER

maj_flt
PLUS

sig
MINUS
GREATER

maj_flt
PLUS

sig
MINUS
GREATER

cmaj_flt
SEMICOLON

psig
MINUS
GREATER

cnvcsw
ASSIGN_PLUS

p
MINUS
GREATER

nvcsw
PLUS

sig
MINUS
GREATER

nvcsw
PLUS

sig
MINUS
GREATER

cnvcsw
SEMICOLON

psig
MINUS
GREATER

cnivcsw
ASSIGN_PLUS

p
MINUS
GREATER

nivcsw
PLUS

sig
MINUS
GREATER

nivcsw
PLUS

sig
MINUS
GREATER

cnivcsw
SEMICOLON

psig
MINUS
GREATER

cinblock
ASSIGN_PLUS

task_io_get_inblock
BRACKET_O

p
BRACKET_C
PLUS

sig
MINUS
GREATER

inblock
PLUS

sig
MINUS
GREATER

cinblock
SEMICOLON

psig
MINUS
GREATER

coublock
ASSIGN_PLUS

task_io_get_oublock
BRACKET_O

p
BRACKET_C
PLUS

sig
MINUS
GREATER

oublock
PLUS

sig
MINUS
GREATER

coublock
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

p
MINUS
GREATER

parent
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT

ru
QUESTION_MARK

getrusage
BRACKET_O

p
COMMA

RUSAGE_BOTH
COMMA

ru
BRACKET_C
COLON
NUMBER
SEMICOLON

status
OP_ASSIGNMENT
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_GROUP_EXIT
BRACKET_C
QUESTION_MARK

p
MINUS
GREATER

signal
MINUS
GREATER

group_exit_code
COLON

p
MINUS
GREATER

exit_code
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

stat_addr
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

status
COMMA

stat_addr
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

infop
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

SIGCHLD
COMMA
AMPERSANT

infop
MINUS
GREATER

si_signo
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

infop
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
NUMBER
COMMA
AMPERSANT

infop
MINUS
GREATER

si_errno
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

infop
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

why
SEMICOLON
IF
BRACKET_O
BRACKET_O

status
AMPERSANT
NUMBER

x7f
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

why
OP_ASSIGNMENT

CLD_EXITED
SEMICOLON

status
GREATER
GR_EQ
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

why
OP_ASSIGNMENT
BRACKET_O

status
AMPERSANT
NUMBER

x80
BRACKET_C
QUESTION_MARK

CLD_DUMPED
COLON

CLD_KILLED
SEMICOLON

status
AMPERSANT
OP_ASSIGNMENT
NUMBER

x7f
SEMICOLON
CURLY_BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
BRACKET_O

short
BRACKET_C

why
COMMA
AMPERSANT

infop
MINUS
GREATER

si_code
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

status
COMMA
AMPERSANT

infop
MINUS
GREATER

si_status
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

retval
AND

infop
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

p
MINUS
GREATER

pid
COMMA
AMPERSANT

infop
MINUS
GREATER

si_pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

infop
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

p
MINUS
GREATER

uid
COMMA
AMPERSANT

infop
MINUS
GREATER

si_uid
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

exit_state
OP_ASSIGNMENT

EXIT_ZOMBIE
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

retval
OP_ASSIGNMENT

p
MINUS
GREATER

pid
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

real_parent
NOT_EQ

p
MINUS
GREATER

parent
BRACKET_C
CURLY_BRACKET_O

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

real_parent
NOT_EQ

p
MINUS
GREATER

parent
BRACKET_C
CURLY_BRACKET_O

__ptrace_unlink
BRACKET_O

p
BRACKET_C
SEMICOLON

p
MINUS
GREATER

exit_state
OP_ASSIGNMENT

EXIT_ZOMBIE
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

exit_signal
NOT_EQ
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O

do_notify_parent
BRACKET_O

p
COMMA

p
MINUS
GREATER

exit_signal
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

exit_signal
NOT_EQ
MINUS
NUMBER
BRACKET_C

p
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

p
NOT_EQ

NULL
BRACKET_C

release_task
BRACKET_O

p
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

retval
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

wait_task_stopped
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

delayed_group_leader
COMMA
TYPE_INT

noreap
COMMA
STRUCT

siginfo

__user
MULT

infop
COMMA
TYPE_INT

__user
MULT

stat_addr
COMMA
STRUCT

rusage

__user
MULT

ru
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
COMMA

exit_code
SEMICOLON
IF
BRACKET_O
NOT

p
MINUS
GREATER

exit_code
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

delayed_group_leader
AND
NOT
BRACKET_O

p
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C
AND

p
MINUS
GREATER

signal
AND

p
MINUS
GREATER

signal
MINUS
GREATER

group_stop_count
GREATER
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON

get_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

noreap
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

pid_t

pid
OP_ASSIGNMENT

p
MINUS
GREATER

pid
SEMICOLON

uid_t

uid
OP_ASSIGNMENT

p
MINUS
GREATER

uid
SEMICOLON
TYPE_INT

why
OP_ASSIGNMENT
BRACKET_O

p
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C
QUESTION_MARK

CLD_TRAPPED
COLON

CLD_STOPPED
SEMICOLON

exit_code
OP_ASSIGNMENT

p
MINUS
GREATER

exit_code
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

exit_code
BRACKET_C
OR

unlikely
BRACKET_O

p
MINUS
GREATER

exit_state
BRACKET_C
BRACKET_C

goto

bail_ref
SEMICOLON

return

wait_noreap_copyout
BRACKET_O

p
COMMA

pid
COMMA

uid
COMMA

why
COMMA

exit_code
COMMA

infop
COMMA

ru
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

exit_code
OP_ASSIGNMENT

xchg
BRACKET_O
AMPERSANT

p
MINUS
GREATER

exit_code
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

exit_state
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

exit_code
OP_ASSIGNMENT

exit_code
SEMICOLON

exit_code
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

exit_code
EQ
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

bail_ref
COLON

put_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

return
MINUS

EAGAIN
SEMICOLON
CURLY_BRACKET_C

remove_parent
BRACKET_O

p
BRACKET_C
SEMICOLON

add_parent
BRACKET_O

p
BRACKET_C
SEMICOLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT

ru
QUESTION_MARK

getrusage
BRACKET_O

p
COMMA

RUSAGE_BOTH
COMMA

ru
BRACKET_C
COLON
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

stat_addr
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
BRACKET_O

exit_code
LESS
LESS
NUMBER
BRACKET_C
LOGICAL_OR
NUMBER

x7f
COMMA

stat_addr
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

infop
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

SIGCHLD
COMMA
AMPERSANT

infop
MINUS
GREATER

si_signo
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

infop
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
NUMBER
COMMA
AMPERSANT

infop
MINUS
GREATER

si_errno
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

infop
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
BRACKET_O

short
BRACKET_C
BRACKET_O
BRACKET_O

p
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C
QUESTION_MARK

CLD_TRAPPED
COLON

CLD_STOPPED
BRACKET_C
COMMA
AMPERSANT

infop
MINUS
GREATER

si_code
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

infop
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

exit_code
COMMA
AMPERSANT

infop
MINUS
GREATER

si_status
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

infop
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

p
MINUS
GREATER

pid
COMMA
AMPERSANT

infop
MINUS
GREATER

si_pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

infop
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

p
MINUS
GREATER

uid
COMMA
AMPERSANT

infop
MINUS
GREATER

si_uid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

p
MINUS
GREATER

pid
SEMICOLON

put_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

retval
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

wait_task_continued
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

noreap
COMMA
STRUCT

siginfo

__user
MULT

infop
COMMA
TYPE_INT

__user
MULT

stat_addr
COMMA
STRUCT

rusage

__user
MULT

ru
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON

pid_t

pid
SEMICOLON

uid_t

uid
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

p
MINUS
GREATER

signal
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_STOP_CONTINUED
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_STOP_CONTINUED
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irq
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

noreap
BRACKET_C

p
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT
OP_ASSIGNMENT
TILDE

SIGNAL_STOP_CONTINUED
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

pid
OP_ASSIGNMENT

p
MINUS
GREATER

pid
SEMICOLON

uid
OP_ASSIGNMENT

p
MINUS
GREATER

uid
SEMICOLON

get_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

infop
BRACKET_C
CURLY_BRACKET_O

retval
OP_ASSIGNMENT

ru
QUESTION_MARK

getrusage
BRACKET_O

p
COMMA

RUSAGE_BOTH
COMMA

ru
BRACKET_C
COLON
NUMBER
SEMICOLON

put_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
AND

stat_addr
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
NUMBER

xffff
COMMA

stat_addr
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

p
MINUS
GREATER

pid
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

retval
OP_ASSIGNMENT

wait_noreap_copyout
BRACKET_O

p
COMMA

pid
COMMA

uid
COMMA

CLD_CONTINUED
COMMA

SIGCONT
COMMA

infop
COMMA

ru
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

retval
EQ
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

retval
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

my_ptrace_child
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT
BRACKET_O

p
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

p
MINUS
GREATER

ptrace
AMPERSANT

PT_ATTACHED
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return
BRACKET_O

p
MINUS
GREATER

parent
NOT_EQ

p
MINUS
GREATER

real_parent
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_LONG

do_wait
BRACKET_O

pid_t

pid
COMMA
TYPE_INT

options
COMMA
STRUCT

siginfo

__user
MULT

infop
COMMA
TYPE_INT

__user
MULT

stat_addr
COMMA
STRUCT

rusage

__user
MULT

ru
BRACKET_C
CURLY_BRACKET_O

DECLARE_WAITQUEUE
BRACKET_O

wait
COMMA

current
BRACKET_C
SEMICOLON
STRUCT

task_struct
MULT

tsk
SEMICOLON
TYPE_INT

flag
COMMA

retval
SEMICOLON
TYPE_INT

allowed
COMMA

denied
SEMICOLON

add_wait_queue
BRACKET_O
AMPERSANT

current
MINUS
GREATER

signal
MINUS
GREATER

wait_chldexit
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON

repeat
COLON

flag
OP_ASSIGNMENT
NUMBER
SEMICOLON

allowed
OP_ASSIGNMENT

denied
OP_ASSIGNMENT
NUMBER
SEMICOLON

current
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_INTERRUPTIBLE
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

tsk
OP_ASSIGNMENT

current
SEMICOLON
DO
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON
STRUCT

list_head
MULT

_p
SEMICOLON
TYPE_INT

ret
SEMICOLON

list_for_each
BRACKET_O

_p
COMMA
AMPERSANT

tsk
MINUS
GREATER

children
BRACKET_C
CURLY_BRACKET_O

p
OP_ASSIGNMENT

list_entry
BRACKET_O

_p
COMMA
STRUCT

task_struct
COMMA

sibling
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

eligible_child
BRACKET_O

pid
COMMA

options
COMMA

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
LESS
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

denied
OP_ASSIGNMENT

ret
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

allowed
OP_ASSIGNMENT
NUMBER
SEMICOLON
SWITCH
BRACKET_O

p
MINUS
GREATER

state
BRACKET_C
CURLY_BRACKET_O

case

TASK_TRACED
COLON

flag
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

my_ptrace_child
BRACKET_O

p
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

case

TASK_STOPPED
COLON

flag
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

options
AMPERSANT

WUNTRACED
BRACKET_C
AND
NOT

my_ptrace_child
BRACKET_O

p
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

retval
OP_ASSIGNMENT

wait_task_stopped
BRACKET_O

p
COMMA

ret
EQ
NUMBER
COMMA
BRACKET_O

options
AMPERSANT

WNOWAIT
BRACKET_C
COMMA

infop
COMMA

stat_addr
COMMA

ru
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
EQ
MINUS

EAGAIN
BRACKET_C

goto

repeat
SEMICOLON
IF
BRACKET_O

retval
NOT_EQ
NUMBER
BRACKET_C

goto

end
SEMICOLON
BREAK
SEMICOLON

default
COLON
IF
BRACKET_O

p
MINUS
GREATER

exit_state
EQ

EXIT_DEAD
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

exit_state
EQ

EXIT_ZOMBIE
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

ret
EQ
NUMBER
BRACKET_C

goto

check_continued
SEMICOLON
IF
BRACKET_O
NOT

likely
BRACKET_O

options
AMPERSANT

WEXITED
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

retval
OP_ASSIGNMENT

wait_task_zombie
BRACKET_O

p
COMMA
BRACKET_O

options
AMPERSANT

WNOWAIT
BRACKET_C
COMMA

infop
COMMA

stat_addr
COMMA

ru
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
NOT_EQ
NUMBER
BRACKET_C

goto

end
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

check_continued
COLON

flag
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

unlikely
BRACKET_O

options
AMPERSANT

WCONTINUED
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

retval
OP_ASSIGNMENT

wait_task_continued
BRACKET_O

p
COMMA
BRACKET_O

options
AMPERSANT

WNOWAIT
BRACKET_C
COMMA

infop
COMMA

stat_addr
COMMA

ru
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
NOT_EQ
NUMBER
BRACKET_C

goto

end
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

flag
BRACKET_C
CURLY_BRACKET_O

list_for_each
BRACKET_O

_p
COMMA
AMPERSANT

tsk
MINUS
GREATER

ptrace_children
BRACKET_C
CURLY_BRACKET_O

p
OP_ASSIGNMENT

list_entry
BRACKET_O

_p
COMMA
STRUCT

task_struct
COMMA

ptrace_list
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

eligible_child
BRACKET_O

pid
COMMA

options
COMMA

p
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

flag
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

options
AMPERSANT

__WNOTHREAD
BRACKET_C
BREAK
SEMICOLON

tsk
OP_ASSIGNMENT

next_thread
BRACKET_O

tsk
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

tsk
MINUS
GREATER

signal
NOT_EQ

current
MINUS
GREATER

signal
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

tsk
NOT_EQ

current
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

flag
BRACKET_C
CURLY_BRACKET_O

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

options
AMPERSANT

WNOHANG
BRACKET_C

goto

end
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ERESTARTSYS
SEMICOLON
IF
BRACKET_O

signal_pending
BRACKET_O

current
BRACKET_C
BRACKET_C

goto

end
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

goto

repeat
SEMICOLON
CURLY_BRACKET_C

retval
OP_ASSIGNMENT
MINUS

ECHILD
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

denied
BRACKET_C
AND
NOT

allowed
BRACKET_C

retval
OP_ASSIGNMENT

denied
SEMICOLON

end
COLON

current
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_RUNNING
SEMICOLON

remove_wait_queue
BRACKET_O
AMPERSANT

current
MINUS
GREATER

signal
MINUS
GREATER

wait_chldexit
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
IF
BRACKET_O

infop
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

retval
GREATER
NUMBER
BRACKET_C

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE
CURLY_BRACKET_O
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
NUMBER
COMMA
AMPERSANT

infop
MINUS
GREATER

si_signo
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
NUMBER
COMMA
AMPERSANT

infop
MINUS
GREATER

si_errno
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
NUMBER
COMMA
AMPERSANT

infop
MINUS
GREATER

si_code
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
NUMBER
COMMA
AMPERSANT

infop
MINUS
GREATER

si_pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
NUMBER
COMMA
AMPERSANT

infop
MINUS
GREATER

si_uid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O
NUMBER
COMMA
AMPERSANT

infop
MINUS
GREATER

si_status
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

retval
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_waitid
BRACKET_O
TYPE_INT

which
COMMA

pid_t

pid
COMMA
STRUCT

siginfo

__user
MULT

infop
COMMA
TYPE_INT

options
COMMA
STRUCT

rusage

__user
MULT

ru
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
SEMICOLON
IF
BRACKET_O

options
AMPERSANT
TILDE
BRACKET_O

WNOHANG
LOGICAL_OR

WNOWAIT
LOGICAL_OR

WEXITED
LOGICAL_OR

WSTOPPED
LOGICAL_OR

WCONTINUED
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

options
AMPERSANT
BRACKET_O

WEXITED
LOGICAL_OR

WSTOPPED
LOGICAL_OR

WCONTINUED
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
SWITCH
BRACKET_O

which
BRACKET_C
CURLY_BRACKET_O

case

P_ALL
COLON

pid
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

P_PID
COLON
IF
BRACKET_O

pid
LE_EQ
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
BREAK
SEMICOLON

case

P_PGID
COLON
IF
BRACKET_O

pid
LE_EQ
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

pid
OP_ASSIGNMENT
MINUS

pid
SEMICOLON
BREAK
SEMICOLON

default
COLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

ret
OP_ASSIGNMENT

do_wait
BRACKET_O

pid
COMMA

options
COMMA

infop
COMMA

NULL
COMMA

ru
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_wait4
BRACKET_O

pid_t

pid
COMMA
TYPE_INT

__user
MULT

stat_addr
COMMA
TYPE_INT

options
COMMA
STRUCT

rusage

__user
MULT

ru
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
SEMICOLON
IF
BRACKET_O

options
AMPERSANT
TILDE
BRACKET_O

WNOHANG
LOGICAL_OR

WUNTRACED
LOGICAL_OR

WCONTINUED
LOGICAL_OR

__WNOTHREAD
LOGICAL_OR

__WCLONE
LOGICAL_OR

__WALL
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

ret
OP_ASSIGNMENT

do_wait
BRACKET_O

pid
COMMA

options
LOGICAL_OR

WEXITED
COMMA

NULL
COMMA

stat_addr
COMMA

ru
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

__ARCH_WANT_SYS_WAITPID

asmlinkage
TYPE_LONG

sys_waitpid
BRACKET_O

pid_t

pid
COMMA
TYPE_INT

__user
MULT

stat_addr
COMMA
TYPE_INT

options
BRACKET_C
CURLY_BRACKET_O

return

sys_wait4
BRACKET_O

pid
COMMA

stat_addr
COMMA

options
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

extern
STRUCT

exception_table_entry

__start___ex_table
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
STRUCT

exception_table_entry

__stop___ex_table
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

void

__init

sort_main_extable
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

sort_extable
BRACKET_O

__start___ex_table
COMMA

__stop___ex_table
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CONST
STRUCT

exception_table_entry
MULT

search_exception_tables
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
CONST
STRUCT

exception_table_entry
MULT

e
SEMICOLON

e
OP_ASSIGNMENT

search_extable
BRACKET_O

__start___ex_table
COMMA

__stop___ex_table
MINUS
NUMBER
COMMA

addr
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

e
BRACKET_C

e
OP_ASSIGNMENT

search_module_extables
BRACKET_O

addr
BRACKET_C
SEMICOLON

return

e
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

core_kernel_text
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

addr
GR_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_stext
AND

addr
LE_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_etext
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

addr
GR_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_sinittext
AND

addr
LE_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_einittext
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__kernel_text_address
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

core_kernel_text
BRACKET_O

addr
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return

__module_text_address
BRACKET_O

addr
BRACKET_C
NOT_EQ

NULL
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

kernel_text_address
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

core_kernel_text
BRACKET_O

addr
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return

module_text_address
BRACKET_O

addr
BRACKET_C
NOT_EQ

NULL
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
TYPE_UNSIGNED
TYPE_LONG

total_forks
SEMICOLON
TYPE_INT

nr_threads
SEMICOLON
TYPE_INT

max_threads
SEMICOLON

DEFINE_PER_CPU
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
COMMA

process_counts
BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

__cacheline_aligned

DEFINE_RWLOCK
BRACKET_O

tasklist_lock
BRACKET_C
SEMICOLON
TYPE_INT

nr_processes
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
SEMICOLON
TYPE_INT

total
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_online_cpu
BRACKET_O

cpu
BRACKET_C

total
ASSIGN_PLUS

per_cpu
BRACKET_O

process_counts
COMMA

cpu
BRACKET_C
SEMICOLON

return

total
SEMICOLON
CURLY_BRACKET_C
PP_IFNDEF

__HAVE_ARCH_TASK_STRUCT_ALLOCATOR
PP_DEFINE

alloc_task_struct
BRACKET_O
BRACKET_C

kmem_cache_alloc
BRACKET_O

task_struct_cachep
COMMA

GFP_KERNEL
BRACKET_C
PP_DEFINE

free_task_struct
BRACKET_O

tsk
BRACKET_C

kmem_cache_free
BRACKET_O

task_struct_cachep
COMMA
BRACKET_O

tsk
BRACKET_C
BRACKET_C

static
STRUCT

kmem_cache
MULT

task_struct_cachep
SEMICOLON
PP_ENDIF

static
STRUCT

kmem_cache
MULT

signal_cachep
SEMICOLON
STRUCT

kmem_cache
MULT

sighand_cachep
SEMICOLON
STRUCT

kmem_cache
MULT

files_cachep
SEMICOLON
STRUCT

kmem_cache
MULT

fs_cachep
SEMICOLON
STRUCT

kmem_cache
MULT

vm_area_cachep
SEMICOLON

static
STRUCT

kmem_cache
MULT

mm_cachep
SEMICOLON

void

free_task
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O

free_thread_info
BRACKET_O

tsk
MINUS
GREATER

stack
BRACKET_C
SEMICOLON

rt_mutex_debug_task_free
BRACKET_O

tsk
BRACKET_C
SEMICOLON

free_task_struct
BRACKET_O

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

free_task
BRACKET_C
SEMICOLON

void

__put_task_struct
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O

WARN_ON
BRACKET_O
NOT
BRACKET_O

tsk
MINUS
GREATER

exit_state
AMPERSANT
BRACKET_O

EXIT_DEAD
LOGICAL_OR

EXIT_ZOMBIE
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

usage
BRACKET_C
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

tsk
EQ

current
BRACKET_C
SEMICOLON

security_task_free
BRACKET_O

tsk
BRACKET_C
SEMICOLON

free_uid
BRACKET_O

tsk
MINUS
GREATER

user
BRACKET_C
SEMICOLON

put_group_info
BRACKET_O

tsk
MINUS
GREATER

group_info
BRACKET_C
SEMICOLON

delayacct_tsk_free
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

profile_handoff_task
BRACKET_O

tsk
BRACKET_C
BRACKET_C

free_task
BRACKET_O

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__init

fork_init
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

mempages
BRACKET_C
CURLY_BRACKET_O
PP_IFNDEF

__HAVE_ARCH_TASK_STRUCT_ALLOCATOR
PP_IFNDEF

ARCH_MIN_TASKALIGN
PP_DEFINE

ARCH_MIN_TASKALIGN

L1_CACHE_BYTES
PP_ENDIF

task_struct_cachep
OP_ASSIGNMENT

kmem_cache_create
BRACKET_O
STRING
COMMA

sizeof
BRACKET_O
STRUCT

task_struct
BRACKET_C
COMMA

ARCH_MIN_TASKALIGN
COMMA

SLAB_PANIC
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON
PP_ENDIF

max_threads
OP_ASSIGNMENT

mempages
DIV
BRACKET_O
NUMBER
MULT

THREAD_SIZE
DIV

PAGE_SIZE
BRACKET_C
SEMICOLON
IF
BRACKET_O

max_threads
LESS
NUMBER
BRACKET_C

max_threads
OP_ASSIGNMENT
NUMBER
SEMICOLON

init_task
DOT

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_NPROC
CORNER_BRACKET_C
DOT

rlim_cur
OP_ASSIGNMENT

max_threads
DIV
NUMBER
SEMICOLON

init_task
DOT

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_NPROC
CORNER_BRACKET_C
DOT

rlim_max
OP_ASSIGNMENT

max_threads
DIV
NUMBER
SEMICOLON

init_task
DOT

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_SIGPENDING
CORNER_BRACKET_C
OP_ASSIGNMENT

init_task
DOT

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_NPROC
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

task_struct
MULT

dup_task_struct
BRACKET_O
STRUCT

task_struct
MULT

orig
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
SEMICOLON
STRUCT

thread_info
MULT

ti
SEMICOLON

prepare_to_copy
BRACKET_O

orig
BRACKET_C
SEMICOLON

tsk
OP_ASSIGNMENT

alloc_task_struct
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tsk
BRACKET_C

return

NULL
SEMICOLON

ti
OP_ASSIGNMENT

alloc_thread_info
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ti
BRACKET_C
CURLY_BRACKET_O

free_task_struct
BRACKET_O

tsk
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C
MULT

tsk
OP_ASSIGNMENT
MULT

orig
SEMICOLON

tsk
MINUS
GREATER

stack
OP_ASSIGNMENT

ti
SEMICOLON

setup_thread_stack
BRACKET_O

tsk
COMMA

orig
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_CC_STACKPROTECTOR

tsk
MINUS
GREATER

stack_canary
OP_ASSIGNMENT

get_random_int
BRACKET_O
BRACKET_C
SEMICOLON
PP_ENDIF

atomic_set
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

usage
COMMA
NUMBER
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

fs_excl
COMMA
NUMBER
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_BLK_DEV_IO_TRACE

tsk
MINUS
GREATER

btrace_seq
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF

tsk
MINUS
GREATER

splice_pipe
OP_ASSIGNMENT

NULL
SEMICOLON

return

tsk
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_MMU

static

inline
TYPE_INT

dup_mmap
BRACKET_O
STRUCT

mm_struct
MULT

mm
COMMA
STRUCT

mm_struct
MULT

oldmm
BRACKET_C
CURLY_BRACKET_O
STRUCT

vm_area_struct
MULT

mpnt
COMMA
MULT

tmp
COMMA
MULT
MULT

pprev
SEMICOLON
STRUCT

rb_node
MULT
MULT

rb_link
COMMA
MULT

rb_parent
SEMICOLON
TYPE_INT

retval
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

charge
SEMICOLON
STRUCT

mempolicy
MULT

pol
SEMICOLON

down_write
BRACKET_O
AMPERSANT

oldmm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON

flush_cache_dup_mm
BRACKET_O

oldmm
BRACKET_C
SEMICOLON

down_write_nested
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
COMMA

SINGLE_DEPTH_NESTING
BRACKET_C
SEMICOLON

mm
MINUS
GREATER

locked_vm
OP_ASSIGNMENT
NUMBER
SEMICOLON

mm
MINUS
GREATER

mmap
OP_ASSIGNMENT

NULL
SEMICOLON

mm
MINUS
GREATER

mmap_cache
OP_ASSIGNMENT

NULL
SEMICOLON

mm
MINUS
GREATER

free_area_cache
OP_ASSIGNMENT

oldmm
MINUS
GREATER

mmap_base
SEMICOLON

mm
MINUS
GREATER

cached_hole_size
OP_ASSIGNMENT
TILDE
NUMBER

UL
SEMICOLON

mm
MINUS
GREATER

map_count
OP_ASSIGNMENT
NUMBER
SEMICOLON

cpus_clear
BRACKET_O

mm
MINUS
GREATER

cpu_vm_mask
BRACKET_C
SEMICOLON

mm
MINUS
GREATER

mm_rb
OP_ASSIGNMENT

RB_ROOT
SEMICOLON

rb_link
OP_ASSIGNMENT
AMPERSANT

mm
MINUS
GREATER

mm_rb
DOT

rb_node
SEMICOLON

rb_parent
OP_ASSIGNMENT

NULL
SEMICOLON

pprev
OP_ASSIGNMENT
AMPERSANT

mm
MINUS
GREATER

mmap
SEMICOLON
FOR
BRACKET_O

mpnt
OP_ASSIGNMENT

oldmm
MINUS
GREATER

mmap
SEMICOLON

mpnt
SEMICOLON

mpnt
OP_ASSIGNMENT

mpnt
MINUS
GREATER

vm_next
BRACKET_C
CURLY_BRACKET_O
STRUCT

file
MULT

file
SEMICOLON
IF
BRACKET_O

mpnt
MINUS
GREATER

vm_flags
AMPERSANT

VM_DONTCOPY
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

pages
OP_ASSIGNMENT

vma_pages
BRACKET_O

mpnt
BRACKET_C
SEMICOLON

mm
MINUS
GREATER

total_vm
ASSIGN_MINUS

pages
SEMICOLON

vm_stat_account
BRACKET_O

mm
COMMA

mpnt
MINUS
GREATER

vm_flags
COMMA

mpnt
MINUS
GREATER

vm_file
COMMA
MINUS

pages
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

charge
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

mpnt
MINUS
GREATER

vm_flags
AMPERSANT

VM_ACCOUNT
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

len
OP_ASSIGNMENT
BRACKET_O

mpnt
MINUS
GREATER

vm_end
MINUS

mpnt
MINUS
GREATER

vm_start
BRACKET_C
GREATER
GREATER

PAGE_SHIFT
SEMICOLON
IF
BRACKET_O

security_vm_enough_memory
BRACKET_O

len
BRACKET_C
BRACKET_C

goto

fail_nomem
SEMICOLON

charge
OP_ASSIGNMENT

len
SEMICOLON
CURLY_BRACKET_C

tmp
OP_ASSIGNMENT

kmem_cache_alloc
BRACKET_O

vm_area_cachep
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tmp
BRACKET_C

goto

fail_nomem
SEMICOLON
MULT

tmp
OP_ASSIGNMENT
MULT

mpnt
SEMICOLON

pol
OP_ASSIGNMENT

mpol_copy
BRACKET_O

vma_policy
BRACKET_O

mpnt
BRACKET_C
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

pol
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

pol
BRACKET_C
BRACKET_C

goto

fail_nomem_policy
SEMICOLON

vma_set_policy
BRACKET_O

tmp
COMMA

pol
BRACKET_C
SEMICOLON

tmp
MINUS
GREATER

vm_flags
AMPERSANT
OP_ASSIGNMENT
TILDE

VM_LOCKED
SEMICOLON

tmp
MINUS
GREATER

vm_mm
OP_ASSIGNMENT

mm
SEMICOLON

tmp
MINUS
GREATER

vm_next
OP_ASSIGNMENT

NULL
SEMICOLON

anon_vma_link
BRACKET_O

tmp
BRACKET_C
SEMICOLON

file
OP_ASSIGNMENT

tmp
MINUS
GREATER

vm_file
SEMICOLON
IF
BRACKET_O

file
BRACKET_C
CURLY_BRACKET_O
STRUCT

inode
MULT

inode
OP_ASSIGNMENT

file
MINUS
GREATER

f_path
DOT

dentry
MINUS
GREATER

d_inode
SEMICOLON

get_file
BRACKET_O

file
BRACKET_C
SEMICOLON
IF
BRACKET_O

tmp
MINUS
GREATER

vm_flags
AMPERSANT

VM_DENYWRITE
BRACKET_C

atomic_dec
BRACKET_O
AMPERSANT

inode
MINUS
GREATER

i_writecount
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

file
MINUS
GREATER

f_mapping
MINUS
GREATER

i_mmap_lock
BRACKET_C
SEMICOLON

tmp
MINUS
GREATER

vm_truncate_count
OP_ASSIGNMENT

mpnt
MINUS
GREATER

vm_truncate_count
SEMICOLON

flush_dcache_mmap_lock
BRACKET_O

file
MINUS
GREATER

f_mapping
BRACKET_C
SEMICOLON

vma_prio_tree_add
BRACKET_O

tmp
COMMA

mpnt
BRACKET_C
SEMICOLON

flush_dcache_mmap_unlock
BRACKET_O

file
MINUS
GREATER

f_mapping
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

file
MINUS
GREATER

f_mapping
MINUS
GREATER

i_mmap_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
MULT

pprev
OP_ASSIGNMENT

tmp
SEMICOLON

pprev
OP_ASSIGNMENT
AMPERSANT

tmp
MINUS
GREATER

vm_next
SEMICOLON

__vma_link_rb
BRACKET_O

mm
COMMA

tmp
COMMA

rb_link
COMMA

rb_parent
BRACKET_C
SEMICOLON

rb_link
OP_ASSIGNMENT
AMPERSANT

tmp
MINUS
GREATER

vm_rb
DOT

rb_right
SEMICOLON

rb_parent
OP_ASSIGNMENT
AMPERSANT

tmp
MINUS
GREATER

vm_rb
SEMICOLON

mm
MINUS
GREATER

map_count
PLUS
PLUS
SEMICOLON

retval
OP_ASSIGNMENT

copy_page_range
BRACKET_O

mm
COMMA

oldmm
COMMA

mpnt
BRACKET_C
SEMICOLON
IF
BRACKET_O

tmp
MINUS
GREATER

vm_ops
AND

tmp
MINUS
GREATER

vm_ops
MINUS
GREATER

open
BRACKET_C

tmp
MINUS
GREATER

vm_ops
MINUS
GREATER

open
BRACKET_O

tmp
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

arch_dup_mmap
BRACKET_O

oldmm
COMMA

mm
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON

up_write
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON

flush_tlb_mm
BRACKET_O

oldmm
BRACKET_C
SEMICOLON

up_write
BRACKET_O
AMPERSANT

oldmm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON

return

retval
SEMICOLON

fail_nomem_policy
COLON

kmem_cache_free
BRACKET_O

vm_area_cachep
COMMA

tmp
BRACKET_C
SEMICOLON

fail_nomem
COLON

retval
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

vm_unacct_memory
BRACKET_O

charge
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

mm_alloc_pgd
BRACKET_O
STRUCT

mm_struct
MULT

mm
BRACKET_C
CURLY_BRACKET_O

mm
MINUS
GREATER

pgd
OP_ASSIGNMENT

pgd_alloc
BRACKET_O

mm
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

mm
MINUS
GREATER

pgd
BRACKET_C
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline

void

mm_free_pgd
BRACKET_O
STRUCT

mm_struct
MULT

mm
BRACKET_C
CURLY_BRACKET_O

pgd_free
BRACKET_O

mm
MINUS
GREATER

pgd
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ELSE
PP_DEFINE

dup_mmap
BRACKET_O

mm
COMMA

oldmm
BRACKET_C
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

mm_alloc_pgd
BRACKET_O

mm
BRACKET_C
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

mm_free_pgd
BRACKET_O

mm
BRACKET_C
PP_ENDIF

__cacheline_aligned_in_smp

DEFINE_SPINLOCK
BRACKET_O

mmlist_lock
BRACKET_C
SEMICOLON
PP_DEFINE

allocate_mm
BRACKET_O
BRACKET_C
BRACKET_O

kmem_cache_alloc
BRACKET_O

mm_cachep
COMMA

GFP_KERNEL
BRACKET_C
BRACKET_C
PP_DEFINE

free_mm
BRACKET_O

mm
BRACKET_C
BRACKET_O

kmem_cache_free
BRACKET_O

mm_cachep
COMMA
BRACKET_O

mm
BRACKET_C
BRACKET_C
BRACKET_C
PP_INCLUDE

static
STRUCT

mm_struct
MULT

mm_init
BRACKET_O
STRUCT

mm_struct
MULT

mm
BRACKET_C
CURLY_BRACKET_O

atomic_set
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mm_users
COMMA
NUMBER
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mm_count
COMMA
NUMBER
BRACKET_C
SEMICOLON

init_rwsem
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmlist
BRACKET_C
SEMICOLON

mm
MINUS
GREATER

core_waiters
OP_ASSIGNMENT
NUMBER
SEMICOLON

mm
MINUS
GREATER

nr_ptes
OP_ASSIGNMENT
NUMBER
SEMICOLON

set_mm_counter
BRACKET_O

mm
COMMA

file_rss
COMMA
NUMBER
BRACKET_C
SEMICOLON

set_mm_counter
BRACKET_O

mm
COMMA

anon_rss
COMMA
NUMBER
BRACKET_C
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

page_table_lock
BRACKET_C
SEMICOLON

rwlock_init
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

ioctx_list_lock
BRACKET_C
SEMICOLON

mm
MINUS
GREATER

ioctx_list
OP_ASSIGNMENT

NULL
SEMICOLON

mm
MINUS
GREATER

free_area_cache
OP_ASSIGNMENT

TASK_UNMAPPED_BASE
SEMICOLON

mm
MINUS
GREATER

cached_hole_size
OP_ASSIGNMENT
TILDE
NUMBER

UL
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

mm_alloc_pgd
BRACKET_O

mm
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

mm
MINUS
GREATER

def_flags
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

mm
SEMICOLON
CURLY_BRACKET_C

free_mm
BRACKET_O

mm
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C
STRUCT

mm_struct
MULT

mm_alloc
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

mm_struct
MULT

mm
SEMICOLON

mm
OP_ASSIGNMENT

allocate_mm
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

mm
BRACKET_C
CURLY_BRACKET_O

memset
BRACKET_O

mm
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
MULT

mm
BRACKET_C
BRACKET_C
SEMICOLON

mm
OP_ASSIGNMENT

mm_init
BRACKET_O

mm
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

mm
SEMICOLON
CURLY_BRACKET_C

void

fastcall

__mmdrop
BRACKET_O
STRUCT

mm_struct
MULT

mm
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

mm
EQ
AMPERSANT

init_mm
BRACKET_C
SEMICOLON

mm_free_pgd
BRACKET_O

mm
BRACKET_C
SEMICOLON

destroy_context
BRACKET_O

mm
BRACKET_C
SEMICOLON

free_mm
BRACKET_O

mm
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

mmput
BRACKET_O
STRUCT

mm_struct
MULT

mm
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_dec_and_test
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mm_users
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

exit_aio
BRACKET_O

mm
BRACKET_C
SEMICOLON

exit_mmap
BRACKET_O

mm
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmlist
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

mmlist_lock
BRACKET_C
SEMICOLON

list_del
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmlist
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

mmlist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

put_swap_token
BRACKET_O

mm
BRACKET_C
SEMICOLON

mmdrop
BRACKET_O

mm
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

mmput
BRACKET_C
SEMICOLON
STRUCT

mm_struct
MULT

get_task_mm
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
STRUCT

mm_struct
MULT

mm
SEMICOLON

task_lock
BRACKET_O

task
BRACKET_C
SEMICOLON

mm
OP_ASSIGNMENT

task
MINUS
GREATER

mm
SEMICOLON
IF
BRACKET_O

mm
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

task
MINUS
GREATER

flags
AMPERSANT

PF_BORROWED_MM
BRACKET_C

mm
OP_ASSIGNMENT

NULL
SEMICOLON
ELSE

atomic_inc
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mm_users
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

task_unlock
BRACKET_O

task
BRACKET_C
SEMICOLON

return

mm
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

get_task_mm
BRACKET_C
SEMICOLON

void

mm_release
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
STRUCT

mm_struct
MULT

mm
BRACKET_C
CURLY_BRACKET_O
STRUCT

completion
MULT

vfork_done
OP_ASSIGNMENT

tsk
MINUS
GREATER

vfork_done
SEMICOLON

deactivate_mm
BRACKET_O

tsk
COMMA

mm
BRACKET_C
SEMICOLON
IF
BRACKET_O

vfork_done
BRACKET_C
CURLY_BRACKET_O

tsk
MINUS
GREATER

vfork_done
OP_ASSIGNMENT

NULL
SEMICOLON

complete
BRACKET_O

vfork_done
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

tsk
MINUS
GREATER

clear_child_tid
AND
NOT
BRACKET_O

tsk
MINUS
GREATER

flags
AMPERSANT

PF_SIGNALED
BRACKET_C
AND

atomic_read
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mm_users
BRACKET_C
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

u32

__user
MULT

tidptr
OP_ASSIGNMENT

tsk
MINUS
GREATER

clear_child_tid
SEMICOLON

tsk
MINUS
GREATER

clear_child_tid
OP_ASSIGNMENT

NULL
SEMICOLON

put_user
BRACKET_O
NUMBER
COMMA

tidptr
BRACKET_C
SEMICOLON

sys_futex
BRACKET_O

tidptr
COMMA

FUTEX_WAKE
COMMA
NUMBER
COMMA

NULL
COMMA

NULL
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
STRUCT

mm_struct
MULT

dup_mm
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

mm_struct
MULT

mm
COMMA
MULT

oldmm
OP_ASSIGNMENT

current
MINUS
GREATER

mm
SEMICOLON
TYPE_INT

err
SEMICOLON
IF
BRACKET_O
NOT

oldmm
BRACKET_C

return

NULL
SEMICOLON

mm
OP_ASSIGNMENT

allocate_mm
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

mm
BRACKET_C

goto

fail_nomem
SEMICOLON

memcpy
BRACKET_O

mm
COMMA

oldmm
COMMA

sizeof
BRACKET_O
MULT

mm
BRACKET_C
BRACKET_C
SEMICOLON

mm
MINUS
GREATER

token_priority
OP_ASSIGNMENT
NUMBER
SEMICOLON

mm
MINUS
GREATER

last_interval
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

mm_init
BRACKET_O

mm
BRACKET_C
BRACKET_C

goto

fail_nomem
SEMICOLON
IF
BRACKET_O

init_new_context
BRACKET_O

tsk
COMMA

mm
BRACKET_C
BRACKET_C

goto

fail_nocontext
SEMICOLON

err
OP_ASSIGNMENT

dup_mmap
BRACKET_O

mm
COMMA

oldmm
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

goto

free_pt
SEMICOLON

mm
MINUS
GREATER

hiwater_rss
OP_ASSIGNMENT

get_mm_rss
BRACKET_O

mm
BRACKET_C
SEMICOLON

mm
MINUS
GREATER

hiwater_vm
OP_ASSIGNMENT

mm
MINUS
GREATER

total_vm
SEMICOLON

return

mm
SEMICOLON

free_pt
COLON

mmput
BRACKET_O

mm
BRACKET_C
SEMICOLON

fail_nomem
COLON

return

NULL
SEMICOLON

fail_nocontext
COLON

mm_free_pgd
BRACKET_O

mm
BRACKET_C
SEMICOLON

free_mm
BRACKET_O

mm
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

copy_mm
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

clone_flags
COMMA
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

mm_struct
MULT

mm
COMMA
MULT

oldmm
SEMICOLON
TYPE_INT

retval
SEMICOLON

tsk
MINUS
GREATER

min_flt
OP_ASSIGNMENT

tsk
MINUS
GREATER

maj_flt
OP_ASSIGNMENT
NUMBER
SEMICOLON

tsk
MINUS
GREATER

nvcsw
OP_ASSIGNMENT

tsk
MINUS
GREATER

nivcsw
OP_ASSIGNMENT
NUMBER
SEMICOLON

tsk
MINUS
GREATER

mm
OP_ASSIGNMENT

NULL
SEMICOLON

tsk
MINUS
GREATER

active_mm
OP_ASSIGNMENT

NULL
SEMICOLON

oldmm
OP_ASSIGNMENT

current
MINUS
GREATER

mm
SEMICOLON
IF
BRACKET_O
NOT

oldmm
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

clone_flags
AMPERSANT

CLONE_VM
BRACKET_C
CURLY_BRACKET_O

atomic_inc
BRACKET_O
AMPERSANT

oldmm
MINUS
GREATER

mm_users
BRACKET_C
SEMICOLON

mm
OP_ASSIGNMENT

oldmm
SEMICOLON

goto

good_mm
SEMICOLON
CURLY_BRACKET_C

retval
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

mm
OP_ASSIGNMENT

dup_mm
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

mm
BRACKET_C

goto

fail_nomem
SEMICOLON

good_mm
COLON

mm
MINUS
GREATER

token_priority
OP_ASSIGNMENT
NUMBER
SEMICOLON

mm
MINUS
GREATER

last_interval
OP_ASSIGNMENT
NUMBER
SEMICOLON

tsk
MINUS
GREATER

mm
OP_ASSIGNMENT

mm
SEMICOLON

tsk
MINUS
GREATER

active_mm
OP_ASSIGNMENT

mm
SEMICOLON

return
NUMBER
SEMICOLON

fail_nomem
COLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static

inline
STRUCT

fs_struct
MULT

__copy_fs_struct
BRACKET_O
STRUCT

fs_struct
MULT

old
BRACKET_C
CURLY_BRACKET_O
STRUCT

fs_struct
MULT

fs
OP_ASSIGNMENT

kmem_cache_alloc
BRACKET_O

fs_cachep
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

fs
BRACKET_C
CURLY_BRACKET_O

atomic_set
BRACKET_O
AMPERSANT

fs
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

rwlock_init
BRACKET_O
AMPERSANT

fs
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

fs
MINUS
GREATER

umask
OP_ASSIGNMENT

old
MINUS
GREATER

umask
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

old
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

fs
MINUS
GREATER

rootmnt
OP_ASSIGNMENT

mntget
BRACKET_O

old
MINUS
GREATER

rootmnt
BRACKET_C
SEMICOLON

fs
MINUS
GREATER

root
OP_ASSIGNMENT

dget
BRACKET_O

old
MINUS
GREATER

root
BRACKET_C
SEMICOLON

fs
MINUS
GREATER

pwdmnt
OP_ASSIGNMENT

mntget
BRACKET_O

old
MINUS
GREATER

pwdmnt
BRACKET_C
SEMICOLON

fs
MINUS
GREATER

pwd
OP_ASSIGNMENT

dget
BRACKET_O

old
MINUS
GREATER

pwd
BRACKET_C
SEMICOLON
IF
BRACKET_O

old
MINUS
GREATER

altroot
BRACKET_C
CURLY_BRACKET_O

fs
MINUS
GREATER

altrootmnt
OP_ASSIGNMENT

mntget
BRACKET_O

old
MINUS
GREATER

altrootmnt
BRACKET_C
SEMICOLON

fs
MINUS
GREATER

altroot
OP_ASSIGNMENT

dget
BRACKET_O

old
MINUS
GREATER

altroot
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

fs
MINUS
GREATER

altrootmnt
OP_ASSIGNMENT

NULL
SEMICOLON

fs
MINUS
GREATER

altroot
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

old
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

fs
SEMICOLON
CURLY_BRACKET_C
STRUCT

fs_struct
MULT

copy_fs_struct
BRACKET_O
STRUCT

fs_struct
MULT

old
BRACKET_C
CURLY_BRACKET_O

return

__copy_fs_struct
BRACKET_O

old
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

copy_fs_struct
BRACKET_C
SEMICOLON

static

inline
TYPE_INT

copy_fs
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

clone_flags
COMMA
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

clone_flags
AMPERSANT

CLONE_FS
BRACKET_C
CURLY_BRACKET_O

atomic_inc
BRACKET_O
AMPERSANT

current
MINUS
GREATER

fs
MINUS
GREATER

count
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

tsk
MINUS
GREATER

fs
OP_ASSIGNMENT

__copy_fs_struct
BRACKET_O

current
MINUS
GREATER

fs
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tsk
MINUS
GREATER

fs
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

count_open_files
BRACKET_O
STRUCT

fdtable
MULT

fdt
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

size
OP_ASSIGNMENT

fdt
MINUS
GREATER

max_fds
SEMICOLON
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT

size
DIV
BRACKET_O
NUMBER
MULT

sizeof
BRACKET_O
TYPE_LONG
BRACKET_C
BRACKET_C
SEMICOLON

i
GREATER
NUMBER
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

fdt
MINUS
GREATER

open_fds
MINUS
GREATER

fds_bits
CORNER_BRACKET_O
MINUS
MINUS

i
CORNER_BRACKET_C
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

i
OP_ASSIGNMENT
BRACKET_O

i
PLUS
NUMBER
BRACKET_C
MULT
NUMBER
MULT

sizeof
BRACKET_O
TYPE_LONG
BRACKET_C
SEMICOLON

return

i
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

files_struct
MULT

alloc_files
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

files_struct
MULT

newf
SEMICOLON
STRUCT

fdtable
MULT

fdt
SEMICOLON

newf
OP_ASSIGNMENT

kmem_cache_alloc
BRACKET_O

files_cachep
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

newf
BRACKET_C

goto

out
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

newf
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

newf
MINUS
GREATER

file_lock
BRACKET_C
SEMICOLON

newf
MINUS
GREATER

next_fd
OP_ASSIGNMENT
NUMBER
SEMICOLON

fdt
OP_ASSIGNMENT
AMPERSANT

newf
MINUS
GREATER

fdtab
SEMICOLON

fdt
MINUS
GREATER

max_fds
OP_ASSIGNMENT

NR_OPEN_DEFAULT
SEMICOLON

fdt
MINUS
GREATER

close_on_exec
OP_ASSIGNMENT
BRACKET_O

fd_set
MULT
BRACKET_C
AMPERSANT

newf
MINUS
GREATER

close_on_exec_init
SEMICOLON

fdt
MINUS
GREATER

open_fds
OP_ASSIGNMENT
BRACKET_O

fd_set
MULT
BRACKET_C
AMPERSANT

newf
MINUS
GREATER

open_fds_init
SEMICOLON

fdt
MINUS
GREATER

fd
OP_ASSIGNMENT
AMPERSANT

newf
MINUS
GREATER

fd_array
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

INIT_RCU_HEAD
BRACKET_O
AMPERSANT

fdt
MINUS
GREATER

rcu
BRACKET_C
SEMICOLON

fdt
MINUS
GREATER

next
OP_ASSIGNMENT

NULL
SEMICOLON

rcu_assign_pointer
BRACKET_O

newf
MINUS
GREATER

fdt
COMMA

fdt
BRACKET_C
SEMICOLON

out
COLON

return

newf
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

files_struct
MULT

dup_fd
BRACKET_O
STRUCT

files_struct
MULT

oldf
COMMA
TYPE_INT
MULT

errorp
BRACKET_C
CURLY_BRACKET_O
STRUCT

files_struct
MULT

newf
SEMICOLON
STRUCT

file
MULT
MULT

old_fds
COMMA
MULT
MULT

new_fds
SEMICOLON
TYPE_INT

open_files
COMMA

size
COMMA

i
SEMICOLON
STRUCT

fdtable
MULT

old_fdt
COMMA
MULT

new_fdt
SEMICOLON
MULT

errorp
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

newf
OP_ASSIGNMENT

alloc_files
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

newf
BRACKET_C

goto

out
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

oldf
MINUS
GREATER

file_lock
BRACKET_C
SEMICOLON

old_fdt
OP_ASSIGNMENT

files_fdtable
BRACKET_O

oldf
BRACKET_C
SEMICOLON

new_fdt
OP_ASSIGNMENT

files_fdtable
BRACKET_O

newf
BRACKET_C
SEMICOLON

open_files
OP_ASSIGNMENT

count_open_files
BRACKET_O

old_fdt
BRACKET_C
SEMICOLON
IF
BRACKET_O

open_files
GREATER

new_fdt
MINUS
GREATER

max_fds
BRACKET_C
CURLY_BRACKET_O

new_fdt
MINUS
GREATER

max_fds
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

oldf
MINUS
GREATER

file_lock
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

newf
MINUS
GREATER

file_lock
BRACKET_C
SEMICOLON
MULT

errorp
OP_ASSIGNMENT

expand_files
BRACKET_O

newf
COMMA

open_files
MINUS
NUMBER
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

newf
MINUS
GREATER

file_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
MULT

errorp
LESS
NUMBER
BRACKET_C

goto

out_release
SEMICOLON

new_fdt
OP_ASSIGNMENT

files_fdtable
BRACKET_O

newf
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

oldf
MINUS
GREATER

file_lock
BRACKET_C
SEMICOLON

old_fdt
OP_ASSIGNMENT

files_fdtable
BRACKET_O

oldf
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

old_fds
OP_ASSIGNMENT

old_fdt
MINUS
GREATER

fd
SEMICOLON

new_fds
OP_ASSIGNMENT

new_fdt
MINUS
GREATER

fd
SEMICOLON

memcpy
BRACKET_O

new_fdt
MINUS
GREATER

open_fds
MINUS
GREATER

fds_bits
COMMA

old_fdt
MINUS
GREATER

open_fds
MINUS
GREATER

fds_bits
COMMA

open_files
DIV
NUMBER
BRACKET_C
SEMICOLON

memcpy
BRACKET_O

new_fdt
MINUS
GREATER

close_on_exec
MINUS
GREATER

fds_bits
COMMA

old_fdt
MINUS
GREATER

close_on_exec
MINUS
GREATER

fds_bits
COMMA

open_files
DIV
NUMBER
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT

open_files
SEMICOLON

i
NOT_EQ
NUMBER
SEMICOLON

i
MINUS
MINUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

file
MULT

f
OP_ASSIGNMENT
MULT

old_fds
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

f
BRACKET_C
CURLY_BRACKET_O

get_file
BRACKET_O

f
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

FD_CLR
BRACKET_O

open_files
MINUS

i
COMMA

new_fdt
MINUS
GREATER

open_fds
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

rcu_assign_pointer
BRACKET_O
MULT

new_fds
PLUS
PLUS
COMMA

f
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

oldf
MINUS
GREATER

file_lock
BRACKET_C
SEMICOLON

size
OP_ASSIGNMENT
BRACKET_O

new_fdt
MINUS
GREATER

max_fds
MINUS

open_files
BRACKET_C
MULT

sizeof
BRACKET_O
STRUCT

file
MULT
BRACKET_C
SEMICOLON

memset
BRACKET_O

new_fds
COMMA
NUMBER
COMMA

size
BRACKET_C
SEMICOLON
IF
BRACKET_O

new_fdt
MINUS
GREATER

max_fds
GREATER

open_files
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

left
OP_ASSIGNMENT
BRACKET_O

new_fdt
MINUS
GREATER

max_fds
MINUS

open_files
BRACKET_C
DIV
NUMBER
SEMICOLON
TYPE_INT

start
OP_ASSIGNMENT

open_files
DIV
BRACKET_O
NUMBER
MULT

sizeof
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
BRACKET_C
SEMICOLON

memset
BRACKET_O
AMPERSANT

new_fdt
MINUS
GREATER

open_fds
MINUS
GREATER

fds_bits
CORNER_BRACKET_O

start
CORNER_BRACKET_C
COMMA
NUMBER
COMMA

left
BRACKET_C
SEMICOLON

memset
BRACKET_O
AMPERSANT

new_fdt
MINUS
GREATER

close_on_exec
MINUS
GREATER

fds_bits
CORNER_BRACKET_O

start
CORNER_BRACKET_C
COMMA
NUMBER
COMMA

left
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

newf
SEMICOLON

out_release
COLON

kmem_cache_free
BRACKET_O

files_cachep
COMMA

newf
BRACKET_C
SEMICOLON

out
COLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

copy_files
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

clone_flags
COMMA
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

files_struct
MULT

oldf
COMMA
MULT

newf
SEMICOLON
TYPE_INT

error
OP_ASSIGNMENT
NUMBER
SEMICOLON

oldf
OP_ASSIGNMENT

current
MINUS
GREATER

files
SEMICOLON
IF
BRACKET_O
NOT

oldf
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

clone_flags
AMPERSANT

CLONE_FILES
BRACKET_C
CURLY_BRACKET_O

atomic_inc
BRACKET_O
AMPERSANT

oldf
MINUS
GREATER

count
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

tsk
MINUS
GREATER

files
OP_ASSIGNMENT

NULL
SEMICOLON

newf
OP_ASSIGNMENT

dup_fd
BRACKET_O

oldf
COMMA
AMPERSANT

error
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

newf
BRACKET_C

goto

out
SEMICOLON

tsk
MINUS
GREATER

files
OP_ASSIGNMENT

newf
SEMICOLON

error
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON

return

error
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

unshare_files
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

files_struct
MULT

files
OP_ASSIGNMENT

current
MINUS
GREATER

files
SEMICOLON
TYPE_INT

rc
SEMICOLON

BUG_ON
BRACKET_O
NOT

files
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

files
MINUS
GREATER

count
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

atomic_inc
BRACKET_O
AMPERSANT

files
MINUS
GREATER

count
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

rc
OP_ASSIGNMENT

copy_files
BRACKET_O
NUMBER
COMMA

current
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
BRACKET_C

current
MINUS
GREATER

files
OP_ASSIGNMENT

files
SEMICOLON

return

rc
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

unshare_files
BRACKET_C
SEMICOLON

static

inline
TYPE_INT

copy_sighand
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

clone_flags
COMMA
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

sighand_struct
MULT

sig
SEMICOLON
IF
BRACKET_O

clone_flags
AMPERSANT
BRACKET_O

CLONE_SIGHAND
LOGICAL_OR

CLONE_THREAD
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

atomic_inc
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

count
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

sig
OP_ASSIGNMENT

kmem_cache_alloc
BRACKET_O

sighand_cachep
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON

rcu_assign_pointer
BRACKET_O

tsk
MINUS
GREATER

sighand
COMMA

sig
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sig
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

memcpy
BRACKET_O

sig
MINUS
GREATER

action
COMMA

current
MINUS
GREATER

sighand
MINUS
GREATER

action
COMMA

sizeof
BRACKET_O

sig
MINUS
GREATER

action
BRACKET_C
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

__cleanup_sighand
BRACKET_O
STRUCT

sighand_struct
MULT

sighand
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

atomic_dec_and_test
BRACKET_O
AMPERSANT

sighand
MINUS
GREATER

count
BRACKET_C
BRACKET_C

kmem_cache_free
BRACKET_O

sighand_cachep
COMMA

sighand
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

copy_signal
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

clone_flags
COMMA
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

signal_struct
MULT

sig
SEMICOLON
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O

clone_flags
AMPERSANT

CLONE_THREAD
BRACKET_C
CURLY_BRACKET_O

atomic_inc
BRACKET_O
AMPERSANT

current
MINUS
GREATER

signal
MINUS
GREATER

count
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

current
MINUS
GREATER

signal
MINUS
GREATER

live
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

sig
OP_ASSIGNMENT

kmem_cache_alloc
BRACKET_O

signal_cachep
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

signal
OP_ASSIGNMENT

sig
SEMICOLON
IF
BRACKET_O
NOT

sig
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

ret
OP_ASSIGNMENT

copy_thread_group_keys
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

kmem_cache_free
BRACKET_O

signal_cachep
COMMA

sig
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

atomic_set
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

live
COMMA
NUMBER
BRACKET_C
SEMICOLON

init_waitqueue_head
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

wait_chldexit
BRACKET_C
SEMICOLON

sig
MINUS
GREATER

flags
OP_ASSIGNMENT
NUMBER
SEMICOLON

sig
MINUS
GREATER

group_exit_code
OP_ASSIGNMENT
NUMBER
SEMICOLON

sig
MINUS
GREATER

group_exit_task
OP_ASSIGNMENT

NULL
SEMICOLON

sig
MINUS
GREATER

group_stop_count
OP_ASSIGNMENT
NUMBER
SEMICOLON

sig
MINUS
GREATER

curr_target
OP_ASSIGNMENT

NULL
SEMICOLON

init_sigpending
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

shared_pending
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

posix_timers
BRACKET_C
SEMICOLON

hrtimer_init
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

real_timer
COMMA

CLOCK_MONOTONIC
COMMA

HRTIMER_MODE_REL
BRACKET_C
SEMICOLON

sig
MINUS
GREATER

it_real_incr
DOT

tv64
OP_ASSIGNMENT
NUMBER
SEMICOLON

sig
MINUS
GREATER

real_timer
DOT

function
OP_ASSIGNMENT

it_real_fn
SEMICOLON

sig
MINUS
GREATER

tsk
OP_ASSIGNMENT

tsk
SEMICOLON

sig
MINUS
GREATER

it_virt_expires
OP_ASSIGNMENT

cputime_zero
SEMICOLON

sig
MINUS
GREATER

it_virt_incr
OP_ASSIGNMENT

cputime_zero
SEMICOLON

sig
MINUS
GREATER

it_prof_expires
OP_ASSIGNMENT

cputime_zero
SEMICOLON

sig
MINUS
GREATER

it_prof_incr
OP_ASSIGNMENT

cputime_zero
SEMICOLON

sig
MINUS
GREATER

leader
OP_ASSIGNMENT
NUMBER
SEMICOLON

sig
MINUS
GREATER

tty_old_pgrp
OP_ASSIGNMENT

NULL
SEMICOLON

sig
MINUS
GREATER

utime
OP_ASSIGNMENT

sig
MINUS
GREATER

stime
OP_ASSIGNMENT

sig
MINUS
GREATER

cutime
OP_ASSIGNMENT

sig
MINUS
GREATER

cstime
OP_ASSIGNMENT

cputime_zero
SEMICOLON

sig
MINUS
GREATER

nvcsw
OP_ASSIGNMENT

sig
MINUS
GREATER

nivcsw
OP_ASSIGNMENT

sig
MINUS
GREATER

cnvcsw
OP_ASSIGNMENT

sig
MINUS
GREATER

cnivcsw
OP_ASSIGNMENT
NUMBER
SEMICOLON

sig
MINUS
GREATER

min_flt
OP_ASSIGNMENT

sig
MINUS
GREATER

maj_flt
OP_ASSIGNMENT

sig
MINUS
GREATER

cmin_flt
OP_ASSIGNMENT

sig
MINUS
GREATER

cmaj_flt
OP_ASSIGNMENT
NUMBER
SEMICOLON

sig
MINUS
GREATER

inblock
OP_ASSIGNMENT

sig
MINUS
GREATER

oublock
OP_ASSIGNMENT

sig
MINUS
GREATER

cinblock
OP_ASSIGNMENT

sig
MINUS
GREATER

coublock
OP_ASSIGNMENT
NUMBER
SEMICOLON

sig
MINUS
GREATER

sched_time
OP_ASSIGNMENT
NUMBER
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

cpu_timers
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

cpu_timers
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

cpu_timers
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

taskstats_tgid_init
BRACKET_O

sig
BRACKET_C
SEMICOLON

task_lock
BRACKET_O

current
MINUS
GREATER

group_leader
BRACKET_C
SEMICOLON

memcpy
BRACKET_O

sig
MINUS
GREATER

rlim
COMMA

current
MINUS
GREATER

signal
MINUS
GREATER

rlim
COMMA

sizeof

sig
MINUS
GREATER

rlim
BRACKET_C
SEMICOLON

task_unlock
BRACKET_O

current
MINUS
GREATER

group_leader
BRACKET_C
SEMICOLON
IF
BRACKET_O

sig
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_cur
NOT_EQ

RLIM_INFINITY
BRACKET_C
CURLY_BRACKET_O

tsk
MINUS
GREATER

it_prof_expires
OP_ASSIGNMENT

secs_to_cputime
BRACKET_O

sig
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_cur
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

acct_init_pacct
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

pacct
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

__cleanup_signal
BRACKET_O
STRUCT

signal_struct
MULT

sig
BRACKET_C
CURLY_BRACKET_O

exit_thread_group_keys
BRACKET_O

sig
BRACKET_C
SEMICOLON

kmem_cache_free
BRACKET_O

signal_cachep
COMMA

sig
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

cleanup_signal
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

signal_struct
MULT

sig
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
SEMICOLON

atomic_dec
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

live
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_dec_and_test
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

count
BRACKET_C
BRACKET_C

__cleanup_signal
BRACKET_O

sig
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

copy_flags
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

clone_flags
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

new_flags
OP_ASSIGNMENT

p
MINUS
GREATER

flags
SEMICOLON

new_flags
AMPERSANT
OP_ASSIGNMENT
TILDE
BRACKET_O

PF_SUPERPRIV
LOGICAL_OR

PF_NOFREEZE
BRACKET_C
SEMICOLON

new_flags
LOGICAL_OR
OP_ASSIGNMENT

PF_FORKNOEXEC
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

clone_flags
AMPERSANT

CLONE_PTRACE
BRACKET_C
BRACKET_C

p
MINUS
GREATER

ptrace
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

flags
OP_ASSIGNMENT

new_flags
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_set_tid_address
BRACKET_O
TYPE_INT

__user
MULT

tidptr
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

clear_child_tid
OP_ASSIGNMENT

tidptr
SEMICOLON

return

current
MINUS
GREATER

pid
SEMICOLON
CURLY_BRACKET_C

static

inline

void

rt_mutex_init_task
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

spin_lock_init
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_RT_MUTEXES

plist_head_init
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pi_waiters
COMMA
AMPERSANT

p
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

p
MINUS
GREATER

pi_blocked_on
OP_ASSIGNMENT

NULL
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

static
STRUCT

task_struct
MULT

copy_process
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

clone_flags
COMMA
TYPE_UNSIGNED
TYPE_LONG

stack_start
COMMA
STRUCT

pt_regs
MULT

regs
COMMA
TYPE_UNSIGNED
TYPE_LONG

stack_size
COMMA
TYPE_INT

__user
MULT

parent_tidptr
COMMA
TYPE_INT

__user
MULT

child_tidptr
COMMA
STRUCT

pid
MULT

pid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON
STRUCT

task_struct
MULT

p
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O
BRACKET_O

clone_flags
AMPERSANT
BRACKET_O

CLONE_NEWNS
LOGICAL_OR

CLONE_FS
BRACKET_C
BRACKET_C
EQ
BRACKET_O

CLONE_NEWNS
LOGICAL_OR

CLONE_FS
BRACKET_C
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

EINVAL
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

clone_flags
AMPERSANT

CLONE_THREAD
BRACKET_C
AND
NOT
BRACKET_O

clone_flags
AMPERSANT

CLONE_SIGHAND
BRACKET_C
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

EINVAL
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

clone_flags
AMPERSANT

CLONE_SIGHAND
BRACKET_C
AND
NOT
BRACKET_O

clone_flags
AMPERSANT

CLONE_VM
BRACKET_C
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

EINVAL
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT

security_task_create
BRACKET_O

clone_flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

goto

fork_out
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

p
OP_ASSIGNMENT

dup_task_struct
BRACKET_O

current
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
BRACKET_C

goto

fork_out
SEMICOLON

rt_mutex_init_task
BRACKET_O

p
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

p
MINUS
GREATER

hardirqs_enabled
BRACKET_C
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

p
MINUS
GREATER

softirqs_enabled
BRACKET_C
SEMICOLON
PP_ENDIF

retval
OP_ASSIGNMENT
MINUS

EAGAIN
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

p
MINUS
GREATER

user
MINUS
GREATER

processes
BRACKET_C
GR_EQ

p
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_NPROC
CORNER_BRACKET_C
DOT

rlim_cur
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SYS_ADMIN
BRACKET_C
AND
NOT

capable
BRACKET_O

CAP_SYS_RESOURCE
BRACKET_C
AND

p
MINUS
GREATER

user
NOT_EQ
AMPERSANT

root_user
BRACKET_C

goto

bad_fork_free
SEMICOLON
CURLY_BRACKET_C

atomic_inc
BRACKET_O
AMPERSANT

p
MINUS
GREATER

user
MINUS
GREATER

__count
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

p
MINUS
GREATER

user
MINUS
GREATER

processes
BRACKET_C
SEMICOLON

get_group_info
BRACKET_O

p
MINUS
GREATER

group_info
BRACKET_C
SEMICOLON
IF
BRACKET_O

nr_threads
GR_EQ

max_threads
BRACKET_C

goto

bad_fork_cleanup_count
SEMICOLON
IF
BRACKET_O
NOT

try_module_get
BRACKET_O

task_thread_info
BRACKET_O

p
BRACKET_C
MINUS
GREATER

exec_domain
MINUS
GREATER

module
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_count
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

binfmt
AND
NOT

try_module_get
BRACKET_O

p
MINUS
GREATER

binfmt
MINUS
GREATER

module
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_put_domain
SEMICOLON

p
MINUS
GREATER

did_exec
OP_ASSIGNMENT
NUMBER
SEMICOLON

delayacct_tsk_init
BRACKET_O

p
BRACKET_C
SEMICOLON

copy_flags
BRACKET_O

clone_flags
COMMA

p
BRACKET_C
SEMICOLON

p
MINUS
GREATER

pid
OP_ASSIGNMENT

pid_nr
BRACKET_O

pid
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

clone_flags
AMPERSANT

CLONE_PARENT_SETTID
BRACKET_C
IF
BRACKET_O

put_user
BRACKET_O

p
MINUS
GREATER

pid
COMMA

parent_tidptr
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_delays_binfmt
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

p
MINUS
GREATER

children
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sibling
BRACKET_C
SEMICOLON

p
MINUS
GREATER

vfork_done
OP_ASSIGNMENT

NULL
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

p
MINUS
GREATER

alloc_lock
BRACKET_C
SEMICOLON

clear_tsk_thread_flag
BRACKET_O

p
COMMA

TIF_SIGPENDING
BRACKET_C
SEMICOLON

init_sigpending
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pending
BRACKET_C
SEMICOLON

p
MINUS
GREATER

utime
OP_ASSIGNMENT

cputime_zero
SEMICOLON

p
MINUS
GREATER

stime
OP_ASSIGNMENT

cputime_zero
SEMICOLON

p
MINUS
GREATER

sched_time
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_IFDEF

CONFIG_TASK_XACCT

p
MINUS
GREATER

rchar
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

wchar
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

syscr
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

syscw
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF

task_io_accounting_init
BRACKET_O

p
BRACKET_C
SEMICOLON

acct_clear_integrals
BRACKET_O

p
BRACKET_C
SEMICOLON

p
MINUS
GREATER

it_virt_expires
OP_ASSIGNMENT

cputime_zero
SEMICOLON

p
MINUS
GREATER

it_prof_expires
OP_ASSIGNMENT

cputime_zero
SEMICOLON

p
MINUS
GREATER

it_sched_expires
OP_ASSIGNMENT
NUMBER
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

p
MINUS
GREATER

cpu_timers
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

p
MINUS
GREATER

cpu_timers
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

p
MINUS
GREATER

cpu_timers
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

p
MINUS
GREATER

lock_depth
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

do_posix_clock_monotonic_gettime
BRACKET_O
AMPERSANT

p
MINUS
GREATER

start_time
BRACKET_C
SEMICOLON

p
MINUS
GREATER

security
OP_ASSIGNMENT

NULL
SEMICOLON

p
MINUS
GREATER

io_context
OP_ASSIGNMENT

NULL
SEMICOLON

p
MINUS
GREATER

io_wait
OP_ASSIGNMENT

NULL
SEMICOLON

p
MINUS
GREATER

audit_context
OP_ASSIGNMENT

NULL
SEMICOLON

cpuset_fork
BRACKET_O

p
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_NUMA

p
MINUS
GREATER

mempolicy
OP_ASSIGNMENT

mpol_copy
BRACKET_O

p
MINUS
GREATER

mempolicy
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

p
MINUS
GREATER

mempolicy
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

retval
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

p
MINUS
GREATER

mempolicy
BRACKET_C
SEMICOLON

p
MINUS
GREATER

mempolicy
OP_ASSIGNMENT

NULL
SEMICOLON

goto

bad_fork_cleanup_cpuset
SEMICOLON
CURLY_BRACKET_C

mpol_fix_fork_child_flag
BRACKET_O

p
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

p
MINUS
GREATER

irq_events
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_IFDEF

__ARCH_WANT_INTERRUPTS_ON_CTXSW

p
MINUS
GREATER

hardirqs_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ELSE

p
MINUS
GREATER

hardirqs_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF

p
MINUS
GREATER

hardirq_enable_ip
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

hardirq_enable_event
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

hardirq_disable_ip
OP_ASSIGNMENT

_THIS_IP_
SEMICOLON

p
MINUS
GREATER

hardirq_disable_event
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

softirqs_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

softirq_enable_ip
OP_ASSIGNMENT

_THIS_IP_
SEMICOLON

p
MINUS
GREATER

softirq_enable_event
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

softirq_disable_ip
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

softirq_disable_event
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

hardirq_context
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

softirq_context
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_LOCKDEP

p
MINUS
GREATER

lockdep_depth
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

curr_chain_key
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

lockdep_recursion
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_DEBUG_MUTEXES

p
MINUS
GREATER

blocked_on
OP_ASSIGNMENT

NULL
SEMICOLON
PP_ENDIF

p
MINUS
GREATER

tgid
OP_ASSIGNMENT

p
MINUS
GREATER

pid
SEMICOLON
IF
BRACKET_O

clone_flags
AMPERSANT

CLONE_THREAD
BRACKET_C

p
MINUS
GREATER

tgid
OP_ASSIGNMENT

current
MINUS
GREATER

tgid
SEMICOLON
IF
BRACKET_O
BRACKET_O

retval
OP_ASSIGNMENT

security_task_alloc
BRACKET_O

p
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_policy
SEMICOLON
IF
BRACKET_O
BRACKET_O

retval
OP_ASSIGNMENT

audit_alloc
BRACKET_O

p
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_security
SEMICOLON
IF
BRACKET_O
BRACKET_O

retval
OP_ASSIGNMENT

copy_semundo
BRACKET_O

clone_flags
COMMA

p
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_audit
SEMICOLON
IF
BRACKET_O
BRACKET_O

retval
OP_ASSIGNMENT

copy_files
BRACKET_O

clone_flags
COMMA

p
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_semundo
SEMICOLON
IF
BRACKET_O
BRACKET_O

retval
OP_ASSIGNMENT

copy_fs
BRACKET_O

clone_flags
COMMA

p
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_files
SEMICOLON
IF
BRACKET_O
BRACKET_O

retval
OP_ASSIGNMENT

copy_sighand
BRACKET_O

clone_flags
COMMA

p
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_fs
SEMICOLON
IF
BRACKET_O
BRACKET_O

retval
OP_ASSIGNMENT

copy_signal
BRACKET_O

clone_flags
COMMA

p
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_sighand
SEMICOLON
IF
BRACKET_O
BRACKET_O

retval
OP_ASSIGNMENT

copy_mm
BRACKET_O

clone_flags
COMMA

p
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_signal
SEMICOLON
IF
BRACKET_O
BRACKET_O

retval
OP_ASSIGNMENT

copy_keys
BRACKET_O

clone_flags
COMMA

p
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_mm
SEMICOLON
IF
BRACKET_O
BRACKET_O

retval
OP_ASSIGNMENT

copy_namespaces
BRACKET_O

clone_flags
COMMA

p
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_fork_cleanup_keys
SEMICOLON

retval
OP_ASSIGNMENT

copy_thread
BRACKET_O
NUMBER
COMMA

clone_flags
COMMA

stack_start
COMMA

stack_size
COMMA

p
COMMA

regs
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

goto

bad_fork_cleanup_namespaces
SEMICOLON

p
MINUS
GREATER

set_child_tid
OP_ASSIGNMENT
BRACKET_O

clone_flags
AMPERSANT

CLONE_CHILD_SETTID
BRACKET_C
QUESTION_MARK

child_tidptr
COLON

NULL
SEMICOLON

p
MINUS
GREATER

clear_child_tid
OP_ASSIGNMENT
BRACKET_O

clone_flags
AMPERSANT

CLONE_CHILD_CLEARTID
BRACKET_C
QUESTION_MARK

child_tidptr
COLON

NULL
SEMICOLON

p
MINUS
GREATER

robust_list
OP_ASSIGNMENT

NULL
SEMICOLON
PP_IFDEF

CONFIG_COMPAT

p
MINUS
GREATER

compat_robust_list
OP_ASSIGNMENT

NULL
SEMICOLON
PP_ENDIF

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pi_state_list
BRACKET_C
SEMICOLON

p
MINUS
GREATER

pi_state_cache
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O
BRACKET_O

clone_flags
AMPERSANT
BRACKET_O

CLONE_VM
LOGICAL_OR

CLONE_VFORK
BRACKET_C
BRACKET_C
EQ

CLONE_VM
BRACKET_C

p
MINUS
GREATER

sas_ss_sp
OP_ASSIGNMENT

p
MINUS
GREATER

sas_ss_size
OP_ASSIGNMENT
NUMBER
SEMICOLON

clear_tsk_thread_flag
BRACKET_O

p
COMMA

TIF_SYSCALL_TRACE
BRACKET_C
SEMICOLON
PP_IFDEF

TIF_SYSCALL_EMU

clear_tsk_thread_flag
BRACKET_O

p
COMMA

TIF_SYSCALL_EMU
BRACKET_C
SEMICOLON
PP_ENDIF

p
MINUS
GREATER

parent_exec_id
OP_ASSIGNMENT

p
MINUS
GREATER

self_exec_id
SEMICOLON

p
MINUS
GREATER

exit_signal
OP_ASSIGNMENT
BRACKET_O

clone_flags
AMPERSANT

CLONE_THREAD
BRACKET_C
QUESTION_MARK
MINUS
NUMBER
COLON
BRACKET_O

clone_flags
AMPERSANT

CSIGNAL
BRACKET_C
SEMICOLON

p
MINUS
GREATER

pdeath_signal
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

exit_state
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

group_leader
OP_ASSIGNMENT

p
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

p
MINUS
GREATER

thread_group
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

p
MINUS
GREATER

ptrace_children
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

p
MINUS
GREATER

ptrace_list
BRACKET_C
SEMICOLON

sched_fork
BRACKET_O

p
COMMA

clone_flags
BRACKET_C
SEMICOLON

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

p
MINUS
GREATER

ioprio
OP_ASSIGNMENT

current
MINUS
GREATER

ioprio
SEMICOLON

p
MINUS
GREATER

cpus_allowed
OP_ASSIGNMENT

current
MINUS
GREATER

cpus_allowed
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

cpu_isset
BRACKET_O

task_cpu
BRACKET_O

p
BRACKET_C
COMMA

p
MINUS
GREATER

cpus_allowed
BRACKET_C
OR
NOT

cpu_online
BRACKET_O

task_cpu
BRACKET_O

p
BRACKET_C
BRACKET_C
BRACKET_C
BRACKET_C

set_task_cpu
BRACKET_O

p
COMMA

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

clone_flags
AMPERSANT
BRACKET_O

CLONE_PARENT
LOGICAL_OR

CLONE_THREAD
BRACKET_C
BRACKET_C

p
MINUS
GREATER

real_parent
OP_ASSIGNMENT

current
MINUS
GREATER

real_parent
SEMICOLON
ELSE

p
MINUS
GREATER

real_parent
OP_ASSIGNMENT

current
SEMICOLON

p
MINUS
GREATER

parent
OP_ASSIGNMENT

p
MINUS
GREATER

real_parent
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

signal_pending
BRACKET_O

current
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ERESTARTNOINTR
SEMICOLON

goto

bad_fork_cleanup_namespaces
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

clone_flags
AMPERSANT

CLONE_THREAD
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

group_leader
OP_ASSIGNMENT

current
MINUS
GREATER

group_leader
SEMICOLON

list_add_tail_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

thread_group
COMMA
AMPERSANT

p
MINUS
GREATER

group_leader
MINUS
GREATER

thread_group
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

current
MINUS
GREATER

signal
MINUS
GREATER

it_virt_expires
COMMA

cputime_zero
BRACKET_C
OR
NOT

cputime_eq
BRACKET_O

current
MINUS
GREATER

signal
MINUS
GREATER

it_prof_expires
COMMA

cputime_zero
BRACKET_C
OR

current
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_cur
NOT_EQ

RLIM_INFINITY
OR
NOT

list_empty
BRACKET_O
AMPERSANT

current
MINUS
GREATER

signal
MINUS
GREATER

cpu_timers
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
OR
NOT

list_empty
BRACKET_O
AMPERSANT

current
MINUS
GREATER

signal
MINUS
GREATER

cpu_timers
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
OR
NOT

list_empty
BRACKET_O
AMPERSANT

current
MINUS
GREATER

signal
MINUS
GREATER

cpu_timers
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

it_prof_expires
OP_ASSIGNMENT

jiffies_to_cputime
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

likely
BRACKET_O

p
MINUS
GREATER

pid
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

add_parent
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C
BRACKET_C

__ptrace_link
BRACKET_O

p
COMMA

current
MINUS
GREATER

parent
BRACKET_C
SEMICOLON
IF
BRACKET_O

thread_group_leader
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

tty
OP_ASSIGNMENT

current
MINUS
GREATER

signal
MINUS
GREATER

tty
SEMICOLON

p
MINUS
GREATER

signal
MINUS
GREATER

pgrp
OP_ASSIGNMENT

process_group
BRACKET_O

current
BRACKET_C
SEMICOLON

set_signal_session
BRACKET_O

p
MINUS
GREATER

signal
COMMA

process_session
BRACKET_O

current
BRACKET_C
BRACKET_C
SEMICOLON

attach_pid
BRACKET_O

p
COMMA

PIDTYPE_PGID
COMMA

task_pgrp
BRACKET_O

current
BRACKET_C
BRACKET_C
SEMICOLON

attach_pid
BRACKET_O

p
COMMA

PIDTYPE_SID
COMMA

task_session
BRACKET_O

current
BRACKET_C
BRACKET_C
SEMICOLON

list_add_tail_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

tasks
COMMA
AMPERSANT

init_task
DOT

tasks
BRACKET_C
SEMICOLON

__get_cpu_var
BRACKET_O

process_counts
BRACKET_C
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

attach_pid
BRACKET_O

p
COMMA

PIDTYPE_PID
COMMA

pid
BRACKET_C
SEMICOLON

nr_threads
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

total_forks
PLUS
PLUS
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

proc_fork_connector
BRACKET_O

p
BRACKET_C
SEMICOLON

return

p
SEMICOLON

bad_fork_cleanup_namespaces
COLON

exit_task_namespaces
BRACKET_O

p
BRACKET_C
SEMICOLON

bad_fork_cleanup_keys
COLON

exit_keys
BRACKET_O

p
BRACKET_C
SEMICOLON

bad_fork_cleanup_mm
COLON
IF
BRACKET_O

p
MINUS
GREATER

mm
BRACKET_C

mmput
BRACKET_O

p
MINUS
GREATER

mm
BRACKET_C
SEMICOLON

bad_fork_cleanup_signal
COLON

cleanup_signal
BRACKET_O

p
BRACKET_C
SEMICOLON

bad_fork_cleanup_sighand
COLON

__cleanup_sighand
BRACKET_O

p
MINUS
GREATER

sighand
BRACKET_C
SEMICOLON

bad_fork_cleanup_fs
COLON

exit_fs
BRACKET_O

p
BRACKET_C
SEMICOLON

bad_fork_cleanup_files
COLON

exit_files
BRACKET_O

p
BRACKET_C
SEMICOLON

bad_fork_cleanup_semundo
COLON

exit_sem
BRACKET_O

p
BRACKET_C
SEMICOLON

bad_fork_cleanup_audit
COLON

audit_free
BRACKET_O

p
BRACKET_C
SEMICOLON

bad_fork_cleanup_security
COLON

security_task_free
BRACKET_O

p
BRACKET_C
SEMICOLON

bad_fork_cleanup_policy
COLON
PP_IFDEF

CONFIG_NUMA

mpol_free
BRACKET_O

p
MINUS
GREATER

mempolicy
BRACKET_C
SEMICOLON

bad_fork_cleanup_cpuset
COLON
PP_ENDIF

cpuset_exit
BRACKET_O

p
BRACKET_C
SEMICOLON

bad_fork_cleanup_delays_binfmt
COLON

delayacct_tsk_free
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

binfmt
BRACKET_C

module_put
BRACKET_O

p
MINUS
GREATER

binfmt
MINUS
GREATER

module
BRACKET_C
SEMICOLON

bad_fork_cleanup_put_domain
COLON

module_put
BRACKET_O

task_thread_info
BRACKET_O

p
BRACKET_C
MINUS
GREATER

exec_domain
MINUS
GREATER

module
BRACKET_C
SEMICOLON

bad_fork_cleanup_count
COLON

put_group_info
BRACKET_O

p
MINUS
GREATER

group_info
BRACKET_C
SEMICOLON

atomic_dec
BRACKET_O
AMPERSANT

p
MINUS
GREATER

user
MINUS
GREATER

processes
BRACKET_C
SEMICOLON

free_uid
BRACKET_O

p
MINUS
GREATER

user
BRACKET_C
SEMICOLON

bad_fork_free
COLON

free_task
BRACKET_O

p
BRACKET_C
SEMICOLON

fork_out
COLON

return

ERR_PTR
BRACKET_O

retval
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

noinline
STRUCT

pt_regs
MULT

__devinit

__attribute__
BRACKET_O
BRACKET_O

weak
BRACKET_C
BRACKET_C

idle_regs
BRACKET_O
STRUCT

pt_regs
MULT

regs
BRACKET_C
CURLY_BRACKET_O

memset
BRACKET_O

regs
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
STRUCT

pt_regs
BRACKET_C
BRACKET_C
SEMICOLON

return

regs
SEMICOLON
CURLY_BRACKET_C
STRUCT

task_struct
MULT

__cpuinit

fork_idle
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

task
SEMICOLON
STRUCT

pt_regs

regs
SEMICOLON

task
OP_ASSIGNMENT

copy_process
BRACKET_O

CLONE_VM
COMMA
NUMBER
COMMA

idle_regs
BRACKET_O
AMPERSANT

regs
BRACKET_C
COMMA
NUMBER
COMMA

NULL
COMMA

NULL
COMMA
AMPERSANT

init_struct_pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

IS_ERR
BRACKET_O

task
BRACKET_C
BRACKET_C

init_idle
BRACKET_O

task
COMMA

cpu
BRACKET_C
SEMICOLON

return

task
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

fork_traceflag
BRACKET_O
TYPE_UNSIGNED

clone_flags
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

clone_flags
AMPERSANT

CLONE_UNTRACED
BRACKET_C

return
NUMBER
SEMICOLON
ELSE
IF
BRACKET_O

clone_flags
AMPERSANT

CLONE_VFORK
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

current
MINUS
GREATER

ptrace
AMPERSANT

PT_TRACE_VFORK
BRACKET_C

return

PTRACE_EVENT_VFORK
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
BRACKET_O

clone_flags
AMPERSANT

CSIGNAL
BRACKET_C
NOT_EQ

SIGCHLD
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

current
MINUS
GREATER

ptrace
AMPERSANT

PT_TRACE_CLONE
BRACKET_C

return

PTRACE_EVENT_CLONE
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

current
MINUS
GREATER

ptrace
AMPERSANT

PT_TRACE_FORK
BRACKET_C

return

PTRACE_EVENT_FORK
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

do_fork
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

clone_flags
COMMA
TYPE_UNSIGNED
TYPE_LONG

stack_start
COMMA
STRUCT

pt_regs
MULT

regs
COMMA
TYPE_UNSIGNED
TYPE_LONG

stack_size
COMMA
TYPE_INT

__user
MULT

parent_tidptr
COMMA
TYPE_INT

__user
MULT

child_tidptr
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON
TYPE_INT

trace
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

pid
MULT

pid
OP_ASSIGNMENT

alloc_pid
BRACKET_O
BRACKET_C
SEMICOLON
TYPE_LONG

nr
SEMICOLON
IF
BRACKET_O
NOT

pid
BRACKET_C

return
MINUS

EAGAIN
SEMICOLON

nr
OP_ASSIGNMENT

pid
MINUS
GREATER

nr
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

current
MINUS
GREATER

ptrace
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

trace
OP_ASSIGNMENT

fork_traceflag
BRACKET_O

clone_flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

trace
BRACKET_C

clone_flags
LOGICAL_OR
OP_ASSIGNMENT

CLONE_PTRACE
SEMICOLON
CURLY_BRACKET_C

p
OP_ASSIGNMENT

copy_process
BRACKET_O

clone_flags
COMMA

stack_start
COMMA

regs
COMMA

stack_size
COMMA

parent_tidptr
COMMA

child_tidptr
COMMA

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

IS_ERR
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

completion

vfork
SEMICOLON
IF
BRACKET_O

clone_flags
AMPERSANT

CLONE_VFORK
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

vfork_done
OP_ASSIGNMENT
AMPERSANT

vfork
SEMICOLON

init_completion
BRACKET_O
AMPERSANT

vfork
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
BRACKET_O

p
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C
OR
BRACKET_O

clone_flags
AMPERSANT

CLONE_STOPPED
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

sigaddset
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pending
DOT

signal
COMMA

SIGSTOP
BRACKET_C
SEMICOLON

set_tsk_thread_flag
BRACKET_O

p
COMMA

TIF_SIGPENDING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT
BRACKET_O

clone_flags
AMPERSANT

CLONE_STOPPED
BRACKET_C
BRACKET_C

wake_up_new_task
BRACKET_O

p
COMMA

clone_flags
BRACKET_C
SEMICOLON
ELSE

p
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_STOPPED
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

trace
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

ptrace_message
OP_ASSIGNMENT

nr
SEMICOLON

ptrace_notify
BRACKET_O
BRACKET_O

trace
LESS
LESS
NUMBER
BRACKET_C
LOGICAL_OR

SIGTRAP
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

clone_flags
AMPERSANT

CLONE_VFORK
BRACKET_C
CURLY_BRACKET_O

freezer_do_not_count
BRACKET_O
BRACKET_C
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

vfork
BRACKET_C
SEMICOLON

freezer_count
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

current
MINUS
GREATER

ptrace
AMPERSANT

PT_TRACE_VFORK_DONE
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

ptrace_message
OP_ASSIGNMENT

nr
SEMICOLON

ptrace_notify
BRACKET_O
BRACKET_O

PTRACE_EVENT_VFORK_DONE
LESS
LESS
NUMBER
BRACKET_C
LOGICAL_OR

SIGTRAP
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

free_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON

nr
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

nr
SEMICOLON
CURLY_BRACKET_C
PP_IFNDEF

ARCH_MIN_MMSTRUCT_ALIGN
PP_DEFINE

ARCH_MIN_MMSTRUCT_ALIGN
NUMBER
PP_ENDIF

static

void

sighand_ctor
BRACKET_O

void
MULT

data
COMMA
STRUCT

kmem_cache
MULT

cachep
COMMA
TYPE_UNSIGNED
TYPE_LONG

flags
BRACKET_C
CURLY_BRACKET_O
STRUCT

sighand_struct
MULT

sighand
OP_ASSIGNMENT

data
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

sighand
MINUS
GREATER

signalfd_list
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__init

proc_caches_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

sighand_cachep
OP_ASSIGNMENT

kmem_cache_create
BRACKET_O
STRING
COMMA

sizeof
BRACKET_O
STRUCT

sighand_struct
BRACKET_C
COMMA
NUMBER
COMMA

SLAB_HWCACHE_ALIGN
LOGICAL_OR

SLAB_PANIC
LOGICAL_OR

SLAB_DESTROY_BY_RCU
COMMA

sighand_ctor
COMMA

NULL
BRACKET_C
SEMICOLON

signal_cachep
OP_ASSIGNMENT

kmem_cache_create
BRACKET_O
STRING
COMMA

sizeof
BRACKET_O
STRUCT

signal_struct
BRACKET_C
COMMA
NUMBER
COMMA

SLAB_HWCACHE_ALIGN
LOGICAL_OR

SLAB_PANIC
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON

files_cachep
OP_ASSIGNMENT

kmem_cache_create
BRACKET_O
STRING
COMMA

sizeof
BRACKET_O
STRUCT

files_struct
BRACKET_C
COMMA
NUMBER
COMMA

SLAB_HWCACHE_ALIGN
LOGICAL_OR

SLAB_PANIC
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON

fs_cachep
OP_ASSIGNMENT

kmem_cache_create
BRACKET_O
STRING
COMMA

sizeof
BRACKET_O
STRUCT

fs_struct
BRACKET_C
COMMA
NUMBER
COMMA

SLAB_HWCACHE_ALIGN
LOGICAL_OR

SLAB_PANIC
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON

vm_area_cachep
OP_ASSIGNMENT

kmem_cache_create
BRACKET_O
STRING
COMMA

sizeof
BRACKET_O
STRUCT

vm_area_struct
BRACKET_C
COMMA
NUMBER
COMMA

SLAB_PANIC
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON

mm_cachep
OP_ASSIGNMENT

kmem_cache_create
BRACKET_O
STRING
COMMA

sizeof
BRACKET_O
STRUCT

mm_struct
BRACKET_C
COMMA

ARCH_MIN_MMSTRUCT_ALIGN
COMMA

SLAB_HWCACHE_ALIGN
LOGICAL_OR

SLAB_PANIC
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

check_unshare_flags
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
MULT

flags_ptr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
MULT

flags_ptr
AMPERSANT

CLONE_THREAD
BRACKET_C
MULT

flags_ptr
LOGICAL_OR
OP_ASSIGNMENT

CLONE_VM
SEMICOLON
IF
BRACKET_O
MULT

flags_ptr
AMPERSANT

CLONE_VM
BRACKET_C
MULT

flags_ptr
LOGICAL_OR
OP_ASSIGNMENT

CLONE_SIGHAND
SEMICOLON
IF
BRACKET_O
BRACKET_O
MULT

flags_ptr
AMPERSANT

CLONE_SIGHAND
BRACKET_C
AND
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

current
MINUS
GREATER

signal
MINUS
GREATER

count
BRACKET_C
GREATER
NUMBER
BRACKET_C
BRACKET_C
MULT

flags_ptr
LOGICAL_OR
OP_ASSIGNMENT

CLONE_THREAD
SEMICOLON
IF
BRACKET_O
MULT

flags_ptr
AMPERSANT

CLONE_NEWNS
BRACKET_C
MULT

flags_ptr
LOGICAL_OR
OP_ASSIGNMENT

CLONE_FS
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

unshare_thread
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

unshare_flags
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unshare_flags
AMPERSANT

CLONE_THREAD
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

unshare_fs
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

unshare_flags
COMMA
STRUCT

fs_struct
MULT
MULT

new_fsp
BRACKET_C
CURLY_BRACKET_O
STRUCT

fs_struct
MULT

fs
OP_ASSIGNMENT

current
MINUS
GREATER

fs
SEMICOLON
IF
BRACKET_O
BRACKET_O

unshare_flags
AMPERSANT

CLONE_FS
BRACKET_C
AND
BRACKET_O

fs
AND

atomic_read
BRACKET_O
AMPERSANT

fs
MINUS
GREATER

count
BRACKET_C
GREATER
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
MULT

new_fsp
OP_ASSIGNMENT

__copy_fs_struct
BRACKET_O

current
MINUS
GREATER

fs
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
MULT

new_fsp
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

unshare_sighand
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

unshare_flags
COMMA
STRUCT

sighand_struct
MULT
MULT

new_sighp
BRACKET_C
CURLY_BRACKET_O
STRUCT

sighand_struct
MULT

sigh
OP_ASSIGNMENT

current
MINUS
GREATER

sighand
SEMICOLON
IF
BRACKET_O
BRACKET_O

unshare_flags
AMPERSANT

CLONE_SIGHAND
BRACKET_C
AND

atomic_read
BRACKET_O
AMPERSANT

sigh
MINUS
GREATER

count
BRACKET_C
GREATER
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
ELSE

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

unshare_vm
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

unshare_flags
COMMA
STRUCT

mm_struct
MULT
MULT

new_mmp
BRACKET_C
CURLY_BRACKET_O
STRUCT

mm_struct
MULT

mm
OP_ASSIGNMENT

current
MINUS
GREATER

mm
SEMICOLON
IF
BRACKET_O
BRACKET_O

unshare_flags
AMPERSANT

CLONE_VM
BRACKET_C
AND
BRACKET_O

mm
AND

atomic_read
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mm_users
BRACKET_C
GREATER
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

unshare_fd
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

unshare_flags
COMMA
STRUCT

files_struct
MULT
MULT

new_fdp
BRACKET_C
CURLY_BRACKET_O
STRUCT

files_struct
MULT

fd
OP_ASSIGNMENT

current
MINUS
GREATER

files
SEMICOLON
TYPE_INT

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O

unshare_flags
AMPERSANT

CLONE_FILES
BRACKET_C
AND
BRACKET_O

fd
AND

atomic_read
BRACKET_O
AMPERSANT

fd
MINUS
GREATER

count
BRACKET_C
GREATER
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
MULT

new_fdp
OP_ASSIGNMENT

dup_fd
BRACKET_O

fd
COMMA
AMPERSANT

error
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
MULT

new_fdp
BRACKET_C

return

error
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

unshare_semundo
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

unshare_flags
COMMA
STRUCT

sem_undo_list
MULT
MULT

new_ulistp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unshare_flags
AMPERSANT

CLONE_SYSVSEM
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_unshare
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

unshare_flags
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

fs_struct
MULT

fs
COMMA
MULT

new_fs
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

sighand_struct
MULT

new_sigh
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

mm_struct
MULT

mm
COMMA
MULT

new_mm
OP_ASSIGNMENT

NULL
COMMA
MULT

active_mm
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

files_struct
MULT

fd
COMMA
MULT

new_fd
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

sem_undo_list
MULT

new_ulist
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

nsproxy
MULT

new_nsproxy
OP_ASSIGNMENT

NULL
COMMA
MULT

old_nsproxy
OP_ASSIGNMENT

NULL
SEMICOLON

check_unshare_flags
BRACKET_O
AMPERSANT

unshare_flags
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

unshare_flags
AMPERSANT
TILDE
BRACKET_O

CLONE_THREAD
LOGICAL_OR

CLONE_FS
LOGICAL_OR

CLONE_NEWNS
LOGICAL_OR

CLONE_SIGHAND
LOGICAL_OR

CLONE_VM
LOGICAL_OR

CLONE_FILES
LOGICAL_OR

CLONE_SYSVSEM
LOGICAL_OR

CLONE_NEWUTS
LOGICAL_OR

CLONE_NEWIPC
BRACKET_C
BRACKET_C

goto

bad_unshare_out
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

unshare_thread
BRACKET_O

unshare_flags
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_unshare_out
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

unshare_fs
BRACKET_O

unshare_flags
COMMA
AMPERSANT

new_fs
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_unshare_cleanup_thread
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

unshare_sighand
BRACKET_O

unshare_flags
COMMA
AMPERSANT

new_sigh
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_unshare_cleanup_fs
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

unshare_vm
BRACKET_O

unshare_flags
COMMA
AMPERSANT

new_mm
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_unshare_cleanup_sigh
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

unshare_fd
BRACKET_O

unshare_flags
COMMA
AMPERSANT

new_fd
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_unshare_cleanup_vm
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

unshare_semundo
BRACKET_O

unshare_flags
COMMA
AMPERSANT

new_ulist
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_unshare_cleanup_fd
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

unshare_nsproxy_namespaces
BRACKET_O

unshare_flags
COMMA
AMPERSANT

new_nsproxy
COMMA

new_fs
BRACKET_C
BRACKET_C
BRACKET_C

goto

bad_unshare_cleanup_semundo
SEMICOLON
IF
BRACKET_O

new_fs
OR

new_mm
OR

new_fd
OR

new_ulist
OR

new_nsproxy
BRACKET_C
CURLY_BRACKET_O

task_lock
BRACKET_O

current
BRACKET_C
SEMICOLON
IF
BRACKET_O

new_nsproxy
BRACKET_C
CURLY_BRACKET_O

old_nsproxy
OP_ASSIGNMENT

current
MINUS
GREATER

nsproxy
SEMICOLON

current
MINUS
GREATER

nsproxy
OP_ASSIGNMENT

new_nsproxy
SEMICOLON

new_nsproxy
OP_ASSIGNMENT

old_nsproxy
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

new_fs
BRACKET_C
CURLY_BRACKET_O

fs
OP_ASSIGNMENT

current
MINUS
GREATER

fs
SEMICOLON

current
MINUS
GREATER

fs
OP_ASSIGNMENT

new_fs
SEMICOLON

new_fs
OP_ASSIGNMENT

fs
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

new_mm
BRACKET_C
CURLY_BRACKET_O

mm
OP_ASSIGNMENT

current
MINUS
GREATER

mm
SEMICOLON

active_mm
OP_ASSIGNMENT

current
MINUS
GREATER

active_mm
SEMICOLON

current
MINUS
GREATER

mm
OP_ASSIGNMENT

new_mm
SEMICOLON

current
MINUS
GREATER

active_mm
OP_ASSIGNMENT

new_mm
SEMICOLON

activate_mm
BRACKET_O

active_mm
COMMA

new_mm
BRACKET_C
SEMICOLON

new_mm
OP_ASSIGNMENT

mm
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

new_fd
BRACKET_C
CURLY_BRACKET_O

fd
OP_ASSIGNMENT

current
MINUS
GREATER

files
SEMICOLON

current
MINUS
GREATER

files
OP_ASSIGNMENT

new_fd
SEMICOLON

new_fd
OP_ASSIGNMENT

fd
SEMICOLON
CURLY_BRACKET_C

task_unlock
BRACKET_O

current
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

new_nsproxy
BRACKET_C

put_nsproxy
BRACKET_O

new_nsproxy
BRACKET_C
SEMICOLON

bad_unshare_cleanup_semundo
COLON

bad_unshare_cleanup_fd
COLON
IF
BRACKET_O

new_fd
BRACKET_C

put_files_struct
BRACKET_O

new_fd
BRACKET_C
SEMICOLON

bad_unshare_cleanup_vm
COLON
IF
BRACKET_O

new_mm
BRACKET_C

mmput
BRACKET_O

new_mm
BRACKET_C
SEMICOLON

bad_unshare_cleanup_sigh
COLON
IF
BRACKET_O

new_sigh
BRACKET_C
IF
BRACKET_O

atomic_dec_and_test
BRACKET_O
AMPERSANT

new_sigh
MINUS
GREATER

count
BRACKET_C
BRACKET_C

kmem_cache_free
BRACKET_O

sighand_cachep
COMMA

new_sigh
BRACKET_C
SEMICOLON

bad_unshare_cleanup_fs
COLON
IF
BRACKET_O

new_fs
BRACKET_C

put_fs_struct
BRACKET_O

new_fs
BRACKET_C
SEMICOLON

bad_unshare_cleanup_thread
COLON

bad_unshare_out
COLON

return

err
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_DEFINE

FUTEX_HASHBITS
BRACKET_O

CONFIG_BASE_SMALL
QUESTION_MARK
NUMBER
COLON
NUMBER
BRACKET_C
STRUCT

futex_pi_state
CURLY_BRACKET_O
STRUCT

list_head

list
SEMICOLON
STRUCT

rt_mutex

pi_mutex
SEMICOLON
STRUCT

task_struct
MULT

owner
SEMICOLON

atomic_t

refcount
SEMICOLON

union

futex_key

key
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

futex_q
CURLY_BRACKET_O
STRUCT

plist_node

list
SEMICOLON

wait_queue_head_t

waiters
SEMICOLON

spinlock_t
MULT

lock_ptr
SEMICOLON

union

futex_key

key
SEMICOLON
TYPE_INT

fd
SEMICOLON
STRUCT

file
MULT

filp
SEMICOLON
STRUCT

futex_pi_state
MULT

pi_state
SEMICOLON
STRUCT

task_struct
MULT

task
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

futex_hash_bucket
CURLY_BRACKET_O

spinlock_t

lock
SEMICOLON
STRUCT

plist_head

chain
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

futex_hash_bucket

futex_queues
CORNER_BRACKET_O
NUMBER
LESS
LESS

FUTEX_HASHBITS
CORNER_BRACKET_C
SEMICOLON

static
STRUCT

vfsmount
MULT

futex_mnt
SEMICOLON

static
STRUCT

futex_hash_bucket
MULT

hash_futex
BRACKET_O

union

futex_key
MULT

key
BRACKET_C
CURLY_BRACKET_O

u32

hash
OP_ASSIGNMENT

jhash2
BRACKET_O
BRACKET_O

u32
MULT
BRACKET_C
AMPERSANT

key
MINUS
GREATER

both
DOT

word
COMMA
BRACKET_O

sizeof
BRACKET_O

key
MINUS
GREATER

both
DOT

word
BRACKET_C
PLUS

sizeof
BRACKET_O

key
MINUS
GREATER

both
DOT

ptr
BRACKET_C
BRACKET_C
DIV
NUMBER
COMMA

key
MINUS
GREATER

both
DOT

offset
BRACKET_C
SEMICOLON

return
AMPERSANT

futex_queues
CORNER_BRACKET_O

hash
AMPERSANT
BRACKET_O
BRACKET_O
NUMBER
LESS
LESS

FUTEX_HASHBITS
BRACKET_C
MINUS
NUMBER
BRACKET_C
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

match_futex
BRACKET_O

union

futex_key
MULT

key1
COMMA

union

futex_key
MULT

key2
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O

key1
MINUS
GREATER

both
DOT

word
EQ

key2
MINUS
GREATER

both
DOT

word
AND

key1
MINUS
GREATER

both
DOT

ptr
EQ

key2
MINUS
GREATER

both
DOT

ptr
AND

key1
MINUS
GREATER

both
DOT

offset
EQ

key2
MINUS
GREATER

both
DOT

offset
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

get_futex_key
BRACKET_O

u32

__user
MULT

uaddr
COMMA
STRUCT

rw_semaphore
MULT

fshared
COMMA

union

futex_key
MULT

key
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

address
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

uaddr
SEMICOLON
STRUCT

mm_struct
MULT

mm
OP_ASSIGNMENT

current
MINUS
GREATER

mm
SEMICOLON
STRUCT

vm_area_struct
MULT

vma
SEMICOLON
STRUCT

page
MULT

page
SEMICOLON
TYPE_INT

err
SEMICOLON

key
MINUS
GREATER

both
DOT

offset
OP_ASSIGNMENT

address
MODULO

PAGE_SIZE
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
BRACKET_O

address
MODULO

sizeof
BRACKET_O

u32
BRACKET_C
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

address
ASSIGN_MINUS

key
MINUS
GREATER

both
DOT

offset
SEMICOLON
IF
BRACKET_O
NOT

fshared
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_WRITE
COMMA

uaddr
COMMA

sizeof
BRACKET_O

u32
BRACKET_C
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

key
MINUS
GREATER

private
DOT

mm
OP_ASSIGNMENT

mm
SEMICOLON

key
MINUS
GREATER

private
DOT

address
OP_ASSIGNMENT

address
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

vma
OP_ASSIGNMENT

find_extend_vma
BRACKET_O

mm
COMMA

address
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

vma
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
BRACKET_O

vma
MINUS
GREATER

vm_flags
AMPERSANT
BRACKET_O

VM_IO
LOGICAL_OR

VM_READ
BRACKET_C
BRACKET_C
NOT_EQ

VM_READ
BRACKET_C
BRACKET_C

return
BRACKET_O

vma
MINUS
GREATER

vm_flags
AMPERSANT

VM_IO
BRACKET_C
QUESTION_MARK
MINUS

EPERM
COLON
MINUS

EACCES
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT
BRACKET_O

vma
MINUS
GREATER

vm_flags
AMPERSANT

VM_MAYSHARE
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

key
MINUS
GREATER

both
DOT

offset
LOGICAL_OR
OP_ASSIGNMENT

FUT_OFF_MMSHARED
SEMICOLON

key
MINUS
GREATER

private
DOT

mm
OP_ASSIGNMENT

mm
SEMICOLON

key
MINUS
GREATER

private
DOT

address
OP_ASSIGNMENT

address
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

key
MINUS
GREATER

shared
DOT

inode
OP_ASSIGNMENT

vma
MINUS
GREATER

vm_file
MINUS
GREATER

f_path
DOT

dentry
MINUS
GREATER

d_inode
SEMICOLON

key
MINUS
GREATER

both
DOT

offset
LOGICAL_OR
OP_ASSIGNMENT

FUT_OFF_INODE
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT
BRACKET_O

vma
MINUS
GREATER

vm_flags
AMPERSANT

VM_NONLINEAR
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

key
MINUS
GREATER

shared
DOT

pgoff
OP_ASSIGNMENT
BRACKET_O
BRACKET_O
BRACKET_O

address
MINUS

vma
MINUS
GREATER

vm_start
BRACKET_C
GREATER
GREATER

PAGE_SHIFT
BRACKET_C
PLUS

vma
MINUS
GREATER

vm_pgoff
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

err
OP_ASSIGNMENT

get_user_pages
BRACKET_O

current
COMMA

mm
COMMA

address
COMMA
NUMBER
COMMA
NUMBER
COMMA
NUMBER
COMMA
AMPERSANT

page
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
GR_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

key
MINUS
GREATER

shared
DOT

pgoff
OP_ASSIGNMENT

page
MINUS
GREATER

index
LESS
LESS
BRACKET_O

PAGE_CACHE_SHIFT
MINUS

PAGE_SHIFT
BRACKET_C
SEMICOLON

put_page
BRACKET_O

page
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

err
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

get_futex_key
BRACKET_C
SEMICOLON

inline

void

get_futex_key_refs
BRACKET_O

union

futex_key
MULT

key
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

key
MINUS
GREATER

both
DOT

ptr
EQ
NUMBER
BRACKET_C

return
SEMICOLON
SWITCH
BRACKET_O

key
MINUS
GREATER

both
DOT

offset
AMPERSANT
BRACKET_O

FUT_OFF_INODE
LOGICAL_OR

FUT_OFF_MMSHARED
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

case

FUT_OFF_INODE
COLON

atomic_inc
BRACKET_O
AMPERSANT

key
MINUS
GREATER

shared
DOT

inode
MINUS
GREATER

i_count
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FUT_OFF_MMSHARED
COLON

atomic_inc
BRACKET_O
AMPERSANT

key
MINUS
GREATER

private
DOT

mm
MINUS
GREATER

mm_count
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

get_futex_key_refs
BRACKET_C
SEMICOLON

void

drop_futex_key_refs
BRACKET_O

union

futex_key
MULT

key
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

key
MINUS
GREATER

both
DOT

ptr
EQ
NUMBER
BRACKET_C

return
SEMICOLON
SWITCH
BRACKET_O

key
MINUS
GREATER

both
DOT

offset
AMPERSANT
BRACKET_O

FUT_OFF_INODE
LOGICAL_OR

FUT_OFF_MMSHARED
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

case

FUT_OFF_INODE
COLON

iput
BRACKET_O

key
MINUS
GREATER

shared
DOT

inode
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FUT_OFF_MMSHARED
COLON

mmdrop
BRACKET_O

key
MINUS
GREATER

private
DOT

mm
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

drop_futex_key_refs
BRACKET_C
SEMICOLON

static

inline
TYPE_INT

get_futex_value_locked
BRACKET_O

u32
MULT

dest
COMMA

u32

__user
MULT

from
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

pagefault_disable
BRACKET_O
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

__copy_from_user_inatomic
BRACKET_O

dest
COMMA

from
COMMA

sizeof
BRACKET_O

u32
BRACKET_C
BRACKET_C
SEMICOLON

pagefault_enable
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
QUESTION_MARK
MINUS

EFAULT
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

futex_handle_fault
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

address
COMMA
STRUCT

rw_semaphore
MULT

fshared
COMMA
TYPE_INT

attempt
BRACKET_C
CURLY_BRACKET_O
STRUCT

vm_area_struct
MULT

vma
SEMICOLON
STRUCT

mm_struct
MULT

mm
OP_ASSIGNMENT

current
MINUS
GREATER

mm
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

attempt
GREATER
NUMBER
BRACKET_C

return

ret
SEMICOLON
IF
BRACKET_O
NOT

fshared
BRACKET_C

down_read
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON

vma
OP_ASSIGNMENT

find_vma
BRACKET_O

mm
COMMA

address
BRACKET_C
SEMICOLON
IF
BRACKET_O

vma
AND

address
GR_EQ

vma
MINUS
GREATER

vm_start
AND
BRACKET_O

vma
MINUS
GREATER

vm_flags
AMPERSANT

VM_WRITE
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

handle_mm_fault
BRACKET_O

mm
COMMA

vma
COMMA

address
COMMA
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

case

VM_FAULT_MINOR
COLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

current
MINUS
GREATER

min_flt
PLUS
PLUS
SEMICOLON
BREAK
SEMICOLON

case

VM_FAULT_MAJOR
COLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

current
MINUS
GREATER

maj_flt
PLUS
PLUS
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

fshared
BRACKET_C

up_read
BRACKET_O
AMPERSANT

mm
MINUS
GREATER

mmap_sem
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

refill_pi_state_cache
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

futex_pi_state
MULT

pi_state
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

current
MINUS
GREATER

pi_state_cache
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

pi_state
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
MULT

pi_state
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

pi_state
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
BRACKET_C
SEMICOLON

pi_state
MINUS
GREATER

owner
OP_ASSIGNMENT

NULL
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

refcount
COMMA
NUMBER
BRACKET_C
SEMICOLON

current
MINUS
GREATER

pi_state_cache
OP_ASSIGNMENT

pi_state
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

futex_pi_state
MULT

alloc_pi_state
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

futex_pi_state
MULT

pi_state
OP_ASSIGNMENT

current
MINUS
GREATER

pi_state_cache
SEMICOLON

WARN_ON
BRACKET_O
NOT

pi_state
BRACKET_C
SEMICOLON

current
MINUS
GREATER

pi_state_cache
OP_ASSIGNMENT

NULL
SEMICOLON

return

pi_state
SEMICOLON
CURLY_BRACKET_C

static

void

free_pi_state
BRACKET_O
STRUCT

futex_pi_state
MULT

pi_state
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

atomic_dec_and_test
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

refcount
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

pi_state
MINUS
GREATER

owner
BRACKET_C
CURLY_BRACKET_O

spin_lock_irq
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

owner
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

list_del_init
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

owner
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

rt_mutex_proxy_unlock
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

pi_mutex
COMMA

pi_state
MINUS
GREATER

owner
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

current
MINUS
GREATER

pi_state_cache
BRACKET_C

kfree
BRACKET_O

pi_state
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O

pi_state
MINUS
GREATER

owner
OP_ASSIGNMENT

NULL
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

refcount
COMMA
NUMBER
BRACKET_C
SEMICOLON

current
MINUS
GREATER

pi_state_cache
OP_ASSIGNMENT

pi_state
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
STRUCT

task_struct
MULT

futex_find_get_task
BRACKET_O

pid_t

pid
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
OR
BRACKET_O
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

p
MINUS
GREATER

euid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

p
MINUS
GREATER

uid
BRACKET_C
BRACKET_C
BRACKET_C

p
OP_ASSIGNMENT

ERR_PTR
BRACKET_O
MINUS

ESRCH
BRACKET_C
SEMICOLON
ELSE

get_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

p
SEMICOLON
CURLY_BRACKET_C

void

exit_pi_state_list
BRACKET_O
STRUCT

task_struct
MULT

curr
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head
MULT

next
COMMA
MULT

head
OP_ASSIGNMENT
AMPERSANT

curr
MINUS
GREATER

pi_state_list
SEMICOLON
STRUCT

futex_pi_state
MULT

pi_state
SEMICOLON
STRUCT

futex_hash_bucket
MULT

hb
SEMICOLON

union

futex_key

key
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

curr
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O

head
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

next
OP_ASSIGNMENT

head
MINUS
GREATER

next
SEMICOLON

pi_state
OP_ASSIGNMENT

list_entry
BRACKET_O

next
COMMA
STRUCT

futex_pi_state
COMMA

list
BRACKET_C
SEMICOLON

key
OP_ASSIGNMENT

pi_state
MINUS
GREATER

key
SEMICOLON

hb
OP_ASSIGNMENT

hash_futex
BRACKET_O
AMPERSANT

key
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

curr
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

hb
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

curr
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

head
MINUS
GREATER

next
NOT_EQ

next
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

hb
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

WARN_ON
BRACKET_O

pi_state
MINUS
GREATER

owner
NOT_EQ

curr
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
BRACKET_C
BRACKET_C
SEMICOLON

list_del_init
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
BRACKET_C
SEMICOLON

pi_state
MINUS
GREATER

owner
OP_ASSIGNMENT

NULL
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

curr
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

rt_mutex_unlock
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

pi_mutex
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

hb
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

curr
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

curr
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

lookup_pi_state
BRACKET_O

u32

uval
COMMA
STRUCT

futex_hash_bucket
MULT

hb
COMMA

union

futex_key
MULT

key
COMMA
STRUCT

futex_pi_state
MULT
MULT

ps
BRACKET_C
CURLY_BRACKET_O
STRUCT

futex_pi_state
MULT

pi_state
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

futex_q
MULT

this
COMMA
MULT

next
SEMICOLON
STRUCT

plist_head
MULT

head
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON

pid_t

pid
OP_ASSIGNMENT

uval
AMPERSANT

FUTEX_TID_MASK
SEMICOLON

head
OP_ASSIGNMENT
AMPERSANT

hb
MINUS
GREATER

chain
SEMICOLON

plist_for_each_entry_safe
BRACKET_O

this
COMMA

next
COMMA

head
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

match_futex
BRACKET_O
AMPERSANT

this
MINUS
GREATER

key
COMMA

key
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

pi_state
OP_ASSIGNMENT

this
MINUS
GREATER

pi_state
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

pi_state
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

WARN_ON
BRACKET_O
NOT

atomic_read
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

refcount
BRACKET_C
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

pid
AND

pi_state
MINUS
GREATER

owner
AND

pi_state
MINUS
GREATER

owner
MINUS
GREATER

pid
NOT_EQ

pid
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

refcount
BRACKET_C
SEMICOLON
MULT

ps
OP_ASSIGNMENT

pi_state
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

pid
BRACKET_C

return
MINUS

ESRCH
SEMICOLON

p
OP_ASSIGNMENT

futex_find_get_task
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

p
BRACKET_C
BRACKET_C

return

PTR_ERR
BRACKET_O

p
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
BRACKET_O

p
MINUS
GREATER

flags
AMPERSANT

PF_EXITPIDONE
BRACKET_C
QUESTION_MARK
MINUS

ESRCH
COLON
MINUS

EAGAIN
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

put_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

pi_state
OP_ASSIGNMENT

alloc_pi_state
BRACKET_O
BRACKET_C
SEMICOLON

rt_mutex_init_proxy_locked
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

pi_mutex
COMMA

p
BRACKET_C
SEMICOLON

pi_state
MINUS
GREATER

key
OP_ASSIGNMENT
MULT

key
SEMICOLON

WARN_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
BRACKET_C
BRACKET_C
SEMICOLON

list_add
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
COMMA
AMPERSANT

p
MINUS
GREATER

pi_state_list
BRACKET_C
SEMICOLON

pi_state
MINUS
GREATER

owner
OP_ASSIGNMENT

p
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

put_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON
MULT

ps
OP_ASSIGNMENT

pi_state
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

wake_futex
BRACKET_O
STRUCT

futex_q
MULT

q
BRACKET_C
CURLY_BRACKET_O

plist_del
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
COMMA
AMPERSANT

q
MINUS
GREATER

list
DOT

plist
BRACKET_C
SEMICOLON
IF
BRACKET_O

q
MINUS
GREATER

filp
BRACKET_C

send_sigio
BRACKET_O
AMPERSANT

q
MINUS
GREATER

filp
MINUS
GREATER

f_owner
COMMA

q
MINUS
GREATER

fd
COMMA

POLL_IN
BRACKET_C
SEMICOLON

wake_up_all
BRACKET_O
AMPERSANT

q
MINUS
GREATER

waiters
BRACKET_C
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON

q
MINUS
GREATER

lock_ptr
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

wake_futex_pi
BRACKET_O

u32

__user
MULT

uaddr
COMMA

u32

uval
COMMA
STRUCT

futex_q
MULT

this
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

new_owner
SEMICOLON
STRUCT

futex_pi_state
MULT

pi_state
OP_ASSIGNMENT

this
MINUS
GREATER

pi_state
SEMICOLON

u32

curval
COMMA

newval
SEMICOLON
IF
BRACKET_O
NOT

pi_state
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

pi_mutex
DOT

wait_lock
BRACKET_C
SEMICOLON

new_owner
OP_ASSIGNMENT

rt_mutex_next_owner
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

pi_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

new_owner
BRACKET_C

new_owner
OP_ASSIGNMENT

this
MINUS
GREATER

task
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

uval
AMPERSANT

FUTEX_OWNER_DIED
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

newval
OP_ASSIGNMENT

FUTEX_WAITERS
LOGICAL_OR

new_owner
MINUS
GREATER

pid
SEMICOLON

pagefault_disable
BRACKET_O
BRACKET_C
SEMICOLON

curval
OP_ASSIGNMENT

futex_atomic_cmpxchg_inatomic
BRACKET_O

uaddr
COMMA

uval
COMMA

newval
BRACKET_C
SEMICOLON

pagefault_enable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

curval
EQ
MINUS

EFAULT
BRACKET_C

ret
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

curval
NOT_EQ

uval
BRACKET_C

ret
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

pi_mutex
DOT

wait_lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_lock_irq
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

owner
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
BRACKET_C
BRACKET_C
SEMICOLON

list_del_init
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

owner
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

new_owner
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
BRACKET_C
BRACKET_C
SEMICOLON

list_add
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
COMMA
AMPERSANT

new_owner
MINUS
GREATER

pi_state_list
BRACKET_C
SEMICOLON

pi_state
MINUS
GREATER

owner
OP_ASSIGNMENT

new_owner
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

new_owner
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

pi_mutex
DOT

wait_lock
BRACKET_C
SEMICOLON

rt_mutex_unlock
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

pi_mutex
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

unlock_futex_pi
BRACKET_O

u32

__user
MULT

uaddr
COMMA

u32

uval
BRACKET_C
CURLY_BRACKET_O

u32

oldval
SEMICOLON

pagefault_disable
BRACKET_O
BRACKET_C
SEMICOLON

oldval
OP_ASSIGNMENT

futex_atomic_cmpxchg_inatomic
BRACKET_O

uaddr
COMMA

uval
COMMA
NUMBER
BRACKET_C
SEMICOLON

pagefault_enable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

oldval
EQ
MINUS

EFAULT
BRACKET_C

return

oldval
SEMICOLON
IF
BRACKET_O

oldval
NOT_EQ

uval
BRACKET_C

return
MINUS

EAGAIN
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline

void

double_lock_hb
BRACKET_O
STRUCT

futex_hash_bucket
MULT

hb1
COMMA
STRUCT

futex_hash_bucket
MULT

hb2
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

hb1
LE_EQ

hb2
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

hb1
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

hb1
LESS

hb2
BRACKET_C

spin_lock_nested
BRACKET_O
AMPERSANT

hb2
MINUS
GREATER

lock
COMMA

SINGLE_DEPTH_NESTING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

hb2
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

spin_lock_nested
BRACKET_O
AMPERSANT

hb1
MINUS
GREATER

lock
COMMA

SINGLE_DEPTH_NESTING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

futex_wake
BRACKET_O

u32

__user
MULT

uaddr
COMMA
STRUCT

rw_semaphore
MULT

fshared
COMMA
TYPE_INT

nr_wake
BRACKET_C
CURLY_BRACKET_O
STRUCT

futex_hash_bucket
MULT

hb
SEMICOLON
STRUCT

futex_q
MULT

this
COMMA
MULT

next
SEMICOLON
STRUCT

plist_head
MULT

head
SEMICOLON

union

futex_key

key
SEMICOLON
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O

fshared
BRACKET_C

down_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_futex_key
BRACKET_O

uaddr
COMMA

fshared
COMMA
AMPERSANT

key
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

hb
OP_ASSIGNMENT

hash_futex
BRACKET_O
AMPERSANT

key
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

hb
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

head
OP_ASSIGNMENT
AMPERSANT

hb
MINUS
GREATER

chain
SEMICOLON

plist_for_each_entry_safe
BRACKET_O

this
COMMA

next
COMMA

head
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

match_futex
BRACKET_O
AMPERSANT

this
MINUS
GREATER

key
COMMA
AMPERSANT

key
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

this
MINUS
GREATER

pi_state
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

wake_futex
BRACKET_O

this
BRACKET_C
SEMICOLON
IF
BRACKET_O
PLUS
PLUS

ret
GR_EQ

nr_wake
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

hb
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

out
COLON
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

futex_wake_op
BRACKET_O

u32

__user
MULT

uaddr1
COMMA
STRUCT

rw_semaphore
MULT

fshared
COMMA

u32

__user
MULT

uaddr2
COMMA
TYPE_INT

nr_wake
COMMA
TYPE_INT

nr_wake2
COMMA
TYPE_INT

op
BRACKET_C
CURLY_BRACKET_O

union

futex_key

key1
COMMA

key2
SEMICOLON
STRUCT

futex_hash_bucket
MULT

hb1
COMMA
MULT

hb2
SEMICOLON
STRUCT

plist_head
MULT

head
SEMICOLON
STRUCT

futex_q
MULT

this
COMMA
MULT

next
SEMICOLON
TYPE_INT

ret
COMMA

op_ret
COMMA

attempt
OP_ASSIGNMENT
NUMBER
SEMICOLON

retryfull
COLON
IF
BRACKET_O

fshared
BRACKET_C

down_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_futex_key
BRACKET_O

uaddr1
COMMA

fshared
COMMA
AMPERSANT

key1
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

ret
OP_ASSIGNMENT

get_futex_key
BRACKET_O

uaddr2
COMMA

fshared
COMMA
AMPERSANT

key2
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

hb1
OP_ASSIGNMENT

hash_futex
BRACKET_O
AMPERSANT

key1
BRACKET_C
SEMICOLON

hb2
OP_ASSIGNMENT

hash_futex
BRACKET_O
AMPERSANT

key2
BRACKET_C
SEMICOLON

retry
COLON

double_lock_hb
BRACKET_O

hb1
COMMA

hb2
BRACKET_C
SEMICOLON

op_ret
OP_ASSIGNMENT

futex_atomic_op_inuser
BRACKET_O

op
COMMA

uaddr2
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

op_ret
LESS
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

u32

dummy
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

hb1
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

hb1
NOT_EQ

hb2
BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

hb2
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
PP_IFNDEF

CONFIG_MMU

ret
OP_ASSIGNMENT

op_ret
SEMICOLON

goto

out
SEMICOLON
PP_ENDIF
IF
BRACKET_O

unlikely
BRACKET_O

op_ret
NOT_EQ
MINUS

EFAULT
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

op_ret
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

attempt
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

futex_handle_fault
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

uaddr2
COMMA

fshared
COMMA

attempt
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

goto

out
SEMICOLON

goto

retry
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_user
BRACKET_O

dummy
COMMA

uaddr2
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

return

ret
SEMICOLON

goto

retryfull
SEMICOLON
CURLY_BRACKET_C

head
OP_ASSIGNMENT
AMPERSANT

hb1
MINUS
GREATER

chain
SEMICOLON

plist_for_each_entry_safe
BRACKET_O

this
COMMA

next
COMMA

head
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

match_futex
BRACKET_O
AMPERSANT

this
MINUS
GREATER

key
COMMA
AMPERSANT

key1
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

wake_futex
BRACKET_O

this
BRACKET_C
SEMICOLON
IF
BRACKET_O
PLUS
PLUS

ret
GR_EQ

nr_wake
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

op_ret
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

head
OP_ASSIGNMENT
AMPERSANT

hb2
MINUS
GREATER

chain
SEMICOLON

op_ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

plist_for_each_entry_safe
BRACKET_O

this
COMMA

next
COMMA

head
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

match_futex
BRACKET_O
AMPERSANT

this
MINUS
GREATER

key
COMMA
AMPERSANT

key2
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

wake_futex
BRACKET_O

this
BRACKET_C
SEMICOLON
IF
BRACKET_O
PLUS
PLUS

op_ret
GR_EQ

nr_wake2
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

ret
ASSIGN_PLUS

op_ret
SEMICOLON
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

hb1
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

hb1
NOT_EQ

hb2
BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

hb2
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

out
COLON
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

futex_requeue
BRACKET_O

u32

__user
MULT

uaddr1
COMMA
STRUCT

rw_semaphore
MULT

fshared
COMMA

u32

__user
MULT

uaddr2
COMMA
TYPE_INT

nr_wake
COMMA
TYPE_INT

nr_requeue
COMMA

u32
MULT

cmpval
BRACKET_C
CURLY_BRACKET_O

union

futex_key

key1
COMMA

key2
SEMICOLON
STRUCT

futex_hash_bucket
MULT

hb1
COMMA
MULT

hb2
SEMICOLON
STRUCT

plist_head
MULT

head1
SEMICOLON
STRUCT

futex_q
MULT

this
COMMA
MULT

next
SEMICOLON
TYPE_INT

ret
COMMA

drop_count
OP_ASSIGNMENT
NUMBER
SEMICOLON

retry
COLON
IF
BRACKET_O

fshared
BRACKET_C

down_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_futex_key
BRACKET_O

uaddr1
COMMA

fshared
COMMA
AMPERSANT

key1
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

ret
OP_ASSIGNMENT

get_futex_key
BRACKET_O

uaddr2
COMMA

fshared
COMMA
AMPERSANT

key2
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

hb1
OP_ASSIGNMENT

hash_futex
BRACKET_O
AMPERSANT

key1
BRACKET_C
SEMICOLON

hb2
OP_ASSIGNMENT

hash_futex
BRACKET_O
AMPERSANT

key2
BRACKET_C
SEMICOLON

double_lock_hb
BRACKET_O

hb1
COMMA

hb2
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

cmpval
NOT_EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

u32

curval
SEMICOLON

ret
OP_ASSIGNMENT

get_futex_value_locked
BRACKET_O
AMPERSANT

curval
COMMA

uaddr1
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

hb1
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

hb1
NOT_EQ

hb2
BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

hb2
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_user
BRACKET_O

curval
COMMA

uaddr1
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C

goto

retry
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

curval
NOT_EQ
MULT

cmpval
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

EAGAIN
SEMICOLON

goto

out_unlock
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

head1
OP_ASSIGNMENT
AMPERSANT

hb1
MINUS
GREATER

chain
SEMICOLON

plist_for_each_entry_safe
BRACKET_O

this
COMMA

next
COMMA

head1
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

match_futex
BRACKET_O
AMPERSANT

this
MINUS
GREATER

key
COMMA
AMPERSANT

key1
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O
PLUS
PLUS

ret
LE_EQ

nr_wake
BRACKET_C
CURLY_BRACKET_O

wake_futex
BRACKET_O

this
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

likely
BRACKET_O

head1
NOT_EQ
AMPERSANT

hb2
MINUS
GREATER

chain
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

plist_del
BRACKET_O
AMPERSANT

this
MINUS
GREATER

list
COMMA
AMPERSANT

hb1
MINUS
GREATER

chain
BRACKET_C
SEMICOLON

plist_add
BRACKET_O
AMPERSANT

this
MINUS
GREATER

list
COMMA
AMPERSANT

hb2
MINUS
GREATER

chain
BRACKET_C
SEMICOLON

this
MINUS
GREATER

lock_ptr
OP_ASSIGNMENT
AMPERSANT

hb2
MINUS
GREATER

lock
SEMICOLON
PP_IFDEF

CONFIG_DEBUG_PI_LIST

this
MINUS
GREATER

list
DOT

plist
DOT

lock
OP_ASSIGNMENT
AMPERSANT

hb2
MINUS
GREATER

lock
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

this
MINUS
GREATER

key
OP_ASSIGNMENT

key2
SEMICOLON

get_futex_key_refs
BRACKET_O
AMPERSANT

key2
BRACKET_C
SEMICOLON

drop_count
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

ret
MINUS

nr_wake
GR_EQ

nr_requeue
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

out_unlock
COLON

spin_unlock
BRACKET_O
AMPERSANT

hb1
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

hb1
NOT_EQ

hb2
BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

hb2
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
MINUS
MINUS

drop_count
GR_EQ
NUMBER
BRACKET_C

drop_futex_key_refs
BRACKET_O
AMPERSANT

key1
BRACKET_C
SEMICOLON

out
COLON
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

inline
STRUCT

futex_hash_bucket
MULT

queue_lock
BRACKET_O
STRUCT

futex_q
MULT

q
COMMA
TYPE_INT

fd
COMMA
STRUCT

file
MULT

filp
BRACKET_C
CURLY_BRACKET_O
STRUCT

futex_hash_bucket
MULT

hb
SEMICOLON

q
MINUS
GREATER

fd
OP_ASSIGNMENT

fd
SEMICOLON

q
MINUS
GREATER

filp
OP_ASSIGNMENT

filp
SEMICOLON

init_waitqueue_head
BRACKET_O
AMPERSANT

q
MINUS
GREATER

waiters
BRACKET_C
SEMICOLON

get_futex_key_refs
BRACKET_O
AMPERSANT

q
MINUS
GREATER

key
BRACKET_C
SEMICOLON

hb
OP_ASSIGNMENT

hash_futex
BRACKET_O
AMPERSANT

q
MINUS
GREATER

key
BRACKET_C
SEMICOLON

q
MINUS
GREATER

lock_ptr
OP_ASSIGNMENT
AMPERSANT

hb
MINUS
GREATER

lock
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

hb
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

return

hb
SEMICOLON
CURLY_BRACKET_C

static

inline

void

__queue_me
BRACKET_O
STRUCT

futex_q
MULT

q
COMMA
STRUCT

futex_hash_bucket
MULT

hb
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

prio
SEMICOLON

prio
OP_ASSIGNMENT

min
BRACKET_O

current
MINUS
GREATER

normal_prio
COMMA

MAX_RT_PRIO
BRACKET_C
SEMICOLON

plist_node_init
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
COMMA

prio
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_DEBUG_PI_LIST

q
MINUS
GREATER

list
DOT

plist
DOT

lock
OP_ASSIGNMENT
AMPERSANT

hb
MINUS
GREATER

lock
SEMICOLON
PP_ENDIF

plist_add
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
COMMA
AMPERSANT

hb
MINUS
GREATER

chain
BRACKET_C
SEMICOLON

q
MINUS
GREATER

task
OP_ASSIGNMENT

current
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

hb
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

queue_unlock
BRACKET_O
STRUCT

futex_q
MULT

q
COMMA
STRUCT

futex_hash_bucket
MULT

hb
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

hb
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

drop_futex_key_refs
BRACKET_O
AMPERSANT

q
MINUS
GREATER

key
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

queue_me
BRACKET_O
STRUCT

futex_q
MULT

q
COMMA
TYPE_INT

fd
COMMA
STRUCT

file
MULT

filp
BRACKET_C
CURLY_BRACKET_O
STRUCT

futex_hash_bucket
MULT

hb
SEMICOLON

hb
OP_ASSIGNMENT

queue_lock
BRACKET_O

q
COMMA

fd
COMMA

filp
BRACKET_C
SEMICOLON

__queue_me
BRACKET_O

q
COMMA

hb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

unqueue_me
BRACKET_O
STRUCT

futex_q
MULT

q
BRACKET_C
CURLY_BRACKET_O

spinlock_t
MULT

lock_ptr
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

retry
COLON

lock_ptr
OP_ASSIGNMENT

q
MINUS
GREATER

lock_ptr
SEMICOLON

barrier
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

lock_ptr
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O

lock_ptr
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

lock_ptr
NOT_EQ

q
MINUS
GREATER

lock_ptr
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O

lock_ptr
BRACKET_C
SEMICOLON

goto

retry
SEMICOLON
CURLY_BRACKET_C

WARN_ON
BRACKET_O

plist_node_empty
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
BRACKET_C
BRACKET_C
SEMICOLON

plist_del
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
COMMA
AMPERSANT

q
MINUS
GREATER

list
DOT

plist
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

q
MINUS
GREATER

pi_state
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O

lock_ptr
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

drop_futex_key_refs
BRACKET_O
AMPERSANT

q
MINUS
GREATER

key
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

void

unqueue_me_pi
BRACKET_O
STRUCT

futex_q
MULT

q
BRACKET_C
CURLY_BRACKET_O

WARN_ON
BRACKET_O

plist_node_empty
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
BRACKET_C
BRACKET_C
SEMICOLON

plist_del
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
COMMA
AMPERSANT

q
MINUS
GREATER

list
DOT

plist
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

q
MINUS
GREATER

pi_state
BRACKET_C
SEMICOLON

free_pi_state
BRACKET_O

q
MINUS
GREATER

pi_state
BRACKET_C
SEMICOLON

q
MINUS
GREATER

pi_state
OP_ASSIGNMENT

NULL
SEMICOLON

spin_unlock
BRACKET_O

q
MINUS
GREATER

lock_ptr
BRACKET_C
SEMICOLON

drop_futex_key_refs
BRACKET_O
AMPERSANT

q
MINUS
GREATER

key
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

fixup_pi_state_owner
BRACKET_O

u32

__user
MULT

uaddr
COMMA
STRUCT

futex_q
MULT

q
COMMA
STRUCT

task_struct
MULT

curr
BRACKET_C
CURLY_BRACKET_O

u32

newtid
OP_ASSIGNMENT

curr
MINUS
GREATER

pid
LOGICAL_OR

FUTEX_WAITERS
SEMICOLON
STRUCT

futex_pi_state
MULT

pi_state
OP_ASSIGNMENT

q
MINUS
GREATER

pi_state
SEMICOLON

u32

uval
COMMA

curval
COMMA

newval
SEMICOLON
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O

pi_state
MINUS
GREATER

owner
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O

spin_lock_irq
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

owner
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
BRACKET_C
BRACKET_C
SEMICOLON

list_del_init
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

owner
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

newtid
LOGICAL_OR
OP_ASSIGNMENT

FUTEX_OWNER_DIED
SEMICOLON

pi_state
MINUS
GREATER

owner
OP_ASSIGNMENT

curr
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

curr
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
BRACKET_C
BRACKET_C
SEMICOLON

list_add
BRACKET_O
AMPERSANT

pi_state
MINUS
GREATER

list
COMMA
AMPERSANT

curr
MINUS
GREATER

pi_state_list
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

curr
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_futex_value_locked
BRACKET_O
AMPERSANT

uval
COMMA

uaddr
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

ret
BRACKET_C
CURLY_BRACKET_O

newval
OP_ASSIGNMENT
BRACKET_O

uval
AMPERSANT

FUTEX_OWNER_DIED
BRACKET_C
LOGICAL_OR

newtid
SEMICOLON

pagefault_disable
BRACKET_O
BRACKET_C
SEMICOLON

curval
OP_ASSIGNMENT

futex_atomic_cmpxchg_inatomic
BRACKET_O

uaddr
COMMA

uval
COMMA

newval
BRACKET_C
SEMICOLON

pagefault_enable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

curval
EQ
MINUS

EFAULT
BRACKET_C

ret
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

curval
EQ

uval
BRACKET_C
BREAK
SEMICOLON

uval
OP_ASSIGNMENT

curval
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

FLAGS_SHARED
NUMBER

static
TYPE_LONG

futex_wait_restart
BRACKET_O
STRUCT

restart_block
MULT

restart
BRACKET_C
SEMICOLON

static
TYPE_INT

futex_wait
BRACKET_O

u32

__user
MULT

uaddr
COMMA
STRUCT

rw_semaphore
MULT

fshared
COMMA

u32

val
COMMA

ktime_t
MULT

abs_time
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

curr
OP_ASSIGNMENT

current
SEMICOLON

DECLARE_WAITQUEUE
BRACKET_O

wait
COMMA

curr
BRACKET_C
SEMICOLON
STRUCT

futex_hash_bucket
MULT

hb
SEMICOLON
STRUCT

futex_q

q
SEMICOLON

u32

uval
SEMICOLON
TYPE_INT

ret
SEMICOLON
STRUCT

hrtimer_sleeper

t
SEMICOLON
TYPE_INT

rem
OP_ASSIGNMENT
NUMBER
SEMICOLON

q
DOT

pi_state
OP_ASSIGNMENT

NULL
SEMICOLON

retry
COLON
IF
BRACKET_O

fshared
BRACKET_C

down_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_futex_key
BRACKET_O

uaddr
COMMA

fshared
COMMA
AMPERSANT

q
DOT

key
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C

goto

out_release_sem
SEMICOLON

hb
OP_ASSIGNMENT

queue_lock
BRACKET_O
AMPERSANT

q
COMMA
MINUS
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_futex_value_locked
BRACKET_O
AMPERSANT

uval
COMMA

uaddr
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

queue_unlock
BRACKET_O
AMPERSANT

q
COMMA

hb
BRACKET_C
SEMICOLON
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_user
BRACKET_O

uval
COMMA

uaddr
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C

goto

retry
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

ret
OP_ASSIGNMENT
MINUS

EWOULDBLOCK
SEMICOLON
IF
BRACKET_O

uval
NOT_EQ

val
BRACKET_C

goto

out_unlock_release_sem
SEMICOLON

__queue_me
BRACKET_O
AMPERSANT

q
COMMA

hb
BRACKET_C
SEMICOLON
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

__set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON

add_wait_queue
BRACKET_O
AMPERSANT

q
DOT

waiters
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

plist_node_empty
BRACKET_O
AMPERSANT

q
DOT

list
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

abs_time
BRACKET_C

schedule
BRACKET_O
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O

hrtimer_init
BRACKET_O
AMPERSANT

t
DOT

timer
COMMA

CLOCK_MONOTONIC
COMMA

HRTIMER_MODE_ABS
BRACKET_C
SEMICOLON

hrtimer_init_sleeper
BRACKET_O
AMPERSANT

t
COMMA

current
BRACKET_C
SEMICOLON

t
DOT

timer
DOT

expires
OP_ASSIGNMENT
MULT

abs_time
SEMICOLON

hrtimer_start
BRACKET_O
AMPERSANT

t
DOT

timer
COMMA

t
DOT

timer
DOT

expires
COMMA

HRTIMER_MODE_ABS
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

t
DOT

task
BRACKET_C
BRACKET_C

schedule
BRACKET_O
BRACKET_C
SEMICOLON

hrtimer_cancel
BRACKET_O
AMPERSANT

t
DOT

timer
BRACKET_C
SEMICOLON

rem
OP_ASSIGNMENT
BRACKET_O

t
DOT

task
EQ

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

__set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

unqueue_me
BRACKET_O
AMPERSANT

q
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

rem
BRACKET_C

return
MINUS

ETIMEDOUT
SEMICOLON
IF
BRACKET_O
NOT

abs_time
BRACKET_C

return
MINUS

ERESTARTSYS
SEMICOLON
ELSE
CURLY_BRACKET_O
STRUCT

restart_block
MULT

restart
SEMICOLON

restart
OP_ASSIGNMENT
AMPERSANT

current_thread_info
BRACKET_O
BRACKET_C
MINUS
GREATER

restart_block
SEMICOLON

restart
MINUS
GREATER

fn
OP_ASSIGNMENT

futex_wait_restart
SEMICOLON

restart
MINUS
GREATER

futex
DOT

uaddr
OP_ASSIGNMENT
BRACKET_O

u32
MULT
BRACKET_C

uaddr
SEMICOLON

restart
MINUS
GREATER

futex
DOT

val
OP_ASSIGNMENT

val
SEMICOLON

restart
MINUS
GREATER

futex
DOT

time
OP_ASSIGNMENT

abs_time
MINUS
GREATER

tv64
SEMICOLON

restart
MINUS
GREATER

futex
DOT

flags
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

fshared
BRACKET_C

restart
MINUS
GREATER

futex
DOT

flags
LOGICAL_OR
OP_ASSIGNMENT

FLAGS_SHARED
SEMICOLON

return
MINUS

ERESTART_RESTARTBLOCK
SEMICOLON
CURLY_BRACKET_C

out_unlock_release_sem
COLON

queue_unlock
BRACKET_O
AMPERSANT

q
COMMA

hb
BRACKET_C
SEMICOLON

out_release_sem
COLON
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_LONG

futex_wait_restart
BRACKET_O
STRUCT

restart_block
MULT

restart
BRACKET_C
CURLY_BRACKET_O

u32

__user
MULT

uaddr
OP_ASSIGNMENT
BRACKET_O

u32

__user
MULT
BRACKET_C

restart
MINUS
GREATER

futex
DOT

uaddr
SEMICOLON
STRUCT

rw_semaphore
MULT

fshared
OP_ASSIGNMENT

NULL
SEMICOLON

ktime_t

t
SEMICOLON

t
DOT

tv64
OP_ASSIGNMENT

restart
MINUS
GREATER

futex
DOT

time
SEMICOLON

restart
MINUS
GREATER

fn
OP_ASSIGNMENT

do_no_restart_syscall
SEMICOLON
IF
BRACKET_O

restart
MINUS
GREATER

futex
DOT

flags
AMPERSANT

FLAGS_SHARED
BRACKET_C

fshared
OP_ASSIGNMENT
AMPERSANT

current
MINUS
GREATER

mm
MINUS
GREATER

mmap_sem
SEMICOLON

return
BRACKET_O
TYPE_LONG
BRACKET_C

futex_wait
BRACKET_O

uaddr
COMMA

fshared
COMMA

restart
MINUS
GREATER

futex
DOT

val
COMMA
AMPERSANT

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

futex_lock_pi
BRACKET_O

u32

__user
MULT

uaddr
COMMA
STRUCT

rw_semaphore
MULT

fshared
COMMA
TYPE_INT

detect
COMMA

ktime_t
MULT

time
COMMA
TYPE_INT

trylock
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_sleeper

timeout
COMMA
MULT

to
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

task_struct
MULT

curr
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

futex_hash_bucket
MULT

hb
SEMICOLON

u32

uval
COMMA

newval
COMMA

curval
SEMICOLON
STRUCT

futex_q

q
SEMICOLON
TYPE_INT

ret
COMMA

lock_taken
COMMA

ownerdied
OP_ASSIGNMENT
NUMBER
COMMA

attempt
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

refill_pi_state_cache
BRACKET_O
BRACKET_C
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON
IF
BRACKET_O

time
BRACKET_C
CURLY_BRACKET_O

to
OP_ASSIGNMENT
AMPERSANT

timeout
SEMICOLON

hrtimer_init
BRACKET_O
AMPERSANT

to
MINUS
GREATER

timer
COMMA

CLOCK_REALTIME
COMMA

HRTIMER_MODE_ABS
BRACKET_C
SEMICOLON

hrtimer_init_sleeper
BRACKET_O

to
COMMA

current
BRACKET_C
SEMICOLON

to
MINUS
GREATER

timer
DOT

expires
OP_ASSIGNMENT
MULT

time
SEMICOLON
CURLY_BRACKET_C

q
DOT

pi_state
OP_ASSIGNMENT

NULL
SEMICOLON

retry
COLON
IF
BRACKET_O

fshared
BRACKET_C

down_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_futex_key
BRACKET_O

uaddr
COMMA

fshared
COMMA
AMPERSANT

q
DOT

key
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C

goto

out_release_sem
SEMICOLON

retry_unlocked
COLON

hb
OP_ASSIGNMENT

queue_lock
BRACKET_O
AMPERSANT

q
COMMA
MINUS
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON

retry_locked
COLON

ret
OP_ASSIGNMENT

lock_taken
OP_ASSIGNMENT
NUMBER
SEMICOLON

newval
OP_ASSIGNMENT

current
MINUS
GREATER

pid
SEMICOLON

pagefault_disable
BRACKET_O
BRACKET_C
SEMICOLON

curval
OP_ASSIGNMENT

futex_atomic_cmpxchg_inatomic
BRACKET_O

uaddr
COMMA
NUMBER
COMMA

newval
BRACKET_C
SEMICOLON

pagefault_enable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

curval
EQ
MINUS

EFAULT
BRACKET_C
BRACKET_C

goto

uaddr_faulted
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
BRACKET_O

curval
AMPERSANT

FUTEX_TID_MASK
BRACKET_C
EQ

current
MINUS
GREATER

pid
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

EDEADLK
SEMICOLON

goto

out_unlock_release_sem
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O
NOT

curval
BRACKET_C
BRACKET_C

goto

out_unlock_release_sem
SEMICOLON

uval
OP_ASSIGNMENT

curval
SEMICOLON

newval
OP_ASSIGNMENT

curval
LOGICAL_OR

FUTEX_WAITERS
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ownerdied
OR
NOT
BRACKET_O

curval
AMPERSANT

FUTEX_TID_MASK
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

newval
OP_ASSIGNMENT
BRACKET_O

curval
AMPERSANT
TILDE

FUTEX_TID_MASK
BRACKET_C
LOGICAL_OR

current
MINUS
GREATER

pid
SEMICOLON

ownerdied
OP_ASSIGNMENT
NUMBER
SEMICOLON

lock_taken
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

pagefault_disable
BRACKET_O
BRACKET_C
SEMICOLON

curval
OP_ASSIGNMENT

futex_atomic_cmpxchg_inatomic
BRACKET_O

uaddr
COMMA

uval
COMMA

newval
BRACKET_C
SEMICOLON

pagefault_enable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

curval
EQ
MINUS

EFAULT
BRACKET_C
BRACKET_C

goto

uaddr_faulted
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

curval
NOT_EQ

uval
BRACKET_C
BRACKET_C

goto

retry_locked
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

lock_taken
BRACKET_C
BRACKET_C

goto

out_unlock_release_sem
SEMICOLON

ret
OP_ASSIGNMENT

lookup_pi_state
BRACKET_O

uval
COMMA

hb
COMMA
AMPERSANT

q
DOT

key
COMMA
AMPERSANT

q
DOT

pi_state
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

ret
BRACKET_C
CURLY_BRACKET_O

case
MINUS

EAGAIN
COLON

queue_unlock
BRACKET_O
AMPERSANT

q
COMMA

hb
BRACKET_C
SEMICOLON
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

cond_resched
BRACKET_O
BRACKET_C
SEMICOLON

goto

retry
SEMICOLON

case
MINUS

ESRCH
COLON
IF
BRACKET_O

get_futex_value_locked
BRACKET_O
AMPERSANT

curval
COMMA

uaddr
BRACKET_C
BRACKET_C

goto

uaddr_faulted
SEMICOLON
IF
BRACKET_O

curval
AMPERSANT

FUTEX_OWNER_DIED
BRACKET_C
CURLY_BRACKET_O

ownerdied
OP_ASSIGNMENT
NUMBER
SEMICOLON

goto

retry_locked
SEMICOLON
CURLY_BRACKET_C

default
COLON

goto

out_unlock_release_sem
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

__queue_me
BRACKET_O
AMPERSANT

q
COMMA

hb
BRACKET_C
SEMICOLON
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O
NOT

q
DOT

pi_state
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

trylock
BRACKET_C

ret
OP_ASSIGNMENT

rt_mutex_timed_lock
BRACKET_O
AMPERSANT

q
DOT

pi_state
MINUS
GREATER

pi_mutex
COMMA

to
COMMA
NUMBER
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

rt_mutex_trylock
BRACKET_O
AMPERSANT

q
DOT

pi_state
MINUS
GREATER

pi_mutex
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

ret
QUESTION_MARK
NUMBER
COLON
MINUS

EWOULDBLOCK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

fshared
BRACKET_C

down_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O

q
DOT

lock_ptr
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

q
DOT

pi_state
MINUS
GREATER

owner
NOT_EQ

curr
BRACKET_C

ret
OP_ASSIGNMENT

fixup_pi_state_owner
BRACKET_O

uaddr
COMMA
AMPERSANT

q
COMMA

curr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

q
DOT

pi_state
MINUS
GREATER

owner
EQ

curr
AND

rt_mutex_trylock
BRACKET_O
AMPERSANT

q
DOT

pi_state
MINUS
GREATER

pi_mutex
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

rt_mutex_owner
BRACKET_O
AMPERSANT

q
DOT

pi_state
MINUS
GREATER

pi_mutex
BRACKET_C
EQ

curr
BRACKET_C

printk
BRACKET_O

KERN_ERR
STRING
STRING
COMMA

ret
COMMA

q
DOT

pi_state
MINUS
GREATER

pi_mutex
DOT

owner
COMMA

q
DOT

pi_state
MINUS
GREATER

owner
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

unqueue_me_pi
BRACKET_O
AMPERSANT

q
BRACKET_C
SEMICOLON
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

return

ret
NOT_EQ
MINUS

EINTR
QUESTION_MARK

ret
COLON
MINUS

ERESTARTNOINTR
SEMICOLON

out_unlock_release_sem
COLON

queue_unlock
BRACKET_O
AMPERSANT

q
COMMA

hb
BRACKET_C
SEMICOLON

out_release_sem
COLON
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

return

ret
SEMICOLON

uaddr_faulted
COLON

queue_unlock
BRACKET_O
AMPERSANT

q
COMMA

hb
BRACKET_C
SEMICOLON
IF
BRACKET_O

attempt
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

futex_handle_fault
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

uaddr
COMMA

fshared
COMMA

attempt
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

goto

out_release_sem
SEMICOLON

goto

retry_unlocked
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_user
BRACKET_O

uval
COMMA

uaddr
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
AND
BRACKET_O

uval
NOT_EQ
MINUS

EFAULT
BRACKET_C
BRACKET_C

goto

retry
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

futex_unlock_pi
BRACKET_O

u32

__user
MULT

uaddr
COMMA
STRUCT

rw_semaphore
MULT

fshared
BRACKET_C
CURLY_BRACKET_O
STRUCT

futex_hash_bucket
MULT

hb
SEMICOLON
STRUCT

futex_q
MULT

this
COMMA
MULT

next
SEMICOLON

u32

uval
SEMICOLON
STRUCT

plist_head
MULT

head
SEMICOLON

union

futex_key

key
SEMICOLON
TYPE_INT

ret
COMMA

attempt
OP_ASSIGNMENT
NUMBER
SEMICOLON

retry
COLON
IF
BRACKET_O

get_user
BRACKET_O

uval
COMMA

uaddr
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
BRACKET_O

uval
AMPERSANT

FUTEX_TID_MASK
BRACKET_C
NOT_EQ

current
MINUS
GREATER

pid
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

fshared
BRACKET_C

down_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_futex_key
BRACKET_O

uaddr
COMMA

fshared
COMMA
AMPERSANT

key
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

hb
OP_ASSIGNMENT

hash_futex
BRACKET_O
AMPERSANT

key
BRACKET_C
SEMICOLON

retry_unlocked
COLON

spin_lock
BRACKET_O
AMPERSANT

hb
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

uval
AMPERSANT

FUTEX_OWNER_DIED
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

pagefault_disable
BRACKET_O
BRACKET_C
SEMICOLON

uval
OP_ASSIGNMENT

futex_atomic_cmpxchg_inatomic
BRACKET_O

uaddr
COMMA

current
MINUS
GREATER

pid
COMMA
NUMBER
BRACKET_C
SEMICOLON

pagefault_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

uval
EQ
MINUS

EFAULT
BRACKET_C
BRACKET_C

goto

pi_faulted
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

uval
EQ

current
MINUS
GREATER

pid
BRACKET_C
BRACKET_C

goto

out_unlock
SEMICOLON

head
OP_ASSIGNMENT
AMPERSANT

hb
MINUS
GREATER

chain
SEMICOLON

plist_for_each_entry_safe
BRACKET_O

this
COMMA

next
COMMA

head
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

match_futex
BRACKET_O
AMPERSANT

this
MINUS
GREATER

key
COMMA
AMPERSANT

key
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

ret
OP_ASSIGNMENT

wake_futex_pi
BRACKET_O

uaddr
COMMA

uval
COMMA

this
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
MINUS

EFAULT
BRACKET_C

goto

pi_faulted
SEMICOLON

goto

out_unlock
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT
BRACKET_O

uval
AMPERSANT

FUTEX_OWNER_DIED
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

unlock_futex_pi
BRACKET_O

uaddr
COMMA

uval
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
MINUS

EFAULT
BRACKET_C

goto

pi_faulted
SEMICOLON
CURLY_BRACKET_C

out_unlock
COLON

spin_unlock
BRACKET_O
AMPERSANT

hb
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

out
COLON
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

return

ret
SEMICOLON

pi_faulted
COLON

spin_unlock
BRACKET_O
AMPERSANT

hb
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

attempt
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

futex_handle_fault
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

uaddr
COMMA

fshared
COMMA

attempt
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

goto

out
SEMICOLON

goto

retry_unlocked
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

fshared
BRACKET_C

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

get_user
BRACKET_O

uval
COMMA

uaddr
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
AND
BRACKET_O

uval
NOT_EQ
MINUS

EFAULT
BRACKET_C
BRACKET_C

goto

retry
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

futex_close
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

filp
BRACKET_C
CURLY_BRACKET_O
STRUCT

futex_q
MULT

q
OP_ASSIGNMENT

filp
MINUS
GREATER

private_data
SEMICOLON

unqueue_me
BRACKET_O

q
BRACKET_C
SEMICOLON

kfree
BRACKET_O

q
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_INT

futex_poll
BRACKET_O
STRUCT

file
MULT

filp
COMMA
STRUCT

poll_table_struct
MULT

wait
BRACKET_C
CURLY_BRACKET_O
STRUCT

futex_q
MULT

q
OP_ASSIGNMENT

filp
MINUS
GREATER

private_data
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

poll_wait
BRACKET_O

filp
COMMA
AMPERSANT

q
MINUS
GREATER

waiters
COMMA

wait
BRACKET_C
SEMICOLON
IF
BRACKET_O

plist_node_empty
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT

POLLIN
LOGICAL_OR

POLLRDNORM
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

file_operations

futex_fops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

release
OP_ASSIGNMENT

futex_close
COMMA
DOT

poll
OP_ASSIGNMENT

futex_poll
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

futex_fd
BRACKET_O

u32

__user
MULT

uaddr
COMMA
TYPE_INT

signal
BRACKET_C
CURLY_BRACKET_O
STRUCT

futex_q
MULT

q
SEMICOLON
STRUCT

file
MULT

filp
SEMICOLON
TYPE_INT

ret
COMMA

err
SEMICOLON
STRUCT

rw_semaphore
MULT

fshared
SEMICOLON

static
TYPE_UNSIGNED
TYPE_LONG

printk_interval
SEMICOLON
IF
BRACKET_O

printk_timed_ratelimit
BRACKET_O
AMPERSANT

printk_interval
COMMA
NUMBER
MULT
NUMBER
MULT
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA

current
MINUS
GREATER

comm
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

ret
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
NOT

valid_signal
BRACKET_O

signal
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

ret
OP_ASSIGNMENT

get_unused_fd
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
LESS
NUMBER
BRACKET_C

goto

out
SEMICOLON

filp
OP_ASSIGNMENT

get_empty_filp
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

filp
BRACKET_C
CURLY_BRACKET_O

put_unused_fd
BRACKET_O

ret
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
MINUS

ENFILE
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

filp
MINUS
GREATER

f_op
OP_ASSIGNMENT
AMPERSANT

futex_fops
SEMICOLON

filp
MINUS
GREATER

f_path
DOT

mnt
OP_ASSIGNMENT

mntget
BRACKET_O

futex_mnt
BRACKET_C
SEMICOLON

filp
MINUS
GREATER

f_path
DOT

dentry
OP_ASSIGNMENT

dget
BRACKET_O

futex_mnt
MINUS
GREATER

mnt_root
BRACKET_C
SEMICOLON

filp
MINUS
GREATER

f_mapping
OP_ASSIGNMENT

filp
MINUS
GREATER

f_path
DOT

dentry
MINUS
GREATER

d_inode
MINUS
GREATER

i_mapping
SEMICOLON
IF
BRACKET_O

signal
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT

__f_setown
BRACKET_O

filp
COMMA

task_pid
BRACKET_O

current
BRACKET_C
COMMA

PIDTYPE_PID
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

goto

error
SEMICOLON
CURLY_BRACKET_C

filp
MINUS
GREATER

f_owner
DOT

signum
OP_ASSIGNMENT

signal
SEMICOLON
CURLY_BRACKET_C

q
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

q
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

q
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

goto

error
SEMICOLON
CURLY_BRACKET_C

q
MINUS
GREATER

pi_state
OP_ASSIGNMENT

NULL
SEMICOLON

fshared
OP_ASSIGNMENT
AMPERSANT

current
MINUS
GREATER

mm
MINUS
GREATER

mmap_sem
SEMICOLON

down_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

get_futex_key
BRACKET_O

uaddr
COMMA

fshared
COMMA
AMPERSANT

q
MINUS
GREATER

key
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

err
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

kfree
BRACKET_O

q
BRACKET_C
SEMICOLON

goto

error
SEMICOLON
CURLY_BRACKET_C

filp
MINUS
GREATER

private_data
OP_ASSIGNMENT

q
SEMICOLON

queue_me
BRACKET_O

q
COMMA

ret
COMMA

filp
BRACKET_C
SEMICOLON

up_read
BRACKET_O

fshared
BRACKET_C
SEMICOLON

fd_install
BRACKET_O

ret
COMMA

filp
BRACKET_C
SEMICOLON

out
COLON

return

ret
SEMICOLON

error
COLON

put_unused_fd
BRACKET_O

ret
BRACKET_C
SEMICOLON

put_filp
BRACKET_O

filp
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

err
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_set_robust_list
BRACKET_O
STRUCT

robust_list_head

__user
MULT

head
COMMA

size_t

len
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

len
NOT_EQ

sizeof
BRACKET_O
MULT

head
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

current
MINUS
GREATER

robust_list
OP_ASSIGNMENT

head
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_get_robust_list
BRACKET_O
TYPE_INT

pid
COMMA
STRUCT

robust_list_head

__user
MULT

__user
MULT

head_ptr
COMMA

size_t

__user
MULT

len_ptr
BRACKET_C
CURLY_BRACKET_O
STRUCT

robust_list_head

__user
MULT

head
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

ret
SEMICOLON
IF
BRACKET_O
NOT

pid
BRACKET_C

head
OP_ASSIGNMENT

current
MINUS
GREATER

robust_list
SEMICOLON
ELSE
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON

ret
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
BRACKET_C

goto

err_unlock
SEMICOLON

ret
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
IF
BRACKET_O
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

p
MINUS
GREATER

euid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

p
MINUS
GREATER

uid
BRACKET_C
AND
NOT

capable
BRACKET_O

CAP_SYS_PTRACE
BRACKET_C
BRACKET_C

goto

err_unlock
SEMICOLON

head
OP_ASSIGNMENT

p
MINUS
GREATER

robust_list
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

put_user
BRACKET_O

sizeof
BRACKET_O
MULT

head
BRACKET_C
COMMA

len_ptr
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return

put_user
BRACKET_O

head
COMMA

head_ptr
BRACKET_C
SEMICOLON

err_unlock
COLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

handle_futex_death
BRACKET_O

u32

__user
MULT

uaddr
COMMA
STRUCT

task_struct
MULT

curr
COMMA
TYPE_INT

pi
BRACKET_C
CURLY_BRACKET_O

u32

uval
COMMA

nval
COMMA

mval
SEMICOLON

retry
COLON
IF
BRACKET_O

get_user
BRACKET_O

uval
COMMA

uaddr
BRACKET_C
BRACKET_C

return
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O

uval
AMPERSANT

FUTEX_TID_MASK
BRACKET_C
EQ

curr
MINUS
GREATER

pid
BRACKET_C
CURLY_BRACKET_O

mval
OP_ASSIGNMENT
BRACKET_O

uval
AMPERSANT

FUTEX_WAITERS
BRACKET_C
LOGICAL_OR

FUTEX_OWNER_DIED
SEMICOLON

nval
OP_ASSIGNMENT

futex_atomic_cmpxchg_inatomic
BRACKET_O

uaddr
COMMA

uval
COMMA

mval
BRACKET_C
SEMICOLON
IF
BRACKET_O

nval
EQ
MINUS

EFAULT
BRACKET_C

return
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

nval
NOT_EQ

uval
BRACKET_C

goto

retry
SEMICOLON
IF
BRACKET_O
NOT

pi
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

uval
AMPERSANT

FUTEX_WAITERS
BRACKET_C

futex_wake
BRACKET_O

uaddr
COMMA
AMPERSANT

curr
MINUS
GREATER

mm
MINUS
GREATER

mmap_sem
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

fetch_robust_entry
BRACKET_O
STRUCT

robust_list

__user
MULT
MULT

entry
COMMA
STRUCT

robust_list

__user
MULT

__user
MULT

head
COMMA
TYPE_INT
MULT

pi
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

uentry
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

uentry
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

__user
MULT
BRACKET_C

head
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
MULT

entry
OP_ASSIGNMENT
BRACKET_O

void

__user
MULT
BRACKET_C
BRACKET_O

uentry
AMPERSANT
TILDE
NUMBER

UL
BRACKET_C
SEMICOLON
MULT

pi
OP_ASSIGNMENT

uentry
AMPERSANT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

exit_robust_list
BRACKET_O
STRUCT

task_struct
MULT

curr
BRACKET_C
CURLY_BRACKET_O
STRUCT

robust_list_head

__user
MULT

head
OP_ASSIGNMENT

curr
MINUS
GREATER

robust_list
SEMICOLON
STRUCT

robust_list

__user
MULT

entry
COMMA
MULT

pending
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

limit
OP_ASSIGNMENT

ROBUST_LIST_LIMIT
COMMA

pi
COMMA

pip
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

futex_offset
SEMICOLON
IF
BRACKET_O

fetch_robust_entry
BRACKET_O
AMPERSANT

entry
COMMA
AMPERSANT

head
MINUS
GREATER

list
DOT

next
COMMA
AMPERSANT

pi
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

futex_offset
COMMA
AMPERSANT

head
MINUS
GREATER

futex_offset
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

fetch_robust_entry
BRACKET_O
AMPERSANT

pending
COMMA
AMPERSANT

head
MINUS
GREATER

list_op_pending
COMMA
AMPERSANT

pip
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

pending
BRACKET_C

handle_futex_death
BRACKET_O
BRACKET_O

void

__user
MULT
BRACKET_C

pending
PLUS

futex_offset
COMMA

curr
COMMA

pip
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

entry
NOT_EQ
AMPERSANT

head
MINUS
GREATER

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

entry
NOT_EQ

pending
BRACKET_C
IF
BRACKET_O

handle_futex_death
BRACKET_O
BRACKET_O

void

__user
MULT
BRACKET_C

entry
PLUS

futex_offset
COMMA

curr
COMMA

pi
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

fetch_robust_entry
BRACKET_O
AMPERSANT

entry
COMMA
AMPERSANT

entry
MINUS
GREATER

next
COMMA
AMPERSANT

pi
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O
NOT
MINUS
MINUS

limit
BRACKET_C
BREAK
SEMICOLON

cond_resched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
TYPE_LONG

do_futex
BRACKET_O

u32

__user
MULT

uaddr
COMMA
TYPE_INT

op
COMMA

u32

val
COMMA

ktime_t
MULT

timeout
COMMA

u32

__user
MULT

uaddr2
COMMA

u32

val2
COMMA

u32

val3
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON
TYPE_INT

cmd
OP_ASSIGNMENT

op
AMPERSANT

FUTEX_CMD_MASK
SEMICOLON
STRUCT

rw_semaphore
MULT

fshared
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

op
AMPERSANT

FUTEX_PRIVATE_FLAG
BRACKET_C
BRACKET_C

fshared
OP_ASSIGNMENT
AMPERSANT

current
MINUS
GREATER

mm
MINUS
GREATER

mmap_sem
SEMICOLON
SWITCH
BRACKET_O

cmd
BRACKET_C
CURLY_BRACKET_O

case

FUTEX_WAIT
COLON

ret
OP_ASSIGNMENT

futex_wait
BRACKET_O

uaddr
COMMA

fshared
COMMA

val
COMMA

timeout
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FUTEX_WAKE
COLON

ret
OP_ASSIGNMENT

futex_wake
BRACKET_O

uaddr
COMMA

fshared
COMMA

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FUTEX_FD
COLON

ret
OP_ASSIGNMENT

futex_fd
BRACKET_O

uaddr
COMMA

val
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FUTEX_REQUEUE
COLON

ret
OP_ASSIGNMENT

futex_requeue
BRACKET_O

uaddr
COMMA

fshared
COMMA

uaddr2
COMMA

val
COMMA

val2
COMMA

NULL
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FUTEX_CMP_REQUEUE
COLON

ret
OP_ASSIGNMENT

futex_requeue
BRACKET_O

uaddr
COMMA

fshared
COMMA

uaddr2
COMMA

val
COMMA

val2
COMMA
AMPERSANT

val3
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FUTEX_WAKE_OP
COLON

ret
OP_ASSIGNMENT

futex_wake_op
BRACKET_O

uaddr
COMMA

fshared
COMMA

uaddr2
COMMA

val
COMMA

val2
COMMA

val3
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FUTEX_LOCK_PI
COLON

ret
OP_ASSIGNMENT

futex_lock_pi
BRACKET_O

uaddr
COMMA

fshared
COMMA

val
COMMA

timeout
COMMA
NUMBER
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FUTEX_UNLOCK_PI
COLON

ret
OP_ASSIGNMENT

futex_unlock_pi
BRACKET_O

uaddr
COMMA

fshared
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

FUTEX_TRYLOCK_PI
COLON

ret
OP_ASSIGNMENT

futex_lock_pi
BRACKET_O

uaddr
COMMA

fshared
COMMA
NUMBER
COMMA

timeout
COMMA
NUMBER
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON

ret
OP_ASSIGNMENT
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_futex
BRACKET_O

u32

__user
MULT

uaddr
COMMA
TYPE_INT

op
COMMA

u32

val
COMMA
STRUCT

timespec

__user
MULT

utime
COMMA

u32

__user
MULT

uaddr2
COMMA

u32

val3
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

ts
SEMICOLON

ktime_t

t
COMMA
MULT

tp
OP_ASSIGNMENT

NULL
SEMICOLON

u32

val2
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

cmd
OP_ASSIGNMENT

op
AMPERSANT

FUTEX_CMD_MASK
SEMICOLON
IF
BRACKET_O

utime
AND
BRACKET_O

cmd
EQ

FUTEX_WAIT
OR

cmd
EQ

FUTEX_LOCK_PI
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

ts
COMMA

utime
COMMA

sizeof
BRACKET_O

ts
BRACKET_C
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

timespec_valid
BRACKET_O
AMPERSANT

ts
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

t
OP_ASSIGNMENT

timespec_to_ktime
BRACKET_O

ts
BRACKET_C
SEMICOLON
IF
BRACKET_O

cmd
EQ

FUTEX_WAIT
BRACKET_C

t
OP_ASSIGNMENT

ktime_add
BRACKET_O

ktime_get
BRACKET_O
BRACKET_C
COMMA

t
BRACKET_C
SEMICOLON

tp
OP_ASSIGNMENT
AMPERSANT

t
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

cmd
EQ

FUTEX_REQUEUE
OR

cmd
EQ

FUTEX_CMP_REQUEUE
OR

cmd
EQ

FUTEX_WAKE_OP
BRACKET_C

val2
OP_ASSIGNMENT
BRACKET_O

u32
BRACKET_C
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

utime
SEMICOLON

return

do_futex
BRACKET_O

uaddr
COMMA

op
COMMA

val
COMMA

tp
COMMA

uaddr2
COMMA

val2
COMMA

val3
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

futexfs_get_sb
BRACKET_O
STRUCT

file_system_type
MULT

fs_type
COMMA
TYPE_INT

flags
COMMA
CONST
TYPE_CHAR
MULT

dev_name
COMMA

void
MULT

data
COMMA
STRUCT

vfsmount
MULT

mnt
BRACKET_C
CURLY_BRACKET_O

return

get_sb_pseudo
BRACKET_O

fs_type
COMMA
STRING
COMMA

NULL
COMMA
NUMBER

xBAD1DEA
COMMA

mnt
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

file_system_type

futex_fs_type
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

get_sb
OP_ASSIGNMENT

futexfs_get_sb
COMMA
DOT

kill_sb
OP_ASSIGNMENT

kill_anon_super
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__init

init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
OP_ASSIGNMENT

register_filesystem
BRACKET_O
AMPERSANT

futex_fs_type
BRACKET_C
SEMICOLON
IF
BRACKET_O

i
BRACKET_C

return

i
SEMICOLON

futex_mnt
OP_ASSIGNMENT

kern_mount
BRACKET_O
AMPERSANT

futex_fs_type
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

futex_mnt
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

unregister_filesystem
BRACKET_O
AMPERSANT

futex_fs_type
BRACKET_C
SEMICOLON

return

PTR_ERR
BRACKET_O

futex_mnt
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

ARRAY_SIZE
BRACKET_O

futex_queues
BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

plist_head_init
BRACKET_O
AMPERSANT

futex_queues
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

chain
COMMA
AMPERSANT

futex_queues
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

lock
BRACKET_C
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

futex_queues
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__initcall
BRACKET_O

init
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static

inline
TYPE_INT

fetch_robust_entry
BRACKET_O

compat_uptr_t
MULT

uentry
COMMA
STRUCT

robust_list

__user
MULT
MULT

entry
COMMA

compat_uptr_t

__user
MULT

head
COMMA
TYPE_INT
MULT

pi
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

get_user
BRACKET_O
MULT

uentry
COMMA

head
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
MULT

entry
OP_ASSIGNMENT

compat_ptr
BRACKET_O
BRACKET_O
MULT

uentry
BRACKET_C
AMPERSANT
TILDE
NUMBER
BRACKET_C
SEMICOLON
MULT

pi
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_INT
BRACKET_C
BRACKET_O
MULT

uentry
BRACKET_C
AMPERSANT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

__user
MULT

futex_uaddr
BRACKET_O
STRUCT

robust_list
MULT

entry
COMMA

compat_long_t

futex_offset
BRACKET_C
CURLY_BRACKET_O

compat_uptr_t

base
OP_ASSIGNMENT

ptr_to_compat
BRACKET_O

entry
BRACKET_C
SEMICOLON

void

__user
MULT

uaddr
OP_ASSIGNMENT

compat_ptr
BRACKET_O

base
PLUS

futex_offset
BRACKET_C
SEMICOLON

return

uaddr
SEMICOLON
CURLY_BRACKET_C

void

compat_exit_robust_list
BRACKET_O
STRUCT

task_struct
MULT

curr
BRACKET_C
CURLY_BRACKET_O
STRUCT

compat_robust_list_head

__user
MULT

head
OP_ASSIGNMENT

curr
MINUS
GREATER

compat_robust_list
SEMICOLON
STRUCT

robust_list

__user
MULT

entry
COMMA
MULT

pending
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

limit
OP_ASSIGNMENT

ROBUST_LIST_LIMIT
COMMA

pi
COMMA

pip
SEMICOLON

compat_uptr_t

uentry
COMMA

upending
SEMICOLON

compat_long_t

futex_offset
SEMICOLON
IF
BRACKET_O

fetch_robust_entry
BRACKET_O
AMPERSANT

uentry
COMMA
AMPERSANT

entry
COMMA
AMPERSANT

head
MINUS
GREATER

list
DOT

next
COMMA
AMPERSANT

pi
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

futex_offset
COMMA
AMPERSANT

head
MINUS
GREATER

futex_offset
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

fetch_robust_entry
BRACKET_O
AMPERSANT

upending
COMMA
AMPERSANT

pending
COMMA
AMPERSANT

head
MINUS
GREATER

list_op_pending
COMMA
AMPERSANT

pip
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

pending
BRACKET_C
CURLY_BRACKET_O

void

__user
MULT

uaddr
OP_ASSIGNMENT

futex_uaddr
BRACKET_O

pending
COMMA

futex_offset
BRACKET_C
SEMICOLON

handle_futex_death
BRACKET_O

uaddr
COMMA

curr
COMMA

pip
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

entry
NOT_EQ
BRACKET_O
STRUCT

robust_list

__user
MULT
BRACKET_C
AMPERSANT

head
MINUS
GREATER

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

entry
NOT_EQ

pending
BRACKET_C
CURLY_BRACKET_O

void

__user
MULT

uaddr
OP_ASSIGNMENT

futex_uaddr
BRACKET_O

entry
COMMA

futex_offset
BRACKET_C
SEMICOLON
IF
BRACKET_O

handle_futex_death
BRACKET_O

uaddr
COMMA

curr
COMMA

pi
BRACKET_C
BRACKET_C

return
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

fetch_robust_entry
BRACKET_O
AMPERSANT

uentry
COMMA
AMPERSANT

entry
COMMA
BRACKET_O

compat_uptr_t

__user
MULT
BRACKET_C
AMPERSANT

entry
MINUS
GREATER

next
COMMA
AMPERSANT

pi
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O
NOT
MINUS
MINUS

limit
BRACKET_C
BREAK
SEMICOLON

cond_resched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_set_robust_list
BRACKET_O
STRUCT

compat_robust_list_head

__user
MULT

head
COMMA

compat_size_t

len
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

len
NOT_EQ

sizeof
BRACKET_O
MULT

head
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

current
MINUS
GREATER

compat_robust_list
OP_ASSIGNMENT

head
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_get_robust_list
BRACKET_O
TYPE_INT

pid
COMMA

compat_uptr_t

__user
MULT

head_ptr
COMMA

compat_size_t

__user
MULT

len_ptr
BRACKET_C
CURLY_BRACKET_O
STRUCT

compat_robust_list_head

__user
MULT

head
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

ret
SEMICOLON
IF
BRACKET_O
NOT

pid
BRACKET_C

head
OP_ASSIGNMENT

current
MINUS
GREATER

compat_robust_list
SEMICOLON
ELSE
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON

ret
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
BRACKET_C

goto

err_unlock
SEMICOLON

ret
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
IF
BRACKET_O
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

p
MINUS
GREATER

euid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

p
MINUS
GREATER

uid
BRACKET_C
AND
NOT

capable
BRACKET_O

CAP_SYS_PTRACE
BRACKET_C
BRACKET_C

goto

err_unlock
SEMICOLON

head
OP_ASSIGNMENT

p
MINUS
GREATER

compat_robust_list
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

put_user
BRACKET_O

sizeof
BRACKET_O
MULT

head
BRACKET_C
COMMA

len_ptr
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return

put_user
BRACKET_O

ptr_to_compat
BRACKET_O

head
BRACKET_C
COMMA

head_ptr
BRACKET_C
SEMICOLON

err_unlock
COLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

compat_sys_futex
BRACKET_O

u32

__user
MULT

uaddr
COMMA
TYPE_INT

op
COMMA

u32

val
COMMA
STRUCT

compat_timespec

__user
MULT

utime
COMMA

u32

__user
MULT

uaddr2
COMMA

u32

val3
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

ts
SEMICOLON

ktime_t

t
COMMA
MULT

tp
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_INT

val2
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

cmd
OP_ASSIGNMENT

op
AMPERSANT

FUTEX_CMD_MASK
SEMICOLON
IF
BRACKET_O

utime
AND
BRACKET_O

cmd
EQ

FUTEX_WAIT
OR

cmd
EQ

FUTEX_LOCK_PI
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

get_compat_timespec
BRACKET_O
AMPERSANT

ts
COMMA

utime
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

timespec_valid
BRACKET_O
AMPERSANT

ts
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

t
OP_ASSIGNMENT

timespec_to_ktime
BRACKET_O

ts
BRACKET_C
SEMICOLON
IF
BRACKET_O

cmd
EQ

FUTEX_WAIT
BRACKET_C

t
OP_ASSIGNMENT

ktime_add
BRACKET_O

ktime_get
BRACKET_O
BRACKET_C
COMMA

t
BRACKET_C
SEMICOLON

tp
OP_ASSIGNMENT
AMPERSANT

t
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

cmd
EQ

FUTEX_REQUEUE
OR

cmd
EQ

FUTEX_CMP_REQUEUE
BRACKET_C

val2
OP_ASSIGNMENT
BRACKET_O
TYPE_INT
BRACKET_C
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

utime
SEMICOLON

return

do_futex
BRACKET_O

uaddr
COMMA

op
COMMA

val
COMMA

tp
COMMA

uaddr2
COMMA

val2
COMMA

val3
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

ktime_t

ktime_get
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

now
SEMICOLON

ktime_get_ts
BRACKET_O
AMPERSANT

now
BRACKET_C
SEMICOLON

return

timespec_to_ktime
BRACKET_O

now
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

ktime_get
BRACKET_C
SEMICOLON

ktime_t

ktime_get_real
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

now
SEMICOLON

getnstimeofday
BRACKET_O
AMPERSANT

now
BRACKET_C
SEMICOLON

return

timespec_to_ktime
BRACKET_O

now
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

ktime_get_real
BRACKET_C
SEMICOLON

DEFINE_PER_CPU
BRACKET_O
STRUCT

hrtimer_cpu_base
COMMA

hrtimer_bases
BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

clock_base
OP_ASSIGNMENT
CURLY_BRACKET_O
CURLY_BRACKET_O
DOT

index
OP_ASSIGNMENT

CLOCK_REALTIME
COMMA
DOT

get_time
OP_ASSIGNMENT
AMPERSANT

ktime_get_real
COMMA
DOT

resolution
OP_ASSIGNMENT

KTIME_LOW_RES
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

index
OP_ASSIGNMENT

CLOCK_MONOTONIC
COMMA
DOT

get_time
OP_ASSIGNMENT
AMPERSANT

ktime_get
COMMA
DOT

resolution
OP_ASSIGNMENT

KTIME_LOW_RES
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_C
CURLY_BRACKET_C
SEMICOLON

void

ktime_get_ts
BRACKET_O
STRUCT

timespec
MULT

ts
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

tomono
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

seq
SEMICOLON
DO
CURLY_BRACKET_O

seq
OP_ASSIGNMENT

read_seqbegin
BRACKET_O
AMPERSANT

xtime_lock
BRACKET_C
SEMICOLON

getnstimeofday
BRACKET_O

ts
BRACKET_C
SEMICOLON

tomono
OP_ASSIGNMENT

wall_to_monotonic
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

read_seqretry
BRACKET_O
AMPERSANT

xtime_lock
COMMA

seq
BRACKET_C
BRACKET_C
SEMICOLON

set_normalized_timespec
BRACKET_O

ts
COMMA

ts
MINUS
GREATER

tv_sec
PLUS

tomono
DOT

tv_sec
COMMA

ts
MINUS
GREATER

tv_nsec
PLUS

tomono
DOT

tv_nsec
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

ktime_get_ts
BRACKET_C
SEMICOLON

static

void

hrtimer_get_softirq_time
BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

base
BRACKET_C
CURLY_BRACKET_O

ktime_t

xtim
COMMA

tomono
SEMICOLON
STRUCT

timespec

xts
COMMA

tom
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

seq
SEMICOLON
DO
CURLY_BRACKET_O

seq
OP_ASSIGNMENT

read_seqbegin
BRACKET_O
AMPERSANT

xtime_lock
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_NO_HZ

getnstimeofday
BRACKET_O
AMPERSANT

xts
BRACKET_C
SEMICOLON
PP_ELSE

xts
OP_ASSIGNMENT

xtime
SEMICOLON
PP_ENDIF

tom
OP_ASSIGNMENT

wall_to_monotonic
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

read_seqretry
BRACKET_O
AMPERSANT

xtime_lock
COMMA

seq
BRACKET_C
BRACKET_C
SEMICOLON

xtim
OP_ASSIGNMENT

timespec_to_ktime
BRACKET_O

xts
BRACKET_C
SEMICOLON

tomono
OP_ASSIGNMENT

timespec_to_ktime
BRACKET_O

tom
BRACKET_C
SEMICOLON

base
MINUS
GREATER

clock_base
CORNER_BRACKET_O

CLOCK_REALTIME
CORNER_BRACKET_C
DOT

softirq_time
OP_ASSIGNMENT

xtim
SEMICOLON

base
MINUS
GREATER

clock_base
CORNER_BRACKET_O

CLOCK_MONOTONIC
CORNER_BRACKET_C
DOT

softirq_time
OP_ASSIGNMENT

ktime_add
BRACKET_O

xtim
COMMA

tomono
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

hrtimer_callback_running
BRACKET_O
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O

return

timer
MINUS
GREATER

state
AMPERSANT

HRTIMER_STATE_CALLBACK
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_SMP

static
STRUCT

hrtimer_clock_base
MULT

lock_hrtimer_base
BRACKET_O
CONST
STRUCT

hrtimer
MULT

timer
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

flags
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_clock_base
MULT

base
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

base
OP_ASSIGNMENT

timer
MINUS
GREATER

base
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

base
NOT_EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_lock_irqsave
BRACKET_O
AMPERSANT

base
MINUS
GREATER

cpu_base
MINUS
GREATER

lock
COMMA
MULT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

base
EQ

timer
MINUS
GREATER

base
BRACKET_C
BRACKET_C

return

base
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

base
MINUS
GREATER

cpu_base
MINUS
GREATER

lock
COMMA
MULT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline
STRUCT

hrtimer_clock_base
MULT

switch_hrtimer_base
BRACKET_O
STRUCT

hrtimer
MULT

timer
COMMA
STRUCT

hrtimer_clock_base
MULT

base
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_clock_base
MULT

new_base
SEMICOLON
STRUCT

hrtimer_cpu_base
MULT

new_cpu_base
SEMICOLON

new_cpu_base
OP_ASSIGNMENT
AMPERSANT

__get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
SEMICOLON

new_base
OP_ASSIGNMENT
AMPERSANT

new_cpu_base
MINUS
GREATER

clock_base
CORNER_BRACKET_O

base
MINUS
GREATER

index
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

base
NOT_EQ

new_base
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

hrtimer_callback_running
BRACKET_O

timer
BRACKET_C
BRACKET_C
BRACKET_C

return

base
SEMICOLON

timer
MINUS
GREATER

base
OP_ASSIGNMENT

NULL
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

base
MINUS
GREATER

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

new_base
MINUS
GREATER

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

base
OP_ASSIGNMENT

new_base
SEMICOLON
CURLY_BRACKET_C

return

new_base
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static

inline
STRUCT

hrtimer_clock_base
MULT

lock_hrtimer_base
BRACKET_O
CONST
STRUCT

hrtimer
MULT

timer
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

flags
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_clock_base
MULT

base
OP_ASSIGNMENT

timer
MINUS
GREATER

base
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

base
MINUS
GREATER

cpu_base
MINUS
GREATER

lock
COMMA
MULT

flags
BRACKET_C
SEMICOLON

return

base
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

switch_hrtimer_base
BRACKET_O

t
COMMA

b
BRACKET_C
BRACKET_O

b
BRACKET_C
PP_ENDIF
PP_IF

BITS_PER_LONG
LESS
NUMBER
PP_IFNDEF

CONFIG_KTIME_SCALAR

ktime_t

ktime_add_ns
BRACKET_O
CONST

ktime_t

kt
COMMA

u64

nsec
BRACKET_C
CURLY_BRACKET_O

ktime_t

tmp
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

nsec
LESS

NSEC_PER_SEC
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

tmp
DOT

tv64
OP_ASSIGNMENT

nsec
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

rem
OP_ASSIGNMENT

do_div
BRACKET_O

nsec
COMMA

NSEC_PER_SEC
BRACKET_C
SEMICOLON

tmp
OP_ASSIGNMENT

ktime_set
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C

nsec
COMMA

rem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ktime_add
BRACKET_O

kt
COMMA

tmp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

ktime_add_ns
BRACKET_C
SEMICOLON
PP_ENDIF
TYPE_UNSIGNED
TYPE_LONG

ktime_divns
BRACKET_O
CONST

ktime_t

kt
COMMA

s64

div
BRACKET_C
CURLY_BRACKET_O

u64

dclc
COMMA

inc
COMMA

dns
SEMICOLON
TYPE_INT

sft
OP_ASSIGNMENT
NUMBER
SEMICOLON

dclc
OP_ASSIGNMENT

dns
OP_ASSIGNMENT

ktime_to_ns
BRACKET_O

kt
BRACKET_C
SEMICOLON

inc
OP_ASSIGNMENT

div
SEMICOLON
WHILE
BRACKET_O

div
GREATER
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

sft
PLUS
PLUS
SEMICOLON

div
GREATER
GR_EQ
NUMBER
SEMICOLON
CURLY_BRACKET_C

dclc
GREATER
GR_EQ

sft
SEMICOLON

do_div
BRACKET_O

dclc
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

div
BRACKET_C
SEMICOLON

return
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

dclc
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_HIGH_RES_TIMERS

static
TYPE_INT

hrtimer_hres_enabled

__read_mostly
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
TYPE_INT

__init

setup_hrtimer_hres
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

strcmp
BRACKET_O

str
COMMA
STRING
BRACKET_C
BRACKET_C

hrtimer_hres_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE
IF
BRACKET_O
NOT

strcmp
BRACKET_O

str
COMMA
STRING
BRACKET_C
BRACKET_C

hrtimer_hres_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

setup_hrtimer_hres
BRACKET_C
SEMICOLON

static

inline
TYPE_INT

hrtimer_is_hres_enabled
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

hrtimer_hres_enabled
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

hrtimer_hres_active
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

__get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
DOT

hres_active
SEMICOLON
CURLY_BRACKET_C

static

void

hrtimer_force_reprogram
BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

cpu_base
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
STRUCT

hrtimer_clock_base
MULT

base
OP_ASSIGNMENT

cpu_base
MINUS
GREATER

clock_base
SEMICOLON

ktime_t

expires
SEMICOLON

cpu_base
MINUS
GREATER

expires_next
DOT

tv64
OP_ASSIGNMENT

KTIME_MAX
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

HRTIMER_MAX_CLOCK_BASES
SEMICOLON

i
PLUS
PLUS
COMMA

base
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer
MULT

timer
SEMICOLON
IF
BRACKET_O
NOT

base
MINUS
GREATER

first
BRACKET_C
CONTINUE
SEMICOLON

timer
OP_ASSIGNMENT

rb_entry
BRACKET_O

base
MINUS
GREATER

first
COMMA
STRUCT

hrtimer
COMMA

node
BRACKET_C
SEMICOLON

expires
OP_ASSIGNMENT

ktime_sub
BRACKET_O

timer
MINUS
GREATER

expires
COMMA

base
MINUS
GREATER

offset
BRACKET_C
SEMICOLON
IF
BRACKET_O

expires
DOT

tv64
LESS

cpu_base
MINUS
GREATER

expires_next
DOT

tv64
BRACKET_C

cpu_base
MINUS
GREATER

expires_next
OP_ASSIGNMENT

expires
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

cpu_base
MINUS
GREATER

expires_next
DOT

tv64
NOT_EQ

KTIME_MAX
BRACKET_C

tick_program_event
BRACKET_O

cpu_base
MINUS
GREATER

expires_next
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

hrtimer_reprogram
BRACKET_O
STRUCT

hrtimer
MULT

timer
COMMA
STRUCT

hrtimer_clock_base
MULT

base
BRACKET_C
CURLY_BRACKET_O

ktime_t
MULT

expires_next
OP_ASSIGNMENT
AMPERSANT

__get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
DOT

expires_next
SEMICOLON

ktime_t

expires
OP_ASSIGNMENT

ktime_sub
BRACKET_O

timer
MINUS
GREATER

expires
COMMA

base
MINUS
GREATER

offset
BRACKET_C
SEMICOLON
TYPE_INT

res
SEMICOLON
IF
BRACKET_O

hrtimer_callback_running
BRACKET_O

timer
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

expires
DOT

tv64
GR_EQ

expires_next
MINUS
GREATER

tv64
BRACKET_C

return
NUMBER
SEMICOLON

res
OP_ASSIGNMENT

tick_program_event
BRACKET_O

expires
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

IS_ERR_VALUE
BRACKET_O

res
BRACKET_C
BRACKET_C
MULT

expires_next
OP_ASSIGNMENT

expires
SEMICOLON

return

res
SEMICOLON
CURLY_BRACKET_C

static

void

retrigger_next_event
BRACKET_O

void
MULT

arg
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

base
SEMICOLON
STRUCT

timespec

realtime_offset
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

seq
SEMICOLON
IF
BRACKET_O
NOT

hrtimer_hres_active
BRACKET_O
BRACKET_C
BRACKET_C

return
SEMICOLON
DO
CURLY_BRACKET_O

seq
OP_ASSIGNMENT

read_seqbegin
BRACKET_O
AMPERSANT

xtime_lock
BRACKET_C
SEMICOLON

set_normalized_timespec
BRACKET_O
AMPERSANT

realtime_offset
COMMA
MINUS

wall_to_monotonic
DOT

tv_sec
COMMA
MINUS

wall_to_monotonic
DOT

tv_nsec
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

read_seqretry
BRACKET_O
AMPERSANT

xtime_lock
COMMA

seq
BRACKET_C
BRACKET_C
SEMICOLON

base
OP_ASSIGNMENT
AMPERSANT

__get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

base
MINUS
GREATER

clock_base
CORNER_BRACKET_O

CLOCK_REALTIME
CORNER_BRACKET_C
DOT

offset
OP_ASSIGNMENT

timespec_to_ktime
BRACKET_O

realtime_offset
BRACKET_C
SEMICOLON

hrtimer_force_reprogram
BRACKET_O

base
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

clock_was_set
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

on_each_cpu
BRACKET_O

retrigger_next_event
COMMA

NULL
COMMA
NUMBER
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

hres_timers_resume
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

WARN_ON_ONCE
BRACKET_O

num_online_cpus
BRACKET_O
BRACKET_C
GREATER
NUMBER
BRACKET_C
SEMICOLON

retrigger_next_event
BRACKET_O

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

hrtimer_cb_pending
BRACKET_O
CONST
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O

return

timer
MINUS
GREATER

state
AMPERSANT

HRTIMER_STATE_PENDING
SEMICOLON
CURLY_BRACKET_C

static

inline

void

hrtimer_remove_cb_pending
BRACKET_O
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O

list_del_init
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

cb_entry
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

hrtimer_init_hres
BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

base
BRACKET_C
CURLY_BRACKET_O

base
MINUS
GREATER

expires_next
DOT

tv64
OP_ASSIGNMENT

KTIME_MAX
SEMICOLON

base
MINUS
GREATER

hres_active
OP_ASSIGNMENT
NUMBER
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

base
MINUS
GREATER

cb_pending
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

hrtimer_init_timer_hres
BRACKET_O
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

cb_entry
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

hrtimer_enqueue_reprogram
BRACKET_O
STRUCT

hrtimer
MULT

timer
COMMA
STRUCT

hrtimer_clock_base
MULT

base
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

base
MINUS
GREATER

cpu_base
MINUS
GREATER

hres_active
AND

hrtimer_reprogram
BRACKET_O

timer
COMMA

base
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

timer
MINUS
GREATER

cb_mode
BRACKET_C
CURLY_BRACKET_O

case

HRTIMER_CB_IRQSAFE_NO_RESTART
COLON

BUG_ON
BRACKET_O

timer
MINUS
GREATER

function
BRACKET_O

timer
BRACKET_C
NOT_EQ

HRTIMER_NORESTART
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON

case

HRTIMER_CB_IRQSAFE_NO_SOFTIRQ
COLON

return
NUMBER
SEMICOLON

case

HRTIMER_CB_IRQSAFE
COLON

case

HRTIMER_CB_SOFTIRQ
COLON

list_add_tail
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

cb_entry
COMMA
AMPERSANT

base
MINUS
GREATER

cpu_base
MINUS
GREATER

cb_pending
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

state
OP_ASSIGNMENT

HRTIMER_STATE_PENDING
SEMICOLON

raise_softirq
BRACKET_O

HRTIMER_SOFTIRQ
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON

default
COLON

BUG
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

hrtimer_switch_to_hres
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

base
OP_ASSIGNMENT
AMPERSANT

__get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O

base
MINUS
GREATER

hres_active
BRACKET_C

return
NUMBER
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

tick_init_highres
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

base
MINUS
GREATER

hres_active
OP_ASSIGNMENT
NUMBER
SEMICOLON

base
MINUS
GREATER

clock_base
CORNER_BRACKET_O

CLOCK_REALTIME
CORNER_BRACKET_C
DOT

resolution
OP_ASSIGNMENT

KTIME_HIGH_RES
SEMICOLON

base
MINUS
GREATER

clock_base
CORNER_BRACKET_O

CLOCK_MONOTONIC
CORNER_BRACKET_C
DOT

resolution
OP_ASSIGNMENT

KTIME_HIGH_RES
SEMICOLON

tick_setup_sched_timer
BRACKET_O
BRACKET_C
SEMICOLON

retrigger_next_event
BRACKET_O

NULL
BRACKET_C
SEMICOLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
COMMA

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static

inline
TYPE_INT

hrtimer_hres_active
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

hrtimer_is_hres_enabled
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

hrtimer_switch_to_hres
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline

void

hrtimer_force_reprogram
BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

base
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static

inline
TYPE_INT

hrtimer_enqueue_reprogram
BRACKET_O
STRUCT

hrtimer
MULT

timer
COMMA
STRUCT

hrtimer_clock_base
MULT

base
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

hrtimer_cb_pending
BRACKET_O
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline

void

hrtimer_remove_cb_pending
BRACKET_O
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static

inline

void

hrtimer_init_hres
BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

base
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static

inline

void

hrtimer_init_timer_hres
BRACKET_O
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_TIMER_STATS

void

__timer_stats_hrtimer_set_start_info
BRACKET_O
STRUCT

hrtimer
MULT

timer
COMMA

void
MULT

addr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

timer
MINUS
GREATER

start_site
BRACKET_C

return
SEMICOLON

timer
MINUS
GREATER

start_site
OP_ASSIGNMENT

addr
SEMICOLON

memcpy
BRACKET_O

timer
MINUS
GREATER

start_comm
COMMA

current
MINUS
GREATER

comm
COMMA

TASK_COMM_LEN
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

start_pid
OP_ASSIGNMENT

current
MINUS
GREATER

pid
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static

inline

void

unlock_hrtimer_base
BRACKET_O
CONST
STRUCT

hrtimer
MULT

timer
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

flags
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

base
MINUS
GREATER

cpu_base
MINUS
GREATER

lock
COMMA
MULT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

hrtimer_forward
BRACKET_O
STRUCT

hrtimer
MULT

timer
COMMA

ktime_t

now
COMMA

ktime_t

interval
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

orun
OP_ASSIGNMENT
NUMBER
SEMICOLON

ktime_t

delta
SEMICOLON

delta
OP_ASSIGNMENT

ktime_sub
BRACKET_O

now
COMMA

timer
MINUS
GREATER

expires
BRACKET_C
SEMICOLON
IF
BRACKET_O

delta
DOT

tv64
LESS
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

interval
DOT

tv64
LESS

timer
MINUS
GREATER

base
MINUS
GREATER

resolution
DOT

tv64
BRACKET_C

interval
DOT

tv64
OP_ASSIGNMENT

timer
MINUS
GREATER

base
MINUS
GREATER

resolution
DOT

tv64
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

delta
DOT

tv64
GR_EQ

interval
DOT

tv64
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

s64

incr
OP_ASSIGNMENT

ktime_to_ns
BRACKET_O

interval
BRACKET_C
SEMICOLON

orun
OP_ASSIGNMENT

ktime_divns
BRACKET_O

delta
COMMA

incr
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

expires
OP_ASSIGNMENT

ktime_add_ns
BRACKET_O

timer
MINUS
GREATER

expires
COMMA

incr
MULT

orun
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer
MINUS
GREATER

expires
DOT

tv64
GREATER

now
DOT

tv64
BRACKET_C

return

orun
SEMICOLON

orun
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

timer
MINUS
GREATER

expires
OP_ASSIGNMENT

ktime_add
BRACKET_O

timer
MINUS
GREATER

expires
COMMA

interval
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer
MINUS
GREATER

expires
DOT

tv64
LESS
NUMBER
BRACKET_C

timer
MINUS
GREATER

expires
OP_ASSIGNMENT

ktime_set
BRACKET_O

KTIME_SEC_MAX
COMMA
NUMBER
BRACKET_C
SEMICOLON

return

orun
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

hrtimer_forward
BRACKET_C
SEMICOLON

static

void

enqueue_hrtimer
BRACKET_O
STRUCT

hrtimer
MULT

timer
COMMA
STRUCT

hrtimer_clock_base
MULT

base
COMMA
TYPE_INT

reprogram
BRACKET_C
CURLY_BRACKET_O
STRUCT

rb_node
MULT
MULT

link
OP_ASSIGNMENT
AMPERSANT

base
MINUS
GREATER

active
DOT

rb_node
SEMICOLON
STRUCT

rb_node
MULT

parent
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

hrtimer
MULT

entry
SEMICOLON
WHILE
BRACKET_O
MULT

link
BRACKET_C
CURLY_BRACKET_O

parent
OP_ASSIGNMENT
MULT

link
SEMICOLON

entry
OP_ASSIGNMENT

rb_entry
BRACKET_O

parent
COMMA
STRUCT

hrtimer
COMMA

node
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer
MINUS
GREATER

expires
DOT

tv64
LESS

entry
MINUS
GREATER

expires
DOT

tv64
BRACKET_C

link
OP_ASSIGNMENT
AMPERSANT
BRACKET_O
MULT

link
BRACKET_C
MINUS
GREATER

rb_left
SEMICOLON
ELSE

link
OP_ASSIGNMENT
AMPERSANT
BRACKET_O
MULT

link
BRACKET_C
MINUS
GREATER

rb_right
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

base
MINUS
GREATER

first
OR

timer
MINUS
GREATER

expires
DOT

tv64
LESS

rb_entry
BRACKET_O

base
MINUS
GREATER

first
COMMA
STRUCT

hrtimer
COMMA

node
BRACKET_C
MINUS
GREATER

expires
DOT

tv64
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

reprogram
AND

hrtimer_enqueue_reprogram
BRACKET_O

timer
COMMA

base
BRACKET_C
BRACKET_C

return
SEMICOLON

base
MINUS
GREATER

first
OP_ASSIGNMENT
AMPERSANT

timer
MINUS
GREATER

node
SEMICOLON
CURLY_BRACKET_C

rb_link_node
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

node
COMMA

parent
COMMA

link
BRACKET_C
SEMICOLON

rb_insert_color
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

node
COMMA
AMPERSANT

base
MINUS
GREATER

active
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

state
LOGICAL_OR
OP_ASSIGNMENT

HRTIMER_STATE_ENQUEUED
SEMICOLON
CURLY_BRACKET_C

static

void

__remove_hrtimer
BRACKET_O
STRUCT

hrtimer
MULT

timer
COMMA
STRUCT

hrtimer_clock_base
MULT

base
COMMA
TYPE_UNSIGNED
TYPE_LONG

newstate
COMMA
TYPE_INT

reprogram
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

hrtimer_cb_pending
BRACKET_O

timer
BRACKET_C
BRACKET_C

hrtimer_remove_cb_pending
BRACKET_O

timer
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

base
MINUS
GREATER

first
EQ
AMPERSANT

timer
MINUS
GREATER

node
BRACKET_C
CURLY_BRACKET_O

base
MINUS
GREATER

first
OP_ASSIGNMENT

rb_next
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

node
BRACKET_C
SEMICOLON
IF
BRACKET_O

reprogram
AND

hrtimer_hres_active
BRACKET_O
BRACKET_C
BRACKET_C

hrtimer_force_reprogram
BRACKET_O

base
MINUS
GREATER

cpu_base
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

rb_erase
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

node
COMMA
AMPERSANT

base
MINUS
GREATER

active
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

timer
MINUS
GREATER

state
OP_ASSIGNMENT

newstate
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

remove_hrtimer
BRACKET_O
STRUCT

hrtimer
MULT

timer
COMMA
STRUCT

hrtimer_clock_base
MULT

base
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

hrtimer_is_queued
BRACKET_O

timer
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

reprogram
SEMICOLON

timer_stats_hrtimer_clear_start_info
BRACKET_O

timer
BRACKET_C
SEMICOLON

reprogram
OP_ASSIGNMENT

base
MINUS
GREATER

cpu_base
EQ
AMPERSANT

__get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
SEMICOLON

__remove_hrtimer
BRACKET_O

timer
COMMA

base
COMMA

HRTIMER_STATE_INACTIVE
COMMA

reprogram
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

hrtimer_start
BRACKET_O
STRUCT

hrtimer
MULT

timer
COMMA

ktime_t

tim
COMMA
CONST

enum

hrtimer_mode

mode
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_clock_base
MULT

base
COMMA
MULT

new_base
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

ret
SEMICOLON

base
OP_ASSIGNMENT

lock_hrtimer_base
BRACKET_O

timer
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

remove_hrtimer
BRACKET_O

timer
COMMA

base
BRACKET_C
SEMICOLON

new_base
OP_ASSIGNMENT

switch_hrtimer_base
BRACKET_O

timer
COMMA

base
BRACKET_C
SEMICOLON
IF
BRACKET_O

mode
EQ

HRTIMER_MODE_REL
BRACKET_C
CURLY_BRACKET_O

tim
OP_ASSIGNMENT

ktime_add
BRACKET_O

tim
COMMA

new_base
MINUS
GREATER

get_time
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_TIME_LOW_RES

tim
OP_ASSIGNMENT

ktime_add
BRACKET_O

tim
COMMA

base
MINUS
GREATER

resolution
BRACKET_C
SEMICOLON
PP_ENDIF
IF
BRACKET_O

tim
DOT

tv64
LESS
NUMBER
BRACKET_C

tim
DOT

tv64
OP_ASSIGNMENT

KTIME_MAX
SEMICOLON
CURLY_BRACKET_C

timer
MINUS
GREATER

expires
OP_ASSIGNMENT

tim
SEMICOLON

timer_stats_hrtimer_set_start_info
BRACKET_O

timer
BRACKET_C
SEMICOLON

enqueue_hrtimer
BRACKET_O

timer
COMMA

new_base
COMMA

new_base
MINUS
GREATER

cpu_base
EQ
AMPERSANT

__get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
BRACKET_C
SEMICOLON

unlock_hrtimer_base
BRACKET_O

timer
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

hrtimer_start
BRACKET_C
SEMICOLON
TYPE_INT

hrtimer_try_to_cancel
BRACKET_O
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_clock_base
MULT

base
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

base
OP_ASSIGNMENT

lock_hrtimer_base
BRACKET_O

timer
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

hrtimer_callback_running
BRACKET_O

timer
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT

remove_hrtimer
BRACKET_O

timer
COMMA

base
BRACKET_C
SEMICOLON

unlock_hrtimer_base
BRACKET_O

timer
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

hrtimer_try_to_cancel
BRACKET_C
SEMICOLON
TYPE_INT

hrtimer_cancel
BRACKET_O
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT

hrtimer_try_to_cancel
BRACKET_O

timer
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
GR_EQ
NUMBER
BRACKET_C

return

ret
SEMICOLON

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

hrtimer_cancel
BRACKET_C
SEMICOLON

ktime_t

hrtimer_get_remaining
BRACKET_O
CONST
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_clock_base
MULT

base
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

ktime_t

rem
SEMICOLON

base
OP_ASSIGNMENT

lock_hrtimer_base
BRACKET_O

timer
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

rem
OP_ASSIGNMENT

ktime_sub
BRACKET_O

timer
MINUS
GREATER

expires
COMMA

base
MINUS
GREATER

get_time
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

unlock_hrtimer_base
BRACKET_O

timer
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

return

rem
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

hrtimer_get_remaining
BRACKET_C
SEMICOLON
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_NO_IDLE_HZ
BRACKET_C
OR
PP_DEFINED
BRACKET_O

CONFIG_NO_HZ
BRACKET_C

ktime_t

hrtimer_get_next_event
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

cpu_base
OP_ASSIGNMENT
AMPERSANT

__get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
SEMICOLON
STRUCT

hrtimer_clock_base
MULT

base
OP_ASSIGNMENT

cpu_base
MINUS
GREATER

clock_base
SEMICOLON

ktime_t

delta
COMMA

mindelta
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

tv64
OP_ASSIGNMENT

KTIME_MAX
CURLY_BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

i
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

hrtimer_hres_active
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

HRTIMER_MAX_CLOCK_BASES
SEMICOLON

i
PLUS
PLUS
COMMA

base
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer
MULT

timer
SEMICOLON
IF
BRACKET_O
NOT

base
MINUS
GREATER

first
BRACKET_C
CONTINUE
SEMICOLON

timer
OP_ASSIGNMENT

rb_entry
BRACKET_O

base
MINUS
GREATER

first
COMMA
STRUCT

hrtimer
COMMA

node
BRACKET_C
SEMICOLON

delta
DOT

tv64
OP_ASSIGNMENT

timer
MINUS
GREATER

expires
DOT

tv64
SEMICOLON

delta
OP_ASSIGNMENT

ktime_sub
BRACKET_O

delta
COMMA

base
MINUS
GREATER

get_time
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

delta
DOT

tv64
LESS

mindelta
DOT

tv64
BRACKET_C

mindelta
DOT

tv64
OP_ASSIGNMENT

delta
DOT

tv64
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

mindelta
DOT

tv64
LESS
NUMBER
BRACKET_C

mindelta
DOT

tv64
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

mindelta
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

void

hrtimer_init
BRACKET_O
STRUCT

hrtimer
MULT

timer
COMMA

clockid_t

clock_id
COMMA

enum

hrtimer_mode

mode
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

cpu_base
SEMICOLON

memset
BRACKET_O

timer
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
STRUCT

hrtimer
BRACKET_C
BRACKET_C
SEMICOLON

cpu_base
OP_ASSIGNMENT
AMPERSANT

__raw_get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
SEMICOLON
IF
BRACKET_O

clock_id
EQ

CLOCK_REALTIME
AND

mode
NOT_EQ

HRTIMER_MODE_ABS
BRACKET_C

clock_id
OP_ASSIGNMENT

CLOCK_MONOTONIC
SEMICOLON

timer
MINUS
GREATER

base
OP_ASSIGNMENT
AMPERSANT

cpu_base
MINUS
GREATER

clock_base
CORNER_BRACKET_O

clock_id
CORNER_BRACKET_C
SEMICOLON

hrtimer_init_timer_hres
BRACKET_O

timer
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_TIMER_STATS

timer
MINUS
GREATER

start_site
OP_ASSIGNMENT

NULL
SEMICOLON

timer
MINUS
GREATER

start_pid
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

memset
BRACKET_O

timer
MINUS
GREATER

start_comm
COMMA
NUMBER
COMMA

TASK_COMM_LEN
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

hrtimer_init
BRACKET_C
SEMICOLON
TYPE_INT

hrtimer_get_res
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

cpu_base
SEMICOLON

cpu_base
OP_ASSIGNMENT
AMPERSANT

__raw_get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
SEMICOLON
MULT

tp
OP_ASSIGNMENT

ktime_to_timespec
BRACKET_O

cpu_base
MINUS
GREATER

clock_base
CORNER_BRACKET_O

which_clock
CORNER_BRACKET_C
DOT

resolution
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

hrtimer_get_res
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_HIGH_RES_TIMERS

void

hrtimer_interrupt
BRACKET_O
STRUCT

clock_event_device
MULT

dev
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

cpu_base
OP_ASSIGNMENT
AMPERSANT

__get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
SEMICOLON
STRUCT

hrtimer_clock_base
MULT

base
SEMICOLON

ktime_t

expires_next
COMMA

now
SEMICOLON
TYPE_INT

i
COMMA

raise
OP_ASSIGNMENT
NUMBER
SEMICOLON

BUG_ON
BRACKET_O
NOT

cpu_base
MINUS
GREATER

hres_active
BRACKET_C
SEMICOLON

cpu_base
MINUS
GREATER

nr_events
PLUS
PLUS
SEMICOLON

dev
MINUS
GREATER

next_event
DOT

tv64
OP_ASSIGNMENT

KTIME_MAX
SEMICOLON

retry
COLON

now
OP_ASSIGNMENT

ktime_get
BRACKET_O
BRACKET_C
SEMICOLON

expires_next
DOT

tv64
OP_ASSIGNMENT

KTIME_MAX
SEMICOLON

base
OP_ASSIGNMENT

cpu_base
MINUS
GREATER

clock_base
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

HRTIMER_MAX_CLOCK_BASES
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

ktime_t

basenow
SEMICOLON
STRUCT

rb_node
MULT

node
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

basenow
OP_ASSIGNMENT

ktime_add
BRACKET_O

now
COMMA

base
MINUS
GREATER

offset
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
BRACKET_O

node
OP_ASSIGNMENT

base
MINUS
GREATER

first
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer
MULT

timer
SEMICOLON

timer
OP_ASSIGNMENT

rb_entry
BRACKET_O

node
COMMA
STRUCT

hrtimer
COMMA

node
BRACKET_C
SEMICOLON
IF
BRACKET_O

basenow
DOT

tv64
LESS

timer
MINUS
GREATER

expires
DOT

tv64
BRACKET_C
CURLY_BRACKET_O

ktime_t

expires
SEMICOLON

expires
OP_ASSIGNMENT

ktime_sub
BRACKET_O

timer
MINUS
GREATER

expires
COMMA

base
MINUS
GREATER

offset
BRACKET_C
SEMICOLON
IF
BRACKET_O

expires
DOT

tv64
LESS

expires_next
DOT

tv64
BRACKET_C

expires_next
OP_ASSIGNMENT

expires
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

timer
MINUS
GREATER

cb_mode
EQ

HRTIMER_CB_SOFTIRQ
BRACKET_C
CURLY_BRACKET_O

__remove_hrtimer
BRACKET_O

timer
COMMA

base
COMMA

HRTIMER_STATE_PENDING
COMMA
NUMBER
BRACKET_C
SEMICOLON

list_add_tail
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

cb_entry
COMMA
AMPERSANT

base
MINUS
GREATER

cpu_base
MINUS
GREATER

cb_pending
BRACKET_C
SEMICOLON

raise
OP_ASSIGNMENT
NUMBER
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

__remove_hrtimer
BRACKET_O

timer
COMMA

base
COMMA

HRTIMER_STATE_CALLBACK
COMMA
NUMBER
BRACKET_C
SEMICOLON

timer_stats_account_hrtimer
BRACKET_O

timer
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer
MINUS
GREATER

function
BRACKET_O

timer
BRACKET_C
NOT_EQ

HRTIMER_NORESTART
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

timer
MINUS
GREATER

state
NOT_EQ

HRTIMER_STATE_CALLBACK
BRACKET_C
SEMICOLON

enqueue_hrtimer
BRACKET_O

timer
COMMA

base
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

timer
MINUS
GREATER

state
AMPERSANT
OP_ASSIGNMENT
TILDE

HRTIMER_STATE_CALLBACK
SEMICOLON
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

base
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

cpu_base
MINUS
GREATER

expires_next
OP_ASSIGNMENT

expires_next
SEMICOLON
IF
BRACKET_O

expires_next
DOT

tv64
NOT_EQ

KTIME_MAX
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

tick_program_event
BRACKET_O

expires_next
COMMA
NUMBER
BRACKET_C
BRACKET_C

goto

retry
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

raise
BRACKET_C

raise_softirq
BRACKET_O

HRTIMER_SOFTIRQ
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

run_hrtimer_softirq
BRACKET_O
STRUCT

softirq_action
MULT

h
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

cpu_base
OP_ASSIGNMENT
AMPERSANT

__get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

cb_pending
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

enum

hrtimer_restart
BRACKET_O
MULT

fn
BRACKET_C
BRACKET_O
STRUCT

hrtimer
MULT
BRACKET_C
SEMICOLON
STRUCT

hrtimer
MULT

timer
SEMICOLON
TYPE_INT

restart
SEMICOLON

timer
OP_ASSIGNMENT

list_entry
BRACKET_O

cpu_base
MINUS
GREATER

cb_pending
DOT

next
COMMA
STRUCT

hrtimer
COMMA

cb_entry
BRACKET_C
SEMICOLON

timer_stats_account_hrtimer
BRACKET_O

timer
BRACKET_C
SEMICOLON

fn
OP_ASSIGNMENT

timer
MINUS
GREATER

function
SEMICOLON

__remove_hrtimer
BRACKET_O

timer
COMMA

timer
MINUS
GREATER

base
COMMA

HRTIMER_STATE_CALLBACK
COMMA
NUMBER
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

restart
OP_ASSIGNMENT

fn
BRACKET_O

timer
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

state
AMPERSANT
OP_ASSIGNMENT
TILDE

HRTIMER_STATE_CALLBACK
SEMICOLON
IF
BRACKET_O

restart
EQ

HRTIMER_RESTART
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

hrtimer_active
BRACKET_O

timer
BRACKET_C
BRACKET_C
SEMICOLON

enqueue_hrtimer
BRACKET_O

timer
COMMA

timer
MINUS
GREATER

base
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

hrtimer_active
BRACKET_O

timer
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

timer
MINUS
GREATER

base
MINUS
GREATER

first
EQ
AMPERSANT

timer
MINUS
GREATER

node
BRACKET_C

hrtimer_reprogram
BRACKET_O

timer
COMMA

timer
MINUS
GREATER

base
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static

inline

void

run_hrtimer_queue
BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

cpu_base
COMMA
TYPE_INT

index
BRACKET_C
CURLY_BRACKET_O
STRUCT

rb_node
MULT

node
SEMICOLON
STRUCT

hrtimer_clock_base
MULT

base
OP_ASSIGNMENT
AMPERSANT

cpu_base
MINUS
GREATER

clock_base
CORNER_BRACKET_O

index
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

base
MINUS
GREATER

first
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

base
MINUS
GREATER

get_softirq_time
BRACKET_C

base
MINUS
GREATER

softirq_time
OP_ASSIGNMENT

base
MINUS
GREATER

get_softirq_time
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
BRACKET_O

node
OP_ASSIGNMENT

base
MINUS
GREATER

first
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer
MULT

timer
SEMICOLON

enum

hrtimer_restart
BRACKET_O
MULT

fn
BRACKET_C
BRACKET_O
STRUCT

hrtimer
MULT
BRACKET_C
SEMICOLON
TYPE_INT

restart
SEMICOLON

timer
OP_ASSIGNMENT

rb_entry
BRACKET_O

node
COMMA
STRUCT

hrtimer
COMMA

node
BRACKET_C
SEMICOLON
IF
BRACKET_O

base
MINUS
GREATER

softirq_time
DOT

tv64
LE_EQ

timer
MINUS
GREATER

expires
DOT

tv64
BRACKET_C
BREAK
SEMICOLON
PP_IFDEF

CONFIG_HIGH_RES_TIMERS

WARN_ON_ONCE
BRACKET_O

timer
MINUS
GREATER

cb_mode
EQ

HRTIMER_CB_IRQSAFE_NO_SOFTIRQ
BRACKET_C
SEMICOLON
PP_ENDIF

timer_stats_account_hrtimer
BRACKET_O

timer
BRACKET_C
SEMICOLON

fn
OP_ASSIGNMENT

timer
MINUS
GREATER

function
SEMICOLON

__remove_hrtimer
BRACKET_O

timer
COMMA

base
COMMA

HRTIMER_STATE_CALLBACK
COMMA
NUMBER
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

restart
OP_ASSIGNMENT

fn
BRACKET_O

timer
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

state
AMPERSANT
OP_ASSIGNMENT
TILDE

HRTIMER_STATE_CALLBACK
SEMICOLON
IF
BRACKET_O

restart
NOT_EQ

HRTIMER_NORESTART
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

hrtimer_active
BRACKET_O

timer
BRACKET_C
BRACKET_C
SEMICOLON

enqueue_hrtimer
BRACKET_O

timer
COMMA

base
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

hrtimer_run_queues
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

cpu_base
OP_ASSIGNMENT
AMPERSANT

__get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
SEMICOLON
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

hrtimer_hres_active
BRACKET_O
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

tick_check_oneshot_change
BRACKET_O
NOT

hrtimer_is_hres_enabled
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C
IF
BRACKET_O

hrtimer_switch_to_hres
BRACKET_O
BRACKET_C
BRACKET_C

return
SEMICOLON

hrtimer_get_softirq_time
BRACKET_O

cpu_base
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

HRTIMER_MAX_CLOCK_BASES
SEMICOLON

i
PLUS
PLUS
BRACKET_C

run_hrtimer_queue
BRACKET_O

cpu_base
COMMA

i
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

enum

hrtimer_restart

hrtimer_wakeup
BRACKET_O
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_sleeper
MULT

t
OP_ASSIGNMENT

container_of
BRACKET_O

timer
COMMA
STRUCT

hrtimer_sleeper
COMMA

timer
BRACKET_C
SEMICOLON
STRUCT

task_struct
MULT

task
OP_ASSIGNMENT

t
MINUS
GREATER

task
SEMICOLON

t
MINUS
GREATER

task
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

task
BRACKET_C

wake_up_process
BRACKET_O

task
BRACKET_C
SEMICOLON

return

HRTIMER_NORESTART
SEMICOLON
CURLY_BRACKET_C

void

hrtimer_init_sleeper
BRACKET_O
STRUCT

hrtimer_sleeper
MULT

sl
COMMA
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O

sl
MINUS
GREATER

timer
DOT

function
OP_ASSIGNMENT

hrtimer_wakeup
SEMICOLON

sl
MINUS
GREATER

task
OP_ASSIGNMENT

task
SEMICOLON
PP_IFDEF

CONFIG_HIGH_RES_TIMERS

sl
MINUS
GREATER

timer
DOT

cb_mode
OP_ASSIGNMENT

HRTIMER_CB_IRQSAFE_NO_RESTART
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

static
TYPE_INT

__sched

do_nanosleep
BRACKET_O
STRUCT

hrtimer_sleeper
MULT

t
COMMA

enum

hrtimer_mode

mode
BRACKET_C
CURLY_BRACKET_O

hrtimer_init_sleeper
BRACKET_O

t
COMMA

current
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON

hrtimer_start
BRACKET_O
AMPERSANT

t
MINUS
GREATER

timer
COMMA

t
MINUS
GREATER

timer
DOT

expires
COMMA

mode
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

t
MINUS
GREATER

task
BRACKET_C
BRACKET_C

schedule
BRACKET_O
BRACKET_C
SEMICOLON

hrtimer_cancel
BRACKET_O
AMPERSANT

t
MINUS
GREATER

timer
BRACKET_C
SEMICOLON

mode
OP_ASSIGNMENT

HRTIMER_MODE_ABS
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
MINUS
GREATER

task
AND
NOT

signal_pending
BRACKET_O

current
BRACKET_C
BRACKET_C
SEMICOLON

return

t
MINUS
GREATER

task
EQ

NULL
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

__sched

hrtimer_nanosleep_restart
BRACKET_O
STRUCT

restart_block
MULT

restart
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_sleeper

t
SEMICOLON
STRUCT

timespec

__user
MULT

rmtp
SEMICOLON
STRUCT

timespec

tu
SEMICOLON

ktime_t

time
SEMICOLON

restart
MINUS
GREATER

fn
OP_ASSIGNMENT

do_no_restart_syscall
SEMICOLON

hrtimer_init
BRACKET_O
AMPERSANT

t
DOT

timer
COMMA

restart
MINUS
GREATER

arg0
COMMA

HRTIMER_MODE_ABS
BRACKET_C
SEMICOLON

t
DOT

timer
DOT

expires
DOT

tv64
OP_ASSIGNMENT
BRACKET_O
BRACKET_O

u64
BRACKET_C

restart
MINUS
GREATER

arg3
LESS
LESS
NUMBER
BRACKET_C
LOGICAL_OR
BRACKET_O

u64
BRACKET_C

restart
MINUS
GREATER

arg2
SEMICOLON
IF
BRACKET_O

do_nanosleep
BRACKET_O
AMPERSANT

t
COMMA

HRTIMER_MODE_ABS
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

rmtp
OP_ASSIGNMENT
BRACKET_O
STRUCT

timespec

__user
MULT
BRACKET_C

restart
MINUS
GREATER

arg1
SEMICOLON
IF
BRACKET_O

rmtp
BRACKET_C
CURLY_BRACKET_O

time
OP_ASSIGNMENT

ktime_sub
BRACKET_O

t
DOT

timer
DOT

expires
COMMA

t
DOT

timer
DOT

base
MINUS
GREATER

get_time
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

time
DOT

tv64
LE_EQ
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON

tu
OP_ASSIGNMENT

ktime_to_timespec
BRACKET_O

time
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

rmtp
COMMA
AMPERSANT

tu
COMMA

sizeof
BRACKET_O

tu
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

restart
MINUS
GREATER

fn
OP_ASSIGNMENT

hrtimer_nanosleep_restart
SEMICOLON

return
MINUS

ERESTART_RESTARTBLOCK
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

hrtimer_nanosleep
BRACKET_O
STRUCT

timespec
MULT

rqtp
COMMA
STRUCT

timespec

__user
MULT

rmtp
COMMA
CONST

enum

hrtimer_mode

mode
COMMA
CONST

clockid_t

clockid
BRACKET_C
CURLY_BRACKET_O
STRUCT

restart_block
MULT

restart
SEMICOLON
STRUCT

hrtimer_sleeper

t
SEMICOLON
STRUCT

timespec

tu
SEMICOLON

ktime_t

rem
SEMICOLON

hrtimer_init
BRACKET_O
AMPERSANT

t
DOT

timer
COMMA

clockid
COMMA

mode
BRACKET_C
SEMICOLON

t
DOT

timer
DOT

expires
OP_ASSIGNMENT

timespec_to_ktime
BRACKET_O
MULT

rqtp
BRACKET_C
SEMICOLON
IF
BRACKET_O

do_nanosleep
BRACKET_O
AMPERSANT

t
COMMA

mode
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

mode
EQ

HRTIMER_MODE_ABS
BRACKET_C

return
MINUS

ERESTARTNOHAND
SEMICOLON
IF
BRACKET_O

rmtp
BRACKET_C
CURLY_BRACKET_O

rem
OP_ASSIGNMENT

ktime_sub
BRACKET_O

t
DOT

timer
DOT

expires
COMMA

t
DOT

timer
DOT

base
MINUS
GREATER

get_time
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

rem
DOT

tv64
LE_EQ
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON

tu
OP_ASSIGNMENT

ktime_to_timespec
BRACKET_O

rem
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

rmtp
COMMA
AMPERSANT

tu
COMMA

sizeof
BRACKET_O

tu
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

restart
OP_ASSIGNMENT
AMPERSANT

current_thread_info
BRACKET_O
BRACKET_C
MINUS
GREATER

restart_block
SEMICOLON

restart
MINUS
GREATER

fn
OP_ASSIGNMENT

hrtimer_nanosleep_restart
SEMICOLON

restart
MINUS
GREATER

arg0
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

t
DOT

timer
DOT

base
MINUS
GREATER

index
SEMICOLON

restart
MINUS
GREATER

arg1
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

rmtp
SEMICOLON

restart
MINUS
GREATER

arg2
OP_ASSIGNMENT

t
DOT

timer
DOT

expires
DOT

tv64
AMPERSANT
NUMBER

xFFFFFFFF
SEMICOLON

restart
MINUS
GREATER

arg3
OP_ASSIGNMENT

t
DOT

timer
DOT

expires
DOT

tv64
GREATER
GREATER
NUMBER
SEMICOLON

return
MINUS

ERESTART_RESTARTBLOCK
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_nanosleep
BRACKET_O
STRUCT

timespec

__user
MULT

rqtp
COMMA
STRUCT

timespec

__user
MULT

rmtp
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

tu
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

tu
COMMA

rqtp
COMMA

sizeof
BRACKET_O

tu
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

timespec_valid
BRACKET_O
AMPERSANT

tu
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

return

hrtimer_nanosleep
BRACKET_O
AMPERSANT

tu
COMMA

rmtp
COMMA

HRTIMER_MODE_REL
COMMA

CLOCK_MONOTONIC
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

__devinit

init_hrtimers_cpu
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

cpu_base
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

hrtimer_bases
COMMA

cpu
BRACKET_C
SEMICOLON
TYPE_INT

i
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

lockdep_set_class
BRACKET_O
AMPERSANT

cpu_base
MINUS
GREATER

lock
COMMA
AMPERSANT

cpu_base
MINUS
GREATER

lock_key
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

HRTIMER_MAX_CLOCK_BASES
SEMICOLON

i
PLUS
PLUS
BRACKET_C

cpu_base
MINUS
GREATER

clock_base
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

cpu_base
OP_ASSIGNMENT

cpu_base
SEMICOLON

hrtimer_init_hres
BRACKET_O

cpu_base
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_HOTPLUG_CPU

static

void

migrate_hrtimer_list
BRACKET_O
STRUCT

hrtimer_clock_base
MULT

old_base
COMMA
STRUCT

hrtimer_clock_base
MULT

new_base
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer
MULT

timer
SEMICOLON
STRUCT

rb_node
MULT

node
SEMICOLON
WHILE
BRACKET_O
BRACKET_O

node
OP_ASSIGNMENT

rb_first
BRACKET_O
AMPERSANT

old_base
MINUS
GREATER

active
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

timer
OP_ASSIGNMENT

rb_entry
BRACKET_O

node
COMMA
STRUCT

hrtimer
COMMA

node
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

hrtimer_callback_running
BRACKET_O

timer
BRACKET_C
BRACKET_C
SEMICOLON

__remove_hrtimer
BRACKET_O

timer
COMMA

old_base
COMMA

HRTIMER_STATE_INACTIVE
COMMA
NUMBER
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

base
OP_ASSIGNMENT

new_base
SEMICOLON

enqueue_hrtimer
BRACKET_O

timer
COMMA

new_base
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

migrate_hrtimers
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer_cpu_base
MULT

old_base
COMMA
MULT

new_base
SEMICOLON
TYPE_INT

i
SEMICOLON

BUG_ON
BRACKET_O

cpu_online
BRACKET_O

cpu
BRACKET_C
BRACKET_C
SEMICOLON

old_base
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

hrtimer_bases
COMMA

cpu
BRACKET_C
SEMICOLON

new_base
OP_ASSIGNMENT
AMPERSANT

get_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
SEMICOLON

tick_cancel_sched_timer
BRACKET_O

cpu
BRACKET_C
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

double_spin_lock
BRACKET_O
AMPERSANT

new_base
MINUS
GREATER

lock
COMMA
AMPERSANT

old_base
MINUS
GREATER

lock
COMMA

smp_processor_id
BRACKET_O
BRACKET_C
LESS

cpu
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

HRTIMER_MAX_CLOCK_BASES
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

migrate_hrtimer_list
BRACKET_O
AMPERSANT

old_base
MINUS
GREATER

clock_base
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA
AMPERSANT

new_base
MINUS
GREATER

clock_base
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

double_spin_unlock
BRACKET_O
AMPERSANT

new_base
MINUS
GREATER

lock
COMMA
AMPERSANT

old_base
MINUS
GREATER

lock
COMMA

smp_processor_id
BRACKET_O
BRACKET_C
LESS

cpu
BRACKET_C
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

put_cpu_var
BRACKET_O

hrtimer_bases
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

__cpuinit

hrtimer_cpu_notify
BRACKET_O
STRUCT

notifier_block
MULT

self
COMMA
TYPE_UNSIGNED
TYPE_LONG

action
COMMA

void
MULT

hcpu
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

cpu
OP_ASSIGNMENT
BRACKET_O
TYPE_LONG
BRACKET_C

hcpu
SEMICOLON
SWITCH
BRACKET_O

action
BRACKET_C
CURLY_BRACKET_O

case

CPU_UP_PREPARE
COLON

case

CPU_UP_PREPARE_FROZEN
COLON

init_hrtimers_cpu
BRACKET_O

cpu
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
PP_IFDEF

CONFIG_HOTPLUG_CPU

case

CPU_DEAD
COLON

case

CPU_DEAD_FROZEN
COLON

clockevents_notify
BRACKET_O

CLOCK_EVT_NOTIFY_CPU_DEAD
COMMA
AMPERSANT

cpu
BRACKET_C
SEMICOLON

migrate_hrtimers
BRACKET_O

cpu
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
PP_ENDIF

default
COLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

NOTIFY_OK
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

notifier_block

__cpuinitdata

hrtimers_nb
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

notifier_call
OP_ASSIGNMENT

hrtimer_cpu_notify
COMMA
CURLY_BRACKET_C
SEMICOLON

void

__init

hrtimers_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

hrtimer_cpu_notify
BRACKET_O
AMPERSANT

hrtimers_nb
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

CPU_UP_PREPARE
COMMA
BRACKET_O

void
MULT
BRACKET_C
BRACKET_O
TYPE_LONG
BRACKET_C

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

register_cpu_notifier
BRACKET_O
AMPERSANT

hrtimers_nb
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_HIGH_RES_TIMERS

open_softirq
BRACKET_O

HRTIMER_SOFTIRQ
COMMA

run_hrtimer_softirq
COMMA

NULL
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static
STRUCT

timeval

itimer_get_remtime
BRACKET_O
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O

ktime_t

rem
OP_ASSIGNMENT

hrtimer_get_remaining
BRACKET_O

timer
BRACKET_C
SEMICOLON
IF
BRACKET_O

hrtimer_active
BRACKET_O

timer
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

rem
DOT

tv64
LE_EQ
NUMBER
BRACKET_C

rem
DOT

tv64
OP_ASSIGNMENT

NSEC_PER_USEC
SEMICOLON
CURLY_BRACKET_C
ELSE

rem
DOT

tv64
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

ktime_to_timeval
BRACKET_O

rem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

do_getitimer
BRACKET_O
TYPE_INT

which
COMMA
STRUCT

itimerval
MULT

value
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON

cputime_t

cinterval
COMMA

cval
SEMICOLON
SWITCH
BRACKET_O

which
BRACKET_C
CURLY_BRACKET_O

case

ITIMER_REAL
COLON

spin_lock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

value
MINUS
GREATER

it_value
OP_ASSIGNMENT

itimer_get_remtime
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

signal
MINUS
GREATER

real_timer
BRACKET_C
SEMICOLON

value
MINUS
GREATER

it_interval
OP_ASSIGNMENT

ktime_to_timeval
BRACKET_O

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_real_incr
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

ITIMER_VIRTUAL
COLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

cval
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_virt_expires
SEMICOLON

cinterval
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_virt_incr
SEMICOLON
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

cval
COMMA

cputime_zero
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

t
OP_ASSIGNMENT

tsk
SEMICOLON

cputime_t

utime
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

utime
SEMICOLON
DO
CURLY_BRACKET_O

utime
OP_ASSIGNMENT

cputime_add
BRACKET_O

utime
COMMA

t
MINUS
GREATER

utime
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

cputime_le
BRACKET_O

cval
COMMA

utime
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

cval
OP_ASSIGNMENT

jiffies_to_cputime
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

cval
OP_ASSIGNMENT

cputime_sub
BRACKET_O

cval
COMMA

utime
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

cputime_to_timeval
BRACKET_O

cval
COMMA
AMPERSANT

value
MINUS
GREATER

it_value
BRACKET_C
SEMICOLON

cputime_to_timeval
BRACKET_O

cinterval
COMMA
AMPERSANT

value
MINUS
GREATER

it_interval
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

ITIMER_PROF
COLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

cval
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_prof_expires
SEMICOLON

cinterval
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_prof_incr
SEMICOLON
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

cval
COMMA

cputime_zero
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

t
OP_ASSIGNMENT

tsk
SEMICOLON

cputime_t

ptime
OP_ASSIGNMENT

cputime_add
BRACKET_O

tsk
MINUS
GREATER

signal
MINUS
GREATER

utime
COMMA

tsk
MINUS
GREATER

signal
MINUS
GREATER

stime
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O

ptime
OP_ASSIGNMENT

cputime_add
BRACKET_O

ptime
COMMA

cputime_add
BRACKET_O

t
MINUS
GREATER

utime
COMMA

t
MINUS
GREATER

stime
BRACKET_C
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

cputime_le
BRACKET_O

cval
COMMA

ptime
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

cval
OP_ASSIGNMENT

jiffies_to_cputime
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

cval
OP_ASSIGNMENT

cputime_sub
BRACKET_O

cval
COMMA

ptime
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

cputime_to_timeval
BRACKET_O

cval
COMMA
AMPERSANT

value
MINUS
GREATER

it_value
BRACKET_C
SEMICOLON

cputime_to_timeval
BRACKET_O

cinterval
COMMA
AMPERSANT

value
MINUS
GREATER

it_interval
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON

return
BRACKET_O
MINUS

EINVAL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getitimer
BRACKET_O
TYPE_INT

which
COMMA
STRUCT

itimerval

__user
MULT

value
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
STRUCT

itimerval

get_buffer
SEMICOLON
IF
BRACKET_O

value
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT

do_getitimer
BRACKET_O

which
COMMA
AMPERSANT

get_buffer
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
AND

copy_to_user
BRACKET_O

value
COMMA
AMPERSANT

get_buffer
COMMA

sizeof
BRACKET_O

get_buffer
BRACKET_C
BRACKET_C
BRACKET_C

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

error
SEMICOLON
CURLY_BRACKET_C

enum

hrtimer_restart

it_real_fn
BRACKET_O
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O
STRUCT

signal_struct
MULT

sig
OP_ASSIGNMENT

container_of
BRACKET_O

timer
COMMA
STRUCT

signal_struct
COMMA

real_timer
BRACKET_C
SEMICOLON

send_group_sig_info
BRACKET_O

SIGALRM
COMMA

SEND_SIG_PRIV
COMMA

sig
MINUS
GREATER

tsk
BRACKET_C
SEMICOLON

return

HRTIMER_NORESTART
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

timeval_valid
BRACKET_O

t
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O
BRACKET_O
BRACKET_O

t
BRACKET_C
MINUS
GREATER

tv_sec
GR_EQ
NUMBER
BRACKET_C
AND
BRACKET_O
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
BRACKET_O

t
BRACKET_C
MINUS
GREATER

tv_usec
BRACKET_C
LESS

USEC_PER_SEC
BRACKET_C
BRACKET_C
TYPE_INT

do_setitimer
BRACKET_O
TYPE_INT

which
COMMA
STRUCT

itimerval
MULT

value
COMMA
STRUCT

itimerval
MULT

ovalue
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

hrtimer
MULT

timer
SEMICOLON

ktime_t

expires
SEMICOLON

cputime_t

cval
COMMA

cinterval
COMMA

nval
COMMA

ninterval
SEMICOLON
IF
BRACKET_O
NOT

timeval_valid
BRACKET_O
AMPERSANT

value
MINUS
GREATER

it_value
BRACKET_C
OR
NOT

timeval_valid
BRACKET_O
AMPERSANT

value
MINUS
GREATER

it_interval
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
SWITCH
BRACKET_O

which
BRACKET_C
CURLY_BRACKET_O

case

ITIMER_REAL
COLON

again
COLON

spin_lock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

timer
OP_ASSIGNMENT
AMPERSANT

tsk
MINUS
GREATER

signal
MINUS
GREATER

real_timer
SEMICOLON
IF
BRACKET_O

ovalue
BRACKET_C
CURLY_BRACKET_O

ovalue
MINUS
GREATER

it_value
OP_ASSIGNMENT

itimer_get_remtime
BRACKET_O

timer
BRACKET_C
SEMICOLON

ovalue
MINUS
GREATER

it_interval
OP_ASSIGNMENT

ktime_to_timeval
BRACKET_O

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_real_incr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

hrtimer_try_to_cancel
BRACKET_O

timer
BRACKET_C
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

goto

again
SEMICOLON
CURLY_BRACKET_C

expires
OP_ASSIGNMENT

timeval_to_ktime
BRACKET_O

value
MINUS
GREATER

it_value
BRACKET_C
SEMICOLON
IF
BRACKET_O

expires
DOT

tv64
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_real_incr
OP_ASSIGNMENT

timeval_to_ktime
BRACKET_O

value
MINUS
GREATER

it_interval
BRACKET_C
SEMICOLON

hrtimer_start
BRACKET_O

timer
COMMA

expires
COMMA

HRTIMER_MODE_REL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_real_incr
DOT

tv64
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

ITIMER_VIRTUAL
COLON

nval
OP_ASSIGNMENT

timeval_to_cputime
BRACKET_O
AMPERSANT

value
MINUS
GREATER

it_value
BRACKET_C
SEMICOLON

ninterval
OP_ASSIGNMENT

timeval_to_cputime
BRACKET_O
AMPERSANT

value
MINUS
GREATER

it_interval
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

cval
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_virt_expires
SEMICOLON

cinterval
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_virt_incr
SEMICOLON
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

cval
COMMA

cputime_zero
BRACKET_C
OR
NOT

cputime_eq
BRACKET_O

nval
COMMA

cputime_zero
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cputime_gt
BRACKET_O

nval
COMMA

cputime_zero
BRACKET_C
BRACKET_C

nval
OP_ASSIGNMENT

cputime_add
BRACKET_O

nval
COMMA

jiffies_to_cputime
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

set_process_cpu_timer
BRACKET_O

tsk
COMMA

CPUCLOCK_VIRT
COMMA
AMPERSANT

nval
COMMA
AMPERSANT

cval
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_virt_expires
OP_ASSIGNMENT

nval
SEMICOLON

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_virt_incr
OP_ASSIGNMENT

ninterval
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

ovalue
BRACKET_C
CURLY_BRACKET_O

cputime_to_timeval
BRACKET_O

cval
COMMA
AMPERSANT

ovalue
MINUS
GREATER

it_value
BRACKET_C
SEMICOLON

cputime_to_timeval
BRACKET_O

cinterval
COMMA
AMPERSANT

ovalue
MINUS
GREATER

it_interval
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON

case

ITIMER_PROF
COLON

nval
OP_ASSIGNMENT

timeval_to_cputime
BRACKET_O
AMPERSANT

value
MINUS
GREATER

it_value
BRACKET_C
SEMICOLON

ninterval
OP_ASSIGNMENT

timeval_to_cputime
BRACKET_O
AMPERSANT

value
MINUS
GREATER

it_interval
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

cval
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_prof_expires
SEMICOLON

cinterval
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_prof_incr
SEMICOLON
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

cval
COMMA

cputime_zero
BRACKET_C
OR
NOT

cputime_eq
BRACKET_O

nval
COMMA

cputime_zero
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cputime_gt
BRACKET_O

nval
COMMA

cputime_zero
BRACKET_C
BRACKET_C

nval
OP_ASSIGNMENT

cputime_add
BRACKET_O

nval
COMMA

jiffies_to_cputime
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

set_process_cpu_timer
BRACKET_O

tsk
COMMA

CPUCLOCK_PROF
COMMA
AMPERSANT

nval
COMMA
AMPERSANT

cval
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_prof_expires
OP_ASSIGNMENT

nval
SEMICOLON

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_prof_incr
OP_ASSIGNMENT

ninterval
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

ovalue
BRACKET_C
CURLY_BRACKET_O

cputime_to_timeval
BRACKET_O

cval
COMMA
AMPERSANT

ovalue
MINUS
GREATER

it_value
BRACKET_C
SEMICOLON

cputime_to_timeval
BRACKET_O

cinterval
COMMA
AMPERSANT

ovalue
MINUS
GREATER

it_interval
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON

default
COLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_INT

alarm_setitimer
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

seconds
BRACKET_C
CURLY_BRACKET_O
STRUCT

itimerval

it_new
COMMA

it_old
SEMICOLON
PP_IF

BITS_PER_LONG
LESS
NUMBER
IF
BRACKET_O

seconds
GREATER

INT_MAX
BRACKET_C

seconds
OP_ASSIGNMENT

INT_MAX
SEMICOLON
PP_ENDIF

it_new
DOT

it_value
DOT

tv_sec
OP_ASSIGNMENT

seconds
SEMICOLON

it_new
DOT

it_value
DOT

tv_usec
OP_ASSIGNMENT
NUMBER
SEMICOLON

it_new
DOT

it_interval
DOT

tv_sec
OP_ASSIGNMENT

it_new
DOT

it_interval
DOT

tv_usec
OP_ASSIGNMENT
NUMBER
SEMICOLON

do_setitimer
BRACKET_O

ITIMER_REAL
COMMA
AMPERSANT

it_new
COMMA
AMPERSANT

it_old
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O
NOT

it_old
DOT

it_value
DOT

tv_sec
AND

it_old
DOT

it_value
DOT

tv_usec
BRACKET_C
OR

it_old
DOT

it_value
DOT

tv_usec
GR_EQ
NUMBER
BRACKET_C

it_old
DOT

it_value
DOT

tv_sec
PLUS
PLUS
SEMICOLON

return

it_old
DOT

it_value
DOT

tv_sec
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setitimer
BRACKET_O
TYPE_INT

which
COMMA
STRUCT

itimerval

__user
MULT

value
COMMA
STRUCT

itimerval

__user
MULT

ovalue
BRACKET_C
CURLY_BRACKET_O
STRUCT

itimerval

set_buffer
COMMA

get_buffer
SEMICOLON
TYPE_INT

error
SEMICOLON
IF
BRACKET_O

value
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

set_buffer
COMMA

value
COMMA

sizeof
BRACKET_O

set_buffer
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
ELSE

memset
BRACKET_O
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C
AMPERSANT

set_buffer
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

set_buffer
BRACKET_C
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

do_setitimer
BRACKET_O

which
COMMA
AMPERSANT

set_buffer
COMMA

ovalue
QUESTION_MARK
AMPERSANT

get_buffer
COLON

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
OR
NOT

ovalue
BRACKET_C

return

error
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

ovalue
COMMA
AMPERSANT

get_buffer
COMMA

sizeof
BRACKET_O

get_buffer
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_IFDEF

CONFIG_KALLSYMS_ALL
PP_DEFINE

all_var
NUMBER
PP_ELSE
PP_DEFINE

all_var
NUMBER
PP_ENDIF

extern
CONST
TYPE_UNSIGNED
TYPE_LONG

kallsyms_addresses
CORNER_BRACKET_O
CORNER_BRACKET_C

__attribute__
BRACKET_O
BRACKET_O

weak
BRACKET_C
BRACKET_C
SEMICOLON

extern
CONST
TYPE_UNSIGNED
TYPE_LONG

kallsyms_num_syms

__attribute__
BRACKET_O
BRACKET_O

weak
BRACKET_C
BRACKET_C
SEMICOLON

extern
CONST

u8

kallsyms_names
CORNER_BRACKET_O
CORNER_BRACKET_C

__attribute__
BRACKET_O
BRACKET_O

weak
BRACKET_C
BRACKET_C
SEMICOLON

extern
CONST

u8

kallsyms_token_table
CORNER_BRACKET_O
CORNER_BRACKET_C

__attribute__
BRACKET_O
BRACKET_O

weak
BRACKET_C
BRACKET_C
SEMICOLON

extern
CONST

u16

kallsyms_token_index
CORNER_BRACKET_O
CORNER_BRACKET_C

__attribute__
BRACKET_O
BRACKET_O

weak
BRACKET_C
BRACKET_C
SEMICOLON

extern
CONST
TYPE_UNSIGNED
TYPE_LONG

kallsyms_markers
CORNER_BRACKET_O
CORNER_BRACKET_C

__attribute__
BRACKET_O
BRACKET_O

weak
BRACKET_C
BRACKET_C
SEMICOLON

static

inline
TYPE_INT

is_kernel_inittext
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

addr
GR_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_sinittext
AND

addr
LE_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_einittext
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

is_kernel_extratext
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

addr
GR_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_sextratext
AND

addr
LE_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_eextratext
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

is_kernel_text
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

addr
GR_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_stext
AND

addr
LE_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_etext
BRACKET_C

return
NUMBER
SEMICOLON

return

in_gate_area_no_task
BRACKET_O

addr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

is_kernel
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

addr
GR_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_stext
AND

addr
LE_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_end
BRACKET_C

return
NUMBER
SEMICOLON

return

in_gate_area_no_task
BRACKET_O

addr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

is_ksym_addr
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

all_var
BRACKET_C

return

is_kernel
BRACKET_O

addr
BRACKET_C
SEMICOLON

return

is_kernel_text
BRACKET_O

addr
BRACKET_C
OR

is_kernel_inittext
BRACKET_O

addr
BRACKET_C
OR

is_kernel_extratext
BRACKET_O

addr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_INT

kallsyms_expand_symbol
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

off
COMMA
TYPE_CHAR
MULT

result
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

len
COMMA

skipped_first
OP_ASSIGNMENT
NUMBER
SEMICOLON
CONST

u8
MULT

tptr
COMMA
MULT

data
SEMICOLON

data
OP_ASSIGNMENT
AMPERSANT

kallsyms_names
CORNER_BRACKET_O

off
CORNER_BRACKET_C
SEMICOLON

len
OP_ASSIGNMENT
MULT

data
SEMICOLON

data
PLUS
PLUS
SEMICOLON

off
ASSIGN_PLUS

len
PLUS
NUMBER
SEMICOLON
WHILE
BRACKET_O

len
BRACKET_C
CURLY_BRACKET_O

tptr
OP_ASSIGNMENT
AMPERSANT

kallsyms_token_table
CORNER_BRACKET_O

kallsyms_token_index
CORNER_BRACKET_O
MULT

data
CORNER_BRACKET_C
CORNER_BRACKET_C
SEMICOLON

data
PLUS
PLUS
SEMICOLON

len
MINUS
MINUS
SEMICOLON
WHILE
BRACKET_O
MULT

tptr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

skipped_first
BRACKET_C
CURLY_BRACKET_O
MULT

result
OP_ASSIGNMENT
MULT

tptr
SEMICOLON

result
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
ELSE

skipped_first
OP_ASSIGNMENT
NUMBER
SEMICOLON

tptr
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
MULT

result
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

return

off
SEMICOLON
CURLY_BRACKET_C

static
TYPE_CHAR

kallsyms_get_symbol_type
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

off
BRACKET_C
CURLY_BRACKET_O

return

kallsyms_token_table
CORNER_BRACKET_O

kallsyms_token_index
CORNER_BRACKET_O

kallsyms_names
CORNER_BRACKET_O

off
PLUS
NUMBER
CORNER_BRACKET_C
CORNER_BRACKET_C
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_INT

get_symbol_offset
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

pos
BRACKET_C
CURLY_BRACKET_O
CONST

u8
MULT

name
SEMICOLON
TYPE_INT

i
SEMICOLON

name
OP_ASSIGNMENT
AMPERSANT

kallsyms_names
CORNER_BRACKET_O

kallsyms_markers
CORNER_BRACKET_O

pos
GREATER
GREATER
NUMBER
CORNER_BRACKET_C
CORNER_BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS
BRACKET_O

pos
AMPERSANT
NUMBER

xFF
BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C

name
OP_ASSIGNMENT

name
PLUS
BRACKET_O
MULT

name
BRACKET_C
PLUS
NUMBER
SEMICOLON

return

name
MINUS

kallsyms_names
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

kallsyms_lookup_name
BRACKET_O
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

namebuf
CORNER_BRACKET_O

KSYM_NAME_LEN
PLUS
NUMBER
CORNER_BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

i
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

off
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
COMMA

off
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

kallsyms_num_syms
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

off
OP_ASSIGNMENT

kallsyms_expand_symbol
BRACKET_O

off
COMMA

namebuf
BRACKET_C
SEMICOLON
IF
BRACKET_O

strcmp
BRACKET_O

namebuf
COMMA

name
BRACKET_C
EQ
NUMBER
BRACKET_C

return

kallsyms_addresses
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

module_kallsyms_lookup_name
BRACKET_O

name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG

get_symbol_pos
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

symbolsize
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

offset
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

symbol_start
OP_ASSIGNMENT
NUMBER
COMMA

symbol_end
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

i
COMMA

low
COMMA

high
COMMA

mid
SEMICOLON

BUG_ON
BRACKET_O
NOT

kallsyms_addresses
BRACKET_C
SEMICOLON

low
OP_ASSIGNMENT
NUMBER
SEMICOLON

high
OP_ASSIGNMENT

kallsyms_num_syms
SEMICOLON
WHILE
BRACKET_O

high
MINUS

low
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

mid
OP_ASSIGNMENT
BRACKET_O

low
PLUS

high
BRACKET_C
DIV
NUMBER
SEMICOLON
IF
BRACKET_O

kallsyms_addresses
CORNER_BRACKET_O

mid
CORNER_BRACKET_C
LE_EQ

addr
BRACKET_C

low
OP_ASSIGNMENT

mid
SEMICOLON
ELSE

high
OP_ASSIGNMENT

mid
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

low
AND

kallsyms_addresses
CORNER_BRACKET_O

low
MINUS
NUMBER
CORNER_BRACKET_C
EQ

kallsyms_addresses
CORNER_BRACKET_O

low
CORNER_BRACKET_C
BRACKET_C
MINUS
MINUS

low
SEMICOLON

symbol_start
OP_ASSIGNMENT

kallsyms_addresses
CORNER_BRACKET_O

low
CORNER_BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT

low
PLUS
NUMBER
SEMICOLON

i
LESS

kallsyms_num_syms
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

kallsyms_addresses
CORNER_BRACKET_O

i
CORNER_BRACKET_C
GREATER

symbol_start
BRACKET_C
CURLY_BRACKET_O

symbol_end
OP_ASSIGNMENT

kallsyms_addresses
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

symbol_end
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

is_kernel_inittext
BRACKET_O

addr
BRACKET_C
BRACKET_C

symbol_end
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_einittext
SEMICOLON
ELSE
IF
BRACKET_O

all_var
BRACKET_C

symbol_end
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_end
SEMICOLON
ELSE

symbol_end
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_etext
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

symbolsize
BRACKET_C
MULT

symbolsize
OP_ASSIGNMENT

symbol_end
MINUS

symbol_start
SEMICOLON
IF
BRACKET_O

offset
BRACKET_C
MULT

offset
OP_ASSIGNMENT

addr
MINUS

symbol_start
SEMICOLON

return

low
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

kallsyms_lookup_size_offset
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

symbolsize
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

offset
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

is_ksym_addr
BRACKET_O

addr
BRACKET_C
BRACKET_C

return
NOT
NOT

get_symbol_pos
BRACKET_O

addr
COMMA

symbolsize
COMMA

offset
BRACKET_C
SEMICOLON

return
NOT
NOT

module_address_lookup
BRACKET_O

addr
COMMA

symbolsize
COMMA

offset
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CONST
TYPE_CHAR
MULT

kallsyms_lookup
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

symbolsize
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

offset
COMMA
TYPE_CHAR
MULT
MULT

modname
COMMA
TYPE_CHAR
MULT

namebuf
BRACKET_C
CURLY_BRACKET_O
CONST
TYPE_CHAR
MULT

msym
SEMICOLON

namebuf
CORNER_BRACKET_O

KSYM_NAME_LEN
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

namebuf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

is_ksym_addr
BRACKET_O

addr
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

pos
SEMICOLON

pos
OP_ASSIGNMENT

get_symbol_pos
BRACKET_O

addr
COMMA

symbolsize
COMMA

offset
BRACKET_C
SEMICOLON

kallsyms_expand_symbol
BRACKET_O

get_symbol_offset
BRACKET_O

pos
BRACKET_C
COMMA

namebuf
BRACKET_C
SEMICOLON
IF
BRACKET_O

modname
BRACKET_C
MULT

modname
OP_ASSIGNMENT

NULL
SEMICOLON

return

namebuf
SEMICOLON
CURLY_BRACKET_C

msym
OP_ASSIGNMENT

module_address_lookup
BRACKET_O

addr
COMMA

symbolsize
COMMA

offset
COMMA

modname
BRACKET_C
SEMICOLON
IF
BRACKET_O

msym
BRACKET_C

return

strncpy
BRACKET_O

namebuf
COMMA

msym
COMMA

KSYM_NAME_LEN
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

lookup_symbol_name
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
COMMA
TYPE_CHAR
MULT

symname
BRACKET_C
CURLY_BRACKET_O

symname
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

symname
CORNER_BRACKET_O

KSYM_NAME_LEN
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

is_ksym_addr
BRACKET_O

addr
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

pos
SEMICOLON

pos
OP_ASSIGNMENT

get_symbol_pos
BRACKET_O

addr
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON

kallsyms_expand_symbol
BRACKET_O

get_symbol_offset
BRACKET_O

pos
BRACKET_C
COMMA

symname
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

lookup_module_symbol_name
BRACKET_O

addr
COMMA

symname
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

lookup_symbol_attrs
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

size
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

offset
COMMA
TYPE_CHAR
MULT

modname
COMMA
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O

name
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

name
CORNER_BRACKET_O

KSYM_NAME_LEN
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

is_ksym_addr
BRACKET_O

addr
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

pos
SEMICOLON

pos
OP_ASSIGNMENT

get_symbol_pos
BRACKET_O

addr
COMMA

size
COMMA

offset
BRACKET_C
SEMICOLON

kallsyms_expand_symbol
BRACKET_O

get_symbol_offset
BRACKET_O

pos
BRACKET_C
COMMA

name
BRACKET_C
SEMICOLON

modname
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

lookup_module_symbol_attrs
BRACKET_O

addr
COMMA

size
COMMA

offset
COMMA

modname
COMMA

name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

sprint_symbol
BRACKET_O
TYPE_CHAR
MULT

buffer
COMMA
TYPE_UNSIGNED
TYPE_LONG

address
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

modname
SEMICOLON
CONST
TYPE_CHAR
MULT

name
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

offset
COMMA

size
SEMICOLON
TYPE_CHAR

namebuf
CORNER_BRACKET_O

KSYM_NAME_LEN
PLUS
NUMBER
CORNER_BRACKET_C
SEMICOLON

name
OP_ASSIGNMENT

kallsyms_lookup
BRACKET_O

address
COMMA
AMPERSANT

size
COMMA
AMPERSANT

offset
COMMA
AMPERSANT

modname
COMMA

namebuf
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

name
BRACKET_C

return

sprintf
BRACKET_O

buffer
COMMA
STRING
COMMA

address
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

modname
BRACKET_C

return

sprintf
BRACKET_O

buffer
COMMA
STRING
COMMA

name
COMMA

offset
COMMA

size
COMMA

modname
BRACKET_C
SEMICOLON
ELSE

return

sprintf
BRACKET_O

buffer
COMMA
STRING
COMMA

name
COMMA

offset
COMMA

size
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

__print_symbol
BRACKET_O
CONST
TYPE_CHAR
MULT

fmt
COMMA
TYPE_UNSIGNED
TYPE_LONG

address
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

buffer
CORNER_BRACKET_O

KSYM_SYMBOL_LEN
CORNER_BRACKET_C
SEMICOLON

sprint_symbol
BRACKET_O

buffer
COMMA

address
BRACKET_C
SEMICOLON

printk
BRACKET_O

fmt
COMMA

buffer
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

kallsym_iter
CURLY_BRACKET_O

loff_t

pos
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

value
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

nameoff
SEMICOLON
TYPE_CHAR

type
SEMICOLON
TYPE_CHAR

name
CORNER_BRACKET_O

KSYM_NAME_LEN
PLUS
NUMBER
CORNER_BRACKET_C
SEMICOLON
TYPE_CHAR

module_name
CORNER_BRACKET_O

MODULE_NAME_LEN
PLUS
NUMBER
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

exported
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

get_ksymbol_mod
BRACKET_O
STRUCT

kallsym_iter
MULT

iter
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

module_get_kallsym
BRACKET_O

iter
MINUS
GREATER

pos
MINUS

kallsyms_num_syms
COMMA
AMPERSANT

iter
MINUS
GREATER

value
COMMA
AMPERSANT

iter
MINUS
GREATER

type
COMMA

iter
MINUS
GREATER

name
COMMA

iter
MINUS
GREATER

module_name
COMMA
AMPERSANT

iter
MINUS
GREATER

exported
BRACKET_C
LESS
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG

get_ksymbol_core
BRACKET_O
STRUCT

kallsym_iter
MULT

iter
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED

off
OP_ASSIGNMENT

iter
MINUS
GREATER

nameoff
SEMICOLON

iter
MINUS
GREATER

module_name
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

iter
MINUS
GREATER

value
OP_ASSIGNMENT

kallsyms_addresses
CORNER_BRACKET_O

iter
MINUS
GREATER

pos
CORNER_BRACKET_C
SEMICOLON

iter
MINUS
GREATER

type
OP_ASSIGNMENT

kallsyms_get_symbol_type
BRACKET_O

off
BRACKET_C
SEMICOLON

off
OP_ASSIGNMENT

kallsyms_expand_symbol
BRACKET_O

off
COMMA

iter
MINUS
GREATER

name
BRACKET_C
SEMICOLON

return

off
MINUS

iter
MINUS
GREATER

nameoff
SEMICOLON
CURLY_BRACKET_C

static

void

reset_iter
BRACKET_O
STRUCT

kallsym_iter
MULT

iter
COMMA

loff_t

new_pos
BRACKET_C
CURLY_BRACKET_O

iter
MINUS
GREATER

name
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

iter
MINUS
GREATER

nameoff
OP_ASSIGNMENT

get_symbol_offset
BRACKET_O

new_pos
BRACKET_C
SEMICOLON

iter
MINUS
GREATER

pos
OP_ASSIGNMENT

new_pos
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

update_iter
BRACKET_O
STRUCT

kallsym_iter
MULT

iter
COMMA

loff_t

pos
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

pos
GR_EQ

kallsyms_num_syms
BRACKET_C
CURLY_BRACKET_O

iter
MINUS
GREATER

pos
OP_ASSIGNMENT

pos
SEMICOLON

return

get_ksymbol_mod
BRACKET_O

iter
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

pos
NOT_EQ

iter
MINUS
GREATER

pos
BRACKET_C

reset_iter
BRACKET_O

iter
COMMA

pos
BRACKET_C
SEMICOLON

iter
MINUS
GREATER

nameoff
ASSIGN_PLUS

get_ksymbol_core
BRACKET_O

iter
BRACKET_C
SEMICOLON

iter
MINUS
GREATER

pos
PLUS
PLUS
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void
MULT

s_next
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

p
COMMA

loff_t
MULT

pos
BRACKET_C
CURLY_BRACKET_O
BRACKET_O
MULT

pos
BRACKET_C
PLUS
PLUS
SEMICOLON
IF
BRACKET_O
NOT

update_iter
BRACKET_O

m
MINUS
GREATER

private
COMMA
MULT

pos
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

return

p
SEMICOLON
CURLY_BRACKET_C

static

void
MULT

s_start
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

loff_t
MULT

pos
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

update_iter
BRACKET_O

m
MINUS
GREATER

private
COMMA
MULT

pos
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

return

m
MINUS
GREATER

private
SEMICOLON
CURLY_BRACKET_C

static

void

s_stop
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

p
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static
TYPE_INT

s_show
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

p
BRACKET_C
CURLY_BRACKET_O
STRUCT

kallsym_iter
MULT

iter
OP_ASSIGNMENT

m
MINUS
GREATER

private
SEMICOLON
IF
BRACKET_O
NOT

iter
MINUS
GREATER

name
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

iter
MINUS
GREATER

module_name
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

type
SEMICOLON

type
OP_ASSIGNMENT

iter
MINUS
GREATER

exported
QUESTION_MARK

toupper
BRACKET_O

iter
MINUS
GREATER

type
BRACKET_C
COLON

tolower
BRACKET_O

iter
MINUS
GREATER

type
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA
BRACKET_O
TYPE_INT
BRACKET_C
BRACKET_O
NUMBER
MULT

sizeof
BRACKET_O

void
MULT
BRACKET_C
BRACKET_C
COMMA

iter
MINUS
GREATER

value
COMMA

type
COMMA

iter
MINUS
GREATER

name
COMMA

iter
MINUS
GREATER

module_name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA
BRACKET_O
TYPE_INT
BRACKET_C
BRACKET_O
NUMBER
MULT

sizeof
BRACKET_O

void
MULT
BRACKET_C
BRACKET_C
COMMA

iter
MINUS
GREATER

value
COMMA

iter
MINUS
GREATER

type
COMMA

iter
MINUS
GREATER

name
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

seq_operations

kallsyms_op
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

start
OP_ASSIGNMENT

s_start
COMMA
DOT

next
OP_ASSIGNMENT

s_next
COMMA
DOT

stop
OP_ASSIGNMENT

s_stop
COMMA
DOT

show
OP_ASSIGNMENT

s_show
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

kallsyms_open
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
STRUCT

kallsym_iter
MULT

iter
SEMICOLON
TYPE_INT

ret
SEMICOLON

iter
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

iter
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

iter
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

reset_iter
BRACKET_O

iter
COMMA
NUMBER
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

seq_open
BRACKET_O

file
COMMA
AMPERSANT

kallsyms_op
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
NUMBER
BRACKET_C
BRACKET_O
BRACKET_O
STRUCT

seq_file
MULT
BRACKET_C

file
MINUS
GREATER

private_data
BRACKET_C
MINUS
GREATER

private
OP_ASSIGNMENT

iter
SEMICOLON
ELSE

kfree
BRACKET_O

iter
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

file_operations

kallsyms_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

open
OP_ASSIGNMENT

kallsyms_open
COMMA
DOT

read
OP_ASSIGNMENT

seq_read
COMMA
DOT

llseek
OP_ASSIGNMENT

seq_lseek
COMMA
DOT

release
OP_ASSIGNMENT

seq_release_private
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__init

kallsyms_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

proc_dir_entry
MULT

entry
SEMICOLON

entry
OP_ASSIGNMENT

create_proc_entry
BRACKET_O
STRING
COMMA
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

entry
BRACKET_C

entry
MINUS
GREATER

proc_fops
OP_ASSIGNMENT
AMPERSANT

kallsyms_operations
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__initcall
BRACKET_O

kallsyms_init
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

__print_symbol
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

sprint_symbol
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_KDB
PP_INCLUDE
PP_INCLUDE
CONST
TYPE_CHAR
MULT

kdb_walk_kallsyms
BRACKET_O

loff_t
MULT

pos
BRACKET_C
CURLY_BRACKET_O

static
STRUCT

kallsym_iter

kdb_walk_kallsyms_iter
SEMICOLON
IF
BRACKET_O
MULT

pos
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

memset
BRACKET_O
AMPERSANT

kdb_walk_kallsyms_iter
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

kdb_walk_kallsyms_iter
BRACKET_C
BRACKET_C
SEMICOLON

reset_iter
BRACKET_O
AMPERSANT

kdb_walk_kallsyms_iter
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

update_iter
BRACKET_O
AMPERSANT

kdb_walk_kallsyms_iter
COMMA
MULT

pos
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON
PLUS
PLUS
MULT

pos
SEMICOLON
IF
BRACKET_O

kdb_walk_kallsyms_iter
DOT

name
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C

return

kdb_walk_kallsyms_iter
DOT

name
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

note_buf_t
MULT

crash_notes
SEMICOLON
STRUCT

resource

crashk_res
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

start
OP_ASSIGNMENT
NUMBER
COMMA
DOT

end
OP_ASSIGNMENT
NUMBER
COMMA
DOT

flags
OP_ASSIGNMENT

IORESOURCE_BUSY
LOGICAL_OR

IORESOURCE_MEM
CURLY_BRACKET_C
SEMICOLON
TYPE_INT

kexec_should_crash
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

in_interrupt
BRACKET_O
BRACKET_C
OR
NOT

p
MINUS
GREATER

pid
OR

is_init
BRACKET_O

p
BRACKET_C
OR

panic_on_oops
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

KIMAGE_NO_DEST
BRACKET_O
MINUS
NUMBER

UL
BRACKET_C

static
TYPE_INT

kimage_is_destination_range
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
TYPE_UNSIGNED
TYPE_LONG

start
COMMA
TYPE_UNSIGNED
TYPE_LONG

end
BRACKET_C
SEMICOLON

static
STRUCT

page
MULT

kimage_alloc_page
BRACKET_O
STRUCT

kimage
MULT

image
COMMA

gfp_t

gfp_mask
COMMA
TYPE_UNSIGNED
TYPE_LONG

dest
BRACKET_C
SEMICOLON

static
TYPE_INT

do_kimage_alloc
BRACKET_O
STRUCT

kimage
MULT
MULT

rimage
COMMA
TYPE_UNSIGNED
TYPE_LONG

entry
COMMA
TYPE_UNSIGNED
TYPE_LONG

nr_segments
COMMA
STRUCT

kexec_segment

__user
MULT

segments
BRACKET_C
CURLY_BRACKET_O

size_t

segment_bytes
SEMICOLON
STRUCT

kimage
MULT

image
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

i
SEMICOLON
TYPE_INT

result
SEMICOLON

result
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

image
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
MULT

image
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

image
BRACKET_C

goto

out
SEMICOLON

image
MINUS
GREATER

head
OP_ASSIGNMENT
NUMBER
SEMICOLON

image
MINUS
GREATER

entry
OP_ASSIGNMENT
AMPERSANT

image
MINUS
GREATER

head
SEMICOLON

image
MINUS
GREATER

last_entry
OP_ASSIGNMENT
AMPERSANT

image
MINUS
GREATER

head
SEMICOLON

image
MINUS
GREATER

control_page
OP_ASSIGNMENT
TILDE
NUMBER
SEMICOLON

image
MINUS
GREATER

start
OP_ASSIGNMENT

entry
SEMICOLON

image
MINUS
GREATER

type
OP_ASSIGNMENT

KEXEC_TYPE_DEFAULT
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

image
MINUS
GREATER

control_pages
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

image
MINUS
GREATER

dest_pages
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

image
MINUS
GREATER

unuseable_pages
BRACKET_C
SEMICOLON

image
MINUS
GREATER

nr_segments
OP_ASSIGNMENT

nr_segments
SEMICOLON

segment_bytes
OP_ASSIGNMENT

nr_segments
MULT

sizeof
BRACKET_O
MULT

segments
BRACKET_C
SEMICOLON

result
OP_ASSIGNMENT

copy_from_user
BRACKET_O

image
MINUS
GREATER

segment
COMMA

segments
COMMA

segment_bytes
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
BRACKET_C

goto

out
SEMICOLON

result
OP_ASSIGNMENT
MINUS

EADDRNOTAVAIL
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nr_segments
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

mstart
COMMA

mend
SEMICOLON

mstart
OP_ASSIGNMENT

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

mem
SEMICOLON

mend
OP_ASSIGNMENT

mstart
PLUS

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

memsz
SEMICOLON
IF
BRACKET_O
BRACKET_O

mstart
AMPERSANT
TILDE

PAGE_MASK
BRACKET_C
OR
BRACKET_O

mend
AMPERSANT
TILDE

PAGE_MASK
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

mend
GR_EQ

KEXEC_DESTINATION_MEMORY_LIMIT
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

result
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nr_segments
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

mstart
COMMA

mend
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

j
SEMICOLON

mstart
OP_ASSIGNMENT

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

mem
SEMICOLON

mend
OP_ASSIGNMENT

mstart
PLUS

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

memsz
SEMICOLON
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

i
SEMICOLON

j
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

pstart
COMMA

pend
SEMICOLON

pstart
OP_ASSIGNMENT

image
MINUS
GREATER

segment
CORNER_BRACKET_O

j
CORNER_BRACKET_C
DOT

mem
SEMICOLON

pend
OP_ASSIGNMENT

pstart
PLUS

image
MINUS
GREATER

segment
CORNER_BRACKET_O

j
CORNER_BRACKET_C
DOT

memsz
SEMICOLON
IF
BRACKET_O
BRACKET_O

mend
GREATER

pstart
BRACKET_C
AND
BRACKET_O

mstart
LESS

pend
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

result
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nr_segments
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

bufsz
GREATER

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

memsz
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

result
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON
IF
BRACKET_O

result
EQ
NUMBER
BRACKET_C
MULT

rimage
OP_ASSIGNMENT

image
SEMICOLON
ELSE

kfree
BRACKET_O

image
BRACKET_C
SEMICOLON

return

result
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

kimage_normal_alloc
BRACKET_O
STRUCT

kimage
MULT
MULT

rimage
COMMA
TYPE_UNSIGNED
TYPE_LONG

entry
COMMA
TYPE_UNSIGNED
TYPE_LONG

nr_segments
COMMA
STRUCT

kexec_segment

__user
MULT

segments
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

result
SEMICOLON
STRUCT

kimage
MULT

image
SEMICOLON

image
OP_ASSIGNMENT

NULL
SEMICOLON

result
OP_ASSIGNMENT

do_kimage_alloc
BRACKET_O
AMPERSANT

image
COMMA

entry
COMMA

nr_segments
COMMA

segments
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
BRACKET_C

goto

out
SEMICOLON
MULT

rimage
OP_ASSIGNMENT

image
SEMICOLON

result
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

image
MINUS
GREATER

control_code_page
OP_ASSIGNMENT

kimage_alloc_control_pages
BRACKET_O

image
COMMA

get_order
BRACKET_O

KEXEC_CONTROL_CODE_SIZE
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

image
MINUS
GREATER

control_code_page
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

result
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON
IF
BRACKET_O

result
EQ
NUMBER
BRACKET_C
MULT

rimage
OP_ASSIGNMENT

image
SEMICOLON
ELSE

kfree
BRACKET_O

image
BRACKET_C
SEMICOLON

return

result
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

kimage_crash_alloc
BRACKET_O
STRUCT

kimage
MULT
MULT

rimage
COMMA
TYPE_UNSIGNED
TYPE_LONG

entry
COMMA
TYPE_UNSIGNED
TYPE_LONG

nr_segments
COMMA
STRUCT

kexec_segment

__user
MULT

segments
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

result
SEMICOLON
STRUCT

kimage
MULT

image
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

i
SEMICOLON

image
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O
BRACKET_O

entry
LESS

crashk_res
DOT

start
BRACKET_C
OR
BRACKET_O

entry
GREATER

crashk_res
DOT

end
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

result
OP_ASSIGNMENT
MINUS

EADDRNOTAVAIL
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

result
OP_ASSIGNMENT

do_kimage_alloc
BRACKET_O
AMPERSANT

image
COMMA

entry
COMMA

nr_segments
COMMA

segments
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
BRACKET_C

goto

out
SEMICOLON

image
MINUS
GREATER

control_page
OP_ASSIGNMENT

crashk_res
DOT

start
SEMICOLON

image
MINUS
GREATER

type
OP_ASSIGNMENT

KEXEC_TYPE_CRASH
SEMICOLON

result
OP_ASSIGNMENT
MINUS

EADDRNOTAVAIL
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nr_segments
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

mstart
COMMA

mend
SEMICOLON

mstart
OP_ASSIGNMENT

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

mem
SEMICOLON

mend
OP_ASSIGNMENT

mstart
PLUS

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

memsz
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O

mstart
LESS

crashk_res
DOT

start
BRACKET_C
OR
BRACKET_O

mend
GREATER

crashk_res
DOT

end
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

result
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

image
MINUS
GREATER

control_code_page
OP_ASSIGNMENT

kimage_alloc_control_pages
BRACKET_O

image
COMMA

get_order
BRACKET_O

KEXEC_CONTROL_CODE_SIZE
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

image
MINUS
GREATER

control_code_page
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

result
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON
IF
BRACKET_O

result
EQ
NUMBER
BRACKET_C
MULT

rimage
OP_ASSIGNMENT

image
SEMICOLON
ELSE

kfree
BRACKET_O

image
BRACKET_C
SEMICOLON

return

result
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

kimage_is_destination_range
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
TYPE_UNSIGNED
TYPE_LONG

start
COMMA
TYPE_UNSIGNED
TYPE_LONG

end
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

image
MINUS
GREATER

nr_segments
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

mstart
COMMA

mend
SEMICOLON

mstart
OP_ASSIGNMENT

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

mem
SEMICOLON

mend
OP_ASSIGNMENT

mstart
PLUS

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

memsz
SEMICOLON
IF
BRACKET_O
BRACKET_O

end
GREATER

mstart
BRACKET_C
AND
BRACKET_O

start
LESS

mend
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

page
MULT

kimage_alloc_pages
BRACKET_O

gfp_t

gfp_mask
COMMA
TYPE_UNSIGNED
TYPE_INT

order
COMMA
TYPE_UNSIGNED
TYPE_LONG

limit
BRACKET_C
CURLY_BRACKET_O
STRUCT

page
MULT

pages
SEMICOLON

pages
OP_ASSIGNMENT

alloc_pages
BRACKET_O

gfp_mask
COMMA

order
BRACKET_C
SEMICOLON
IF
BRACKET_O

pages
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

count
COMMA

i
SEMICOLON
PP_IFDEF

CONFIG_XEN
TYPE_INT

address_bits
SEMICOLON
IF
BRACKET_O

limit
EQ
TILDE
NUMBER

UL
BRACKET_C

address_bits
OP_ASSIGNMENT

BITS_PER_LONG
SEMICOLON
ELSE

address_bits
OP_ASSIGNMENT

ilog2
BRACKET_O

limit
BRACKET_C
SEMICOLON
IF
BRACKET_O

xen_create_contiguous_region
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

page_address
BRACKET_O

pages
BRACKET_C
COMMA

order
COMMA

address_bits
BRACKET_C
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

__free_pages
BRACKET_O

pages
COMMA

order
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

pages
MINUS
GREATER

mapping
OP_ASSIGNMENT

NULL
SEMICOLON

set_page_private
BRACKET_O

pages
COMMA

order
BRACKET_C
SEMICOLON

count
OP_ASSIGNMENT
NUMBER
LESS
LESS

order
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

count
SEMICOLON

i
PLUS
PLUS
BRACKET_C

SetPageReserved
BRACKET_O

pages
PLUS

i
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

pages
SEMICOLON
CURLY_BRACKET_C

static

void

kimage_free_pages
BRACKET_O
STRUCT

page
MULT

page
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

order
COMMA

count
COMMA

i
SEMICOLON

order
OP_ASSIGNMENT

page_private
BRACKET_O

page
BRACKET_C
SEMICOLON

count
OP_ASSIGNMENT
NUMBER
LESS
LESS

order
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

count
SEMICOLON

i
PLUS
PLUS
BRACKET_C

ClearPageReserved
BRACKET_O

page
PLUS

i
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_XEN

xen_destroy_contiguous_region
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

page_address
BRACKET_O

page
BRACKET_C
COMMA

order
BRACKET_C
SEMICOLON
PP_ENDIF

__free_pages
BRACKET_O

page
COMMA

order
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

kimage_free_page_list
BRACKET_O
STRUCT

list_head
MULT

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head
MULT

pos
COMMA
MULT

next
SEMICOLON

list_for_each_safe
BRACKET_O

pos
COMMA

next
COMMA

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

page
MULT

page
SEMICOLON

page
OP_ASSIGNMENT

list_entry
BRACKET_O

pos
COMMA
STRUCT

page
COMMA

lru
BRACKET_C
SEMICOLON

list_del
BRACKET_O
AMPERSANT

page
MINUS
GREATER

lru
BRACKET_C
SEMICOLON

kimage_free_pages
BRACKET_O

page
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
STRUCT

page
MULT

kimage_alloc_normal_control_pages
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
TYPE_UNSIGNED
TYPE_INT

order
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head

extra_pages
SEMICOLON
STRUCT

page
MULT

pages
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

count
SEMICOLON

count
OP_ASSIGNMENT
NUMBER
LESS
LESS

order
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

extra_pages
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

pfn
COMMA

epfn
COMMA

addr
COMMA

eaddr
SEMICOLON

pages
OP_ASSIGNMENT

kimage_alloc_pages
BRACKET_O

GFP_KERNEL
COMMA

order
COMMA

KEXEC_CONTROL_MEMORY_LIMIT
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

pages
BRACKET_C
BREAK
SEMICOLON

pfn
OP_ASSIGNMENT

kexec_page_to_pfn
BRACKET_O

pages
BRACKET_C
SEMICOLON

epfn
OP_ASSIGNMENT

pfn
PLUS

count
SEMICOLON

addr
OP_ASSIGNMENT

pfn
LESS
LESS

PAGE_SHIFT
SEMICOLON

eaddr
OP_ASSIGNMENT

epfn
LESS
LESS

PAGE_SHIFT
SEMICOLON
IF
BRACKET_O
BRACKET_O

epfn
GR_EQ
BRACKET_O

KEXEC_CONTROL_MEMORY_LIMIT
GREATER
GREATER

PAGE_SHIFT
BRACKET_C
BRACKET_C
OR

kimage_is_destination_range
BRACKET_O

image
COMMA

addr
COMMA

eaddr
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

list_add
BRACKET_O
AMPERSANT

pages
MINUS
GREATER

lru
COMMA
AMPERSANT

extra_pages
BRACKET_C
SEMICOLON

pages
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

pages
BRACKET_C
SEMICOLON
IF
BRACKET_O

pages
BRACKET_C
CURLY_BRACKET_O

list_add
BRACKET_O
AMPERSANT

pages
MINUS
GREATER

lru
COMMA
AMPERSANT

image
MINUS
GREATER

control_pages
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

kimage_free_page_list
BRACKET_O
AMPERSANT

extra_pages
BRACKET_C
SEMICOLON

return

pages
SEMICOLON
CURLY_BRACKET_C
PP_IFNDEF

CONFIG_XEN

static
STRUCT

page
MULT

kimage_alloc_crash_control_pages
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
TYPE_UNSIGNED
TYPE_INT

order
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

hole_start
COMMA

hole_end
COMMA

size
SEMICOLON
STRUCT

page
MULT

pages
SEMICOLON

pages
OP_ASSIGNMENT

NULL
SEMICOLON

size
OP_ASSIGNMENT
BRACKET_O
NUMBER
LESS
LESS

order
BRACKET_C
LESS
LESS

PAGE_SHIFT
SEMICOLON

hole_start
OP_ASSIGNMENT
BRACKET_O

image
MINUS
GREATER

control_page
PLUS
BRACKET_O

size
MINUS
NUMBER
BRACKET_C
BRACKET_C
AMPERSANT
TILDE
BRACKET_O

size
MINUS
NUMBER
BRACKET_C
SEMICOLON

hole_end
OP_ASSIGNMENT

hole_start
PLUS

size
MINUS
NUMBER
SEMICOLON
WHILE
BRACKET_O

hole_end
LE_EQ

crashk_res
DOT

end
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

i
SEMICOLON
IF
BRACKET_O

hole_end
GREATER

KEXEC_CONTROL_MEMORY_LIMIT
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

hole_end
GREATER

crashk_res
DOT

end
BRACKET_C
BREAK
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

image
MINUS
GREATER

nr_segments
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

mstart
COMMA

mend
SEMICOLON

mstart
OP_ASSIGNMENT

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

mem
SEMICOLON

mend
OP_ASSIGNMENT

mstart
PLUS

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

memsz
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O

hole_end
GR_EQ

mstart
BRACKET_C
AND
BRACKET_O

hole_start
LE_EQ

mend
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

hole_start
OP_ASSIGNMENT
BRACKET_O

mend
PLUS
BRACKET_O

size
MINUS
NUMBER
BRACKET_C
BRACKET_C
AMPERSANT
TILDE
BRACKET_O

size
MINUS
NUMBER
BRACKET_C
SEMICOLON

hole_end
OP_ASSIGNMENT

hole_start
PLUS

size
MINUS
NUMBER
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

i
EQ

image
MINUS
GREATER

nr_segments
BRACKET_C
CURLY_BRACKET_O

pages
OP_ASSIGNMENT

kexec_pfn_to_page
BRACKET_O

hole_start
GREATER
GREATER

PAGE_SHIFT
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

pages
BRACKET_C

image
MINUS
GREATER

control_page
OP_ASSIGNMENT

hole_end
SEMICOLON

return

pages
SEMICOLON
CURLY_BRACKET_C
STRUCT

page
MULT

kimage_alloc_control_pages
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
TYPE_UNSIGNED
TYPE_INT

order
BRACKET_C
CURLY_BRACKET_O
STRUCT

page
MULT

pages
OP_ASSIGNMENT

NULL
SEMICOLON
SWITCH
BRACKET_O

image
MINUS
GREATER

type
BRACKET_C
CURLY_BRACKET_O

case

KEXEC_TYPE_DEFAULT
COLON

pages
OP_ASSIGNMENT

kimage_alloc_normal_control_pages
BRACKET_O

image
COMMA

order
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

KEXEC_TYPE_CRASH
COLON

pages
OP_ASSIGNMENT

kimage_alloc_crash_control_pages
BRACKET_O

image
COMMA

order
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

pages
SEMICOLON
CURLY_BRACKET_C
PP_ELSE
STRUCT

page
MULT

kimage_alloc_control_pages
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
TYPE_UNSIGNED
TYPE_INT

order
BRACKET_C
CURLY_BRACKET_O

return

kimage_alloc_normal_control_pages
BRACKET_O

image
COMMA

order
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

kimage_add_entry
BRACKET_O
STRUCT

kimage
MULT

image
COMMA

kimage_entry_t

entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
MULT

image
MINUS
GREATER

entry
NOT_EQ
NUMBER
BRACKET_C

image
MINUS
GREATER

entry
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

image
MINUS
GREATER

entry
EQ

image
MINUS
GREATER

last_entry
BRACKET_C
CURLY_BRACKET_O

kimage_entry_t
MULT

ind_page
SEMICOLON
STRUCT

page
MULT

page
SEMICOLON

page
OP_ASSIGNMENT

kimage_alloc_page
BRACKET_O

image
COMMA

GFP_KERNEL
COMMA

KIMAGE_NO_DEST
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

page
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

ind_page
OP_ASSIGNMENT

page_address
BRACKET_O

page
BRACKET_C
SEMICOLON
MULT

image
MINUS
GREATER

entry
OP_ASSIGNMENT

kexec_virt_to_phys
BRACKET_O

ind_page
BRACKET_C
LOGICAL_OR

IND_INDIRECTION
SEMICOLON

image
MINUS
GREATER

entry
OP_ASSIGNMENT

ind_page
SEMICOLON

image
MINUS
GREATER

last_entry
OP_ASSIGNMENT

ind_page
PLUS
BRACKET_O
BRACKET_O

PAGE_SIZE
DIV

sizeof
BRACKET_O

kimage_entry_t
BRACKET_C
BRACKET_C
MINUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
MULT

image
MINUS
GREATER

entry
OP_ASSIGNMENT

entry
SEMICOLON

image
MINUS
GREATER

entry
PLUS
PLUS
SEMICOLON
MULT

image
MINUS
GREATER

entry
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

kimage_set_destination
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
TYPE_UNSIGNED
TYPE_LONG

destination
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

result
SEMICOLON

destination
AMPERSANT
OP_ASSIGNMENT

PAGE_MASK
SEMICOLON

result
OP_ASSIGNMENT

kimage_add_entry
BRACKET_O

image
COMMA

destination
LOGICAL_OR

IND_DESTINATION
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
EQ
NUMBER
BRACKET_C

image
MINUS
GREATER

destination
OP_ASSIGNMENT

destination
SEMICOLON

return

result
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

kimage_add_page
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
TYPE_UNSIGNED
TYPE_LONG

page
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

result
SEMICOLON

page
AMPERSANT
OP_ASSIGNMENT

PAGE_MASK
SEMICOLON

result
OP_ASSIGNMENT

kimage_add_entry
BRACKET_O

image
COMMA

page
LOGICAL_OR

IND_SOURCE
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
EQ
NUMBER
BRACKET_C

image
MINUS
GREATER

destination
ASSIGN_PLUS

PAGE_SIZE
SEMICOLON

return

result
SEMICOLON
CURLY_BRACKET_C

static

void

kimage_free_extra_pages
BRACKET_O
STRUCT

kimage
MULT

image
BRACKET_C
CURLY_BRACKET_O

kimage_free_page_list
BRACKET_O
AMPERSANT

image
MINUS
GREATER

dest_pages
BRACKET_C
SEMICOLON

kimage_free_page_list
BRACKET_O
AMPERSANT

image
MINUS
GREATER

unuseable_pages
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

kimage_terminate
BRACKET_O
STRUCT

kimage
MULT

image
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
MULT

image
MINUS
GREATER

entry
NOT_EQ
NUMBER
BRACKET_C

image
MINUS
GREATER

entry
PLUS
PLUS
SEMICOLON
MULT

image
MINUS
GREATER

entry
OP_ASSIGNMENT

IND_DONE
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

for_each_kimage_entry
BRACKET_O

image
COMMA

ptr
COMMA

entry
BRACKET_C
BACKLASHED_NEWLINE
FOR
BRACKET_O

ptr
OP_ASSIGNMENT
AMPERSANT

image
MINUS
GREATER

head
SEMICOLON
BRACKET_O

entry
OP_ASSIGNMENT
MULT

ptr
BRACKET_C
AND
NOT
BRACKET_O

entry
AMPERSANT

IND_DONE
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE

ptr
OP_ASSIGNMENT
BRACKET_O

entry
AMPERSANT

IND_INDIRECTION
BRACKET_C
QUESTION_MARK
BACKLASHED_NEWLINE

kexec_phys_to_virt
BRACKET_O
BRACKET_O

entry
AMPERSANT

PAGE_MASK
BRACKET_C
BRACKET_C
COLON

ptr
PLUS
NUMBER
BRACKET_C

static

void

kimage_free_entry
BRACKET_O

kimage_entry_t

entry
BRACKET_C
CURLY_BRACKET_O
STRUCT

page
MULT

page
SEMICOLON

page
OP_ASSIGNMENT

kexec_pfn_to_page
BRACKET_O

entry
GREATER
GREATER

PAGE_SHIFT
BRACKET_C
SEMICOLON

kimage_free_pages
BRACKET_O

page
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

kimage_free
BRACKET_O
STRUCT

kimage
MULT

image
BRACKET_C
CURLY_BRACKET_O

kimage_entry_t
MULT

ptr
COMMA

entry
SEMICOLON

kimage_entry_t

ind
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

image
BRACKET_C

return
SEMICOLON
PP_IFDEF

CONFIG_XEN

xen_machine_kexec_unload
BRACKET_O

image
BRACKET_C
SEMICOLON
PP_ENDIF

kimage_free_extra_pages
BRACKET_O

image
BRACKET_C
SEMICOLON

for_each_kimage_entry
BRACKET_O

image
COMMA

ptr
COMMA

entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

entry
AMPERSANT

IND_INDIRECTION
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

ind
AMPERSANT

IND_INDIRECTION
BRACKET_C

kimage_free_entry
BRACKET_O

ind
BRACKET_C
SEMICOLON

ind
OP_ASSIGNMENT

entry
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

entry
AMPERSANT

IND_SOURCE
BRACKET_C

kimage_free_entry
BRACKET_O

entry
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

ind
AMPERSANT

IND_INDIRECTION
BRACKET_C

kimage_free_entry
BRACKET_O

ind
BRACKET_C
SEMICOLON

machine_kexec_cleanup
BRACKET_O

image
BRACKET_C
SEMICOLON

kimage_free_page_list
BRACKET_O
AMPERSANT

image
MINUS
GREATER

control_pages
BRACKET_C
SEMICOLON

kfree
BRACKET_O

image
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

kimage_entry_t
MULT

kimage_dst_used
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
TYPE_UNSIGNED
TYPE_LONG

page
BRACKET_C
CURLY_BRACKET_O

kimage_entry_t
MULT

ptr
COMMA

entry
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

destination
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_kimage_entry
BRACKET_O

image
COMMA

ptr
COMMA

entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

entry
AMPERSANT

IND_DESTINATION
BRACKET_C

destination
OP_ASSIGNMENT

entry
AMPERSANT

PAGE_MASK
SEMICOLON
ELSE
IF
BRACKET_O

entry
AMPERSANT

IND_SOURCE
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

page
EQ

destination
BRACKET_C

return

ptr
SEMICOLON

destination
ASSIGN_PLUS

PAGE_SIZE
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

NULL
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

page
MULT

kimage_alloc_page
BRACKET_O
STRUCT

kimage
MULT

image
COMMA

gfp_t

gfp_mask
COMMA
TYPE_UNSIGNED
TYPE_LONG

destination
BRACKET_C
CURLY_BRACKET_O
STRUCT

page
MULT

page
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

addr
SEMICOLON

list_for_each_entry
BRACKET_O

page
COMMA
AMPERSANT

image
MINUS
GREATER

dest_pages
COMMA

lru
BRACKET_C
CURLY_BRACKET_O

addr
OP_ASSIGNMENT

kexec_page_to_pfn
BRACKET_O

page
BRACKET_C
LESS
LESS

PAGE_SHIFT
SEMICOLON
IF
BRACKET_O

addr
EQ

destination
BRACKET_C
CURLY_BRACKET_O

list_del
BRACKET_O
AMPERSANT

page
MINUS
GREATER

lru
BRACKET_C
SEMICOLON

return

page
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

page
OP_ASSIGNMENT

NULL
SEMICOLON
WHILE
BRACKET_O
NUMBER
BRACKET_C
CURLY_BRACKET_O

kimage_entry_t
MULT

old
SEMICOLON

page
OP_ASSIGNMENT

kimage_alloc_pages
BRACKET_O

gfp_mask
COMMA
NUMBER
COMMA

KEXEC_SOURCE_MEMORY_LIMIT
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

page
BRACKET_C

return

NULL
SEMICOLON
IF
BRACKET_O

kexec_page_to_pfn
BRACKET_O

page
BRACKET_C
GREATER
BRACKET_O

KEXEC_SOURCE_MEMORY_LIMIT
GREATER
GREATER

PAGE_SHIFT
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

list_add
BRACKET_O
AMPERSANT

page
MINUS
GREATER

lru
COMMA
AMPERSANT

image
MINUS
GREATER

unuseable_pages
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

addr
OP_ASSIGNMENT

kexec_page_to_pfn
BRACKET_O

page
BRACKET_C
LESS
LESS

PAGE_SHIFT
SEMICOLON
IF
BRACKET_O

addr
EQ

destination
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O
NOT

kimage_is_destination_range
BRACKET_O

image
COMMA

addr
COMMA

addr
PLUS

PAGE_SIZE
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

old
OP_ASSIGNMENT

kimage_dst_used
BRACKET_O

image
COMMA

addr
BRACKET_C
SEMICOLON
IF
BRACKET_O

old
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

old_addr
SEMICOLON
STRUCT

page
MULT

old_page
SEMICOLON

old_addr
OP_ASSIGNMENT
MULT

old
AMPERSANT

PAGE_MASK
SEMICOLON

old_page
OP_ASSIGNMENT

kexec_pfn_to_page
BRACKET_O

old_addr
GREATER
GREATER

PAGE_SHIFT
BRACKET_C
SEMICOLON

copy_highpage
BRACKET_O

page
COMMA

old_page
BRACKET_C
SEMICOLON
MULT

old
OP_ASSIGNMENT

addr
LOGICAL_OR
BRACKET_O
MULT

old
AMPERSANT
TILDE

PAGE_MASK
BRACKET_C
SEMICOLON

addr
OP_ASSIGNMENT

old_addr
SEMICOLON

page
OP_ASSIGNMENT

old_page
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

list_add
BRACKET_O
AMPERSANT

page
MINUS
GREATER

lru
COMMA
AMPERSANT

image
MINUS
GREATER

dest_pages
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

page
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

kimage_load_normal_segment
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
STRUCT

kexec_segment
MULT

segment
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

maddr
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

ubytes
COMMA

mbytes
SEMICOLON
TYPE_INT

result
SEMICOLON
TYPE_UNSIGNED
TYPE_CHAR

__user
MULT

buf
SEMICOLON

result
OP_ASSIGNMENT
NUMBER
SEMICOLON

buf
OP_ASSIGNMENT

segment
MINUS
GREATER

buf
SEMICOLON

ubytes
OP_ASSIGNMENT

segment
MINUS
GREATER

bufsz
SEMICOLON

mbytes
OP_ASSIGNMENT

segment
MINUS
GREATER

memsz
SEMICOLON

maddr
OP_ASSIGNMENT

segment
MINUS
GREATER

mem
SEMICOLON

result
OP_ASSIGNMENT

kimage_set_destination
BRACKET_O

image
COMMA

maddr
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
LESS
NUMBER
BRACKET_C

goto

out
SEMICOLON
WHILE
BRACKET_O

mbytes
BRACKET_C
CURLY_BRACKET_O
STRUCT

page
MULT

page
SEMICOLON
TYPE_CHAR
MULT

ptr
SEMICOLON

size_t

uchunk
COMMA

mchunk
SEMICOLON

page
OP_ASSIGNMENT

kimage_alloc_page
BRACKET_O

image
COMMA

GFP_HIGHUSER
COMMA

maddr
BRACKET_C
SEMICOLON
IF
BRACKET_O

page
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

result
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

result
OP_ASSIGNMENT

kimage_add_page
BRACKET_O

image
COMMA

kexec_page_to_pfn
BRACKET_O

page
BRACKET_C
LESS
LESS

PAGE_SHIFT
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
LESS
NUMBER
BRACKET_C

goto

out
SEMICOLON

ptr
OP_ASSIGNMENT

kmap
BRACKET_O

page
BRACKET_C
SEMICOLON

memset
BRACKET_O

ptr
COMMA
NUMBER
COMMA

PAGE_SIZE
BRACKET_C
SEMICOLON

ptr
ASSIGN_PLUS

maddr
AMPERSANT
TILDE

PAGE_MASK
SEMICOLON

mchunk
OP_ASSIGNMENT

PAGE_SIZE
MINUS
BRACKET_O

maddr
AMPERSANT
TILDE

PAGE_MASK
BRACKET_C
SEMICOLON
IF
BRACKET_O

mchunk
GREATER

mbytes
BRACKET_C

mchunk
OP_ASSIGNMENT

mbytes
SEMICOLON

uchunk
OP_ASSIGNMENT

mchunk
SEMICOLON
IF
BRACKET_O

uchunk
GREATER

ubytes
BRACKET_C

uchunk
OP_ASSIGNMENT

ubytes
SEMICOLON

result
OP_ASSIGNMENT

copy_from_user
BRACKET_O

ptr
COMMA

buf
COMMA

uchunk
BRACKET_C
SEMICOLON

kunmap
BRACKET_O

page
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
BRACKET_C
CURLY_BRACKET_O

result
OP_ASSIGNMENT
BRACKET_O

result
LESS
NUMBER
BRACKET_C
QUESTION_MARK

result
COLON
MINUS

EIO
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

ubytes
ASSIGN_MINUS

uchunk
SEMICOLON

maddr
ASSIGN_PLUS

mchunk
SEMICOLON

buf
ASSIGN_PLUS

mchunk
SEMICOLON

mbytes
ASSIGN_MINUS

mchunk
SEMICOLON
CURLY_BRACKET_C

out
COLON

return

result
SEMICOLON
CURLY_BRACKET_C
PP_IFNDEF

CONFIG_XEN

static
TYPE_INT

kimage_load_crash_segment
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
STRUCT

kexec_segment
MULT

segment
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

maddr
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

ubytes
COMMA

mbytes
SEMICOLON
TYPE_INT

result
SEMICOLON
TYPE_UNSIGNED
TYPE_CHAR

__user
MULT

buf
SEMICOLON

result
OP_ASSIGNMENT
NUMBER
SEMICOLON

buf
OP_ASSIGNMENT

segment
MINUS
GREATER

buf
SEMICOLON

ubytes
OP_ASSIGNMENT

segment
MINUS
GREATER

bufsz
SEMICOLON

mbytes
OP_ASSIGNMENT

segment
MINUS
GREATER

memsz
SEMICOLON

maddr
OP_ASSIGNMENT

segment
MINUS
GREATER

mem
SEMICOLON
WHILE
BRACKET_O

mbytes
BRACKET_C
CURLY_BRACKET_O
STRUCT

page
MULT

page
SEMICOLON
TYPE_CHAR
MULT

ptr
SEMICOLON

size_t

uchunk
COMMA

mchunk
SEMICOLON

page
OP_ASSIGNMENT

kexec_pfn_to_page
BRACKET_O

maddr
GREATER
GREATER

PAGE_SHIFT
BRACKET_C
SEMICOLON
IF
BRACKET_O

page
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

result
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

ptr
OP_ASSIGNMENT

kmap
BRACKET_O

page
BRACKET_C
SEMICOLON

ptr
ASSIGN_PLUS

maddr
AMPERSANT
TILDE

PAGE_MASK
SEMICOLON

mchunk
OP_ASSIGNMENT

PAGE_SIZE
MINUS
BRACKET_O

maddr
AMPERSANT
TILDE

PAGE_MASK
BRACKET_C
SEMICOLON
IF
BRACKET_O

mchunk
GREATER

mbytes
BRACKET_C

mchunk
OP_ASSIGNMENT

mbytes
SEMICOLON

uchunk
OP_ASSIGNMENT

mchunk
SEMICOLON
IF
BRACKET_O

uchunk
GREATER

ubytes
BRACKET_C
CURLY_BRACKET_O

uchunk
OP_ASSIGNMENT

ubytes
SEMICOLON

memset
BRACKET_O

ptr
PLUS

uchunk
COMMA
NUMBER
COMMA

mchunk
MINUS

uchunk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

result
OP_ASSIGNMENT

copy_from_user
BRACKET_O

ptr
COMMA

buf
COMMA

uchunk
BRACKET_C
SEMICOLON

kexec_flush_icache_page
BRACKET_O

page
BRACKET_C
SEMICOLON

kunmap
BRACKET_O

page
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
BRACKET_C
CURLY_BRACKET_O

result
OP_ASSIGNMENT
BRACKET_O

result
LESS
NUMBER
BRACKET_C
QUESTION_MARK

result
COLON
MINUS

EIO
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

ubytes
ASSIGN_MINUS

uchunk
SEMICOLON

maddr
ASSIGN_PLUS

mchunk
SEMICOLON

buf
ASSIGN_PLUS

mchunk
SEMICOLON

mbytes
ASSIGN_MINUS

mchunk
SEMICOLON
CURLY_BRACKET_C

out
COLON

return

result
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

kimage_load_segment
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
STRUCT

kexec_segment
MULT

segment
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

result
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON
SWITCH
BRACKET_O

image
MINUS
GREATER

type
BRACKET_C
CURLY_BRACKET_O

case

KEXEC_TYPE_DEFAULT
COLON

result
OP_ASSIGNMENT

kimage_load_normal_segment
BRACKET_O

image
COMMA

segment
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

KEXEC_TYPE_CRASH
COLON

result
OP_ASSIGNMENT

kimage_load_crash_segment
BRACKET_O

image
COMMA

segment
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

result
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static
TYPE_INT

kimage_load_segment
BRACKET_O
STRUCT

kimage
MULT

image
COMMA
STRUCT

kexec_segment
MULT

segment
BRACKET_C
CURLY_BRACKET_O

return

kimage_load_normal_segment
BRACKET_O

image
COMMA

segment
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
STRUCT

kimage
MULT

kexec_image
SEMICOLON
STRUCT

kimage
MULT

kexec_crash_image
SEMICOLON

static
TYPE_INT

kexec_lock
SEMICOLON

asmlinkage
TYPE_LONG

sys_kexec_load
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

entry
COMMA
TYPE_UNSIGNED
TYPE_LONG

nr_segments
COMMA
STRUCT

kexec_segment

__user
MULT

segments
COMMA
TYPE_UNSIGNED
TYPE_LONG

flags
BRACKET_C
CURLY_BRACKET_O
STRUCT

kimage
MULT
MULT

dest_image
COMMA
MULT

image
SEMICOLON
TYPE_INT

locked
SEMICOLON
TYPE_INT

result
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SYS_BOOT
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O
BRACKET_O

flags
AMPERSANT

KEXEC_FLAGS
BRACKET_C
NOT_EQ
BRACKET_O

flags
AMPERSANT
TILDE

KEXEC_ARCH_MASK
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
BRACKET_O
BRACKET_O

flags
AMPERSANT

KEXEC_ARCH_MASK
BRACKET_C
NOT_EQ

KEXEC_ARCH
BRACKET_C
AND
BRACKET_O
BRACKET_O

flags
AMPERSANT

KEXEC_ARCH_MASK
BRACKET_C
NOT_EQ

KEXEC_ARCH_DEFAULT
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

nr_segments
GREATER

KEXEC_SEGMENT_MAX
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

image
OP_ASSIGNMENT

NULL
SEMICOLON

result
OP_ASSIGNMENT
NUMBER
SEMICOLON

locked
OP_ASSIGNMENT

xchg
BRACKET_O
AMPERSANT

kexec_lock
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

locked
BRACKET_C

return
MINUS

EBUSY
SEMICOLON

dest_image
OP_ASSIGNMENT
AMPERSANT

kexec_image
SEMICOLON
IF
BRACKET_O

flags
AMPERSANT

KEXEC_ON_CRASH
BRACKET_C

dest_image
OP_ASSIGNMENT
AMPERSANT

kexec_crash_image
SEMICOLON
IF
BRACKET_O

nr_segments
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

i
SEMICOLON
IF
BRACKET_O
BRACKET_O

flags
AMPERSANT

KEXEC_ON_CRASH
BRACKET_C
EQ
NUMBER
BRACKET_C

result
OP_ASSIGNMENT

kimage_normal_alloc
BRACKET_O
AMPERSANT

image
COMMA

entry
COMMA

nr_segments
COMMA

segments
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O

flags
AMPERSANT

KEXEC_ON_CRASH
BRACKET_C
CURLY_BRACKET_O

kimage_free
BRACKET_O

xchg
BRACKET_O
AMPERSANT

kexec_crash_image
COMMA

NULL
BRACKET_C
BRACKET_C
SEMICOLON

result
OP_ASSIGNMENT

kimage_crash_alloc
BRACKET_O
AMPERSANT

image
COMMA

entry
COMMA

nr_segments
COMMA

segments
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

result
BRACKET_C

goto

out
SEMICOLON

result
OP_ASSIGNMENT

machine_kexec_prepare
BRACKET_O

image
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
BRACKET_C

goto

out
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nr_segments
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

result
OP_ASSIGNMENT

kimage_load_segment
BRACKET_O

image
COMMA
AMPERSANT

image
MINUS
GREATER

segment
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

result
OP_ASSIGNMENT

kimage_terminate
BRACKET_O

image
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_XEN
IF
BRACKET_O

image
BRACKET_C
CURLY_BRACKET_O

result
OP_ASSIGNMENT

xen_machine_kexec_load
BRACKET_O

image
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

image
OP_ASSIGNMENT

xchg
BRACKET_O

dest_image
COMMA

image
BRACKET_C
SEMICOLON

out
COLON

locked
OP_ASSIGNMENT

xchg
BRACKET_O
AMPERSANT

kexec_lock
COMMA
NUMBER
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

locked
BRACKET_C
SEMICOLON

kimage_free
BRACKET_O

image
BRACKET_C
SEMICOLON

return

result
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_COMPAT

asmlinkage
TYPE_LONG

compat_sys_kexec_load
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

entry
COMMA
TYPE_UNSIGNED
TYPE_LONG

nr_segments
COMMA
STRUCT

compat_kexec_segment

__user
MULT

segments
COMMA
TYPE_UNSIGNED
TYPE_LONG

flags
BRACKET_C
CURLY_BRACKET_O
STRUCT

compat_kexec_segment

in
SEMICOLON
STRUCT

kexec_segment

out
COMMA

__user
MULT

ksegments
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

i
COMMA

result
SEMICOLON
IF
BRACKET_O
BRACKET_O

flags
AMPERSANT

KEXEC_ARCH_MASK
BRACKET_C
EQ

KEXEC_ARCH_DEFAULT
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

nr_segments
GREATER

KEXEC_SEGMENT_MAX
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

ksegments
OP_ASSIGNMENT

compat_alloc_user_space
BRACKET_O

nr_segments
MULT

sizeof
BRACKET_O

out
BRACKET_C
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nr_segments
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

result
OP_ASSIGNMENT

copy_from_user
BRACKET_O
AMPERSANT

in
COMMA
AMPERSANT

segments
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

sizeof
BRACKET_O

in
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

out
DOT

buf
OP_ASSIGNMENT

compat_ptr
BRACKET_O

in
DOT

buf
BRACKET_C
SEMICOLON

out
DOT

bufsz
OP_ASSIGNMENT

in
DOT

bufsz
SEMICOLON

out
DOT

mem
OP_ASSIGNMENT

in
DOT

mem
SEMICOLON

out
DOT

memsz
OP_ASSIGNMENT

in
DOT

memsz
SEMICOLON

result
OP_ASSIGNMENT

copy_to_user
BRACKET_O
AMPERSANT

ksegments
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA
AMPERSANT

out
COMMA

sizeof
BRACKET_O

out
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

sys_kexec_load
BRACKET_O

entry
COMMA

nr_segments
COMMA

ksegments
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

void

crash_kexec
BRACKET_O
STRUCT

pt_regs
MULT

regs
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

locked
SEMICOLON

locked
OP_ASSIGNMENT

xchg
BRACKET_O
AMPERSANT

kexec_lock
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

locked
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

kexec_crash_image
BRACKET_C
CURLY_BRACKET_O
STRUCT

pt_regs

fixed_regs
SEMICOLON

crash_setup_regs
BRACKET_O
AMPERSANT

fixed_regs
COMMA

regs
BRACKET_C
SEMICOLON

machine_crash_shutdown
BRACKET_O
AMPERSANT

fixed_regs
BRACKET_C
SEMICOLON

machine_kexec
BRACKET_O

kexec_crash_image
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

locked
OP_ASSIGNMENT

xchg
BRACKET_O
AMPERSANT

kexec_lock
COMMA
NUMBER
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

locked
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

u32
MULT

append_elf_note
BRACKET_O

u32
MULT

buf
COMMA
TYPE_CHAR
MULT

name
COMMA
TYPE_UNSIGNED

type
COMMA

void
MULT

data
COMMA

size_t

data_len
BRACKET_C
CURLY_BRACKET_O
STRUCT

elf_note

note
SEMICOLON

note
DOT

n_namesz
OP_ASSIGNMENT

strlen
BRACKET_O

name
BRACKET_C
PLUS
NUMBER
SEMICOLON

note
DOT

n_descsz
OP_ASSIGNMENT

data_len
SEMICOLON

note
DOT

n_type
OP_ASSIGNMENT

type
SEMICOLON

memcpy
BRACKET_O

buf
COMMA
AMPERSANT

note
COMMA

sizeof
BRACKET_O

note
BRACKET_C
BRACKET_C
SEMICOLON

buf
ASSIGN_PLUS
BRACKET_O

sizeof
BRACKET_O

note
BRACKET_C
PLUS
NUMBER
BRACKET_C
DIV
NUMBER
SEMICOLON

memcpy
BRACKET_O

buf
COMMA

name
COMMA

note
DOT

n_namesz
BRACKET_C
SEMICOLON

buf
ASSIGN_PLUS
BRACKET_O

note
DOT

n_namesz
PLUS
NUMBER
BRACKET_C
DIV
NUMBER
SEMICOLON

memcpy
BRACKET_O

buf
COMMA

data
COMMA

note
DOT

n_descsz
BRACKET_C
SEMICOLON

buf
ASSIGN_PLUS
BRACKET_O

note
DOT

n_descsz
PLUS
NUMBER
BRACKET_C
DIV
NUMBER
SEMICOLON

return

buf
SEMICOLON
CURLY_BRACKET_C

static

void

final_note
BRACKET_O

u32
MULT

buf
BRACKET_C
CURLY_BRACKET_O
STRUCT

elf_note

note
SEMICOLON

note
DOT

n_namesz
OP_ASSIGNMENT
NUMBER
SEMICOLON

note
DOT

n_descsz
OP_ASSIGNMENT
NUMBER
SEMICOLON

note
DOT

n_type
OP_ASSIGNMENT
NUMBER
SEMICOLON

memcpy
BRACKET_O

buf
COMMA
AMPERSANT

note
COMMA

sizeof
BRACKET_O

note
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

crash_save_cpu
BRACKET_O
STRUCT

pt_regs
MULT

regs
COMMA
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

elf_prstatus

prstatus
SEMICOLON

u32
MULT

buf
SEMICOLON
IF
BRACKET_O
BRACKET_O

cpu
LESS
NUMBER
BRACKET_C
OR
BRACKET_O

cpu
GR_EQ

NR_CPUS
BRACKET_C
BRACKET_C

return
SEMICOLON

buf
OP_ASSIGNMENT
BRACKET_O

u32
MULT
BRACKET_C

per_cpu_ptr
BRACKET_O

crash_notes
COMMA

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

buf
BRACKET_C

return
SEMICOLON

memset
BRACKET_O
AMPERSANT

prstatus
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

prstatus
BRACKET_C
BRACKET_C
SEMICOLON

prstatus
DOT

pr_pid
OP_ASSIGNMENT

current
MINUS
GREATER

pid
SEMICOLON

elf_core_copy_regs
BRACKET_O
AMPERSANT

prstatus
DOT

pr_reg
COMMA

regs
BRACKET_C
SEMICOLON

buf
OP_ASSIGNMENT

append_elf_note
BRACKET_O

buf
COMMA

KEXEC_CORE_NOTE_NAME
COMMA

NT_PRSTATUS
COMMA
AMPERSANT

prstatus
COMMA

sizeof
BRACKET_O

prstatus
BRACKET_C
BRACKET_C
SEMICOLON

final_note
BRACKET_O

buf
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__init

crash_notes_memory_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

crash_notes
OP_ASSIGNMENT

alloc_percpu
BRACKET_O

note_buf_t
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

crash_notes
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
STRING
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

module_init
BRACKET_O

crash_notes_memory_init
BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
STRUCT

kfifo
MULT

kfifo_init
BRACKET_O
TYPE_UNSIGNED
TYPE_CHAR
MULT

buffer
COMMA
TYPE_UNSIGNED
TYPE_INT

size
COMMA

gfp_t

gfp_mask
COMMA

spinlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O
STRUCT

kfifo
MULT

fifo
SEMICOLON

BUG_ON
BRACKET_O

size
AMPERSANT
BRACKET_O

size
MINUS
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

fifo
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

kfifo
BRACKET_C
COMMA

gfp_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

fifo
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ENOMEM
BRACKET_C
SEMICOLON

fifo
MINUS
GREATER

buffer
OP_ASSIGNMENT

buffer
SEMICOLON

fifo
MINUS
GREATER

size
OP_ASSIGNMENT

size
SEMICOLON

fifo
MINUS
GREATER

in
OP_ASSIGNMENT

fifo
MINUS
GREATER

out
OP_ASSIGNMENT
NUMBER
SEMICOLON

fifo
MINUS
GREATER

lock
OP_ASSIGNMENT

lock
SEMICOLON

return

fifo
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

kfifo_init
BRACKET_C
SEMICOLON
STRUCT

kfifo
MULT

kfifo_alloc
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

size
COMMA

gfp_t

gfp_mask
COMMA

spinlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_CHAR
MULT

buffer
SEMICOLON
STRUCT

kfifo
MULT

ret
SEMICOLON
IF
BRACKET_O

size
AMPERSANT
BRACKET_O

size
MINUS
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

size
GREATER
NUMBER

x80000000
BRACKET_C
SEMICOLON

size
OP_ASSIGNMENT

roundup_pow_of_two
BRACKET_O

size
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

buffer
OP_ASSIGNMENT

kmalloc
BRACKET_O

size
COMMA

gfp_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

buffer
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ENOMEM
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

kfifo_init
BRACKET_O

buffer
COMMA

size
COMMA

gfp_mask
COMMA

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

ret
BRACKET_C
BRACKET_C

kfree
BRACKET_O

buffer
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

kfifo_alloc
BRACKET_C
SEMICOLON

void

kfifo_free
BRACKET_O
STRUCT

kfifo
MULT

fifo
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

fifo
MINUS
GREATER

buffer
BRACKET_C
SEMICOLON

kfree
BRACKET_O

fifo
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

kfifo_free
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

__kfifo_put
BRACKET_O
STRUCT

kfifo
MULT

fifo
COMMA
TYPE_UNSIGNED
TYPE_CHAR
MULT

buffer
COMMA
TYPE_UNSIGNED
TYPE_INT

len
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

l
SEMICOLON

len
OP_ASSIGNMENT

min
BRACKET_O

len
COMMA

fifo
MINUS
GREATER

size
MINUS

fifo
MINUS
GREATER

in
PLUS

fifo
MINUS
GREATER

out
BRACKET_C
SEMICOLON

smp_mb
BRACKET_O
BRACKET_C
SEMICOLON

l
OP_ASSIGNMENT

min
BRACKET_O

len
COMMA

fifo
MINUS
GREATER

size
MINUS
BRACKET_O

fifo
MINUS
GREATER

in
AMPERSANT
BRACKET_O

fifo
MINUS
GREATER

size
MINUS
NUMBER
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

memcpy
BRACKET_O

fifo
MINUS
GREATER

buffer
PLUS
BRACKET_O

fifo
MINUS
GREATER

in
AMPERSANT
BRACKET_O

fifo
MINUS
GREATER

size
MINUS
NUMBER
BRACKET_C
BRACKET_C
COMMA

buffer
COMMA

l
BRACKET_C
SEMICOLON

memcpy
BRACKET_O

fifo
MINUS
GREATER

buffer
COMMA

buffer
PLUS

l
COMMA

len
MINUS

l
BRACKET_C
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON

fifo
MINUS
GREATER

in
ASSIGN_PLUS

len
SEMICOLON

return

len
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__kfifo_put
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

__kfifo_get
BRACKET_O
STRUCT

kfifo
MULT

fifo
COMMA
TYPE_UNSIGNED
TYPE_CHAR
MULT

buffer
COMMA
TYPE_UNSIGNED
TYPE_INT

len
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

l
SEMICOLON

len
OP_ASSIGNMENT

min
BRACKET_O

len
COMMA

fifo
MINUS
GREATER

in
MINUS

fifo
MINUS
GREATER

out
BRACKET_C
SEMICOLON

smp_rmb
BRACKET_O
BRACKET_C
SEMICOLON

l
OP_ASSIGNMENT

min
BRACKET_O

len
COMMA

fifo
MINUS
GREATER

size
MINUS
BRACKET_O

fifo
MINUS
GREATER

out
AMPERSANT
BRACKET_O

fifo
MINUS
GREATER

size
MINUS
NUMBER
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

memcpy
BRACKET_O

buffer
COMMA

fifo
MINUS
GREATER

buffer
PLUS
BRACKET_O

fifo
MINUS
GREATER

out
AMPERSANT
BRACKET_O

fifo
MINUS
GREATER

size
MINUS
NUMBER
BRACKET_C
BRACKET_C
COMMA

l
BRACKET_C
SEMICOLON

memcpy
BRACKET_O

buffer
PLUS

l
COMMA

fifo
MINUS
GREATER

buffer
COMMA

len
MINUS

l
BRACKET_C
SEMICOLON

smp_mb
BRACKET_O
BRACKET_C
SEMICOLON

fifo
MINUS
GREATER

out
ASSIGN_PLUS

len
SEMICOLON

return

len
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__kfifo_get
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

extern
TYPE_INT

max_threads
SEMICOLON

static
STRUCT

workqueue_struct
MULT

khelper_wq
SEMICOLON
PP_IFDEF

CONFIG_KMOD
TYPE_CHAR

modprobe_path
CORNER_BRACKET_O

KMOD_PATH_LEN
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
SEMICOLON
TYPE_INT

request_module
BRACKET_O
CONST
TYPE_CHAR
MULT

fmt
COMMA
DOT
DOT
DOT
BRACKET_C
CURLY_BRACKET_O

va_list

args
SEMICOLON
TYPE_CHAR

module_name
CORNER_BRACKET_O

MODULE_NAME_LEN
CORNER_BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

max_modprobes
SEMICOLON
TYPE_INT

ret
SEMICOLON
TYPE_CHAR
MULT

argv
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O

modprobe_path
COMMA
STRING
COMMA
STRING
COMMA

module_name
COMMA

NULL
CURLY_BRACKET_C
SEMICOLON

static
TYPE_CHAR
MULT

envp
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
STRING
COMMA
STRING
COMMA
STRING
COMMA

NULL
CURLY_BRACKET_C
SEMICOLON

static

atomic_t

kmod_concurrent
OP_ASSIGNMENT

ATOMIC_INIT
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
PP_DEFINE

MAX_KMOD_CONCURRENT
NUMBER

static
TYPE_INT

kmod_loop_msg
SEMICOLON

va_start
BRACKET_O

args
COMMA

fmt
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

vsnprintf
BRACKET_O

module_name
COMMA

MODULE_NAME_LEN
COMMA

fmt
COMMA

args
BRACKET_C
SEMICOLON

va_end
BRACKET_O

args
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
GR_EQ

MODULE_NAME_LEN
BRACKET_C

return
MINUS

ENAMETOOLONG
SEMICOLON

max_modprobes
OP_ASSIGNMENT

min
BRACKET_O

max_threads
DIV
NUMBER
COMMA

MAX_KMOD_CONCURRENT
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

kmod_concurrent
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

kmod_concurrent
BRACKET_C
GREATER

max_modprobes
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

kmod_loop_msg
PLUS
PLUS
LESS
NUMBER
BRACKET_C

printk
BRACKET_O

KERN_ERR
STRING
COMMA

module_name
BRACKET_C
SEMICOLON

atomic_dec
BRACKET_O
AMPERSANT

kmod_concurrent
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

ret
OP_ASSIGNMENT

call_usermodehelper
BRACKET_O

modprobe_path
COMMA

argv
COMMA

envp
COMMA
NUMBER
BRACKET_C
SEMICOLON

atomic_dec
BRACKET_O
AMPERSANT

kmod_concurrent
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

request_module
BRACKET_C
SEMICOLON
PP_ENDIF
STRUCT

subprocess_info
CURLY_BRACKET_O
STRUCT

work_struct

work
SEMICOLON
STRUCT

completion
MULT

complete
SEMICOLON
TYPE_CHAR
MULT

path
SEMICOLON
TYPE_CHAR
MULT
MULT

argv
SEMICOLON
TYPE_CHAR
MULT
MULT

envp
SEMICOLON
STRUCT

key
MULT

ring
SEMICOLON
TYPE_INT

wait
SEMICOLON
TYPE_INT

retval
SEMICOLON
STRUCT

file
MULT

stdin
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

____call_usermodehelper
BRACKET_O

void
MULT

data
BRACKET_C
CURLY_BRACKET_O
STRUCT

subprocess_info
MULT

sub_info
OP_ASSIGNMENT

data
SEMICOLON
STRUCT

key
MULT

new_session
COMMA
MULT

old_session
SEMICOLON
TYPE_INT

retval
SEMICOLON

new_session
OP_ASSIGNMENT

key_get
BRACKET_O

sub_info
MINUS
GREATER

ring
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

old_session
OP_ASSIGNMENT

__install_session_keyring
BRACKET_O

current
COMMA

new_session
BRACKET_C
SEMICOLON

flush_signal_handlers
BRACKET_O

current
COMMA
NUMBER
BRACKET_C
SEMICOLON

sigemptyset
BRACKET_O
AMPERSANT

current
MINUS
GREATER

blocked
BRACKET_C
SEMICOLON

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

key_put
BRACKET_O

old_session
BRACKET_C
SEMICOLON
IF
BRACKET_O

sub_info
MINUS
GREATER

stdin
BRACKET_C
CURLY_BRACKET_O
STRUCT

files_struct
MULT

f
OP_ASSIGNMENT

current
MINUS
GREATER

files
SEMICOLON
STRUCT

fdtable
MULT

fdt
SEMICOLON

sys_close
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

fd_install
BRACKET_O
NUMBER
COMMA

sub_info
MINUS
GREATER

stdin
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

f
MINUS
GREATER

file_lock
BRACKET_C
SEMICOLON

fdt
OP_ASSIGNMENT

files_fdtable
BRACKET_O

f
BRACKET_C
SEMICOLON

FD_SET
BRACKET_O
NUMBER
COMMA

fdt
MINUS
GREATER

open_fds
BRACKET_C
SEMICOLON

FD_CLR
BRACKET_O
NUMBER
COMMA

fdt
MINUS
GREATER

close_on_exec
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

f
MINUS
GREATER

file_lock
BRACKET_C
SEMICOLON

current
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CORE
CORNER_BRACKET_C
OP_ASSIGNMENT
BRACKET_O
STRUCT

rlimit
BRACKET_C
CURLY_BRACKET_O
NUMBER
COMMA
NUMBER
CURLY_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

set_cpus_allowed
BRACKET_O

current
COMMA

CPU_MASK_ALL
BRACKET_C
SEMICOLON

set_user_nice
BRACKET_O

current
COMMA
NUMBER
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

current
MINUS
GREATER

fs
MINUS
GREATER

root
BRACKET_C

retval
OP_ASSIGNMENT

kernel_execve
BRACKET_O

sub_info
MINUS
GREATER

path
COMMA

sub_info
MINUS
GREATER

argv
COMMA

sub_info
MINUS
GREATER

envp
BRACKET_C
SEMICOLON

sub_info
MINUS
GREATER

retval
OP_ASSIGNMENT

retval
SEMICOLON

do_exit
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

wait_for_helper
BRACKET_O

void
MULT

data
BRACKET_C
CURLY_BRACKET_O
STRUCT

subprocess_info
MULT

sub_info
OP_ASSIGNMENT

data
SEMICOLON

pid_t

pid
SEMICOLON

allow_signal
BRACKET_O

SIGCHLD
BRACKET_C
SEMICOLON

pid
OP_ASSIGNMENT

kernel_thread
BRACKET_O

____call_usermodehelper
COMMA

sub_info
COMMA

SIGCHLD
BRACKET_C
SEMICOLON
IF
BRACKET_O

pid
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

sub_info
MINUS
GREATER

retval
OP_ASSIGNMENT

pid
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

sys_wait4
BRACKET_O

pid
COMMA
BRACKET_O
TYPE_INT

__user
MULT
BRACKET_C
AMPERSANT

ret
COMMA
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

sub_info
MINUS
GREATER

retval
OP_ASSIGNMENT

ret
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

sub_info
MINUS
GREATER

wait
LESS
NUMBER
BRACKET_C

kfree
BRACKET_O

sub_info
BRACKET_C
SEMICOLON
ELSE

complete
BRACKET_O

sub_info
MINUS
GREATER

complete
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

__call_usermodehelper
BRACKET_O
STRUCT

work_struct
MULT

work
BRACKET_C
CURLY_BRACKET_O
STRUCT

subprocess_info
MULT

sub_info
OP_ASSIGNMENT

container_of
BRACKET_O

work
COMMA
STRUCT

subprocess_info
COMMA

work
BRACKET_C
SEMICOLON

pid_t

pid
SEMICOLON
TYPE_INT

wait
OP_ASSIGNMENT

sub_info
MINUS
GREATER

wait
SEMICOLON
IF
BRACKET_O

wait
BRACKET_C

pid
OP_ASSIGNMENT

kernel_thread
BRACKET_O

wait_for_helper
COMMA

sub_info
COMMA

CLONE_FS
LOGICAL_OR

CLONE_FILES
LOGICAL_OR

SIGCHLD
BRACKET_C
SEMICOLON
ELSE

pid
OP_ASSIGNMENT

kernel_thread
BRACKET_O

____call_usermodehelper
COMMA

sub_info
COMMA

CLONE_VFORK
LOGICAL_OR

SIGCHLD
BRACKET_C
SEMICOLON
IF
BRACKET_O

wait
LESS
NUMBER
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

pid
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

sub_info
MINUS
GREATER

retval
OP_ASSIGNMENT

pid
SEMICOLON

complete
BRACKET_O

sub_info
MINUS
GREATER

complete
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
NOT

wait
BRACKET_C

complete
BRACKET_O

sub_info
MINUS
GREATER

complete
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

call_usermodehelper_keys
BRACKET_O
TYPE_CHAR
MULT

path
COMMA
TYPE_CHAR
MULT
MULT

argv
COMMA
TYPE_CHAR
MULT
MULT

envp
COMMA
STRUCT

key
MULT

session_keyring
COMMA
TYPE_INT

wait
BRACKET_C
CURLY_BRACKET_O

DECLARE_COMPLETION_ONSTACK
BRACKET_O

done
BRACKET_C
SEMICOLON
STRUCT

subprocess_info
MULT

sub_info
SEMICOLON
TYPE_INT

retval
SEMICOLON
IF
BRACKET_O
NOT

khelper_wq
BRACKET_C

return
MINUS

EBUSY
SEMICOLON
IF
BRACKET_O

path
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

return
NUMBER
SEMICOLON

sub_info
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

subprocess_info
BRACKET_C
COMMA

GFP_ATOMIC
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sub_info
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

INIT_WORK
BRACKET_O
AMPERSANT

sub_info
MINUS
GREATER

work
COMMA

__call_usermodehelper
BRACKET_C
SEMICOLON

sub_info
MINUS
GREATER

complete
OP_ASSIGNMENT
AMPERSANT

done
SEMICOLON

sub_info
MINUS
GREATER

path
OP_ASSIGNMENT

path
SEMICOLON

sub_info
MINUS
GREATER

argv
OP_ASSIGNMENT

argv
SEMICOLON

sub_info
MINUS
GREATER

envp
OP_ASSIGNMENT

envp
SEMICOLON

sub_info
MINUS
GREATER

ring
OP_ASSIGNMENT

session_keyring
SEMICOLON

sub_info
MINUS
GREATER

wait
OP_ASSIGNMENT

wait
SEMICOLON

queue_work
BRACKET_O

khelper_wq
COMMA
AMPERSANT

sub_info
MINUS
GREATER

work
BRACKET_C
SEMICOLON
IF
BRACKET_O

wait
LESS
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

done
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT

sub_info
MINUS
GREATER

retval
SEMICOLON

kfree
BRACKET_O

sub_info
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

call_usermodehelper_keys
BRACKET_C
SEMICOLON
TYPE_INT

call_usermodehelper_pipe
BRACKET_O
TYPE_CHAR
MULT

path
COMMA
TYPE_CHAR
MULT
MULT

argv
COMMA
TYPE_CHAR
MULT
MULT

envp
COMMA
STRUCT

file
MULT
MULT

filp
BRACKET_C
CURLY_BRACKET_O

DECLARE_COMPLETION
BRACKET_O

done
BRACKET_C
SEMICOLON
STRUCT

subprocess_info

sub_info
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

work
OP_ASSIGNMENT

__WORK_INITIALIZER
BRACKET_O

sub_info
DOT

work
COMMA

__call_usermodehelper
BRACKET_C
COMMA
DOT

complete
OP_ASSIGNMENT
AMPERSANT

done
COMMA
DOT

path
OP_ASSIGNMENT

path
COMMA
DOT

argv
OP_ASSIGNMENT

argv
COMMA
DOT

envp
OP_ASSIGNMENT

envp
COMMA
DOT

retval
OP_ASSIGNMENT
NUMBER
COMMA
CURLY_BRACKET_C
SEMICOLON
STRUCT

file
MULT

f
SEMICOLON
IF
BRACKET_O
NOT

khelper_wq
BRACKET_C

return
MINUS

EBUSY
SEMICOLON
IF
BRACKET_O

path
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

return
NUMBER
SEMICOLON

f
OP_ASSIGNMENT

create_write_pipe
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

f
BRACKET_C
BRACKET_C

return

PTR_ERR
BRACKET_O

f
BRACKET_C
SEMICOLON
MULT

filp
OP_ASSIGNMENT

f
SEMICOLON

f
OP_ASSIGNMENT

create_read_pipe
BRACKET_O

f
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

f
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

free_write_pipe
BRACKET_O
MULT

filp
BRACKET_C
SEMICOLON

return

PTR_ERR
BRACKET_O

f
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

sub_info
DOT

stdin
OP_ASSIGNMENT

f
SEMICOLON

queue_work
BRACKET_O

khelper_wq
COMMA
AMPERSANT

sub_info
DOT

work
BRACKET_C
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

done
BRACKET_C
SEMICOLON

return

sub_info
DOT

retval
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

call_usermodehelper_pipe
BRACKET_C
SEMICOLON

void

__init

usermodehelper_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

khelper_wq
OP_ASSIGNMENT

create_singlethread_workqueue
BRACKET_O
STRING
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

khelper_wq
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_DEFINE

KPROBE_HASH_BITS
NUMBER
PP_DEFINE

KPROBE_TABLE_SIZE
BRACKET_O
NUMBER
LESS
LESS

KPROBE_HASH_BITS
BRACKET_C
PP_IFNDEF

kprobe_lookup_name
PP_DEFINE

kprobe_lookup_name
BRACKET_O

name
COMMA

addr
BRACKET_C
BACKLASHED_NEWLINE

addr
OP_ASSIGNMENT
BRACKET_O
BRACKET_O

kprobe_opcode_t
MULT
BRACKET_C
BRACKET_O

kallsyms_lookup_name
BRACKET_O

name
BRACKET_C
BRACKET_C
BRACKET_C
PP_ENDIF

static
STRUCT

hlist_head

kprobe_table
CORNER_BRACKET_O

KPROBE_TABLE_SIZE
CORNER_BRACKET_C
SEMICOLON

static
STRUCT

hlist_head

kretprobe_inst_table
CORNER_BRACKET_O

KPROBE_TABLE_SIZE
CORNER_BRACKET_C
SEMICOLON

static

atomic_t

kprobe_count
SEMICOLON

static

bool

kprobe_enabled
SEMICOLON

DEFINE_MUTEX
BRACKET_O

kprobe_mutex
BRACKET_C
SEMICOLON

DEFINE_SPINLOCK
BRACKET_O

kretprobe_lock
BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

kprobe
MULT
COMMA

kprobe_instance
BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

static
STRUCT

notifier_block

kprobe_page_fault_nb
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

notifier_call
OP_ASSIGNMENT

kprobe_exceptions_notify
COMMA
DOT

priority
OP_ASSIGNMENT
NUMBER

x7fffffff
CURLY_BRACKET_C
SEMICOLON
PP_IFDEF

__ARCH_WANT_KPROBES_INSN_SLOT
PP_DEFINE

INSNS_PER_PAGE
BRACKET_O

PAGE_SIZE
DIV
BRACKET_O

MAX_INSN_SIZE
MULT

sizeof
BRACKET_O

kprobe_opcode_t
BRACKET_C
BRACKET_C
BRACKET_C
STRUCT

kprobe_insn_page
CURLY_BRACKET_O
STRUCT

hlist_node

hlist
SEMICOLON

kprobe_opcode_t
MULT

insns
SEMICOLON
TYPE_CHAR

slot_used
CORNER_BRACKET_O

INSNS_PER_PAGE
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

nused
SEMICOLON
TYPE_INT

ngarbage
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

enum

kprobe_slot_state
CURLY_BRACKET_O

SLOT_CLEAN
OP_ASSIGNMENT
NUMBER
COMMA

SLOT_DIRTY
OP_ASSIGNMENT
NUMBER
COMMA

SLOT_USED
OP_ASSIGNMENT
NUMBER
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

hlist_head

kprobe_insn_pages
SEMICOLON

static
TYPE_INT

kprobe_garbage_slots
SEMICOLON

static
TYPE_INT

collect_garbage_slots
BRACKET_O

void
BRACKET_C
SEMICOLON

static
TYPE_INT

__kprobes

check_safety
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_PREEMPT
BRACKET_C
AND
PP_DEFINED
BRACKET_O

CONFIG_PM
BRACKET_C

ret
OP_ASSIGNMENT

freeze_processes
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
MULT

q
SEMICOLON

do_each_thread
BRACKET_O

p
COMMA

q
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
NOT_EQ

current
AND

p
MINUS
GREATER

state
EQ

TASK_RUNNING
AND

p
MINUS
GREATER

pid
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

p
MINUS
GREATER

comm
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

goto

loop_end
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

while_each_thread
BRACKET_O

p
COMMA

q
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

loop_end
COLON

thaw_processes
BRACKET_O
BRACKET_C
SEMICOLON
PP_ELSE

synchronize_sched
BRACKET_O
BRACKET_C
SEMICOLON
PP_ENDIF

return

ret
SEMICOLON
CURLY_BRACKET_C

kprobe_opcode_t

__kprobes
MULT

get_insn_slot
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

kprobe_insn_page
MULT

kip
SEMICOLON
STRUCT

hlist_node
MULT

pos
SEMICOLON

retry
COLON

hlist_for_each_entry
BRACKET_O

kip
COMMA

pos
COMMA
AMPERSANT

kprobe_insn_pages
COMMA

hlist
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

kip
MINUS
GREATER

nused
LESS

INSNS_PER_PAGE
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

INSNS_PER_PAGE
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

kip
MINUS
GREATER

slot_used
CORNER_BRACKET_O

i
CORNER_BRACKET_C
EQ

SLOT_CLEAN
BRACKET_C
CURLY_BRACKET_O

kip
MINUS
GREATER

slot_used
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

SLOT_USED
SEMICOLON

kip
MINUS
GREATER

nused
PLUS
PLUS
SEMICOLON

return

kip
MINUS
GREATER

insns
PLUS
BRACKET_O

i
MULT

MAX_INSN_SIZE
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

kip
MINUS
GREATER

nused
OP_ASSIGNMENT

INSNS_PER_PAGE
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

kprobe_garbage_slots
AND

collect_garbage_slots
BRACKET_O
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

goto

retry
SEMICOLON
CURLY_BRACKET_C

kip
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

kprobe_insn_page
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

kip
BRACKET_C

return

NULL
SEMICOLON

kip
MINUS
GREATER

insns
OP_ASSIGNMENT

module_alloc
BRACKET_O

PAGE_SIZE
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

kip
MINUS
GREATER

insns
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

kip
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

INIT_HLIST_NODE
BRACKET_O
AMPERSANT

kip
MINUS
GREATER

hlist
BRACKET_C
SEMICOLON

hlist_add_head
BRACKET_O
AMPERSANT

kip
MINUS
GREATER

hlist
COMMA
AMPERSANT

kprobe_insn_pages
BRACKET_C
SEMICOLON

memset
BRACKET_O

kip
MINUS
GREATER

slot_used
COMMA

SLOT_CLEAN
COMMA

INSNS_PER_PAGE
BRACKET_C
SEMICOLON

kip
MINUS
GREATER

slot_used
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

SLOT_USED
SEMICOLON

kip
MINUS
GREATER

nused
OP_ASSIGNMENT
NUMBER
SEMICOLON

kip
MINUS
GREATER

ngarbage
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

kip
MINUS
GREATER

insns
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__kprobes

collect_one_slot
BRACKET_O
STRUCT

kprobe_insn_page
MULT

kip
COMMA
TYPE_INT

idx
BRACKET_C
CURLY_BRACKET_O

kip
MINUS
GREATER

slot_used
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
OP_ASSIGNMENT

SLOT_CLEAN
SEMICOLON

kip
MINUS
GREATER

nused
MINUS
MINUS
SEMICOLON
IF
BRACKET_O

kip
MINUS
GREATER

nused
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

hlist_del
BRACKET_O
AMPERSANT

kip
MINUS
GREATER

hlist
BRACKET_C
SEMICOLON
IF
BRACKET_O

hlist_empty
BRACKET_O
AMPERSANT

kprobe_insn_pages
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

INIT_HLIST_NODE
BRACKET_O
AMPERSANT

kip
MINUS
GREATER

hlist
BRACKET_C
SEMICOLON

hlist_add_head
BRACKET_O
AMPERSANT

kip
MINUS
GREATER

hlist
COMMA
AMPERSANT

kprobe_insn_pages
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

module_free
BRACKET_O

NULL
COMMA

kip
MINUS
GREATER

insns
BRACKET_C
SEMICOLON

kfree
BRACKET_O

kip
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__kprobes

collect_garbage_slots
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

kprobe_insn_page
MULT

kip
SEMICOLON
STRUCT

hlist_node
MULT

pos
COMMA
MULT

next
SEMICOLON
IF
BRACKET_O

check_safety
BRACKET_O
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

return
MINUS

EAGAIN
SEMICOLON

hlist_for_each_entry_safe
BRACKET_O

kip
COMMA

pos
COMMA

next
COMMA
AMPERSANT

kprobe_insn_pages
COMMA

hlist
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

kip
MINUS
GREATER

ngarbage
EQ
NUMBER
BRACKET_C
CONTINUE
SEMICOLON

kip
MINUS
GREATER

ngarbage
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

INSNS_PER_PAGE
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

kip
MINUS
GREATER

slot_used
CORNER_BRACKET_O

i
CORNER_BRACKET_C
EQ

SLOT_DIRTY
AND

collect_one_slot
BRACKET_O

kip
COMMA

i
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

kprobe_garbage_slots
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

__kprobes

free_insn_slot
BRACKET_O

kprobe_opcode_t
MULT

slot
COMMA
TYPE_INT

dirty
BRACKET_C
CURLY_BRACKET_O
STRUCT

kprobe_insn_page
MULT

kip
SEMICOLON
STRUCT

hlist_node
MULT

pos
SEMICOLON

hlist_for_each_entry
BRACKET_O

kip
COMMA

pos
COMMA
AMPERSANT

kprobe_insn_pages
COMMA

hlist
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

kip
MINUS
GREATER

insns
LE_EQ

slot
AND

slot
LESS

kip
MINUS
GREATER

insns
PLUS
BRACKET_O

INSNS_PER_PAGE
MULT

MAX_INSN_SIZE
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
OP_ASSIGNMENT
BRACKET_O

slot
MINUS

kip
MINUS
GREATER

insns
BRACKET_C
DIV

MAX_INSN_SIZE
SEMICOLON
IF
BRACKET_O

dirty
BRACKET_C
CURLY_BRACKET_O

kip
MINUS
GREATER

slot_used
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

SLOT_DIRTY
SEMICOLON

kip
MINUS
GREATER

ngarbage
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

collect_one_slot
BRACKET_O

kip
COMMA

i
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

dirty
AND
PLUS
PLUS

kprobe_garbage_slots
GREATER

INSNS_PER_PAGE
BRACKET_C

collect_garbage_slots
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static

inline

void

set_kprobe_instance
BRACKET_O
STRUCT

kprobe
MULT

kp
BRACKET_C
CURLY_BRACKET_O

__get_cpu_var
BRACKET_O

kprobe_instance
BRACKET_C
OP_ASSIGNMENT

kp
SEMICOLON
CURLY_BRACKET_C

static

inline

void

reset_kprobe_instance
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

__get_cpu_var
BRACKET_O

kprobe_instance
BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
STRUCT

kprobe

__kprobes
MULT

get_kprobe
BRACKET_O

void
MULT

addr
BRACKET_C
CURLY_BRACKET_O
STRUCT

hlist_head
MULT

head
SEMICOLON
STRUCT

hlist_node
MULT

node
SEMICOLON
STRUCT

kprobe
MULT

p
SEMICOLON

head
OP_ASSIGNMENT
AMPERSANT

kprobe_table
CORNER_BRACKET_O

hash_ptr
BRACKET_O

addr
COMMA

KPROBE_HASH_BITS
BRACKET_C
CORNER_BRACKET_C
SEMICOLON

hlist_for_each_entry_rcu
BRACKET_O

p
COMMA

node
COMMA

head
COMMA

hlist
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

addr
EQ

addr
BRACKET_C

return

p
SEMICOLON
CURLY_BRACKET_C

return

NULL
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__kprobes

aggr_pre_handler
BRACKET_O
STRUCT

kprobe
MULT

p
COMMA
STRUCT

pt_regs
MULT

regs
BRACKET_C
CURLY_BRACKET_O
STRUCT

kprobe
MULT

kp
SEMICOLON

list_for_each_entry_rcu
BRACKET_O

kp
COMMA
AMPERSANT

p
MINUS
GREATER

list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

kp
MINUS
GREATER

pre_handler
BRACKET_C
CURLY_BRACKET_O

set_kprobe_instance
BRACKET_O

kp
BRACKET_C
SEMICOLON
IF
BRACKET_O

kp
MINUS
GREATER

pre_handler
BRACKET_O

kp
COMMA

regs
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

reset_kprobe_instance
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

__kprobes

aggr_post_handler
BRACKET_O
STRUCT

kprobe
MULT

p
COMMA
STRUCT

pt_regs
MULT

regs
COMMA
TYPE_UNSIGNED
TYPE_LONG

flags
BRACKET_C
CURLY_BRACKET_O
STRUCT

kprobe
MULT

kp
SEMICOLON

list_for_each_entry_rcu
BRACKET_O

kp
COMMA
AMPERSANT

p
MINUS
GREATER

list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

kp
MINUS
GREATER

post_handler
BRACKET_C
CURLY_BRACKET_O

set_kprobe_instance
BRACKET_O

kp
BRACKET_C
SEMICOLON

kp
MINUS
GREATER

post_handler
BRACKET_O

kp
COMMA

regs
COMMA

flags
BRACKET_C
SEMICOLON

reset_kprobe_instance
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

__kprobes

aggr_fault_handler
BRACKET_O
STRUCT

kprobe
MULT

p
COMMA
STRUCT

pt_regs
MULT

regs
COMMA
TYPE_INT

trapnr
BRACKET_C
CURLY_BRACKET_O
STRUCT

kprobe
MULT

cur
OP_ASSIGNMENT

__get_cpu_var
BRACKET_O

kprobe_instance
BRACKET_C
SEMICOLON
IF
BRACKET_O

cur
AND

cur
MINUS
GREATER

fault_handler
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cur
MINUS
GREATER

fault_handler
BRACKET_O

cur
COMMA

regs
COMMA

trapnr
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__kprobes

aggr_break_handler
BRACKET_O
STRUCT

kprobe
MULT

p
COMMA
STRUCT

pt_regs
MULT

regs
BRACKET_C
CURLY_BRACKET_O
STRUCT

kprobe
MULT

cur
OP_ASSIGNMENT

__get_cpu_var
BRACKET_O

kprobe_instance
BRACKET_C
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

cur
AND

cur
MINUS
GREATER

break_handler
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cur
MINUS
GREATER

break_handler
BRACKET_O

cur
COMMA

regs
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

reset_kprobe_instance
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

void

__kprobes

kprobes_inc_nmissed_count
BRACKET_O
STRUCT

kprobe
MULT

p
BRACKET_C
CURLY_BRACKET_O
STRUCT

kprobe
MULT

kp
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

pre_handler
NOT_EQ

aggr_pre_handler
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

nmissed
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

list_for_each_entry_rcu
BRACKET_O

kp
COMMA
AMPERSANT

p
MINUS
GREATER

list
COMMA

list
BRACKET_C

kp
MINUS
GREATER

nmissed
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

return
SEMICOLON
CURLY_BRACKET_C

void

__kprobes

recycle_rp_inst
BRACKET_O
STRUCT

kretprobe_instance
MULT

ri
COMMA
STRUCT

hlist_head
MULT

head
BRACKET_C
CURLY_BRACKET_O

hlist_del
BRACKET_O
AMPERSANT

ri
MINUS
GREATER

hlist
BRACKET_C
SEMICOLON
IF
BRACKET_O

ri
MINUS
GREATER

rp
BRACKET_C
CURLY_BRACKET_O

hlist_del
BRACKET_O
AMPERSANT

ri
MINUS
GREATER

uflist
BRACKET_C
SEMICOLON

INIT_HLIST_NODE
BRACKET_O
AMPERSANT

ri
MINUS
GREATER

uflist
BRACKET_C
SEMICOLON

hlist_add_head
BRACKET_O
AMPERSANT

ri
MINUS
GREATER

uflist
COMMA
AMPERSANT

ri
MINUS
GREATER

rp
MINUS
GREATER

free_instances
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

hlist_add_head
BRACKET_O
AMPERSANT

ri
MINUS
GREATER

hlist
COMMA

head
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

hlist_head

__kprobes
MULT

kretprobe_inst_table_head
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O

return
AMPERSANT

kretprobe_inst_table
CORNER_BRACKET_O

hash_ptr
BRACKET_O

tsk
COMMA

KPROBE_HASH_BITS
BRACKET_C
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__kprobes

kprobe_flush_task
BRACKET_O
STRUCT

task_struct
MULT

tk
BRACKET_C
CURLY_BRACKET_O
STRUCT

kretprobe_instance
MULT

ri
SEMICOLON
STRUCT

hlist_head
MULT

head
COMMA

empty_rp
SEMICOLON
STRUCT

hlist_node
MULT

node
COMMA
MULT

tmp
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
OP_ASSIGNMENT
NUMBER
SEMICOLON

INIT_HLIST_HEAD
BRACKET_O
AMPERSANT

empty_rp
BRACKET_C
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

kretprobe_lock
COMMA

flags
BRACKET_C
SEMICOLON

head
OP_ASSIGNMENT

kretprobe_inst_table_head
BRACKET_O

tk
BRACKET_C
SEMICOLON

hlist_for_each_entry_safe
BRACKET_O

ri
COMMA

node
COMMA

tmp
COMMA

head
COMMA

hlist
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

ri
MINUS
GREATER

task
EQ

tk
BRACKET_C

recycle_rp_inst
BRACKET_O

ri
COMMA
AMPERSANT

empty_rp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

kretprobe_lock
COMMA

flags
BRACKET_C
SEMICOLON

hlist_for_each_entry_safe
BRACKET_O

ri
COMMA

node
COMMA

tmp
COMMA
AMPERSANT

empty_rp
COMMA

hlist
BRACKET_C
CURLY_BRACKET_O

hlist_del
BRACKET_O
AMPERSANT

ri
MINUS
GREATER

hlist
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ri
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline

void

free_rp_inst
BRACKET_O
STRUCT

kretprobe
MULT

rp
BRACKET_C
CURLY_BRACKET_O
STRUCT

kretprobe_instance
MULT

ri
SEMICOLON
STRUCT

hlist_node
MULT

pos
COMMA
MULT

next
SEMICOLON

hlist_for_each_entry_safe
BRACKET_O

ri
COMMA

pos
COMMA

next
COMMA
AMPERSANT

rp
MINUS
GREATER

free_instances
COMMA

uflist
BRACKET_C
CURLY_BRACKET_O

hlist_del
BRACKET_O
AMPERSANT

ri
MINUS
GREATER

uflist
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ri
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline

void

copy_kprobe
BRACKET_O
STRUCT

kprobe
MULT

old_p
COMMA
STRUCT

kprobe
MULT

p
BRACKET_C
CURLY_BRACKET_O

memcpy
BRACKET_O
AMPERSANT

p
MINUS
GREATER

opcode
COMMA
AMPERSANT

old_p
MINUS
GREATER

opcode
COMMA

sizeof
BRACKET_O

kprobe_opcode_t
BRACKET_C
BRACKET_C
SEMICOLON

memcpy
BRACKET_O
AMPERSANT

p
MINUS
GREATER

ainsn
COMMA
AMPERSANT

old_p
MINUS
GREATER

ainsn
COMMA

sizeof
BRACKET_O
STRUCT

arch_specific_insn
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__kprobes

add_new_kprobe
BRACKET_O
STRUCT

kprobe
MULT

old_p
COMMA
STRUCT

kprobe
MULT

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

break_handler
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

old_p
MINUS
GREATER

break_handler
BRACKET_C

return
MINUS

EEXIST
SEMICOLON

list_add_tail_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

list
COMMA
AMPERSANT

old_p
MINUS
GREATER

list
BRACKET_C
SEMICOLON

old_p
MINUS
GREATER

break_handler
OP_ASSIGNMENT

aggr_break_handler
SEMICOLON
CURLY_BRACKET_C
ELSE

list_add_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

list
COMMA
AMPERSANT

old_p
MINUS
GREATER

list
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

post_handler
AND
NOT

old_p
MINUS
GREATER

post_handler
BRACKET_C

old_p
MINUS
GREATER

post_handler
OP_ASSIGNMENT

aggr_post_handler
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline

void

add_aggr_kprobe
BRACKET_O
STRUCT

kprobe
MULT

ap
COMMA
STRUCT

kprobe
MULT

p
BRACKET_C
CURLY_BRACKET_O

copy_kprobe
BRACKET_O

p
COMMA

ap
BRACKET_C
SEMICOLON

flush_insn_slot
BRACKET_O

ap
BRACKET_C
SEMICOLON

ap
MINUS
GREATER

addr
OP_ASSIGNMENT

p
MINUS
GREATER

addr
SEMICOLON

ap
MINUS
GREATER

pre_handler
OP_ASSIGNMENT

aggr_pre_handler
SEMICOLON

ap
MINUS
GREATER

fault_handler
OP_ASSIGNMENT

aggr_fault_handler
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

post_handler
BRACKET_C

ap
MINUS
GREATER

post_handler
OP_ASSIGNMENT

aggr_post_handler
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

break_handler
BRACKET_C

ap
MINUS
GREATER

break_handler
OP_ASSIGNMENT

aggr_break_handler
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

ap
MINUS
GREATER

list
BRACKET_C
SEMICOLON

list_add_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

list
COMMA
AMPERSANT

ap
MINUS
GREATER

list
BRACKET_C
SEMICOLON

hlist_replace_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

hlist
COMMA
AMPERSANT

ap
MINUS
GREATER

hlist
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__kprobes

register_aggr_kprobe
BRACKET_O
STRUCT

kprobe
MULT

old_p
COMMA
STRUCT

kprobe
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

kprobe
MULT

ap
SEMICOLON
IF
BRACKET_O

old_p
MINUS
GREATER

pre_handler
EQ

aggr_pre_handler
BRACKET_C
CURLY_BRACKET_O

copy_kprobe
BRACKET_O

old_p
COMMA

p
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

add_new_kprobe
BRACKET_O

old_p
COMMA

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

ap
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

kprobe
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ap
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

add_aggr_kprobe
BRACKET_O

ap
COMMA

old_p
BRACKET_C
SEMICOLON

copy_kprobe
BRACKET_O

ap
COMMA

p
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

add_new_kprobe
BRACKET_O

ap
COMMA

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__kprobes

in_kprobes_functions
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

addr
GR_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__kprobes_text_start
AND

addr
LESS
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__kprobes_text_end
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__kprobes

__register_kprobe
BRACKET_O
STRUCT

kprobe
MULT

p
COMMA
TYPE_UNSIGNED
TYPE_LONG

called_from
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

kprobe
MULT

old_p
SEMICOLON
STRUCT

module
MULT

probed_mod
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

symbol_name
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

addr
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

kprobe_lookup_name
BRACKET_O

p
MINUS
GREATER

symbol_name
COMMA

p
MINUS
GREATER

addr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

p
MINUS
GREATER

addr
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

p
MINUS
GREATER

addr
OP_ASSIGNMENT
BRACKET_O

kprobe_opcode_t
MULT
BRACKET_C
BRACKET_O
BRACKET_O
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

p
MINUS
GREATER

addr
BRACKET_C
PLUS

p
MINUS
GREATER

offset
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

kernel_text_address
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

p
MINUS
GREATER

addr
BRACKET_C
OR

in_kprobes_functions
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

p
MINUS
GREATER

addr
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

p
MINUS
GREATER

mod_refcounted
OP_ASSIGNMENT
NUMBER
SEMICOLON

probed_mod
OP_ASSIGNMENT

module_text_address
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

p
MINUS
GREATER

addr
BRACKET_C
SEMICOLON
IF
BRACKET_O

probed_mod
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

calling_mod
OP_ASSIGNMENT

module_text_address
BRACKET_O

called_from
BRACKET_C
SEMICOLON
IF
BRACKET_O

calling_mod
AND

calling_mod
NOT_EQ

probed_mod
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O
NOT

try_module_get
BRACKET_O

probed_mod
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

p
MINUS
GREATER

mod_refcounted
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE

probed_mod
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

p
MINUS
GREATER

nmissed
OP_ASSIGNMENT
NUMBER
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON

old_p
OP_ASSIGNMENT

get_kprobe
BRACKET_O

p
MINUS
GREATER

addr
BRACKET_C
SEMICOLON
IF
BRACKET_O

old_p
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

register_aggr_kprobe
BRACKET_O

old_p
COMMA

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C

atomic_inc
BRACKET_O
AMPERSANT

kprobe_count
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

ret
OP_ASSIGNMENT

arch_prepare_kprobe
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

goto

out
SEMICOLON

INIT_HLIST_NODE
BRACKET_O
AMPERSANT

p
MINUS
GREATER

hlist
BRACKET_C
SEMICOLON

hlist_add_head_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

hlist
COMMA
AMPERSANT

kprobe_table
CORNER_BRACKET_O

hash_ptr
BRACKET_O

p
MINUS
GREATER

addr
COMMA

KPROBE_HASH_BITS
BRACKET_C
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

kprobe_enabled
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

atomic_add_return
BRACKET_O
NUMBER
COMMA
AMPERSANT

kprobe_count
BRACKET_C
EQ
BACKLASHED_NEWLINE
BRACKET_O

ARCH_INACTIVE_KPROBE_COUNT
PLUS
NUMBER
BRACKET_C
BRACKET_C

register_page_fault_notifier
BRACKET_O
AMPERSANT

kprobe_page_fault_nb
BRACKET_C
SEMICOLON

arch_arm_kprobe
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

out
COLON

mutex_unlock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
AND

probed_mod
BRACKET_C

module_put
BRACKET_O

probed_mod
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__kprobes

register_kprobe
BRACKET_O
STRUCT

kprobe
MULT

p
BRACKET_C
CURLY_BRACKET_O

return

__register_kprobe
BRACKET_O

p
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__kprobes

unregister_kprobe
BRACKET_O
STRUCT

kprobe
MULT

p
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON
STRUCT

kprobe
MULT

old_p
COMMA
MULT

list_p
SEMICOLON
TYPE_INT

cleanup_p
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON

old_p
OP_ASSIGNMENT

get_kprobe
BRACKET_O

p
MINUS
GREATER

addr
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

old_p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

p
NOT_EQ

old_p
BRACKET_C
CURLY_BRACKET_O

list_for_each_entry_rcu
BRACKET_O

list_p
COMMA
AMPERSANT

old_p
MINUS
GREATER

list
COMMA

list
BRACKET_C
IF
BRACKET_O

list_p
EQ

p
BRACKET_C

goto

valid_p
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

valid_p
COLON
IF
BRACKET_O

old_p
EQ

p
OR
BRACKET_O

old_p
MINUS
GREATER

pre_handler
EQ

aggr_pre_handler
AND

p
MINUS
GREATER

list
DOT

next
EQ
AMPERSANT

old_p
MINUS
GREATER

list
AND

p
MINUS
GREATER

list
DOT

prev
EQ
AMPERSANT

old_p
MINUS
GREATER

list
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

kprobe_enabled
BRACKET_C

arch_disarm_kprobe
BRACKET_O

p
BRACKET_C
SEMICOLON

hlist_del_rcu
BRACKET_O
AMPERSANT

old_p
MINUS
GREATER

hlist
BRACKET_C
SEMICOLON

cleanup_p
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

list_del_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

list
BRACKET_C
SEMICOLON

cleanup_p
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON

synchronize_sched
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

mod_refcounted
BRACKET_C
CURLY_BRACKET_O

mod
OP_ASSIGNMENT

module_text_address
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

p
MINUS
GREATER

addr
BRACKET_C
SEMICOLON
IF
BRACKET_O

mod
BRACKET_C

module_put
BRACKET_O

mod
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

cleanup_p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
NOT_EQ

old_p
BRACKET_C
CURLY_BRACKET_O

list_del_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

list
BRACKET_C
SEMICOLON

kfree
BRACKET_O

old_p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

arch_remove_kprobe
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

mutex_lock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

break_handler
BRACKET_C

old_p
MINUS
GREATER

break_handler
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

post_handler
BRACKET_C
CURLY_BRACKET_O

list_for_each_entry_rcu
BRACKET_O

list_p
COMMA
AMPERSANT

old_p
MINUS
GREATER

list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

list_p
MINUS
GREATER

post_handler
BRACKET_C
CURLY_BRACKET_O

cleanup_p
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

cleanup_p
EQ
NUMBER
BRACKET_C

old_p
MINUS
GREATER

post_handler
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

mutex_lock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_add_return
BRACKET_O
MINUS
NUMBER
COMMA
AMPERSANT

kprobe_count
BRACKET_C
EQ
BACKLASHED_NEWLINE

ARCH_INACTIVE_KPROBE_COUNT
BRACKET_C

unregister_page_fault_notifier
BRACKET_O
AMPERSANT

kprobe_page_fault_nb
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

notifier_block

kprobe_exceptions_nb
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

notifier_call
OP_ASSIGNMENT

kprobe_exceptions_notify
COMMA
DOT

priority
OP_ASSIGNMENT
NUMBER

x7fffffff
CURLY_BRACKET_C
SEMICOLON
TYPE_INT

__kprobes

register_jprobe
BRACKET_O
STRUCT

jprobe
MULT

jp
BRACKET_C
CURLY_BRACKET_O

jp
MINUS
GREATER

kp
DOT

pre_handler
OP_ASSIGNMENT

setjmp_pre_handler
SEMICOLON

jp
MINUS
GREATER

kp
DOT

break_handler
OP_ASSIGNMENT

longjmp_break_handler
SEMICOLON

return

__register_kprobe
BRACKET_O
AMPERSANT

jp
MINUS
GREATER

kp
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__kprobes

unregister_jprobe
BRACKET_O
STRUCT

jprobe
MULT

jp
BRACKET_C
CURLY_BRACKET_O

unregister_kprobe
BRACKET_O
AMPERSANT

jp
MINUS
GREATER

kp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

ARCH_SUPPORTS_KRETPROBES

static
TYPE_INT

__kprobes

pre_handler_kretprobe
BRACKET_O
STRUCT

kprobe
MULT

p
COMMA
STRUCT

pt_regs
MULT

regs
BRACKET_C
CURLY_BRACKET_O
STRUCT

kretprobe
MULT

rp
OP_ASSIGNMENT

container_of
BRACKET_O

p
COMMA
STRUCT

kretprobe
COMMA

kp
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

kretprobe_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

hlist_empty
BRACKET_O
AMPERSANT

rp
MINUS
GREATER

free_instances
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

kretprobe_instance
MULT

ri
SEMICOLON

ri
OP_ASSIGNMENT

hlist_entry
BRACKET_O

rp
MINUS
GREATER

free_instances
DOT

first
COMMA
STRUCT

kretprobe_instance
COMMA

uflist
BRACKET_C
SEMICOLON

ri
MINUS
GREATER

rp
OP_ASSIGNMENT

rp
SEMICOLON

ri
MINUS
GREATER

task
OP_ASSIGNMENT

current
SEMICOLON

arch_prepare_kretprobe
BRACKET_O

ri
COMMA

regs
BRACKET_C
SEMICOLON

hlist_del
BRACKET_O
AMPERSANT

ri
MINUS
GREATER

uflist
BRACKET_C
SEMICOLON

hlist_add_head
BRACKET_O
AMPERSANT

ri
MINUS
GREATER

uflist
COMMA
AMPERSANT

ri
MINUS
GREATER

rp
MINUS
GREATER

used_instances
BRACKET_C
SEMICOLON

hlist_add_head
BRACKET_O
AMPERSANT

ri
MINUS
GREATER

hlist
COMMA

kretprobe_inst_table_head
BRACKET_O

ri
MINUS
GREATER

task
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

rp
MINUS
GREATER

nmissed
PLUS
PLUS
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

kretprobe_lock
COMMA

flags
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__kprobes

register_kretprobe
BRACKET_O
STRUCT

kretprobe
MULT

rp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

kretprobe_instance
MULT

inst
SEMICOLON
TYPE_INT

i
SEMICOLON

rp
MINUS
GREATER

kp
DOT

pre_handler
OP_ASSIGNMENT

pre_handler_kretprobe
SEMICOLON

rp
MINUS
GREATER

kp
DOT

post_handler
OP_ASSIGNMENT

NULL
SEMICOLON

rp
MINUS
GREATER

kp
DOT

fault_handler
OP_ASSIGNMENT

NULL
SEMICOLON

rp
MINUS
GREATER

kp
DOT

break_handler
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

rp
MINUS
GREATER

maxactive
LE_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_PREEMPT

rp
MINUS
GREATER

maxactive
OP_ASSIGNMENT

max
BRACKET_O
NUMBER
COMMA
NUMBER
MULT

NR_CPUS
BRACKET_C
SEMICOLON
PP_ELSE

rp
MINUS
GREATER

maxactive
OP_ASSIGNMENT

NR_CPUS
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

INIT_HLIST_HEAD
BRACKET_O
AMPERSANT

rp
MINUS
GREATER

used_instances
BRACKET_C
SEMICOLON

INIT_HLIST_HEAD
BRACKET_O
AMPERSANT

rp
MINUS
GREATER

free_instances
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

rp
MINUS
GREATER

maxactive
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

inst
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

kretprobe_instance
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

inst
EQ

NULL
BRACKET_C
CURLY_BRACKET_O

free_rp_inst
BRACKET_O

rp
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

INIT_HLIST_NODE
BRACKET_O
AMPERSANT

inst
MINUS
GREATER

uflist
BRACKET_C
SEMICOLON

hlist_add_head
BRACKET_O
AMPERSANT

inst
MINUS
GREATER

uflist
COMMA
AMPERSANT

rp
MINUS
GREATER

free_instances
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

rp
MINUS
GREATER

nmissed
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O

ret
OP_ASSIGNMENT

__register_kprobe
BRACKET_O
AMPERSANT

rp
MINUS
GREATER

kp
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

free_rp_inst
BRACKET_O

rp
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_ELSE
TYPE_INT

__kprobes

register_kretprobe
BRACKET_O
STRUCT

kretprobe
MULT

rp
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__kprobes

pre_handler_kretprobe
BRACKET_O
STRUCT

kprobe
MULT

p
COMMA
STRUCT

pt_regs
MULT

regs
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

void

__kprobes

unregister_kretprobe
BRACKET_O
STRUCT

kretprobe
MULT

rp
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

kretprobe_instance
MULT

ri
SEMICOLON
STRUCT

hlist_node
MULT

pos
COMMA
MULT

next
SEMICOLON

unregister_kprobe
BRACKET_O
AMPERSANT

rp
MINUS
GREATER

kp
BRACKET_C
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

kretprobe_lock
COMMA

flags
BRACKET_C
SEMICOLON

hlist_for_each_entry_safe
BRACKET_O

ri
COMMA

pos
COMMA

next
COMMA
AMPERSANT

rp
MINUS
GREATER

used_instances
COMMA

uflist
BRACKET_C
CURLY_BRACKET_O

ri
MINUS
GREATER

rp
OP_ASSIGNMENT

NULL
SEMICOLON

hlist_del
BRACKET_O
AMPERSANT

ri
MINUS
GREATER

uflist
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

kretprobe_lock
COMMA

flags
BRACKET_C
SEMICOLON

free_rp_inst
BRACKET_O

rp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__init

init_kprobes
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

err
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

KPROBE_TABLE_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

INIT_HLIST_HEAD
BRACKET_O
AMPERSANT

kprobe_table
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

INIT_HLIST_HEAD
BRACKET_O
AMPERSANT

kretprobe_inst_table
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

atomic_set
BRACKET_O
AMPERSANT

kprobe_count
COMMA
NUMBER
BRACKET_C
SEMICOLON

kprobe_enabled
OP_ASSIGNMENT

true
SEMICOLON

err
OP_ASSIGNMENT

arch_init_kprobes
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

err
BRACKET_C

err
OP_ASSIGNMENT

register_die_notifier
BRACKET_O
AMPERSANT

kprobe_exceptions_nb
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_DEBUG_FS

static

void

__kprobes

report_probe
BRACKET_O
STRUCT

seq_file
MULT

pi
COMMA
STRUCT

kprobe
MULT

p
COMMA
CONST
TYPE_CHAR
MULT

sym
COMMA
TYPE_INT

offset
COMMA
TYPE_CHAR
MULT

modname
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

kprobe_type
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

pre_handler
EQ

pre_handler_kretprobe
BRACKET_C

kprobe_type
OP_ASSIGNMENT
STRING
SEMICOLON
ELSE
IF
BRACKET_O

p
MINUS
GREATER

pre_handler
EQ

setjmp_pre_handler
BRACKET_C

kprobe_type
OP_ASSIGNMENT
STRING
SEMICOLON
ELSE

kprobe_type
OP_ASSIGNMENT
STRING
SEMICOLON
IF
BRACKET_O

sym
BRACKET_C

seq_printf
BRACKET_O

pi
COMMA
STRING
COMMA

p
MINUS
GREATER

addr
COMMA

kprobe_type
COMMA

sym
COMMA

offset
COMMA
BRACKET_O

modname
QUESTION_MARK

modname
COLON
STRING
BRACKET_C
BRACKET_C
SEMICOLON
ELSE

seq_printf
BRACKET_O

pi
COMMA
STRING
COMMA

p
MINUS
GREATER

addr
COMMA

kprobe_type
COMMA

p
MINUS
GREATER

addr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

__kprobes
MULT

kprobe_seq_start
BRACKET_O
STRUCT

seq_file
MULT

f
COMMA

loff_t
MULT

pos
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O
MULT

pos
LESS

KPROBE_TABLE_SIZE
BRACKET_C
QUESTION_MARK

pos
COLON

NULL
SEMICOLON
CURLY_BRACKET_C

static

void

__kprobes
MULT

kprobe_seq_next
BRACKET_O
STRUCT

seq_file
MULT

f
COMMA

void
MULT

v
COMMA

loff_t
MULT

pos
BRACKET_C
CURLY_BRACKET_O
BRACKET_O
MULT

pos
BRACKET_C
PLUS
PLUS
SEMICOLON
IF
BRACKET_O
MULT

pos
GR_EQ

KPROBE_TABLE_SIZE
BRACKET_C

return

NULL
SEMICOLON

return

pos
SEMICOLON
CURLY_BRACKET_C

static

void

__kprobes

kprobe_seq_stop
BRACKET_O
STRUCT

seq_file
MULT

f
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static
TYPE_INT

__kprobes

show_kprobe_addr
BRACKET_O
STRUCT

seq_file
MULT

pi
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O
STRUCT

hlist_head
MULT

head
SEMICOLON
STRUCT

hlist_node
MULT

node
SEMICOLON
STRUCT

kprobe
MULT

p
COMMA
MULT

kp
SEMICOLON
CONST
TYPE_CHAR
MULT

sym
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

i
OP_ASSIGNMENT
MULT
BRACKET_O

loff_t
MULT
BRACKET_C

v
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

offset
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_CHAR
MULT

modname
COMMA

namebuf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

head
OP_ASSIGNMENT
AMPERSANT

kprobe_table
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

hlist_for_each_entry_rcu
BRACKET_O

p
COMMA

node
COMMA

head
COMMA

hlist
BRACKET_C
CURLY_BRACKET_O

sym
OP_ASSIGNMENT

kallsyms_lookup
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

p
MINUS
GREATER

addr
COMMA

NULL
COMMA
AMPERSANT

offset
COMMA
AMPERSANT

modname
COMMA

namebuf
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

pre_handler
EQ

aggr_pre_handler
BRACKET_C
CURLY_BRACKET_O

list_for_each_entry_rcu
BRACKET_O

kp
COMMA
AMPERSANT

p
MINUS
GREATER

list
COMMA

list
BRACKET_C

report_probe
BRACKET_O

pi
COMMA

kp
COMMA

sym
COMMA

offset
COMMA

modname
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

report_probe
BRACKET_O

pi
COMMA

p
COMMA

sym
COMMA

offset
COMMA

modname
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

seq_operations

kprobes_seq_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

start
OP_ASSIGNMENT

kprobe_seq_start
COMMA
DOT

next
OP_ASSIGNMENT

kprobe_seq_next
COMMA
DOT

stop
OP_ASSIGNMENT

kprobe_seq_stop
COMMA
DOT

show
OP_ASSIGNMENT

show_kprobe_addr
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__kprobes

kprobes_open
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

filp
BRACKET_C
CURLY_BRACKET_O

return

seq_open
BRACKET_O

filp
COMMA
AMPERSANT

kprobes_seq_ops
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

file_operations

debugfs_kprobes_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

open
OP_ASSIGNMENT

kprobes_open
COMMA
DOT

read
OP_ASSIGNMENT

seq_read
COMMA
DOT

llseek
OP_ASSIGNMENT

seq_lseek
COMMA
DOT

release
OP_ASSIGNMENT

seq_release
COMMA
CURLY_BRACKET_C
SEMICOLON

static

void

__kprobes

enable_all_kprobes
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

hlist_head
MULT

head
SEMICOLON
STRUCT

hlist_node
MULT

node
SEMICOLON
STRUCT

kprobe
MULT

p
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

kprobe_enabled
BRACKET_C

goto

already_enabled
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

kprobe_count
BRACKET_C
GREATER

ARCH_INACTIVE_KPROBE_COUNT
BRACKET_C

register_page_fault_notifier
BRACKET_O
AMPERSANT

kprobe_page_fault_nb
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

KPROBE_TABLE_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

head
OP_ASSIGNMENT
AMPERSANT

kprobe_table
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

hlist_for_each_entry_rcu
BRACKET_O

p
COMMA

node
COMMA

head
COMMA

hlist
BRACKET_C

arch_arm_kprobe
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

kprobe_enabled
OP_ASSIGNMENT

true
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
BRACKET_C
SEMICOLON

already_enabled
COLON

mutex_unlock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

static

void

__kprobes

disable_all_kprobes
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

hlist_head
MULT

head
SEMICOLON
STRUCT

hlist_node
MULT

node
SEMICOLON
STRUCT

kprobe
MULT

p
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

kprobe_enabled
BRACKET_C

goto

already_disabled
SEMICOLON

kprobe_enabled
OP_ASSIGNMENT

false
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

KPROBE_TABLE_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

head
OP_ASSIGNMENT
AMPERSANT

kprobe_table
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

hlist_for_each_entry_rcu
BRACKET_O

p
COMMA

node
COMMA

head
COMMA

hlist
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

arch_trampoline_kprobe
BRACKET_O

p
BRACKET_C
BRACKET_C

arch_disarm_kprobe
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON

synchronize_sched
BRACKET_O
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON

unregister_page_fault_notifier
BRACKET_O
AMPERSANT

kprobe_page_fault_nb
BRACKET_C
SEMICOLON

already_disabled
COLON

mutex_unlock
BRACKET_O
AMPERSANT

kprobe_mutex
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

read_enabled_file_bool
BRACKET_O
STRUCT

file
MULT

file
COMMA
TYPE_CHAR

__user
MULT

user_buf
COMMA

size_t

count
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

kprobe_enabled
BRACKET_C

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
ELSE

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER

x00
SEMICOLON

return

simple_read_from_buffer
BRACKET_O

user_buf
COMMA

count
COMMA

ppos
COMMA

buf
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

write_enabled_file_bool
BRACKET_O
STRUCT

file
MULT

file
COMMA
CONST
TYPE_CHAR

__user
MULT

user_buf
COMMA

size_t

count
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

buf_size
SEMICOLON

buf_size
OP_ASSIGNMENT

min
BRACKET_O

count
COMMA
BRACKET_O

sizeof
BRACKET_O

buf
BRACKET_C
MINUS
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O

buf
COMMA

user_buf
COMMA

buf_size
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
SWITCH
BRACKET_O

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

case
QUOTED_CHAR
COLON

case
QUOTED_CHAR
COLON

case
QUOTED_CHAR
COLON

enable_all_kprobes
BRACKET_O
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case
QUOTED_CHAR
COLON

case
QUOTED_CHAR
COLON

case
QUOTED_CHAR
COLON

disable_all_kprobes
BRACKET_O
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

count
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

file_operations

fops_kp
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

read
OP_ASSIGNMENT

read_enabled_file_bool
COMMA
DOT

write
OP_ASSIGNMENT

write_enabled_file_bool
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__kprobes

debugfs_kprobe_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

dentry
MULT

dir
COMMA
MULT

file
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

value
OP_ASSIGNMENT
NUMBER
SEMICOLON

dir
OP_ASSIGNMENT

debugfs_create_dir
BRACKET_O
STRING
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

dir
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

file
OP_ASSIGNMENT

debugfs_create_file
BRACKET_O
STRING
COMMA
NUMBER
COMMA

dir
COMMA

NULL
COMMA
AMPERSANT

debugfs_kprobes_operations
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

file
BRACKET_C
CURLY_BRACKET_O

debugfs_remove
BRACKET_O

dir
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

file
OP_ASSIGNMENT

debugfs_create_file
BRACKET_O
STRING
COMMA
NUMBER
COMMA

dir
COMMA
AMPERSANT

value
COMMA
AMPERSANT

fops_kp
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

file
BRACKET_C
CURLY_BRACKET_O

debugfs_remove
BRACKET_O

dir
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

late_initcall
BRACKET_O

debugfs_kprobe_init
BRACKET_C
SEMICOLON
PP_ENDIF

module_init
BRACKET_O

init_kprobes
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

register_kprobe
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

unregister_kprobe
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

register_jprobe
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

unregister_jprobe
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

jprobe_return
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

register_kretprobe
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

unregister_kretprobe
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_DEFINE

KERNEL_ATTR_RO
BRACKET_O

_name
BRACKET_C
BACKLASHED_NEWLINE

static
STRUCT

subsys_attribute

_name
DOUBLE_HASH

_attr
OP_ASSIGNMENT

__ATTR_RO
BRACKET_O

_name
BRACKET_C
PP_DEFINE

KERNEL_ATTR_RW
BRACKET_O

_name
BRACKET_C
BACKLASHED_NEWLINE

static
STRUCT

subsys_attribute

_name
DOUBLE_HASH

_attr
OP_ASSIGNMENT
BACKLASHED_NEWLINE

__ATTR
BRACKET_O

_name
COMMA
NUMBER
COMMA

_name
DOUBLE_HASH

_show
COMMA

_name
DOUBLE_HASH

_store
BRACKET_C
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_HOTPLUG
BRACKET_C
AND
PP_DEFINED
BRACKET_O

CONFIG_NET
BRACKET_C

static

ssize_t

uevent_seqnum_show
BRACKET_O
STRUCT

kset
MULT

kset
COMMA
TYPE_CHAR
MULT

page
BRACKET_C
CURLY_BRACKET_O

return

sprintf
BRACKET_O

page
COMMA
STRING
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

uevent_seqnum
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

KERNEL_ATTR_RO
BRACKET_O

uevent_seqnum
BRACKET_C
SEMICOLON

static

ssize_t

uevent_helper_show
BRACKET_O
STRUCT

kset
MULT

kset
COMMA
TYPE_CHAR
MULT

page
BRACKET_C
CURLY_BRACKET_O

return

sprintf
BRACKET_O

page
COMMA
STRING
COMMA

uevent_helper
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

uevent_helper_store
BRACKET_O
STRUCT

kset
MULT

kset
COMMA
CONST
TYPE_CHAR
MULT

page
COMMA

size_t

count
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

count
PLUS
NUMBER
GREATER

UEVENT_HELPER_PATH_LEN
BRACKET_C

return
MINUS

ENOENT
SEMICOLON

memcpy
BRACKET_O

uevent_helper
COMMA

page
COMMA

count
BRACKET_C
SEMICOLON

uevent_helper
CORNER_BRACKET_O

count
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

count
AND

uevent_helper
CORNER_BRACKET_O

count
MINUS
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

uevent_helper
CORNER_BRACKET_O

count
MINUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

return

count
SEMICOLON
CURLY_BRACKET_C

KERNEL_ATTR_RW
BRACKET_O

uevent_helper
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_KEXEC

static

ssize_t

kexec_loaded_show
BRACKET_O
STRUCT

kset
MULT

kset
COMMA
TYPE_CHAR
MULT

page
BRACKET_C
CURLY_BRACKET_O

return

sprintf
BRACKET_O

page
COMMA
STRING
COMMA
NOT
NOT

kexec_image
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

KERNEL_ATTR_RO
BRACKET_O

kexec_loaded
BRACKET_C
SEMICOLON

static

ssize_t

kexec_crash_loaded_show
BRACKET_O
STRUCT

kset
MULT

kset
COMMA
TYPE_CHAR
MULT

page
BRACKET_C
CURLY_BRACKET_O

return

sprintf
BRACKET_O

page
COMMA
STRING
COMMA
NOT
NOT

kexec_crash_image
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

KERNEL_ATTR_RO
BRACKET_O

kexec_crash_loaded
BRACKET_C
SEMICOLON
PP_ENDIF

decl_subsys
BRACKET_O

kernel
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

kernel_subsys
BRACKET_C
SEMICOLON

static
STRUCT

attribute
MULT

kernel_attrs
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_HOTPLUG
BRACKET_C
AND
PP_DEFINED
BRACKET_O

CONFIG_NET
BRACKET_C
AMPERSANT

uevent_seqnum_attr
DOT

attr
COMMA
AMPERSANT

uevent_helper_attr
DOT

attr
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_KEXEC
AMPERSANT

kexec_loaded_attr
DOT

attr
COMMA
AMPERSANT

kexec_crash_loaded_attr
DOT

attr
COMMA
PP_ENDIF

NULL
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

attribute_group

kernel_attr_group
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

attrs
OP_ASSIGNMENT

kernel_attrs
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__init

ksysfs_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
OP_ASSIGNMENT

subsystem_register
BRACKET_O
AMPERSANT

kernel_subsys
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
BRACKET_C

error
OP_ASSIGNMENT

sysfs_create_group
BRACKET_O
AMPERSANT

kernel_subsys
DOT

kobj
COMMA
AMPERSANT

kernel_attr_group
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C

core_initcall
BRACKET_O

ksysfs_init
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static

DEFINE_SPINLOCK
BRACKET_O

kthread_create_lock
BRACKET_C
SEMICOLON

static

LIST_HEAD
BRACKET_O

kthread_create_list
BRACKET_C
SEMICOLON
STRUCT

task_struct
MULT

kthreadd_task
SEMICOLON
STRUCT

kthread_create_info
CURLY_BRACKET_O
TYPE_INT
BRACKET_O
MULT

threadfn
BRACKET_C
BRACKET_O

void
MULT

data
BRACKET_C
SEMICOLON

void
MULT

data
SEMICOLON
STRUCT

completion

started
SEMICOLON
STRUCT

task_struct
MULT

result
SEMICOLON
STRUCT

completion

done
SEMICOLON
STRUCT

list_head

list
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

kthread_stop_info
CURLY_BRACKET_O
STRUCT

task_struct
MULT

k
SEMICOLON
TYPE_INT

err
SEMICOLON
STRUCT

completion

done
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static

DEFINE_MUTEX
BRACKET_O

kthread_stop_lock
BRACKET_C
SEMICOLON

static
STRUCT

kthread_stop_info

kthread_stop_info
SEMICOLON
TYPE_INT

kthread_should_stop
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O

kthread_stop_info
DOT

k
EQ

current
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

kthread_should_stop
BRACKET_C
SEMICOLON

static
TYPE_INT

kthread
BRACKET_O

void
MULT

_create
BRACKET_C
CURLY_BRACKET_O
STRUCT

kthread_create_info
MULT

create
OP_ASSIGNMENT

_create
SEMICOLON
TYPE_INT
BRACKET_O
MULT

threadfn
BRACKET_C
BRACKET_O

void
MULT

data
BRACKET_C
SEMICOLON

void
MULT

data
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
MINUS

EINTR
SEMICOLON

threadfn
OP_ASSIGNMENT

create
MINUS
GREATER

threadfn
SEMICOLON

data
OP_ASSIGNMENT

create
MINUS
GREATER

data
SEMICOLON

__set_current_state
BRACKET_O

TASK_UNINTERRUPTIBLE
BRACKET_C
SEMICOLON

complete
BRACKET_O
AMPERSANT

create
MINUS
GREATER

started
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT

threadfn
BRACKET_O

data
BRACKET_C
SEMICOLON
IF
BRACKET_O

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kthread_stop_info
DOT

err
OP_ASSIGNMENT

ret
SEMICOLON

complete
BRACKET_O
AMPERSANT

kthread_stop_info
DOT

done
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

create_kthread
BRACKET_O
STRUCT

kthread_create_info
MULT

create
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

pid
SEMICOLON

pid
OP_ASSIGNMENT

kernel_thread
BRACKET_O

kthread
COMMA

create
COMMA

CLONE_FS
LOGICAL_OR

CLONE_FILES
LOGICAL_OR

SIGCHLD
BRACKET_C
SEMICOLON
IF
BRACKET_O

pid
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

create
MINUS
GREATER

result
OP_ASSIGNMENT

ERR_PTR
BRACKET_O

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

wait_for_completion
BRACKET_O
AMPERSANT

create
MINUS
GREATER

started
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

create
MINUS
GREATER

result
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

complete
BRACKET_O
AMPERSANT

create
MINUS
GREATER

done
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

task_struct
MULT

kthread_create
BRACKET_O
TYPE_INT
BRACKET_O
MULT

threadfn
BRACKET_C
BRACKET_O

void
MULT

data
BRACKET_C
COMMA

void
MULT

data
COMMA
CONST
TYPE_CHAR

namefmt
CORNER_BRACKET_O
CORNER_BRACKET_C
COMMA
DOT
DOT
DOT
BRACKET_C
CURLY_BRACKET_O
STRUCT

kthread_create_info

create
SEMICOLON

create
DOT

threadfn
OP_ASSIGNMENT

threadfn
SEMICOLON

create
DOT

data
OP_ASSIGNMENT

data
SEMICOLON

init_completion
BRACKET_O
AMPERSANT

create
DOT

started
BRACKET_C
SEMICOLON

init_completion
BRACKET_O
AMPERSANT

create
DOT

done
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

kthread_create_lock
BRACKET_C
SEMICOLON

list_add_tail
BRACKET_O
AMPERSANT

create
DOT

list
COMMA
AMPERSANT

kthread_create_list
BRACKET_C
SEMICOLON

wake_up_process
BRACKET_O

kthreadd_task
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

kthread_create_lock
BRACKET_C
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

create
DOT

done
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

IS_ERR
BRACKET_O

create
DOT

result
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

va_list

args
SEMICOLON

va_start
BRACKET_O

args
COMMA

namefmt
BRACKET_C
SEMICOLON

vsnprintf
BRACKET_O

create
DOT

result
MINUS
GREATER

comm
COMMA

sizeof
BRACKET_O

create
DOT

result
MINUS
GREATER

comm
BRACKET_C
COMMA

namefmt
COMMA

args
BRACKET_C
SEMICOLON

va_end
BRACKET_O

args
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

create
DOT

result
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

kthread_create
BRACKET_C
SEMICOLON

void

kthread_bind
BRACKET_O
STRUCT

task_struct
MULT

k
COMMA
TYPE_UNSIGNED
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

k
MINUS
GREATER

state
NOT_EQ

TASK_UNINTERRUPTIBLE
BRACKET_C
CURLY_BRACKET_O

WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

wait_task_inactive
BRACKET_O

k
BRACKET_C
SEMICOLON

set_task_cpu
BRACKET_O

k
COMMA

cpu
BRACKET_C
SEMICOLON

k
MINUS
GREATER

cpus_allowed
OP_ASSIGNMENT

cpumask_of_cpu
BRACKET_O

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

kthread_bind
BRACKET_C
SEMICOLON
TYPE_INT

kthread_stop
BRACKET_O
STRUCT

task_struct
MULT

k
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

kthread_stop_lock
BRACKET_C
SEMICOLON

get_task_struct
BRACKET_O

k
BRACKET_C
SEMICOLON

init_completion
BRACKET_O
AMPERSANT

kthread_stop_info
DOT

done
BRACKET_C
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON

kthread_stop_info
DOT

k
OP_ASSIGNMENT

k
SEMICOLON

wake_up_process
BRACKET_O

k
BRACKET_C
SEMICOLON

put_task_struct
BRACKET_O

k
BRACKET_C
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

kthread_stop_info
DOT

done
BRACKET_C
SEMICOLON

kthread_stop_info
DOT

k
OP_ASSIGNMENT

NULL
SEMICOLON

ret
OP_ASSIGNMENT

kthread_stop_info
DOT

err
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

kthread_stop_lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

kthread_stop
BRACKET_C
SEMICOLON

static

__init

void

kthreadd_setup
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON

set_task_comm
BRACKET_O

tsk
COMMA
STRING
BRACKET_C
SEMICOLON

ignore_signals
BRACKET_O

tsk
BRACKET_C
SEMICOLON

set_user_nice
BRACKET_O

tsk
COMMA
MINUS
NUMBER
BRACKET_C
SEMICOLON

set_cpus_allowed
BRACKET_O

tsk
COMMA

CPU_MASK_ALL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

kthreadd
BRACKET_O

void
MULT

unused
BRACKET_C
CURLY_BRACKET_O

kthreadd_setup
BRACKET_O
BRACKET_C
SEMICOLON

current
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_NOFREEZE
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

kthread_create_list
BRACKET_C
BRACKET_C

schedule
BRACKET_O
BRACKET_C
SEMICOLON

__set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

kthread_create_lock
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

kthread_create_list
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

kthread_create_info
MULT

create
SEMICOLON

create
OP_ASSIGNMENT

list_entry
BRACKET_O

kthread_create_list
DOT

next
COMMA
STRUCT

kthread_create_info
COMMA

list
BRACKET_C
SEMICOLON

list_del_init
BRACKET_O
AMPERSANT

create
MINUS
GREATER

list
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

kthread_create_lock
BRACKET_C
SEMICOLON

create_kthread
BRACKET_O

create
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

kthread_create_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

kthread_create_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
STRUCT

latency_info
CURLY_BRACKET_O
STRUCT

list_head

list
SEMICOLON
TYPE_INT

usecs
SEMICOLON
TYPE_CHAR
MULT

identifier
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static

atomic_t

current_max_latency
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

latency_lock
BRACKET_C
SEMICOLON

static

LIST_HEAD
BRACKET_O

latency_list
BRACKET_C
SEMICOLON

static

BLOCKING_NOTIFIER_HEAD
BRACKET_O

latency_notifier
BRACKET_C
SEMICOLON

static
TYPE_INT

__find_max_latency
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

min
OP_ASSIGNMENT

INFINITE_LATENCY
SEMICOLON
STRUCT

latency_info
MULT

info
SEMICOLON

list_for_each_entry
BRACKET_O

info
COMMA
AMPERSANT

latency_list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

info
MINUS
GREATER

usecs
LESS

min
BRACKET_C

min
OP_ASSIGNMENT

info
MINUS
GREATER

usecs
SEMICOLON
CURLY_BRACKET_C

return

min
SEMICOLON
CURLY_BRACKET_C

void

set_acceptable_latency
BRACKET_O
TYPE_CHAR
MULT

identifier
COMMA
TYPE_INT

usecs
BRACKET_C
CURLY_BRACKET_O
STRUCT

latency_info
MULT

info
COMMA
MULT

iter
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

found_old
OP_ASSIGNMENT
NUMBER
SEMICOLON

info
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

latency_info
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

info
BRACKET_C

return
SEMICOLON

info
MINUS
GREATER

usecs
OP_ASSIGNMENT

usecs
SEMICOLON

info
MINUS
GREATER

identifier
OP_ASSIGNMENT

kstrdup
BRACKET_O

identifier
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

info
MINUS
GREATER

identifier
BRACKET_C

goto

free_info
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

latency_lock
COMMA

flags
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

iter
COMMA
AMPERSANT

latency_list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

strcmp
BRACKET_O

iter
MINUS
GREATER

identifier
COMMA

identifier
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

found_old
OP_ASSIGNMENT
NUMBER
SEMICOLON

iter
MINUS
GREATER

usecs
OP_ASSIGNMENT

usecs
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

found_old
BRACKET_C

list_add
BRACKET_O
AMPERSANT

info
MINUS
GREATER

list
COMMA
AMPERSANT

latency_list
BRACKET_C
SEMICOLON
IF
BRACKET_O

usecs
LESS

atomic_read
BRACKET_O
AMPERSANT

current_max_latency
BRACKET_C
BRACKET_C

atomic_set
BRACKET_O
AMPERSANT

current_max_latency
COMMA

usecs
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

latency_lock
COMMA

flags
BRACKET_C
SEMICOLON

blocking_notifier_call_chain
BRACKET_O
AMPERSANT

latency_notifier
COMMA

atomic_read
BRACKET_O
AMPERSANT

current_max_latency
BRACKET_C
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

found_old
BRACKET_C

return
SEMICOLON

kfree
BRACKET_O

info
MINUS
GREATER

identifier
BRACKET_C
SEMICOLON

free_info
COLON

kfree
BRACKET_O

info
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

set_acceptable_latency
BRACKET_C
SEMICOLON

void

modify_acceptable_latency
BRACKET_O
TYPE_CHAR
MULT

identifier
COMMA
TYPE_INT

usecs
BRACKET_C
CURLY_BRACKET_O
STRUCT

latency_info
MULT

iter
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

latency_lock
COMMA

flags
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

iter
COMMA
AMPERSANT

latency_list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

strcmp
BRACKET_O

iter
MINUS
GREATER

identifier
COMMA

identifier
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

iter
MINUS
GREATER

usecs
OP_ASSIGNMENT

usecs
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

usecs
LESS

atomic_read
BRACKET_O
AMPERSANT

current_max_latency
BRACKET_C
BRACKET_C

atomic_set
BRACKET_O
AMPERSANT

current_max_latency
COMMA

usecs
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

latency_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

modify_acceptable_latency
BRACKET_C
SEMICOLON

void

remove_acceptable_latency
BRACKET_O
TYPE_CHAR
MULT

identifier
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

newmax
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

latency_info
MULT

iter
COMMA
MULT

temp
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

latency_lock
COMMA

flags
BRACKET_C
SEMICOLON

list_for_each_entry_safe
BRACKET_O

iter
COMMA

temp
COMMA
AMPERSANT

latency_list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

strcmp
BRACKET_O

iter
MINUS
GREATER

identifier
COMMA

identifier
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

list_del
BRACKET_O
AMPERSANT

iter
MINUS
GREATER

list
BRACKET_C
SEMICOLON

newmax
OP_ASSIGNMENT

iter
MINUS
GREATER

usecs
SEMICOLON

kfree
BRACKET_O

iter
MINUS
GREATER

identifier
BRACKET_C
SEMICOLON

kfree
BRACKET_O

iter
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

newmax
EQ

atomic_read
BRACKET_O
AMPERSANT

current_max_latency
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

newmax
OP_ASSIGNMENT

__find_max_latency
BRACKET_O
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

current_max_latency
COMMA

newmax
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

latency_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

remove_acceptable_latency
BRACKET_C
SEMICOLON
TYPE_INT

system_latency_constraint
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

atomic_read
BRACKET_O
AMPERSANT

current_max_latency
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

system_latency_constraint
BRACKET_C
SEMICOLON

void

synchronize_acceptable_latency
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

blocking_notifier_call_chain
BRACKET_O
AMPERSANT

latency_notifier
COMMA

atomic_read
BRACKET_O
AMPERSANT

current_max_latency
BRACKET_C
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

synchronize_acceptable_latency
BRACKET_C
SEMICOLON
TYPE_INT

register_latency_notifier
BRACKET_O
STRUCT

notifier_block
MULT

nb
BRACKET_C
CURLY_BRACKET_O

return

blocking_notifier_chain_register
BRACKET_O
AMPERSANT

latency_notifier
COMMA

nb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

register_latency_notifier
BRACKET_C
SEMICOLON
TYPE_INT

unregister_latency_notifier
BRACKET_O
STRUCT

notifier_block
MULT

nb
BRACKET_C
CURLY_BRACKET_O

return

blocking_notifier_chain_unregister
BRACKET_O
AMPERSANT

latency_notifier
COMMA

nb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

unregister_latency_notifier
BRACKET_C
SEMICOLON

static

__init
TYPE_INT

latency_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

atomic_set
BRACKET_O
AMPERSANT

current_max_latency
COMMA

INFINITE_LATENCY
BRACKET_C
SEMICOLON

set_acceptable_latency
BRACKET_O
STRING
COMMA
NUMBER
MULT
NUMBER
DIV

HZ
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

module_init
BRACKET_O

latency_init
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static

raw_spinlock_t

lockdep_lock
OP_ASSIGNMENT
BRACKET_O

raw_spinlock_t
BRACKET_C

__RAW_SPIN_LOCK_UNLOCKED
SEMICOLON

static
TYPE_INT

graph_lock
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

__raw_spin_lock
BRACKET_O
AMPERSANT

lockdep_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

debug_locks
BRACKET_C
CURLY_BRACKET_O

__raw_spin_unlock
BRACKET_O
AMPERSANT

lockdep_lock
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

graph_unlock
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

debug_locks
AND
NOT

__raw_spin_is_locked
BRACKET_O
AMPERSANT

lockdep_lock
BRACKET_C
BRACKET_C

return

DEBUG_LOCKS_WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

__raw_spin_unlock
BRACKET_O
AMPERSANT

lockdep_lock
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

debug_locks_off_graph_unlock
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT

debug_locks_off
BRACKET_O
BRACKET_C
SEMICOLON

__raw_spin_unlock
BRACKET_O
AMPERSANT

lockdep_lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

lockdep_initialized
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

nr_list_entries
SEMICOLON

static
STRUCT

lock_list

list_entries
CORNER_BRACKET_O

MAX_LOCKDEP_ENTRIES
CORNER_BRACKET_C
SEMICOLON

static
STRUCT

lock_list
MULT

alloc_list_entry
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

nr_list_entries
GR_EQ

MAX_LOCKDEP_ENTRIES
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

return

list_entries
PLUS

nr_list_entries
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

nr_lock_classes
SEMICOLON

static
STRUCT

lock_class

lock_classes
CORNER_BRACKET_O

MAX_LOCKDEP_KEYS
CORNER_BRACKET_C
SEMICOLON

LIST_HEAD
BRACKET_O

all_lock_classes
BRACKET_C
SEMICOLON
PP_DEFINE

CLASSHASH_BITS
BRACKET_O

MAX_LOCKDEP_KEYS_BITS
MINUS
NUMBER
BRACKET_C
PP_DEFINE

CLASSHASH_SIZE
BRACKET_O
NUMBER

UL
LESS
LESS

CLASSHASH_BITS
BRACKET_C
PP_DEFINE

CLASSHASH_MASK
BRACKET_O

CLASSHASH_SIZE
MINUS
NUMBER
BRACKET_C
PP_DEFINE

__classhashfn
BRACKET_O

key
BRACKET_C
BRACKET_O
BRACKET_O
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

key
GREATER
GREATER

CLASSHASH_BITS
BRACKET_C
PLUS
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

key
BRACKET_C
AMPERSANT

CLASSHASH_MASK
BRACKET_C
PP_DEFINE

classhashentry
BRACKET_O

key
BRACKET_C
BRACKET_O

classhash_table
PLUS

__classhashfn
BRACKET_O
BRACKET_O

key
BRACKET_C
BRACKET_C
BRACKET_C

static
STRUCT

list_head

classhash_table
CORNER_BRACKET_O

CLASSHASH_SIZE
CORNER_BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

nr_lock_chains
SEMICOLON

static
STRUCT

lock_chain

lock_chains
CORNER_BRACKET_O

MAX_LOCKDEP_CHAINS
CORNER_BRACKET_C
SEMICOLON
PP_DEFINE

CHAINHASH_BITS
BRACKET_O

MAX_LOCKDEP_CHAINS_BITS
MINUS
NUMBER
BRACKET_C
PP_DEFINE

CHAINHASH_SIZE
BRACKET_O
NUMBER

UL
LESS
LESS

CHAINHASH_BITS
BRACKET_C
PP_DEFINE

CHAINHASH_MASK
BRACKET_O

CHAINHASH_SIZE
MINUS
NUMBER
BRACKET_C
PP_DEFINE

__chainhashfn
BRACKET_O

chain
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O
BRACKET_O
BRACKET_O

chain
GREATER
GREATER

CHAINHASH_BITS
BRACKET_C
PLUS

chain
BRACKET_C
AMPERSANT

CHAINHASH_MASK
BRACKET_C
PP_DEFINE

chainhashentry
BRACKET_O

chain
BRACKET_C
BRACKET_O

chainhash_table
PLUS

__chainhashfn
BRACKET_O
BRACKET_O

chain
BRACKET_C
BRACKET_C
BRACKET_C

static
STRUCT

list_head

chainhash_table
CORNER_BRACKET_O

CHAINHASH_SIZE
CORNER_BRACKET_C
SEMICOLON
PP_DEFINE

iterate_chain_key
BRACKET_O

key1
COMMA

key2
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O
BRACKET_O
BRACKET_O

key1
BRACKET_C
LESS
LESS

MAX_LOCKDEP_KEYS_BITS
BRACKET_C
EXCLUSIVE_OR
BACKLASHED_NEWLINE
BRACKET_O
BRACKET_O

key1
BRACKET_C
GREATER
GREATER
BRACKET_O
NUMBER
MINUS

MAX_LOCKDEP_KEYS_BITS
BRACKET_C
BRACKET_C
EXCLUSIVE_OR
BACKLASHED_NEWLINE
BRACKET_O

key2
BRACKET_C
BRACKET_C

void

lockdep_off
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

lockdep_recursion
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

lockdep_off
BRACKET_C
SEMICOLON

void

lockdep_on
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

lockdep_recursion
MINUS
MINUS
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

lockdep_on
BRACKET_C
SEMICOLON
PP_DEFINE

VERBOSE
NUMBER
PP_DEFINE

VERY_VERBOSE
NUMBER
PP_IF

VERBOSE
PP_DEFINE

HARDIRQ_VERBOSE
NUMBER
PP_DEFINE

SOFTIRQ_VERBOSE
NUMBER
PP_ELSE
PP_DEFINE

HARDIRQ_VERBOSE
NUMBER
PP_DEFINE

SOFTIRQ_VERBOSE
NUMBER
PP_ENDIF
PP_IF

VERBOSE
OR

HARDIRQ_VERBOSE
OR

SOFTIRQ_VERBOSE

static
TYPE_INT

class_filter
BRACKET_O
STRUCT

lock_class
MULT

class
BRACKET_C
CURLY_BRACKET_O
PP_IF
NUMBER
IF
BRACKET_O

class
MINUS
GREATER

name_version
EQ
NUMBER
AND
NOT

strcmp
BRACKET_O

class
MINUS
GREATER

name
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

name_version
EQ
NUMBER
AND
NOT

strcmp
BRACKET_O

class
MINUS
GREATER

name
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_ENDIF

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

verbose
BRACKET_O
STRUCT

lock_class
MULT

class
BRACKET_C
CURLY_BRACKET_O
PP_IF

VERBOSE

return

class_filter
BRACKET_O

class
BRACKET_C
SEMICOLON
PP_ENDIF

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

static
TYPE_INT

hardirq_verbose
BRACKET_O
STRUCT

lock_class
MULT

class
BRACKET_C
CURLY_BRACKET_O
PP_IF

HARDIRQ_VERBOSE

return

class_filter
BRACKET_O

class
BRACKET_C
SEMICOLON
PP_ENDIF

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

softirq_verbose
BRACKET_O
STRUCT

lock_class
MULT

class
BRACKET_C
CURLY_BRACKET_O
PP_IF

SOFTIRQ_VERBOSE

return

class_filter
BRACKET_O

class
BRACKET_C
SEMICOLON
PP_ENDIF

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
TYPE_UNSIGNED
TYPE_LONG

nr_stack_trace_entries
SEMICOLON

static
TYPE_UNSIGNED
TYPE_LONG

stack_trace
CORNER_BRACKET_O

MAX_STACK_TRACE_ENTRIES
CORNER_BRACKET_C
SEMICOLON

static
TYPE_INT

save_trace
BRACKET_O
STRUCT

stack_trace
MULT

trace
BRACKET_C
CURLY_BRACKET_O

trace
MINUS
GREATER

nr_entries
OP_ASSIGNMENT
NUMBER
SEMICOLON

trace
MINUS
GREATER

max_entries
OP_ASSIGNMENT

MAX_STACK_TRACE_ENTRIES
MINUS

nr_stack_trace_entries
SEMICOLON

trace
MINUS
GREATER

entries
OP_ASSIGNMENT

stack_trace
PLUS

nr_stack_trace_entries
SEMICOLON

trace
MINUS
GREATER

skip
OP_ASSIGNMENT
NUMBER
SEMICOLON

save_stack_trace
BRACKET_O

trace
BRACKET_C
SEMICOLON

trace
MINUS
GREATER

max_entries
OP_ASSIGNMENT

trace
MINUS
GREATER

nr_entries
SEMICOLON

nr_stack_trace_entries
ASSIGN_PLUS

trace
MINUS
GREATER

nr_entries
SEMICOLON
IF
BRACKET_O

nr_stack_trace_entries
EQ

MAX_STACK_TRACE_ENTRIES
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_INT

nr_hardirq_chains
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

nr_softirq_chains
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

nr_process_chains
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

max_lockdep_depth
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

max_recursion_depth
SEMICOLON
PP_IFDEF

CONFIG_DEBUG_LOCKDEP

static
TYPE_INT

lockdep_init_error
SEMICOLON

atomic_t

chain_lookup_hits
SEMICOLON

atomic_t

chain_lookup_misses
SEMICOLON

atomic_t

hardirqs_on_events
SEMICOLON

atomic_t

hardirqs_off_events
SEMICOLON

atomic_t

redundant_hardirqs_on
SEMICOLON

atomic_t

redundant_hardirqs_off
SEMICOLON

atomic_t

softirqs_on_events
SEMICOLON

atomic_t

softirqs_off_events
SEMICOLON

atomic_t

redundant_softirqs_on
SEMICOLON

atomic_t

redundant_softirqs_off
SEMICOLON

atomic_t

nr_unused_locks
SEMICOLON

atomic_t

nr_cyclic_checks
SEMICOLON

atomic_t

nr_cyclic_check_recursions
SEMICOLON

atomic_t

nr_find_usage_forwards_checks
SEMICOLON

atomic_t

nr_find_usage_forwards_recursions
SEMICOLON

atomic_t

nr_find_usage_backwards_checks
SEMICOLON

atomic_t

nr_find_usage_backwards_recursions
SEMICOLON
PP_DEFINE

debug_atomic_inc
BRACKET_O

ptr
BRACKET_C

atomic_inc
BRACKET_O

ptr
BRACKET_C
PP_DEFINE

debug_atomic_dec
BRACKET_O

ptr
BRACKET_C

atomic_dec
BRACKET_O

ptr
BRACKET_C
PP_DEFINE

debug_atomic_read
BRACKET_O

ptr
BRACKET_C

atomic_read
BRACKET_O

ptr
BRACKET_C
PP_ELSE
PP_DEFINE

debug_atomic_inc
BRACKET_O

ptr
BRACKET_C
DO
CURLY_BRACKET_O
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

debug_atomic_dec
BRACKET_O

ptr
BRACKET_C
DO
CURLY_BRACKET_O
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

debug_atomic_read
BRACKET_O

ptr
BRACKET_C
NUMBER
PP_ENDIF

static
CONST
TYPE_CHAR
MULT

usage_str
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CORNER_BRACKET_O

LOCK_USED
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
COMMA
CORNER_BRACKET_O

LOCK_USED_IN_HARDIRQ
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
COMMA
CORNER_BRACKET_O

LOCK_USED_IN_SOFTIRQ
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
COMMA
CORNER_BRACKET_O

LOCK_ENABLED_SOFTIRQS
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
COMMA
CORNER_BRACKET_O

LOCK_ENABLED_HARDIRQS
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
COMMA
CORNER_BRACKET_O

LOCK_USED_IN_HARDIRQ_READ
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
COMMA
CORNER_BRACKET_O

LOCK_USED_IN_SOFTIRQ_READ
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
COMMA
CORNER_BRACKET_O

LOCK_ENABLED_SOFTIRQS_READ
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
COMMA
CORNER_BRACKET_O

LOCK_ENABLED_HARDIRQS_READ
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
COMMA
CURLY_BRACKET_C
SEMICOLON
CONST
TYPE_CHAR
MULT

__get_key_name
BRACKET_O
STRUCT

lockdep_subclass_key
MULT

key
COMMA
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

return

kallsyms_lookup
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

key
COMMA

NULL
COMMA

NULL
COMMA

NULL
COMMA

str
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

get_usage_chars
BRACKET_O
STRUCT

lock_class
MULT

class
COMMA
TYPE_CHAR
MULT

c1
COMMA
TYPE_CHAR
MULT

c2
COMMA
TYPE_CHAR
MULT

c3
COMMA
TYPE_CHAR
MULT

c4
BRACKET_C
CURLY_BRACKET_O
MULT

c1
OP_ASSIGNMENT
QUOTED_CHAR
COMMA
MULT

c2
OP_ASSIGNMENT
QUOTED_CHAR
COMMA
MULT

c3
OP_ASSIGNMENT
QUOTED_CHAR
COMMA
MULT

c4
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_USED_IN_HARDIRQ
BRACKET_C
MULT

c1
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
ELSE
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_ENABLED_HARDIRQS
BRACKET_C
MULT

c1
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_USED_IN_SOFTIRQ
BRACKET_C
MULT

c2
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
ELSE
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_ENABLED_SOFTIRQS
BRACKET_C
MULT

c2
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_ENABLED_HARDIRQS_READ
BRACKET_C
MULT

c3
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_USED_IN_HARDIRQ_READ
BRACKET_C
CURLY_BRACKET_O
MULT

c3
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_ENABLED_HARDIRQS_READ
BRACKET_C
MULT

c3
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_ENABLED_SOFTIRQS_READ
BRACKET_C
MULT

c4
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_USED_IN_SOFTIRQ_READ
BRACKET_C
CURLY_BRACKET_O
MULT

c4
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_ENABLED_SOFTIRQS_READ
BRACKET_C
MULT

c4
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

print_lock_name
BRACKET_O
STRUCT

lock_class
MULT

class
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

str
CORNER_BRACKET_O

KSYM_NAME_LEN
PLUS
NUMBER
CORNER_BRACKET_C
COMMA

c1
COMMA

c2
COMMA

c3
COMMA

c4
SEMICOLON
CONST
TYPE_CHAR
MULT

name
SEMICOLON

get_usage_chars
BRACKET_O

class
COMMA
AMPERSANT

c1
COMMA
AMPERSANT

c2
COMMA
AMPERSANT

c3
COMMA
AMPERSANT

c4
BRACKET_C
SEMICOLON

name
OP_ASSIGNMENT

class
MINUS
GREATER

name
SEMICOLON
IF
BRACKET_O
NOT

name
BRACKET_C
CURLY_BRACKET_O

name
OP_ASSIGNMENT

__get_key_name
BRACKET_O

class
MINUS
GREATER

key
COMMA

str
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

name
BRACKET_C
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

name_version
GREATER
NUMBER
BRACKET_C

printk
BRACKET_O
STRING
COMMA

class
MINUS
GREATER

name_version
BRACKET_C
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

subclass
BRACKET_C

printk
BRACKET_O
STRING
COMMA

class
MINUS
GREATER

subclass
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

printk
BRACKET_O
STRING
COMMA

c1
COMMA

c2
COMMA

c3
COMMA

c4
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

print_lockdep_cache
BRACKET_O
STRUCT

lockdep_map
MULT

lock
BRACKET_C
CURLY_BRACKET_O
CONST
TYPE_CHAR
MULT

name
SEMICOLON
TYPE_CHAR

str
CORNER_BRACKET_O

KSYM_NAME_LEN
PLUS
NUMBER
CORNER_BRACKET_C
SEMICOLON

name
OP_ASSIGNMENT

lock
MINUS
GREATER

name
SEMICOLON
IF
BRACKET_O
NOT

name
BRACKET_C

name
OP_ASSIGNMENT

__get_key_name
BRACKET_O

lock
MINUS
GREATER

key
MINUS
GREATER

subkeys
COMMA

str
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

print_lock
BRACKET_O
STRUCT

held_lock
MULT

hlock
BRACKET_C
CURLY_BRACKET_O

print_lock_name
BRACKET_O

hlock
MINUS
GREATER

class
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_ip_sym
BRACKET_O

hlock
MINUS
GREATER

acquire_ip
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

lockdep_print_held_locks
BRACKET_O
STRUCT

task_struct
MULT

curr
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

depth
OP_ASSIGNMENT

curr
MINUS
GREATER

lockdep_depth
SEMICOLON
IF
BRACKET_O
NOT

depth
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

comm
COMMA

curr
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

printk
BRACKET_O
STRING
COMMA

depth
COMMA

depth
GREATER
NUMBER
QUESTION_MARK
STRING
COLON
STRING
COMMA

curr
MINUS
GREATER

comm
COMMA

curr
MINUS
GREATER

pid
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

depth
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

i
BRACKET_C
SEMICOLON

print_lock
BRACKET_O

curr
MINUS
GREATER

held_locks
PLUS

i
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

print_lock_class_header
BRACKET_O
STRUCT

lock_class
MULT

class
COMMA
TYPE_INT

depth
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

bit
SEMICOLON

printk
BRACKET_O
STRING
COMMA

depth
COMMA
STRING
BRACKET_C
SEMICOLON

print_lock_name
BRACKET_O

class
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

class
MINUS
GREATER

ops
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
FOR
BRACKET_O

bit
OP_ASSIGNMENT
NUMBER
SEMICOLON

bit
LESS

LOCK_USAGE_STATES
SEMICOLON

bit
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT
BRACKET_O
NUMBER
LESS
LESS

bit
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

len
OP_ASSIGNMENT

depth
SEMICOLON

len
ASSIGN_PLUS

printk
BRACKET_O
STRING
COMMA

depth
COMMA
STRING
COMMA

usage_str
CORNER_BRACKET_O

bit
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

len
ASSIGN_PLUS

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_stack_trace
BRACKET_O

class
MINUS
GREATER

usage_traces
PLUS

bit
COMMA

len
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

printk
BRACKET_O
STRING
COMMA

depth
COMMA
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

depth
COMMA
STRING
BRACKET_C
SEMICOLON

print_ip_sym
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

class
MINUS
GREATER

key
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

print_lock_dependencies
BRACKET_O
STRUCT

lock_class
MULT

class
COMMA
TYPE_INT

depth
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_list
MULT

entry
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O

depth
GR_EQ
NUMBER
BRACKET_C
BRACKET_C

return
SEMICOLON

print_lock_class_header
BRACKET_O

class
COMMA

depth
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

entry
COMMA
AMPERSANT

class
MINUS
GREATER

locks_after
COMMA

entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

entry
MINUS
GREATER

class
BRACKET_C
BRACKET_C

return
SEMICOLON

print_lock_dependencies
BRACKET_O

entry
MINUS
GREATER

class
COMMA

depth
PLUS
NUMBER
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

depth
COMMA
STRING
BRACKET_C
SEMICOLON

print_stack_trace
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

trace
COMMA
NUMBER
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

add_lock_to_list
BRACKET_O
STRUCT

lock_class
MULT

class
COMMA
STRUCT

lock_class
MULT

this
COMMA
STRUCT

list_head
MULT

head
COMMA
TYPE_UNSIGNED
TYPE_LONG

ip
COMMA
TYPE_INT

distance
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_list
MULT

entry
SEMICOLON

entry
OP_ASSIGNMENT

alloc_list_entry
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

entry
BRACKET_C

return
NUMBER
SEMICOLON

entry
MINUS
GREATER

class
OP_ASSIGNMENT

this
SEMICOLON

entry
MINUS
GREATER

distance
OP_ASSIGNMENT

distance
SEMICOLON
IF
BRACKET_O
NOT

save_trace
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

trace
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

list_add_tail_rcu
BRACKET_O
AMPERSANT

entry
MINUS
GREATER

entry
COMMA

head
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

held_lock
MULT

check_source
COMMA
MULT

check_target
SEMICOLON

static

noinline
TYPE_INT

print_circular_bug_entry
BRACKET_O
STRUCT

lock_list
MULT

target
COMMA
TYPE_UNSIGNED
TYPE_INT

depth
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

debug_locks_silent
BRACKET_C

return
NUMBER
SEMICOLON

printk
BRACKET_O
STRING
COMMA

depth
BRACKET_C
SEMICOLON

print_lock_name
BRACKET_O

target
MINUS
GREATER

class
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_stack_trace
BRACKET_O
AMPERSANT

target
MINUS
GREATER

trace
COMMA
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

print_kernel_version
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

init_utsname
BRACKET_O
BRACKET_C
MINUS
GREATER

release
COMMA
BRACKET_O
TYPE_INT
BRACKET_C

strcspn
BRACKET_O

init_utsname
BRACKET_O
BRACKET_C
MINUS
GREATER

version
COMMA
STRING
BRACKET_C
COMMA

init_utsname
BRACKET_O
BRACKET_C
MINUS
GREATER

version
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

noinline
TYPE_INT

print_circular_bug_header
BRACKET_O
STRUCT

lock_list
MULT

entry
COMMA
TYPE_UNSIGNED
TYPE_INT

depth
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

curr
OP_ASSIGNMENT

current
SEMICOLON
IF
BRACKET_O
NOT

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
OR

debug_locks_silent
BRACKET_C

return
NUMBER
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_kernel_version
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

comm
COMMA

curr
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

print_lock
BRACKET_O

check_source
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_lock
BRACKET_O

check_target
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_circular_bug_entry
BRACKET_O

entry
COMMA

depth
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

noinline
TYPE_INT

print_circular_bug_tail
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

curr
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

lock_list

this
SEMICOLON
IF
BRACKET_O

debug_locks_silent
BRACKET_C

return
NUMBER
SEMICOLON

this
DOT

class
OP_ASSIGNMENT

check_source
MINUS
GREATER

class
SEMICOLON
IF
BRACKET_O
NOT

save_trace
BRACKET_O
AMPERSANT

this
DOT

trace
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

print_circular_bug_entry
BRACKET_O
AMPERSANT

this
COMMA
NUMBER
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

lockdep_print_held_locks
BRACKET_O

curr
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

RECURSION_LIMIT
NUMBER

static
TYPE_INT

noinline

print_infinite_recursion_bug
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

noinline
TYPE_INT

check_noncircular
BRACKET_O
STRUCT

lock_class
MULT

source
COMMA
TYPE_UNSIGNED
TYPE_INT

depth
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_list
MULT

entry
SEMICOLON

debug_atomic_inc
BRACKET_O
AMPERSANT

nr_cyclic_check_recursions
BRACKET_C
SEMICOLON
IF
BRACKET_O

depth
GREATER

max_recursion_depth
BRACKET_C

max_recursion_depth
OP_ASSIGNMENT

depth
SEMICOLON
IF
BRACKET_O

depth
GR_EQ

RECURSION_LIMIT
BRACKET_C

return

print_infinite_recursion_bug
BRACKET_O
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

entry
COMMA
AMPERSANT

source
MINUS
GREATER

locks_after
COMMA

entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

entry
MINUS
GREATER

class
EQ

check_target
MINUS
GREATER

class
BRACKET_C

return

print_circular_bug_header
BRACKET_O

entry
COMMA

depth
PLUS
NUMBER
BRACKET_C
SEMICOLON

debug_atomic_inc
BRACKET_O
AMPERSANT

nr_cyclic_checks
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

check_noncircular
BRACKET_O

entry
MINUS
GREATER

class
COMMA

depth
PLUS
NUMBER
BRACKET_C
BRACKET_C

return

print_circular_bug_entry
BRACKET_O

entry
COMMA

depth
PLUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

very_verbose
BRACKET_O
STRUCT

lock_class
MULT

class
BRACKET_C
CURLY_BRACKET_O
PP_IF

VERY_VERBOSE

return

class_filter
BRACKET_O

class
BRACKET_C
SEMICOLON
PP_ENDIF

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

static

enum

lock_usage_bit

find_usage_bit
SEMICOLON

static
STRUCT

lock_class
MULT

forwards_match
COMMA
MULT

backwards_match
SEMICOLON

static

noinline
TYPE_INT

find_usage_forwards
BRACKET_O
STRUCT

lock_class
MULT

source
COMMA
TYPE_UNSIGNED
TYPE_INT

depth
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_list
MULT

entry
SEMICOLON
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O

depth
GREATER

max_recursion_depth
BRACKET_C

max_recursion_depth
OP_ASSIGNMENT

depth
SEMICOLON
IF
BRACKET_O

depth
GR_EQ

RECURSION_LIMIT
BRACKET_C

return

print_infinite_recursion_bug
BRACKET_O
BRACKET_C
SEMICOLON

debug_atomic_inc
BRACKET_O
AMPERSANT

nr_find_usage_forwards_checks
BRACKET_C
SEMICOLON
IF
BRACKET_O

source
MINUS
GREATER

usage_mask
AMPERSANT
BRACKET_O
NUMBER
LESS
LESS

find_usage_bit
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

forwards_match
OP_ASSIGNMENT

source
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

list_for_each_entry
BRACKET_O

entry
COMMA
AMPERSANT

source
MINUS
GREATER

locks_after
COMMA

entry
BRACKET_C
CURLY_BRACKET_O

debug_atomic_inc
BRACKET_O
AMPERSANT

nr_find_usage_forwards_recursions
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

find_usage_forwards
BRACKET_O

entry
MINUS
GREATER

class
COMMA

depth
PLUS
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
NUMBER
OR

ret
EQ
NUMBER
BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

noinline
TYPE_INT

find_usage_backwards
BRACKET_O
STRUCT

lock_class
MULT

source
COMMA
TYPE_UNSIGNED
TYPE_INT

depth
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_list
MULT

entry
SEMICOLON
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O
NOT

__raw_spin_is_locked
BRACKET_O
AMPERSANT

lockdep_lock
BRACKET_C
BRACKET_C

return

DEBUG_LOCKS_WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

depth
GREATER

max_recursion_depth
BRACKET_C

max_recursion_depth
OP_ASSIGNMENT

depth
SEMICOLON
IF
BRACKET_O

depth
GR_EQ

RECURSION_LIMIT
BRACKET_C

return

print_infinite_recursion_bug
BRACKET_O
BRACKET_C
SEMICOLON

debug_atomic_inc
BRACKET_O
AMPERSANT

nr_find_usage_backwards_checks
BRACKET_C
SEMICOLON
IF
BRACKET_O

source
MINUS
GREATER

usage_mask
AMPERSANT
BRACKET_O
NUMBER
LESS
LESS

find_usage_bit
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

backwards_match
OP_ASSIGNMENT

source
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

list_for_each_entry
BRACKET_O

entry
COMMA
AMPERSANT

source
MINUS
GREATER

locks_before
COMMA

entry
BRACKET_C
CURLY_BRACKET_O

debug_atomic_inc
BRACKET_O
AMPERSANT

nr_find_usage_backwards_recursions
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

find_usage_backwards
BRACKET_O

entry
MINUS
GREATER

class
COMMA

depth
PLUS
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
NUMBER
OR

ret
EQ
NUMBER
BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

print_bad_irq_dependency
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

held_lock
MULT

prev
COMMA
STRUCT

held_lock
MULT

next
COMMA

enum

lock_usage_bit

bit1
COMMA

enum

lock_usage_bit

bit2
COMMA
CONST
TYPE_CHAR
MULT

irqclass
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
OR

debug_locks_silent
BRACKET_C

return
NUMBER
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

irqclass
COMMA

irqclass
BRACKET_C
SEMICOLON

print_kernel_version
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

comm
COMMA

curr
MINUS
GREATER

pid
COMMA

curr
MINUS
GREATER

hardirq_context
COMMA

hardirq_count
BRACKET_O
BRACKET_C
GREATER
GREATER

HARDIRQ_SHIFT
COMMA

curr
MINUS
GREATER

softirq_context
COMMA

softirq_count
BRACKET_O
BRACKET_C
GREATER
GREATER

SOFTIRQ_SHIFT
COMMA

curr
MINUS
GREATER

hardirqs_enabled
COMMA

curr
MINUS
GREATER

softirqs_enabled
BRACKET_C
SEMICOLON

print_lock
BRACKET_O

next
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_lock
BRACKET_O

prev
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_lock_name
BRACKET_O

prev
MINUS
GREATER

class
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_lock_name
BRACKET_O

next
MINUS
GREATER

class
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

irqclass
BRACKET_C
SEMICOLON

print_lock_name
BRACKET_O

backwards_match
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

irqclass
BRACKET_C
SEMICOLON

print_stack_trace
BRACKET_O

backwards_match
MINUS
GREATER

usage_traces
PLUS

bit1
COMMA
NUMBER
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

irqclass
BRACKET_C
SEMICOLON

print_lock_name
BRACKET_O

forwards_match
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

irqclass
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_stack_trace
BRACKET_O

forwards_match
MINUS
GREATER

usage_traces
PLUS

bit2
COMMA
NUMBER
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

lockdep_print_held_locks
BRACKET_O

curr
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

irqclass
BRACKET_C
SEMICOLON

print_lock_dependencies
BRACKET_O

backwards_match
COMMA
NUMBER
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

irqclass
BRACKET_C
SEMICOLON

print_lock_dependencies
BRACKET_O

forwards_match
COMMA
NUMBER
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

check_usage
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

held_lock
MULT

prev
COMMA
STRUCT

held_lock
MULT

next
COMMA

enum

lock_usage_bit

bit_backwards
COMMA

enum

lock_usage_bit

bit_forwards
COMMA
CONST
TYPE_CHAR
MULT

irqclass
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

find_usage_bit
OP_ASSIGNMENT

bit_backwards
SEMICOLON

ret
OP_ASSIGNMENT

find_usage_backwards
BRACKET_O

prev
MINUS
GREATER

class
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
OR

ret
EQ
NUMBER
BRACKET_C

return

ret
SEMICOLON

find_usage_bit
OP_ASSIGNMENT

bit_forwards
SEMICOLON

ret
OP_ASSIGNMENT

find_usage_forwards
BRACKET_O

next
MINUS
GREATER

class
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
OR

ret
EQ
NUMBER
BRACKET_C

return

ret
SEMICOLON

return

print_bad_irq_dependency
BRACKET_O

curr
COMMA

prev
COMMA

next
COMMA

bit_backwards
COMMA

bit_forwards
COMMA

irqclass
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

print_deadlock_bug
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

held_lock
MULT

prev
COMMA
STRUCT

held_lock
MULT

next
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
OR

debug_locks_silent
BRACKET_C

return
NUMBER
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_kernel_version
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

comm
COMMA

curr
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

print_lock
BRACKET_O

next
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_lock
BRACKET_O

prev
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

lockdep_print_held_locks
BRACKET_O

curr
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

check_deadlock
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

held_lock
MULT

next
COMMA
STRUCT

lockdep_map
MULT

next_instance
COMMA
TYPE_INT

read
BRACKET_C
CURLY_BRACKET_O
STRUCT

held_lock
MULT

prev
SEMICOLON
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

curr
MINUS
GREATER

lockdep_depth
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

prev
OP_ASSIGNMENT

curr
MINUS
GREATER

held_locks
PLUS

i
SEMICOLON
IF
BRACKET_O

prev
MINUS
GREATER

class
NOT_EQ

next
MINUS
GREATER

class
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O
BRACKET_O

read
EQ
NUMBER
BRACKET_C
AND

prev
MINUS
GREATER

read
BRACKET_C

return
NUMBER
SEMICOLON

return

print_deadlock_bug
BRACKET_O

curr
COMMA

prev
COMMA

next
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

check_prev_add
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

held_lock
MULT

prev
COMMA
STRUCT

held_lock
MULT

next
COMMA
TYPE_INT

distance
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_list
MULT

entry
SEMICOLON
TYPE_INT

ret
SEMICOLON

check_source
OP_ASSIGNMENT

next
SEMICOLON

check_target
OP_ASSIGNMENT

prev
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

check_noncircular
BRACKET_O

next
MINUS
GREATER

class
COMMA
NUMBER
BRACKET_C
BRACKET_C
BRACKET_C

return

print_circular_bug_tail
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_TRACE_IRQFLAGS
IF
BRACKET_O
NOT

check_usage
BRACKET_O

curr
COMMA

prev
COMMA

next
COMMA

LOCK_USED_IN_HARDIRQ
COMMA

LOCK_ENABLED_HARDIRQS
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

check_usage
BRACKET_O

curr
COMMA

prev
COMMA

next
COMMA

LOCK_USED_IN_HARDIRQ_READ
COMMA

LOCK_ENABLED_HARDIRQS
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

check_usage
BRACKET_O

curr
COMMA

prev
COMMA

next
COMMA

LOCK_USED_IN_SOFTIRQ
COMMA

LOCK_ENABLED_SOFTIRQS
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

check_usage
BRACKET_O

curr
COMMA

prev
COMMA

next
COMMA

LOCK_USED_IN_SOFTIRQ_READ
COMMA

LOCK_ENABLED_SOFTIRQS
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_ENDIF
IF
BRACKET_O

next
MINUS
GREATER

read
EQ
NUMBER
OR

prev
MINUS
GREATER

read
EQ
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON

list_for_each_entry
BRACKET_O

entry
COMMA
AMPERSANT

prev
MINUS
GREATER

class
MINUS
GREATER

locks_after
COMMA

entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

entry
MINUS
GREATER

class
EQ

next
MINUS
GREATER

class
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

distance
EQ
NUMBER
BRACKET_C

entry
MINUS
GREATER

distance
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

ret
OP_ASSIGNMENT

add_lock_to_list
BRACKET_O

prev
MINUS
GREATER

class
COMMA

next
MINUS
GREATER

class
COMMA
AMPERSANT

prev
MINUS
GREATER

class
MINUS
GREATER

locks_after
COMMA

next
MINUS
GREATER

acquire_ip
COMMA

distance
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C

return
NUMBER
SEMICOLON

ret
OP_ASSIGNMENT

add_lock_to_list
BRACKET_O

next
MINUS
GREATER

class
COMMA

prev
MINUS
GREATER

class
COMMA
AMPERSANT

next
MINUS
GREATER

class
MINUS
GREATER

locks_before
COMMA

next
MINUS
GREATER

acquire_ip
COMMA

distance
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

verbose
BRACKET_O

prev
MINUS
GREATER

class
BRACKET_C
OR

verbose
BRACKET_O

next
MINUS
GREATER

class
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

graph_unlock
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_lock_name
BRACKET_O

prev
MINUS
GREATER

class
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_lock_name
BRACKET_O

next
MINUS
GREATER

class
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

return

graph_lock
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

check_prevs_add
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

held_lock
MULT

next
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

depth
OP_ASSIGNMENT

curr
MINUS
GREATER

lockdep_depth
SEMICOLON
STRUCT

held_lock
MULT

hlock
SEMICOLON
IF
BRACKET_O
NOT

depth
BRACKET_C

goto

out_bug
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

held_locks
CORNER_BRACKET_O

depth
CORNER_BRACKET_C
DOT

irq_context
NOT_EQ

curr
MINUS
GREATER

held_locks
CORNER_BRACKET_O

depth
MINUS
NUMBER
CORNER_BRACKET_C
DOT

irq_context
BRACKET_C

goto

out_bug
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

distance
OP_ASSIGNMENT

curr
MINUS
GREATER

lockdep_depth
MINUS

depth
PLUS
NUMBER
SEMICOLON

hlock
OP_ASSIGNMENT

curr
MINUS
GREATER

held_locks
PLUS

depth
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

hlock
MINUS
GREATER

read
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

check_prev_add
BRACKET_O

curr
COMMA

hlock
COMMA

next
COMMA

distance
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

hlock
MINUS
GREATER

trylock
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

depth
MINUS
MINUS
SEMICOLON
IF
BRACKET_O
NOT

depth
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

held_locks
CORNER_BRACKET_O

depth
CORNER_BRACKET_C
DOT

irq_context
NOT_EQ

curr
MINUS
GREATER

held_locks
CORNER_BRACKET_O

depth
MINUS
NUMBER
CORNER_BRACKET_C
DOT

irq_context
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON

out_bug
COLON
IF
BRACKET_O
NOT

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

static_obj
BRACKET_O

void
MULT

obj
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

start
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
AMPERSANT

_stext
COMMA

end
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
AMPERSANT

_end
COMMA

addr
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

obj
SEMICOLON
PP_IFDEF

CONFIG_SMP
TYPE_INT

i
SEMICOLON
PP_ENDIF
IF
BRACKET_O
BRACKET_O

addr
GR_EQ

start
BRACKET_C
AND
BRACKET_O

addr
LESS

end
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_IFDEF

CONFIG_SMP

for_each_possible_cpu
BRACKET_O

i
BRACKET_C
CURLY_BRACKET_O

start
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
AMPERSANT

__per_cpu_start
PLUS

per_cpu_offset
BRACKET_O

i
BRACKET_C
SEMICOLON

end
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
AMPERSANT

__per_cpu_start
PLUS

PERCPU_ENOUGH_ROOM
PLUS

per_cpu_offset
BRACKET_O

i
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

addr
GR_EQ

start
BRACKET_C
AND
BRACKET_O

addr
LESS

end
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

return

is_module_address
BRACKET_O

addr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

count_matching_names
BRACKET_O
STRUCT

lock_class
MULT

new_class
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_class
MULT

class
SEMICOLON
TYPE_INT

count
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

new_class
MINUS
GREATER

name
BRACKET_C

return
NUMBER
SEMICOLON

list_for_each_entry
BRACKET_O

class
COMMA
AMPERSANT

all_lock_classes
COMMA

lock_entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

new_class
MINUS
GREATER

key
MINUS

new_class
MINUS
GREATER

subclass
EQ

class
MINUS
GREATER

key
BRACKET_C

return

class
MINUS
GREATER

name_version
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

name
AND
NOT

strcmp
BRACKET_O

class
MINUS
GREATER

name
COMMA

new_class
MINUS
GREATER

name
BRACKET_C
BRACKET_C

count
OP_ASSIGNMENT

max
BRACKET_O

count
COMMA

class
MINUS
GREATER

name_version
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

count
PLUS
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
STRUCT

lock_class
MULT

look_up_lock_class
BRACKET_O
STRUCT

lockdep_map
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_INT

subclass
BRACKET_C
CURLY_BRACKET_O
STRUCT

lockdep_subclass_key
MULT

key
SEMICOLON
STRUCT

list_head
MULT

hash_head
SEMICOLON
STRUCT

lock_class
MULT

class
SEMICOLON
PP_IFDEF

CONFIG_DEBUG_LOCKDEP
IF
BRACKET_O

unlikely
BRACKET_O
NOT

lockdep_initialized
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

lockdep_init
BRACKET_O
BRACKET_C
SEMICOLON

lockdep_init_error
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
IF
BRACKET_O

unlikely
BRACKET_O
NOT

lock
MINUS
GREATER

key
BRACKET_C
BRACKET_C

lock
MINUS
GREATER

key
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

lock
SEMICOLON

BUILD_BUG_ON
BRACKET_O

sizeof
BRACKET_O
STRUCT

lock_class_key
BRACKET_C
GREATER

sizeof
BRACKET_O
STRUCT

lock_class
BRACKET_C
BRACKET_C
SEMICOLON

key
OP_ASSIGNMENT

lock
MINUS
GREATER

key
MINUS
GREATER

subkeys
PLUS

subclass
SEMICOLON

hash_head
OP_ASSIGNMENT

classhashentry
BRACKET_O

key
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

class
COMMA

hash_head
COMMA

hash_entry
BRACKET_C
IF
BRACKET_O

class
MINUS
GREATER

key
EQ

key
BRACKET_C

return

class
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

static

inline
STRUCT

lock_class
MULT

register_lock_class
BRACKET_O
STRUCT

lockdep_map
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_INT

subclass
COMMA
TYPE_INT

force
BRACKET_C
CURLY_BRACKET_O
STRUCT

lockdep_subclass_key
MULT

key
SEMICOLON
STRUCT

list_head
MULT

hash_head
SEMICOLON
STRUCT

lock_class
MULT

class
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

class
OP_ASSIGNMENT

look_up_lock_class
BRACKET_O

lock
COMMA

subclass
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

class
BRACKET_C
BRACKET_C

return

class
SEMICOLON
IF
BRACKET_O
NOT

static_obj
BRACKET_O

lock
MINUS
GREATER

key
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

debug_locks_off
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

key
OP_ASSIGNMENT

lock
MINUS
GREATER

key
MINUS
GREATER

subkeys
PLUS

subclass
SEMICOLON

hash_head
OP_ASSIGNMENT

classhashentry
BRACKET_O

key
BRACKET_C
SEMICOLON

raw_local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

graph_lock
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

list_for_each_entry
BRACKET_O

class
COMMA

hash_head
COMMA

hash_entry
BRACKET_C
IF
BRACKET_O

class
MINUS
GREATER

key
EQ

key
BRACKET_C

goto

out_unlock_set
SEMICOLON
IF
BRACKET_O

nr_lock_classes
GR_EQ

MAX_LOCKDEP_KEYS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

class
OP_ASSIGNMENT

lock_classes
PLUS

nr_lock_classes
PLUS
PLUS
SEMICOLON

debug_atomic_inc
BRACKET_O
AMPERSANT

nr_unused_locks
BRACKET_C
SEMICOLON

class
MINUS
GREATER

key
OP_ASSIGNMENT

key
SEMICOLON

class
MINUS
GREATER

name
OP_ASSIGNMENT

lock
MINUS
GREATER

name
SEMICOLON

class
MINUS
GREATER

subclass
OP_ASSIGNMENT

subclass
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

class
MINUS
GREATER

lock_entry
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

class
MINUS
GREATER

locks_before
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

class
MINUS
GREATER

locks_after
BRACKET_C
SEMICOLON

class
MINUS
GREATER

name_version
OP_ASSIGNMENT

count_matching_names
BRACKET_O

class
BRACKET_C
SEMICOLON

list_add_tail_rcu
BRACKET_O
AMPERSANT

class
MINUS
GREATER

hash_entry
COMMA

hash_head
BRACKET_C
SEMICOLON
IF
BRACKET_O

verbose
BRACKET_O

class
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

graph_unlock
BRACKET_O
BRACKET_C
SEMICOLON

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

class
MINUS
GREATER

key
COMMA

class
MINUS
GREATER

name
BRACKET_C
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

name_version
GREATER
NUMBER
BRACKET_C

printk
BRACKET_O
STRING
COMMA

class
MINUS
GREATER

name_version
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

raw_local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

graph_lock
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

out_unlock_set
COLON

graph_unlock
BRACKET_O
BRACKET_C
SEMICOLON

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

subclass
OR

force
BRACKET_C

lock
MINUS
GREATER

class_cache
OP_ASSIGNMENT

class
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O

class
MINUS
GREATER

subclass
NOT_EQ

subclass
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

return

class
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

lookup_chain_cache
BRACKET_O

u64

chain_key
COMMA
STRUCT

lock_class
MULT

class
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head
MULT

hash_head
OP_ASSIGNMENT

chainhashentry
BRACKET_O

chain_key
BRACKET_C
SEMICOLON
STRUCT

lock_chain
MULT

chain
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

list_for_each_entry
BRACKET_O

chain
COMMA

hash_head
COMMA

entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

chain
MINUS
GREATER

chain_key
EQ

chain_key
BRACKET_C
CURLY_BRACKET_O

cache_hit
COLON

debug_atomic_inc
BRACKET_O
AMPERSANT

chain_lookup_hits
BRACKET_C
SEMICOLON
IF
BRACKET_O

very_verbose
BRACKET_O

class
BRACKET_C
BRACKET_C

printk
BRACKET_O
STRING
STRING
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

chain_key
COMMA

class
MINUS
GREATER

key
COMMA

class
MINUS
GREATER

name
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

very_verbose
BRACKET_O

class
BRACKET_C
BRACKET_C

printk
BRACKET_O
STRING
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

chain_key
COMMA

class
MINUS
GREATER

key
COMMA

class
MINUS
GREATER

name
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

graph_lock
BRACKET_O
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

list_for_each_entry
BRACKET_O

chain
COMMA

hash_head
COMMA

entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

chain
MINUS
GREATER

chain_key
EQ

chain_key
BRACKET_C
CURLY_BRACKET_O

graph_unlock
BRACKET_O
BRACKET_C
SEMICOLON

goto

cache_hit
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

nr_lock_chains
GR_EQ

MAX_LOCKDEP_CHAINS
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

chain
OP_ASSIGNMENT

lock_chains
PLUS

nr_lock_chains
PLUS
PLUS
SEMICOLON

chain
MINUS
GREATER

chain_key
OP_ASSIGNMENT

chain_key
SEMICOLON

list_add_tail_rcu
BRACKET_O
AMPERSANT

chain
MINUS
GREATER

entry
COMMA

hash_head
BRACKET_C
SEMICOLON

debug_atomic_inc
BRACKET_O
AMPERSANT

chain_lookup_misses
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_TRACE_IRQFLAGS
IF
BRACKET_O

current
MINUS
GREATER

hardirq_context
BRACKET_C

nr_hardirq_chains
PLUS
PLUS
SEMICOLON
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

current
MINUS
GREATER

softirq_context
BRACKET_C

nr_softirq_chains
PLUS
PLUS
SEMICOLON
ELSE

nr_process_chains
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

nr_process_chains
PLUS
PLUS
SEMICOLON
PP_ENDIF

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

check_chain_key
BRACKET_O
STRUCT

task_struct
MULT

curr
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_DEBUG_LOCKDEP
STRUCT

held_lock
MULT

hlock
COMMA
MULT

prev_hlock
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

i
COMMA

id
SEMICOLON

u64

chain_key
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

curr
MINUS
GREATER

lockdep_depth
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

hlock
OP_ASSIGNMENT

curr
MINUS
GREATER

held_locks
PLUS

i
SEMICOLON
IF
BRACKET_O

chain_key
NOT_EQ

hlock
MINUS
GREATER

prev_chain_key
BRACKET_C
CURLY_BRACKET_O

debug_locks_off
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

lockdep_depth
COMMA

i
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

chain_key
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

hlock
MINUS
GREATER

prev_chain_key
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

id
OP_ASSIGNMENT

hlock
MINUS
GREATER

class
MINUS

lock_classes
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O

id
GR_EQ

MAX_LOCKDEP_KEYS
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

prev_hlock
AND
BRACKET_O

prev_hlock
MINUS
GREATER

irq_context
NOT_EQ

hlock
MINUS
GREATER

irq_context
BRACKET_C
BRACKET_C

chain_key
OP_ASSIGNMENT
NUMBER
SEMICOLON

chain_key
OP_ASSIGNMENT

iterate_chain_key
BRACKET_O

chain_key
COMMA

id
BRACKET_C
SEMICOLON

prev_hlock
OP_ASSIGNMENT

hlock
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

chain_key
NOT_EQ

curr
MINUS
GREATER

curr_chain_key
BRACKET_C
CURLY_BRACKET_O

debug_locks_off
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

lockdep_depth
COMMA

i
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

chain_key
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

curr
MINUS
GREATER

curr_chain_key
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
CURLY_BRACKET_C
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

static
TYPE_INT

print_irq_inversion_bug
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

lock_class
MULT

other
COMMA
STRUCT

held_lock
MULT

this
COMMA
TYPE_INT

forwards
COMMA
CONST
TYPE_CHAR
MULT

irqclass
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
OR

debug_locks_silent
BRACKET_C

return
NUMBER
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_kernel_version
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

comm
COMMA

curr
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

print_lock
BRACKET_O

this
BRACKET_C
SEMICOLON
IF
BRACKET_O

forwards
BRACKET_C

printk
BRACKET_O
STRING
COMMA

irqclass
BRACKET_C
SEMICOLON
ELSE

printk
BRACKET_O
STRING
COMMA

irqclass
BRACKET_C
SEMICOLON

print_lock_name
BRACKET_O

other
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

lockdep_print_held_locks
BRACKET_O

curr
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_lock_dependencies
BRACKET_O

this
MINUS
GREATER

class
COMMA
NUMBER
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_lock_dependencies
BRACKET_O

other
COMMA
NUMBER
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

check_usage_forwards
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

held_lock
MULT

this
COMMA

enum

lock_usage_bit

bit
COMMA
CONST
TYPE_CHAR
MULT

irqclass
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

find_usage_bit
OP_ASSIGNMENT

bit
SEMICOLON

ret
OP_ASSIGNMENT

find_usage_forwards
BRACKET_O

this
MINUS
GREATER

class
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
OR

ret
EQ
NUMBER
BRACKET_C

return

ret
SEMICOLON

return

print_irq_inversion_bug
BRACKET_O

curr
COMMA

forwards_match
COMMA

this
COMMA
NUMBER
COMMA

irqclass
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

check_usage_backwards
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

held_lock
MULT

this
COMMA

enum

lock_usage_bit

bit
COMMA
CONST
TYPE_CHAR
MULT

irqclass
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

find_usage_bit
OP_ASSIGNMENT

bit
SEMICOLON

ret
OP_ASSIGNMENT

find_usage_backwards
BRACKET_O

this
MINUS
GREATER

class
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
OR

ret
EQ
NUMBER
BRACKET_C

return

ret
SEMICOLON

return

print_irq_inversion_bug
BRACKET_O

curr
COMMA

backwards_match
COMMA

this
COMMA
NUMBER
COMMA

irqclass
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

print_irqtrace_events
BRACKET_O
STRUCT

task_struct
MULT

curr
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

irq_events
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

hardirq_enable_event
BRACKET_C
SEMICOLON

print_ip_sym
BRACKET_O

curr
MINUS
GREATER

hardirq_enable_ip
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

hardirq_disable_event
BRACKET_C
SEMICOLON

print_ip_sym
BRACKET_O

curr
MINUS
GREATER

hardirq_disable_ip
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

softirq_enable_event
BRACKET_C
SEMICOLON

print_ip_sym
BRACKET_O

curr
MINUS
GREATER

softirq_enable_ip
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

softirq_disable_event
BRACKET_C
SEMICOLON

print_ip_sym
BRACKET_O

curr
MINUS
GREATER

softirq_disable_ip
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

print_usage_bug
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

held_lock
MULT

this
COMMA

enum

lock_usage_bit

prev_bit
COMMA

enum

lock_usage_bit

new_bit
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
OR

debug_locks_silent
BRACKET_C

return
NUMBER
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_kernel_version
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

usage_str
CORNER_BRACKET_O

prev_bit
CORNER_BRACKET_C
COMMA

usage_str
CORNER_BRACKET_O

new_bit
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

comm
COMMA

curr
MINUS
GREATER

pid
COMMA

trace_hardirq_context
BRACKET_O

curr
BRACKET_C
COMMA

hardirq_count
BRACKET_O
BRACKET_C
GREATER
GREATER

HARDIRQ_SHIFT
COMMA

trace_softirq_context
BRACKET_O

curr
BRACKET_C
COMMA

softirq_count
BRACKET_O
BRACKET_C
GREATER
GREATER

SOFTIRQ_SHIFT
COMMA

trace_hardirqs_enabled
BRACKET_O

curr
BRACKET_C
COMMA

trace_softirqs_enabled
BRACKET_O

curr
BRACKET_C
BRACKET_C
SEMICOLON

print_lock
BRACKET_O

this
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

usage_str
CORNER_BRACKET_O

prev_bit
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

print_stack_trace
BRACKET_O

this
MINUS
GREATER

class
MINUS
GREATER

usage_traces
PLUS

prev_bit
COMMA
NUMBER
BRACKET_C
SEMICOLON

print_irqtrace_events
BRACKET_O

curr
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

lockdep_print_held_locks
BRACKET_O

curr
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

valid_state
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

held_lock
MULT

this
COMMA

enum

lock_usage_bit

new_bit
COMMA

enum

lock_usage_bit

bad_bit
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

this
MINUS
GREATER

class
MINUS
GREATER

usage_mask
AMPERSANT
BRACKET_O
NUMBER
LESS
LESS

bad_bit
BRACKET_C
BRACKET_C
BRACKET_C

return

print_usage_bug
BRACKET_O

curr
COMMA

this
COMMA

bad_bit
COMMA

new_bit
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

STRICT_READ_CHECKS
NUMBER

static
TYPE_INT

mark_lock
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

held_lock
MULT

this
COMMA

enum

lock_usage_bit

new_bit
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

new_mask
OP_ASSIGNMENT
NUMBER
LESS
LESS

new_bit
COMMA

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

this
MINUS
GREATER

class
MINUS
GREATER

usage_mask
AMPERSANT

new_mask
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

graph_lock
BRACKET_O
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

this
MINUS
GREATER

class
MINUS
GREATER

usage_mask
AMPERSANT

new_mask
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

graph_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

this
MINUS
GREATER

class
MINUS
GREATER

usage_mask
LOGICAL_OR
OP_ASSIGNMENT

new_mask
SEMICOLON
IF
BRACKET_O
NOT

save_trace
BRACKET_O

this
MINUS
GREATER

class
MINUS
GREATER

usage_traces
PLUS

new_bit
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
SWITCH
BRACKET_O

new_bit
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

case

LOCK_USED_IN_HARDIRQ
COLON
IF
BRACKET_O
NOT

valid_state
BRACKET_O

curr
COMMA

this
COMMA

new_bit
COMMA

LOCK_ENABLED_HARDIRQS
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

valid_state
BRACKET_O

curr
COMMA

this
COMMA

new_bit
COMMA

LOCK_ENABLED_HARDIRQS_READ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

check_usage_forwards
BRACKET_O

curr
COMMA

this
COMMA

LOCK_ENABLED_HARDIRQS
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_IF

STRICT_READ_CHECKS
IF
BRACKET_O
NOT

check_usage_forwards
BRACKET_O

curr
COMMA

this
COMMA

LOCK_ENABLED_HARDIRQS_READ
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_ENDIF
IF
BRACKET_O

hardirq_verbose
BRACKET_O

this
MINUS
GREATER

class
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

LOCK_USED_IN_SOFTIRQ
COLON
IF
BRACKET_O
NOT

valid_state
BRACKET_O

curr
COMMA

this
COMMA

new_bit
COMMA

LOCK_ENABLED_SOFTIRQS
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

valid_state
BRACKET_O

curr
COMMA

this
COMMA

new_bit
COMMA

LOCK_ENABLED_SOFTIRQS_READ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

check_usage_forwards
BRACKET_O

curr
COMMA

this
COMMA

LOCK_ENABLED_SOFTIRQS
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_IF

STRICT_READ_CHECKS
IF
BRACKET_O
NOT

check_usage_forwards
BRACKET_O

curr
COMMA

this
COMMA

LOCK_ENABLED_SOFTIRQS_READ
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_ENDIF
IF
BRACKET_O

softirq_verbose
BRACKET_O

this
MINUS
GREATER

class
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

LOCK_USED_IN_HARDIRQ_READ
COLON
IF
BRACKET_O
NOT

valid_state
BRACKET_O

curr
COMMA

this
COMMA

new_bit
COMMA

LOCK_ENABLED_HARDIRQS
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

check_usage_forwards
BRACKET_O

curr
COMMA

this
COMMA

LOCK_ENABLED_HARDIRQS
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

hardirq_verbose
BRACKET_O

this
MINUS
GREATER

class
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

LOCK_USED_IN_SOFTIRQ_READ
COLON
IF
BRACKET_O
NOT

valid_state
BRACKET_O

curr
COMMA

this
COMMA

new_bit
COMMA

LOCK_ENABLED_SOFTIRQS
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

check_usage_forwards
BRACKET_O

curr
COMMA

this
COMMA

LOCK_ENABLED_SOFTIRQS
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

softirq_verbose
BRACKET_O

this
MINUS
GREATER

class
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

LOCK_ENABLED_HARDIRQS
COLON
IF
BRACKET_O
NOT

valid_state
BRACKET_O

curr
COMMA

this
COMMA

new_bit
COMMA

LOCK_USED_IN_HARDIRQ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

valid_state
BRACKET_O

curr
COMMA

this
COMMA

new_bit
COMMA

LOCK_USED_IN_HARDIRQ_READ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

check_usage_backwards
BRACKET_O

curr
COMMA

this
COMMA

LOCK_USED_IN_HARDIRQ
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_IF

STRICT_READ_CHECKS
IF
BRACKET_O
NOT

check_usage_backwards
BRACKET_O

curr
COMMA

this
COMMA

LOCK_USED_IN_HARDIRQ_READ
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_ENDIF
IF
BRACKET_O

hardirq_verbose
BRACKET_O

this
MINUS
GREATER

class
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

LOCK_ENABLED_SOFTIRQS
COLON
IF
BRACKET_O
NOT

valid_state
BRACKET_O

curr
COMMA

this
COMMA

new_bit
COMMA

LOCK_USED_IN_SOFTIRQ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

valid_state
BRACKET_O

curr
COMMA

this
COMMA

new_bit
COMMA

LOCK_USED_IN_SOFTIRQ_READ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

check_usage_backwards
BRACKET_O

curr
COMMA

this
COMMA

LOCK_USED_IN_SOFTIRQ
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_IF

STRICT_READ_CHECKS
IF
BRACKET_O
NOT

check_usage_backwards
BRACKET_O

curr
COMMA

this
COMMA

LOCK_USED_IN_SOFTIRQ_READ
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_ENDIF
IF
BRACKET_O

softirq_verbose
BRACKET_O

this
MINUS
GREATER

class
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

LOCK_ENABLED_HARDIRQS_READ
COLON
IF
BRACKET_O
NOT

valid_state
BRACKET_O

curr
COMMA

this
COMMA

new_bit
COMMA

LOCK_USED_IN_HARDIRQ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_IF

STRICT_READ_CHECKS
IF
BRACKET_O
NOT

check_usage_backwards
BRACKET_O

curr
COMMA

this
COMMA

LOCK_USED_IN_HARDIRQ
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_ENDIF
IF
BRACKET_O

hardirq_verbose
BRACKET_O

this
MINUS
GREATER

class
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

LOCK_ENABLED_SOFTIRQS_READ
COLON
IF
BRACKET_O
NOT

valid_state
BRACKET_O

curr
COMMA

this
COMMA

new_bit
COMMA

LOCK_USED_IN_SOFTIRQ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_IF

STRICT_READ_CHECKS
IF
BRACKET_O
NOT

check_usage_backwards
BRACKET_O

curr
COMMA

this
COMMA

LOCK_USED_IN_SOFTIRQ
COMMA
STRING
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_ENDIF
IF
BRACKET_O

softirq_verbose
BRACKET_O

this
MINUS
GREATER

class
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON
PP_ENDIF

case

LOCK_USED
COLON

list_add_tail_rcu
BRACKET_O
AMPERSANT

this
MINUS
GREATER

class
MINUS
GREATER

lock_entry
COMMA
AMPERSANT

all_lock_classes
BRACKET_C
SEMICOLON

debug_atomic_dec
BRACKET_O
AMPERSANT

nr_unused_locks
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON
IF
BRACKET_O
NOT

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

graph_unlock
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

usage_str
CORNER_BRACKET_O

new_bit
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

print_lock
BRACKET_O

this
BRACKET_C
SEMICOLON

print_irqtrace_events
BRACKET_O

curr
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

static
TYPE_INT

mark_held_locks
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
TYPE_INT

hardirq
BRACKET_C
CURLY_BRACKET_O

enum

lock_usage_bit

usage_bit
SEMICOLON
STRUCT

held_lock
MULT

hlock
SEMICOLON
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

curr
MINUS
GREATER

lockdep_depth
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

hlock
OP_ASSIGNMENT

curr
MINUS
GREATER

held_locks
PLUS

i
SEMICOLON
IF
BRACKET_O

hardirq
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

hlock
MINUS
GREATER

read
BRACKET_C

usage_bit
OP_ASSIGNMENT

LOCK_ENABLED_HARDIRQS_READ
SEMICOLON
ELSE

usage_bit
OP_ASSIGNMENT

LOCK_ENABLED_HARDIRQS
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

hlock
MINUS
GREATER

read
BRACKET_C

usage_bit
OP_ASSIGNMENT

LOCK_ENABLED_SOFTIRQS_READ
SEMICOLON
ELSE

usage_bit
OP_ASSIGNMENT

LOCK_ENABLED_SOFTIRQS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

mark_lock
BRACKET_O

curr
COMMA

hlock
COMMA

usage_bit
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

early_boot_irqs_enabled
SEMICOLON

void

early_boot_irqs_off
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

early_boot_irqs_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

early_boot_irqs_on
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

early_boot_irqs_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

trace_hardirqs_on
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

curr
OP_ASSIGNMENT

current
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

ip
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
OR

current
MINUS
GREATER

lockdep_recursion
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O

unlikely
BRACKET_O
NOT

early_boot_irqs_enabled
BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

curr
MINUS
GREATER

hardirqs_enabled
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

debug_atomic_inc
BRACKET_O
AMPERSANT

redundant_hardirqs_on
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

curr
MINUS
GREATER

hardirqs_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON

ip
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O

current
MINUS
GREATER

hardirq_context
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O
NOT

mark_held_locks
BRACKET_O

curr
COMMA
NUMBER
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

softirqs_enabled
BRACKET_C
IF
BRACKET_O
NOT

mark_held_locks
BRACKET_O

curr
COMMA
NUMBER
BRACKET_C
BRACKET_C

return
SEMICOLON

curr
MINUS
GREATER

hardirq_enable_ip
OP_ASSIGNMENT

ip
SEMICOLON

curr
MINUS
GREATER

hardirq_enable_event
OP_ASSIGNMENT
PLUS
PLUS

curr
MINUS
GREATER

irq_events
SEMICOLON

debug_atomic_inc
BRACKET_O
AMPERSANT

hardirqs_on_events
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

trace_hardirqs_on
BRACKET_C
SEMICOLON

void

trace_hardirqs_off
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

curr
OP_ASSIGNMENT

current
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
OR

current
MINUS
GREATER

lockdep_recursion
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

hardirqs_enabled
BRACKET_C
CURLY_BRACKET_O

curr
MINUS
GREATER

hardirqs_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON

curr
MINUS
GREATER

hardirq_disable_ip
OP_ASSIGNMENT

_RET_IP_
SEMICOLON

curr
MINUS
GREATER

hardirq_disable_event
OP_ASSIGNMENT
PLUS
PLUS

curr
MINUS
GREATER

irq_events
SEMICOLON

debug_atomic_inc
BRACKET_O
AMPERSANT

hardirqs_off_events
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

debug_atomic_inc
BRACKET_O
AMPERSANT

redundant_hardirqs_off
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

trace_hardirqs_off
BRACKET_C
SEMICOLON

void

trace_softirqs_on
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

curr
OP_ASSIGNMENT

current
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

softirqs_enabled
BRACKET_C
CURLY_BRACKET_O

debug_atomic_inc
BRACKET_O
AMPERSANT

redundant_softirqs_on
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

curr
MINUS
GREATER

softirqs_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON

curr
MINUS
GREATER

softirq_enable_ip
OP_ASSIGNMENT

ip
SEMICOLON

curr
MINUS
GREATER

softirq_enable_event
OP_ASSIGNMENT
PLUS
PLUS

curr
MINUS
GREATER

irq_events
SEMICOLON

debug_atomic_inc
BRACKET_O
AMPERSANT

softirqs_on_events
BRACKET_C
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

hardirqs_enabled
BRACKET_C

mark_held_locks
BRACKET_O

curr
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

trace_softirqs_off
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

curr
OP_ASSIGNMENT

current
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

softirqs_enabled
BRACKET_C
CURLY_BRACKET_O

curr
MINUS
GREATER

softirqs_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON

curr
MINUS
GREATER

softirq_disable_ip
OP_ASSIGNMENT

ip
SEMICOLON

curr
MINUS
GREATER

softirq_disable_event
OP_ASSIGNMENT
PLUS
PLUS

curr
MINUS
GREATER

irq_events
SEMICOLON

debug_atomic_inc
BRACKET_O
AMPERSANT

softirqs_off_events
BRACKET_C
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

softirq_count
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

debug_atomic_inc
BRACKET_O
AMPERSANT

redundant_softirqs_off
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

void

lockdep_init_map
BRACKET_O
STRUCT

lockdep_map
MULT

lock
COMMA
CONST
TYPE_CHAR
MULT

name
COMMA
STRUCT

lock_class_key
MULT

key
COMMA
TYPE_INT

subclass
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

key
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

name
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O
NOT

static_obj
BRACKET_O

key
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

key
BRACKET_C
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

lock
MINUS
GREATER

name
OP_ASSIGNMENT

name
SEMICOLON

lock
MINUS
GREATER

key
OP_ASSIGNMENT

key
SEMICOLON

lock
MINUS
GREATER

class_cache
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

subclass
BRACKET_C

register_lock_class
BRACKET_O

lock
COMMA

subclass
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

lockdep_init_map
BRACKET_C
SEMICOLON

static
TYPE_INT

__lock_acquire
BRACKET_O
STRUCT

lockdep_map
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_INT

subclass
COMMA
TYPE_INT

trylock
COMMA
TYPE_INT

read
COMMA
TYPE_INT

check
COMMA
TYPE_INT

hardirqs_off
COMMA
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

curr
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

lock_class
MULT

class
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

held_lock
MULT

hlock
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

depth
COMMA

id
SEMICOLON
TYPE_INT

chain_head
OP_ASSIGNMENT
NUMBER
SEMICOLON

u64

chain_key
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

subclass
GR_EQ

MAX_LOCKDEP_SUBCLASSES
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

debug_locks_off
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

subclass
BRACKET_C

class
OP_ASSIGNMENT

lock
MINUS
GREATER

class_cache
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

class
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

class
OP_ASSIGNMENT

register_lock_class
BRACKET_O

lock
COMMA

subclass
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

class
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

debug_atomic_inc
BRACKET_O
BRACKET_O

atomic_t
MULT
BRACKET_C
AMPERSANT

class
MINUS
GREATER

ops
BRACKET_C
SEMICOLON
IF
BRACKET_O

very_verbose
BRACKET_O

class
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

class
MINUS
GREATER

key
COMMA

class
MINUS
GREATER

name
BRACKET_C
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

name_version
GREATER
NUMBER
BRACKET_C

printk
BRACKET_O
STRING
COMMA

class
MINUS
GREATER

name_version
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

depth
OP_ASSIGNMENT

curr
MINUS
GREATER

lockdep_depth
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O

depth
GR_EQ

MAX_LOCK_DEPTH
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

hlock
OP_ASSIGNMENT

curr
MINUS
GREATER

held_locks
PLUS

depth
SEMICOLON

hlock
MINUS
GREATER

class
OP_ASSIGNMENT

class
SEMICOLON

hlock
MINUS
GREATER

acquire_ip
OP_ASSIGNMENT

ip
SEMICOLON

hlock
MINUS
GREATER

instance
OP_ASSIGNMENT

lock
SEMICOLON

hlock
MINUS
GREATER

trylock
OP_ASSIGNMENT

trylock
SEMICOLON

hlock
MINUS
GREATER

read
OP_ASSIGNMENT

read
SEMICOLON

hlock
MINUS
GREATER

check
OP_ASSIGNMENT

check
SEMICOLON

hlock
MINUS
GREATER

hardirqs_off
OP_ASSIGNMENT

hardirqs_off
SEMICOLON
IF
BRACKET_O

check
NOT_EQ
NUMBER
BRACKET_C

goto

out_calc_hash
SEMICOLON
PP_IFDEF

CONFIG_TRACE_IRQFLAGS
IF
BRACKET_O
NOT

trylock
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

read
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

curr
MINUS
GREATER

hardirq_context
BRACKET_C
IF
BRACKET_O
NOT

mark_lock
BRACKET_O

curr
COMMA

hlock
COMMA

LOCK_USED_IN_HARDIRQ_READ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

softirq_context
BRACKET_C
IF
BRACKET_O
NOT

mark_lock
BRACKET_O

curr
COMMA

hlock
COMMA

LOCK_USED_IN_SOFTIRQ_READ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

curr
MINUS
GREATER

hardirq_context
BRACKET_C
IF
BRACKET_O
NOT

mark_lock
BRACKET_O

curr
COMMA

hlock
COMMA

LOCK_USED_IN_HARDIRQ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

softirq_context
BRACKET_C
IF
BRACKET_O
NOT

mark_lock
BRACKET_O

curr
COMMA

hlock
COMMA

LOCK_USED_IN_SOFTIRQ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

hardirqs_off
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

read
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

mark_lock
BRACKET_O

curr
COMMA

hlock
COMMA

LOCK_ENABLED_HARDIRQS_READ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

softirqs_enabled
BRACKET_C
IF
BRACKET_O
NOT

mark_lock
BRACKET_O

curr
COMMA

hlock
COMMA

LOCK_ENABLED_SOFTIRQS_READ
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O
NOT

mark_lock
BRACKET_O

curr
COMMA

hlock
COMMA

LOCK_ENABLED_HARDIRQS
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

softirqs_enabled
BRACKET_C
IF
BRACKET_O
NOT

mark_lock
BRACKET_O

curr
COMMA

hlock
COMMA

LOCK_ENABLED_SOFTIRQS
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ENDIF
IF
BRACKET_O
NOT

mark_lock
BRACKET_O

curr
COMMA

hlock
COMMA

LOCK_USED
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

out_calc_hash
COLON

id
OP_ASSIGNMENT

class
MINUS

lock_classes
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O

id
GR_EQ

MAX_LOCKDEP_KEYS
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

chain_key
OP_ASSIGNMENT

curr
MINUS
GREATER

curr_chain_key
SEMICOLON
IF
BRACKET_O
NOT

depth
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O

chain_key
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

chain_head
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

hlock
MINUS
GREATER

prev_chain_key
OP_ASSIGNMENT

chain_key
SEMICOLON
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

hlock
MINUS
GREATER

irq_context
OP_ASSIGNMENT
NUMBER
MULT
BRACKET_O

curr
MINUS
GREATER

hardirq_context
QUESTION_MARK
NUMBER
COLON
NUMBER
BRACKET_C
PLUS

curr
MINUS
GREATER

softirq_context
SEMICOLON
IF
BRACKET_O

depth
BRACKET_C
CURLY_BRACKET_O
STRUCT

held_lock
MULT

prev_hlock
SEMICOLON

prev_hlock
OP_ASSIGNMENT

curr
MINUS
GREATER

held_locks
PLUS

depth
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

prev_hlock
MINUS
GREATER

irq_context
NOT_EQ

hlock
MINUS
GREATER

irq_context
BRACKET_C
CURLY_BRACKET_O

chain_key
OP_ASSIGNMENT
NUMBER
SEMICOLON

chain_head
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ENDIF

chain_key
OP_ASSIGNMENT

iterate_chain_key
BRACKET_O

chain_key
COMMA

id
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

trylock
AND
BRACKET_O

check
EQ
NUMBER
BRACKET_C
AND

lookup_chain_cache
BRACKET_O

chain_key
COMMA

class
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT

check_deadlock
BRACKET_O

curr
COMMA

hlock
COMMA

lock
COMMA

read
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

ret
EQ
NUMBER
BRACKET_C

hlock
MINUS
GREATER

read
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

chain_head
AND

ret
NOT_EQ
NUMBER
BRACKET_C
IF
BRACKET_O
NOT

check_prevs_add
BRACKET_O

curr
COMMA

hlock
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

graph_unlock
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

curr
MINUS
GREATER

curr_chain_key
OP_ASSIGNMENT

chain_key
SEMICOLON

curr
MINUS
GREATER

lockdep_depth
PLUS
PLUS
SEMICOLON

check_chain_key
BRACKET_O

curr
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_DEBUG_LOCKDEP
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_ENDIF
IF
BRACKET_O

unlikely
BRACKET_O

curr
MINUS
GREATER

lockdep_depth
GR_EQ

MAX_LOCK_DEPTH
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

debug_locks_off
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

curr
MINUS
GREATER

lockdep_depth
GREATER

max_lockdep_depth
BRACKET_C
BRACKET_C

max_lockdep_depth
OP_ASSIGNMENT

curr
MINUS
GREATER

lockdep_depth
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

print_unlock_inbalance_bug
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

lockdep_map
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

debug_locks_off
BRACKET_O
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

debug_locks_silent
BRACKET_C

return
NUMBER
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

comm
COMMA

curr
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

print_lockdep_cache
BRACKET_O

lock
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_ip_sym
BRACKET_O

ip
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

lockdep_print_held_locks
BRACKET_O

curr
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

check_unlock
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

lockdep_map
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

lockdep_depth
LE_EQ
NUMBER
BRACKET_C

return

print_unlock_inbalance_bug
BRACKET_O

curr
COMMA

lock
COMMA

ip
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

lock_release_non_nested
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

lockdep_map
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O
STRUCT

held_lock
MULT

hlock
COMMA
MULT

prev_hlock
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

depth
SEMICOLON
TYPE_INT

i
SEMICOLON

depth
OP_ASSIGNMENT

curr
MINUS
GREATER

lockdep_depth
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

depth
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

prev_hlock
OP_ASSIGNMENT

NULL
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT

depth
MINUS
NUMBER
SEMICOLON

i
GR_EQ
NUMBER
SEMICOLON

i
MINUS
MINUS
BRACKET_C
CURLY_BRACKET_O

hlock
OP_ASSIGNMENT

curr
MINUS
GREATER

held_locks
PLUS

i
SEMICOLON
IF
BRACKET_O

prev_hlock
AND

prev_hlock
MINUS
GREATER

irq_context
NOT_EQ

hlock
MINUS
GREATER

irq_context
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

hlock
MINUS
GREATER

instance
EQ

lock
BRACKET_C

goto

found_it
SEMICOLON

prev_hlock
OP_ASSIGNMENT

hlock
SEMICOLON
CURLY_BRACKET_C

return

print_unlock_inbalance_bug
BRACKET_O

curr
COMMA

lock
COMMA

ip
BRACKET_C
SEMICOLON

found_it
COLON

curr
MINUS
GREATER

lockdep_depth
OP_ASSIGNMENT

i
SEMICOLON

curr
MINUS
GREATER

curr_chain_key
OP_ASSIGNMENT

hlock
MINUS
GREATER

prev_chain_key
SEMICOLON
FOR
BRACKET_O

i
PLUS
PLUS
SEMICOLON

i
LESS

depth
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

hlock
OP_ASSIGNMENT

curr
MINUS
GREATER

held_locks
PLUS

i
SEMICOLON
IF
BRACKET_O
NOT

__lock_acquire
BRACKET_O

hlock
MINUS
GREATER

instance
COMMA

hlock
MINUS
GREATER

class
MINUS
GREATER

subclass
COMMA

hlock
MINUS
GREATER

trylock
COMMA

hlock
MINUS
GREATER

read
COMMA

hlock
MINUS
GREATER

check
COMMA

hlock
MINUS
GREATER

hardirqs_off
COMMA

hlock
MINUS
GREATER

acquire_ip
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O

curr
MINUS
GREATER

lockdep_depth
NOT_EQ

depth
MINUS
NUMBER
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

lock_release_nested
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
STRUCT

lockdep_map
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O
STRUCT

held_lock
MULT

hlock
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

depth
SEMICOLON

depth
OP_ASSIGNMENT

curr
MINUS
GREATER

lockdep_depth
MINUS
NUMBER
SEMICOLON

hlock
OP_ASSIGNMENT

curr
MINUS
GREATER

held_locks
PLUS

depth
SEMICOLON
IF
BRACKET_O

hlock
MINUS
GREATER

instance
NOT_EQ

lock
BRACKET_C

return

lock_release_non_nested
BRACKET_O

curr
COMMA

lock
COMMA

ip
BRACKET_C
SEMICOLON

curr
MINUS
GREATER

lockdep_depth
MINUS
MINUS
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

depth
AND
BRACKET_O

hlock
MINUS
GREATER

prev_chain_key
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

curr
MINUS
GREATER

curr_chain_key
OP_ASSIGNMENT

hlock
MINUS
GREATER

prev_chain_key
SEMICOLON
PP_IFDEF

CONFIG_DEBUG_LOCKDEP

hlock
MINUS
GREATER

prev_chain_key
OP_ASSIGNMENT
NUMBER
SEMICOLON

hlock
MINUS
GREATER

class
OP_ASSIGNMENT

NULL
SEMICOLON

hlock
MINUS
GREATER

acquire_ip
OP_ASSIGNMENT
NUMBER
SEMICOLON

hlock
MINUS
GREATER

irq_context
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

__lock_release
BRACKET_O
STRUCT

lockdep_map
MULT

lock
COMMA
TYPE_INT

nested
COMMA
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

curr
OP_ASSIGNMENT

current
SEMICOLON
IF
BRACKET_O
NOT

check_unlock
BRACKET_O

curr
COMMA

lock
COMMA

ip
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

nested
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

lock_release_nested
BRACKET_O

curr
COMMA

lock
COMMA

ip
BRACKET_C
BRACKET_C

return
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O
NOT

lock_release_non_nested
BRACKET_O

curr
COMMA

lock
COMMA

ip
BRACKET_C
BRACKET_C

return
SEMICOLON
CURLY_BRACKET_C

check_chain_key
BRACKET_O

curr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

check_flags
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
BRACKET_C
CURLY_BRACKET_O
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_DEBUG_LOCKDEP
BRACKET_C
AND
PP_DEFINED
BRACKET_O

CONFIG_TRACE_IRQFLAGS
BRACKET_C
IF
BRACKET_O
NOT

debug_locks
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

irqs_disabled_flags
BRACKET_O

flags
BRACKET_C
BRACKET_C

DEBUG_LOCKS_WARN_ON
BRACKET_O

current
MINUS
GREATER

hardirqs_enabled
BRACKET_C
SEMICOLON
ELSE

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

current
MINUS
GREATER

hardirqs_enabled
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

hardirq_count
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

softirq_count
BRACKET_O
BRACKET_C
BRACKET_C

DEBUG_LOCKS_WARN_ON
BRACKET_O

current
MINUS
GREATER

softirqs_enabled
BRACKET_C
SEMICOLON
ELSE

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

current
MINUS
GREATER

softirqs_enabled
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

debug_locks
BRACKET_C

print_irqtrace_events
BRACKET_O

current
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

void

lock_acquire
BRACKET_O
STRUCT

lockdep_map
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_INT

subclass
COMMA
TYPE_INT

trylock
COMMA
TYPE_INT

read
COMMA
TYPE_INT

check
COMMA
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

current
MINUS
GREATER

lockdep_recursion
BRACKET_C
BRACKET_C

return
SEMICOLON

raw_local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

check_flags
BRACKET_O

flags
BRACKET_C
SEMICOLON

current
MINUS
GREATER

lockdep_recursion
OP_ASSIGNMENT
NUMBER
SEMICOLON

__lock_acquire
BRACKET_O

lock
COMMA

subclass
COMMA

trylock
COMMA

read
COMMA

check
COMMA

irqs_disabled_flags
BRACKET_O

flags
BRACKET_C
COMMA

ip
BRACKET_C
SEMICOLON

current
MINUS
GREATER

lockdep_recursion
OP_ASSIGNMENT
NUMBER
SEMICOLON

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

lock_acquire
BRACKET_C
SEMICOLON

void

lock_release
BRACKET_O
STRUCT

lockdep_map
MULT

lock
COMMA
TYPE_INT

nested
COMMA
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

current
MINUS
GREATER

lockdep_recursion
BRACKET_C
BRACKET_C

return
SEMICOLON

raw_local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

check_flags
BRACKET_O

flags
BRACKET_C
SEMICOLON

current
MINUS
GREATER

lockdep_recursion
OP_ASSIGNMENT
NUMBER
SEMICOLON

__lock_release
BRACKET_O

lock
COMMA

nested
COMMA

ip
BRACKET_C
SEMICOLON

current
MINUS
GREATER

lockdep_recursion
OP_ASSIGNMENT
NUMBER
SEMICOLON

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

lock_release
BRACKET_C
SEMICOLON

void

lockdep_reset
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

i
SEMICOLON

raw_local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

current
MINUS
GREATER

curr_chain_key
OP_ASSIGNMENT
NUMBER
SEMICOLON

current
MINUS
GREATER

lockdep_depth
OP_ASSIGNMENT
NUMBER
SEMICOLON

current
MINUS
GREATER

lockdep_recursion
OP_ASSIGNMENT
NUMBER
SEMICOLON

memset
BRACKET_O

current
MINUS
GREATER

held_locks
COMMA
NUMBER
COMMA

MAX_LOCK_DEPTH
MULT

sizeof
BRACKET_O
STRUCT

held_lock
BRACKET_C
BRACKET_C
SEMICOLON

nr_hardirq_chains
OP_ASSIGNMENT
NUMBER
SEMICOLON

nr_softirq_chains
OP_ASSIGNMENT
NUMBER
SEMICOLON

nr_process_chains
OP_ASSIGNMENT
NUMBER
SEMICOLON

debug_locks
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

CHAINHASH_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C

INIT_LIST_HEAD
BRACKET_O

chainhash_table
PLUS

i
BRACKET_C
SEMICOLON

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

zap_class
BRACKET_O
STRUCT

lock_class
MULT

class
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nr_list_entries
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

list_entries
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

class
EQ

class
BRACKET_C

list_del_rcu
BRACKET_O
AMPERSANT

list_entries
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

entry
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

list_del_rcu
BRACKET_O
AMPERSANT

class
MINUS
GREATER

hash_entry
BRACKET_C
SEMICOLON

list_del_rcu
BRACKET_O
AMPERSANT

class
MINUS
GREATER

lock_entry
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

within
BRACKET_O

void
MULT

addr
COMMA

void
MULT

start
COMMA
TYPE_UNSIGNED
TYPE_LONG

size
BRACKET_C
CURLY_BRACKET_O

return

addr
GR_EQ

start
AND

addr
LESS

start
PLUS

size
SEMICOLON
CURLY_BRACKET_C

void

lockdep_free_key_range
BRACKET_O

void
MULT

start
COMMA
TYPE_UNSIGNED
TYPE_LONG

size
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_class
MULT

class
COMMA
MULT

next
SEMICOLON
STRUCT

list_head
MULT

head
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

i
SEMICOLON

raw_local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

graph_lock
BRACKET_O
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

CLASSHASH_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

head
OP_ASSIGNMENT

classhash_table
PLUS

i
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O

head
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

list_for_each_entry_safe
BRACKET_O

class
COMMA

next
COMMA

head
COMMA

hash_entry
BRACKET_C
IF
BRACKET_O

within
BRACKET_O

class
MINUS
GREATER

key
COMMA

start
COMMA

size
BRACKET_C
BRACKET_C

zap_class
BRACKET_O

class
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

graph_unlock
BRACKET_O
BRACKET_C
SEMICOLON

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

lockdep_reset_lock
BRACKET_O
STRUCT

lockdep_map
MULT

lock
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_class
MULT

class
COMMA
MULT

next
SEMICOLON
STRUCT

list_head
MULT

head
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

i
COMMA

j
SEMICOLON

raw_local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

MAX_LOCKDEP_SUBCLASSES
SEMICOLON

j
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

class
OP_ASSIGNMENT

look_up_lock_class
BRACKET_O

lock
COMMA

j
BRACKET_C
SEMICOLON
IF
BRACKET_O

class
BRACKET_C

zap_class
BRACKET_O

class
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

graph_lock
BRACKET_O
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

CLASSHASH_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

head
OP_ASSIGNMENT

classhash_table
PLUS

i
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O

head
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

list_for_each_entry_safe
BRACKET_O

class
COMMA

next
COMMA

head
COMMA

hash_entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

class
EQ

lock
MINUS
GREATER

class_cache
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

debug_locks_off_graph_unlock
BRACKET_O
BRACKET_C
BRACKET_C

WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

goto

out_restore
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

graph_unlock
BRACKET_O
BRACKET_C
SEMICOLON

out_restore
COLON

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

lockdep_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

lockdep_initialized
BRACKET_C

return
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

CLASSHASH_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C

INIT_LIST_HEAD
BRACKET_O

classhash_table
PLUS

i
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

CHAINHASH_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C

INIT_LIST_HEAD
BRACKET_O

chainhash_table
PLUS

i
BRACKET_C
SEMICOLON

lockdep_initialized
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

__init

lockdep_info
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

MAX_LOCKDEP_SUBCLASSES
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

MAX_LOCK_DEPTH
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

MAX_LOCKDEP_KEYS
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

CLASSHASH_SIZE
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

MAX_LOCKDEP_ENTRIES
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

MAX_LOCKDEP_CHAINS
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

CHAINHASH_SIZE
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA
BRACKET_O

sizeof
BRACKET_O
STRUCT

lock_class
BRACKET_C
MULT

MAX_LOCKDEP_KEYS
PLUS

sizeof
BRACKET_O
STRUCT

list_head
BRACKET_C
MULT

CLASSHASH_SIZE
PLUS

sizeof
BRACKET_O
STRUCT

lock_list
BRACKET_C
MULT

MAX_LOCKDEP_ENTRIES
PLUS

sizeof
BRACKET_O
STRUCT

lock_chain
BRACKET_C
MULT

MAX_LOCKDEP_CHAINS
PLUS

sizeof
BRACKET_O
STRUCT

list_head
BRACKET_C
MULT

CHAINHASH_SIZE
BRACKET_C
DIV
NUMBER
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

sizeof
BRACKET_O
STRUCT

held_lock
BRACKET_C
MULT

MAX_LOCK_DEPTH
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_DEBUG_LOCKDEP
IF
BRACKET_O

lockdep_init_error
BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

static

inline
TYPE_INT

in_range
BRACKET_O
CONST

void
MULT

start
COMMA
CONST

void
MULT

addr
COMMA
CONST

void
MULT

end
BRACKET_C
CURLY_BRACKET_O

return

addr
GR_EQ

start
AND

addr
LE_EQ

end
SEMICOLON
CURLY_BRACKET_C

static

void

print_freed_lock_bug
BRACKET_O
STRUCT

task_struct
MULT

curr
COMMA
CONST

void
MULT

mem_from
COMMA
CONST

void
MULT

mem_to
COMMA
STRUCT

held_lock
MULT

hlock
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

debug_locks_off
BRACKET_O
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

debug_locks_silent
BRACKET_C

return
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

comm
COMMA

curr
MINUS
GREATER

pid
COMMA

mem_from
COMMA

mem_to
MINUS
NUMBER
BRACKET_C
SEMICOLON

print_lock
BRACKET_O

hlock
BRACKET_C
SEMICOLON

lockdep_print_held_locks
BRACKET_O

curr
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_check_no_locks_freed
BRACKET_O
CONST

void
MULT

mem_from
COMMA
TYPE_UNSIGNED
TYPE_LONG

mem_len
BRACKET_C
CURLY_BRACKET_O
CONST

void
MULT

mem_to
OP_ASSIGNMENT

mem_from
PLUS

mem_len
COMMA
MULT

lock_from
COMMA
MULT

lock_to
SEMICOLON
STRUCT

task_struct
MULT

curr
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

held_lock
MULT

hlock
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
BRACKET_C
BRACKET_C

return
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

curr
MINUS
GREATER

lockdep_depth
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

hlock
OP_ASSIGNMENT

curr
MINUS
GREATER

held_locks
PLUS

i
SEMICOLON

lock_from
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

hlock
MINUS
GREATER

instance
SEMICOLON

lock_to
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C
BRACKET_O

hlock
MINUS
GREATER

instance
PLUS
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

in_range
BRACKET_O

mem_from
COMMA

lock_from
COMMA

mem_to
BRACKET_C
AND
NOT

in_range
BRACKET_O

mem_from
COMMA

lock_to
COMMA

mem_to
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

print_freed_lock_bug
BRACKET_O

curr
COMMA

mem_from
COMMA

mem_to
COMMA

hlock
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

debug_check_no_locks_freed
BRACKET_C
SEMICOLON

static

void

print_held_locks_bug
BRACKET_O
STRUCT

task_struct
MULT

curr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

debug_locks_off
BRACKET_O
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

debug_locks_silent
BRACKET_C

return
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

curr
MINUS
GREATER

comm
COMMA

curr
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

lockdep_print_held_locks
BRACKET_O

curr
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_check_no_locks_held
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

task
MINUS
GREATER

lockdep_depth
GREATER
NUMBER
BRACKET_C
BRACKET_C

print_held_locks_bug
BRACKET_O

task
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_show_all_locks
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

g
COMMA
MULT

p
SEMICOLON
TYPE_INT

count
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

unlock
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

retry
COLON
IF
BRACKET_O
NOT

read_trylock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

count
EQ
NUMBER
BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

count
BRACKET_C
CURLY_BRACKET_O

count
MINUS
MINUS
SEMICOLON

printk
BRACKET_O
STRING
COMMA
NUMBER
MINUS

count
BRACKET_C
SEMICOLON

mdelay
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

goto

retry
SEMICOLON
CURLY_BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

unlock
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

count
NOT_EQ
NUMBER
BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

do_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

lockdep_depth
BRACKET_C

lockdep_print_held_locks
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

unlock
BRACKET_C
IF
BRACKET_O

read_trylock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
BRACKET_C

unlock
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

while_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlock
BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

debug_show_all_locks
BRACKET_C
SEMICOLON

void

debug_show_held_locks
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

lockdep_print_held_locks
BRACKET_O

task
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

debug_show_held_locks
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static

void
MULT

l_next
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

v
COMMA

loff_t
MULT

pos
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_class
MULT

class
OP_ASSIGNMENT

v
SEMICOLON
BRACKET_O
MULT

pos
BRACKET_C
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

lock_entry
DOT

next
NOT_EQ
AMPERSANT

all_lock_classes
BRACKET_C

class
OP_ASSIGNMENT

list_entry
BRACKET_O

class
MINUS
GREATER

lock_entry
DOT

next
COMMA
STRUCT

lock_class
COMMA

lock_entry
BRACKET_C
SEMICOLON
ELSE

class
OP_ASSIGNMENT

NULL
SEMICOLON

m
MINUS
GREATER

private
OP_ASSIGNMENT

class
SEMICOLON

return

class
SEMICOLON
CURLY_BRACKET_C

static

void
MULT

l_start
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

loff_t
MULT

pos
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_class
MULT

class
OP_ASSIGNMENT

m
MINUS
GREATER

private
SEMICOLON
IF
BRACKET_O
AMPERSANT

class
MINUS
GREATER

lock_entry
EQ

all_lock_classes
DOT

next
BRACKET_C

seq_printf
BRACKET_O

m
COMMA
STRING
BRACKET_C
SEMICOLON

return

class
SEMICOLON
CURLY_BRACKET_C

static

void

l_stop
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG

count_forward_deps
BRACKET_O
STRUCT

lock_class
MULT

class
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_list
MULT

entry
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

list_for_each_entry
BRACKET_O

entry
COMMA
AMPERSANT

class
MINUS
GREATER

locks_after
COMMA

entry
BRACKET_C

ret
ASSIGN_PLUS

count_forward_deps
BRACKET_O

entry
MINUS
GREATER

class
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG

count_backward_deps
BRACKET_O
STRUCT

lock_class
MULT

class
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_list
MULT

entry
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

list_for_each_entry
BRACKET_O

entry
COMMA
AMPERSANT

class
MINUS
GREATER

locks_before
COMMA

entry
BRACKET_C

ret
ASSIGN_PLUS

count_backward_deps
BRACKET_O

entry
MINUS
GREATER

class
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

void

print_name
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA
STRUCT

lock_class
MULT

class
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

str
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
CONST
TYPE_CHAR
MULT

name
OP_ASSIGNMENT

class
MINUS
GREATER

name
SEMICOLON
IF
BRACKET_O
NOT

name
BRACKET_C
CURLY_BRACKET_O

name
OP_ASSIGNMENT

__get_key_name
BRACKET_O

class
MINUS
GREATER

key
COMMA

str
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

name
BRACKET_C
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

name_version
GREATER
NUMBER
BRACKET_C

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

class
MINUS
GREATER

name_version
BRACKET_C
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

subclass
BRACKET_C

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

class
MINUS
GREATER

subclass
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

l_show
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

nr_forward_deps
COMMA

nr_backward_deps
SEMICOLON
STRUCT

lock_class
MULT

class
OP_ASSIGNMENT

m
MINUS
GREATER

private
SEMICOLON
STRUCT

lock_list
MULT

entry
SEMICOLON
TYPE_CHAR

c1
COMMA

c2
COMMA

c3
COMMA

c4
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

class
MINUS
GREATER

key
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_DEBUG_LOCKDEP

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

class
MINUS
GREATER

ops
BRACKET_C
SEMICOLON
PP_ENDIF

nr_forward_deps
OP_ASSIGNMENT

count_forward_deps
BRACKET_O

class
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_forward_deps
BRACKET_C
SEMICOLON

nr_backward_deps
OP_ASSIGNMENT

count_backward_deps
BRACKET_O

class
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_backward_deps
BRACKET_C
SEMICOLON

get_usage_chars
BRACKET_O

class
COMMA
AMPERSANT

c1
COMMA
AMPERSANT

c2
COMMA
AMPERSANT

c3
COMMA
AMPERSANT

c4
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

c1
COMMA

c2
COMMA

c3
COMMA

c4
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
BRACKET_C
SEMICOLON

print_name
BRACKET_O

m
COMMA

class
BRACKET_C
SEMICOLON

seq_puts
BRACKET_O

m
COMMA
STRING
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

entry
COMMA
AMPERSANT

class
MINUS
GREATER

locks_after
COMMA

entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

entry
MINUS
GREATER

distance
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

entry
MINUS
GREATER

class
BRACKET_C
SEMICOLON

print_name
BRACKET_O

m
COMMA

entry
MINUS
GREATER

class
BRACKET_C
SEMICOLON

seq_puts
BRACKET_O

m
COMMA
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

seq_puts
BRACKET_O

m
COMMA
STRING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

seq_operations

lockdep_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

start
OP_ASSIGNMENT

l_start
COMMA
DOT

next
OP_ASSIGNMENT

l_next
COMMA
DOT

stop
OP_ASSIGNMENT

l_stop
COMMA
DOT

show
OP_ASSIGNMENT

l_show
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

lockdep_open
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

res
OP_ASSIGNMENT

seq_open
BRACKET_O

file
COMMA
AMPERSANT

lockdep_ops
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

res
BRACKET_C
CURLY_BRACKET_O
STRUCT

seq_file
MULT

m
OP_ASSIGNMENT

file
MINUS
GREATER

private_data
SEMICOLON
IF
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

all_lock_classes
BRACKET_C
BRACKET_C

m
MINUS
GREATER

private
OP_ASSIGNMENT

list_entry
BRACKET_O

all_lock_classes
DOT

next
COMMA
STRUCT

lock_class
COMMA

lock_entry
BRACKET_C
SEMICOLON
ELSE

m
MINUS
GREATER

private
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

return

res
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

file_operations

proc_lockdep_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

open
OP_ASSIGNMENT

lockdep_open
COMMA
DOT

read
OP_ASSIGNMENT

seq_read
COMMA
DOT

llseek
OP_ASSIGNMENT

seq_lseek
COMMA
DOT

release
OP_ASSIGNMENT

seq_release
COMMA
CURLY_BRACKET_C
SEMICOLON

static

void

lockdep_stats_debug_show
BRACKET_O
STRUCT

seq_file
MULT

m
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_DEBUG_LOCKDEP
TYPE_UNSIGNED
TYPE_INT

hi1
OP_ASSIGNMENT

debug_atomic_read
BRACKET_O
AMPERSANT

hardirqs_on_events
BRACKET_C
COMMA

hi2
OP_ASSIGNMENT

debug_atomic_read
BRACKET_O
AMPERSANT

hardirqs_off_events
BRACKET_C
COMMA

hr1
OP_ASSIGNMENT

debug_atomic_read
BRACKET_O
AMPERSANT

redundant_hardirqs_on
BRACKET_C
COMMA

hr2
OP_ASSIGNMENT

debug_atomic_read
BRACKET_O
AMPERSANT

redundant_hardirqs_off
BRACKET_C
COMMA

si1
OP_ASSIGNMENT

debug_atomic_read
BRACKET_O
AMPERSANT

softirqs_on_events
BRACKET_C
COMMA

si2
OP_ASSIGNMENT

debug_atomic_read
BRACKET_O
AMPERSANT

softirqs_off_events
BRACKET_C
COMMA

sr1
OP_ASSIGNMENT

debug_atomic_read
BRACKET_O
AMPERSANT

redundant_softirqs_on
BRACKET_C
COMMA

sr2
OP_ASSIGNMENT

debug_atomic_read
BRACKET_O
AMPERSANT

redundant_softirqs_off
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

debug_atomic_read
BRACKET_O
AMPERSANT

chain_lookup_misses
BRACKET_C
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

debug_atomic_read
BRACKET_O
AMPERSANT

chain_lookup_hits
BRACKET_C
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

debug_atomic_read
BRACKET_O
AMPERSANT

nr_cyclic_checks
BRACKET_C
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

debug_atomic_read
BRACKET_O
AMPERSANT

nr_cyclic_check_recursions
BRACKET_C
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

debug_atomic_read
BRACKET_O
AMPERSANT

nr_find_usage_forwards_checks
BRACKET_C
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

debug_atomic_read
BRACKET_O
AMPERSANT

nr_find_usage_forwards_recursions
BRACKET_C
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

debug_atomic_read
BRACKET_O
AMPERSANT

nr_find_usage_backwards_checks
BRACKET_C
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

debug_atomic_read
BRACKET_O
AMPERSANT

nr_find_usage_backwards_recursions
BRACKET_C
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

hi1
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

hi2
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

hr1
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

hr2
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

si1
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

si2
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

sr1
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

sr2
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

static
TYPE_INT

lockdep_stats_show
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O
STRUCT

lock_class
MULT

class
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

nr_unused
OP_ASSIGNMENT
NUMBER
COMMA

nr_uncategorized
OP_ASSIGNMENT
NUMBER
COMMA

nr_irq_safe
OP_ASSIGNMENT
NUMBER
COMMA

nr_irq_unsafe
OP_ASSIGNMENT
NUMBER
COMMA

nr_softirq_safe
OP_ASSIGNMENT
NUMBER
COMMA

nr_softirq_unsafe
OP_ASSIGNMENT
NUMBER
COMMA

nr_hardirq_safe
OP_ASSIGNMENT
NUMBER
COMMA

nr_hardirq_unsafe
OP_ASSIGNMENT
NUMBER
COMMA

nr_irq_read_safe
OP_ASSIGNMENT
NUMBER
COMMA

nr_irq_read_unsafe
OP_ASSIGNMENT
NUMBER
COMMA

nr_softirq_read_safe
OP_ASSIGNMENT
NUMBER
COMMA

nr_softirq_read_unsafe
OP_ASSIGNMENT
NUMBER
COMMA

nr_hardirq_read_safe
OP_ASSIGNMENT
NUMBER
COMMA

nr_hardirq_read_unsafe
OP_ASSIGNMENT
NUMBER
COMMA

sum_forward_deps
OP_ASSIGNMENT
NUMBER
COMMA

factor
OP_ASSIGNMENT
NUMBER
SEMICOLON

list_for_each_entry
BRACKET_O

class
COMMA
AMPERSANT

all_lock_classes
COMMA

lock_entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
EQ
NUMBER
BRACKET_C

nr_unused
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
EQ

LOCKF_USED
BRACKET_C

nr_uncategorized
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_USED_IN_IRQ
BRACKET_C

nr_irq_safe
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_ENABLED_IRQS
BRACKET_C

nr_irq_unsafe
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_USED_IN_SOFTIRQ
BRACKET_C

nr_softirq_safe
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_ENABLED_SOFTIRQS
BRACKET_C

nr_softirq_unsafe
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_USED_IN_HARDIRQ
BRACKET_C

nr_hardirq_safe
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_ENABLED_HARDIRQS
BRACKET_C

nr_hardirq_unsafe
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_USED_IN_IRQ_READ
BRACKET_C

nr_irq_read_safe
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_ENABLED_IRQS_READ
BRACKET_C

nr_irq_read_unsafe
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_USED_IN_SOFTIRQ_READ
BRACKET_C

nr_softirq_read_safe
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_ENABLED_SOFTIRQS_READ
BRACKET_C

nr_softirq_read_unsafe
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_USED_IN_HARDIRQ_READ
BRACKET_C

nr_hardirq_read_safe
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

class
MINUS
GREATER

usage_mask
AMPERSANT

LOCKF_ENABLED_HARDIRQS_READ
BRACKET_C

nr_hardirq_read_unsafe
PLUS
PLUS
SEMICOLON

sum_forward_deps
ASSIGN_PLUS

count_forward_deps
BRACKET_O

class
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_DEBUG_LOCKDEP

DEBUG_LOCKS_WARN_ON
BRACKET_O

debug_atomic_read
BRACKET_O
AMPERSANT

nr_unused_locks
BRACKET_C
NOT_EQ

nr_unused
BRACKET_C
SEMICOLON
PP_ENDIF

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_lock_classes
COMMA

MAX_LOCKDEP_KEYS
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_list_entries
COMMA

MAX_LOCKDEP_ENTRIES
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

sum_forward_deps
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_irq_unsafe
MULT

nr_irq_safe
PLUS

nr_hardirq_unsafe
MULT

nr_hardirq_safe
PLUS

nr_list_entries
BRACKET_C
SEMICOLON
IF
BRACKET_O

nr_list_entries
BRACKET_C

factor
OP_ASSIGNMENT

sum_forward_deps
DIV

nr_list_entries
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_lock_chains
COMMA

MAX_LOCKDEP_CHAINS
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_hardirq_chains
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_softirq_chains
BRACKET_C
SEMICOLON
PP_ENDIF

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_process_chains
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_stack_trace_entries
COMMA

MAX_STACK_TRACE_ENTRIES
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA
BRACKET_O

nr_hardirq_chains
PLUS
NUMBER
BRACKET_C
MULT
BRACKET_O

nr_softirq_chains
PLUS
NUMBER
BRACKET_C
MULT
BRACKET_O

nr_process_chains
PLUS
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_hardirq_safe
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_hardirq_unsafe
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_softirq_safe
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_softirq_unsafe
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_irq_safe
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_irq_unsafe
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_hardirq_read_safe
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_hardirq_read_unsafe
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_softirq_read_safe
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_softirq_read_unsafe
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_irq_read_safe
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_irq_read_unsafe
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_uncategorized
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

nr_unused
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

max_lockdep_depth
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

max_recursion_depth
BRACKET_C
SEMICOLON

lockdep_stats_debug_show
BRACKET_O

m
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

debug_locks
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

lockdep_stats_open
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O

return

single_open
BRACKET_O

file
COMMA

lockdep_stats_show
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

file_operations

proc_lockdep_stats_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

open
OP_ASSIGNMENT

lockdep_stats_open
COMMA
DOT

read
OP_ASSIGNMENT

seq_read
COMMA
DOT

llseek
OP_ASSIGNMENT

seq_lseek
COMMA
DOT

release
OP_ASSIGNMENT

single_release
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__init

lockdep_proc_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

proc_dir_entry
MULT

entry
SEMICOLON

entry
OP_ASSIGNMENT

create_proc_entry
BRACKET_O
STRING
COMMA

S_IRUSR
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

entry
BRACKET_C

entry
MINUS
GREATER

proc_fops
OP_ASSIGNMENT
AMPERSANT

proc_lockdep_operations
SEMICOLON

entry
OP_ASSIGNMENT

create_proc_entry
BRACKET_O
STRING
COMMA

S_IRUSR
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

entry
BRACKET_C

entry
MINUS
GREATER

proc_fops
OP_ASSIGNMENT
AMPERSANT

proc_lockdep_stats_operations
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__initcall
BRACKET_O

lockdep_proc_init
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

extern
TYPE_INT

module_sysfs_initialized
SEMICOLON
PP_IF
NUMBER
PP_DEFINE

DEBUGP

printk
PP_ELSE
PP_DEFINE

DEBUGP
BRACKET_O

fmt
COMMA

a
DOT
DOT
DOT
BRACKET_C
PP_ENDIF
PP_IFNDEF

ARCH_SHF_SMALL
PP_DEFINE

ARCH_SHF_SMALL
NUMBER
PP_ENDIF
PP_DEFINE

INIT_OFFSET_MASK
BRACKET_O
NUMBER

UL
LESS
LESS
BRACKET_O

BITS_PER_LONG
MINUS
NUMBER
BRACKET_C
BRACKET_C
PP_IFDEF

UNSUPPORTED_MODULES
TYPE_INT

unsupported
OP_ASSIGNMENT

UNSUPPORTED_MODULES
SEMICOLON
PP_ELSE
TYPE_INT

unsupported
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF

static
TYPE_INT

__init

unsupported_setup
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

get_option
BRACKET_O
AMPERSANT

str
COMMA
AMPERSANT

unsupported
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

unsupported_setup
BRACKET_C
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

modlist_lock
BRACKET_C
SEMICOLON

static

DEFINE_MUTEX
BRACKET_O

module_mutex
BRACKET_C
SEMICOLON

static

LIST_HEAD
BRACKET_O

modules
BRACKET_C
SEMICOLON

static

BLOCKING_NOTIFIER_HEAD
BRACKET_O

module_notify_list
BRACKET_C
SEMICOLON
TYPE_INT

register_module_notifier
BRACKET_O
STRUCT

notifier_block
MULT

nb
BRACKET_C
CURLY_BRACKET_O

return

blocking_notifier_chain_register
BRACKET_O
AMPERSANT

module_notify_list
COMMA

nb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

register_module_notifier
BRACKET_C
SEMICOLON
TYPE_INT

unregister_module_notifier
BRACKET_O
STRUCT

notifier_block
MULT

nb
BRACKET_C
CURLY_BRACKET_O

return

blocking_notifier_chain_unregister
BRACKET_O
AMPERSANT

module_notify_list
COMMA

nb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

unregister_module_notifier
BRACKET_C
SEMICOLON

static

inline
TYPE_INT

strong_try_module_get
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

mod
AND

mod
MINUS
GREATER

state
EQ

MODULE_STATE_COMING
BRACKET_C

return
NUMBER
SEMICOLON

return

try_module_get
BRACKET_O

mod
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

add_taint_module
BRACKET_O
STRUCT

module
MULT

mod
COMMA
TYPE_UNSIGNED

flag
BRACKET_C
CURLY_BRACKET_O

add_taint
BRACKET_O

flag
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

taints
LOGICAL_OR
OP_ASSIGNMENT

flag
SEMICOLON
CURLY_BRACKET_C

void

__module_put_and_exit
BRACKET_O
STRUCT

module
MULT

mod
COMMA
TYPE_LONG

code
BRACKET_C
CURLY_BRACKET_O

module_put
BRACKET_O

mod
BRACKET_C
SEMICOLON

do_exit
BRACKET_O

code
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__module_put_and_exit
BRACKET_C
SEMICOLON

static
TYPE_UNSIGNED
TYPE_INT

find_sec
BRACKET_O

Elf_Ehdr
MULT

hdr
COMMA

Elf_Shdr
MULT

sechdrs
COMMA
CONST
TYPE_CHAR
MULT

secstrings
COMMA
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

hdr
MINUS
GREATER

e_shnum
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O
BRACKET_O

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT

SHF_ALLOC
BRACKET_C
AND

strcmp
BRACKET_O

secstrings
PLUS

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_name
COMMA

name
BRACKET_C
EQ
NUMBER
BRACKET_C

return

i
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

extern
CONST
STRUCT

kernel_symbol

__start___ksymtab
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
STRUCT

kernel_symbol

__stop___ksymtab
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
STRUCT

kernel_symbol

__start___ksymtab_gpl
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
STRUCT

kernel_symbol

__stop___ksymtab_gpl
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
STRUCT

kernel_symbol

__start___ksymtab_gpl_future
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
STRUCT

kernel_symbol

__stop___ksymtab_gpl_future
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
STRUCT

kernel_symbol

__start___ksymtab_unused
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
STRUCT

kernel_symbol

__stop___ksymtab_unused
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
STRUCT

kernel_symbol

__start___ksymtab_unused_gpl
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
STRUCT

kernel_symbol

__stop___ksymtab_unused_gpl
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
STRUCT

kernel_symbol

__start___ksymtab_gpl_future
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
STRUCT

kernel_symbol

__stop___ksymtab_gpl_future
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
TYPE_UNSIGNED
TYPE_LONG

__start___kcrctab
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
TYPE_UNSIGNED
TYPE_LONG

__start___kcrctab_gpl
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
TYPE_UNSIGNED
TYPE_LONG

__start___kcrctab_gpl_future
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
TYPE_UNSIGNED
TYPE_LONG

__start___kcrctab_unused
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
CONST
TYPE_UNSIGNED
TYPE_LONG

__start___kcrctab_unused_gpl
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON
PP_IFNDEF

CONFIG_MODVERSIONS
PP_DEFINE

symversion
BRACKET_O

base
COMMA

idx
BRACKET_C

NULL
PP_ELSE
PP_DEFINE

symversion
BRACKET_O

base
COMMA

idx
BRACKET_C
BRACKET_O
BRACKET_O

base
NOT_EQ

NULL
BRACKET_C
QUESTION_MARK
BRACKET_O
BRACKET_O

base
BRACKET_C
PLUS
BRACKET_O

idx
BRACKET_C
BRACKET_C
COLON

NULL
BRACKET_C
PP_ENDIF

static
CONST
STRUCT

kernel_symbol
MULT

lookup_symbol
BRACKET_O
CONST
TYPE_CHAR
MULT

name
COMMA
CONST
STRUCT

kernel_symbol
MULT

start
COMMA
CONST
STRUCT

kernel_symbol
MULT

stop
BRACKET_C
CURLY_BRACKET_O
CONST
STRUCT

kernel_symbol
MULT

ks
OP_ASSIGNMENT

start
SEMICOLON
FOR
BRACKET_O
SEMICOLON

ks
LESS

stop
SEMICOLON

ks
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

strcmp
BRACKET_O

ks
MINUS
GREATER

name
COMMA

name
BRACKET_C
EQ
NUMBER
BRACKET_C

return

ks
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

static

void

printk_unused_warning
BRACKET_O
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA

name
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_WARNING
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_WARNING
STRING
STRING
STRING
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG

__find_symbol
BRACKET_O
CONST
TYPE_CHAR
MULT

name
COMMA
STRUCT

module
MULT
MULT

owner
COMMA
CONST
TYPE_UNSIGNED
TYPE_LONG
MULT
MULT

crc
COMMA
TYPE_INT

gplok
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON
CONST
STRUCT

kernel_symbol
MULT

ks
SEMICOLON
MULT

owner
OP_ASSIGNMENT

NULL
SEMICOLON

ks
OP_ASSIGNMENT

lookup_symbol
BRACKET_O

name
COMMA

__start___ksymtab
COMMA

__stop___ksymtab
BRACKET_C
SEMICOLON
IF
BRACKET_O

ks
BRACKET_C
CURLY_BRACKET_O
MULT

crc
OP_ASSIGNMENT

symversion
BRACKET_O

__start___kcrctab
COMMA
BRACKET_O

ks
MINUS

__start___ksymtab
BRACKET_C
BRACKET_C
SEMICOLON

return

ks
MINUS
GREATER

value
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

gplok
BRACKET_C
CURLY_BRACKET_O

ks
OP_ASSIGNMENT

lookup_symbol
BRACKET_O

name
COMMA

__start___ksymtab_gpl
COMMA

__stop___ksymtab_gpl
BRACKET_C
SEMICOLON
IF
BRACKET_O

ks
BRACKET_C
CURLY_BRACKET_O
MULT

crc
OP_ASSIGNMENT

symversion
BRACKET_O

__start___kcrctab_gpl
COMMA
BRACKET_O

ks
MINUS

__start___ksymtab_gpl
BRACKET_C
BRACKET_C
SEMICOLON

return

ks
MINUS
GREATER

value
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

ks
OP_ASSIGNMENT

lookup_symbol
BRACKET_O

name
COMMA

__start___ksymtab_gpl_future
COMMA

__stop___ksymtab_gpl_future
BRACKET_C
SEMICOLON
IF
BRACKET_O

ks
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

gplok
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
STRING
STRING
COMMA

name
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_WARNING
STRING
STRING
STRING
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
MULT

crc
OP_ASSIGNMENT

symversion
BRACKET_O

__start___kcrctab_gpl_future
COMMA
BRACKET_O

ks
MINUS

__start___ksymtab_gpl_future
BRACKET_C
BRACKET_C
SEMICOLON

return

ks
MINUS
GREATER

value
SEMICOLON
CURLY_BRACKET_C

ks
OP_ASSIGNMENT

lookup_symbol
BRACKET_O

name
COMMA

__start___ksymtab_unused
COMMA

__stop___ksymtab_unused
BRACKET_C
SEMICOLON
IF
BRACKET_O

ks
BRACKET_C
CURLY_BRACKET_O

printk_unused_warning
BRACKET_O

name
BRACKET_C
SEMICOLON
MULT

crc
OP_ASSIGNMENT

symversion
BRACKET_O

__start___kcrctab_unused
COMMA
BRACKET_O

ks
MINUS

__start___ksymtab_unused
BRACKET_C
BRACKET_C
SEMICOLON

return

ks
MINUS
GREATER

value
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

gplok
BRACKET_C

ks
OP_ASSIGNMENT

lookup_symbol
BRACKET_O

name
COMMA

__start___ksymtab_unused_gpl
COMMA

__stop___ksymtab_unused_gpl
BRACKET_C
SEMICOLON
IF
BRACKET_O

ks
BRACKET_C
CURLY_BRACKET_O

printk_unused_warning
BRACKET_O

name
BRACKET_C
SEMICOLON
MULT

crc
OP_ASSIGNMENT

symversion
BRACKET_O

__start___kcrctab_unused_gpl
COMMA
BRACKET_O

ks
MINUS

__start___ksymtab_unused_gpl
BRACKET_C
BRACKET_C
SEMICOLON

return

ks
MINUS
GREATER

value
SEMICOLON
CURLY_BRACKET_C

list_for_each_entry
BRACKET_O

mod
COMMA
AMPERSANT

modules
COMMA

list
BRACKET_C
CURLY_BRACKET_O
MULT

owner
OP_ASSIGNMENT

mod
SEMICOLON

ks
OP_ASSIGNMENT

lookup_symbol
BRACKET_O

name
COMMA

mod
MINUS
GREATER

syms
COMMA

mod
MINUS
GREATER

syms
PLUS

mod
MINUS
GREATER

num_syms
BRACKET_C
SEMICOLON
IF
BRACKET_O

ks
BRACKET_C
CURLY_BRACKET_O
MULT

crc
OP_ASSIGNMENT

symversion
BRACKET_O

mod
MINUS
GREATER

crcs
COMMA
BRACKET_O

ks
MINUS

mod
MINUS
GREATER

syms
BRACKET_C
BRACKET_C
SEMICOLON

return

ks
MINUS
GREATER

value
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

gplok
BRACKET_C
CURLY_BRACKET_O

ks
OP_ASSIGNMENT

lookup_symbol
BRACKET_O

name
COMMA

mod
MINUS
GREATER

gpl_syms
COMMA

mod
MINUS
GREATER

gpl_syms
PLUS

mod
MINUS
GREATER

num_gpl_syms
BRACKET_C
SEMICOLON
IF
BRACKET_O

ks
BRACKET_C
CURLY_BRACKET_O
MULT

crc
OP_ASSIGNMENT

symversion
BRACKET_O

mod
MINUS
GREATER

gpl_crcs
COMMA
BRACKET_O

ks
MINUS

mod
MINUS
GREATER

gpl_syms
BRACKET_C
BRACKET_C
SEMICOLON

return

ks
MINUS
GREATER

value
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

ks
OP_ASSIGNMENT

lookup_symbol
BRACKET_O

name
COMMA

mod
MINUS
GREATER

unused_syms
COMMA

mod
MINUS
GREATER

unused_syms
PLUS

mod
MINUS
GREATER

num_unused_syms
BRACKET_C
SEMICOLON
IF
BRACKET_O

ks
BRACKET_C
CURLY_BRACKET_O

printk_unused_warning
BRACKET_O

name
BRACKET_C
SEMICOLON
MULT

crc
OP_ASSIGNMENT

symversion
BRACKET_O

mod
MINUS
GREATER

unused_crcs
COMMA
BRACKET_O

ks
MINUS

mod
MINUS
GREATER

unused_syms
BRACKET_C
BRACKET_C
SEMICOLON

return

ks
MINUS
GREATER

value
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

gplok
BRACKET_C
CURLY_BRACKET_O

ks
OP_ASSIGNMENT

lookup_symbol
BRACKET_O

name
COMMA

mod
MINUS
GREATER

unused_gpl_syms
COMMA

mod
MINUS
GREATER

unused_gpl_syms
PLUS

mod
MINUS
GREATER

num_unused_gpl_syms
BRACKET_C
SEMICOLON
IF
BRACKET_O

ks
BRACKET_C
CURLY_BRACKET_O

printk_unused_warning
BRACKET_O

name
BRACKET_C
SEMICOLON
MULT

crc
OP_ASSIGNMENT

symversion
BRACKET_O

mod
MINUS
GREATER

unused_gpl_crcs
COMMA
BRACKET_O

ks
MINUS

mod
MINUS
GREATER

unused_gpl_syms
BRACKET_C
BRACKET_C
SEMICOLON

return

ks
MINUS
GREATER

value
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

ks
OP_ASSIGNMENT

lookup_symbol
BRACKET_O

name
COMMA

mod
MINUS
GREATER

gpl_future_syms
COMMA
BRACKET_O

mod
MINUS
GREATER

gpl_future_syms
PLUS

mod
MINUS
GREATER

num_gpl_future_syms
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

ks
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

gplok
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
STRING
STRING
COMMA

name
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_WARNING
STRING
STRING
STRING
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
MULT

crc
OP_ASSIGNMENT

symversion
BRACKET_O

mod
MINUS
GREATER

gpl_future_crcs
COMMA
BRACKET_O

ks
MINUS

mod
MINUS
GREATER

gpl_future_syms
BRACKET_C
BRACKET_C
SEMICOLON

return

ks
MINUS
GREATER

value
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

DEBUGP
BRACKET_O
STRING
COMMA

name
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

module
MULT

find_module
BRACKET_O
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON

list_for_each_entry
BRACKET_O

mod
COMMA
AMPERSANT

modules
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

strcmp
BRACKET_O

mod
MINUS
GREATER

name
COMMA

name
BRACKET_C
EQ
NUMBER
BRACKET_C

return

mod
SEMICOLON
CURLY_BRACKET_C

return

NULL
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_SMP

static
TYPE_UNSIGNED
TYPE_INT

pcpu_num_used
COMMA

pcpu_num_allocated
SEMICOLON

static
TYPE_INT
MULT

pcpu_size
SEMICOLON

static
TYPE_INT

split_block
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
COMMA
TYPE_UNSIGNED

short

size
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

pcpu_num_used
PLUS
NUMBER
GREATER

pcpu_num_allocated
BRACKET_C
CURLY_BRACKET_O
TYPE_INT
MULT

new
SEMICOLON

new
OP_ASSIGNMENT

krealloc
BRACKET_O

pcpu_size
COMMA

sizeof
BRACKET_O

new
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
MULT

pcpu_num_allocated
MULT
NUMBER
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

new
BRACKET_C

return
NUMBER
SEMICOLON

pcpu_num_allocated
ASSIGN_MULT
NUMBER
SEMICOLON

pcpu_size
OP_ASSIGNMENT

new
SEMICOLON
CURLY_BRACKET_C

memmove
BRACKET_O
AMPERSANT

pcpu_size
CORNER_BRACKET_O

i
PLUS
NUMBER
CORNER_BRACKET_C
COMMA
AMPERSANT

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

sizeof
BRACKET_O

pcpu_size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
MULT
BRACKET_O

pcpu_num_used
MINUS

i
BRACKET_C
BRACKET_C
SEMICOLON

pcpu_num_used
PLUS
PLUS
SEMICOLON

pcpu_size
CORNER_BRACKET_O

i
PLUS
NUMBER
CORNER_BRACKET_C
ASSIGN_MINUS

size
SEMICOLON

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

size
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_UNSIGNED
TYPE_INT

block_size
BRACKET_O
TYPE_INT

val
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

val
LESS
NUMBER
BRACKET_C

return
MINUS

val
SEMICOLON

return

val
SEMICOLON
CURLY_BRACKET_C

extern
TYPE_CHAR

__per_cpu_start
CORNER_BRACKET_O
CORNER_BRACKET_C
COMMA

__per_cpu_end
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

static

void
MULT

percpu_modalloc
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

size
COMMA
TYPE_UNSIGNED
TYPE_LONG

align
COMMA
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

extra
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON

void
MULT

ptr
SEMICOLON
IF
BRACKET_O

align
GREATER

PAGE_SIZE
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

name
COMMA

align
COMMA

PAGE_SIZE
BRACKET_C
SEMICOLON

align
OP_ASSIGNMENT

PAGE_SIZE
SEMICOLON
CURLY_BRACKET_C

ptr
OP_ASSIGNMENT

__per_cpu_start
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

pcpu_num_used
SEMICOLON

ptr
ASSIGN_PLUS

block_size
BRACKET_O

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
COMMA

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

extra
OP_ASSIGNMENT

ALIGN
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

ptr
COMMA

align
BRACKET_C
MINUS
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

ptr
SEMICOLON

BUG_ON
BRACKET_O

i
EQ
NUMBER
AND

extra
NOT_EQ
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
LESS
NUMBER
OR

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
LESS

extra
PLUS

size
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

pcpu_size
CORNER_BRACKET_O

i
MINUS
NUMBER
CORNER_BRACKET_C
LESS
NUMBER
BRACKET_C

pcpu_size
CORNER_BRACKET_O

i
MINUS
NUMBER
CORNER_BRACKET_C
ASSIGN_MINUS

extra
SEMICOLON
ELSE

pcpu_size
CORNER_BRACKET_O

i
MINUS
NUMBER
CORNER_BRACKET_C
ASSIGN_PLUS

extra
SEMICOLON

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
ASSIGN_MINUS

extra
SEMICOLON

ptr
ASSIGN_PLUS

extra
SEMICOLON
IF
BRACKET_O

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
MINUS

size
GREATER

sizeof
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
BRACKET_C
IF
BRACKET_O
NOT

split_block
BRACKET_O

i
COMMA

size
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT
MINUS

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

return

ptr
SEMICOLON
CURLY_BRACKET_C

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

size
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

static

void

percpu_modfree
BRACKET_O

void
MULT

freeme
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON

void
MULT

ptr
OP_ASSIGNMENT

__per_cpu_start
PLUS

block_size
BRACKET_O

pcpu_size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

pcpu_num_used
SEMICOLON

ptr
ASSIGN_PLUS

block_size
BRACKET_O

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
COMMA

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

ptr
EQ

freeme
BRACKET_C
CURLY_BRACKET_O

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT
MINUS

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

goto

free
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON

free
COLON
IF
BRACKET_O

pcpu_size
CORNER_BRACKET_O

i
MINUS
NUMBER
CORNER_BRACKET_C
GR_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

pcpu_size
CORNER_BRACKET_O

i
MINUS
NUMBER
CORNER_BRACKET_C
ASSIGN_PLUS

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

pcpu_num_used
MINUS
MINUS
SEMICOLON

memmove
BRACKET_O
AMPERSANT

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA
AMPERSANT

pcpu_size
CORNER_BRACKET_O

i
PLUS
NUMBER
CORNER_BRACKET_C
COMMA
BRACKET_O

pcpu_num_used
MINUS

i
BRACKET_C
MULT

sizeof
BRACKET_O

pcpu_size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

i
MINUS
MINUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

i
PLUS
NUMBER
LESS

pcpu_num_used
AND

pcpu_size
CORNER_BRACKET_O

i
PLUS
NUMBER
CORNER_BRACKET_C
GR_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

pcpu_size
CORNER_BRACKET_O

i
CORNER_BRACKET_C
ASSIGN_PLUS

pcpu_size
CORNER_BRACKET_O

i
PLUS
NUMBER
CORNER_BRACKET_C
SEMICOLON

pcpu_num_used
MINUS
MINUS
SEMICOLON

memmove
BRACKET_O
AMPERSANT

pcpu_size
CORNER_BRACKET_O

i
PLUS
NUMBER
CORNER_BRACKET_C
COMMA
AMPERSANT

pcpu_size
CORNER_BRACKET_O

i
PLUS
NUMBER
CORNER_BRACKET_C
COMMA
BRACKET_O

pcpu_num_used
MINUS
BRACKET_O

i
PLUS
NUMBER
BRACKET_C
BRACKET_C
MULT

sizeof
BRACKET_O

pcpu_size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_INT

find_pcpusec
BRACKET_O

Elf_Ehdr
MULT

hdr
COMMA

Elf_Shdr
MULT

sechdrs
COMMA
CONST
TYPE_CHAR
MULT

secstrings
BRACKET_C
CURLY_BRACKET_O

return

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

percpu_modinit
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

pcpu_num_used
OP_ASSIGNMENT
NUMBER
SEMICOLON

pcpu_num_allocated
OP_ASSIGNMENT
NUMBER
SEMICOLON

pcpu_size
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O

pcpu_size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
MULT

pcpu_num_allocated
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON

pcpu_size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
MINUS
BRACKET_O

__per_cpu_end
MINUS

__per_cpu_start
BRACKET_C
SEMICOLON

pcpu_size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

PERCPU_ENOUGH_ROOM
PLUS

pcpu_size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

pcpu_size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
BRACKET_C
SEMICOLON

pcpu_num_used
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__initcall
BRACKET_O

percpu_modinit
BRACKET_C
SEMICOLON
PP_ELSE

static

inline

void
MULT

percpu_modalloc
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

size
COMMA
TYPE_UNSIGNED
TYPE_LONG

align
COMMA
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O

return

NULL
SEMICOLON
CURLY_BRACKET_C

static

inline

void

percpu_modfree
BRACKET_O

void
MULT

pcpuptr
BRACKET_C
CURLY_BRACKET_O

BUG
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_UNSIGNED
TYPE_INT

find_pcpusec
BRACKET_O

Elf_Ehdr
MULT

hdr
COMMA

Elf_Shdr
MULT

sechdrs
COMMA
CONST
TYPE_CHAR
MULT

secstrings
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline

void

percpu_modcopy
BRACKET_O

void
MULT

pcpudst
COMMA
CONST

void
MULT

src
COMMA
TYPE_UNSIGNED
TYPE_LONG

size
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

size
NOT_EQ
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_DEFINE

MODINFO_ATTR
BRACKET_O

field
BRACKET_C
BACKLASHED_NEWLINE

static

void

setup_modinfo_
DOUBLE_HASH

field
BRACKET_O
STRUCT

module
MULT

mod
COMMA
CONST
TYPE_CHAR
MULT

s
BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_O
BACKLASHED_NEWLINE

mod
MINUS
GREATER

field
OP_ASSIGNMENT

kstrdup
BRACKET_O

s
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE

static

ssize_t

show_modinfo_
DOUBLE_HASH

field
BRACKET_O
STRUCT

module_attribute
MULT

mattr
COMMA
BACKLASHED_NEWLINE
STRUCT

module
MULT

mod
COMMA
TYPE_CHAR
MULT

buffer
BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_O
BACKLASHED_NEWLINE

return

sprintf
BRACKET_O

buffer
COMMA
STRING
COMMA

mod
MINUS
GREATER

field
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE

static
TYPE_INT

modinfo_
DOUBLE_HASH

field
DOUBLE_HASH

_exists
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_O
BACKLASHED_NEWLINE

return

mod
MINUS
GREATER

field
NOT_EQ

NULL
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE

static

void

free_modinfo_
DOUBLE_HASH

field
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_O
BACKLASHED_NEWLINE

kfree
BRACKET_O

mod
MINUS
GREATER

field
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE

mod
MINUS
GREATER

field
OP_ASSIGNMENT

NULL
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE

static
STRUCT

module_attribute

modinfo_
DOUBLE_HASH

field
OP_ASSIGNMENT
CURLY_BRACKET_O
BACKLASHED_NEWLINE
DOT

attr
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT

__stringify
BRACKET_O

field
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
BACKLASHED_NEWLINE
DOT

owner
OP_ASSIGNMENT

THIS_MODULE
CURLY_BRACKET_C
COMMA
BACKLASHED_NEWLINE
DOT

show
OP_ASSIGNMENT

show_modinfo_
DOUBLE_HASH

field
COMMA
BACKLASHED_NEWLINE
DOT

setup
OP_ASSIGNMENT

setup_modinfo_
DOUBLE_HASH

field
COMMA
BACKLASHED_NEWLINE
DOT

test
OP_ASSIGNMENT

modinfo_
DOUBLE_HASH

field
DOUBLE_HASH

_exists
COMMA
BACKLASHED_NEWLINE
DOT

free
OP_ASSIGNMENT

free_modinfo_
DOUBLE_HASH

field
COMMA
BACKLASHED_NEWLINE
CURLY_BRACKET_C
SEMICOLON

MODINFO_ATTR
BRACKET_O

version
BRACKET_C
SEMICOLON

MODINFO_ATTR
BRACKET_O

srcversion
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_MODULE_UNLOAD

static

void

module_unload_init
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

modules_which_use_me
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

NR_CPUS
SEMICOLON

i
PLUS
PLUS
BRACKET_C

local_set
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

ref
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

local_set
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

ref
CORNER_BRACKET_O

raw_smp_processor_id
BRACKET_O
BRACKET_C
CORNER_BRACKET_C
DOT

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

waiter
OP_ASSIGNMENT

current
SEMICOLON
CURLY_BRACKET_C
STRUCT

module_use
CURLY_BRACKET_O
STRUCT

list_head

list
SEMICOLON
STRUCT

module
MULT

module_which_uses
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

already_uses
BRACKET_O
STRUCT

module
MULT

a
COMMA
STRUCT

module
MULT

b
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_use
MULT

use
SEMICOLON

list_for_each_entry
BRACKET_O

use
COMMA
AMPERSANT

b
MINUS
GREATER

modules_which_use_me
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

use
MINUS
GREATER

module_which_uses
EQ

a
BRACKET_C
CURLY_BRACKET_O

DEBUGP
BRACKET_O
STRING
COMMA

a
MINUS
GREATER

name
COMMA

b
MINUS
GREATER

name
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

DEBUGP
BRACKET_O
STRING
COMMA

a
MINUS
GREATER

name
COMMA

b
MINUS
GREATER

name
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

use_module
BRACKET_O
STRUCT

module
MULT

a
COMMA
STRUCT

module
MULT

b
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_use
MULT

use
SEMICOLON
TYPE_INT

no_warn
SEMICOLON
IF
BRACKET_O

b
EQ

NULL
OR

already_uses
BRACKET_O

a
COMMA

b
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

strong_try_module_get
BRACKET_O

b
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

DEBUGP
BRACKET_O
STRING
COMMA

a
MINUS
GREATER

name
BRACKET_C
SEMICOLON

use
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

use
BRACKET_C
COMMA

GFP_ATOMIC
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

use
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

a
MINUS
GREATER

name
BRACKET_C
SEMICOLON

module_put
BRACKET_O

b
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

use
MINUS
GREATER

module_which_uses
OP_ASSIGNMENT

a
SEMICOLON

list_add
BRACKET_O
AMPERSANT

use
MINUS
GREATER

list
COMMA
AMPERSANT

b
MINUS
GREATER

modules_which_use_me
BRACKET_C
SEMICOLON

no_warn
OP_ASSIGNMENT

sysfs_create_link
BRACKET_O

b
MINUS
GREATER

holders_dir
COMMA
AMPERSANT

a
MINUS
GREATER

mkobj
DOT

kobj
COMMA

a
MINUS
GREATER

name
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

module_unload_free
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

i
SEMICOLON

list_for_each_entry
BRACKET_O

i
COMMA
AMPERSANT

modules
COMMA

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_use
MULT

use
SEMICOLON

list_for_each_entry
BRACKET_O

use
COMMA
AMPERSANT

i
MINUS
GREATER

modules_which_use_me
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

use
MINUS
GREATER

module_which_uses
EQ

mod
BRACKET_C
CURLY_BRACKET_O

DEBUGP
BRACKET_O
STRING
COMMA

mod
MINUS
GREATER

name
COMMA

i
MINUS
GREATER

name
BRACKET_C
SEMICOLON

module_put
BRACKET_O

i
BRACKET_C
SEMICOLON

list_del
BRACKET_O
AMPERSANT

use
MINUS
GREATER

list
BRACKET_C
SEMICOLON

kfree
BRACKET_O

use
BRACKET_C
SEMICOLON

sysfs_remove_link
BRACKET_O

i
MINUS
GREATER

holders_dir
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_IFDEF

CONFIG_MODULE_FORCE_UNLOAD

static

inline
TYPE_INT

try_force_unload
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

flags
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
BRACKET_O

flags
AMPERSANT

O_TRUNC
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

add_taint
BRACKET_O

TAINT_FORCED_RMMOD
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static

inline
TYPE_INT

try_force_unload
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

flags
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
STRUCT

stopref
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON
TYPE_INT

flags
SEMICOLON
TYPE_INT
MULT

forced
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__try_stop_module
BRACKET_O

void
MULT

_sref
BRACKET_C
CURLY_BRACKET_O
STRUCT

stopref
MULT

sref
OP_ASSIGNMENT

_sref
SEMICOLON
IF
BRACKET_O
BRACKET_O

sref
MINUS
GREATER

flags
AMPERSANT

O_NONBLOCK
BRACKET_C
AND

module_refcount
BRACKET_O

sref
MINUS
GREATER

mod
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT
BRACKET_O
MULT

sref
MINUS
GREATER

forced
OP_ASSIGNMENT

try_force_unload
BRACKET_O

sref
MINUS
GREATER

flags
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EWOULDBLOCK
SEMICOLON
CURLY_BRACKET_C

sref
MINUS
GREATER

mod
MINUS
GREATER

state
OP_ASSIGNMENT

MODULE_STATE_GOING
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

try_stop_module
BRACKET_O
STRUCT

module
MULT

mod
COMMA
TYPE_INT

flags
COMMA
TYPE_INT
MULT

forced
BRACKET_C
CURLY_BRACKET_O
STRUCT

stopref

sref
OP_ASSIGNMENT
CURLY_BRACKET_O

mod
COMMA

flags
COMMA

forced
CURLY_BRACKET_C
SEMICOLON

return

stop_machine_run
BRACKET_O

__try_stop_module
COMMA
AMPERSANT

sref
COMMA

NR_CPUS
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_INT

module_refcount
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
COMMA

total
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

NR_CPUS
SEMICOLON

i
PLUS
PLUS
BRACKET_C

total
ASSIGN_PLUS

local_read
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

ref
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

count
BRACKET_C
SEMICOLON

return

total
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

module_refcount
BRACKET_C
SEMICOLON

static

void

free_module
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
SEMICOLON

static

void

wait_for_zero_refcount
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

DEBUGP
BRACKET_O
STRING
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_UNINTERRUPTIBLE
BRACKET_C
SEMICOLON
IF
BRACKET_O

module_refcount
BRACKET_O

mod
BRACKET_C
EQ
NUMBER
BRACKET_C
BREAK
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_RUNNING
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_delete_module
BRACKET_O
CONST
TYPE_CHAR

__user
MULT

name_user
COMMA
TYPE_UNSIGNED
TYPE_INT

flags
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON
TYPE_CHAR

name
CORNER_BRACKET_O

MODULE_NAME_LEN
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

ret
COMMA

forced
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SYS_MODULE
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

strncpy_from_user
BRACKET_O

name
COMMA

name_user
COMMA

MODULE_NAME_LEN
MINUS
NUMBER
BRACKET_C
LESS
NUMBER
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

name
CORNER_BRACKET_O

MODULE_NAME_LEN
MINUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

mutex_lock_interruptible
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

return
MINUS

EINTR
SEMICOLON

mod
OP_ASSIGNMENT

find_module
BRACKET_O

name
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

mod
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

ENOENT
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

modules_which_use_me
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

EWOULDBLOCK
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

mod
MINUS
GREATER

state
NOT_EQ

MODULE_STATE_LIVE
BRACKET_C
CURLY_BRACKET_O

DEBUGP
BRACKET_O
STRING
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
MINUS

EBUSY
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
BRACKET_O

mod
MINUS
GREATER

init
NOT_EQ

NULL
AND

mod
MINUS
GREATER

exit
EQ

NULL
BRACKET_C
OR

mod
MINUS
GREATER

unsafe
BRACKET_C
CURLY_BRACKET_O

forced
OP_ASSIGNMENT

try_force_unload
BRACKET_O

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

forced
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

EBUSY
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

mod
MINUS
GREATER

waiter
OP_ASSIGNMENT

current
SEMICOLON

ret
OP_ASSIGNMENT

try_stop_module
BRACKET_O

mod
COMMA

flags
COMMA
AMPERSANT

forced
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
NOT_EQ
NUMBER
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O
NOT

forced
AND

module_refcount
BRACKET_O

mod
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

wait_for_zero_refcount
BRACKET_O

mod
BRACKET_C
SEMICOLON
IF
BRACKET_O

mod
MINUS
GREATER

exit
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

exit
BRACKET_O
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

free_module
BRACKET_O

mod
BRACKET_C
SEMICOLON

out
COLON

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

void

print_unload_info
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_use
MULT

use
SEMICOLON
TYPE_INT

printed_something
OP_ASSIGNMENT
NUMBER
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

module_refcount
BRACKET_O

mod
BRACKET_C
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

use
COMMA
AMPERSANT

mod
MINUS
GREATER

modules_which_use_me
COMMA

list
BRACKET_C
CURLY_BRACKET_O

printed_something
OP_ASSIGNMENT
NUMBER
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

use
MINUS
GREATER

module_which_uses
MINUS
GREATER

name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

mod
MINUS
GREATER

unsafe
BRACKET_C
CURLY_BRACKET_O

printed_something
OP_ASSIGNMENT
NUMBER
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

mod
MINUS
GREATER

init
NOT_EQ

NULL
AND

mod
MINUS
GREATER

exit
EQ

NULL
BRACKET_C
CURLY_BRACKET_O

printed_something
OP_ASSIGNMENT
NUMBER
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

printed_something
BRACKET_C

seq_printf
BRACKET_O

m
COMMA
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__symbol_put
BRACKET_O
CONST
TYPE_CHAR
MULT

symbol
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

owner
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
CONST
TYPE_UNSIGNED
TYPE_LONG
MULT

crc
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

modlist_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

__find_symbol
BRACKET_O

symbol
COMMA
AMPERSANT

owner
COMMA
AMPERSANT

crc
COMMA
NUMBER
BRACKET_C
BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON

module_put
BRACKET_O

owner
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

modlist_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__symbol_put
BRACKET_C
SEMICOLON

void

symbol_put_addr
BRACKET_O

void
MULT

addr
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

modaddr
SEMICOLON
IF
BRACKET_O

core_kernel_text
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

addr
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

modaddr
OP_ASSIGNMENT

module_text_address
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

addr
BRACKET_C
BRACKET_C
BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON

module_put
BRACKET_O

modaddr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

symbol_put_addr
BRACKET_C
SEMICOLON

static

ssize_t

show_refcnt
BRACKET_O
STRUCT

module_attribute
MULT

mattr
COMMA
STRUCT

module
MULT

mod
COMMA
TYPE_CHAR
MULT

buffer
BRACKET_C
CURLY_BRACKET_O

return

sprintf
BRACKET_O

buffer
COMMA
STRING
COMMA

module_refcount
BRACKET_O

mod
BRACKET_C
MINUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

module_attribute

refcnt
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

attr
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

owner
OP_ASSIGNMENT

THIS_MODULE
CURLY_BRACKET_C
COMMA
DOT

show
OP_ASSIGNMENT

show_refcnt
COMMA
CURLY_BRACKET_C
SEMICOLON

void

module_put
BRACKET_O
STRUCT

module
MULT

module
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

module
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

cpu
OP_ASSIGNMENT

get_cpu
BRACKET_O
BRACKET_C
SEMICOLON

local_dec
BRACKET_O
AMPERSANT

module
MINUS
GREATER

ref
CORNER_BRACKET_O

cpu
CORNER_BRACKET_C
DOT

count
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

module_is_live
BRACKET_O

module
BRACKET_C
BRACKET_C
BRACKET_C

wake_up_process
BRACKET_O

module
MINUS
GREATER

waiter
BRACKET_C
SEMICOLON

put_cpu
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

module_put
BRACKET_C
SEMICOLON
PP_ELSE

static

void

print_unload_info
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O

seq_printf
BRACKET_O

m
COMMA
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

module_unload_free
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static

inline
TYPE_INT

use_module
BRACKET_O
STRUCT

module
MULT

a
COMMA
STRUCT

module
MULT

b
BRACKET_C
CURLY_BRACKET_O

return

strong_try_module_get
BRACKET_O

b
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

module_unload_init
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_ENDIF

static

ssize_t

show_initstate
BRACKET_O
STRUCT

module_attribute
MULT

mattr
COMMA
STRUCT

module
MULT

mod
COMMA
TYPE_CHAR
MULT

buffer
BRACKET_C
CURLY_BRACKET_O
CONST
TYPE_CHAR
MULT

state
OP_ASSIGNMENT
STRING
SEMICOLON
SWITCH
BRACKET_O

mod
MINUS
GREATER

state
BRACKET_C
CURLY_BRACKET_O

case

MODULE_STATE_LIVE
COLON

state
OP_ASSIGNMENT
STRING
SEMICOLON
BREAK
SEMICOLON

case

MODULE_STATE_COMING
COLON

state
OP_ASSIGNMENT
STRING
SEMICOLON
BREAK
SEMICOLON

case

MODULE_STATE_GOING
COLON

state
OP_ASSIGNMENT
STRING
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

sprintf
BRACKET_O

buffer
COMMA
STRING
COMMA

state
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

module_attribute

initstate
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

attr
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

owner
OP_ASSIGNMENT

THIS_MODULE
CURLY_BRACKET_C
COMMA
DOT

show
OP_ASSIGNMENT

show_initstate
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

module_attribute
MULT

modinfo_attrs
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
AMPERSANT

modinfo_version
COMMA
AMPERSANT

modinfo_srcversion
COMMA
AMPERSANT

initstate
COMMA
PP_IFDEF

CONFIG_MODULE_UNLOAD
AMPERSANT

refcnt
COMMA
PP_ENDIF

NULL
COMMA
CURLY_BRACKET_C
SEMICOLON

static
CONST
TYPE_CHAR

vermagic
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT

VERMAGIC_STRING
SEMICOLON
PP_IFDEF

CONFIG_MODVERSIONS

static
TYPE_INT

check_version
BRACKET_O

Elf_Shdr
MULT

sechdrs
COMMA
TYPE_UNSIGNED
TYPE_INT

versindex
COMMA
CONST
TYPE_CHAR
MULT

symname
COMMA
STRUCT

module
MULT

mod
COMMA
CONST
TYPE_UNSIGNED
TYPE_LONG
MULT

crc
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
COMMA

num_versions
SEMICOLON
STRUCT

modversion_info
MULT

versions
SEMICOLON
IF
BRACKET_O
NOT

crc
BRACKET_C

return
NUMBER
SEMICOLON

versions
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

versindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON

num_versions
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

versindex
CORNER_BRACKET_C
DOT

sh_size
DIV

sizeof
BRACKET_O
STRUCT

modversion_info
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

num_versions
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

strcmp
BRACKET_O

versions
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
COMMA

symname
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

versions
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

crc
EQ
MULT

crc
BRACKET_C

return
NUMBER
SEMICOLON

printk
BRACKET_O
STRING
COMMA

mod
MINUS
GREATER

name
COMMA

symname
BRACKET_C
SEMICOLON

DEBUGP
BRACKET_O
STRING
COMMA
MULT

crc
COMMA

versions
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

crc
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT
BRACKET_O

tainted
AMPERSANT

TAINT_FORCED_MODULE
BRACKET_C
BRACKET_C

printk
BRACKET_O
STRING
COMMA

mod
MINUS
GREATER

name
COMMA

symname
BRACKET_C
SEMICOLON

add_taint_module
BRACKET_O

mod
COMMA

TAINT_FORCED_MODULE
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

check_modstruct_version
BRACKET_O

Elf_Shdr
MULT

sechdrs
COMMA
TYPE_UNSIGNED
TYPE_INT

versindex
COMMA
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
CONST
TYPE_UNSIGNED
TYPE_LONG
MULT

crc
SEMICOLON
STRUCT

module
MULT

owner
SEMICOLON
IF
BRACKET_O
NOT

__find_symbol
BRACKET_O
STRING
COMMA
AMPERSANT

owner
COMMA
AMPERSANT

crc
COMMA
NUMBER
BRACKET_C
BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON

return

check_version
BRACKET_O

sechdrs
COMMA

versindex
COMMA
STRING
COMMA

mod
COMMA

crc
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

same_magic
BRACKET_O
CONST
TYPE_CHAR
MULT

amagic
COMMA
CONST
TYPE_CHAR
MULT

bmagic
BRACKET_C
CURLY_BRACKET_O

amagic
ASSIGN_PLUS

strcspn
BRACKET_O

amagic
COMMA
STRING
BRACKET_C
SEMICOLON

bmagic
ASSIGN_PLUS

strcspn
BRACKET_O

bmagic
COMMA
STRING
BRACKET_C
SEMICOLON

return

strcmp
BRACKET_O

amagic
COMMA

bmagic
BRACKET_C
EQ
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static

inline
TYPE_INT

check_version
BRACKET_O

Elf_Shdr
MULT

sechdrs
COMMA
TYPE_UNSIGNED
TYPE_INT

versindex
COMMA
CONST
TYPE_CHAR
MULT

symname
COMMA
STRUCT

module
MULT

mod
COMMA
CONST
TYPE_UNSIGNED
TYPE_LONG
MULT

crc
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

check_modstruct_version
BRACKET_O

Elf_Shdr
MULT

sechdrs
COMMA
TYPE_UNSIGNED
TYPE_INT

versindex
COMMA
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

same_magic
BRACKET_O
CONST
TYPE_CHAR
MULT

amagic
COMMA
CONST
TYPE_CHAR
MULT

bmagic
BRACKET_C
CURLY_BRACKET_O

return

strcmp
BRACKET_O

amagic
COMMA

bmagic
BRACKET_C
EQ
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_UNSIGNED
TYPE_LONG

resolve_symbol
BRACKET_O

Elf_Shdr
MULT

sechdrs
COMMA
TYPE_UNSIGNED
TYPE_INT

versindex
COMMA
CONST
TYPE_CHAR
MULT

name
COMMA
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

owner
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

ret
SEMICOLON
CONST
TYPE_UNSIGNED
TYPE_LONG
MULT

crc
SEMICOLON

ret
OP_ASSIGNMENT

__find_symbol
BRACKET_O

name
COMMA
AMPERSANT

owner
COMMA
AMPERSANT

crc
COMMA
NOT
BRACKET_O

mod
MINUS
GREATER

taints
AMPERSANT

TAINT_PROPRIETARY_MODULE
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

check_version
BRACKET_O

sechdrs
COMMA

versindex
COMMA

name
COMMA

mod
COMMA

crc
BRACKET_C
OR
NOT

use_module
BRACKET_O

mod
COMMA

owner
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_KALLSYMS

static

ssize_t

module_sect_show
BRACKET_O
STRUCT

module_attribute
MULT

mattr
COMMA
STRUCT

module
MULT

mod
COMMA
TYPE_CHAR
MULT

buf
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_sect_attr
MULT

sattr
OP_ASSIGNMENT

container_of
BRACKET_O

mattr
COMMA
STRUCT

module_sect_attr
COMMA

mattr
BRACKET_C
SEMICOLON

return

sprintf
BRACKET_O

buf
COMMA
STRING
COMMA

sattr
MINUS
GREATER

address
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

free_sect_attrs
BRACKET_O
STRUCT

module_sect_attrs
MULT

sect_attrs
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

section
SEMICOLON
FOR
BRACKET_O

section
OP_ASSIGNMENT
NUMBER
SEMICOLON

section
LESS

sect_attrs
MINUS
GREATER

nsections
SEMICOLON

section
PLUS
PLUS
BRACKET_C

kfree
BRACKET_O

sect_attrs
MINUS
GREATER

attrs
CORNER_BRACKET_O

section
CORNER_BRACKET_C
DOT

name
BRACKET_C
SEMICOLON

kfree
BRACKET_O

sect_attrs
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

add_sect_attrs
BRACKET_O
STRUCT

module
MULT

mod
COMMA
TYPE_UNSIGNED
TYPE_INT

nsect
COMMA
TYPE_CHAR
MULT

secstrings
COMMA

Elf_Shdr
MULT

sechdrs
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

nloaded
OP_ASSIGNMENT
NUMBER
COMMA

i
COMMA

size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
STRUCT

module_sect_attrs
MULT

sect_attrs
SEMICOLON
STRUCT

module_sect_attr
MULT

sattr
SEMICOLON
STRUCT

attribute
MULT
MULT

gattr
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nsect
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT

SHF_ALLOC
BRACKET_C

nloaded
PLUS
PLUS
SEMICOLON

size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

ALIGN
BRACKET_O

sizeof
BRACKET_O
MULT

sect_attrs
BRACKET_C
PLUS

nloaded
MULT

sizeof
BRACKET_O

sect_attrs
MINUS
GREATER

attrs
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
COMMA

sizeof
BRACKET_O

sect_attrs
MINUS
GREATER

grp
DOT

attrs
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
BRACKET_O

nloaded
PLUS
NUMBER
BRACKET_C
MULT

sizeof
BRACKET_O

sect_attrs
MINUS
GREATER

grp
DOT

attrs
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

sect_attrs
OP_ASSIGNMENT

kzalloc
BRACKET_O

size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
PLUS

size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

sect_attrs
EQ

NULL
BRACKET_C

return
SEMICOLON

sect_attrs
MINUS
GREATER

grp
DOT

name
OP_ASSIGNMENT
STRING
SEMICOLON

sect_attrs
MINUS
GREATER

grp
DOT

attrs
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sect_attrs
PLUS

size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

sect_attrs
MINUS
GREATER

nsections
OP_ASSIGNMENT
NUMBER
SEMICOLON

sattr
OP_ASSIGNMENT
AMPERSANT

sect_attrs
MINUS
GREATER

attrs
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

gattr
OP_ASSIGNMENT
AMPERSANT

sect_attrs
MINUS
GREATER

grp
DOT

attrs
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nsect
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT
BRACKET_O

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT

SHF_ALLOC
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

sattr
MINUS
GREATER

address
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON

sattr
MINUS
GREATER

name
OP_ASSIGNMENT

kstrdup
BRACKET_O

secstrings
PLUS

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_name
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

sattr
MINUS
GREATER

name
EQ

NULL
BRACKET_C

goto

out
SEMICOLON

sect_attrs
MINUS
GREATER

nsections
PLUS
PLUS
SEMICOLON

sattr
MINUS
GREATER

mattr
DOT

show
OP_ASSIGNMENT

module_sect_show
SEMICOLON

sattr
MINUS
GREATER

mattr
DOT

store
OP_ASSIGNMENT

NULL
SEMICOLON

sattr
MINUS
GREATER

mattr
DOT

attr
DOT

name
OP_ASSIGNMENT

sattr
MINUS
GREATER

name
SEMICOLON

sattr
MINUS
GREATER

mattr
DOT

attr
DOT

owner
OP_ASSIGNMENT

mod
SEMICOLON

sattr
MINUS
GREATER

mattr
DOT

attr
DOT

mode
OP_ASSIGNMENT

S_IRUGO
SEMICOLON
MULT
BRACKET_O

gattr
PLUS
PLUS
BRACKET_C
OP_ASSIGNMENT
AMPERSANT
BRACKET_O

sattr
PLUS
PLUS
BRACKET_C
MINUS
GREATER

mattr
DOT

attr
SEMICOLON
CURLY_BRACKET_C
MULT

gattr
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

sysfs_create_group
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
COMMA
AMPERSANT

sect_attrs
MINUS
GREATER

grp
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

mod
MINUS
GREATER

sect_attrs
OP_ASSIGNMENT

sect_attrs
SEMICOLON

return
SEMICOLON

out
COLON

free_sect_attrs
BRACKET_O

sect_attrs
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

remove_sect_attrs
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

mod
MINUS
GREATER

sect_attrs
BRACKET_C
CURLY_BRACKET_O

sysfs_remove_group
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
COMMA
AMPERSANT

mod
MINUS
GREATER

sect_attrs
MINUS
GREATER

grp
BRACKET_C
SEMICOLON

free_sect_attrs
BRACKET_O

mod
MINUS
GREATER

sect_attrs
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

sect_attrs
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ELSE

static

inline

void

add_sect_attrs
BRACKET_O
STRUCT

module
MULT

mod
COMMA
TYPE_UNSIGNED
TYPE_INT

nsect
COMMA
TYPE_CHAR
MULT

sectstrings
COMMA

Elf_Shdr
MULT

sechdrs
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static

inline

void

remove_sect_attrs
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_SYSFS
TYPE_INT

module_add_modinfo_attrs
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_attribute
MULT

attr
SEMICOLON
STRUCT

module_attribute
MULT

temp_attr
SEMICOLON
TYPE_INT

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

i
SEMICOLON

mod
MINUS
GREATER

modinfo_attrs
OP_ASSIGNMENT

kzalloc
BRACKET_O
BRACKET_O

sizeof
BRACKET_O
STRUCT

module_attribute
BRACKET_C
MULT
BRACKET_O

ARRAY_SIZE
BRACKET_O

modinfo_attrs
BRACKET_C
PLUS
NUMBER
BRACKET_C
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

mod
MINUS
GREATER

modinfo_attrs
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

temp_attr
OP_ASSIGNMENT

mod
MINUS
GREATER

modinfo_attrs
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON
BRACKET_O

attr
OP_ASSIGNMENT

modinfo_attrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
AND
NOT

error
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

attr
MINUS
GREATER

test
OR
BRACKET_O

attr
MINUS
GREATER

test
AND

attr
MINUS
GREATER

test
BRACKET_O

mod
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

memcpy
BRACKET_O

temp_attr
COMMA

attr
COMMA

sizeof
BRACKET_O
MULT

temp_attr
BRACKET_C
BRACKET_C
SEMICOLON

temp_attr
MINUS
GREATER

attr
DOT

owner
OP_ASSIGNMENT

mod
SEMICOLON

error
OP_ASSIGNMENT

sysfs_create_file
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
COMMA
AMPERSANT

temp_attr
MINUS
GREATER

attr
BRACKET_C
SEMICOLON
PLUS
PLUS

temp_attr
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

error
SEMICOLON
CURLY_BRACKET_C

void

module_remove_modinfo_attrs
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_attribute
MULT

attr
SEMICOLON
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON
BRACKET_O

attr
OP_ASSIGNMENT
AMPERSANT

mod
MINUS
GREATER

modinfo_attrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

attr
MINUS
GREATER

attr
DOT

name
BRACKET_C
BREAK
SEMICOLON

sysfs_remove_file
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
COMMA
AMPERSANT

attr
MINUS
GREATER

attr
BRACKET_C
SEMICOLON
IF
BRACKET_O

attr
MINUS
GREATER

free
BRACKET_C

attr
MINUS
GREATER

free
BRACKET_O

mod
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

kfree
BRACKET_O

mod
MINUS
GREATER

modinfo_attrs
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_SYSFS
TYPE_INT

mod_sysfs_init
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
SEMICOLON
IF
BRACKET_O
NOT

module_sysfs_initialized
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

memset
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

mod
MINUS
GREATER

mkobj
DOT

kobj
BRACKET_C
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

kobject_set_name
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
COMMA
STRING
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

goto

out
SEMICOLON

kobj_set_kset_s
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
COMMA

module_subsys
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

mkobj
DOT

mod
OP_ASSIGNMENT

mod
SEMICOLON

kobject_init
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
BRACKET_C
SEMICOLON

out
COLON

return

err
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

mod_sysfs_setup
BRACKET_O
STRUCT

module
MULT

mod
COMMA
STRUCT

kernel_param
MULT

kparam
COMMA
TYPE_UNSIGNED
TYPE_INT

num_params
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
SEMICOLON

err
OP_ASSIGNMENT

kobject_add
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

goto

out
SEMICOLON

mod
MINUS
GREATER

holders_dir
OP_ASSIGNMENT

kobject_add_dir
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

mod
MINUS
GREATER

holders_dir
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

goto

out_unreg
SEMICOLON
CURLY_BRACKET_C

err
OP_ASSIGNMENT

module_param_sysfs_setup
BRACKET_O

mod
COMMA

kparam
COMMA

num_params
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

goto

out_unreg_holders
SEMICOLON

err
OP_ASSIGNMENT

module_add_modinfo_attrs
BRACKET_O

mod
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

goto

out_unreg_param
SEMICOLON

kobject_uevent
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
COMMA

KOBJ_ADD
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON

out_unreg_param
COLON

module_param_sysfs_remove
BRACKET_O

mod
BRACKET_C
SEMICOLON

out_unreg_holders
COLON

kobject_unregister
BRACKET_O

mod
MINUS
GREATER

holders_dir
BRACKET_C
SEMICOLON

out_unreg
COLON

kobject_del
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
BRACKET_C
SEMICOLON

kobject_put
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
BRACKET_C
SEMICOLON

out
COLON

return

err
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static

void

mod_kobject_remove
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O

module_remove_modinfo_attrs
BRACKET_O

mod
BRACKET_C
SEMICOLON

module_param_sysfs_remove
BRACKET_O

mod
BRACKET_C
SEMICOLON

kobject_unregister
BRACKET_O

mod
MINUS
GREATER

mkobj
DOT

drivers_dir
BRACKET_C
SEMICOLON

kobject_unregister
BRACKET_O

mod
MINUS
GREATER

holders_dir
BRACKET_C
SEMICOLON

kobject_unregister
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__unlink_module
BRACKET_O

void
MULT

_mod
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
OP_ASSIGNMENT

_mod
SEMICOLON

list_del
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

list
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

free_module
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O

stop_machine_run
BRACKET_O

__unlink_module
COMMA

mod
COMMA

NR_CPUS
BRACKET_C
SEMICOLON

remove_sect_attrs
BRACKET_O

mod
BRACKET_C
SEMICOLON

mod_kobject_remove
BRACKET_O

mod
BRACKET_C
SEMICOLON

unwind_remove_table
BRACKET_O

mod
MINUS
GREATER

unwind_info
COMMA
NUMBER
BRACKET_C
SEMICOLON

module_arch_cleanup
BRACKET_O

mod
BRACKET_C
SEMICOLON

module_unload_free
BRACKET_O

mod
BRACKET_C
SEMICOLON

module_free
BRACKET_O

mod
COMMA

mod
MINUS
GREATER

module_init
BRACKET_C
SEMICOLON

kfree
BRACKET_O

mod
MINUS
GREATER

args
BRACKET_C
SEMICOLON
IF
BRACKET_O

mod
MINUS
GREATER

percpu
BRACKET_C

percpu_modfree
BRACKET_O

mod
MINUS
GREATER

percpu
BRACKET_C
SEMICOLON

lockdep_free_key_range
BRACKET_O

mod
MINUS
GREATER

module_core
COMMA

mod
MINUS
GREATER

core_size
BRACKET_C
SEMICOLON

module_free
BRACKET_O

mod
COMMA

mod
MINUS
GREATER

module_core
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void
MULT

__symbol_get
BRACKET_O
CONST
TYPE_CHAR
MULT

symbol
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

owner
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

value
COMMA

flags
SEMICOLON
CONST
TYPE_UNSIGNED
TYPE_LONG
MULT

crc
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

modlist_lock
COMMA

flags
BRACKET_C
SEMICOLON

value
OP_ASSIGNMENT

__find_symbol
BRACKET_O

symbol
COMMA
AMPERSANT

owner
COMMA
AMPERSANT

crc
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

value
AND
NOT

strong_try_module_get
BRACKET_O

owner
BRACKET_C
BRACKET_C

value
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

modlist_lock
COMMA

flags
BRACKET_C
SEMICOLON

return
BRACKET_O

void
MULT
BRACKET_C

value
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

__symbol_get
BRACKET_C
SEMICOLON

static
TYPE_INT

verify_export_symbols
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
CONST
TYPE_CHAR
MULT

name
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

i
COMMA

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

module
MULT

owner
SEMICOLON
CONST
TYPE_UNSIGNED
TYPE_LONG
MULT

crc
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

mod
MINUS
GREATER

num_syms
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

__find_symbol
BRACKET_O

mod
MINUS
GREATER

syms
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
COMMA
AMPERSANT

owner
COMMA
AMPERSANT

crc
COMMA
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

name
OP_ASSIGNMENT

mod
MINUS
GREATER

syms
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
SEMICOLON

ret
OP_ASSIGNMENT
MINUS

ENOEXEC
SEMICOLON

goto

dup
SEMICOLON
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

mod
MINUS
GREATER

num_gpl_syms
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

__find_symbol
BRACKET_O

mod
MINUS
GREATER

gpl_syms
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
COMMA
AMPERSANT

owner
COMMA
AMPERSANT

crc
COMMA
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

name
OP_ASSIGNMENT

mod
MINUS
GREATER

gpl_syms
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
SEMICOLON

ret
OP_ASSIGNMENT
MINUS

ENOEXEC
SEMICOLON

goto

dup
SEMICOLON
CURLY_BRACKET_C

dup
COLON
IF
BRACKET_O

ret
BRACKET_C

printk
BRACKET_O

KERN_ERR
STRING
COMMA

mod
MINUS
GREATER

name
COMMA

name
COMMA

module_name
BRACKET_O

owner
BRACKET_C
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

simplify_symbols
BRACKET_O

Elf_Shdr
MULT

sechdrs
COMMA
TYPE_UNSIGNED
TYPE_INT

symindex
COMMA
CONST
TYPE_CHAR
MULT

strtab
COMMA
TYPE_UNSIGNED
TYPE_INT

versindex
COMMA
TYPE_UNSIGNED
TYPE_INT

pcpuindex
COMMA
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O

Elf_Sym
MULT

sym
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

symindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

secbase
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

i
COMMA

n
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

symindex
CORNER_BRACKET_C
DOT

sh_size
DIV

sizeof
BRACKET_O

Elf_Sym
BRACKET_C
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

n
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

sym
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_shndx
BRACKET_C
CURLY_BRACKET_O

case

SHN_COMMON
COLON

DEBUGP
BRACKET_O
STRING
COMMA

strtab
PLUS

sym
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_name
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
MINUS

ENOEXEC
SEMICOLON
BREAK
SEMICOLON

case

SHN_ABS
COLON

DEBUGP
BRACKET_O
STRING
COMMA
BRACKET_O
TYPE_LONG
BRACKET_C

sym
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_value
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

SHN_UNDEF
COLON

sym
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_value
OP_ASSIGNMENT

resolve_symbol
BRACKET_O

sechdrs
COMMA

versindex
COMMA

strtab
PLUS

sym
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_name
COMMA

mod
BRACKET_C
SEMICOLON
IF
BRACKET_O

sym
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_value
NOT_EQ
NUMBER
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

ELF_ST_BIND
BRACKET_O

sym
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_info
BRACKET_C
EQ

STB_WEAK
BRACKET_C
BREAK
SEMICOLON

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

mod
MINUS
GREATER

name
COMMA

strtab
PLUS

sym
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_name
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
MINUS

ENOENT
SEMICOLON
BREAK
SEMICOLON

default
COLON
IF
BRACKET_O

sym
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_shndx
EQ

pcpuindex
BRACKET_C

secbase
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

mod
MINUS
GREATER

percpu
SEMICOLON
ELSE

secbase
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

sym
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_shndx
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON

sym
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_value
ASSIGN_PLUS

secbase
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_LONG

get_offset
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
MULT

size
COMMA

Elf_Shdr
MULT

sechdr
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
SEMICOLON

ret
OP_ASSIGNMENT

ALIGN
BRACKET_O
MULT

size
COMMA

sechdr
MINUS
GREATER

sh_addralign
QUESTION_MARK
COLON
NUMBER
BRACKET_C
SEMICOLON
MULT

size
OP_ASSIGNMENT

ret
PLUS

sechdr
MINUS
GREATER

sh_size
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

void

layout_sections
BRACKET_O
STRUCT

module
MULT

mod
COMMA
CONST

Elf_Ehdr
MULT

hdr
COMMA

Elf_Shdr
MULT

sechdrs
COMMA
CONST
TYPE_CHAR
MULT

secstrings
BRACKET_C
CURLY_BRACKET_O

static
TYPE_UNSIGNED
TYPE_LONG
CONST

masks
CORNER_BRACKET_O
CORNER_BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CURLY_BRACKET_O

SHF_EXECINSTR
LOGICAL_OR

SHF_ALLOC
COMMA

ARCH_SHF_SMALL
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O

SHF_ALLOC
COMMA

SHF_WRITE
LOGICAL_OR

ARCH_SHF_SMALL
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O

SHF_WRITE
LOGICAL_OR

SHF_ALLOC
COMMA

ARCH_SHF_SMALL
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O

ARCH_SHF_SMALL
LOGICAL_OR

SHF_ALLOC
COMMA
NUMBER
CURLY_BRACKET_C
CURLY_BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

m
COMMA

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

hdr
MINUS
GREATER

e_shnum
SEMICOLON

i
PLUS
PLUS
BRACKET_C

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_entsize
OP_ASSIGNMENT
TILDE
NUMBER

UL
SEMICOLON

DEBUGP
BRACKET_O
STRING
BRACKET_C
SEMICOLON
FOR
BRACKET_O

m
OP_ASSIGNMENT
NUMBER
SEMICOLON

m
LESS

ARRAY_SIZE
BRACKET_O

masks
BRACKET_C
SEMICOLON
PLUS
PLUS

m
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

hdr
MINUS
GREATER

e_shnum
SEMICOLON
PLUS
PLUS

i
BRACKET_C
CURLY_BRACKET_O

Elf_Shdr
MULT

s
OP_ASSIGNMENT
AMPERSANT

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

s
MINUS
GREATER

sh_flags
AMPERSANT

masks
CORNER_BRACKET_O

m
CORNER_BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
NOT_EQ

masks
CORNER_BRACKET_O

m
CORNER_BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OR
BRACKET_O

s
MINUS
GREATER

sh_flags
AMPERSANT

masks
CORNER_BRACKET_O

m
CORNER_BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
OR

s
MINUS
GREATER

sh_entsize
NOT_EQ
TILDE
NUMBER

UL
OR

strncmp
BRACKET_O

secstrings
PLUS

s
MINUS
GREATER

sh_name
COMMA
STRING
COMMA
NUMBER
BRACKET_C
EQ
NUMBER
BRACKET_C
CONTINUE
SEMICOLON

s
MINUS
GREATER

sh_entsize
OP_ASSIGNMENT

get_offset
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

core_size
COMMA

s
BRACKET_C
SEMICOLON

DEBUGP
BRACKET_O
STRING
COMMA

secstrings
PLUS

s
MINUS
GREATER

sh_name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

m
EQ
NUMBER
BRACKET_C

mod
MINUS
GREATER

core_text_size
OP_ASSIGNMENT

mod
MINUS
GREATER

core_size
SEMICOLON
CURLY_BRACKET_C

DEBUGP
BRACKET_O
STRING
BRACKET_C
SEMICOLON
FOR
BRACKET_O

m
OP_ASSIGNMENT
NUMBER
SEMICOLON

m
LESS

ARRAY_SIZE
BRACKET_O

masks
BRACKET_C
SEMICOLON
PLUS
PLUS

m
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

hdr
MINUS
GREATER

e_shnum
SEMICOLON
PLUS
PLUS

i
BRACKET_C
CURLY_BRACKET_O

Elf_Shdr
MULT

s
OP_ASSIGNMENT
AMPERSANT

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

s
MINUS
GREATER

sh_flags
AMPERSANT

masks
CORNER_BRACKET_O

m
CORNER_BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
NOT_EQ

masks
CORNER_BRACKET_O

m
CORNER_BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OR
BRACKET_O

s
MINUS
GREATER

sh_flags
AMPERSANT

masks
CORNER_BRACKET_O

m
CORNER_BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
OR

s
MINUS
GREATER

sh_entsize
NOT_EQ
TILDE
NUMBER

UL
OR

strncmp
BRACKET_O

secstrings
PLUS

s
MINUS
GREATER

sh_name
COMMA
STRING
COMMA
NUMBER
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
CONTINUE
SEMICOLON

s
MINUS
GREATER

sh_entsize
OP_ASSIGNMENT
BRACKET_O

get_offset
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

init_size
COMMA

s
BRACKET_C
LOGICAL_OR

INIT_OFFSET_MASK
BRACKET_C
SEMICOLON

DEBUGP
BRACKET_O
STRING
COMMA

secstrings
PLUS

s
MINUS
GREATER

sh_name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

m
EQ
NUMBER
BRACKET_C

mod
MINUS
GREATER

init_text_size
OP_ASSIGNMENT

mod
MINUS
GREATER

init_size
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

set_license
BRACKET_O
STRUCT

module
MULT

mod
COMMA
CONST
TYPE_CHAR
MULT

license
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

license
BRACKET_C

license
OP_ASSIGNMENT
STRING
SEMICOLON
IF
BRACKET_O
NOT

license_is_gpl_compatible
BRACKET_O

license
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT
BRACKET_O

tainted
AMPERSANT

TAINT_PROPRIETARY_MODULE
BRACKET_C
BRACKET_C

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA

mod
MINUS
GREATER

name
COMMA

license
BRACKET_C
SEMICOLON

add_taint_module
BRACKET_O

mod
COMMA

TAINT_PROPRIETARY_MODULE
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_CHAR
MULT

next_string
BRACKET_O
TYPE_CHAR
MULT

string
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

secsize
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O

string
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

string
PLUS
PLUS
SEMICOLON
IF
BRACKET_O
BRACKET_O
MULT

secsize
BRACKET_C
MINUS
MINUS
LE_EQ
NUMBER
BRACKET_C

return

NULL
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

string
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

string
PLUS
PLUS
SEMICOLON
IF
BRACKET_O
BRACKET_O
MULT

secsize
BRACKET_C
MINUS
MINUS
LE_EQ
NUMBER
BRACKET_C

return

NULL
SEMICOLON
CURLY_BRACKET_C

return

string
SEMICOLON
CURLY_BRACKET_C

static
TYPE_CHAR
MULT

get_modinfo
BRACKET_O

Elf_Shdr
MULT

sechdrs
COMMA
TYPE_UNSIGNED
TYPE_INT

info
COMMA
CONST
TYPE_CHAR
MULT

tag
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

p
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

taglen
OP_ASSIGNMENT

strlen
BRACKET_O

tag
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

size
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

info
CORNER_BRACKET_C
DOT

sh_size
SEMICOLON
FOR
BRACKET_O

p
OP_ASSIGNMENT
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

info
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON

p
SEMICOLON

p
OP_ASSIGNMENT

next_string
BRACKET_O

p
COMMA
AMPERSANT

size
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

strncmp
BRACKET_O

p
COMMA

tag
COMMA

taglen
BRACKET_C
EQ
NUMBER
AND

p
CORNER_BRACKET_O

taglen
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

return

p
PLUS

taglen
PLUS
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

NULL
SEMICOLON
CURLY_BRACKET_C

static

void

setup_modinfo
BRACKET_O
STRUCT

module
MULT

mod
COMMA

Elf_Shdr
MULT

sechdrs
COMMA
TYPE_UNSIGNED
TYPE_INT

infoindex
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_attribute
MULT

attr
SEMICOLON
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON
BRACKET_O

attr
OP_ASSIGNMENT

modinfo_attrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

attr
MINUS
GREATER

setup
BRACKET_C

attr
MINUS
GREATER

setup
BRACKET_O

mod
COMMA

get_modinfo
BRACKET_O

sechdrs
COMMA

infoindex
COMMA

attr
MINUS
GREATER

attr
DOT

name
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_IFDEF

CONFIG_KALLSYMS

static
TYPE_INT

is_exported
BRACKET_O
CONST
TYPE_CHAR
MULT

name
COMMA
CONST
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

mod
AND

lookup_symbol
BRACKET_O

name
COMMA

__start___ksymtab
COMMA

__stop___ksymtab
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
ELSE
IF
BRACKET_O

mod
AND

lookup_symbol
BRACKET_O

name
COMMA

mod
MINUS
GREATER

syms
COMMA

mod
MINUS
GREATER

syms
PLUS

mod
MINUS
GREATER

num_syms
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
ELSE

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_CHAR

elf_type
BRACKET_O
CONST

Elf_Sym
MULT

sym
COMMA

Elf_Shdr
MULT

sechdrs
COMMA
CONST
TYPE_CHAR
MULT

secstrings
COMMA
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

ELF_ST_BIND
BRACKET_O

sym
MINUS
GREATER

st_info
BRACKET_C
EQ

STB_WEAK
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

ELF_ST_TYPE
BRACKET_O

sym
MINUS
GREATER

st_info
BRACKET_C
EQ

STT_OBJECT
BRACKET_C

return
QUOTED_CHAR
SEMICOLON
ELSE

return
QUOTED_CHAR
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

sym
MINUS
GREATER

st_shndx
EQ

SHN_UNDEF
BRACKET_C

return
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

sym
MINUS
GREATER

st_shndx
EQ

SHN_ABS
BRACKET_C

return
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

sym
MINUS
GREATER

st_shndx
GR_EQ

SHN_LORESERVE
BRACKET_C

return
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

sechdrs
CORNER_BRACKET_O

sym
MINUS
GREATER

st_shndx
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT

SHF_EXECINSTR
BRACKET_C

return
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

sechdrs
CORNER_BRACKET_O

sym
MINUS
GREATER

st_shndx
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT

SHF_ALLOC
AND

sechdrs
CORNER_BRACKET_O

sym
MINUS
GREATER

st_shndx
CORNER_BRACKET_C
DOT

sh_type
NOT_EQ

SHT_NOBITS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT
BRACKET_O

sechdrs
CORNER_BRACKET_O

sym
MINUS
GREATER

st_shndx
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT

SHF_WRITE
BRACKET_C
BRACKET_C

return
QUOTED_CHAR
SEMICOLON
ELSE
IF
BRACKET_O

sechdrs
CORNER_BRACKET_O

sym
MINUS
GREATER

st_shndx
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT

ARCH_SHF_SMALL
BRACKET_C

return
QUOTED_CHAR
SEMICOLON
ELSE

return
QUOTED_CHAR
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

sechdrs
CORNER_BRACKET_O

sym
MINUS
GREATER

st_shndx
CORNER_BRACKET_C
DOT

sh_type
EQ

SHT_NOBITS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sechdrs
CORNER_BRACKET_O

sym
MINUS
GREATER

st_shndx
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT

ARCH_SHF_SMALL
BRACKET_C

return
QUOTED_CHAR
SEMICOLON
ELSE

return
QUOTED_CHAR
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

strncmp
BRACKET_O

secstrings
PLUS

sechdrs
CORNER_BRACKET_O

sym
MINUS
GREATER

st_shndx
CORNER_BRACKET_C
DOT

sh_name
COMMA
STRING
COMMA

strlen
BRACKET_O
STRING
BRACKET_C
BRACKET_C
EQ
NUMBER
BRACKET_C

return
QUOTED_CHAR
SEMICOLON

return
QUOTED_CHAR
SEMICOLON
CURLY_BRACKET_C

static

void

add_kallsyms
BRACKET_O
STRUCT

module
MULT

mod
COMMA

Elf_Shdr
MULT

sechdrs
COMMA
TYPE_UNSIGNED
TYPE_INT

symindex
COMMA
TYPE_UNSIGNED
TYPE_INT

strindex
COMMA
CONST
TYPE_CHAR
MULT

secstrings
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON

mod
MINUS
GREATER

symtab
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

symindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON

mod
MINUS
GREATER

num_symtab
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

symindex
CORNER_BRACKET_C
DOT

sh_size
DIV

sizeof
BRACKET_O

Elf_Sym
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

strtab
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

strindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

mod
MINUS
GREATER

num_symtab
SEMICOLON

i
PLUS
PLUS
BRACKET_C

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_info
OP_ASSIGNMENT

elf_type
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

sechdrs
COMMA

secstrings
COMMA

mod
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static

inline

void

add_kallsyms
BRACKET_O
STRUCT

module
MULT

mod
COMMA

Elf_Shdr
MULT

sechdrs
COMMA
TYPE_UNSIGNED
TYPE_INT

symindex
COMMA
TYPE_UNSIGNED
TYPE_INT

strindex
COMMA
CONST
TYPE_CHAR
MULT

secstrings
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_ENDIF

static
STRUCT

module
MULT

load_module
BRACKET_O

void

__user
MULT

umod
COMMA
TYPE_UNSIGNED
TYPE_LONG

len
COMMA
CONST
TYPE_CHAR

__user
MULT

uargs
BRACKET_C
CURLY_BRACKET_O

Elf_Ehdr
MULT

hdr
SEMICOLON

Elf_Shdr
MULT

sechdrs
SEMICOLON
TYPE_CHAR
MULT

secstrings
COMMA
MULT

args
COMMA
MULT

modmagic
COMMA
MULT

strtab
OP_ASSIGNMENT

NULL
COMMA
MULT

supported
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

symindex
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

strindex
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

setupindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

exindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

exportindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

modindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

obsparmindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

infoindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

gplindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

crcindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

gplcrcindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

versindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

pcpuindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

gplfutureindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

gplfuturecrcindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

unwindex
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

unusedindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

unusedcrcindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

unusedgplindex
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

unusedgplcrcindex
SEMICOLON
STRUCT

module
MULT

mod
SEMICOLON
TYPE_LONG

err
OP_ASSIGNMENT
NUMBER
SEMICOLON

void
MULT

percpu
OP_ASSIGNMENT

NULL
COMMA
MULT

ptr
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

exception_table_entry
MULT

extable
SEMICOLON

mm_segment_t

old_fs
SEMICOLON

DEBUGP
BRACKET_O
STRING
COMMA

umod
COMMA

len
COMMA

uargs
BRACKET_C
SEMICOLON
IF
BRACKET_O

len
LESS

sizeof
BRACKET_O
MULT

hdr
BRACKET_C
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ENOEXEC
BRACKET_C
SEMICOLON
IF
BRACKET_O

len
GREATER
NUMBER
MULT
NUMBER
MULT
NUMBER
OR
BRACKET_O

hdr
OP_ASSIGNMENT

vmalloc
BRACKET_O

len
BRACKET_C
BRACKET_C
EQ

NULL
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ENOMEM
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O

hdr
COMMA

umod
COMMA

len
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

goto

free_hdr
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

memcmp
BRACKET_O

hdr
MINUS
GREATER

e_ident
COMMA

ELFMAG
COMMA
NUMBER
BRACKET_C
NOT_EQ
NUMBER
OR

hdr
MINUS
GREATER

e_type
NOT_EQ

ET_REL
OR
NOT

elf_check_arch
BRACKET_O

hdr
BRACKET_C
OR

hdr
MINUS
GREATER

e_shentsize
NOT_EQ

sizeof
BRACKET_O
MULT

sechdrs
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

ENOEXEC
SEMICOLON

goto

free_hdr
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

len
LESS

hdr
MINUS
GREATER

e_shoff
PLUS

hdr
MINUS
GREATER

e_shnum
MULT

sizeof
BRACKET_O

Elf_Shdr
BRACKET_C
BRACKET_C

goto

truncated
SEMICOLON

sechdrs
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

hdr
PLUS

hdr
MINUS
GREATER

e_shoff
SEMICOLON

secstrings
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

hdr
PLUS

sechdrs
CORNER_BRACKET_O

hdr
MINUS
GREATER

e_shstrndx
CORNER_BRACKET_C
DOT

sh_offset
SEMICOLON

sechdrs
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
DOT

sh_addr
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

hdr
MINUS
GREATER

e_shnum
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_type
NOT_EQ

SHT_NOBITS
AND

len
LESS

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_offset
PLUS

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_size
BRACKET_C

goto

truncated
SEMICOLON

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_addr
OP_ASSIGNMENT
BRACKET_O

size_t
BRACKET_C

hdr
PLUS

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_offset
SEMICOLON
IF
BRACKET_O

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_type
EQ

SHT_SYMTAB
BRACKET_C
CURLY_BRACKET_O

symindex
OP_ASSIGNMENT

i
SEMICOLON

strindex
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_link
SEMICOLON

strtab
OP_ASSIGNMENT
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

hdr
PLUS

sechdrs
CORNER_BRACKET_O

strindex
CORNER_BRACKET_C
DOT

sh_offset
SEMICOLON
CURLY_BRACKET_C
PP_IFNDEF

CONFIG_MODULE_UNLOAD
IF
BRACKET_O

strncmp
BRACKET_O

secstrings
PLUS

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_name
COMMA
STRING
COMMA
NUMBER
BRACKET_C
EQ
NUMBER
BRACKET_C

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT
OP_ASSIGNMENT
TILDE
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

SHF_ALLOC
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

modindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

modindex
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT
MINUS

ENOEXEC
SEMICOLON

goto

free_hdr
SEMICOLON
CURLY_BRACKET_C

mod
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

modindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON
IF
BRACKET_O

symindex
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT
MINUS

ENOEXEC
SEMICOLON

goto

free_hdr
SEMICOLON
CURLY_BRACKET_C

exportindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

gplindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

gplfutureindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

unusedindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

unusedgplindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

crcindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

gplcrcindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

gplfuturecrcindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

unusedcrcindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

unusedgplcrcindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

setupindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

exindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

obsparmindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

versindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

infoindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA
STRING
BRACKET_C
SEMICOLON

pcpuindex
OP_ASSIGNMENT

find_pcpusec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
BRACKET_C
SEMICOLON
PP_IFDEF

ARCH_UNWIND_SECTION_NAME

unwindex
OP_ASSIGNMENT

find_sec
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA

ARCH_UNWIND_SECTION_NAME
BRACKET_C
SEMICOLON
PP_ENDIF

sechdrs
CORNER_BRACKET_O

infoindex
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT
OP_ASSIGNMENT
TILDE
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

SHF_ALLOC
SEMICOLON
PP_IFDEF

CONFIG_KALLSYMS

sechdrs
CORNER_BRACKET_O

symindex
CORNER_BRACKET_C
DOT

sh_flags
LOGICAL_OR
OP_ASSIGNMENT

SHF_ALLOC
SEMICOLON

sechdrs
CORNER_BRACKET_O

strindex
CORNER_BRACKET_C
DOT

sh_flags
LOGICAL_OR
OP_ASSIGNMENT

SHF_ALLOC
SEMICOLON
PP_ENDIF
IF
BRACKET_O

unwindex
BRACKET_C

sechdrs
CORNER_BRACKET_O

unwindex
CORNER_BRACKET_C
DOT

sh_flags
LOGICAL_OR
OP_ASSIGNMENT

SHF_ALLOC
SEMICOLON
IF
BRACKET_O
NOT

check_modstruct_version
BRACKET_O

sechdrs
COMMA

versindex
COMMA

mod
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

ENOEXEC
SEMICOLON

goto

free_hdr
SEMICOLON
CURLY_BRACKET_C

modmagic
OP_ASSIGNMENT

get_modinfo
BRACKET_O

sechdrs
COMMA

infoindex
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

modmagic
BRACKET_C
CURLY_BRACKET_O

add_taint_module
BRACKET_O

mod
COMMA

TAINT_FORCED_MODULE
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
NOT

same_magic
BRACKET_O

modmagic
COMMA

vermagic
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
COMMA

mod
MINUS
GREATER

name
COMMA

modmagic
COMMA

vermagic
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT
MINUS

ENOEXEC
SEMICOLON

goto

free_hdr
SEMICOLON
CURLY_BRACKET_C

supported
OP_ASSIGNMENT

get_modinfo
BRACKET_O

sechdrs
COMMA

infoindex
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

supported
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

strcmp
BRACKET_O

supported
COMMA
STRING
BRACKET_C
BRACKET_C

tainted
LOGICAL_OR
OP_ASSIGNMENT

TAINT_EXTERNAL_SUPPORT
SEMICOLON
ELSE
IF
BRACKET_O

strcmp
BRACKET_O

supported
COMMA
STRING
BRACKET_C
BRACKET_C

supported
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

supported
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unsupported
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
STRING
STRING
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT
MINUS

ENOEXEC
SEMICOLON

goto

free_hdr
SEMICOLON
CURLY_BRACKET_C

tainted
LOGICAL_OR
OP_ASSIGNMENT

TAINT_NO_SUPPORT
SEMICOLON
IF
BRACKET_O

unsupported
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

args
OP_ASSIGNMENT

strndup_user
BRACKET_O

uargs
COMMA
TILDE
NUMBER

UL
GREATER
GREATER
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

args
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

args
BRACKET_C
SEMICOLON

goto

free_hdr
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

find_module
BRACKET_O

mod
MINUS
GREATER

name
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

EEXIST
SEMICOLON

goto

free_mod
SEMICOLON
CURLY_BRACKET_C

mod
MINUS
GREATER

state
OP_ASSIGNMENT

MODULE_STATE_COMING
SEMICOLON

err
OP_ASSIGNMENT

module_frob_arch_sections
BRACKET_O

hdr
COMMA

sechdrs
COMMA

secstrings
COMMA

mod
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C

goto

free_mod
SEMICOLON
IF
BRACKET_O

pcpuindex
BRACKET_C
CURLY_BRACKET_O

percpu
OP_ASSIGNMENT

percpu_modalloc
BRACKET_O

sechdrs
CORNER_BRACKET_O

pcpuindex
CORNER_BRACKET_C
DOT

sh_size
COMMA

sechdrs
CORNER_BRACKET_O

pcpuindex
CORNER_BRACKET_C
DOT

sh_addralign
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

percpu
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

goto

free_mod
SEMICOLON
CURLY_BRACKET_C

sechdrs
CORNER_BRACKET_O

pcpuindex
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT
OP_ASSIGNMENT
TILDE
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

SHF_ALLOC
SEMICOLON

mod
MINUS
GREATER

percpu
OP_ASSIGNMENT

percpu
SEMICOLON
CURLY_BRACKET_C

layout_sections
BRACKET_O

mod
COMMA

hdr
COMMA

sechdrs
COMMA

secstrings
BRACKET_C
SEMICOLON

ptr
OP_ASSIGNMENT

module_alloc
BRACKET_O

mod
MINUS
GREATER

core_size
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ptr
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

goto

free_percpu
SEMICOLON
CURLY_BRACKET_C

memset
BRACKET_O

ptr
COMMA
NUMBER
COMMA

mod
MINUS
GREATER

core_size
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

module_core
OP_ASSIGNMENT

ptr
SEMICOLON

ptr
OP_ASSIGNMENT

module_alloc
BRACKET_O

mod
MINUS
GREATER

init_size
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ptr
AND

mod
MINUS
GREATER

init_size
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

goto

free_core
SEMICOLON
CURLY_BRACKET_C

memset
BRACKET_O

ptr
COMMA
NUMBER
COMMA

mod
MINUS
GREATER

init_size
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

module_init
OP_ASSIGNMENT

ptr
SEMICOLON

DEBUGP
BRACKET_O
STRING
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

hdr
MINUS
GREATER

e_shnum
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

void
MULT

dest
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT

SHF_ALLOC
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_entsize
AMPERSANT

INIT_OFFSET_MASK
BRACKET_C

dest
OP_ASSIGNMENT

mod
MINUS
GREATER

module_init
PLUS
BRACKET_O

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_entsize
AMPERSANT
TILDE

INIT_OFFSET_MASK
BRACKET_C
SEMICOLON
ELSE

dest
OP_ASSIGNMENT

mod
MINUS
GREATER

module_core
PLUS

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_entsize
SEMICOLON
IF
BRACKET_O

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_type
NOT_EQ

SHT_NOBITS
BRACKET_C

memcpy
BRACKET_O

dest
COMMA
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_addr
COMMA

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_size
BRACKET_C
SEMICOLON

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_addr
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

dest
SEMICOLON

DEBUGP
BRACKET_O
STRING
COMMA

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_addr
COMMA

secstrings
PLUS

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

mod
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

modindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON

module_unload_init
BRACKET_O

mod
BRACKET_C
SEMICOLON
IF
BRACKET_O

mod_sysfs_init
BRACKET_O

mod
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

goto

cleanup
SEMICOLON

set_license
BRACKET_O

mod
COMMA

get_modinfo
BRACKET_O

sechdrs
COMMA

infoindex
COMMA
STRING
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

strcmp
BRACKET_O

mod
MINUS
GREATER

name
COMMA
STRING
BRACKET_C
EQ
NUMBER
BRACKET_C

add_taint
BRACKET_O

TAINT_PROPRIETARY_MODULE
BRACKET_C
SEMICOLON
IF
BRACKET_O

strcmp
BRACKET_O

mod
MINUS
GREATER

name
COMMA
STRING
BRACKET_C
EQ
NUMBER
BRACKET_C

add_taint_module
BRACKET_O

mod
COMMA

TAINT_PROPRIETARY_MODULE
BRACKET_C
SEMICOLON

setup_modinfo
BRACKET_O

mod
COMMA

sechdrs
COMMA

infoindex
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

simplify_symbols
BRACKET_O

sechdrs
COMMA

symindex
COMMA

strtab
COMMA

versindex
COMMA

pcpuindex
COMMA

mod
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C

goto

cleanup
SEMICOLON

mod
MINUS
GREATER

num_syms
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

exportindex
CORNER_BRACKET_C
DOT

sh_size
DIV

sizeof
BRACKET_O
MULT

mod
MINUS
GREATER

syms
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

syms
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

exportindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON
IF
BRACKET_O

crcindex
BRACKET_C

mod
MINUS
GREATER

crcs
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

crcindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON

mod
MINUS
GREATER

num_gpl_syms
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

gplindex
CORNER_BRACKET_C
DOT

sh_size
DIV

sizeof
BRACKET_O
MULT

mod
MINUS
GREATER

gpl_syms
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

gpl_syms
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

gplindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON
IF
BRACKET_O

gplcrcindex
BRACKET_C

mod
MINUS
GREATER

gpl_crcs
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

gplcrcindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON

mod
MINUS
GREATER

num_gpl_future_syms
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

gplfutureindex
CORNER_BRACKET_C
DOT

sh_size
DIV

sizeof
BRACKET_O
MULT

mod
MINUS
GREATER

gpl_future_syms
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

num_unused_syms
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

unusedindex
CORNER_BRACKET_C
DOT

sh_size
DIV

sizeof
BRACKET_O
MULT

mod
MINUS
GREATER

unused_syms
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

num_unused_gpl_syms
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

unusedgplindex
CORNER_BRACKET_C
DOT

sh_size
DIV

sizeof
BRACKET_O
MULT

mod
MINUS
GREATER

unused_gpl_syms
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

gpl_future_syms
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

gplfutureindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON
IF
BRACKET_O

gplfuturecrcindex
BRACKET_C

mod
MINUS
GREATER

gpl_future_crcs
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

gplfuturecrcindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON

mod
MINUS
GREATER

unused_syms
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

unusedindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON
IF
BRACKET_O

unusedcrcindex
BRACKET_C

mod
MINUS
GREATER

unused_crcs
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

unusedcrcindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON

mod
MINUS
GREATER

unused_gpl_syms
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

unusedgplindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON
IF
BRACKET_O

unusedgplcrcindex
BRACKET_C

mod
MINUS
GREATER

unused_crcs
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

unusedgplcrcindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON
PP_IFDEF

CONFIG_MODVERSIONS
IF
BRACKET_O
BRACKET_O

mod
MINUS
GREATER

num_syms
AND
NOT

crcindex
BRACKET_C
OR
BRACKET_O

mod
MINUS
GREATER

num_gpl_syms
AND
NOT

gplcrcindex
BRACKET_C
OR
BRACKET_O

mod
MINUS
GREATER

num_gpl_future_syms
AND
NOT

gplfuturecrcindex
BRACKET_C
OR
BRACKET_O

mod
MINUS
GREATER

num_unused_syms
AND
NOT

unusedcrcindex
BRACKET_C
OR
BRACKET_O

mod
MINUS
GREATER

num_unused_gpl_syms
AND
NOT

unusedgplcrcindex
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON

add_taint_module
BRACKET_O

mod
COMMA

TAINT_FORCED_MODULE
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

hdr
MINUS
GREATER

e_shnum
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
CONST
TYPE_CHAR
MULT

strtab
OP_ASSIGNMENT
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

strindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

info
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_info
SEMICOLON
IF
BRACKET_O

info
GR_EQ

hdr
MINUS
GREATER

e_shnum
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

sechdrs
CORNER_BRACKET_O

info
CORNER_BRACKET_C
DOT

sh_flags
AMPERSANT

SHF_ALLOC
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_type
EQ

SHT_REL
BRACKET_C

err
OP_ASSIGNMENT

apply_relocate
BRACKET_O

sechdrs
COMMA

strtab
COMMA

symindex
COMMA

i
COMMA

mod
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O

sechdrs
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sh_type
EQ

SHT_RELA
BRACKET_C

err
OP_ASSIGNMENT

apply_relocate_add
BRACKET_O

sechdrs
COMMA

strtab
COMMA

symindex
COMMA

i
COMMA

mod
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C

goto

cleanup
SEMICOLON
CURLY_BRACKET_C

err
OP_ASSIGNMENT

verify_export_symbols
BRACKET_O

mod
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C

goto

cleanup
SEMICOLON

mod
MINUS
GREATER

num_exentries
OP_ASSIGNMENT

sechdrs
CORNER_BRACKET_O

exindex
CORNER_BRACKET_C
DOT

sh_size
DIV

sizeof
BRACKET_O
MULT

mod
MINUS
GREATER

extable
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

extable
OP_ASSIGNMENT

extable
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

exindex
CORNER_BRACKET_C
DOT

sh_addr
SEMICOLON

sort_extable
BRACKET_O

extable
COMMA

extable
PLUS

mod
MINUS
GREATER

num_exentries
BRACKET_C
SEMICOLON

percpu_modcopy
BRACKET_O

mod
MINUS
GREATER

percpu
COMMA
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

pcpuindex
CORNER_BRACKET_C
DOT

sh_addr
COMMA

sechdrs
CORNER_BRACKET_O

pcpuindex
CORNER_BRACKET_C
DOT

sh_size
BRACKET_C
SEMICOLON

add_kallsyms
BRACKET_O

mod
COMMA

sechdrs
COMMA

symindex
COMMA

strindex
COMMA

secstrings
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

module_finalize
BRACKET_O

hdr
COMMA

sechdrs
COMMA

mod
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C

goto

cleanup
SEMICOLON

old_fs
OP_ASSIGNMENT

get_fs
BRACKET_O
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

KERNEL_DS
BRACKET_C
SEMICOLON
IF
BRACKET_O

mod
MINUS
GREATER

module_init
BRACKET_C

flush_icache_range
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

mod
MINUS
GREATER

module_init
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

mod
MINUS
GREATER

module_init
PLUS

mod
MINUS
GREATER

init_size
BRACKET_C
SEMICOLON

flush_icache_range
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

mod
MINUS
GREATER

module_core
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

mod
MINUS
GREATER

module_core
PLUS

mod
MINUS
GREATER

core_size
BRACKET_C
SEMICOLON

set_fs
BRACKET_O

old_fs
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

args
OP_ASSIGNMENT

args
SEMICOLON
IF
BRACKET_O

obsparmindex
BRACKET_C

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

parse_args
BRACKET_O

mod
MINUS
GREATER

name
COMMA

mod
MINUS
GREATER

args
COMMA
BRACKET_O
STRUCT

kernel_param
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

setupindex
CORNER_BRACKET_C
DOT

sh_addr
COMMA

sechdrs
CORNER_BRACKET_O

setupindex
CORNER_BRACKET_C
DOT

sh_size
DIV

sizeof
BRACKET_O
STRUCT

kernel_param
BRACKET_C
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C

goto

arch_cleanup
SEMICOLON

err
OP_ASSIGNMENT

mod_sysfs_setup
BRACKET_O

mod
COMMA
BRACKET_O
STRUCT

kernel_param
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

setupindex
CORNER_BRACKET_C
DOT

sh_addr
COMMA

sechdrs
CORNER_BRACKET_O

setupindex
CORNER_BRACKET_C
DOT

sh_size
DIV

sizeof
BRACKET_O
STRUCT

kernel_param
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
LESS
NUMBER
BRACKET_C

goto

arch_cleanup
SEMICOLON

add_sect_attrs
BRACKET_O

mod
COMMA

hdr
MINUS
GREATER

e_shnum
COMMA

secstrings
COMMA

sechdrs
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

unwind_info
OP_ASSIGNMENT

unwind_add_table
BRACKET_O

mod
COMMA
BRACKET_O

void
MULT
BRACKET_C

sechdrs
CORNER_BRACKET_O

unwindex
CORNER_BRACKET_C
DOT

sh_addr
COMMA

sechdrs
CORNER_BRACKET_O

unwindex
CORNER_BRACKET_C
DOT

sh_size
BRACKET_C
SEMICOLON

vfree
BRACKET_O

hdr
BRACKET_C
SEMICOLON

return

mod
SEMICOLON

arch_cleanup
COLON

module_arch_cleanup
BRACKET_O

mod
BRACKET_C
SEMICOLON

cleanup
COLON

module_unload_free
BRACKET_O

mod
BRACKET_C
SEMICOLON

module_free
BRACKET_O

mod
COMMA

mod
MINUS
GREATER

module_init
BRACKET_C
SEMICOLON

free_core
COLON

module_free
BRACKET_O

mod
COMMA

mod
MINUS
GREATER

module_core
BRACKET_C
SEMICOLON

free_percpu
COLON
IF
BRACKET_O

percpu
BRACKET_C

percpu_modfree
BRACKET_O

percpu
BRACKET_C
SEMICOLON

free_mod
COLON

kfree
BRACKET_O

args
BRACKET_C
SEMICOLON

free_hdr
COLON

vfree
BRACKET_O

hdr
BRACKET_C
SEMICOLON

return

ERR_PTR
BRACKET_O

err
BRACKET_C
SEMICOLON

truncated
COLON

printk
BRACKET_O

KERN_ERR
STRING
COMMA

len
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT
MINUS

ENOEXEC
SEMICOLON

goto

free_hdr
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__link_module
BRACKET_O

void
MULT

_mod
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
OP_ASSIGNMENT

_mod
SEMICOLON

list_add
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

list
COMMA
AMPERSANT

modules
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_init_module
BRACKET_O

void

__user
MULT

umod
COMMA
TYPE_UNSIGNED
TYPE_LONG

len
COMMA
CONST
TYPE_CHAR

__user
MULT

uargs
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SYS_MODULE
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

mutex_lock_interruptible
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

return
MINUS

EINTR
SEMICOLON

mod
OP_ASSIGNMENT

load_module
BRACKET_O

umod
COMMA

len
COMMA

uargs
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

mod
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

return

PTR_ERR
BRACKET_O

mod
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

stop_machine_run
BRACKET_O

__link_module
COMMA

mod
COMMA

NR_CPUS
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

blocking_notifier_call_chain
BRACKET_O
AMPERSANT

module_notify_list
COMMA

MODULE_STATE_COMING
COMMA

mod
BRACKET_C
SEMICOLON
IF
BRACKET_O

mod
MINUS
GREATER

init
NOT_EQ

NULL
BRACKET_C

ret
OP_ASSIGNMENT

mod
MINUS
GREATER

init
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

mod
MINUS
GREATER

state
OP_ASSIGNMENT

MODULE_STATE_GOING
SEMICOLON

synchronize_sched
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

mod
MINUS
GREATER

unsafe
BRACKET_C

printk
BRACKET_O

KERN_ERR
STRING
COMMA

mod
MINUS
GREATER

name
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O

module_put
BRACKET_O

mod
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

free_module
BRACKET_O

mod
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

mutex_lock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

state
OP_ASSIGNMENT

MODULE_STATE_LIVE
SEMICOLON

module_put
BRACKET_O

mod
BRACKET_C
SEMICOLON

unwind_remove_table
BRACKET_O

mod
MINUS
GREATER

unwind_info
COMMA
NUMBER
BRACKET_C
SEMICOLON

module_free
BRACKET_O

mod
COMMA

mod
MINUS
GREATER

module_init
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

module_init
OP_ASSIGNMENT

NULL
SEMICOLON

mod
MINUS
GREATER

init_size
OP_ASSIGNMENT
NUMBER
SEMICOLON

mod
MINUS
GREATER

init_text_size
OP_ASSIGNMENT
NUMBER
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

within
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
COMMA

void
MULT

start
COMMA
TYPE_UNSIGNED
TYPE_LONG

size
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O
BRACKET_O

void
MULT
BRACKET_C

addr
GR_EQ

start
AND
BRACKET_O

void
MULT
BRACKET_C

addr
LESS

start
PLUS

size
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_KALLSYMS

static

inline
TYPE_INT

is_arm_mapping_symbol
BRACKET_O
CONST
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

return

str
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
AND

strchr
BRACKET_O
STRING
COMMA

str
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
AND
BRACKET_O

str
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
OR

str
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
CONST
TYPE_CHAR
MULT

get_ksymbol
BRACKET_O
STRUCT

module
MULT

mod
COMMA
TYPE_UNSIGNED
TYPE_LONG

addr
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

size
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

offset
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
COMMA

best
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

nextval
SEMICOLON
IF
BRACKET_O

within
BRACKET_O

addr
COMMA

mod
MINUS
GREATER

module_init
COMMA

mod
MINUS
GREATER

init_size
BRACKET_C
BRACKET_C

nextval
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

mod
MINUS
GREATER

module_init
PLUS

mod
MINUS
GREATER

init_text_size
SEMICOLON
ELSE

nextval
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

mod
MINUS
GREATER

module_core
PLUS

mod
MINUS
GREATER

core_text_size
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

mod
MINUS
GREATER

num_symtab
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_shndx
EQ

SHN_UNDEF
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_value
LE_EQ

addr
AND

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_value
GREATER

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

best
CORNER_BRACKET_C
DOT

st_value
AND
MULT
BRACKET_O

mod
MINUS
GREATER

strtab
PLUS

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_name
BRACKET_C
NOT_EQ
QUOTED_CHAR
AND
NOT

is_arm_mapping_symbol
BRACKET_O

mod
MINUS
GREATER

strtab
PLUS

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_name
BRACKET_C
BRACKET_C

best
OP_ASSIGNMENT

i
SEMICOLON
IF
BRACKET_O

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_value
GREATER

addr
AND

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_value
LESS

nextval
AND
MULT
BRACKET_O

mod
MINUS
GREATER

strtab
PLUS

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_name
BRACKET_C
NOT_EQ
QUOTED_CHAR
AND
NOT

is_arm_mapping_symbol
BRACKET_O

mod
MINUS
GREATER

strtab
PLUS

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_name
BRACKET_C
BRACKET_C

nextval
OP_ASSIGNMENT

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_value
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

best
BRACKET_C

return

NULL
SEMICOLON
IF
BRACKET_O

size
BRACKET_C
MULT

size
OP_ASSIGNMENT

nextval
MINUS

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

best
CORNER_BRACKET_C
DOT

st_value
SEMICOLON
IF
BRACKET_O

offset
BRACKET_C
MULT

offset
OP_ASSIGNMENT

addr
MINUS

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

best
CORNER_BRACKET_C
DOT

st_value
SEMICOLON

return

mod
MINUS
GREATER

strtab
PLUS

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

best
CORNER_BRACKET_C
DOT

st_name
SEMICOLON
CURLY_BRACKET_C
CONST
TYPE_CHAR
MULT

module_address_lookup
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

size
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

offset
COMMA
TYPE_CHAR
MULT
MULT

modname
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON

list_for_each_entry
BRACKET_O

mod
COMMA
AMPERSANT

modules
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

within
BRACKET_O

addr
COMMA

mod
MINUS
GREATER

module_init
COMMA

mod
MINUS
GREATER

init_size
BRACKET_C
OR

within
BRACKET_O

addr
COMMA

mod
MINUS
GREATER

module_core
COMMA

mod
MINUS
GREATER

core_size
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

modname
BRACKET_C
MULT

modname
OP_ASSIGNMENT

mod
MINUS
GREATER

name
SEMICOLON

return

get_ksymbol
BRACKET_O

mod
COMMA

addr
COMMA

size
COMMA

offset
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

NULL
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

lookup_module_symbol_name
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
COMMA
TYPE_CHAR
MULT

symname
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

mod
COMMA
AMPERSANT

modules
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

within
BRACKET_O

addr
COMMA

mod
MINUS
GREATER

module_init
COMMA

mod
MINUS
GREATER

init_size
BRACKET_C
OR

within
BRACKET_O

addr
COMMA

mod
MINUS
GREATER

module_core
COMMA

mod
MINUS
GREATER

core_size
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
CONST
TYPE_CHAR
MULT

sym
SEMICOLON

sym
OP_ASSIGNMENT

get_ksymbol
BRACKET_O

mod
COMMA

addr
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sym
BRACKET_C

goto

out
SEMICOLON

strlcpy
BRACKET_O

symname
COMMA

sym
COMMA

KSYM_NAME_LEN
PLUS
NUMBER
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

out
COLON

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

return
MINUS

ERANGE
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

lookup_module_symbol_attrs
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

size
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

offset
COMMA
TYPE_CHAR
MULT

modname
COMMA
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

mod
COMMA
AMPERSANT

modules
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

within
BRACKET_O

addr
COMMA

mod
MINUS
GREATER

module_init
COMMA

mod
MINUS
GREATER

init_size
BRACKET_C
OR

within
BRACKET_O

addr
COMMA

mod
MINUS
GREATER

module_core
COMMA

mod
MINUS
GREATER

core_size
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
CONST
TYPE_CHAR
MULT

sym
SEMICOLON

sym
OP_ASSIGNMENT

get_ksymbol
BRACKET_O

mod
COMMA

addr
COMMA

size
COMMA

offset
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sym
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

modname
BRACKET_C

strlcpy
BRACKET_O

modname
COMMA

mod
MINUS
GREATER

name
COMMA

MODULE_NAME_LEN
PLUS
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

name
BRACKET_C

strlcpy
BRACKET_O

name
COMMA

sym
COMMA

KSYM_NAME_LEN
PLUS
NUMBER
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

out
COLON

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

return
MINUS

ERANGE
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_KDB
PP_INCLUDE
STRUCT

list_head
MULT

kdb_modules
OP_ASSIGNMENT
AMPERSANT

modules
SEMICOLON
PP_ENDIF
TYPE_INT

module_get_kallsym
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

symnum
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

value
COMMA
TYPE_CHAR
MULT

type
COMMA
TYPE_CHAR
MULT

name
COMMA
TYPE_CHAR
MULT

module_name
COMMA
TYPE_INT
MULT

exported
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON
PP_IFDEF

CONFIG_KDB
TYPE_INT

get_lock
OP_ASSIGNMENT
NOT

KDB_IS_RUNNING
BRACKET_O
BRACKET_C
SEMICOLON
PP_ELSE
PP_DEFINE

get_lock
NUMBER
PP_ENDIF
IF
BRACKET_O

get_lock
BRACKET_C

mutex_lock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

mod
COMMA
AMPERSANT

modules
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

symnum
LESS

mod
MINUS
GREATER

num_symtab
BRACKET_C
CURLY_BRACKET_O
MULT

value
OP_ASSIGNMENT

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

symnum
CORNER_BRACKET_C
DOT

st_value
SEMICOLON
MULT

type
OP_ASSIGNMENT

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

symnum
CORNER_BRACKET_C
DOT

st_info
SEMICOLON

strlcpy
BRACKET_O

name
COMMA

mod
MINUS
GREATER

strtab
PLUS

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

symnum
CORNER_BRACKET_C
DOT

st_name
COMMA

KSYM_NAME_LEN
PLUS
NUMBER
BRACKET_C
SEMICOLON

strlcpy
BRACKET_O

module_name
COMMA

mod
MINUS
GREATER

name
COMMA

MODULE_NAME_LEN
PLUS
NUMBER
BRACKET_C
SEMICOLON
MULT

exported
OP_ASSIGNMENT

is_exported
BRACKET_O

name
COMMA

mod
BRACKET_C
SEMICOLON
IF
BRACKET_O

get_lock
BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

symnum
ASSIGN_MINUS

mod
MINUS
GREATER

num_symtab
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

get_lock
BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

return
MINUS

ERANGE
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG

mod_find_symname
BRACKET_O
STRUCT

module
MULT

mod
COMMA
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

mod
MINUS
GREATER

num_symtab
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

strcmp
BRACKET_O

name
COMMA

mod
MINUS
GREATER

strtab
PLUS

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_name
BRACKET_C
EQ
NUMBER
AND

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_info
NOT_EQ
QUOTED_CHAR
BRACKET_C

return

mod
MINUS
GREATER

symtab
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

st_value
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

module_kallsyms_lookup_name
BRACKET_O
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON
TYPE_CHAR
MULT

colon
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O

colon
OP_ASSIGNMENT

strchr
BRACKET_O

name
COMMA
QUOTED_CHAR
BRACKET_C
BRACKET_C
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O
MULT

colon
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O
BRACKET_O

mod
OP_ASSIGNMENT

find_module
BRACKET_O

name
BRACKET_C
BRACKET_C
NOT_EQ

NULL
BRACKET_C

ret
OP_ASSIGNMENT

mod_find_symname
BRACKET_O

mod
COMMA

colon
PLUS
NUMBER
BRACKET_C
SEMICOLON
MULT

colon
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

list_for_each_entry
BRACKET_O

mod
COMMA
AMPERSANT

modules
COMMA

list
BRACKET_C
IF
BRACKET_O
BRACKET_O

ret
OP_ASSIGNMENT

mod_find_symname
BRACKET_O

mod
COMMA

name
BRACKET_C
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static

void
MULT

m_start
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

loff_t
MULT

pos
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head
MULT

i
SEMICOLON

loff_t

n
OP_ASSIGNMENT
NUMBER
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON

list_for_each
BRACKET_O

i
COMMA
AMPERSANT

modules
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

n
PLUS
PLUS
EQ
MULT

pos
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

i
EQ
AMPERSANT

modules
BRACKET_C

return

NULL
SEMICOLON

return

i
SEMICOLON
CURLY_BRACKET_C

static

void
MULT

m_next
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

p
COMMA

loff_t
MULT

pos
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head
MULT

i
OP_ASSIGNMENT

p
SEMICOLON
BRACKET_O
MULT

pos
BRACKET_C
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

i
MINUS
GREATER

next
EQ
AMPERSANT

modules
BRACKET_C

return

NULL
SEMICOLON

return

i
MINUS
GREATER

next
SEMICOLON
CURLY_BRACKET_C

static

void

m_stop
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

p
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

module_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_CHAR
MULT

taint_flags
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

taints
COMMA
TYPE_CHAR
MULT

buf
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

bx
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

taints
BRACKET_C
CURLY_BRACKET_O

buf
CORNER_BRACKET_O

bx
PLUS
PLUS
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

taints
AMPERSANT

TAINT_PROPRIETARY_MODULE
BRACKET_C

buf
CORNER_BRACKET_O

bx
PLUS
PLUS
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

taints
AMPERSANT

TAINT_FORCED_MODULE
BRACKET_C

buf
CORNER_BRACKET_O

bx
PLUS
PLUS
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

buf
CORNER_BRACKET_O

bx
PLUS
PLUS
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
CURLY_BRACKET_C

buf
CORNER_BRACKET_O

bx
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

return

buf
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

m_show
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

p
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
OP_ASSIGNMENT

list_entry
BRACKET_O

p
COMMA
STRUCT

module
COMMA

list
BRACKET_C
SEMICOLON
TYPE_CHAR

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

mod
MINUS
GREATER

name
COMMA

mod
MINUS
GREATER

init_size
PLUS

mod
MINUS
GREATER

core_size
BRACKET_C
SEMICOLON

print_unload_info
BRACKET_O

m
COMMA

mod
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

mod
MINUS
GREATER

state
EQ

MODULE_STATE_GOING
QUESTION_MARK
STRING
COLON

mod
MINUS
GREATER

state
EQ

MODULE_STATE_COMING
QUESTION_MARK
STRING
COLON
STRING
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

mod
MINUS
GREATER

module_core
BRACKET_C
SEMICOLON
IF
BRACKET_O

mod
MINUS
GREATER

taints
BRACKET_C

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

taint_flags
BRACKET_O

mod
MINUS
GREATER

taints
COMMA

buf
BRACKET_C
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CONST
STRUCT

seq_operations

modules_op
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

start
OP_ASSIGNMENT

m_start
COMMA
DOT

next
OP_ASSIGNMENT

m_next
COMMA
DOT

stop
OP_ASSIGNMENT

m_stop
COMMA
DOT

show
OP_ASSIGNMENT

m_show
CURLY_BRACKET_C
SEMICOLON
CONST
STRUCT

exception_table_entry
MULT

search_module_extables
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
CONST
STRUCT

exception_table_entry
MULT

e
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

module
MULT

mod
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

modlist_lock
COMMA

flags
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

mod
COMMA
AMPERSANT

modules
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

mod
MINUS
GREATER

num_exentries
EQ
NUMBER
BRACKET_C
CONTINUE
SEMICOLON

e
OP_ASSIGNMENT

search_extable
BRACKET_O

mod
MINUS
GREATER

extable
COMMA

mod
MINUS
GREATER

extable
PLUS

mod
MINUS
GREATER

num_exentries
MINUS
NUMBER
COMMA

addr
BRACKET_C
SEMICOLON
IF
BRACKET_O

e
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

modlist_lock
COMMA

flags
BRACKET_C
SEMICOLON

return

e
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

is_module_address
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

module
MULT

mod
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

modlist_lock
COMMA

flags
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

mod
COMMA
AMPERSANT

modules
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

within
BRACKET_O

addr
COMMA

mod
MINUS
GREATER

module_core
COMMA

mod
MINUS
GREATER

core_size
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

modlist_lock
COMMA

flags
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

modlist_lock
COMMA

flags
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
STRUCT

module
MULT

__module_text_address
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON

list_for_each_entry
BRACKET_O

mod
COMMA
AMPERSANT

modules
COMMA

list
BRACKET_C
IF
BRACKET_O

within
BRACKET_O

addr
COMMA

mod
MINUS
GREATER

module_init
COMMA

mod
MINUS
GREATER

init_text_size
BRACKET_C
OR

within
BRACKET_O

addr
COMMA

mod
MINUS
GREATER

module_core
COMMA

mod
MINUS
GREATER

core_text_size
BRACKET_C
BRACKET_C

return

mod
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C
STRUCT

module
MULT

module_text_address
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

modlist_lock
COMMA

flags
BRACKET_C
SEMICOLON

mod
OP_ASSIGNMENT

__module_text_address
BRACKET_O

addr
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

modlist_lock
COMMA

flags
BRACKET_C
SEMICOLON

return

mod
SEMICOLON
CURLY_BRACKET_C

void

print_modules
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

module
MULT

mod
SEMICOLON
TYPE_CHAR

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

mod
COMMA
AMPERSANT

modules
COMMA

list
BRACKET_C

printk
BRACKET_O
STRING
COMMA

mod
MINUS
GREATER

name
COMMA

taint_flags
BRACKET_O

mod
MINUS
GREATER

taints
COMMA

buf
BRACKET_C
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_SYSFS

static
TYPE_CHAR
MULT

make_driver_name
BRACKET_O
STRUCT

device_driver
MULT

drv
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

driver_name
SEMICOLON

driver_name
OP_ASSIGNMENT

kmalloc
BRACKET_O

strlen
BRACKET_O

drv
MINUS
GREATER

name
BRACKET_C
PLUS

strlen
BRACKET_O

drv
MINUS
GREATER

bus
MINUS
GREATER

name
BRACKET_C
PLUS
NUMBER
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

driver_name
BRACKET_C

return

NULL
SEMICOLON

sprintf
BRACKET_O

driver_name
COMMA
STRING
COMMA

drv
MINUS
GREATER

bus
MINUS
GREATER

name
COMMA

drv
MINUS
GREATER

name
BRACKET_C
SEMICOLON

return

driver_name
SEMICOLON
CURLY_BRACKET_C

static

void

module_create_drivers_dir
BRACKET_O
STRUCT

module_kobject
MULT

mk
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

mk
OR

mk
MINUS
GREATER

drivers_dir
BRACKET_C

return
SEMICOLON

mk
MINUS
GREATER

drivers_dir
OP_ASSIGNMENT

kobject_add_dir
BRACKET_O
AMPERSANT

mk
MINUS
GREATER

kobj
COMMA
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

module_add_driver
BRACKET_O
STRUCT

module
MULT

mod
COMMA
STRUCT

device_driver
MULT

drv
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

driver_name
SEMICOLON
TYPE_INT

no_warn
SEMICOLON
STRUCT

module_kobject
MULT

mk
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O
NOT

drv
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

mod
BRACKET_C

mk
OP_ASSIGNMENT
AMPERSANT

mod
MINUS
GREATER

mkobj
SEMICOLON
ELSE
IF
BRACKET_O

drv
MINUS
GREATER

mod_name
BRACKET_C
CURLY_BRACKET_O
STRUCT

kobject
MULT

mkobj
SEMICOLON

mkobj
OP_ASSIGNMENT

kset_find_obj
BRACKET_O
AMPERSANT

module_subsys
COMMA

drv
MINUS
GREATER

mod_name
BRACKET_C
SEMICOLON
IF
BRACKET_O

mkobj
BRACKET_C
CURLY_BRACKET_O

mk
OP_ASSIGNMENT

container_of
BRACKET_O

mkobj
COMMA
STRUCT

module_kobject
COMMA

kobj
BRACKET_C
SEMICOLON

drv
MINUS
GREATER

mkobj
OP_ASSIGNMENT

mk
SEMICOLON

kobject_put
BRACKET_O

mkobj
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

mk
BRACKET_C

return
SEMICOLON

no_warn
OP_ASSIGNMENT

sysfs_create_link
BRACKET_O
AMPERSANT

drv
MINUS
GREATER

kobj
COMMA
AMPERSANT

mk
MINUS
GREATER

kobj
COMMA
STRING
BRACKET_C
SEMICOLON

driver_name
OP_ASSIGNMENT

make_driver_name
BRACKET_O

drv
BRACKET_C
SEMICOLON
IF
BRACKET_O

driver_name
BRACKET_C
CURLY_BRACKET_O

module_create_drivers_dir
BRACKET_O

mk
BRACKET_C
SEMICOLON

no_warn
OP_ASSIGNMENT

sysfs_create_link
BRACKET_O

mk
MINUS
GREATER

drivers_dir
COMMA
AMPERSANT

drv
MINUS
GREATER

kobj
COMMA

driver_name
BRACKET_C
SEMICOLON

kfree
BRACKET_O

driver_name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

module_add_driver
BRACKET_C
SEMICOLON

void

module_remove_driver
BRACKET_O
STRUCT

device_driver
MULT

drv
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_kobject
MULT

mk
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_CHAR
MULT

driver_name
SEMICOLON
IF
BRACKET_O
NOT

drv
BRACKET_C

return
SEMICOLON

sysfs_remove_link
BRACKET_O
AMPERSANT

drv
MINUS
GREATER

kobj
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

drv
MINUS
GREATER

owner
BRACKET_C

mk
OP_ASSIGNMENT
AMPERSANT

drv
MINUS
GREATER

owner
MINUS
GREATER

mkobj
SEMICOLON
ELSE
IF
BRACKET_O

drv
MINUS
GREATER

mkobj
BRACKET_C

mk
OP_ASSIGNMENT

drv
MINUS
GREATER

mkobj
SEMICOLON
IF
BRACKET_O

mk
AND

mk
MINUS
GREATER

drivers_dir
BRACKET_C
CURLY_BRACKET_O

driver_name
OP_ASSIGNMENT

make_driver_name
BRACKET_O

drv
BRACKET_C
SEMICOLON
IF
BRACKET_O

driver_name
BRACKET_C
CURLY_BRACKET_O

sysfs_remove_link
BRACKET_O

mk
MINUS
GREATER

drivers_dir
COMMA

driver_name
BRACKET_C
SEMICOLON

kfree
BRACKET_O

driver_name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

module_remove_driver
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_MODVERSIONS

void

struct_module
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O

return
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

struct_module
BRACKET_C
SEMICOLON
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_IFDEF

CONFIG_DEBUG_MUTEXES
PP_INCLUDE
PP_INCLUDE
PP_ELSE
PP_INCLUDE
PP_INCLUDE
PP_ENDIF

void

__mutex_init
BRACKET_O
STRUCT

mutex
MULT

lock
COMMA
CONST
TYPE_CHAR
MULT

name
COMMA
STRUCT

lock_class_key
MULT

key
BRACKET_C
CURLY_BRACKET_O

atomic_set
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_list
BRACKET_C
SEMICOLON

debug_mutex_init
BRACKET_O

lock
COMMA

name
COMMA

key
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__mutex_init
BRACKET_C
SEMICOLON

static

void

fastcall

noinline

__sched

__mutex_lock_slowpath
BRACKET_O

atomic_t
MULT

lock_count
BRACKET_C
SEMICOLON

void

inline

fastcall

__sched

mutex_lock
BRACKET_O
STRUCT

mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

__mutex_fastpath_lock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

count
COMMA

__mutex_lock_slowpath
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

mutex_lock
BRACKET_C
SEMICOLON

static

void

fastcall

noinline

__sched

__mutex_unlock_slowpath
BRACKET_O

atomic_t
MULT

lock_count
BRACKET_C
SEMICOLON

void

fastcall

__sched

mutex_unlock
BRACKET_O
STRUCT

mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

__mutex_fastpath_unlock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

count
COMMA

__mutex_unlock_slowpath
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

mutex_unlock
BRACKET_C
SEMICOLON

static

inline
TYPE_INT

__sched

__mutex_lock_common
BRACKET_O
STRUCT

mutex
MULT

lock
COMMA
TYPE_LONG

state
COMMA
TYPE_UNSIGNED
TYPE_INT

subclass
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

task
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

mutex_waiter

waiter
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

old_val
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_mutex
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
COMMA

flags
BRACKET_C
SEMICOLON

debug_mutex_lock_common
BRACKET_O

lock
COMMA
AMPERSANT

waiter
BRACKET_C
SEMICOLON

mutex_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA

subclass
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

debug_mutex_add_waiter
BRACKET_O

lock
COMMA
AMPERSANT

waiter
COMMA

task_thread_info
BRACKET_O

task
BRACKET_C
BRACKET_C
SEMICOLON

list_add_tail
BRACKET_O
AMPERSANT

waiter
DOT

list
COMMA
AMPERSANT

lock
MINUS
GREATER

wait_list
BRACKET_C
SEMICOLON

waiter
DOT

task
OP_ASSIGNMENT

task
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

old_val
OP_ASSIGNMENT

atomic_xchg
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

count
COMMA
MINUS
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

old_val
EQ
NUMBER
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

state
EQ

TASK_INTERRUPTIBLE
AND

signal_pending
BRACKET_O

task
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

mutex_remove_waiter
BRACKET_O

lock
COMMA
AMPERSANT

waiter
COMMA

task_thread_info
BRACKET_O

task
BRACKET_C
BRACKET_C
SEMICOLON

mutex_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

spin_unlock_mutex
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
COMMA

flags
BRACKET_C
SEMICOLON

debug_mutex_free_waiter
BRACKET_O
AMPERSANT

waiter
BRACKET_C
SEMICOLON

return
MINUS

EINTR
SEMICOLON
CURLY_BRACKET_C

__set_task_state
BRACKET_O

task
COMMA

state
BRACKET_C
SEMICOLON

spin_unlock_mutex
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
COMMA

flags
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock_mutex
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

mutex_remove_waiter
BRACKET_O

lock
COMMA
AMPERSANT

waiter
COMMA

task_thread_info
BRACKET_O

task
BRACKET_C
BRACKET_C
SEMICOLON

debug_mutex_set_owner
BRACKET_O

lock
COMMA

task_thread_info
BRACKET_O

task
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_list
BRACKET_C
BRACKET_C
BRACKET_C

atomic_set
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

spin_unlock_mutex
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
COMMA

flags
BRACKET_C
SEMICOLON

debug_mutex_free_waiter
BRACKET_O
AMPERSANT

waiter
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

fastcall

noinline

__sched

__mutex_lock_slowpath
BRACKET_O

atomic_t
MULT

lock_count
BRACKET_C
CURLY_BRACKET_O
STRUCT

mutex
MULT

lock
OP_ASSIGNMENT

container_of
BRACKET_O

lock_count
COMMA
STRUCT

mutex
COMMA

count
BRACKET_C
SEMICOLON

__mutex_lock_common
BRACKET_O

lock
COMMA

TASK_UNINTERRUPTIBLE
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_DEBUG_LOCK_ALLOC

void

__sched

mutex_lock_nested
BRACKET_O
STRUCT

mutex
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_INT

subclass
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

__mutex_lock_common
BRACKET_O

lock
COMMA

TASK_UNINTERRUPTIBLE
COMMA

subclass
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

mutex_lock_nested
BRACKET_C
SEMICOLON
TYPE_INT

__sched

mutex_lock_interruptible_nested
BRACKET_O
STRUCT

mutex
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_INT

subclass
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

return

__mutex_lock_common
BRACKET_O

lock
COMMA

TASK_INTERRUPTIBLE
COMMA

subclass
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

mutex_lock_interruptible_nested
BRACKET_C
SEMICOLON
PP_ENDIF

static

fastcall

inline

void

__mutex_unlock_common_slowpath
BRACKET_O

atomic_t
MULT

lock_count
COMMA
TYPE_INT

nested
BRACKET_C
CURLY_BRACKET_O
STRUCT

mutex
MULT

lock
OP_ASSIGNMENT

container_of
BRACKET_O

lock_count
COMMA
STRUCT

mutex
COMMA

count
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_mutex
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
COMMA

flags
BRACKET_C
SEMICOLON

mutex_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA

nested
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

debug_mutex_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

__mutex_slowpath_needs_to_unlock
BRACKET_O
BRACKET_C
BRACKET_C

atomic_set
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_list
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

mutex_waiter
MULT

waiter
OP_ASSIGNMENT

list_entry
BRACKET_O

lock
MINUS
GREATER

wait_list
DOT

next
COMMA
STRUCT

mutex_waiter
COMMA

list
BRACKET_C
SEMICOLON

debug_mutex_wake_waiter
BRACKET_O

lock
COMMA

waiter
BRACKET_C
SEMICOLON

wake_up_process
BRACKET_O

waiter
MINUS
GREATER

task
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

debug_mutex_clear_owner
BRACKET_O

lock
BRACKET_C
SEMICOLON

spin_unlock_mutex
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

fastcall

noinline

void

__mutex_unlock_slowpath
BRACKET_O

atomic_t
MULT

lock_count
BRACKET_C
CURLY_BRACKET_O

__mutex_unlock_common_slowpath
BRACKET_O

lock_count
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

fastcall

noinline

__sched

__mutex_lock_interruptible_slowpath
BRACKET_O

atomic_t
MULT

lock_count
BRACKET_C
SEMICOLON
TYPE_INT

fastcall

__sched

mutex_lock_interruptible
BRACKET_O
STRUCT

mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

return

__mutex_fastpath_lock_retval
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

count
COMMA

__mutex_lock_interruptible_slowpath
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

mutex_lock_interruptible
BRACKET_C
SEMICOLON

static
TYPE_INT

fastcall

noinline

__sched

__mutex_lock_interruptible_slowpath
BRACKET_O

atomic_t
MULT

lock_count
BRACKET_C
CURLY_BRACKET_O
STRUCT

mutex
MULT

lock
OP_ASSIGNMENT

container_of
BRACKET_O

lock_count
COMMA
STRUCT

mutex
COMMA

count
BRACKET_C
SEMICOLON

return

__mutex_lock_common
BRACKET_O

lock
COMMA

TASK_INTERRUPTIBLE
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

__mutex_trylock_slowpath
BRACKET_O

atomic_t
MULT

lock_count
BRACKET_C
CURLY_BRACKET_O
STRUCT

mutex
MULT

lock
OP_ASSIGNMENT

container_of
BRACKET_O

lock_count
COMMA
STRUCT

mutex
COMMA

count
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

prev
SEMICOLON

spin_lock_mutex
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
COMMA

flags
BRACKET_C
SEMICOLON

prev
OP_ASSIGNMENT

atomic_xchg
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

count
COMMA
MINUS
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

prev
EQ
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

debug_mutex_set_owner
BRACKET_O

lock
COMMA

current_thread_info
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

mutex_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

likely
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_list
BRACKET_C
BRACKET_C
BRACKET_C

atomic_set
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

spin_unlock_mutex
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
COMMA

flags
BRACKET_C
SEMICOLON

return

prev
EQ
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

fastcall

__sched

mutex_trylock
BRACKET_O
STRUCT

mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

return

__mutex_fastpath_trylock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

count
COMMA

__mutex_trylock_slowpath
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

mutex_trylock
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

void

debug_mutex_set_owner
BRACKET_O
STRUCT

mutex
MULT

lock
COMMA
STRUCT

thread_info
MULT

new_owner
BRACKET_C
CURLY_BRACKET_O

lock
MINUS
GREATER

owner
OP_ASSIGNMENT

new_owner
SEMICOLON
CURLY_BRACKET_C

void

debug_mutex_lock_common
BRACKET_O
STRUCT

mutex
MULT

lock
COMMA
STRUCT

mutex_waiter
MULT

waiter
BRACKET_C
CURLY_BRACKET_O

memset
BRACKET_O

waiter
COMMA

MUTEX_DEBUG_INIT
COMMA

sizeof
BRACKET_O
MULT

waiter
BRACKET_C
BRACKET_C
SEMICOLON

waiter
MINUS
GREATER

magic
OP_ASSIGNMENT

waiter
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_mutex_wake_waiter
BRACKET_O
STRUCT

mutex
MULT

lock
COMMA
STRUCT

mutex_waiter
MULT

waiter
BRACKET_C
CURLY_BRACKET_O

SMP_DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

spin_is_locked
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
BRACKET_C
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_list
BRACKET_C
BRACKET_C
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O

waiter
MINUS
GREATER

magic
NOT_EQ

waiter
BRACKET_C
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_mutex_free_waiter
BRACKET_O
STRUCT

mutex_waiter
MULT

waiter
BRACKET_C
CURLY_BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list
BRACKET_C
BRACKET_C
SEMICOLON

memset
BRACKET_O

waiter
COMMA

MUTEX_DEBUG_FREE
COMMA

sizeof
BRACKET_O
MULT

waiter
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_mutex_add_waiter
BRACKET_O
STRUCT

mutex
MULT

lock
COMMA
STRUCT

mutex_waiter
MULT

waiter
COMMA
STRUCT

thread_info
MULT

ti
BRACKET_C
CURLY_BRACKET_O

SMP_DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

spin_is_locked
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
BRACKET_C
SEMICOLON

ti
MINUS
GREATER

task
MINUS
GREATER

blocked_on
OP_ASSIGNMENT

waiter
SEMICOLON

waiter
MINUS
GREATER

lock
OP_ASSIGNMENT

lock
SEMICOLON
CURLY_BRACKET_C

void

mutex_remove_waiter
BRACKET_O
STRUCT

mutex
MULT

lock
COMMA
STRUCT

mutex_waiter
MULT

waiter
COMMA
STRUCT

thread_info
MULT

ti
BRACKET_C
CURLY_BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list
BRACKET_C
BRACKET_C
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O

waiter
MINUS
GREATER

task
NOT_EQ

ti
MINUS
GREATER

task
BRACKET_C
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O

ti
MINUS
GREATER

task
MINUS
GREATER

blocked_on
NOT_EQ

waiter
BRACKET_C
SEMICOLON

ti
MINUS
GREATER

task
MINUS
GREATER

blocked_on
OP_ASSIGNMENT

NULL
SEMICOLON

list_del_init
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list
BRACKET_C
SEMICOLON

waiter
MINUS
GREATER

task
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

void

debug_mutex_unlock
BRACKET_O
STRUCT

mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O
NOT

debug_locks
BRACKET_C
BRACKET_C

return
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O

lock
MINUS
GREATER

owner
NOT_EQ

current_thread_info
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O

lock
MINUS
GREATER

magic
NOT_EQ

lock
BRACKET_C
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O
NOT

lock
MINUS
GREATER

wait_list
DOT

prev
AND
NOT

lock
MINUS
GREATER

wait_list
DOT

next
BRACKET_C
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O

lock
MINUS
GREATER

owner
NOT_EQ

current_thread_info
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_mutex_init
BRACKET_O
STRUCT

mutex
MULT

lock
COMMA
CONST
TYPE_CHAR
MULT

name
COMMA
STRUCT

lock_class_key
MULT

key
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_DEBUG_LOCK_ALLOC

debug_check_no_locks_freed
BRACKET_O
BRACKET_O

void
MULT
BRACKET_C

lock
COMMA

sizeof
BRACKET_O
MULT

lock
BRACKET_C
BRACKET_C
SEMICOLON

lockdep_init_map
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA

name
COMMA

key
COMMA
NUMBER
BRACKET_C
SEMICOLON
PP_ENDIF

lock
MINUS
GREATER

owner
OP_ASSIGNMENT

NULL
SEMICOLON

lock
MINUS
GREATER

magic
OP_ASSIGNMENT

lock
SEMICOLON
CURLY_BRACKET_C

void

fastcall

mutex_destroy
BRACKET_O
STRUCT

mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O

mutex_is_locked
BRACKET_O

lock
BRACKET_C
BRACKET_C
SEMICOLON

lock
MINUS
GREATER

magic
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

mutex_destroy
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
STRUCT

nsproxy

init_nsproxy
OP_ASSIGNMENT

INIT_NSPROXY
BRACKET_O

init_nsproxy
BRACKET_C
SEMICOLON

static

inline

void

get_nsproxy
BRACKET_O
STRUCT

nsproxy
MULT

ns
BRACKET_C
CURLY_BRACKET_O

atomic_inc
BRACKET_O
AMPERSANT

ns
MINUS
GREATER

count
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

get_task_namespaces
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

nsproxy
MULT

ns
OP_ASSIGNMENT

tsk
MINUS
GREATER

nsproxy
SEMICOLON
IF
BRACKET_O

ns
BRACKET_C
CURLY_BRACKET_O

get_nsproxy
BRACKET_O

ns
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline
STRUCT

nsproxy
MULT

clone_nsproxy
BRACKET_O
STRUCT

nsproxy
MULT

orig
BRACKET_C
CURLY_BRACKET_O
STRUCT

nsproxy
MULT

ns
SEMICOLON

ns
OP_ASSIGNMENT

kmemdup
BRACKET_O

orig
COMMA

sizeof
BRACKET_O
STRUCT

nsproxy
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

ns
BRACKET_C

atomic_set
BRACKET_O
AMPERSANT

ns
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

return

ns
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

nsproxy
MULT

create_new_namespaces
BRACKET_O
TYPE_INT

flags
COMMA
STRUCT

task_struct
MULT

tsk
COMMA
STRUCT

fs_struct
MULT

new_fs
BRACKET_C
CURLY_BRACKET_O
STRUCT

nsproxy
MULT

new_nsp
SEMICOLON

new_nsp
OP_ASSIGNMENT

clone_nsproxy
BRACKET_O

tsk
MINUS
GREATER

nsproxy
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

new_nsp
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ENOMEM
BRACKET_C
SEMICOLON

new_nsp
MINUS
GREATER

mnt_ns
OP_ASSIGNMENT

copy_mnt_ns
BRACKET_O

flags
COMMA

tsk
MINUS
GREATER

nsproxy
MINUS
GREATER

mnt_ns
COMMA

new_fs
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

new_nsp
MINUS
GREATER

mnt_ns
BRACKET_C
BRACKET_C

goto

out_ns
SEMICOLON

new_nsp
MINUS
GREATER

uts_ns
OP_ASSIGNMENT

copy_utsname
BRACKET_O

flags
COMMA

tsk
MINUS
GREATER

nsproxy
MINUS
GREATER

uts_ns
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

new_nsp
MINUS
GREATER

uts_ns
BRACKET_C
BRACKET_C

goto

out_uts
SEMICOLON

new_nsp
MINUS
GREATER

ipc_ns
OP_ASSIGNMENT

copy_ipcs
BRACKET_O

flags
COMMA

tsk
MINUS
GREATER

nsproxy
MINUS
GREATER

ipc_ns
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

new_nsp
MINUS
GREATER

ipc_ns
BRACKET_C
BRACKET_C

goto

out_ipc
SEMICOLON

new_nsp
MINUS
GREATER

pid_ns
OP_ASSIGNMENT

copy_pid_ns
BRACKET_O

flags
COMMA

tsk
MINUS
GREATER

nsproxy
MINUS
GREATER

pid_ns
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

new_nsp
MINUS
GREATER

pid_ns
BRACKET_C
BRACKET_C

goto

out_pid
SEMICOLON

return

new_nsp
SEMICOLON

out_pid
COLON
IF
BRACKET_O

new_nsp
MINUS
GREATER

ipc_ns
BRACKET_C

put_ipc_ns
BRACKET_O

new_nsp
MINUS
GREATER

ipc_ns
BRACKET_C
SEMICOLON

out_ipc
COLON
IF
BRACKET_O

new_nsp
MINUS
GREATER

uts_ns
BRACKET_C

put_uts_ns
BRACKET_O

new_nsp
MINUS
GREATER

uts_ns
BRACKET_C
SEMICOLON

out_uts
COLON
IF
BRACKET_O

new_nsp
MINUS
GREATER

mnt_ns
BRACKET_C

put_mnt_ns
BRACKET_O

new_nsp
MINUS
GREATER

mnt_ns
BRACKET_C
SEMICOLON

out_ns
COLON

kfree
BRACKET_O

new_nsp
BRACKET_C
SEMICOLON

return

ERR_PTR
BRACKET_O
MINUS

ENOMEM
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

copy_namespaces
BRACKET_O
TYPE_INT

flags
COMMA
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

nsproxy
MULT

old_ns
OP_ASSIGNMENT

tsk
MINUS
GREATER

nsproxy
SEMICOLON
STRUCT

nsproxy
MULT

new_ns
SEMICOLON
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

old_ns
BRACKET_C

return
NUMBER
SEMICOLON

get_nsproxy
BRACKET_O

old_ns
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

flags
AMPERSANT
BRACKET_O

CLONE_NEWNS
LOGICAL_OR

CLONE_NEWUTS
LOGICAL_OR

CLONE_NEWIPC
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SYS_ADMIN
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

new_ns
OP_ASSIGNMENT

create_new_namespaces
BRACKET_O

flags
COMMA

tsk
COMMA

tsk
MINUS
GREATER

fs
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

new_ns
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

new_ns
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

tsk
MINUS
GREATER

nsproxy
OP_ASSIGNMENT

new_ns
SEMICOLON

out
COLON

put_nsproxy
BRACKET_O

old_ns
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C

void

free_nsproxy
BRACKET_O
STRUCT

nsproxy
MULT

ns
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

ns
MINUS
GREATER

mnt_ns
BRACKET_C

put_mnt_ns
BRACKET_O

ns
MINUS
GREATER

mnt_ns
BRACKET_C
SEMICOLON
IF
BRACKET_O

ns
MINUS
GREATER

uts_ns
BRACKET_C

put_uts_ns
BRACKET_O

ns
MINUS
GREATER

uts_ns
BRACKET_C
SEMICOLON
IF
BRACKET_O

ns
MINUS
GREATER

ipc_ns
BRACKET_C

put_ipc_ns
BRACKET_O

ns
MINUS
GREATER

ipc_ns
BRACKET_C
SEMICOLON
IF
BRACKET_O

ns
MINUS
GREATER

pid_ns
BRACKET_C

put_pid_ns
BRACKET_O

ns
MINUS
GREATER

pid_ns
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ns
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

unshare_nsproxy_namespaces
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

unshare_flags
COMMA
STRUCT

nsproxy
MULT
MULT

new_nsp
COMMA
STRUCT

fs_struct
MULT

new_fs
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

unshare_flags
AMPERSANT
BRACKET_O

CLONE_NEWNS
LOGICAL_OR

CLONE_NEWUTS
LOGICAL_OR

CLONE_NEWIPC
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
PP_IFNDEF

CONFIG_IPC_NS
IF
BRACKET_O

unshare_flags
AMPERSANT

CLONE_NEWIPC
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
PP_ENDIF
PP_IFNDEF

CONFIG_UTS_NS
IF
BRACKET_O

unshare_flags
AMPERSANT

CLONE_NEWUTS
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
PP_ENDIF
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SYS_ADMIN
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
MULT

new_nsp
OP_ASSIGNMENT

create_new_namespaces
BRACKET_O

unshare_flags
COMMA

current
COMMA

new_fs
QUESTION_MARK

new_fs
COLON

current
MINUS
GREATER

fs
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O
MULT

new_nsp
BRACKET_C
BRACKET_C

err
OP_ASSIGNMENT

PTR_ERR
BRACKET_O
MULT

new_nsp
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
TYPE_INT

panic_on_oops
SEMICOLON
TYPE_INT

tainted
SEMICOLON

static
TYPE_INT

pause_on_oops
SEMICOLON

static
TYPE_INT

pause_on_oops_flag
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

pause_on_oops_lock
BRACKET_C
SEMICOLON
TYPE_INT

panic_timeout
SEMICOLON

ATOMIC_NOTIFIER_HEAD
BRACKET_O

panic_notifier_list
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

panic_notifier_list
BRACKET_C
SEMICOLON

static
TYPE_INT

__init

panic_setup
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

panic_timeout
OP_ASSIGNMENT

simple_strtoul
BRACKET_O

str
COMMA

NULL
COMMA
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

panic_setup
BRACKET_C
SEMICOLON

static
TYPE_LONG

no_blink
BRACKET_O
TYPE_LONG

time
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG
BRACKET_O
MULT

panic_blink
BRACKET_C
BRACKET_O
TYPE_LONG

time
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

panic_blink
BRACKET_C
SEMICOLON

NORET_TYPE

void

panic
BRACKET_O
CONST
TYPE_CHAR
MULT

fmt
COMMA
DOT
DOT
DOT
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

i
SEMICOLON

static
TYPE_CHAR

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

va_list

args
SEMICOLON
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_S390
BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

caller
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
PP_ENDIF

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

bust_spinlocks
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

va_start
BRACKET_O

args
COMMA

fmt
BRACKET_C
SEMICOLON

vsnprintf
BRACKET_O

buf
COMMA

sizeof
BRACKET_O

buf
BRACKET_C
COMMA

fmt
COMMA

args
BRACKET_C
SEMICOLON

va_end
BRACKET_O

args
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_EMERG
STRING
COMMA

buf
BRACKET_C
SEMICOLON

bust_spinlocks
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

crash_kexec
BRACKET_O

NULL
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SMP

smp_send_stop
BRACKET_O
BRACKET_C
SEMICOLON
PP_ENDIF

atomic_notifier_call_chain
BRACKET_O
AMPERSANT

panic_notifier_list
COMMA
NUMBER
COMMA

buf
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

panic_blink
BRACKET_C

panic_blink
OP_ASSIGNMENT

no_blink
SEMICOLON
IF
BRACKET_O

panic_timeout
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_EMERG
STRING
COMMA

panic_timeout
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_BOOTSPLASH
CURLY_BRACKET_O

extern
TYPE_INT

splash_verbose
BRACKET_O

void
BRACKET_C
SEMICOLON
BRACKET_O

void
BRACKET_C

splash_verbose
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

panic_timeout
MULT
NUMBER
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

touch_nmi_watchdog
BRACKET_O
BRACKET_C
SEMICOLON

i
ASSIGN_PLUS

panic_blink
BRACKET_O

i
BRACKET_C
SEMICOLON

mdelay
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

i
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

emergency_restart
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

__sparc__
CURLY_BRACKET_O

extern
TYPE_INT

stop_a_enabled
SEMICOLON

stop_a_enabled
OP_ASSIGNMENT
NUMBER
SEMICOLON

printk
BRACKET_O

KERN_EMERG
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_S390
BRACKET_C

disabled_wait
BRACKET_O

caller
BRACKET_C
SEMICOLON
PP_ENDIF

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_BOOTSPLASH
CURLY_BRACKET_O

extern
TYPE_INT

splash_verbose
BRACKET_O

void
BRACKET_C
SEMICOLON
BRACKET_O

void
BRACKET_C

splash_verbose
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

touch_softlockup_watchdog
BRACKET_O
BRACKET_C
SEMICOLON

i
ASSIGN_PLUS

panic_blink
BRACKET_O

i
BRACKET_C
SEMICOLON

mdelay
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

i
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

panic
BRACKET_C
SEMICOLON
CONST
TYPE_CHAR
MULT

print_tainted
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

static
TYPE_CHAR

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

tainted
BRACKET_C
CURLY_BRACKET_O

snprintf
BRACKET_O

buf
COMMA

sizeof
BRACKET_O

buf
BRACKET_C
COMMA
STRING
COMMA

tainted
AMPERSANT

TAINT_PROPRIETARY_MODULE
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
COMMA

tainted
AMPERSANT

TAINT_FORCED_MODULE
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
COMMA

tainted
AMPERSANT

TAINT_UNSAFE_SMP
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
COMMA

tainted
AMPERSANT

TAINT_FORCED_RMMOD
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
COMMA

tainted
AMPERSANT

TAINT_MACHINE_CHECK
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
COMMA

tainted
AMPERSANT

TAINT_BAD_PAGE
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
COMMA

tainted
AMPERSANT

TAINT_USER
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
COMMA

tainted
AMPERSANT

TAINT_NO_SUPPORT
QUESTION_MARK
QUOTED_CHAR
COLON
BRACKET_O

tainted
AMPERSANT

TAINT_EXTERNAL_SUPPORT
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

snprintf
BRACKET_O

buf
COMMA

sizeof
BRACKET_O

buf
BRACKET_C
COMMA
STRING
BRACKET_C
SEMICOLON

return
BRACKET_O

buf
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

add_taint
BRACKET_O
TYPE_UNSIGNED

flag
BRACKET_C
CURLY_BRACKET_O

debug_locks
OP_ASSIGNMENT
NUMBER
SEMICOLON

tainted
LOGICAL_OR
OP_ASSIGNMENT

flag
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

add_taint
BRACKET_C
SEMICOLON

static
TYPE_INT

__init

pause_on_oops_setup
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

pause_on_oops
OP_ASSIGNMENT

simple_strtoul
BRACKET_O

str
COMMA

NULL
COMMA
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

pause_on_oops_setup
BRACKET_C
SEMICOLON

static

void

spin_msec
BRACKET_O
TYPE_INT

msecs
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

msecs
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

touch_nmi_watchdog
BRACKET_O
BRACKET_C
SEMICOLON

mdelay
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

do_oops_enter_exit
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

static
TYPE_INT

spin_counter
SEMICOLON
IF
BRACKET_O
NOT

pause_on_oops
BRACKET_C

return
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

pause_on_oops_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

pause_on_oops_flag
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

pause_on_oops_flag
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O
NOT

spin_counter
BRACKET_C
CURLY_BRACKET_O

spin_counter
OP_ASSIGNMENT

pause_on_oops
SEMICOLON
DO
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

pause_on_oops_lock
BRACKET_C
SEMICOLON

spin_msec
BRACKET_O

MSEC_PER_SEC
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

pause_on_oops_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
MINUS
MINUS

spin_counter
BRACKET_C
SEMICOLON

pause_on_oops_flag
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
WHILE
BRACKET_O

spin_counter
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

pause_on_oops_lock
BRACKET_C
SEMICOLON

spin_msec
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

pause_on_oops_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

pause_on_oops_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

oops_may_print
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

pause_on_oops_flag
EQ
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

oops_enter
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

debug_locks_off
BRACKET_O
BRACKET_C
SEMICOLON

do_oops_enter_exit
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

oops_exit
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

do_oops_enter_exit
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_CC_STACKPROTECTOR

void

__stack_chk_fail
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

panic
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__stack_chk_fail
BRACKET_C
SEMICOLON
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_IF
NUMBER
PP_DEFINE

DEBUGP

printk
PP_ELSE
PP_DEFINE

DEBUGP
BRACKET_O

fmt
COMMA

a
DOT
DOT
DOT
BRACKET_C
PP_ENDIF

static

inline
TYPE_CHAR

dash2underscore
BRACKET_O
TYPE_CHAR

c
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

c
EQ
QUOTED_CHAR
BRACKET_C

return
QUOTED_CHAR
SEMICOLON

return

c
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

parameq
BRACKET_O
CONST
TYPE_CHAR
MULT

input
COMMA
CONST
TYPE_CHAR
MULT

paramname
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

dash2underscore
BRACKET_O

input
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
EQ

paramname
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

input
CORNER_BRACKET_O

i
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

parse_one
BRACKET_O
TYPE_CHAR
MULT

param
COMMA
TYPE_CHAR
MULT

val
COMMA
STRUCT

kernel_param
MULT

params
COMMA
TYPE_UNSIGNED

num_params
COMMA
TYPE_INT
BRACKET_O
MULT

handle_unknown
BRACKET_C
BRACKET_O
TYPE_CHAR
MULT

param
COMMA
TYPE_CHAR
MULT

val
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

num_params
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

parameq
BRACKET_O

param
COMMA

params
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

DEBUGP
BRACKET_O
STRING
COMMA

params
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

set
BRACKET_C
SEMICOLON

return

params
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

set
BRACKET_O

val
COMMA
AMPERSANT

params
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

handle_unknown
BRACKET_C
CURLY_BRACKET_O

DEBUGP
BRACKET_O
STRING
COMMA

handle_unknown
BRACKET_C
SEMICOLON

return

handle_unknown
BRACKET_O

param
COMMA

val
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

DEBUGP
BRACKET_O
STRING
COMMA

param
BRACKET_C
SEMICOLON

return
MINUS

ENOENT
SEMICOLON
CURLY_BRACKET_C

static
TYPE_CHAR
MULT

next_arg
BRACKET_O
TYPE_CHAR
MULT

args
COMMA
TYPE_CHAR
MULT
MULT

param
COMMA
TYPE_CHAR
MULT
MULT

val
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
COMMA

equals
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

in_quote
OP_ASSIGNMENT
NUMBER
COMMA

quoted
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_CHAR
MULT

next
SEMICOLON
IF
BRACKET_O
MULT

args
EQ
QUOTED_CHAR
BRACKET_C
CURLY_BRACKET_O

args
PLUS
PLUS
SEMICOLON

in_quote
OP_ASSIGNMENT
NUMBER
SEMICOLON

quoted
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

args
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

args
CORNER_BRACKET_O

i
CORNER_BRACKET_C
EQ
QUOTED_CHAR
AND
NOT

in_quote
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

equals
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

args
CORNER_BRACKET_O

i
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

equals
OP_ASSIGNMENT

i
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

args
CORNER_BRACKET_O

i
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

in_quote
OP_ASSIGNMENT
NOT

in_quote
SEMICOLON
CURLY_BRACKET_C
MULT

param
OP_ASSIGNMENT

args
SEMICOLON
IF
BRACKET_O
NOT

equals
BRACKET_C
MULT

val
OP_ASSIGNMENT

NULL
SEMICOLON
ELSE
CURLY_BRACKET_O

args
CORNER_BRACKET_O

equals
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
MULT

val
OP_ASSIGNMENT

args
PLUS

equals
PLUS
NUMBER
SEMICOLON
IF
BRACKET_O
MULT
MULT

val
EQ
QUOTED_CHAR
BRACKET_C
CURLY_BRACKET_O
BRACKET_O
MULT

val
BRACKET_C
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

args
CORNER_BRACKET_O

i
MINUS
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

args
CORNER_BRACKET_O

i
MINUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

quoted
AND

args
CORNER_BRACKET_O

i
MINUS
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

args
CORNER_BRACKET_O

i
MINUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

args
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

args
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

next
OP_ASSIGNMENT

args
PLUS

i
PLUS
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE

next
OP_ASSIGNMENT

args
PLUS

i
SEMICOLON
WHILE
BRACKET_O
MULT

next
EQ
QUOTED_CHAR
BRACKET_C

next
PLUS
PLUS
SEMICOLON

return

next
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

parse_args
BRACKET_O
CONST
TYPE_CHAR
MULT

name
COMMA
TYPE_CHAR
MULT

args
COMMA
STRUCT

kernel_param
MULT

params
COMMA
TYPE_UNSIGNED

num
COMMA
TYPE_INT
BRACKET_O
MULT

unknown
BRACKET_C
BRACKET_O
TYPE_CHAR
MULT

param
COMMA
TYPE_CHAR
MULT

val
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

param
COMMA
MULT

val
SEMICOLON

DEBUGP
BRACKET_O
STRING
COMMA

args
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
MULT

args
EQ
QUOTED_CHAR
BRACKET_C

args
PLUS
PLUS
SEMICOLON
WHILE
BRACKET_O
MULT

args
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON
TYPE_INT

irq_was_disabled
SEMICOLON

args
OP_ASSIGNMENT

next_arg
BRACKET_O

args
COMMA
AMPERSANT

param
COMMA
AMPERSANT

val
BRACKET_C
SEMICOLON

irq_was_disabled
OP_ASSIGNMENT

irqs_disabled
BRACKET_O
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

parse_one
BRACKET_O

param
COMMA

val
COMMA

params
COMMA

num
COMMA

unknown
BRACKET_C
SEMICOLON
IF
BRACKET_O

irq_was_disabled
AND
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA

param
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SWITCH
BRACKET_O

ret
BRACKET_C
CURLY_BRACKET_O

case
MINUS

ENOENT
COLON

printk
BRACKET_O

KERN_ERR
STRING
COMMA

name
COMMA

param
BRACKET_C
SEMICOLON

return

ret
SEMICOLON

case
MINUS

ENOSPC
COLON

printk
BRACKET_O

KERN_ERR
STRING
COMMA

name
COMMA

val
QUESTION_MARK
COLON
STRING
COMMA

param
BRACKET_C
SEMICOLON

return

ret
SEMICOLON

case
NUMBER
COLON
BREAK
SEMICOLON

default
COLON

printk
BRACKET_O

KERN_ERR
STRING
COMMA

name
COMMA

val
QUESTION_MARK
COLON
STRING
COMMA

param
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

STANDARD_PARAM_DEF
BRACKET_O

name
COMMA

type
COMMA

format
COMMA

tmptype
COMMA

strtolfn
BRACKET_C
BACKLASHED_NEWLINE
TYPE_INT

param_set_
DOUBLE_HASH

name
BRACKET_O
CONST
TYPE_CHAR
MULT

val
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_O
BACKLASHED_NEWLINE
TYPE_CHAR
MULT

endp
SEMICOLON
BACKLASHED_NEWLINE

tmptype

l
SEMICOLON
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE
IF
BRACKET_O
NOT

val
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
BACKLASHED_NEWLINE

l
OP_ASSIGNMENT

strtolfn
BRACKET_O

val
COMMA
AMPERSANT

endp
COMMA
NUMBER
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
IF
BRACKET_O

endp
EQ

val
OR
BRACKET_O
BRACKET_O

type
BRACKET_C

l
NOT_EQ

l
BRACKET_C
BRACKET_C
BACKLASHED_NEWLINE

return
MINUS

EINVAL
SEMICOLON
BACKLASHED_NEWLINE
MULT
BRACKET_O
BRACKET_O

type
MULT
BRACKET_C

kp
MINUS
GREATER

arg
BRACKET_C
OP_ASSIGNMENT

l
SEMICOLON
BACKLASHED_NEWLINE

return
NUMBER
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE
TYPE_INT

param_get_
DOUBLE_HASH

name
BRACKET_O
TYPE_CHAR
MULT

buffer
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_O
BACKLASHED_NEWLINE

return

sprintf
BRACKET_O

buffer
COMMA

format
COMMA
MULT
BRACKET_O
BRACKET_O

type
MULT
BRACKET_C

kp
MINUS
GREATER

arg
BRACKET_C
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C

STANDARD_PARAM_DEF
BRACKET_O

byte
COMMA
TYPE_UNSIGNED
TYPE_CHAR
COMMA
STRING
COMMA
TYPE_UNSIGNED
TYPE_LONG
COMMA

simple_strtoul
BRACKET_C
SEMICOLON

STANDARD_PARAM_DEF
BRACKET_O

short
COMMA

short
COMMA
STRING
COMMA
TYPE_LONG
COMMA

simple_strtol
BRACKET_C
SEMICOLON

STANDARD_PARAM_DEF
BRACKET_O

ushort
COMMA
TYPE_UNSIGNED

short
COMMA
STRING
COMMA
TYPE_UNSIGNED
TYPE_LONG
COMMA

simple_strtoul
BRACKET_C
SEMICOLON

STANDARD_PARAM_DEF
BRACKET_O
TYPE_INT
COMMA
TYPE_INT
COMMA
STRING
COMMA
TYPE_LONG
COMMA

simple_strtol
BRACKET_C
SEMICOLON

STANDARD_PARAM_DEF
BRACKET_O

uint
COMMA
TYPE_UNSIGNED
TYPE_INT
COMMA
STRING
COMMA
TYPE_UNSIGNED
TYPE_LONG
COMMA

simple_strtoul
BRACKET_C
SEMICOLON

STANDARD_PARAM_DEF
BRACKET_O
TYPE_LONG
COMMA
TYPE_LONG
COMMA
STRING
COMMA
TYPE_LONG
COMMA

simple_strtol
BRACKET_C
SEMICOLON

STANDARD_PARAM_DEF
BRACKET_O

ulong
COMMA
TYPE_UNSIGNED
TYPE_LONG
COMMA
STRING
COMMA
TYPE_UNSIGNED
TYPE_LONG
COMMA

simple_strtoul
BRACKET_C
SEMICOLON
TYPE_INT

param_set_charp
BRACKET_O
CONST
TYPE_CHAR
MULT

val
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

val
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
COMMA

kp
MINUS
GREATER

name
BRACKET_C
SEMICOLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

strlen
BRACKET_O

val
BRACKET_C
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
COMMA

kp
MINUS
GREATER

name
BRACKET_C
SEMICOLON

return
MINUS

ENOSPC
SEMICOLON
CURLY_BRACKET_C
MULT
BRACKET_O
TYPE_CHAR
MULT
MULT
BRACKET_C

kp
MINUS
GREATER

arg
OP_ASSIGNMENT
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

val
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

param_get_charp
BRACKET_O
TYPE_CHAR
MULT

buffer
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
CURLY_BRACKET_O

return

sprintf
BRACKET_O

buffer
COMMA
STRING
COMMA
MULT
BRACKET_O
BRACKET_O
TYPE_CHAR
MULT
MULT
BRACKET_C

kp
MINUS
GREATER

arg
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

param_set_bool
BRACKET_O
CONST
TYPE_CHAR
MULT

val
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

val
BRACKET_C

val
OP_ASSIGNMENT
STRING
SEMICOLON
SWITCH
BRACKET_O

val
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

case
QUOTED_CHAR
COLON

case
QUOTED_CHAR
COLON

case
QUOTED_CHAR
COLON
MULT
BRACKET_O
TYPE_INT
MULT
BRACKET_C

kp
MINUS
GREATER

arg
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON

case
QUOTED_CHAR
COLON

case
QUOTED_CHAR
COLON

case
QUOTED_CHAR
COLON
MULT
BRACKET_O
TYPE_INT
MULT
BRACKET_C

kp
MINUS
GREATER

arg
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

param_get_bool
BRACKET_O
TYPE_CHAR
MULT

buffer
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
CURLY_BRACKET_O

return

sprintf
BRACKET_O

buffer
COMMA
STRING
COMMA
BRACKET_O
MULT
BRACKET_O
TYPE_INT
MULT
BRACKET_C

kp
MINUS
GREATER

arg
BRACKET_C
QUESTION_MARK
QUOTED_CHAR
COLON
QUOTED_CHAR
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

param_set_invbool
BRACKET_O
CONST
TYPE_CHAR
MULT

val
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

boolval
COMMA

ret
SEMICOLON
STRUCT

kernel_param

dummy
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

arg
OP_ASSIGNMENT
AMPERSANT

boolval
CURLY_BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

param_set_bool
BRACKET_O

val
COMMA
AMPERSANT

dummy
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
NUMBER
BRACKET_C
MULT
BRACKET_O
TYPE_INT
MULT
BRACKET_C

kp
MINUS
GREATER

arg
OP_ASSIGNMENT
NOT

boolval
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

param_get_invbool
BRACKET_O
TYPE_CHAR
MULT

buffer
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

val
SEMICOLON
STRUCT

kernel_param

dummy
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

arg
OP_ASSIGNMENT
AMPERSANT

val
CURLY_BRACKET_C
SEMICOLON

val
OP_ASSIGNMENT
NOT
MULT
BRACKET_O
TYPE_INT
MULT
BRACKET_C

kp
MINUS
GREATER

arg
SEMICOLON

return

param_get_bool
BRACKET_O

buffer
COMMA
AMPERSANT

dummy
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

param_array
BRACKET_O
CONST
TYPE_CHAR
MULT

name
COMMA
CONST
TYPE_CHAR
MULT

val
COMMA
TYPE_UNSIGNED
TYPE_INT

min
COMMA
TYPE_UNSIGNED
TYPE_INT

max
COMMA

void
MULT

elem
COMMA
TYPE_INT

elemsize
COMMA
TYPE_INT
BRACKET_O
MULT

set
BRACKET_C
BRACKET_O
CONST
TYPE_CHAR
MULT
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
COMMA
TYPE_INT
MULT

num
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON
STRUCT

kernel_param

kp
SEMICOLON
TYPE_CHAR

save
SEMICOLON

kp
DOT

name
OP_ASSIGNMENT

name
SEMICOLON

kp
DOT

arg
OP_ASSIGNMENT

elem
SEMICOLON
IF
BRACKET_O
NOT

val
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
COMMA

name
BRACKET_C
SEMICOLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C
MULT

num
OP_ASSIGNMENT
NUMBER
SEMICOLON
DO
CURLY_BRACKET_O
TYPE_INT

len
SEMICOLON
IF
BRACKET_O
MULT

num
EQ

max
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
COMMA

name
COMMA

max
BRACKET_C
SEMICOLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

len
OP_ASSIGNMENT

strcspn
BRACKET_O

val
COMMA
STRING
BRACKET_C
SEMICOLON

save
OP_ASSIGNMENT

val
CORNER_BRACKET_O

len
CORNER_BRACKET_C
SEMICOLON
BRACKET_O
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

val
BRACKET_C
CORNER_BRACKET_O

len
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

ret
OP_ASSIGNMENT

set
BRACKET_O

val
COMMA
AMPERSANT

kp
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
NOT_EQ
NUMBER
BRACKET_C

return

ret
SEMICOLON

kp
DOT

arg
ASSIGN_PLUS

elemsize
SEMICOLON

val
ASSIGN_PLUS

len
PLUS
NUMBER
SEMICOLON
BRACKET_O
MULT

num
BRACKET_C
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

save
EQ
QUOTED_CHAR
BRACKET_C
SEMICOLON
IF
BRACKET_O
MULT

num
LESS

min
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
COMMA

name
COMMA

min
BRACKET_C
SEMICOLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

param_array_set
BRACKET_O
CONST
TYPE_CHAR
MULT

val
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
CURLY_BRACKET_O
STRUCT

kparam_array
MULT

arr
OP_ASSIGNMENT

kp
MINUS
GREATER

arg
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

temp_num
SEMICOLON

return

param_array
BRACKET_O

kp
MINUS
GREATER

name
COMMA

val
COMMA
NUMBER
COMMA

arr
MINUS
GREATER

max
COMMA

arr
MINUS
GREATER

elem
COMMA

arr
MINUS
GREATER

elemsize
COMMA

arr
MINUS
GREATER

set
COMMA

arr
MINUS
GREATER

num
QUESTION_MARK
COLON
AMPERSANT

temp_num
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

param_array_get
BRACKET_O
TYPE_CHAR
MULT

buffer
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

off
COMMA

ret
SEMICOLON
STRUCT

kparam_array
MULT

arr
OP_ASSIGNMENT

kp
MINUS
GREATER

arg
SEMICOLON
STRUCT

kernel_param

p
SEMICOLON

p
OP_ASSIGNMENT
MULT

kp
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT

off
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS
BRACKET_O

arr
MINUS
GREATER

num
QUESTION_MARK
MULT

arr
MINUS
GREATER

num
COLON

arr
MINUS
GREATER

max
BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

i
BRACKET_C

buffer
CORNER_BRACKET_O

off
PLUS
PLUS
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

p
DOT

arg
OP_ASSIGNMENT

arr
MINUS
GREATER

elem
PLUS

arr
MINUS
GREATER

elemsize
MULT

i
SEMICOLON

ret
OP_ASSIGNMENT

arr
MINUS
GREATER

get
BRACKET_O

buffer
PLUS

off
COMMA
AMPERSANT

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
LESS
NUMBER
BRACKET_C

return

ret
SEMICOLON

off
ASSIGN_PLUS

ret
SEMICOLON
CURLY_BRACKET_C

buffer
CORNER_BRACKET_O

off
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

return

off
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

param_set_copystring
BRACKET_O
CONST
TYPE_CHAR
MULT

val
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
CURLY_BRACKET_O
STRUCT

kparam_string
MULT

kps
OP_ASSIGNMENT

kp
MINUS
GREATER

arg
SEMICOLON
IF
BRACKET_O
NOT

val
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
COMMA

kp
MINUS
GREATER

name
BRACKET_C
SEMICOLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

strlen
BRACKET_O

val
BRACKET_C
PLUS
NUMBER
GREATER

kps
MINUS
GREATER

maxlen
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
COMMA

kp
MINUS
GREATER

name
COMMA

kps
MINUS
GREATER

maxlen
MINUS
NUMBER
BRACKET_C
SEMICOLON

return
MINUS

ENOSPC
SEMICOLON
CURLY_BRACKET_C

strcpy
BRACKET_O

kps
MINUS
GREATER

string
COMMA

val
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

param_get_string
BRACKET_O
TYPE_CHAR
MULT

buffer
COMMA
STRUCT

kernel_param
MULT

kp
BRACKET_C
CURLY_BRACKET_O
STRUCT

kparam_string
MULT

kps
OP_ASSIGNMENT

kp
MINUS
GREATER

arg
SEMICOLON

return

strlcpy
BRACKET_O

buffer
COMMA

kps
MINUS
GREATER

string
COMMA

kps
MINUS
GREATER

maxlen
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

extern
STRUCT

kernel_param

__start___param
CORNER_BRACKET_O
CORNER_BRACKET_C
COMMA

__stop___param
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON
PP_DEFINE

MAX_KBUILD_MODNAME

KOBJ_NAME_LEN
STRUCT

param_attribute
CURLY_BRACKET_O
STRUCT

module_attribute

mattr
SEMICOLON
STRUCT

kernel_param
MULT

param
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

module_param_attrs
CURLY_BRACKET_O
STRUCT

attribute_group

grp
SEMICOLON
STRUCT

param_attribute

attrs
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SYSFS
PP_DEFINE

to_param_attr
BRACKET_O

n
BRACKET_C

container_of
BRACKET_O

n
COMMA
STRUCT

param_attribute
COMMA

mattr
BRACKET_C
SEMICOLON

static

ssize_t

param_attr_show
BRACKET_O
STRUCT

module_attribute
MULT

mattr
COMMA
STRUCT

module
MULT

mod
COMMA
TYPE_CHAR
MULT

buf
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

count
SEMICOLON
STRUCT

param_attribute
MULT

attribute
OP_ASSIGNMENT

to_param_attr
BRACKET_O

mattr
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

attribute
MINUS
GREATER

param
MINUS
GREATER

get
BRACKET_C

return
MINUS

EPERM
SEMICOLON

count
OP_ASSIGNMENT

attribute
MINUS
GREATER

param
MINUS
GREATER

get
BRACKET_O

buf
COMMA

attribute
MINUS
GREATER

param
BRACKET_C
SEMICOLON
IF
BRACKET_O

count
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

strcat
BRACKET_O

buf
COMMA
STRING
BRACKET_C
SEMICOLON
PLUS
PLUS

count
SEMICOLON
CURLY_BRACKET_C

return

count
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

param_attr_store
BRACKET_O
STRUCT

module_attribute
MULT

mattr
COMMA
STRUCT

module
MULT

owner
COMMA
CONST
TYPE_CHAR
MULT

buf
COMMA

size_t

len
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
SEMICOLON
STRUCT

param_attribute
MULT

attribute
OP_ASSIGNMENT

to_param_attr
BRACKET_O

mattr
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

attribute
MINUS
GREATER

param
MINUS
GREATER

set
BRACKET_C

return
MINUS

EPERM
SEMICOLON

err
OP_ASSIGNMENT

attribute
MINUS
GREATER

param
MINUS
GREATER

set
BRACKET_O

buf
COMMA

attribute
MINUS
GREATER

param
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

err
BRACKET_C

return

len
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_MODULES
PP_DEFINE

__modinit
PP_ELSE
PP_DEFINE

__modinit

__init
PP_ENDIF
PP_IFDEF

CONFIG_SYSFS

static

__modinit
STRUCT

module_param_attrs
MULT

param_sysfs_setup
BRACKET_O
STRUCT

module_kobject
MULT

mk
COMMA
STRUCT

kernel_param
MULT

kparam
COMMA
TYPE_UNSIGNED
TYPE_INT

num_params
COMMA
TYPE_UNSIGNED
TYPE_INT

name_skip
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_param_attrs
MULT

mp
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

valid_attrs
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

i
COMMA

size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
STRUCT

param_attribute
MULT

pattr
SEMICOLON
STRUCT

attribute
MULT
MULT

gattr
SEMICOLON
TYPE_INT

err
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

num_params
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

kparam
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

perm
BRACKET_C

valid_attrs
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

valid_attrs
BRACKET_C

return

NULL
SEMICOLON

size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

ALIGN
BRACKET_O

sizeof
BRACKET_O
MULT

mp
BRACKET_C
PLUS

valid_attrs
MULT

sizeof
BRACKET_O

mp
MINUS
GREATER

attrs
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
COMMA

sizeof
BRACKET_O

mp
MINUS
GREATER

grp
DOT

attrs
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
BRACKET_O

valid_attrs
PLUS
NUMBER
BRACKET_C
MULT

sizeof
BRACKET_O

mp
MINUS
GREATER

grp
DOT

attrs
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

mp
OP_ASSIGNMENT

kmalloc
BRACKET_O

size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
PLUS

size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

mp
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ENOMEM
BRACKET_C
SEMICOLON

mp
MINUS
GREATER

grp
DOT

name
OP_ASSIGNMENT
STRING
SEMICOLON

mp
MINUS
GREATER

grp
DOT

attrs
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

mp
PLUS

size
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

pattr
OP_ASSIGNMENT
AMPERSANT

mp
MINUS
GREATER

attrs
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

gattr
OP_ASSIGNMENT
AMPERSANT

mp
MINUS
GREATER

grp
DOT

attrs
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

num_params
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

kernel_param
MULT

kp
OP_ASSIGNMENT
AMPERSANT

kparam
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

kp
MINUS
GREATER

perm
BRACKET_C
CURLY_BRACKET_O

pattr
MINUS
GREATER

param
OP_ASSIGNMENT

kp
SEMICOLON

pattr
MINUS
GREATER

mattr
DOT

show
OP_ASSIGNMENT

param_attr_show
SEMICOLON

pattr
MINUS
GREATER

mattr
DOT

store
OP_ASSIGNMENT

param_attr_store
SEMICOLON

pattr
MINUS
GREATER

mattr
DOT

attr
DOT

name
OP_ASSIGNMENT
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C
AMPERSANT

kp
MINUS
GREATER

name
CORNER_BRACKET_O

name_skip
CORNER_BRACKET_C
SEMICOLON

pattr
MINUS
GREATER

mattr
DOT

attr
DOT

owner
OP_ASSIGNMENT

mk
MINUS
GREATER

mod
SEMICOLON

pattr
MINUS
GREATER

mattr
DOT

attr
DOT

mode
OP_ASSIGNMENT

kp
MINUS
GREATER

perm
SEMICOLON
MULT
BRACKET_O

gattr
PLUS
PLUS
BRACKET_C
OP_ASSIGNMENT
AMPERSANT
BRACKET_O

pattr
PLUS
PLUS
BRACKET_C
MINUS
GREATER

mattr
DOT

attr
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
MULT

gattr
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O
BRACKET_O

err
OP_ASSIGNMENT

sysfs_create_group
BRACKET_O
AMPERSANT

mk
MINUS
GREATER

kobj
COMMA
AMPERSANT

mp
MINUS
GREATER

grp
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

mp
BRACKET_C
SEMICOLON

return

ERR_PTR
BRACKET_O

err
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

mp
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_MODULES
TYPE_INT

module_param_sysfs_setup
BRACKET_O
STRUCT

module
MULT

mod
COMMA
STRUCT

kernel_param
MULT

kparam
COMMA
TYPE_UNSIGNED
TYPE_INT

num_params
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_param_attrs
MULT

mp
SEMICOLON

mp
OP_ASSIGNMENT

param_sysfs_setup
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
COMMA

kparam
COMMA

num_params
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

mp
BRACKET_C
BRACKET_C

return

PTR_ERR
BRACKET_O

mp
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

param_attrs
OP_ASSIGNMENT

mp
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

module_param_sysfs_remove
BRACKET_O
STRUCT

module
MULT

mod
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

mod
MINUS
GREATER

param_attrs
BRACKET_C
CURLY_BRACKET_O

sysfs_remove_group
BRACKET_O
AMPERSANT

mod
MINUS
GREATER

mkobj
DOT

kobj
COMMA
AMPERSANT

mod
MINUS
GREATER

param_attrs
MINUS
GREATER

grp
BRACKET_C
SEMICOLON

kfree
BRACKET_O

mod
MINUS
GREATER

param_attrs
BRACKET_C
SEMICOLON

mod
MINUS
GREATER

param_attrs
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ENDIF

static

void

__init

kernel_param_sysfs_setup
BRACKET_O
CONST
TYPE_CHAR
MULT

name
COMMA
STRUCT

kernel_param
MULT

kparam
COMMA
TYPE_UNSIGNED
TYPE_INT

num_params
COMMA
TYPE_UNSIGNED
TYPE_INT

name_skip
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_kobject
MULT

mk
SEMICOLON
TYPE_INT

ret
SEMICOLON

mk
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

module_kobject
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

mk
BRACKET_C
SEMICOLON

mk
MINUS
GREATER

mod
OP_ASSIGNMENT

THIS_MODULE
SEMICOLON

kobj_set_kset_s
BRACKET_O

mk
COMMA

module_subsys
BRACKET_C
SEMICOLON

kobject_set_name
BRACKET_O
AMPERSANT

mk
MINUS
GREATER

kobj
COMMA

name
BRACKET_C
SEMICOLON

kobject_init
BRACKET_O
AMPERSANT

mk
MINUS
GREATER

kobj
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

kobject_add
BRACKET_O
AMPERSANT

mk
MINUS
GREATER

kobj
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

ret
LESS
NUMBER
BRACKET_C
SEMICOLON

param_sysfs_setup
BRACKET_O

mk
COMMA

kparam
COMMA

num_params
COMMA

name_skip
BRACKET_C
SEMICOLON

kobject_uevent
BRACKET_O
AMPERSANT

mk
MINUS
GREATER

kobj
COMMA

KOBJ_ADD
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

__init

param_sysfs_builtin
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

kernel_param
MULT

kp
COMMA
MULT

kp_begin
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

i
COMMA

name_len
COMMA

count
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_CHAR

modname
CORNER_BRACKET_O

MAX_KBUILD_MODNAME
PLUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

__stop___param
MINUS

__start___param
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

dot
SEMICOLON

size_t

max_name_len
SEMICOLON

kp
OP_ASSIGNMENT
AMPERSANT

__start___param
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

max_name_len
OP_ASSIGNMENT

min_t
BRACKET_O

size_t
COMMA

MAX_KBUILD_MODNAME
COMMA

strlen
BRACKET_O

kp
MINUS
GREATER

name
BRACKET_C
BRACKET_C
SEMICOLON

dot
OP_ASSIGNMENT

memchr
BRACKET_O

kp
MINUS
GREATER

name
COMMA
QUOTED_CHAR
COMMA

max_name_len
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

dot
BRACKET_C
CURLY_BRACKET_O

DEBUGP
BRACKET_O
STRING
STRING
COMMA

MAX_KBUILD_MODNAME
COMMA

kp
MINUS
GREATER

name
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

name_len
OP_ASSIGNMENT

dot
MINUS

kp
MINUS
GREATER

name
SEMICOLON
IF
BRACKET_O

strlen
BRACKET_O

modname
BRACKET_C
NOT_EQ

name_len
OR

strncmp
BRACKET_O

modname
COMMA

kp
MINUS
GREATER

name
COMMA

name_len
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

count
BRACKET_C

kernel_param_sysfs_setup
BRACKET_O

modname
COMMA

kp_begin
COMMA

count
COMMA

strlen
BRACKET_O

modname
BRACKET_C
PLUS
NUMBER
BRACKET_C
SEMICOLON

strncpy
BRACKET_O

modname
COMMA

kp
MINUS
GREATER

name
COMMA

name_len
BRACKET_C
SEMICOLON

modname
CORNER_BRACKET_O

name_len
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

count
OP_ASSIGNMENT
NUMBER
SEMICOLON

kp_begin
OP_ASSIGNMENT

kp
SEMICOLON
CURLY_BRACKET_C

count
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

count
BRACKET_C

kernel_param_sysfs_setup
BRACKET_O

modname
COMMA

kp_begin
COMMA

count
COMMA

strlen
BRACKET_O

modname
BRACKET_C
PLUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

to_module_attr
BRACKET_O

n
BRACKET_C

container_of
BRACKET_O

n
COMMA
STRUCT

module_attribute
COMMA

attr
BRACKET_C
SEMICOLON
PP_DEFINE

to_module_kobject
BRACKET_O

n
BRACKET_C

container_of
BRACKET_O

n
COMMA
STRUCT

module_kobject
COMMA

kobj
BRACKET_C
SEMICOLON

static

ssize_t

module_attr_show
BRACKET_O
STRUCT

kobject
MULT

kobj
COMMA
STRUCT

attribute
MULT

attr
COMMA
TYPE_CHAR
MULT

buf
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_attribute
MULT

attribute
SEMICOLON
STRUCT

module_kobject
MULT

mk
SEMICOLON
TYPE_INT

ret
SEMICOLON

attribute
OP_ASSIGNMENT

to_module_attr
BRACKET_O

attr
BRACKET_C
SEMICOLON

mk
OP_ASSIGNMENT

to_module_kobject
BRACKET_O

kobj
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

attribute
MINUS
GREATER

show
BRACKET_C

return
MINUS

EIO
SEMICOLON

ret
OP_ASSIGNMENT

attribute
MINUS
GREATER

show
BRACKET_O

attribute
COMMA

mk
MINUS
GREATER

mod
COMMA

buf
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

module_attr_store
BRACKET_O
STRUCT

kobject
MULT

kobj
COMMA
STRUCT

attribute
MULT

attr
COMMA
CONST
TYPE_CHAR
MULT

buf
COMMA

size_t

len
BRACKET_C
CURLY_BRACKET_O
STRUCT

module_attribute
MULT

attribute
SEMICOLON
STRUCT

module_kobject
MULT

mk
SEMICOLON
TYPE_INT

ret
SEMICOLON

attribute
OP_ASSIGNMENT

to_module_attr
BRACKET_O

attr
BRACKET_C
SEMICOLON

mk
OP_ASSIGNMENT

to_module_kobject
BRACKET_O

kobj
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

attribute
MINUS
GREATER

store
BRACKET_C

return
MINUS

EIO
SEMICOLON

ret
OP_ASSIGNMENT

attribute
MINUS
GREATER

store
BRACKET_O

attribute
COMMA

mk
MINUS
GREATER

mod
COMMA

buf
COMMA

len
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

sysfs_ops

module_sysfs_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

show
OP_ASSIGNMENT

module_attr_show
COMMA
DOT

store
OP_ASSIGNMENT

module_attr_store
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

kobj_type

module_ktype
SEMICOLON

static
TYPE_INT

uevent_filter
BRACKET_O
STRUCT

kset
MULT

kset
COMMA
STRUCT

kobject
MULT

kobj
BRACKET_C
CURLY_BRACKET_O
STRUCT

kobj_type
MULT

ktype
OP_ASSIGNMENT

get_ktype
BRACKET_O

kobj
BRACKET_C
SEMICOLON
IF
BRACKET_O

ktype
EQ
AMPERSANT

module_ktype
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

kset_uevent_ops

module_uevent_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

filter
OP_ASSIGNMENT

uevent_filter
COMMA
CURLY_BRACKET_C
SEMICOLON

decl_subsys
BRACKET_O

module
COMMA
AMPERSANT

module_ktype
COMMA
AMPERSANT

module_uevent_ops
BRACKET_C
SEMICOLON
TYPE_INT

module_sysfs_initialized
SEMICOLON

static
STRUCT

kobj_type

module_ktype
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

sysfs_ops
OP_ASSIGNMENT
AMPERSANT

module_sysfs_ops
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__init

param_sysfs_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

ret
OP_ASSIGNMENT

subsystem_register
BRACKET_O
AMPERSANT

module_subsys
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

__FILE__
COMMA

__LINE__
COMMA

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

module_sysfs_initialized
OP_ASSIGNMENT
NUMBER
SEMICOLON

param_sysfs_builtin
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

subsys_initcall
BRACKET_O

param_sysfs_init
BRACKET_C
SEMICOLON
PP_ELSE
PP_IF
NUMBER

static
STRUCT

sysfs_ops

module_sysfs_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

show
OP_ASSIGNMENT

NULL
COMMA
DOT

store
OP_ASSIGNMENT

NULL
COMMA
CURLY_BRACKET_C
SEMICOLON
PP_ENDIF
PP_ENDIF

EXPORT_SYMBOL
BRACKET_O

param_set_byte
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_get_byte
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_set_short
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_get_short
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_set_ushort
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_get_ushort
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_set_int
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_get_int
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_set_uint
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_get_uint
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_set_long
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_get_long
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_set_ulong
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_get_ulong
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_set_charp
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_get_charp
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_set_bool
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_get_bool
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_set_invbool
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_get_invbool
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_array_set
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_array_get
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_set_copystring
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

param_get_string
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_DEFINE

pid_hashfn
BRACKET_O

nr
BRACKET_C

hash_long
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

nr
COMMA

pidhash_shift
BRACKET_C

static
STRUCT

hlist_head
MULT

pid_hash
SEMICOLON

static
TYPE_INT

pidhash_shift
SEMICOLON

static
STRUCT

kmem_cache
MULT

pid_cachep
SEMICOLON
STRUCT

pid

init_struct_pid
OP_ASSIGNMENT

INIT_STRUCT_PID
SEMICOLON
TYPE_INT

pid_max
OP_ASSIGNMENT

PID_MAX_DEFAULT
SEMICOLON
PP_DEFINE

RESERVED_PIDS
NUMBER
TYPE_INT

pid_max_min
OP_ASSIGNMENT

RESERVED_PIDS
PLUS
NUMBER
SEMICOLON
TYPE_INT

pid_max_max
OP_ASSIGNMENT

PID_MAX_LIMIT
SEMICOLON
PP_DEFINE

BITS_PER_PAGE
BRACKET_O

PAGE_SIZE
MULT
NUMBER
BRACKET_C
PP_DEFINE

BITS_PER_PAGE_MASK
BRACKET_O

BITS_PER_PAGE
MINUS
NUMBER
BRACKET_C

static

inline
TYPE_INT

mk_pid
BRACKET_O
STRUCT

pid_namespace
MULT

pid_ns
COMMA
STRUCT

pidmap
MULT

map
COMMA
TYPE_INT

off
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O

map
MINUS

pid_ns
MINUS
GREATER

pidmap
BRACKET_C
MULT

BITS_PER_PAGE
PLUS

off
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

find_next_offset
BRACKET_O

map
COMMA

off
BRACKET_C
BACKLASHED_NEWLINE

find_next_zero_bit
BRACKET_O
BRACKET_O

map
BRACKET_C
MINUS
GREATER

page
COMMA

BITS_PER_PAGE
COMMA

off
BRACKET_C
STRUCT

pid_namespace

init_pid_ns
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

kref
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

refcount
OP_ASSIGNMENT

ATOMIC_INIT
BRACKET_O
NUMBER
BRACKET_C
COMMA
CURLY_BRACKET_C
COMMA
DOT

pidmap
OP_ASSIGNMENT
CURLY_BRACKET_O
CORNER_BRACKET_O
NUMBER
DOT
DOT
DOT

PIDMAP_ENTRIES
MINUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O

ATOMIC_INIT
BRACKET_O

BITS_PER_PAGE
BRACKET_C
COMMA

NULL
CURLY_BRACKET_C
CURLY_BRACKET_C
COMMA
DOT

last_pid
OP_ASSIGNMENT
NUMBER
COMMA
DOT

child_reaper
OP_ASSIGNMENT
AMPERSANT

init_task
CURLY_BRACKET_C
SEMICOLON

static

__cacheline_aligned_in_smp

DEFINE_SPINLOCK
BRACKET_O

pidmap_lock
BRACKET_C
SEMICOLON

static

fastcall

void

free_pidmap
BRACKET_O
STRUCT

pid_namespace
MULT

pid_ns
COMMA
TYPE_INT

pid
BRACKET_C
CURLY_BRACKET_O
STRUCT

pidmap
MULT

map
OP_ASSIGNMENT

pid_ns
MINUS
GREATER

pidmap
PLUS

pid
DIV

BITS_PER_PAGE
SEMICOLON
TYPE_INT

offset
OP_ASSIGNMENT

pid
AMPERSANT

BITS_PER_PAGE_MASK
SEMICOLON

clear_bit
BRACKET_O

offset
COMMA

map
MINUS
GREATER

page
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

map
MINUS
GREATER

nr_free
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

alloc_pidmap
BRACKET_O
STRUCT

pid_namespace
MULT

pid_ns
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

offset
COMMA

max_scan
COMMA

pid
COMMA

last
OP_ASSIGNMENT

pid_ns
MINUS
GREATER

last_pid
SEMICOLON
STRUCT

pidmap
MULT

map
SEMICOLON

pid
OP_ASSIGNMENT

last
PLUS
NUMBER
SEMICOLON
IF
BRACKET_O

pid
GR_EQ

pid_max
BRACKET_C

pid
OP_ASSIGNMENT

RESERVED_PIDS
SEMICOLON

offset
OP_ASSIGNMENT

pid
AMPERSANT

BITS_PER_PAGE_MASK
SEMICOLON

map
OP_ASSIGNMENT
AMPERSANT

pid_ns
MINUS
GREATER

pidmap
CORNER_BRACKET_O

pid
DIV

BITS_PER_PAGE
CORNER_BRACKET_C
SEMICOLON

max_scan
OP_ASSIGNMENT
BRACKET_O

pid_max
PLUS

BITS_PER_PAGE
MINUS
NUMBER
BRACKET_C
DIV

BITS_PER_PAGE
MINUS
NOT

offset
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LE_EQ

max_scan
SEMICOLON
PLUS
PLUS

i
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O
NOT

map
MINUS
GREATER

page
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

void
MULT

page
OP_ASSIGNMENT

kzalloc
BRACKET_O

PAGE_SIZE
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

pidmap_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

map
MINUS
GREATER

page
BRACKET_C

kfree
BRACKET_O

page
BRACKET_C
SEMICOLON
ELSE

map
MINUS
GREATER

page
OP_ASSIGNMENT

page
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

pidmap_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

map
MINUS
GREATER

page
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

likely
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

map
MINUS
GREATER

nr_free
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
DO
CURLY_BRACKET_O
IF
BRACKET_O
NOT

test_and_set_bit
BRACKET_O

offset
COMMA

map
MINUS
GREATER

page
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

atomic_dec
BRACKET_O
AMPERSANT

map
MINUS
GREATER

nr_free
BRACKET_C
SEMICOLON

pid_ns
MINUS
GREATER

last_pid
OP_ASSIGNMENT

pid
SEMICOLON

return

pid
SEMICOLON
CURLY_BRACKET_C

offset
OP_ASSIGNMENT

find_next_offset
BRACKET_O

map
COMMA

offset
BRACKET_C
SEMICOLON

pid
OP_ASSIGNMENT

mk_pid
BRACKET_O

pid_ns
COMMA

map
COMMA

offset
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

offset
LESS

BITS_PER_PAGE
AND

pid
LESS

pid_max
AND
BRACKET_O

i
NOT_EQ

max_scan
OR

pid
LESS

last
OR
NOT
BRACKET_O
BRACKET_O

last
PLUS
NUMBER
BRACKET_C
AMPERSANT

BITS_PER_PAGE_MASK
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

map
LESS
AMPERSANT

pid_ns
MINUS
GREATER

pidmap
CORNER_BRACKET_O
BRACKET_O

pid_max
MINUS
NUMBER
BRACKET_C
DIV

BITS_PER_PAGE
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O
PLUS
PLUS

map
SEMICOLON

offset
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

map
OP_ASSIGNMENT
AMPERSANT

pid_ns
MINUS
GREATER

pidmap
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

offset
OP_ASSIGNMENT

RESERVED_PIDS
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

last
EQ

offset
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

pid
OP_ASSIGNMENT

mk_pid
BRACKET_O

pid_ns
COMMA

map
COMMA

offset
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
MINUS
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

next_pidmap
BRACKET_O
STRUCT

pid_namespace
MULT

pid_ns
COMMA
TYPE_INT

last
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

offset
SEMICOLON
STRUCT

pidmap
MULT

map
COMMA
MULT

end
SEMICOLON

offset
OP_ASSIGNMENT
BRACKET_O

last
PLUS
NUMBER
BRACKET_C
AMPERSANT

BITS_PER_PAGE_MASK
SEMICOLON

map
OP_ASSIGNMENT
AMPERSANT

pid_ns
MINUS
GREATER

pidmap
CORNER_BRACKET_O
BRACKET_O

last
PLUS
NUMBER
BRACKET_C
DIV

BITS_PER_PAGE
CORNER_BRACKET_C
SEMICOLON

end
OP_ASSIGNMENT
AMPERSANT

pid_ns
MINUS
GREATER

pidmap
CORNER_BRACKET_O

PIDMAP_ENTRIES
CORNER_BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON

map
LESS

end
SEMICOLON

map
PLUS
PLUS
COMMA

offset
OP_ASSIGNMENT
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O
NOT

map
MINUS
GREATER

page
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

offset
OP_ASSIGNMENT

find_next_bit
BRACKET_O
BRACKET_O

map
BRACKET_C
MINUS
GREATER

page
COMMA

BITS_PER_PAGE
COMMA

offset
BRACKET_C
SEMICOLON
IF
BRACKET_O

offset
LESS

BITS_PER_PAGE
BRACKET_C

return

mk_pid
BRACKET_O

pid_ns
COMMA

map
COMMA

offset
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
MINUS
NUMBER
SEMICOLON
CURLY_BRACKET_C

fastcall

void

put_pid
BRACKET_O
STRUCT

pid
MULT

pid
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

pid
BRACKET_C

return
SEMICOLON
IF
BRACKET_O
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

pid
MINUS
GREATER

count
BRACKET_C
EQ
NUMBER
BRACKET_C
OR

atomic_dec_and_test
BRACKET_O
AMPERSANT

pid
MINUS
GREATER

count
BRACKET_C
BRACKET_C

kmem_cache_free
BRACKET_O

pid_cachep
COMMA

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

put_pid
BRACKET_C
SEMICOLON

static

void

delayed_put_pid
BRACKET_O
STRUCT

rcu_head
MULT

rhp
BRACKET_C
CURLY_BRACKET_O
STRUCT

pid
MULT

pid
OP_ASSIGNMENT

container_of
BRACKET_O

rhp
COMMA
STRUCT

pid
COMMA

rcu
BRACKET_C
SEMICOLON

put_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

fastcall

void

free_pid
BRACKET_O
STRUCT

pid
MULT

pid
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

pidmap_lock
COMMA

flags
BRACKET_C
SEMICOLON

hlist_del_rcu
BRACKET_O
AMPERSANT

pid
MINUS
GREATER

pid_chain
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

pidmap_lock
COMMA

flags
BRACKET_C
SEMICOLON

free_pidmap
BRACKET_O
AMPERSANT

init_pid_ns
COMMA

pid
MINUS
GREATER

nr
BRACKET_C
SEMICOLON

call_rcu
BRACKET_O
AMPERSANT

pid
MINUS
GREATER

rcu
COMMA

delayed_put_pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

pid
MULT

alloc_pid
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

pid
MULT

pid
SEMICOLON

enum

pid_type

type
SEMICOLON
TYPE_INT

nr
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

pid
OP_ASSIGNMENT

kmem_cache_alloc
BRACKET_O

pid_cachep
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

pid
BRACKET_C

goto

out
SEMICOLON

nr
OP_ASSIGNMENT

alloc_pidmap
BRACKET_O

current
MINUS
GREATER

nsproxy
MINUS
GREATER

pid_ns
BRACKET_C
SEMICOLON
IF
BRACKET_O

nr
LESS
NUMBER
BRACKET_C

goto

out_free
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

pid
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

pid
MINUS
GREATER

nr
OP_ASSIGNMENT

nr
SEMICOLON
FOR
BRACKET_O

type
OP_ASSIGNMENT
NUMBER
SEMICOLON

type
LESS

PIDTYPE_MAX
SEMICOLON
PLUS
PLUS

type
BRACKET_C

INIT_HLIST_HEAD
BRACKET_O
AMPERSANT

pid
MINUS
GREATER

tasks
CORNER_BRACKET_O

type
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

pidmap_lock
BRACKET_C
SEMICOLON

hlist_add_head_rcu
BRACKET_O
AMPERSANT

pid
MINUS
GREATER

pid_chain
COMMA
AMPERSANT

pid_hash
CORNER_BRACKET_O

pid_hashfn
BRACKET_O

pid
MINUS
GREATER

nr
BRACKET_C
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

pidmap_lock
BRACKET_C
SEMICOLON

out
COLON

return

pid
SEMICOLON

out_free
COLON

kmem_cache_free
BRACKET_O

pid_cachep
COMMA

pid
BRACKET_C
SEMICOLON

pid
OP_ASSIGNMENT

NULL
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
STRUCT

pid
MULT

fastcall

find_pid
BRACKET_O
TYPE_INT

nr
BRACKET_C
CURLY_BRACKET_O
STRUCT

hlist_node
MULT

elem
SEMICOLON
STRUCT

pid
MULT

pid
SEMICOLON

hlist_for_each_entry_rcu
BRACKET_O

pid
COMMA

elem
COMMA
AMPERSANT

pid_hash
CORNER_BRACKET_O

pid_hashfn
BRACKET_O

nr
BRACKET_C
CORNER_BRACKET_C
COMMA

pid_chain
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

pid
MINUS
GREATER

nr
EQ

nr
BRACKET_C

return

pid
SEMICOLON
CURLY_BRACKET_C

return

NULL
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

find_pid
BRACKET_C
SEMICOLON
TYPE_INT

fastcall

attach_pid
BRACKET_O
STRUCT

task_struct
MULT

task
COMMA

enum

pid_type

type
COMMA
STRUCT

pid
MULT

pid
BRACKET_C
CURLY_BRACKET_O
STRUCT

pid_link
MULT

link
SEMICOLON

link
OP_ASSIGNMENT
AMPERSANT

task
MINUS
GREATER

pids
CORNER_BRACKET_O

type
CORNER_BRACKET_C
SEMICOLON

link
MINUS
GREATER

pid
OP_ASSIGNMENT

pid
SEMICOLON

hlist_add_head_rcu
BRACKET_O
AMPERSANT

link
MINUS
GREATER

node
COMMA
AMPERSANT

pid
MINUS
GREATER

tasks
CORNER_BRACKET_O

type
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

fastcall

detach_pid
BRACKET_O
STRUCT

task_struct
MULT

task
COMMA

enum

pid_type

type
BRACKET_C
CURLY_BRACKET_O
STRUCT

pid_link
MULT

link
SEMICOLON
STRUCT

pid
MULT

pid
SEMICOLON
TYPE_INT

tmp
SEMICOLON

link
OP_ASSIGNMENT
AMPERSANT

task
MINUS
GREATER

pids
CORNER_BRACKET_O

type
CORNER_BRACKET_C
SEMICOLON

pid
OP_ASSIGNMENT

link
MINUS
GREATER

pid
SEMICOLON

hlist_del_rcu
BRACKET_O
AMPERSANT

link
MINUS
GREATER

node
BRACKET_C
SEMICOLON

link
MINUS
GREATER

pid
OP_ASSIGNMENT

NULL
SEMICOLON
FOR
BRACKET_O

tmp
OP_ASSIGNMENT

PIDTYPE_MAX
SEMICOLON
MINUS
MINUS

tmp
GR_EQ
NUMBER
SEMICOLON
BRACKET_C
IF
BRACKET_O
NOT

hlist_empty
BRACKET_O
AMPERSANT

pid
MINUS
GREATER

tasks
CORNER_BRACKET_O

tmp
CORNER_BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON

free_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

fastcall

transfer_pid
BRACKET_O
STRUCT

task_struct
MULT

old
COMMA
STRUCT

task_struct
MULT

new
COMMA

enum

pid_type

type
BRACKET_C
CURLY_BRACKET_O

new
MINUS
GREATER

pids
CORNER_BRACKET_O

type
CORNER_BRACKET_C
DOT

pid
OP_ASSIGNMENT

old
MINUS
GREATER

pids
CORNER_BRACKET_O

type
CORNER_BRACKET_C
DOT

pid
SEMICOLON

hlist_replace_rcu
BRACKET_O
AMPERSANT

old
MINUS
GREATER

pids
CORNER_BRACKET_O

type
CORNER_BRACKET_C
DOT

node
COMMA
AMPERSANT

new
MINUS
GREATER

pids
CORNER_BRACKET_O

type
CORNER_BRACKET_C
DOT

node
BRACKET_C
SEMICOLON

old
MINUS
GREATER

pids
CORNER_BRACKET_O

type
CORNER_BRACKET_C
DOT

pid
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
STRUCT

task_struct
MULT

fastcall

pid_task
BRACKET_O
STRUCT

pid
MULT

pid
COMMA

enum

pid_type

type
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

result
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

pid
BRACKET_C
CURLY_BRACKET_O
STRUCT

hlist_node
MULT

first
SEMICOLON

first
OP_ASSIGNMENT

rcu_dereference
BRACKET_O

pid
MINUS
GREATER

tasks
CORNER_BRACKET_O

type
CORNER_BRACKET_C
DOT

first
BRACKET_C
SEMICOLON
IF
BRACKET_O

first
BRACKET_C

result
OP_ASSIGNMENT

hlist_entry
BRACKET_O

first
COMMA
STRUCT

task_struct
COMMA

pids
CORNER_BRACKET_O
BRACKET_O

type
BRACKET_C
CORNER_BRACKET_C
DOT

node
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

result
SEMICOLON
CURLY_BRACKET_C
STRUCT

task_struct
MULT

find_task_by_pid_type
BRACKET_O
TYPE_INT

type
COMMA
TYPE_INT

nr
BRACKET_C
CURLY_BRACKET_O

return

pid_task
BRACKET_O

find_pid
BRACKET_O

nr
BRACKET_C
COMMA

type
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

find_task_by_pid_type
BRACKET_C
SEMICOLON
STRUCT

pid
MULT

get_task_pid
BRACKET_O
STRUCT

task_struct
MULT

task
COMMA

enum

pid_type

type
BRACKET_C
CURLY_BRACKET_O
STRUCT

pid
MULT

pid
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

pid
OP_ASSIGNMENT

get_pid
BRACKET_O

task
MINUS
GREATER

pids
CORNER_BRACKET_O

type
CORNER_BRACKET_C
DOT

pid
BRACKET_C
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

pid
SEMICOLON
CURLY_BRACKET_C
STRUCT

task_struct
MULT

fastcall

get_pid_task
BRACKET_O
STRUCT

pid
MULT

pid
COMMA

enum

pid_type

type
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

result
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

result
OP_ASSIGNMENT

pid_task
BRACKET_O

pid
COMMA

type
BRACKET_C
SEMICOLON
IF
BRACKET_O

result
BRACKET_C

get_task_struct
BRACKET_O

result
BRACKET_C
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

result
SEMICOLON
CURLY_BRACKET_C
STRUCT

pid
MULT

find_get_pid
BRACKET_O

pid_t

nr
BRACKET_C
CURLY_BRACKET_O
STRUCT

pid
MULT

pid
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

pid
OP_ASSIGNMENT

get_pid
BRACKET_O

find_pid
BRACKET_O

nr
BRACKET_C
BRACKET_C
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

pid
SEMICOLON
CURLY_BRACKET_C
STRUCT

pid
MULT

find_ge_pid
BRACKET_O
TYPE_INT

nr
BRACKET_C
CURLY_BRACKET_O
STRUCT

pid
MULT

pid
SEMICOLON
DO
CURLY_BRACKET_O

pid
OP_ASSIGNMENT

find_pid
BRACKET_O

nr
BRACKET_C
SEMICOLON
IF
BRACKET_O

pid
BRACKET_C
BREAK
SEMICOLON

nr
OP_ASSIGNMENT

next_pidmap
BRACKET_O

current
MINUS
GREATER

nsproxy
MINUS
GREATER

pid_ns
COMMA

nr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

nr
GREATER
NUMBER
BRACKET_C
SEMICOLON

return

pid
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

find_get_pid
BRACKET_C
SEMICOLON
STRUCT

pid_namespace
MULT

copy_pid_ns
BRACKET_O
TYPE_INT

flags
COMMA
STRUCT

pid_namespace
MULT

old_ns
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O
NOT

old_ns
BRACKET_C
SEMICOLON

get_pid_ns
BRACKET_O

old_ns
BRACKET_C
SEMICOLON

return

old_ns
SEMICOLON
CURLY_BRACKET_C

void

free_pid_ns
BRACKET_O
STRUCT

kref
MULT

kref
BRACKET_C
CURLY_BRACKET_O
STRUCT

pid_namespace
MULT

ns
SEMICOLON

ns
OP_ASSIGNMENT

container_of
BRACKET_O

kref
COMMA
STRUCT

pid_namespace
COMMA

kref
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ns
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__init

pidhash_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

pidhash_size
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

megabytes
OP_ASSIGNMENT

nr_kernel_pages
GREATER
GREATER
BRACKET_O
NUMBER
MINUS

PAGE_SHIFT
BRACKET_C
SEMICOLON

pidhash_shift
OP_ASSIGNMENT

max
BRACKET_O
NUMBER
COMMA

fls
BRACKET_O

megabytes
MULT
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

pidhash_shift
OP_ASSIGNMENT

min
BRACKET_O
NUMBER
COMMA

pidhash_shift
BRACKET_C
SEMICOLON

pidhash_size
OP_ASSIGNMENT
NUMBER
LESS
LESS

pidhash_shift
SEMICOLON

printk
BRACKET_O
STRING
COMMA

pidhash_size
COMMA

pidhash_shift
COMMA

pidhash_size
MULT

sizeof
BRACKET_O
STRUCT

hlist_head
BRACKET_C
BRACKET_C
SEMICOLON

pid_hash
OP_ASSIGNMENT

alloc_bootmem
BRACKET_O

pidhash_size
MULT

sizeof
BRACKET_O
MULT
BRACKET_O

pid_hash
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

pid_hash
BRACKET_C

panic
BRACKET_O
STRING
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

pidhash_size
SEMICOLON

i
PLUS
PLUS
BRACKET_C

INIT_HLIST_HEAD
BRACKET_O
AMPERSANT

pid_hash
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__init

pidmap_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

init_pid_ns
DOT

pidmap
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
DOT

page
OP_ASSIGNMENT

kzalloc
BRACKET_O

PAGE_SIZE
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON

set_bit
BRACKET_O
NUMBER
COMMA

init_pid_ns
DOT

pidmap
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
DOT

page
BRACKET_C
SEMICOLON

atomic_dec
BRACKET_O
AMPERSANT

init_pid_ns
DOT

pidmap
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
DOT

nr_free
BRACKET_C
SEMICOLON

pid_cachep
OP_ASSIGNMENT

KMEM_CACHE
BRACKET_O

pid
COMMA

SLAB_PANIC
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static
TYPE_INT

check_clock
BRACKET_O
CONST

clockid_t

which_clock
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON
CONST

pid_t

pid
OP_ASSIGNMENT

CPUCLOCK_PID
BRACKET_O

which_clock
BRACKET_C
SEMICOLON
IF
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

which_clock
BRACKET_C
GR_EQ

CPUCLOCK_MAX
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

pid
EQ
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
OR
BRACKET_O

CPUCLOCK_PERTHREAD
BRACKET_O

which_clock
BRACKET_C
QUESTION_MARK

p
MINUS
GREATER

tgid
NOT_EQ

current
MINUS
GREATER

tgid
COLON

p
MINUS
GREATER

tgid
NOT_EQ

pid
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C

static

inline

union

cpu_time_count

timespec_to_sample
BRACKET_O
CONST

clockid_t

which_clock
COMMA
CONST
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O

union

cpu_time_count

ret
SEMICOLON

ret
DOT

sched
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

which_clock
BRACKET_C
EQ

CPUCLOCK_SCHED
BRACKET_C
CURLY_BRACKET_O

ret
DOT

sched
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

tp
MINUS
GREATER

tv_sec
MULT

NSEC_PER_SEC
PLUS

tp
MINUS
GREATER

tv_nsec
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

ret
DOT

cpu
OP_ASSIGNMENT

timespec_to_cputime
BRACKET_O

tp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

static

void

sample_to_timespec
BRACKET_O
CONST

clockid_t

which_clock
COMMA

union

cpu_time_count

cpu
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

which_clock
BRACKET_C
EQ

CPUCLOCK_SCHED
BRACKET_C
CURLY_BRACKET_O

tp
MINUS
GREATER

tv_sec
OP_ASSIGNMENT

div_long_long_rem
BRACKET_O

cpu
DOT

sched
COMMA

NSEC_PER_SEC
COMMA
AMPERSANT

tp
MINUS
GREATER

tv_nsec
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

cputime_to_timespec
BRACKET_O

cpu
DOT

cpu
COMMA

tp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline
TYPE_INT

cpu_time_before
BRACKET_O
CONST

clockid_t

which_clock
COMMA

union

cpu_time_count

now
COMMA

union

cpu_time_count

then
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

which_clock
BRACKET_C
EQ

CPUCLOCK_SCHED
BRACKET_C
CURLY_BRACKET_O

return

now
DOT

sched
LESS

then
DOT

sched
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

return

cputime_lt
BRACKET_O

now
DOT

cpu
COMMA

then
DOT

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline

void

cpu_time_add
BRACKET_O
CONST

clockid_t

which_clock
COMMA

union

cpu_time_count
MULT

acc
COMMA

union

cpu_time_count

val
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

which_clock
BRACKET_C
EQ

CPUCLOCK_SCHED
BRACKET_C
CURLY_BRACKET_O

acc
MINUS
GREATER

sched
ASSIGN_PLUS

val
DOT

sched
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

acc
MINUS
GREATER

cpu
OP_ASSIGNMENT

cputime_add
BRACKET_O

acc
MINUS
GREATER

cpu
COMMA

val
DOT

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline

union

cpu_time_count

cpu_time_sub
BRACKET_O
CONST

clockid_t

which_clock
COMMA

union

cpu_time_count

a
COMMA

union

cpu_time_count

b
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

which_clock
BRACKET_C
EQ

CPUCLOCK_SCHED
BRACKET_C
CURLY_BRACKET_O

a
DOT

sched
ASSIGN_MINUS

b
DOT

sched
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

a
DOT

cpu
OP_ASSIGNMENT

cputime_sub
BRACKET_O

a
DOT

cpu
COMMA

b
DOT

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

a
SEMICOLON
CURLY_BRACKET_C

static

inline

cputime_t

cputime_div_non_zero
BRACKET_O

cputime_t

time
COMMA
TYPE_UNSIGNED
TYPE_LONG

div
BRACKET_C
CURLY_BRACKET_O

cputime_t

res
OP_ASSIGNMENT

cputime_div
BRACKET_O

time
COMMA

div
BRACKET_C
SEMICOLON

return

max_t
BRACKET_O

cputime_t
COMMA

res
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

bump_cpu_timer
BRACKET_O
STRUCT

k_itimer
MULT

timer
COMMA

union

cpu_time_count

now
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

timer
MINUS
GREATER

it
DOT

cpu
DOT

incr
DOT

sched
EQ
NUMBER
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

timer
MINUS
GREATER

it_clock
BRACKET_C
EQ

CPUCLOCK_SCHED
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

delta
COMMA

incr
SEMICOLON
IF
BRACKET_O

now
DOT

sched
LESS

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

sched
BRACKET_C

return
SEMICOLON

incr
OP_ASSIGNMENT

timer
MINUS
GREATER

it
DOT

cpu
DOT

incr
DOT

sched
SEMICOLON

delta
OP_ASSIGNMENT

now
DOT

sched
PLUS

incr
MINUS

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

sched
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

incr
LESS

delta
MINUS

incr
SEMICOLON

i
PLUS
PLUS
BRACKET_C

incr
OP_ASSIGNMENT

incr
LESS
LESS
NUMBER
SEMICOLON
FOR
BRACKET_O
SEMICOLON

i
GR_EQ
NUMBER
SEMICOLON

incr
GREATER
GR_EQ
NUMBER
COMMA

i
MINUS
MINUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

delta
LESS

incr
BRACKET_C
CONTINUE
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

sched
ASSIGN_PLUS

incr
SEMICOLON

timer
MINUS
GREATER

it_overrun
ASSIGN_PLUS
NUMBER
LESS
LESS

i
SEMICOLON

delta
ASSIGN_MINUS

incr
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

cputime_t

delta
COMMA

incr
SEMICOLON
IF
BRACKET_O

cputime_lt
BRACKET_O

now
DOT

cpu
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

cpu
BRACKET_C
BRACKET_C

return
SEMICOLON

incr
OP_ASSIGNMENT

timer
MINUS
GREATER

it
DOT

cpu
DOT

incr
DOT

cpu
SEMICOLON

delta
OP_ASSIGNMENT

cputime_sub
BRACKET_O

cputime_add
BRACKET_O

now
DOT

cpu
COMMA

incr
BRACKET_C
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

cpu
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

cputime_lt
BRACKET_O

incr
COMMA

cputime_sub
BRACKET_O

delta
COMMA

incr
BRACKET_C
BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C

incr
OP_ASSIGNMENT

cputime_add
BRACKET_O

incr
COMMA

incr
BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON

i
GR_EQ
NUMBER
SEMICOLON

incr
OP_ASSIGNMENT

cputime_halve
BRACKET_O

incr
BRACKET_C
COMMA

i
MINUS
MINUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cputime_lt
BRACKET_O

delta
COMMA

incr
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

cpu
OP_ASSIGNMENT

cputime_add
BRACKET_O

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

cpu
COMMA

incr
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

it_overrun
ASSIGN_PLUS
NUMBER
LESS
LESS

i
SEMICOLON

delta
OP_ASSIGNMENT

cputime_sub
BRACKET_O

delta
COMMA

incr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline

cputime_t

prof_ticks
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

return

cputime_add
BRACKET_O

p
MINUS
GREATER

utime
COMMA

p
MINUS
GREATER

stime
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

cputime_t

virt_ticks
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

return

p
MINUS
GREATER

utime
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

sched_ns
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O

p
EQ

current
BRACKET_C
QUESTION_MARK

current_sched_time
BRACKET_O

p
BRACKET_C
COLON

p
MINUS
GREATER

sched_time
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

posix_cpu_clock_getres
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
OP_ASSIGNMENT

check_clock
BRACKET_O

which_clock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
BRACKET_C
CURLY_BRACKET_O

tp
MINUS
GREATER

tv_sec
OP_ASSIGNMENT
NUMBER
SEMICOLON

tp
MINUS
GREATER

tv_nsec
OP_ASSIGNMENT
BRACKET_O
BRACKET_O

NSEC_PER_SEC
PLUS

HZ
MINUS
NUMBER
BRACKET_C
DIV

HZ
BRACKET_C
SEMICOLON
IF
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

which_clock
BRACKET_C
EQ

CPUCLOCK_SCHED
BRACKET_C
CURLY_BRACKET_O

tp
MINUS
GREATER

tv_nsec
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

error
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

posix_cpu_clock_set
BRACKET_O
CONST

clockid_t

which_clock
COMMA
CONST
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
OP_ASSIGNMENT

check_clock
BRACKET_O

which_clock
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
CURLY_BRACKET_C

return

error
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpu_clock_sample
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

task_struct
MULT

p
COMMA

union

cpu_time_count
MULT

cpu
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

which_clock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

default
COLON

return
MINUS

EINVAL
SEMICOLON

case

CPUCLOCK_PROF
COLON

cpu
MINUS
GREATER

cpu
OP_ASSIGNMENT

prof_ticks
BRACKET_O

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPUCLOCK_VIRT
COLON

cpu
MINUS
GREATER

cpu
OP_ASSIGNMENT

virt_ticks
BRACKET_O

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPUCLOCK_SCHED
COLON

cpu
MINUS
GREATER

sched
OP_ASSIGNMENT

sched_ns
BRACKET_O

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpu_clock_sample_group_locked
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

clock_idx
COMMA
STRUCT

task_struct
MULT

p
COMMA

union

cpu_time_count
MULT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

t
OP_ASSIGNMENT

p
SEMICOLON
SWITCH
BRACKET_O

clock_idx
BRACKET_C
CURLY_BRACKET_O

default
COLON

return
MINUS

EINVAL
SEMICOLON

case

CPUCLOCK_PROF
COLON

cpu
MINUS
GREATER

cpu
OP_ASSIGNMENT

cputime_add
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

utime
COMMA

p
MINUS
GREATER

signal
MINUS
GREATER

stime
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O

cpu
MINUS
GREATER

cpu
OP_ASSIGNMENT

cputime_add
BRACKET_O

cpu
MINUS
GREATER

cpu
COMMA

prof_ticks
BRACKET_O

t
BRACKET_C
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPUCLOCK_VIRT
COLON

cpu
MINUS
GREATER

cpu
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

utime
SEMICOLON
DO
CURLY_BRACKET_O

cpu
MINUS
GREATER

cpu
OP_ASSIGNMENT

cputime_add
BRACKET_O

cpu
MINUS
GREATER

cpu
COMMA

virt_ticks
BRACKET_O

t
BRACKET_C
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPUCLOCK_SCHED
COLON

cpu
MINUS
GREATER

sched
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

sched_time
SEMICOLON
WHILE
BRACKET_O
BRACKET_O

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
BRACKET_C
NOT_EQ

p
BRACKET_C
CURLY_BRACKET_O

cpu
MINUS
GREATER

sched
ASSIGN_PLUS

t
MINUS
GREATER

sched_time
SEMICOLON
CURLY_BRACKET_C

cpu
MINUS
GREATER

sched
ASSIGN_PLUS

sched_ns
BRACKET_O

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

cpu_clock_sample_group
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

task_struct
MULT

p
COMMA

union

cpu_time_count
MULT

cpu
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

cpu_clock_sample_group_locked
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

which_clock
BRACKET_C
COMMA

p
COMMA

cpu
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

posix_cpu_clock_get
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O
CONST

pid_t

pid
OP_ASSIGNMENT

CPUCLOCK_PID
BRACKET_O

which_clock
BRACKET_C
SEMICOLON
TYPE_INT

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

union

cpu_time_count

rtn
SEMICOLON
IF
BRACKET_O

pid
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

CPUCLOCK_PERTHREAD
BRACKET_O

which_clock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT

cpu_clock_sample
BRACKET_O

which_clock
COMMA

current
COMMA
AMPERSANT

rtn
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

cpu_clock_sample_group
BRACKET_O

which_clock
COMMA

current
COMMA
AMPERSANT

rtn
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

CPUCLOCK_PERTHREAD
BRACKET_O

which_clock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

tgid
EQ

current
MINUS
GREATER

tgid
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT

cpu_clock_sample
BRACKET_O

which_clock
COMMA

p
COMMA
AMPERSANT

rtn
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

tgid
EQ

pid
AND

p
MINUS
GREATER

signal
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT

cpu_clock_sample_group
BRACKET_O

which_clock
COMMA

p
COMMA
AMPERSANT

rtn
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

error
BRACKET_C

return

error
SEMICOLON

sample_to_timespec
BRACKET_O

which_clock
COMMA

rtn
COMMA

tp
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

posix_cpu_timer_create
BRACKET_O
STRUCT

k_itimer
MULT

new_timer
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CONST

pid_t

pid
OP_ASSIGNMENT

CPUCLOCK_PID
BRACKET_O

new_timer
MINUS
GREATER

it_clock
BRACKET_C
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON
IF
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

new_timer
MINUS
GREATER

it_clock
BRACKET_C
GR_EQ

CPUCLOCK_MAX
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

new_timer
MINUS
GREATER

it
DOT

cpu
DOT

entry
BRACKET_C
SEMICOLON

new_timer
MINUS
GREATER

it
DOT

cpu
DOT

incr
DOT

sched
OP_ASSIGNMENT
NUMBER
SEMICOLON

new_timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

sched
OP_ASSIGNMENT
NUMBER
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

CPUCLOCK_PERTHREAD
BRACKET_O

new_timer
MINUS
GREATER

it_clock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

pid
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

p
OP_ASSIGNMENT

current
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
AND

p
MINUS
GREATER

tgid
NOT_EQ

current
MINUS
GREATER

tgid
BRACKET_C

p
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

pid
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

p
OP_ASSIGNMENT

current
MINUS
GREATER

group_leader
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
AND

p
MINUS
GREATER

tgid
NOT_EQ

pid
BRACKET_C

p
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

new_timer
MINUS
GREATER

it
DOT

cpu
DOT

task
OP_ASSIGNMENT

p
SEMICOLON
IF
BRACKET_O

p
BRACKET_C
CURLY_BRACKET_O

get_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

posix_cpu_timer_del
BRACKET_O
STRUCT

k_itimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
OP_ASSIGNMENT

timer
MINUS
GREATER

it
DOT

cpu
DOT

task
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

p
NOT_EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

signal
EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

it
DOT

cpu
DOT

entry
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer
MINUS
GREATER

it
DOT

cpu
DOT

firing
BRACKET_C

ret
OP_ASSIGNMENT

TIMER_RETRY
SEMICOLON
ELSE

list_del
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

it
DOT

cpu
DOT

entry
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C

put_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

static

void

cleanup_timers
BRACKET_O
STRUCT

list_head
MULT

head
COMMA

cputime_t

utime
COMMA

cputime_t

stime
COMMA
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

sched_time
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_timer_list
MULT

timer
COMMA
MULT

next
SEMICOLON

cputime_t

ptime
OP_ASSIGNMENT

cputime_add
BRACKET_O

utime
COMMA

stime
BRACKET_C
SEMICOLON

list_for_each_entry_safe
BRACKET_O

timer
COMMA

next
COMMA

head
COMMA

entry
BRACKET_C
CURLY_BRACKET_O

list_del_init
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

entry
BRACKET_C
SEMICOLON
IF
BRACKET_O

cputime_lt
BRACKET_O

timer
MINUS
GREATER

expires
DOT

cpu
COMMA

ptime
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

timer
MINUS
GREATER

expires
DOT

cpu
OP_ASSIGNMENT

cputime_zero
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

timer
MINUS
GREATER

expires
DOT

cpu
OP_ASSIGNMENT

cputime_sub
BRACKET_O

timer
MINUS
GREATER

expires
DOT

cpu
COMMA

ptime
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PLUS
PLUS

head
SEMICOLON

list_for_each_entry_safe
BRACKET_O

timer
COMMA

next
COMMA

head
COMMA

entry
BRACKET_C
CURLY_BRACKET_O

list_del_init
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

entry
BRACKET_C
SEMICOLON
IF
BRACKET_O

cputime_lt
BRACKET_O

timer
MINUS
GREATER

expires
DOT

cpu
COMMA

utime
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

timer
MINUS
GREATER

expires
DOT

cpu
OP_ASSIGNMENT

cputime_zero
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

timer
MINUS
GREATER

expires
DOT

cpu
OP_ASSIGNMENT

cputime_sub
BRACKET_O

timer
MINUS
GREATER

expires
DOT

cpu
COMMA

utime
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PLUS
PLUS

head
SEMICOLON

list_for_each_entry_safe
BRACKET_O

timer
COMMA

next
COMMA

head
COMMA

entry
BRACKET_C
CURLY_BRACKET_O

list_del_init
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

entry
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer
MINUS
GREATER

expires
DOT

sched
LESS

sched_time
BRACKET_C
CURLY_BRACKET_O

timer
MINUS
GREATER

expires
DOT

sched
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

timer
MINUS
GREATER

expires
DOT

sched
ASSIGN_MINUS

sched_time
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

void

posix_cpu_timers_exit
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O

cleanup_timers
BRACKET_O

tsk
MINUS
GREATER

cpu_timers
COMMA

tsk
MINUS
GREATER

utime
COMMA

tsk
MINUS
GREATER

stime
COMMA

tsk
MINUS
GREATER

sched_time
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

posix_cpu_timers_exit_group
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O

cleanup_timers
BRACKET_O

tsk
MINUS
GREATER

signal
MINUS
GREATER

cpu_timers
COMMA

cputime_add
BRACKET_O

tsk
MINUS
GREATER

utime
COMMA

tsk
MINUS
GREATER

signal
MINUS
GREATER

utime
BRACKET_C
COMMA

cputime_add
BRACKET_O

tsk
MINUS
GREATER

stime
COMMA

tsk
MINUS
GREATER

signal
MINUS
GREATER

stime
BRACKET_C
COMMA

tsk
MINUS
GREATER

sched_time
PLUS

tsk
MINUS
GREATER

signal
MINUS
GREATER

sched_time
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

process_timer_rebalance
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_UNSIGNED
TYPE_INT

clock_idx
COMMA

union

cpu_time_count

expires
COMMA

union

cpu_time_count

val
BRACKET_C
CURLY_BRACKET_O

cputime_t

ticks
COMMA

left
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

ns
COMMA

nsleft
SEMICOLON
STRUCT

task_struct
MULT

t
OP_ASSIGNMENT

p
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

nthreads
OP_ASSIGNMENT

atomic_read
BRACKET_O
AMPERSANT

p
MINUS
GREATER

signal
MINUS
GREATER

live
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

nthreads
BRACKET_C

return
SEMICOLON
SWITCH
BRACKET_O

clock_idx
BRACKET_C
CURLY_BRACKET_O

default
COLON

BUG
BRACKET_O
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPUCLOCK_PROF
COLON

left
OP_ASSIGNMENT

cputime_div_non_zero
BRACKET_O

cputime_sub
BRACKET_O

expires
DOT

cpu
COMMA

val
DOT

cpu
BRACKET_C
COMMA

nthreads
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O
IF
BRACKET_O

likely
BRACKET_O
NOT
BRACKET_O

t
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ticks
OP_ASSIGNMENT

cputime_add
BRACKET_O

prof_ticks
BRACKET_O

t
BRACKET_C
COMMA

left
BRACKET_C
SEMICOLON
IF
BRACKET_O

cputime_eq
BRACKET_O

t
MINUS
GREATER

it_prof_expires
COMMA

cputime_zero
BRACKET_C
OR

cputime_gt
BRACKET_O

t
MINUS
GREATER

it_prof_expires
COMMA

ticks
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

t
MINUS
GREATER

it_prof_expires
OP_ASSIGNMENT

ticks
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPUCLOCK_VIRT
COLON

left
OP_ASSIGNMENT

cputime_div_non_zero
BRACKET_O

cputime_sub
BRACKET_O

expires
DOT

cpu
COMMA

val
DOT

cpu
BRACKET_C
COMMA

nthreads
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O
IF
BRACKET_O

likely
BRACKET_O
NOT
BRACKET_O

t
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ticks
OP_ASSIGNMENT

cputime_add
BRACKET_O

virt_ticks
BRACKET_O

t
BRACKET_C
COMMA

left
BRACKET_C
SEMICOLON
IF
BRACKET_O

cputime_eq
BRACKET_O

t
MINUS
GREATER

it_virt_expires
COMMA

cputime_zero
BRACKET_C
OR

cputime_gt
BRACKET_O

t
MINUS
GREATER

it_virt_expires
COMMA

ticks
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

t
MINUS
GREATER

it_virt_expires
OP_ASSIGNMENT

ticks
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPUCLOCK_SCHED
COLON

nsleft
OP_ASSIGNMENT

expires
DOT

sched
MINUS

val
DOT

sched
SEMICOLON

do_div
BRACKET_O

nsleft
COMMA

nthreads
BRACKET_C
SEMICOLON

nsleft
OP_ASSIGNMENT

max_t
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
COMMA

nsleft
COMMA
NUMBER
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O
IF
BRACKET_O

likely
BRACKET_O
NOT
BRACKET_O

t
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ns
OP_ASSIGNMENT

t
MINUS
GREATER

sched_time
PLUS

nsleft
SEMICOLON
IF
BRACKET_O

t
MINUS
GREATER

it_sched_expires
EQ
NUMBER
OR

t
MINUS
GREATER

it_sched_expires
GREATER

ns
BRACKET_C
CURLY_BRACKET_O

t
MINUS
GREATER

it_sched_expires
OP_ASSIGNMENT

ns
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

clear_dead_task
BRACKET_O
STRUCT

k_itimer
MULT

timer
COMMA

union

cpu_time_count

now
BRACKET_C
CURLY_BRACKET_O

put_task_struct
BRACKET_O

timer
MINUS
GREATER

it
DOT

cpu
DOT

task
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

task
OP_ASSIGNMENT

NULL
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
OP_ASSIGNMENT

cpu_time_sub
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
COMMA

now
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

arm_timer
BRACKET_O
STRUCT

k_itimer
MULT

timer
COMMA

union

cpu_time_count

now
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
OP_ASSIGNMENT

timer
MINUS
GREATER

it
DOT

cpu
DOT

task
SEMICOLON
STRUCT

list_head
MULT

head
COMMA
MULT

listpos
SEMICOLON
STRUCT

cpu_timer_list
MULT
CONST

nt
OP_ASSIGNMENT
AMPERSANT

timer
MINUS
GREATER

it
DOT

cpu
SEMICOLON
STRUCT

cpu_timer_list
MULT

next
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

i
SEMICOLON

head
OP_ASSIGNMENT
BRACKET_O

CPUCLOCK_PERTHREAD
BRACKET_O

timer
MINUS
GREATER

it_clock
BRACKET_C
QUESTION_MARK

p
MINUS
GREATER

cpu_timers
COLON

p
MINUS
GREATER

signal
MINUS
GREATER

cpu_timers
BRACKET_C
SEMICOLON

head
ASSIGN_PLUS

CPUCLOCK_WHICH
BRACKET_O

timer
MINUS
GREATER

it_clock
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

listpos
OP_ASSIGNMENT

head
SEMICOLON
IF
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

timer
MINUS
GREATER

it_clock
BRACKET_C
EQ

CPUCLOCK_SCHED
BRACKET_C
CURLY_BRACKET_O

list_for_each_entry
BRACKET_O

next
COMMA

head
COMMA

entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

next
MINUS
GREATER

expires
DOT

sched
GREATER

nt
MINUS
GREATER

expires
DOT

sched
BRACKET_C
BREAK
SEMICOLON

listpos
OP_ASSIGNMENT
AMPERSANT

next
MINUS
GREATER

entry
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

list_for_each_entry
BRACKET_O

next
COMMA

head
COMMA

entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cputime_gt
BRACKET_O

next
MINUS
GREATER

expires
DOT

cpu
COMMA

nt
MINUS
GREATER

expires
DOT

cpu
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

listpos
OP_ASSIGNMENT
AMPERSANT

next
MINUS
GREATER

entry
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

list_add
BRACKET_O
AMPERSANT

nt
MINUS
GREATER

entry
COMMA

listpos
BRACKET_C
SEMICOLON
IF
BRACKET_O

listpos
EQ

head
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

CPUCLOCK_PERTHREAD
BRACKET_O

timer
MINUS
GREATER

it_clock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

timer
MINUS
GREATER

it_clock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

default
COLON

BUG
BRACKET_O
BRACKET_C
SEMICOLON

case

CPUCLOCK_PROF
COLON
IF
BRACKET_O

cputime_eq
BRACKET_O

p
MINUS
GREATER

it_prof_expires
COMMA

cputime_zero
BRACKET_C
OR

cputime_gt
BRACKET_O

p
MINUS
GREATER

it_prof_expires
COMMA

nt
MINUS
GREATER

expires
DOT

cpu
BRACKET_C
BRACKET_C

p
MINUS
GREATER

it_prof_expires
OP_ASSIGNMENT

nt
MINUS
GREATER

expires
DOT

cpu
SEMICOLON
BREAK
SEMICOLON

case

CPUCLOCK_VIRT
COLON
IF
BRACKET_O

cputime_eq
BRACKET_O

p
MINUS
GREATER

it_virt_expires
COMMA

cputime_zero
BRACKET_C
OR

cputime_gt
BRACKET_O

p
MINUS
GREATER

it_virt_expires
COMMA

nt
MINUS
GREATER

expires
DOT

cpu
BRACKET_C
BRACKET_C

p
MINUS
GREATER

it_virt_expires
OP_ASSIGNMENT

nt
MINUS
GREATER

expires
DOT

cpu
SEMICOLON
BREAK
SEMICOLON

case

CPUCLOCK_SCHED
COLON
IF
BRACKET_O

p
MINUS
GREATER

it_sched_expires
EQ
NUMBER
OR

p
MINUS
GREATER

it_sched_expires
GREATER

nt
MINUS
GREATER

expires
DOT

sched
BRACKET_C

p
MINUS
GREATER

it_sched_expires
OP_ASSIGNMENT

nt
MINUS
GREATER

expires
DOT

sched
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
SWITCH
BRACKET_O

CPUCLOCK_WHICH
BRACKET_O

timer
MINUS
GREATER

it_clock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

default
COLON

BUG
BRACKET_O
BRACKET_C
SEMICOLON

case

CPUCLOCK_VIRT
COLON
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

it_virt_expires
COMMA

cputime_zero
BRACKET_C
AND

cputime_lt
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

it_virt_expires
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

cpu
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

goto

rebalance
SEMICOLON

case

CPUCLOCK_PROF
COLON
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

it_prof_expires
COMMA

cputime_zero
BRACKET_C
AND

cputime_lt
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

it_prof_expires
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

cpu
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

i
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_cur
SEMICOLON
IF
BRACKET_O

i
NOT_EQ

RLIM_INFINITY
AND

i
LE_EQ

cputime_to_secs
BRACKET_O

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

cpu
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

goto

rebalance
SEMICOLON

case

CPUCLOCK_SCHED
COLON

rebalance
COLON

process_timer_rebalance
BRACKET_O

timer
MINUS
GREATER

it
DOT

cpu
DOT

task
COMMA

CPUCLOCK_WHICH
BRACKET_O

timer
MINUS
GREATER

it_clock
BRACKET_C
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
COMMA

now
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

cpu_timer_fire
BRACKET_O
STRUCT

k_itimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

timer
MINUS
GREATER

sigq
EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

wake_up_process
BRACKET_O

timer
MINUS
GREATER

it_process
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

sched
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

timer
MINUS
GREATER

it
DOT

cpu
DOT

incr
DOT

sched
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

posix_timer_event
BRACKET_O

timer
COMMA
NUMBER
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

sched
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

posix_timer_event
BRACKET_O

timer
COMMA
PLUS
PLUS

timer
MINUS
GREATER

it_requeue_pending
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

posix_cpu_timer_schedule
BRACKET_O

timer
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
TYPE_INT

posix_cpu_timer_set
BRACKET_O
STRUCT

k_itimer
MULT

timer
COMMA
TYPE_INT

flags
COMMA
STRUCT

itimerspec
MULT

new
COMMA
STRUCT

itimerspec
MULT

old
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
OP_ASSIGNMENT

timer
MINUS
GREATER

it
DOT

cpu
DOT

task
SEMICOLON

union

cpu_time_count

old_expires
COMMA

new_expires
COMMA

val
SEMICOLON
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ESRCH
SEMICOLON
CURLY_BRACKET_C

new_expires
OP_ASSIGNMENT

timespec_to_sample
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA
AMPERSANT

new
MINUS
GREATER

it_value
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

signal
EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

put_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

task
OP_ASSIGNMENT

NULL
SEMICOLON

return
MINUS

ESRCH
SEMICOLON
CURLY_BRACKET_C

BUG_ON
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

old_expires
OP_ASSIGNMENT

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

timer
MINUS
GREATER

it
DOT

cpu
DOT

firing
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

timer
MINUS
GREATER

it
DOT

cpu
DOT

firing
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

ret
OP_ASSIGNMENT

TIMER_RETRY
SEMICOLON
CURLY_BRACKET_C
ELSE

list_del_init
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

it
DOT

cpu
DOT

entry
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

CPUCLOCK_PERTHREAD
BRACKET_O

timer
MINUS
GREATER

it_clock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

cpu_clock_sample
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

p
COMMA
AMPERSANT

val
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

cpu_clock_sample_group
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

p
COMMA
AMPERSANT

val
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

old
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

old_expires
DOT

sched
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

old
MINUS
GREATER

it_value
DOT

tv_sec
OP_ASSIGNMENT
NUMBER
SEMICOLON

old
MINUS
GREATER

it_value
DOT

tv_nsec
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

bump_cpu_timer
BRACKET_O

timer
COMMA

val
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpu_time_before
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

val
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

old_expires
OP_ASSIGNMENT

cpu_time_sub
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
COMMA

val
BRACKET_C
SEMICOLON

sample_to_timespec
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

old_expires
COMMA
AMPERSANT

old
MINUS
GREATER

it_value
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

old
MINUS
GREATER

it_value
DOT

tv_nsec
OP_ASSIGNMENT
NUMBER
SEMICOLON

old
MINUS
GREATER

it_value
DOT

tv_sec
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

ret
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

new_expires
DOT

sched
NOT_EQ
NUMBER
AND
NOT
BRACKET_O

flags
AMPERSANT

TIMER_ABSTIME
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

cpu_time_add
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA
AMPERSANT

new_expires
COMMA

val
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
OP_ASSIGNMENT

new_expires
SEMICOLON
IF
BRACKET_O

new_expires
DOT

sched
NOT_EQ
NUMBER
AND
BRACKET_O

timer
MINUS
GREATER

it_sigev_notify
AMPERSANT
TILDE

SIGEV_THREAD_ID
BRACKET_C
NOT_EQ

SIGEV_NONE
AND

cpu_time_before
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

val
COMMA

new_expires
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

arm_timer
BRACKET_O

timer
COMMA

val
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

incr
OP_ASSIGNMENT

timespec_to_sample
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA
AMPERSANT

new
MINUS
GREATER

it_interval
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

it_requeue_pending
OP_ASSIGNMENT
BRACKET_O

timer
MINUS
GREATER

it_requeue_pending
PLUS
NUMBER
BRACKET_C
AMPERSANT
TILDE

REQUEUE_PENDING
SEMICOLON

timer
MINUS
GREATER

it_overrun_last
OP_ASSIGNMENT
NUMBER
SEMICOLON

timer
MINUS
GREATER

it_overrun
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

new_expires
DOT

sched
NOT_EQ
NUMBER
AND
BRACKET_O

timer
MINUS
GREATER

it_sigev_notify
AMPERSANT
TILDE

SIGEV_THREAD_ID
BRACKET_C
NOT_EQ

SIGEV_NONE
AND
NOT

cpu_time_before
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

val
COMMA

new_expires
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

cpu_timer_fire
BRACKET_O

timer
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON
IF
BRACKET_O

old
BRACKET_C
CURLY_BRACKET_O

sample_to_timespec
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

incr
COMMA
AMPERSANT

old
MINUS
GREATER

it_interval
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

void

posix_cpu_timer_get
BRACKET_O
STRUCT

k_itimer
MULT

timer
COMMA
STRUCT

itimerspec
MULT

itp
BRACKET_C
CURLY_BRACKET_O

union

cpu_time_count

now
SEMICOLON
STRUCT

task_struct
MULT

p
OP_ASSIGNMENT

timer
MINUS
GREATER

it
DOT

cpu
DOT

task
SEMICOLON
TYPE_INT

clear_dead
SEMICOLON

sample_to_timespec
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

incr
COMMA
AMPERSANT

itp
MINUS
GREATER

it_interval
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

sched
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

itp
MINUS
GREATER

it_value
DOT

tv_sec
OP_ASSIGNMENT

itp
MINUS
GREATER

it_value
DOT

tv_nsec
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

p
EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

dead
COLON

sample_to_timespec
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
COMMA
AMPERSANT

itp
MINUS
GREATER

it_value
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

CPUCLOCK_PERTHREAD
BRACKET_O

timer
MINUS
GREATER

it_clock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

cpu_clock_sample
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

p
COMMA
AMPERSANT

now
BRACKET_C
SEMICOLON

clear_dead
OP_ASSIGNMENT

p
MINUS
GREATER

exit_state
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

signal
EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

put_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

task
OP_ASSIGNMENT

NULL
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

sched
OP_ASSIGNMENT
NUMBER
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

goto

dead
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

cpu_clock_sample_group
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

p
COMMA
AMPERSANT

now
BRACKET_C
SEMICOLON

clear_dead
OP_ASSIGNMENT
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

exit_state
BRACKET_C
AND

thread_group_empty
BRACKET_O

p
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
BRACKET_O

timer
MINUS
GREATER

it_sigev_notify
AMPERSANT
TILDE

SIGEV_THREAD_ID
BRACKET_C
EQ

SIGEV_NONE
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

timer
MINUS
GREATER

it
DOT

cpu
DOT

incr
DOT

sched
EQ
NUMBER
AND

cpu_time_before
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
COMMA

now
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

sched
OP_ASSIGNMENT
NUMBER
SEMICOLON

itp
MINUS
GREATER

it_value
DOT

tv_sec
OP_ASSIGNMENT

itp
MINUS
GREATER

it_value
DOT

tv_nsec
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

bump_cpu_timer
BRACKET_O

timer
COMMA

now
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

clear_dead
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

clear_dead_task
BRACKET_O

timer
COMMA

now
BRACKET_C
SEMICOLON

goto

dead
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

cpu_time_before
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

now
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

sample_to_timespec
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

cpu_time_sub
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
COMMA

now
BRACKET_C
COMMA
AMPERSANT

itp
MINUS
GREATER

it_value
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

itp
MINUS
GREATER

it_value
DOT

tv_nsec
OP_ASSIGNMENT
NUMBER
SEMICOLON

itp
MINUS
GREATER

it_value
DOT

tv_sec
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

check_thread_timers
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
STRUCT

list_head
MULT

firing
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

maxfire
SEMICOLON
STRUCT

list_head
MULT

timers
OP_ASSIGNMENT

tsk
MINUS
GREATER

cpu_timers
SEMICOLON

maxfire
OP_ASSIGNMENT
NUMBER
SEMICOLON

tsk
MINUS
GREATER

it_prof_expires
OP_ASSIGNMENT

cputime_zero
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O

timers
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_timer_list
MULT

t
OP_ASSIGNMENT

list_first_entry
BRACKET_O

timers
COMMA
STRUCT

cpu_timer_list
COMMA

entry
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
MINUS
MINUS

maxfire
OR

cputime_lt
BRACKET_O

prof_ticks
BRACKET_O

tsk
BRACKET_C
COMMA

t
MINUS
GREATER

expires
DOT

cpu
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

tsk
MINUS
GREATER

it_prof_expires
OP_ASSIGNMENT

t
MINUS
GREATER

expires
DOT

cpu
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

t
MINUS
GREATER

firing
OP_ASSIGNMENT
NUMBER
SEMICOLON

list_move_tail
BRACKET_O
AMPERSANT

t
MINUS
GREATER

entry
COMMA

firing
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PLUS
PLUS

timers
SEMICOLON

maxfire
OP_ASSIGNMENT
NUMBER
SEMICOLON

tsk
MINUS
GREATER

it_virt_expires
OP_ASSIGNMENT

cputime_zero
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O

timers
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_timer_list
MULT

t
OP_ASSIGNMENT

list_first_entry
BRACKET_O

timers
COMMA
STRUCT

cpu_timer_list
COMMA

entry
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
MINUS
MINUS

maxfire
OR

cputime_lt
BRACKET_O

virt_ticks
BRACKET_O

tsk
BRACKET_C
COMMA

t
MINUS
GREATER

expires
DOT

cpu
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

tsk
MINUS
GREATER

it_virt_expires
OP_ASSIGNMENT

t
MINUS
GREATER

expires
DOT

cpu
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

t
MINUS
GREATER

firing
OP_ASSIGNMENT
NUMBER
SEMICOLON

list_move_tail
BRACKET_O
AMPERSANT

t
MINUS
GREATER

entry
COMMA

firing
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PLUS
PLUS

timers
SEMICOLON

maxfire
OP_ASSIGNMENT
NUMBER
SEMICOLON

tsk
MINUS
GREATER

it_sched_expires
OP_ASSIGNMENT
NUMBER
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O

timers
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_timer_list
MULT

t
OP_ASSIGNMENT

list_first_entry
BRACKET_O

timers
COMMA
STRUCT

cpu_timer_list
COMMA

entry
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
MINUS
MINUS

maxfire
OR

tsk
MINUS
GREATER

sched_time
LESS

t
MINUS
GREATER

expires
DOT

sched
BRACKET_C
CURLY_BRACKET_O

tsk
MINUS
GREATER

it_sched_expires
OP_ASSIGNMENT

t
MINUS
GREATER

expires
DOT

sched
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

t
MINUS
GREATER

firing
OP_ASSIGNMENT
NUMBER
SEMICOLON

list_move_tail
BRACKET_O
AMPERSANT

t
MINUS
GREATER

entry
COMMA

firing
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

check_process_timers
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
STRUCT

list_head
MULT

firing
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

maxfire
SEMICOLON
STRUCT

signal_struct
MULT
CONST

sig
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
SEMICOLON

cputime_t

utime
COMMA

stime
COMMA

ptime
COMMA

virt_expires
COMMA

prof_expires
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

sched_time
COMMA

sched_expires
SEMICOLON
STRUCT

task_struct
MULT

t
SEMICOLON
STRUCT

list_head
MULT

timers
OP_ASSIGNMENT

sig
MINUS
GREATER

cpu_timers
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

timers
CORNER_BRACKET_O

CPUCLOCK_PROF
CORNER_BRACKET_C
BRACKET_C
AND

cputime_eq
BRACKET_O

sig
MINUS
GREATER

it_prof_expires
COMMA

cputime_zero
BRACKET_C
AND

sig
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_cur
EQ

RLIM_INFINITY
AND

list_empty
BRACKET_O
AMPERSANT

timers
CORNER_BRACKET_O

CPUCLOCK_VIRT
CORNER_BRACKET_C
BRACKET_C
AND

cputime_eq
BRACKET_O

sig
MINUS
GREATER

it_virt_expires
COMMA

cputime_zero
BRACKET_C
AND

list_empty
BRACKET_O
AMPERSANT

timers
CORNER_BRACKET_O

CPUCLOCK_SCHED
CORNER_BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON

utime
OP_ASSIGNMENT

sig
MINUS
GREATER

utime
SEMICOLON

stime
OP_ASSIGNMENT

sig
MINUS
GREATER

stime
SEMICOLON

sched_time
OP_ASSIGNMENT

sig
MINUS
GREATER

sched_time
SEMICOLON

t
OP_ASSIGNMENT

tsk
SEMICOLON
DO
CURLY_BRACKET_O

utime
OP_ASSIGNMENT

cputime_add
BRACKET_O

utime
COMMA

t
MINUS
GREATER

utime
BRACKET_C
SEMICOLON

stime
OP_ASSIGNMENT

cputime_add
BRACKET_O

stime
COMMA

t
MINUS
GREATER

stime
BRACKET_C
SEMICOLON

sched_time
ASSIGN_PLUS

t
MINUS
GREATER

sched_time
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

tsk
BRACKET_C
SEMICOLON

ptime
OP_ASSIGNMENT

cputime_add
BRACKET_O

utime
COMMA

stime
BRACKET_C
SEMICOLON

maxfire
OP_ASSIGNMENT
NUMBER
SEMICOLON

prof_expires
OP_ASSIGNMENT

cputime_zero
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O

timers
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_timer_list
MULT

t
OP_ASSIGNMENT

list_first_entry
BRACKET_O

timers
COMMA
STRUCT

cpu_timer_list
COMMA

entry
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
MINUS
MINUS

maxfire
OR

cputime_lt
BRACKET_O

ptime
COMMA

t
MINUS
GREATER

expires
DOT

cpu
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

prof_expires
OP_ASSIGNMENT

t
MINUS
GREATER

expires
DOT

cpu
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

t
MINUS
GREATER

firing
OP_ASSIGNMENT
NUMBER
SEMICOLON

list_move_tail
BRACKET_O
AMPERSANT

t
MINUS
GREATER

entry
COMMA

firing
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PLUS
PLUS

timers
SEMICOLON

maxfire
OP_ASSIGNMENT
NUMBER
SEMICOLON

virt_expires
OP_ASSIGNMENT

cputime_zero
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O

timers
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_timer_list
MULT

t
OP_ASSIGNMENT

list_first_entry
BRACKET_O

timers
COMMA
STRUCT

cpu_timer_list
COMMA

entry
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
MINUS
MINUS

maxfire
OR

cputime_lt
BRACKET_O

utime
COMMA

t
MINUS
GREATER

expires
DOT

cpu
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

virt_expires
OP_ASSIGNMENT

t
MINUS
GREATER

expires
DOT

cpu
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

t
MINUS
GREATER

firing
OP_ASSIGNMENT
NUMBER
SEMICOLON

list_move_tail
BRACKET_O
AMPERSANT

t
MINUS
GREATER

entry
COMMA

firing
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PLUS
PLUS

timers
SEMICOLON

maxfire
OP_ASSIGNMENT
NUMBER
SEMICOLON

sched_expires
OP_ASSIGNMENT
NUMBER
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O

timers
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_timer_list
MULT

t
OP_ASSIGNMENT

list_first_entry
BRACKET_O

timers
COMMA
STRUCT

cpu_timer_list
COMMA

entry
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
MINUS
MINUS

maxfire
OR

sched_time
LESS

t
MINUS
GREATER

expires
DOT

sched
BRACKET_C
CURLY_BRACKET_O

sched_expires
OP_ASSIGNMENT

t
MINUS
GREATER

expires
DOT

sched
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

t
MINUS
GREATER

firing
OP_ASSIGNMENT
NUMBER
SEMICOLON

list_move_tail
BRACKET_O
AMPERSANT

t
MINUS
GREATER

entry
COMMA

firing
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

sig
MINUS
GREATER

it_prof_expires
COMMA

cputime_zero
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cputime_ge
BRACKET_O

ptime
COMMA

sig
MINUS
GREATER

it_prof_expires
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

sig
MINUS
GREATER

it_prof_expires
OP_ASSIGNMENT

sig
MINUS
GREATER

it_prof_incr
SEMICOLON
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

sig
MINUS
GREATER

it_prof_expires
COMMA

cputime_zero
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

sig
MINUS
GREATER

it_prof_expires
OP_ASSIGNMENT

cputime_add
BRACKET_O

sig
MINUS
GREATER

it_prof_expires
COMMA

ptime
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__group_send_sig_info
BRACKET_O

SIGPROF
COMMA

SEND_SIG_PRIV
COMMA

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

sig
MINUS
GREATER

it_prof_expires
COMMA

cputime_zero
BRACKET_C
AND
BRACKET_O

cputime_eq
BRACKET_O

prof_expires
COMMA

cputime_zero
BRACKET_C
OR

cputime_lt
BRACKET_O

sig
MINUS
GREATER

it_prof_expires
COMMA

prof_expires
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

prof_expires
OP_ASSIGNMENT

sig
MINUS
GREATER

it_prof_expires
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

sig
MINUS
GREATER

it_virt_expires
COMMA

cputime_zero
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cputime_ge
BRACKET_O

utime
COMMA

sig
MINUS
GREATER

it_virt_expires
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

sig
MINUS
GREATER

it_virt_expires
OP_ASSIGNMENT

sig
MINUS
GREATER

it_virt_incr
SEMICOLON
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

sig
MINUS
GREATER

it_virt_expires
COMMA

cputime_zero
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

sig
MINUS
GREATER

it_virt_expires
OP_ASSIGNMENT

cputime_add
BRACKET_O

sig
MINUS
GREATER

it_virt_expires
COMMA

utime
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__group_send_sig_info
BRACKET_O

SIGVTALRM
COMMA

SEND_SIG_PRIV
COMMA

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

sig
MINUS
GREATER

it_virt_expires
COMMA

cputime_zero
BRACKET_C
AND
BRACKET_O

cputime_eq
BRACKET_O

virt_expires
COMMA

cputime_zero
BRACKET_C
OR

cputime_lt
BRACKET_O

sig
MINUS
GREATER

it_virt_expires
COMMA

virt_expires
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

virt_expires
OP_ASSIGNMENT

sig
MINUS
GREATER

it_virt_expires
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

sig
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_cur
NOT_EQ

RLIM_INFINITY
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

psecs
OP_ASSIGNMENT

cputime_to_secs
BRACKET_O

ptime
BRACKET_C
SEMICOLON

cputime_t

x
SEMICOLON
IF
BRACKET_O

psecs
GR_EQ

sig
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_max
BRACKET_C
CURLY_BRACKET_O

__group_send_sig_info
BRACKET_O

SIGKILL
COMMA

SEND_SIG_PRIV
COMMA

tsk
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

psecs
GR_EQ

sig
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_cur
BRACKET_C
CURLY_BRACKET_O

__group_send_sig_info
BRACKET_O

SIGXCPU
COMMA

SEND_SIG_PRIV
COMMA

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

sig
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_cur
LESS

sig
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_max
BRACKET_C
CURLY_BRACKET_O

sig
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_cur
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

x
OP_ASSIGNMENT

secs_to_cputime
BRACKET_O

sig
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_cur
BRACKET_C
SEMICOLON
IF
BRACKET_O

cputime_eq
BRACKET_O

prof_expires
COMMA

cputime_zero
BRACKET_C
OR

cputime_lt
BRACKET_O

x
COMMA

prof_expires
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

prof_expires
OP_ASSIGNMENT

x
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

prof_expires
COMMA

cputime_zero
BRACKET_C
OR
NOT

cputime_eq
BRACKET_O

virt_expires
COMMA

cputime_zero
BRACKET_C
OR

sched_expires
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

cputime_t

prof_left
COMMA

virt_left
COMMA

ticks
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

sched_left
COMMA

sched
SEMICOLON
CONST
TYPE_UNSIGNED
TYPE_INT

nthreads
OP_ASSIGNMENT

atomic_read
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

live
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

nthreads
BRACKET_C

return
SEMICOLON

prof_left
OP_ASSIGNMENT

cputime_sub
BRACKET_O

prof_expires
COMMA

utime
BRACKET_C
SEMICOLON

prof_left
OP_ASSIGNMENT

cputime_sub
BRACKET_O

prof_left
COMMA

stime
BRACKET_C
SEMICOLON

prof_left
OP_ASSIGNMENT

cputime_div_non_zero
BRACKET_O

prof_left
COMMA

nthreads
BRACKET_C
SEMICOLON

virt_left
OP_ASSIGNMENT

cputime_sub
BRACKET_O

virt_expires
COMMA

utime
BRACKET_C
SEMICOLON

virt_left
OP_ASSIGNMENT

cputime_div_non_zero
BRACKET_O

virt_left
COMMA

nthreads
BRACKET_C
SEMICOLON
IF
BRACKET_O

sched_expires
BRACKET_C
CURLY_BRACKET_O

sched_left
OP_ASSIGNMENT

sched_expires
MINUS

sched_time
SEMICOLON

do_div
BRACKET_O

sched_left
COMMA

nthreads
BRACKET_C
SEMICOLON

sched_left
OP_ASSIGNMENT

max_t
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
COMMA

sched_left
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

sched_left
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

t
OP_ASSIGNMENT

tsk
SEMICOLON
DO
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

t
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

ticks
OP_ASSIGNMENT

cputime_add
BRACKET_O

cputime_add
BRACKET_O

t
MINUS
GREATER

utime
COMMA

t
MINUS
GREATER

stime
BRACKET_C
COMMA

prof_left
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

prof_expires
COMMA

cputime_zero
BRACKET_C
AND
BRACKET_O

cputime_eq
BRACKET_O

t
MINUS
GREATER

it_prof_expires
COMMA

cputime_zero
BRACKET_C
OR

cputime_gt
BRACKET_O

t
MINUS
GREATER

it_prof_expires
COMMA

ticks
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

t
MINUS
GREATER

it_prof_expires
OP_ASSIGNMENT

ticks
SEMICOLON
CURLY_BRACKET_C

ticks
OP_ASSIGNMENT

cputime_add
BRACKET_O

t
MINUS
GREATER

utime
COMMA

virt_left
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O

virt_expires
COMMA

cputime_zero
BRACKET_C
AND
BRACKET_O

cputime_eq
BRACKET_O

t
MINUS
GREATER

it_virt_expires
COMMA

cputime_zero
BRACKET_C
OR

cputime_gt
BRACKET_O

t
MINUS
GREATER

it_virt_expires
COMMA

ticks
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

t
MINUS
GREATER

it_virt_expires
OP_ASSIGNMENT

ticks
SEMICOLON
CURLY_BRACKET_C

sched
OP_ASSIGNMENT

t
MINUS
GREATER

sched_time
PLUS

sched_left
SEMICOLON
IF
BRACKET_O

sched_expires
AND
BRACKET_O

t
MINUS
GREATER

it_sched_expires
EQ
NUMBER
OR

t
MINUS
GREATER

it_sched_expires
GREATER

sched
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

t
MINUS
GREATER

it_sched_expires
OP_ASSIGNMENT

sched
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
WHILE
BRACKET_O
BRACKET_O

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
BRACKET_C
NOT_EQ

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

posix_cpu_timer_schedule
BRACKET_O
STRUCT

k_itimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
OP_ASSIGNMENT

timer
MINUS
GREATER

it
DOT

cpu
DOT

task
SEMICOLON

union

cpu_time_count

now
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
EQ

NULL
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

CPUCLOCK_PERTHREAD
BRACKET_O

timer
MINUS
GREATER

it_clock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

cpu_clock_sample
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

p
COMMA
AMPERSANT

now
BRACKET_C
SEMICOLON

bump_cpu_timer
BRACKET_O

timer
COMMA

now
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

exit_state
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

clear_dead_task
BRACKET_O

timer
COMMA

now
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

signal
EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

put_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

task
OP_ASSIGNMENT

p
OP_ASSIGNMENT

NULL
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

expires
DOT

sched
OP_ASSIGNMENT
NUMBER
SEMICOLON

goto

out_unlock
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

exit_state
BRACKET_C
AND

thread_group_empty
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

clear_dead_task
BRACKET_O

timer
COMMA

now
BRACKET_C
SEMICOLON

goto

out_unlock
SEMICOLON
CURLY_BRACKET_C

cpu_clock_sample_group
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

p
COMMA
AMPERSANT

now
BRACKET_C
SEMICOLON

bump_cpu_timer
BRACKET_O

timer
COMMA

now
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

arm_timer
BRACKET_O

timer
COMMA

now
BRACKET_C
SEMICOLON

out_unlock
COLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

out
COLON

timer
MINUS
GREATER

it_overrun_last
OP_ASSIGNMENT

timer
MINUS
GREATER

it_overrun
SEMICOLON

timer
MINUS
GREATER

it_overrun
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
PLUS
PLUS

timer
MINUS
GREATER

it_requeue_pending
SEMICOLON
CURLY_BRACKET_C

void

run_posix_cpu_timers
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O

LIST_HEAD
BRACKET_O

firing
BRACKET_C
SEMICOLON
STRUCT

k_itimer
MULT

timer
COMMA
MULT

next
SEMICOLON

BUG_ON
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
PP_DEFINE

UNEXPIRED
BRACKET_O

clock
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O

cputime_eq
BRACKET_O

tsk
MINUS
GREATER

it_
DOUBLE_HASH

clock
DOUBLE_HASH

_expires
COMMA

cputime_zero
BRACKET_C
OR
BACKLASHED_NEWLINE

cputime_lt
BRACKET_O

clock
DOUBLE_HASH

_ticks
BRACKET_O

tsk
BRACKET_C
COMMA

tsk
MINUS
GREATER

it_
DOUBLE_HASH

clock
DOUBLE_HASH

_expires
BRACKET_C
BRACKET_C
IF
BRACKET_O

UNEXPIRED
BRACKET_O

prof
BRACKET_C
AND

UNEXPIRED
BRACKET_O

virt
BRACKET_C
AND
BRACKET_O

tsk
MINUS
GREATER

it_sched_expires
EQ
NUMBER
OR

tsk
MINUS
GREATER

sched_time
LESS

tsk
MINUS
GREATER

it_sched_expires
BRACKET_C
BRACKET_C

return
SEMICOLON
HASH

undef

UNEXPIRED

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

tsk
MINUS
GREATER

signal
NOT_EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

check_thread_timers
BRACKET_O

tsk
COMMA
AMPERSANT

firing
BRACKET_C
SEMICOLON

check_process_timers
BRACKET_O

tsk
COMMA
AMPERSANT

firing
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

list_for_each_entry_safe
BRACKET_O

timer
COMMA

next
COMMA
AMPERSANT

firing
COMMA

it
DOT

cpu
DOT

entry
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

firing
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

it_lock
BRACKET_C
SEMICOLON

list_del_init
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

it
DOT

cpu
DOT

entry
BRACKET_C
SEMICOLON

firing
OP_ASSIGNMENT

timer
MINUS
GREATER

it
DOT

cpu
DOT

firing
SEMICOLON

timer
MINUS
GREATER

it
DOT

cpu
DOT

firing
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

firing
GR_EQ
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

cpu_timer_fire
BRACKET_O

timer
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

it_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

set_process_cpu_timer
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
TYPE_UNSIGNED
TYPE_INT

clock_idx
COMMA

cputime_t
MULT

newval
COMMA

cputime_t
MULT

oldval
BRACKET_C
CURLY_BRACKET_O

union

cpu_time_count

now
SEMICOLON
STRUCT

list_head
MULT

head
SEMICOLON

BUG_ON
BRACKET_O

clock_idx
EQ

CPUCLOCK_SCHED
BRACKET_C
SEMICOLON

cpu_clock_sample_group_locked
BRACKET_O

clock_idx
COMMA

tsk
COMMA
AMPERSANT

now
BRACKET_C
SEMICOLON
IF
BRACKET_O

oldval
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

cputime_eq
BRACKET_O
MULT

oldval
COMMA

cputime_zero
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cputime_le
BRACKET_O
MULT

oldval
COMMA

now
DOT

cpu
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
MULT

oldval
OP_ASSIGNMENT

jiffies_to_cputime
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
MULT

oldval
OP_ASSIGNMENT

cputime_sub
BRACKET_O
MULT

oldval
COMMA

now
DOT

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

cputime_eq
BRACKET_O
MULT

newval
COMMA

cputime_zero
BRACKET_C
BRACKET_C

return
SEMICOLON
MULT

newval
OP_ASSIGNMENT

cputime_add
BRACKET_O
MULT

newval
COMMA

now
DOT

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_CPU
CORNER_BRACKET_C
DOT

rlim_cur
LESS

cputime_to_secs
BRACKET_O
MULT

newval
BRACKET_C
BRACKET_C

return
SEMICOLON
CURLY_BRACKET_C

head
OP_ASSIGNMENT
AMPERSANT

tsk
MINUS
GREATER

signal
MINUS
GREATER

cpu_timers
CORNER_BRACKET_O

clock_idx
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O

head
BRACKET_C
OR

cputime_ge
BRACKET_O

list_first_entry
BRACKET_O

head
COMMA
STRUCT

cpu_timer_list
COMMA

entry
BRACKET_C
MINUS
GREATER

expires
DOT

cpu
COMMA
MULT

newval
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

union

cpu_time_count

expires
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

sched
OP_ASSIGNMENT
NUMBER
CURLY_BRACKET_C
SEMICOLON

expires
DOT

cpu
OP_ASSIGNMENT
MULT

newval
SEMICOLON

process_timer_rebalance
BRACKET_O

tsk
COMMA

clock_idx
COMMA

expires
COMMA

now
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

do_cpu_nanosleep
BRACKET_O
CONST

clockid_t

which_clock
COMMA
TYPE_INT

flags
COMMA
STRUCT

timespec
MULT

rqtp
COMMA
STRUCT

itimerspec
MULT

it
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_itimer

timer
SEMICOLON
TYPE_INT

error
SEMICOLON

memset
BRACKET_O
AMPERSANT

timer
COMMA
NUMBER
COMMA

sizeof

timer
BRACKET_C
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

timer
DOT

it_lock
BRACKET_C
SEMICOLON

timer
DOT

it_clock
OP_ASSIGNMENT

which_clock
SEMICOLON

timer
DOT

it_overrun
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

error
OP_ASSIGNMENT

posix_cpu_timer_create
BRACKET_O
AMPERSANT

timer
BRACKET_C
SEMICOLON

timer
DOT

it_process
OP_ASSIGNMENT

current
SEMICOLON
IF
BRACKET_O
NOT

error
BRACKET_C
CURLY_BRACKET_O

static
STRUCT

itimerspec

zero_it
SEMICOLON

memset
BRACKET_O

it
COMMA
NUMBER
COMMA

sizeof
MULT

it
BRACKET_C
SEMICOLON

it
MINUS
GREATER

it_value
OP_ASSIGNMENT
MULT

rqtp
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

timer
DOT

it_lock
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

posix_cpu_timer_set
BRACKET_O
AMPERSANT

timer
COMMA

flags
COMMA

it
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irq
BRACKET_O
AMPERSANT

timer
DOT

it_lock
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

signal_pending
BRACKET_O

current
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

timer
DOT

it
DOT

cpu
DOT

expires
DOT

sched
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irq
BRACKET_O
AMPERSANT

timer
DOT

it_lock
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

timer
DOT

it_lock
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

timer
DOT

it_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

sample_to_timespec
BRACKET_O

which_clock
COMMA

timer
DOT

it
DOT

cpu
DOT

expires
COMMA

rqtp
BRACKET_C
SEMICOLON

posix_cpu_timer_set
BRACKET_O
AMPERSANT

timer
COMMA
NUMBER
COMMA
AMPERSANT

zero_it
COMMA

it
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

timer
DOT

it_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

it
MINUS
GREATER

it_value
DOT

tv_sec
LOGICAL_OR

it
MINUS
GREATER

it_value
DOT

tv_nsec
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

error
OP_ASSIGNMENT
MINUS

ERESTART_RESTARTBLOCK
SEMICOLON
CURLY_BRACKET_C

return

error
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

posix_cpu_nsleep
BRACKET_O
CONST

clockid_t

which_clock
COMMA
TYPE_INT

flags
COMMA
STRUCT

timespec
MULT

rqtp
COMMA
STRUCT

timespec

__user
MULT

rmtp
BRACKET_C
CURLY_BRACKET_O
STRUCT

restart_block
MULT

restart_block
OP_ASSIGNMENT
AMPERSANT

current_thread_info
BRACKET_O
BRACKET_C
MINUS
GREATER

restart_block
SEMICOLON
STRUCT

itimerspec

it
SEMICOLON
TYPE_INT

error
SEMICOLON
IF
BRACKET_O

CPUCLOCK_PERTHREAD
BRACKET_O

which_clock
BRACKET_C
AND
BRACKET_O

CPUCLOCK_PID
BRACKET_O

which_clock
BRACKET_C
EQ
NUMBER
OR

CPUCLOCK_PID
BRACKET_O

which_clock
BRACKET_C
EQ

current
MINUS
GREATER

pid
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

error
OP_ASSIGNMENT

do_cpu_nanosleep
BRACKET_O

which_clock
COMMA

flags
COMMA

rqtp
COMMA
AMPERSANT

it
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
EQ
MINUS

ERESTART_RESTARTBLOCK
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

flags
AMPERSANT

TIMER_ABSTIME
BRACKET_C

return
MINUS

ERESTARTNOHAND
SEMICOLON
IF
BRACKET_O

rmtp
NOT_EQ

NULL
AND

copy_to_user
BRACKET_O

rmtp
COMMA
AMPERSANT

it
DOT

it_value
COMMA

sizeof
MULT

rmtp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

restart_block
MINUS
GREATER

fn
OP_ASSIGNMENT

posix_cpu_nsleep_restart
SEMICOLON

restart_block
MINUS
GREATER

arg0
OP_ASSIGNMENT

which_clock
SEMICOLON

restart_block
MINUS
GREATER

arg1
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

rmtp
SEMICOLON

restart_block
MINUS
GREATER

arg2
OP_ASSIGNMENT

rqtp
MINUS
GREATER

tv_sec
SEMICOLON

restart_block
MINUS
GREATER

arg3
OP_ASSIGNMENT

rqtp
MINUS
GREATER

tv_nsec
SEMICOLON
CURLY_BRACKET_C

return

error
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

posix_cpu_nsleep_restart
BRACKET_O
STRUCT

restart_block
MULT

restart_block
BRACKET_C
CURLY_BRACKET_O

clockid_t

which_clock
OP_ASSIGNMENT

restart_block
MINUS
GREATER

arg0
SEMICOLON
STRUCT

timespec

__user
MULT

rmtp
SEMICOLON
STRUCT

timespec

t
SEMICOLON
STRUCT

itimerspec

it
SEMICOLON
TYPE_INT

error
SEMICOLON

rmtp
OP_ASSIGNMENT
BRACKET_O
STRUCT

timespec

__user
MULT
BRACKET_C

restart_block
MINUS
GREATER

arg1
SEMICOLON

t
DOT

tv_sec
OP_ASSIGNMENT

restart_block
MINUS
GREATER

arg2
SEMICOLON

t
DOT

tv_nsec
OP_ASSIGNMENT

restart_block
MINUS
GREATER

arg3
SEMICOLON

restart_block
MINUS
GREATER

fn
OP_ASSIGNMENT

do_no_restart_syscall
SEMICOLON

error
OP_ASSIGNMENT

do_cpu_nanosleep
BRACKET_O

which_clock
COMMA

TIMER_ABSTIME
COMMA
AMPERSANT

t
COMMA
AMPERSANT

it
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
EQ
MINUS

ERESTART_RESTARTBLOCK
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

rmtp
NOT_EQ

NULL
AND

copy_to_user
BRACKET_O

rmtp
COMMA
AMPERSANT

it
DOT

it_value
COMMA

sizeof
MULT

rmtp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

restart_block
MINUS
GREATER

fn
OP_ASSIGNMENT

posix_cpu_nsleep_restart
SEMICOLON

restart_block
MINUS
GREATER

arg0
OP_ASSIGNMENT

which_clock
SEMICOLON

restart_block
MINUS
GREATER

arg1
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

rmtp
SEMICOLON

restart_block
MINUS
GREATER

arg2
OP_ASSIGNMENT

t
DOT

tv_sec
SEMICOLON

restart_block
MINUS
GREATER

arg3
OP_ASSIGNMENT

t
DOT

tv_nsec
SEMICOLON
CURLY_BRACKET_C

return

error
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

PROCESS_CLOCK

MAKE_PROCESS_CPUCLOCK
BRACKET_O
NUMBER
COMMA

CPUCLOCK_SCHED
BRACKET_C
PP_DEFINE

THREAD_CLOCK

MAKE_THREAD_CPUCLOCK
BRACKET_O
NUMBER
COMMA

CPUCLOCK_SCHED
BRACKET_C

static
TYPE_INT

process_cpu_clock_getres
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O

return

posix_cpu_clock_getres
BRACKET_O

PROCESS_CLOCK
COMMA

tp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

process_cpu_clock_get
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O

return

posix_cpu_clock_get
BRACKET_O

PROCESS_CLOCK
COMMA

tp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

process_cpu_timer_create
BRACKET_O
STRUCT

k_itimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O

timer
MINUS
GREATER

it_clock
OP_ASSIGNMENT

PROCESS_CLOCK
SEMICOLON

return

posix_cpu_timer_create
BRACKET_O

timer
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

process_cpu_nsleep
BRACKET_O
CONST

clockid_t

which_clock
COMMA
TYPE_INT

flags
COMMA
STRUCT

timespec
MULT

rqtp
COMMA
STRUCT

timespec

__user
MULT

rmtp
BRACKET_C
CURLY_BRACKET_O

return

posix_cpu_nsleep
BRACKET_O

PROCESS_CLOCK
COMMA

flags
COMMA

rqtp
COMMA

rmtp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_LONG

process_cpu_nsleep_restart
BRACKET_O
STRUCT

restart_block
MULT

restart_block
BRACKET_C
CURLY_BRACKET_O

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

thread_cpu_clock_getres
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O

return

posix_cpu_clock_getres
BRACKET_O

THREAD_CLOCK
COMMA

tp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

thread_cpu_clock_get
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O

return

posix_cpu_clock_get
BRACKET_O

THREAD_CLOCK
COMMA

tp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

thread_cpu_timer_create
BRACKET_O
STRUCT

k_itimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O

timer
MINUS
GREATER

it_clock
OP_ASSIGNMENT

THREAD_CLOCK
SEMICOLON

return

posix_cpu_timer_create
BRACKET_O

timer
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

thread_cpu_nsleep
BRACKET_O
CONST

clockid_t

which_clock
COMMA
TYPE_INT

flags
COMMA
STRUCT

timespec
MULT

rqtp
COMMA
STRUCT

timespec

__user
MULT

rmtp
BRACKET_C
CURLY_BRACKET_O

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

static
TYPE_LONG

thread_cpu_nsleep_restart
BRACKET_O
STRUCT

restart_block
MULT

restart_block
BRACKET_C
CURLY_BRACKET_O

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

static

__init
TYPE_INT

init_posix_cpu_timers
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_clock

process
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

clock_getres
OP_ASSIGNMENT

process_cpu_clock_getres
COMMA
DOT

clock_get
OP_ASSIGNMENT

process_cpu_clock_get
COMMA
DOT

clock_set
OP_ASSIGNMENT

do_posix_clock_nosettime
COMMA
DOT

timer_create
OP_ASSIGNMENT

process_cpu_timer_create
COMMA
DOT

nsleep
OP_ASSIGNMENT

process_cpu_nsleep
COMMA
DOT

nsleep_restart
OP_ASSIGNMENT

process_cpu_nsleep_restart
COMMA
CURLY_BRACKET_C
SEMICOLON
STRUCT

k_clock

thread
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

clock_getres
OP_ASSIGNMENT

thread_cpu_clock_getres
COMMA
DOT

clock_get
OP_ASSIGNMENT

thread_cpu_clock_get
COMMA
DOT

clock_set
OP_ASSIGNMENT

do_posix_clock_nosettime
COMMA
DOT

timer_create
OP_ASSIGNMENT

thread_cpu_timer_create
COMMA
DOT

nsleep
OP_ASSIGNMENT

thread_cpu_nsleep
COMMA
DOT

nsleep_restart
OP_ASSIGNMENT

thread_cpu_nsleep_restart
COMMA
CURLY_BRACKET_C
SEMICOLON

register_posix_clock
BRACKET_O

CLOCK_PROCESS_CPUTIME_ID
COMMA
AMPERSANT

process
BRACKET_C
SEMICOLON

register_posix_clock
BRACKET_O

CLOCK_THREAD_CPUTIME_ID
COMMA
AMPERSANT

thread
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__initcall
BRACKET_O

init_posix_cpu_timers
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static
STRUCT

kmem_cache
MULT

posix_timers_cache
SEMICOLON

static
STRUCT

idr

posix_timers_id
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

idr_lock
BRACKET_C
SEMICOLON
PP_IF

SIGEV_THREAD_ID
NOT_EQ
BRACKET_O

SIGEV_THREAD_ID
AMPERSANT
BACKLASHED_NEWLINE
TILDE
BRACKET_O

SIGEV_SIGNAL
LOGICAL_OR

SIGEV_NONE
LOGICAL_OR

SIGEV_THREAD
BRACKET_C
BRACKET_C
PP_ERROR
STRING
PP_ENDIF

static
STRUCT

k_clock

posix_clocks
CORNER_BRACKET_O

MAX_CLOCKS
CORNER_BRACKET_C
SEMICOLON

static
TYPE_INT

common_nsleep
BRACKET_O
CONST

clockid_t
COMMA
TYPE_INT

flags
COMMA
STRUCT

timespec
MULT

t
COMMA
STRUCT

timespec

__user
MULT

rmtp
BRACKET_C
SEMICOLON

static

void

common_timer_get
BRACKET_O
STRUCT

k_itimer
MULT
COMMA
STRUCT

itimerspec
MULT
BRACKET_C
SEMICOLON

static
TYPE_INT

common_timer_set
BRACKET_O
STRUCT

k_itimer
MULT
COMMA
TYPE_INT
COMMA
STRUCT

itimerspec
MULT
COMMA
STRUCT

itimerspec
MULT
BRACKET_C
SEMICOLON

static
TYPE_INT

common_timer_del
BRACKET_O
STRUCT

k_itimer
MULT

timer
BRACKET_C
SEMICOLON

static

enum

hrtimer_restart

posix_timer_fn
BRACKET_O
STRUCT

hrtimer
MULT

data
BRACKET_C
SEMICOLON

static
STRUCT

k_itimer
MULT

lock_timer
BRACKET_O

timer_t

timer_id
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

flags
BRACKET_C
SEMICOLON

static

inline

void

unlock_timer
BRACKET_O
STRUCT

k_itimer
MULT

timr
COMMA
TYPE_UNSIGNED
TYPE_LONG

flags
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

timr
MINUS
GREATER

it_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

CLOCK_DISPATCH
BRACKET_O

clock
COMMA

call
COMMA

arglist
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O
BRACKET_O

clock
BRACKET_C
LESS
NUMBER
QUESTION_MARK

posix_cpu_
DOUBLE_HASH

call

arglist
COLON
BACKLASHED_NEWLINE
BRACKET_O

posix_clocks
CORNER_BRACKET_O

clock
CORNER_BRACKET_C
DOT

call
NOT_EQ

NULL
BACKLASHED_NEWLINE
QUESTION_MARK
BRACKET_O
MULT

posix_clocks
CORNER_BRACKET_O

clock
CORNER_BRACKET_C
DOT

call
BRACKET_C

arglist
COLON

common_
DOUBLE_HASH

call

arglist
BRACKET_C
BRACKET_C

static

inline
TYPE_INT

common_clock_getres
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O

tp
MINUS
GREATER

tv_sec
OP_ASSIGNMENT
NUMBER
SEMICOLON

tp
MINUS
GREATER

tv_nsec
OP_ASSIGNMENT

posix_clocks
CORNER_BRACKET_O

which_clock
CORNER_BRACKET_C
DOT

res
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

common_clock_get
BRACKET_O

clockid_t

which_clock
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O

ktime_get_real_ts
BRACKET_O

tp
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

common_clock_set
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O

return

do_sys_settimeofday
BRACKET_O

tp
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

common_timer_create
BRACKET_O
STRUCT

k_itimer
MULT

new_timer
BRACKET_C
CURLY_BRACKET_O

hrtimer_init
BRACKET_O
AMPERSANT

new_timer
MINUS
GREATER

it
DOT

real
DOT

timer
COMMA

new_timer
MINUS
GREATER

it_clock
COMMA
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

invalid_clockid
BRACKET_O
CONST

clockid_t

which_clock
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

which_clock
LESS
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
BRACKET_C

which_clock
GR_EQ

MAX_CLOCKS
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

posix_clocks
CORNER_BRACKET_O

which_clock
CORNER_BRACKET_C
DOT

clock_getres
NOT_EQ

NULL
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

posix_clocks
CORNER_BRACKET_O

which_clock
CORNER_BRACKET_C
DOT

res
NOT_EQ
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

posix_ktime_get_ts
BRACKET_O

clockid_t

which_clock
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O

ktime_get_ts
BRACKET_O

tp
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

__init
TYPE_INT

init_posix_timers
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_clock

clock_realtime
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

clock_getres
OP_ASSIGNMENT

hrtimer_get_res
COMMA
CURLY_BRACKET_C
SEMICOLON
STRUCT

k_clock

clock_monotonic
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

clock_getres
OP_ASSIGNMENT

hrtimer_get_res
COMMA
DOT

clock_get
OP_ASSIGNMENT

posix_ktime_get_ts
COMMA
DOT

clock_set
OP_ASSIGNMENT

do_posix_clock_nosettime
COMMA
CURLY_BRACKET_C
SEMICOLON

register_posix_clock
BRACKET_O

CLOCK_REALTIME
COMMA
AMPERSANT

clock_realtime
BRACKET_C
SEMICOLON

register_posix_clock
BRACKET_O

CLOCK_MONOTONIC
COMMA
AMPERSANT

clock_monotonic
BRACKET_C
SEMICOLON

posix_timers_cache
OP_ASSIGNMENT

kmem_cache_create
BRACKET_O
STRING
COMMA

sizeof
BRACKET_O
STRUCT

k_itimer
BRACKET_C
COMMA
NUMBER
COMMA
NUMBER
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON

idr_init
BRACKET_O
AMPERSANT

posix_timers_id
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__initcall
BRACKET_O

init_posix_timers
BRACKET_C
SEMICOLON

static

void

schedule_next_timer
BRACKET_O
STRUCT

k_itimer
MULT

timr
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer
MULT

timer
OP_ASSIGNMENT
AMPERSANT

timr
MINUS
GREATER

it
DOT

real
DOT

timer
SEMICOLON
IF
BRACKET_O

timr
MINUS
GREATER

it
DOT

real
DOT

interval
DOT

tv64
EQ
NUMBER
BRACKET_C

return
SEMICOLON

timr
MINUS
GREATER

it_overrun
ASSIGN_PLUS

hrtimer_forward
BRACKET_O

timer
COMMA

timer
MINUS
GREATER

base
MINUS
GREATER

get_time
BRACKET_O
BRACKET_C
COMMA

timr
MINUS
GREATER

it
DOT

real
DOT

interval
BRACKET_C
SEMICOLON

timr
MINUS
GREATER

it_overrun_last
OP_ASSIGNMENT

timr
MINUS
GREATER

it_overrun
SEMICOLON

timr
MINUS
GREATER

it_overrun
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
PLUS
PLUS

timr
MINUS
GREATER

it_requeue_pending
SEMICOLON

hrtimer_restart
BRACKET_O

timer
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

do_schedule_next_timer
BRACKET_O
STRUCT

siginfo
MULT

info
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_itimer
MULT

timr
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

timr
OP_ASSIGNMENT

lock_timer
BRACKET_O

info
MINUS
GREATER

si_tid
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

timr
AND

timr
MINUS
GREATER

it_requeue_pending
EQ

info
MINUS
GREATER

si_sys_private
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

timr
MINUS
GREATER

it_clock
LESS
NUMBER
BRACKET_C

posix_cpu_timer_schedule
BRACKET_O

timr
BRACKET_C
SEMICOLON
ELSE

schedule_next_timer
BRACKET_O

timr
BRACKET_C
SEMICOLON

info
MINUS
GREATER

si_overrun
OP_ASSIGNMENT

timr
MINUS
GREATER

it_overrun_last
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

timr
BRACKET_C

unlock_timer
BRACKET_O

timr
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

posix_timer_event
BRACKET_O
STRUCT

k_itimer
MULT

timr
COMMA
TYPE_INT

si_private
BRACKET_C
CURLY_BRACKET_O

memset
BRACKET_O
AMPERSANT

timr
MINUS
GREATER

sigq
MINUS
GREATER

info
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

siginfo_t
BRACKET_C
BRACKET_C
SEMICOLON

timr
MINUS
GREATER

sigq
MINUS
GREATER

info
DOT

si_sys_private
OP_ASSIGNMENT

si_private
SEMICOLON

timr
MINUS
GREATER

sigq
MINUS
GREATER

info
DOT

si_signo
OP_ASSIGNMENT

timr
MINUS
GREATER

it_sigev_signo
SEMICOLON

timr
MINUS
GREATER

sigq
MINUS
GREATER

info
DOT

si_errno
OP_ASSIGNMENT
NUMBER
SEMICOLON

timr
MINUS
GREATER

sigq
MINUS
GREATER

info
DOT

si_code
OP_ASSIGNMENT

SI_TIMER
SEMICOLON

timr
MINUS
GREATER

sigq
MINUS
GREATER

info
DOT

si_tid
OP_ASSIGNMENT

timr
MINUS
GREATER

it_id
SEMICOLON

timr
MINUS
GREATER

sigq
MINUS
GREATER

info
DOT

si_value
OP_ASSIGNMENT

timr
MINUS
GREATER

it_sigev_value
SEMICOLON
IF
BRACKET_O

timr
MINUS
GREATER

it_sigev_notify
AMPERSANT

SIGEV_THREAD_ID
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

leader
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT

send_sigqueue
BRACKET_O

timr
MINUS
GREATER

it_sigev_signo
COMMA

timr
MINUS
GREATER

sigq
COMMA

timr
MINUS
GREATER

it_process
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

ret
GR_EQ
NUMBER
BRACKET_C
BRACKET_C

return

ret
SEMICOLON

timr
MINUS
GREATER

it_sigev_notify
OP_ASSIGNMENT

SIGEV_SIGNAL
SEMICOLON

leader
OP_ASSIGNMENT

timr
MINUS
GREATER

it_process
MINUS
GREATER

group_leader
SEMICOLON

put_task_struct
BRACKET_O

timr
MINUS
GREATER

it_process
BRACKET_C
SEMICOLON

timr
MINUS
GREATER

it_process
OP_ASSIGNMENT

leader
SEMICOLON
CURLY_BRACKET_C

return

send_group_sigqueue
BRACKET_O

timr
MINUS
GREATER

it_sigev_signo
COMMA

timr
MINUS
GREATER

sigq
COMMA

timr
MINUS
GREATER

it_process
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

posix_timer_event
BRACKET_C
SEMICOLON

static

enum

hrtimer_restart

posix_timer_fn
BRACKET_O
STRUCT

hrtimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_itimer
MULT

timr
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

si_private
OP_ASSIGNMENT
NUMBER
SEMICOLON

enum

hrtimer_restart

ret
OP_ASSIGNMENT

HRTIMER_NORESTART
SEMICOLON

timr
OP_ASSIGNMENT

container_of
BRACKET_O

timer
COMMA
STRUCT

k_itimer
COMMA

it
DOT

real
DOT

timer
BRACKET_C
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

timr
MINUS
GREATER

it_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

timr
MINUS
GREATER

it
DOT

real
DOT

interval
DOT

tv64
NOT_EQ
NUMBER
BRACKET_C

si_private
OP_ASSIGNMENT
PLUS
PLUS

timr
MINUS
GREATER

it_requeue_pending
SEMICOLON
IF
BRACKET_O

posix_timer_event
BRACKET_O

timr
COMMA

si_private
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

timr
MINUS
GREATER

it
DOT

real
DOT

interval
DOT

tv64
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

ktime_t

now
OP_ASSIGNMENT

hrtimer_cb_get_time
BRACKET_O

timer
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_HIGH_RES_TIMERS
CURLY_BRACKET_O

ktime_t

kj
OP_ASSIGNMENT

ktime_set
BRACKET_O
NUMBER
COMMA

NSEC_PER_SEC
DIV

HZ
BRACKET_C
SEMICOLON
IF
BRACKET_O

timr
MINUS
GREATER

it
DOT

real
DOT

interval
DOT

tv64
LESS

kj
DOT

tv64
BRACKET_C

now
OP_ASSIGNMENT

ktime_add
BRACKET_O

now
COMMA

kj
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

timr
MINUS
GREATER

it_overrun
ASSIGN_PLUS

hrtimer_forward
BRACKET_O

timer
COMMA

now
COMMA

timr
MINUS
GREATER

it
DOT

real
DOT

interval
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

HRTIMER_RESTART
SEMICOLON
PLUS
PLUS

timr
MINUS
GREATER

it_requeue_pending
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

unlock_timer
BRACKET_O

timr
COMMA

flags
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

task_struct
MULT

good_sigevent
BRACKET_O

sigevent_t
MULT

event
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

rtn
OP_ASSIGNMENT

current
MINUS
GREATER

group_leader
SEMICOLON
IF
BRACKET_O
BRACKET_O

event
MINUS
GREATER

sigev_notify
AMPERSANT

SIGEV_THREAD_ID
BRACKET_C
AND
BRACKET_O
NOT
BRACKET_O

rtn
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

event
MINUS
GREATER

sigev_notify_thread_id
BRACKET_C
BRACKET_C
OR

rtn
MINUS
GREATER

tgid
NOT_EQ

current
MINUS
GREATER

tgid
OR
BRACKET_O

event
MINUS
GREATER

sigev_notify
AMPERSANT
TILDE

SIGEV_THREAD_ID
BRACKET_C
NOT_EQ

SIGEV_SIGNAL
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON
IF
BRACKET_O
BRACKET_O
BRACKET_O

event
MINUS
GREATER

sigev_notify
AMPERSANT
TILDE

SIGEV_THREAD_ID
BRACKET_C
NOT_EQ

SIGEV_NONE
BRACKET_C
AND
BRACKET_O
BRACKET_O

event
MINUS
GREATER

sigev_signo
LE_EQ
NUMBER
BRACKET_C
OR
BRACKET_O

event
MINUS
GREATER

sigev_signo
GREATER

SIGRTMAX
BRACKET_C
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

return

rtn
SEMICOLON
CURLY_BRACKET_C

void

register_posix_clock
BRACKET_O
CONST

clockid_t

clock_id
COMMA
STRUCT

k_clock
MULT

new_clock
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
BRACKET_C

clock_id
GR_EQ

MAX_CLOCKS
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

clock_id
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

posix_clocks
CORNER_BRACKET_O

clock_id
CORNER_BRACKET_C
OP_ASSIGNMENT
MULT

new_clock
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

register_posix_clock
BRACKET_C
SEMICOLON

static
STRUCT

k_itimer
MULT

alloc_posix_timer
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_itimer
MULT

tmr
SEMICOLON

tmr
OP_ASSIGNMENT

kmem_cache_zalloc
BRACKET_O

posix_timers_cache
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tmr
BRACKET_C

return

tmr
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT
BRACKET_O

tmr
MINUS
GREATER

sigq
OP_ASSIGNMENT

sigqueue_alloc
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kmem_cache_free
BRACKET_O

posix_timers_cache
COMMA

tmr
BRACKET_C
SEMICOLON

tmr
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

return

tmr
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

IT_ID_SET
NUMBER
PP_DEFINE

IT_ID_NOT_SET
NUMBER

static

void

release_posix_timer
BRACKET_O
STRUCT

k_itimer
MULT

tmr
COMMA
TYPE_INT

it_id_set
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

it_id_set
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

idr_lock
COMMA

flags
BRACKET_C
SEMICOLON

idr_remove
BRACKET_O
AMPERSANT

posix_timers_id
COMMA

tmr
MINUS
GREATER

it_id
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

idr_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

sigqueue_free
BRACKET_O

tmr
MINUS
GREATER

sigq
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

tmr
MINUS
GREATER

it_process
BRACKET_C
AND

tmr
MINUS
GREATER

it_sigev_notify
EQ
BRACKET_O

SIGEV_SIGNAL
LOGICAL_OR

SIGEV_THREAD_ID
BRACKET_C
BRACKET_C

put_task_struct
BRACKET_O

tmr
MINUS
GREATER

it_process
BRACKET_C
SEMICOLON

kmem_cache_free
BRACKET_O

posix_timers_cache
COMMA

tmr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_timer_create
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

sigevent

__user
MULT

timer_event_spec
COMMA

timer_t

__user
MULT

created_timer_id
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

k_itimer
MULT

new_timer
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_INT

new_timer_id
SEMICOLON
STRUCT

task_struct
MULT

process
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

sigevent_t

event
SEMICOLON
TYPE_INT

it_id_set
OP_ASSIGNMENT

IT_ID_NOT_SET
SEMICOLON
IF
BRACKET_O

invalid_clockid
BRACKET_O

which_clock
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

new_timer
OP_ASSIGNMENT

alloc_posix_timer
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

new_timer
BRACKET_C
BRACKET_C

return
MINUS

EAGAIN
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

new_timer
MINUS
GREATER

it_lock
BRACKET_C
SEMICOLON

retry
COLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

idr_pre_get
BRACKET_O
AMPERSANT

posix_timers_id
COMMA

GFP_KERNEL
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EAGAIN
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

spin_lock_irq
BRACKET_O
AMPERSANT

idr_lock
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

idr_get_new
BRACKET_O
AMPERSANT

posix_timers_id
COMMA
BRACKET_O

void
MULT
BRACKET_C

new_timer
COMMA
AMPERSANT

new_timer_id
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

idr_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
EQ
MINUS

EAGAIN
BRACKET_C

goto

retry
SEMICOLON
ELSE
IF
BRACKET_O

error
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EAGAIN
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

it_id_set
OP_ASSIGNMENT

IT_ID_SET
SEMICOLON

new_timer
MINUS
GREATER

it_id
OP_ASSIGNMENT
BRACKET_O

timer_t
BRACKET_C

new_timer_id
SEMICOLON

new_timer
MINUS
GREATER

it_clock
OP_ASSIGNMENT

which_clock
SEMICOLON

new_timer
MINUS
GREATER

it_overrun
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

error
OP_ASSIGNMENT

CLOCK_DISPATCH
BRACKET_O

which_clock
COMMA

timer_create
COMMA
BRACKET_O

new_timer
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

created_timer_id
COMMA
AMPERSANT

new_timer_id
COMMA

sizeof
BRACKET_O

new_timer_id
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

timer_event_spec
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

event
COMMA

timer_event_spec
COMMA

sizeof
BRACKET_O

event
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

new_timer
MINUS
GREATER

it_sigev_notify
OP_ASSIGNMENT

event
DOT

sigev_notify
SEMICOLON

new_timer
MINUS
GREATER

it_sigev_signo
OP_ASSIGNMENT

event
DOT

sigev_signo
SEMICOLON

new_timer
MINUS
GREATER

it_sigev_value
OP_ASSIGNMENT

event
DOT

sigev_value
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

process
OP_ASSIGNMENT

good_sigevent
BRACKET_O
AMPERSANT

event
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_lock_irqsave
BRACKET_O
AMPERSANT

process
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

process
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

new_timer
MINUS
GREATER

it_process
OP_ASSIGNMENT

process
SEMICOLON

list_add
BRACKET_O
AMPERSANT

new_timer
MINUS
GREATER

list
COMMA
AMPERSANT

process
MINUS
GREATER

signal
MINUS
GREATER

posix_timers
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

process
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

new_timer
MINUS
GREATER

it_sigev_notify
EQ
BRACKET_O

SIGEV_SIGNAL
LOGICAL_OR

SIGEV_THREAD_ID
BRACKET_C
BRACKET_C

get_task_struct
BRACKET_O

process
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

process
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

process
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

process
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

new_timer
MINUS
GREATER

it_sigev_notify
OP_ASSIGNMENT

SIGEV_SIGNAL
SEMICOLON

new_timer
MINUS
GREATER

it_sigev_signo
OP_ASSIGNMENT

SIGALRM
SEMICOLON

new_timer
MINUS
GREATER

it_sigev_value
DOT

sival_int
OP_ASSIGNMENT

new_timer
MINUS
GREATER

it_id
SEMICOLON

process
OP_ASSIGNMENT

current
MINUS
GREATER

group_leader
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

process
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

new_timer
MINUS
GREATER

it_process
OP_ASSIGNMENT

process
SEMICOLON

list_add
BRACKET_O
AMPERSANT

new_timer
MINUS
GREATER

list
COMMA
AMPERSANT

process
MINUS
GREATER

signal
MINUS
GREATER

posix_timers
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

process
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

out
COLON
IF
BRACKET_O

error
BRACKET_C

release_posix_timer
BRACKET_O

new_timer
COMMA

it_id_set
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

k_itimer
MULT

lock_timer
BRACKET_O

timer_t

timer_id
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

flags
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_itimer
MULT

timr
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

idr_lock
COMMA
MULT

flags
BRACKET_C
SEMICOLON

timr
OP_ASSIGNMENT
BRACKET_O
STRUCT

k_itimer
MULT
BRACKET_C

idr_find
BRACKET_O
AMPERSANT

posix_timers_id
COMMA
BRACKET_O
TYPE_INT
BRACKET_C

timer_id
BRACKET_C
SEMICOLON
IF
BRACKET_O

timr
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

timr
MINUS
GREATER

it_lock
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

idr_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

timr
MINUS
GREATER

it_id
NOT_EQ

timer_id
BRACKET_C
OR
NOT
BRACKET_O

timr
MINUS
GREATER

it_process
BRACKET_C
OR

timr
MINUS
GREATER

it_process
MINUS
GREATER

tgid
NOT_EQ

current
MINUS
GREATER

tgid
BRACKET_C
CURLY_BRACKET_O

unlock_timer
BRACKET_O

timr
COMMA
MULT

flags
BRACKET_C
SEMICOLON

timr
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

idr_lock
COMMA
MULT

flags
BRACKET_C
SEMICOLON

return

timr
SEMICOLON
CURLY_BRACKET_C

static

void

common_timer_get
BRACKET_O
STRUCT

k_itimer
MULT

timr
COMMA
STRUCT

itimerspec
MULT

cur_setting
BRACKET_C
CURLY_BRACKET_O

ktime_t

now
COMMA

remaining
COMMA

iv
SEMICOLON
STRUCT

hrtimer
MULT

timer
OP_ASSIGNMENT
AMPERSANT

timr
MINUS
GREATER

it
DOT

real
DOT

timer
SEMICOLON

memset
BRACKET_O

cur_setting
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
STRUCT

itimerspec
BRACKET_C
BRACKET_C
SEMICOLON

iv
OP_ASSIGNMENT

timr
MINUS
GREATER

it
DOT

real
DOT

interval
SEMICOLON
IF
BRACKET_O

iv
DOT

tv64
BRACKET_C

cur_setting
MINUS
GREATER

it_interval
OP_ASSIGNMENT

ktime_to_timespec
BRACKET_O

iv
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O
NOT

hrtimer_active
BRACKET_O

timer
BRACKET_C
AND
BRACKET_O

timr
MINUS
GREATER

it_sigev_notify
AMPERSANT
TILDE

SIGEV_THREAD_ID
BRACKET_C
NOT_EQ

SIGEV_NONE
BRACKET_C

return
SEMICOLON

now
OP_ASSIGNMENT

timer
MINUS
GREATER

base
MINUS
GREATER

get_time
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

iv
DOT

tv64
AND
BRACKET_O

timr
MINUS
GREATER

it_requeue_pending
AMPERSANT

REQUEUE_PENDING
OR
BRACKET_O

timr
MINUS
GREATER

it_sigev_notify
AMPERSANT
TILDE

SIGEV_THREAD_ID
BRACKET_C
EQ

SIGEV_NONE
BRACKET_C
BRACKET_C

timr
MINUS
GREATER

it_overrun
ASSIGN_PLUS

hrtimer_forward
BRACKET_O

timer
COMMA

now
COMMA

iv
BRACKET_C
SEMICOLON

remaining
OP_ASSIGNMENT

ktime_sub
BRACKET_O

timer
MINUS
GREATER

expires
COMMA

now
BRACKET_C
SEMICOLON
IF
BRACKET_O

remaining
DOT

tv64
LE_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

timr
MINUS
GREATER

it_sigev_notify
AMPERSANT
TILDE

SIGEV_THREAD_ID
BRACKET_C
NOT_EQ

SIGEV_NONE
BRACKET_C

cur_setting
MINUS
GREATER

it_value
DOT

tv_nsec
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE

cur_setting
MINUS
GREATER

it_value
OP_ASSIGNMENT

ktime_to_timespec
BRACKET_O

remaining
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_timer_gettime
BRACKET_O

timer_t

timer_id
COMMA
STRUCT

itimerspec

__user
MULT

setting
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_itimer
MULT

timr
SEMICOLON
STRUCT

itimerspec

cur_setting
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

timr
OP_ASSIGNMENT

lock_timer
BRACKET_O

timer_id
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

timr
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

CLOCK_DISPATCH
BRACKET_O

timr
MINUS
GREATER

it_clock
COMMA

timer_get
COMMA
BRACKET_O

timr
COMMA
AMPERSANT

cur_setting
BRACKET_C
BRACKET_C
SEMICOLON

unlock_timer
BRACKET_O

timr
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

setting
COMMA
AMPERSANT

cur_setting
COMMA

sizeof
BRACKET_O

cur_setting
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_timer_getoverrun
BRACKET_O

timer_t

timer_id
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_itimer
MULT

timr
SEMICOLON
TYPE_INT

overrun
SEMICOLON
TYPE_LONG

flags
SEMICOLON

timr
OP_ASSIGNMENT

lock_timer
BRACKET_O

timer_id
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

timr
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

overrun
OP_ASSIGNMENT

timr
MINUS
GREATER

it_overrun_last
SEMICOLON

unlock_timer
BRACKET_O

timr
COMMA

flags
BRACKET_C
SEMICOLON

return

overrun
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

common_timer_set
BRACKET_O
STRUCT

k_itimer
MULT

timr
COMMA
TYPE_INT

flags
COMMA
STRUCT

itimerspec
MULT

new_setting
COMMA
STRUCT

itimerspec
MULT

old_setting
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer
MULT

timer
OP_ASSIGNMENT
AMPERSANT

timr
MINUS
GREATER

it
DOT

real
DOT

timer
SEMICOLON

enum

hrtimer_mode

mode
SEMICOLON
IF
BRACKET_O

old_setting
BRACKET_C

common_timer_get
BRACKET_O

timr
COMMA

old_setting
BRACKET_C
SEMICOLON

timr
MINUS
GREATER

it
DOT

real
DOT

interval
DOT

tv64
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

hrtimer_try_to_cancel
BRACKET_O

timer
BRACKET_C
LESS
NUMBER
BRACKET_C

return

TIMER_RETRY
SEMICOLON

timr
MINUS
GREATER

it_requeue_pending
OP_ASSIGNMENT
BRACKET_O

timr
MINUS
GREATER

it_requeue_pending
PLUS
NUMBER
BRACKET_C
AMPERSANT
TILDE

REQUEUE_PENDING
SEMICOLON

timr
MINUS
GREATER

it_overrun_last
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

new_setting
MINUS
GREATER

it_value
DOT

tv_sec
AND
NOT

new_setting
MINUS
GREATER

it_value
DOT

tv_nsec
BRACKET_C

return
NUMBER
SEMICOLON

mode
OP_ASSIGNMENT

flags
AMPERSANT

TIMER_ABSTIME
QUESTION_MARK

HRTIMER_MODE_ABS
COLON

HRTIMER_MODE_REL
SEMICOLON

hrtimer_init
BRACKET_O
AMPERSANT

timr
MINUS
GREATER

it
DOT

real
DOT

timer
COMMA

timr
MINUS
GREATER

it_clock
COMMA

mode
BRACKET_C
SEMICOLON

timr
MINUS
GREATER

it
DOT

real
DOT

timer
DOT

function
OP_ASSIGNMENT

posix_timer_fn
SEMICOLON

timer
MINUS
GREATER

expires
OP_ASSIGNMENT

timespec_to_ktime
BRACKET_O

new_setting
MINUS
GREATER

it_value
BRACKET_C
SEMICOLON

timr
MINUS
GREATER

it
DOT

real
DOT

interval
OP_ASSIGNMENT

timespec_to_ktime
BRACKET_O

new_setting
MINUS
GREATER

it_interval
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O
BRACKET_O

timr
MINUS
GREATER

it_sigev_notify
AMPERSANT
TILDE

SIGEV_THREAD_ID
BRACKET_C
EQ

SIGEV_NONE
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

mode
EQ

HRTIMER_MODE_REL
BRACKET_C

timer
MINUS
GREATER

expires
OP_ASSIGNMENT

ktime_add
BRACKET_O

timer
MINUS
GREATER

expires
COMMA

timer
MINUS
GREATER

base
MINUS
GREATER

get_time
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

hrtimer_start
BRACKET_O

timer
COMMA

timer
MINUS
GREATER

expires
COMMA

mode
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_timer_settime
BRACKET_O

timer_t

timer_id
COMMA
TYPE_INT

flags
COMMA
CONST
STRUCT

itimerspec

__user
MULT

new_setting
COMMA
STRUCT

itimerspec

__user
MULT

old_setting
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_itimer
MULT

timr
SEMICOLON
STRUCT

itimerspec

new_spec
COMMA

old_spec
SEMICOLON
TYPE_INT

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_LONG

flag
SEMICOLON
STRUCT

itimerspec
MULT

rtn
OP_ASSIGNMENT

old_setting
QUESTION_MARK
AMPERSANT

old_spec
COLON

NULL
SEMICOLON
IF
BRACKET_O
NOT

new_setting
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

new_spec
COMMA

new_setting
COMMA

sizeof
BRACKET_O

new_spec
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

timespec_valid
BRACKET_O
AMPERSANT

new_spec
DOT

it_interval
BRACKET_C
OR
NOT

timespec_valid
BRACKET_O
AMPERSANT

new_spec
DOT

it_value
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

retry
COLON

timr
OP_ASSIGNMENT

lock_timer
BRACKET_O

timer_id
COMMA
AMPERSANT

flag
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

timr
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

error
OP_ASSIGNMENT

CLOCK_DISPATCH
BRACKET_O

timr
MINUS
GREATER

it_clock
COMMA

timer_set
COMMA
BRACKET_O

timr
COMMA

flags
COMMA
AMPERSANT

new_spec
COMMA

rtn
BRACKET_C
BRACKET_C
SEMICOLON

unlock_timer
BRACKET_O

timr
COMMA

flag
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
EQ

TIMER_RETRY
BRACKET_C
CURLY_BRACKET_O

rtn
OP_ASSIGNMENT

NULL
SEMICOLON

goto

retry
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

old_setting
AND
NOT

error
AND

copy_to_user
BRACKET_O

old_setting
COMMA
AMPERSANT

old_spec
COMMA

sizeof
BRACKET_O

old_spec
BRACKET_C
BRACKET_C
BRACKET_C

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

common_timer_del
BRACKET_O
STRUCT

k_itimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O

timer
MINUS
GREATER

it
DOT

real
DOT

interval
DOT

tv64
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

hrtimer_try_to_cancel
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

it
DOT

real
DOT

timer
BRACKET_C
LESS
NUMBER
BRACKET_C

return

TIMER_RETRY
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

timer_delete_hook
BRACKET_O
STRUCT

k_itimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O

return

CLOCK_DISPATCH
BRACKET_O

timer
MINUS
GREATER

it_clock
COMMA

timer_del
COMMA
BRACKET_O

timer
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_timer_delete
BRACKET_O

timer_t

timer_id
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_itimer
MULT

timer
SEMICOLON
TYPE_LONG

flags
SEMICOLON

retry_delete
COLON

timer
OP_ASSIGNMENT

lock_timer
BRACKET_O

timer_id
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

timer
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

timer_delete_hook
BRACKET_O

timer
BRACKET_C
EQ

TIMER_RETRY
BRACKET_C
CURLY_BRACKET_O

unlock_timer
BRACKET_O

timer
COMMA

flags
BRACKET_C
SEMICOLON

goto

retry_delete
SEMICOLON
CURLY_BRACKET_C

spin_lock
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

list_del
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

list
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer
MINUS
GREATER

it_process
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

timer
MINUS
GREATER

it_sigev_notify
EQ
BRACKET_O

SIGEV_SIGNAL
LOGICAL_OR

SIGEV_THREAD_ID
BRACKET_C
BRACKET_C

put_task_struct
BRACKET_O

timer
MINUS
GREATER

it_process
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

it_process
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

unlock_timer
BRACKET_O

timer
COMMA

flags
BRACKET_C
SEMICOLON

release_posix_timer
BRACKET_O

timer
COMMA

IT_ID_SET
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

itimer_delete
BRACKET_O
STRUCT

k_itimer
MULT

timer
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

retry_delete
COLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

it_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer_delete_hook
BRACKET_O

timer
BRACKET_C
EQ

TIMER_RETRY
BRACKET_C
CURLY_BRACKET_O

unlock_timer
BRACKET_O

timer
COMMA

flags
BRACKET_C
SEMICOLON

goto

retry_delete
SEMICOLON
CURLY_BRACKET_C

list_del
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

list
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer
MINUS
GREATER

it_process
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

timer
MINUS
GREATER

it_sigev_notify
EQ
BRACKET_O

SIGEV_SIGNAL
LOGICAL_OR

SIGEV_THREAD_ID
BRACKET_C
BRACKET_C

put_task_struct
BRACKET_O

timer
MINUS
GREATER

it_process
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

it_process
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

unlock_timer
BRACKET_O

timer
COMMA

flags
BRACKET_C
SEMICOLON

release_posix_timer
BRACKET_O

timer
COMMA

IT_ID_SET
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

exit_itimers
BRACKET_O
STRUCT

signal_struct
MULT

sig
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_itimer
MULT

tmr
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

sig
MINUS
GREATER

posix_timers
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

tmr
OP_ASSIGNMENT

list_entry
BRACKET_O

sig
MINUS
GREATER

posix_timers
DOT

next
COMMA
STRUCT

k_itimer
COMMA

list
BRACKET_C
SEMICOLON

itimer_delete
BRACKET_O

tmr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
TYPE_INT

do_posix_clock_nosettime
BRACKET_O
CONST

clockid_t

clockid
COMMA
STRUCT

timespec
MULT

tp
BRACKET_C
CURLY_BRACKET_O

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

do_posix_clock_nosettime
BRACKET_C
SEMICOLON
TYPE_INT

do_posix_clock_nonanosleep
BRACKET_O
CONST

clockid_t

clock
COMMA
TYPE_INT

flags
COMMA
STRUCT

timespec
MULT

t
COMMA
STRUCT

timespec

__user
MULT

r
BRACKET_C
CURLY_BRACKET_O
PP_IFNDEF

ENOTSUP

return
MINUS

EOPNOTSUPP
SEMICOLON
PP_ELSE

return
MINUS

ENOTSUP
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

do_posix_clock_nonanosleep
BRACKET_C
SEMICOLON

asmlinkage
TYPE_LONG

sys_clock_settime
BRACKET_O
CONST

clockid_t

which_clock
COMMA
CONST
STRUCT

timespec

__user
MULT

tp
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

new_tp
SEMICOLON
IF
BRACKET_O

invalid_clockid
BRACKET_O

which_clock
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

new_tp
COMMA

tp
COMMA

sizeof
BRACKET_O
MULT

tp
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return

CLOCK_DISPATCH
BRACKET_O

which_clock
COMMA

clock_set
COMMA
BRACKET_O

which_clock
COMMA
AMPERSANT

new_tp
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_clock_gettime
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

timespec

__user
MULT

tp
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

kernel_tp
SEMICOLON
TYPE_INT

error
SEMICOLON
IF
BRACKET_O

invalid_clockid
BRACKET_O

which_clock
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

error
OP_ASSIGNMENT

CLOCK_DISPATCH
BRACKET_O

which_clock
COMMA

clock_get
COMMA
BRACKET_O

which_clock
COMMA
AMPERSANT

kernel_tp
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
AND

copy_to_user
BRACKET_O

tp
COMMA
AMPERSANT

kernel_tp
COMMA

sizeof
BRACKET_O

kernel_tp
BRACKET_C
BRACKET_C
BRACKET_C

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_clock_getres
BRACKET_O
CONST

clockid_t

which_clock
COMMA
STRUCT

timespec

__user
MULT

tp
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

rtn_tp
SEMICOLON
TYPE_INT

error
SEMICOLON
IF
BRACKET_O

invalid_clockid
BRACKET_O

which_clock
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

error
OP_ASSIGNMENT

CLOCK_DISPATCH
BRACKET_O

which_clock
COMMA

clock_getres
COMMA
BRACKET_O

which_clock
COMMA
AMPERSANT

rtn_tp
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
AND

tp
AND

copy_to_user
BRACKET_O

tp
COMMA
AMPERSANT

rtn_tp
COMMA

sizeof
BRACKET_O

rtn_tp
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

error
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

common_nsleep
BRACKET_O
CONST

clockid_t

which_clock
COMMA
TYPE_INT

flags
COMMA
STRUCT

timespec
MULT

tsave
COMMA
STRUCT

timespec

__user
MULT

rmtp
BRACKET_C
CURLY_BRACKET_O

return

hrtimer_nanosleep
BRACKET_O

tsave
COMMA

rmtp
COMMA

flags
AMPERSANT

TIMER_ABSTIME
QUESTION_MARK

HRTIMER_MODE_ABS
COLON

HRTIMER_MODE_REL
COMMA

which_clock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_clock_nanosleep
BRACKET_O
CONST

clockid_t

which_clock
COMMA
TYPE_INT

flags
COMMA
CONST
STRUCT

timespec

__user
MULT

rqtp
COMMA
STRUCT

timespec

__user
MULT

rmtp
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

t
SEMICOLON
IF
BRACKET_O

invalid_clockid
BRACKET_O

which_clock
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

t
COMMA

rqtp
COMMA

sizeof
BRACKET_O
STRUCT

timespec
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

timespec_valid
BRACKET_O
AMPERSANT

t
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

return

CLOCK_DISPATCH
BRACKET_O

which_clock
COMMA

nsleep
COMMA
BRACKET_O

which_clock
COMMA

flags
COMMA
AMPERSANT

t
COMMA

rmtp
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

common_nsleep_restart
BRACKET_O
STRUCT

restart_block
MULT

restart_block
BRACKET_C
CURLY_BRACKET_O

return

hrtimer_nanosleep_restart
BRACKET_O

restart_block
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

clock_nanosleep_restart
BRACKET_O
STRUCT

restart_block
MULT

restart_block
BRACKET_C
CURLY_BRACKET_O

clockid_t

which_clock
OP_ASSIGNMENT

restart_block
MINUS
GREATER

arg0
SEMICOLON

return

CLOCK_DISPATCH
BRACKET_O

which_clock
COMMA

nsleep_restart
COMMA
BRACKET_O

restart_block
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_DEFINE

__LOG_BUF_LEN
BRACKET_O
NUMBER
LESS
LESS

CONFIG_LOG_BUF_SHIFT
BRACKET_C
PP_DEFINE

DEFAULT_MESSAGE_LOGLEVEL
NUMBER
PP_DEFINE

MINIMUM_CONSOLE_LOGLEVEL
NUMBER
PP_DEFINE

DEFAULT_CONSOLE_LOGLEVEL
NUMBER

DECLARE_WAIT_QUEUE_HEAD
BRACKET_O

log_wait
BRACKET_C
SEMICOLON
TYPE_INT

console_printk
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O

DEFAULT_CONSOLE_LOGLEVEL
COMMA

DEFAULT_MESSAGE_LOGLEVEL
COMMA

MINIMUM_CONSOLE_LOGLEVEL
COMMA

DEFAULT_CONSOLE_LOGLEVEL
COMMA
CURLY_BRACKET_C
SEMICOLON
TYPE_INT

oops_in_progress
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

oops_in_progress
BRACKET_C
SEMICOLON

static

DECLARE_MUTEX
BRACKET_O

console_sem
BRACKET_C
SEMICOLON

static

DECLARE_MUTEX
BRACKET_O

secondary_console_sem
BRACKET_C
SEMICOLON
STRUCT

console
MULT

console_drivers
SEMICOLON

static
TYPE_INT

console_locked
COMMA

console_suspended
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

logbuf_lock
BRACKET_C
SEMICOLON
PP_DEFINE

LOG_BUF_MASK
BRACKET_O

log_buf_len
MINUS
NUMBER
BRACKET_C
PP_DEFINE

LOG_BUF
BRACKET_O

idx
BRACKET_C
BRACKET_O

log_buf
CORNER_BRACKET_O
BRACKET_O

idx
BRACKET_C
AMPERSANT

LOG_BUF_MASK
CORNER_BRACKET_C
BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG

log_start
SEMICOLON

static
TYPE_UNSIGNED
TYPE_LONG

con_start
SEMICOLON

static
TYPE_UNSIGNED
TYPE_LONG

log_end
SEMICOLON
STRUCT

console_cmdline
CURLY_BRACKET_O
TYPE_CHAR

name
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

index
SEMICOLON
TYPE_CHAR
MULT

options
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
PP_DEFINE

MAX_CMDLINECONSOLES
NUMBER

static
STRUCT

console_cmdline

console_cmdline
CORNER_BRACKET_O

MAX_CMDLINECONSOLES
CORNER_BRACKET_C
SEMICOLON

static
TYPE_INT

selected_console
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

static
TYPE_INT

preferred_console
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

static
TYPE_INT

console_may_schedule
SEMICOLON
PP_IFDEF

CONFIG_PRINTK

static
TYPE_CHAR

__log_buf
CORNER_BRACKET_O

__LOG_BUF_LEN
CORNER_BRACKET_C
SEMICOLON

static
TYPE_CHAR
MULT

log_buf
OP_ASSIGNMENT

__log_buf
SEMICOLON

static
TYPE_INT

log_buf_len
OP_ASSIGNMENT

__LOG_BUF_LEN
SEMICOLON

static
TYPE_UNSIGNED
TYPE_LONG

logged_chars
SEMICOLON

static
TYPE_INT

__init

log_buf_len_setup
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

size
OP_ASSIGNMENT

memparse
BRACKET_O

str
COMMA
AMPERSANT

str
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O

size
BRACKET_C

size
OP_ASSIGNMENT

roundup_pow_of_two
BRACKET_O

size
BRACKET_C
SEMICOLON
IF
BRACKET_O

size
GREATER

log_buf_len
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

start
COMMA

dest_idx
COMMA

offset
SEMICOLON
TYPE_CHAR
MULT

new_log_buf
SEMICOLON

new_log_buf
OP_ASSIGNMENT

alloc_bootmem
BRACKET_O

size
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

new_log_buf
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

spin_lock_irqsave
BRACKET_O
AMPERSANT

logbuf_lock
COMMA

flags
BRACKET_C
SEMICOLON

log_buf_len
OP_ASSIGNMENT

size
SEMICOLON

log_buf
OP_ASSIGNMENT

new_log_buf
SEMICOLON

offset
OP_ASSIGNMENT

start
OP_ASSIGNMENT

min
BRACKET_O

con_start
COMMA

log_start
BRACKET_C
SEMICOLON

dest_idx
OP_ASSIGNMENT
NUMBER
SEMICOLON
WHILE
BRACKET_O

start
NOT_EQ

log_end
BRACKET_C
CURLY_BRACKET_O

log_buf
CORNER_BRACKET_O

dest_idx
CORNER_BRACKET_C
OP_ASSIGNMENT

__log_buf
CORNER_BRACKET_O

start
AMPERSANT
BRACKET_O

__LOG_BUF_LEN
MINUS
NUMBER
BRACKET_C
CORNER_BRACKET_C
SEMICOLON

start
PLUS
PLUS
SEMICOLON

dest_idx
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

log_start
ASSIGN_MINUS

offset
SEMICOLON

con_start
ASSIGN_MINUS

offset
SEMICOLON

log_end
ASSIGN_MINUS

offset
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

logbuf_lock
COMMA

flags
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_NOTICE
STRING
COMMA

log_buf_len
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

out
COLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

log_buf_len_setup
BRACKET_C
SEMICOLON
TYPE_INT

do_syslog
BRACKET_O
TYPE_INT

type
COMMA
TYPE_CHAR

__user
MULT

buf
COMMA
TYPE_INT

len
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

i
COMMA

j
COMMA

limit
COMMA

count
SEMICOLON
TYPE_INT

do_clear
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_CHAR

c
SEMICOLON
TYPE_INT

error
OP_ASSIGNMENT
NUMBER
SEMICOLON

error
OP_ASSIGNMENT

security_syslog
BRACKET_O

type
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C

return

error
SEMICOLON
SWITCH
BRACKET_O

type
BRACKET_C
CURLY_BRACKET_O

case
NUMBER
COLON
BREAK
SEMICOLON

case
NUMBER
COLON
BREAK
SEMICOLON

case
NUMBER
COLON

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
NOT

buf
OR

len
LESS
NUMBER
BRACKET_C

goto

out
SEMICOLON

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

len
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_WRITE
COMMA

buf
COMMA

len
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

error
OP_ASSIGNMENT

wait_event_interruptible
BRACKET_O

log_wait
COMMA
BRACKET_O

log_start
MINUS

log_end
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C

goto

out
SEMICOLON

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

error
AND
BRACKET_O

log_start
NOT_EQ

log_end
BRACKET_C
AND

i
LESS

len
BRACKET_C
CURLY_BRACKET_O

c
OP_ASSIGNMENT

LOG_BUF
BRACKET_O

log_start
BRACKET_C
SEMICOLON

log_start
PLUS
PLUS
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

__put_user
BRACKET_O

c
COMMA

buf
BRACKET_C
SEMICOLON

buf
PLUS
PLUS
SEMICOLON

i
PLUS
PLUS
SEMICOLON

cond_resched
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
BRACKET_C

error
OP_ASSIGNMENT

i
SEMICOLON
BREAK
SEMICOLON

case
NUMBER
COLON

do_clear
OP_ASSIGNMENT
NUMBER
SEMICOLON

case
NUMBER
COLON

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
NOT

buf
OR

len
LESS
NUMBER
BRACKET_C

goto

out
SEMICOLON

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

len
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_WRITE
COMMA

buf
COMMA

len
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

count
OP_ASSIGNMENT

len
SEMICOLON
IF
BRACKET_O

count
GREATER

log_buf_len
BRACKET_C

count
OP_ASSIGNMENT

log_buf_len
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

count
GREATER

logged_chars
BRACKET_C

count
OP_ASSIGNMENT

logged_chars
SEMICOLON
IF
BRACKET_O

do_clear
BRACKET_C

logged_chars
OP_ASSIGNMENT
NUMBER
SEMICOLON

limit
OP_ASSIGNMENT

log_end
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

count
AND
NOT

error
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

j
OP_ASSIGNMENT

limit
MINUS
NUMBER
MINUS

i
SEMICOLON
IF
BRACKET_O

j
PLUS

log_buf_len
LESS

log_end
BRACKET_C
BREAK
SEMICOLON

c
OP_ASSIGNMENT

LOG_BUF
BRACKET_O

j
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

__put_user
BRACKET_O

c
COMMA
AMPERSANT

buf
CORNER_BRACKET_O

count
MINUS
NUMBER
MINUS

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

cond_resched
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C
BREAK
SEMICOLON

error
OP_ASSIGNMENT

i
SEMICOLON
IF
BRACKET_O

i
NOT_EQ

count
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

offset
OP_ASSIGNMENT

count
MINUS

error
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

error
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

__get_user
BRACKET_O

c
COMMA
AMPERSANT

buf
CORNER_BRACKET_O

i
PLUS

offset
CORNER_BRACKET_C
BRACKET_C
OR

__put_user
BRACKET_O

c
COMMA
AMPERSANT

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

cond_resched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
BREAK
SEMICOLON

case
NUMBER
COLON

logged_chars
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case
NUMBER
COLON

console_loglevel
OP_ASSIGNMENT

minimum_console_loglevel
SEMICOLON
BREAK
SEMICOLON

case
NUMBER
COLON

console_loglevel
OP_ASSIGNMENT

default_console_loglevel
SEMICOLON
BREAK
SEMICOLON

case
NUMBER
COLON

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

len
LESS
NUMBER
OR

len
GREATER
NUMBER
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

len
LESS

minimum_console_loglevel
BRACKET_C

len
OP_ASSIGNMENT

minimum_console_loglevel
SEMICOLON

console_loglevel
OP_ASSIGNMENT

len
SEMICOLON

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case
NUMBER
COLON

error
OP_ASSIGNMENT

log_end
MINUS

log_start
SEMICOLON
BREAK
SEMICOLON

case
NUMBER
COLON

error
OP_ASSIGNMENT

log_buf_len
SEMICOLON
BREAK
SEMICOLON

default
COLON

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

out
COLON

return

error
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_syslog
BRACKET_O
TYPE_INT

type
COMMA
TYPE_CHAR

__user
MULT

buf
COMMA
TYPE_INT

len
BRACKET_C
CURLY_BRACKET_O

return

do_syslog
BRACKET_O

type
COMMA

buf
COMMA

len
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_DEBUG_KERNEL

void

debugger_syslog_data
BRACKET_O
TYPE_CHAR
MULT

syslog_data
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

syslog_data
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

log_buf
SEMICOLON

syslog_data
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

log_buf
PLUS

log_buf_len
SEMICOLON

syslog_data
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

log_buf
PLUS

log_end
MINUS
BRACKET_O

logged_chars
LESS

log_buf_len
QUESTION_MARK

logged_chars
COLON

log_buf_len
BRACKET_C
SEMICOLON

syslog_data
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

log_buf
PLUS

log_end
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_KDB

void

kdb_syslog_data
BRACKET_O
TYPE_CHAR
MULT

syslog_data
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

syslog_data
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

log_buf
SEMICOLON

syslog_data
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

log_buf
PLUS

log_buf_len
SEMICOLON

syslog_data
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

log_buf
PLUS

log_end
MINUS
BRACKET_O

logged_chars
LESS

log_buf_len
QUESTION_MARK

logged_chars
COLON

log_buf_len
BRACKET_C
SEMICOLON

syslog_data
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

log_buf
PLUS

log_end
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static

void

__call_console_drivers
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

start
COMMA
TYPE_UNSIGNED
TYPE_LONG

end
BRACKET_C
CURLY_BRACKET_O
STRUCT

console
MULT

con
SEMICOLON
FOR
BRACKET_O

con
OP_ASSIGNMENT

console_drivers
SEMICOLON

con
SEMICOLON

con
OP_ASSIGNMENT

con
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

con
MINUS
GREATER

flags
AMPERSANT

CON_ENABLED
BRACKET_C
AND

con
MINUS
GREATER

write
AND
BRACKET_O

cpu_online
BRACKET_O

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
OR
BRACKET_O

con
MINUS
GREATER

flags
AMPERSANT

CON_ANYTIME
BRACKET_C
BRACKET_C
BRACKET_C

con
MINUS
GREATER

write
BRACKET_O

con
COMMA
AMPERSANT

LOG_BUF
BRACKET_O

start
BRACKET_C
COMMA

end
MINUS

start
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

__read_mostly

ignore_loglevel
SEMICOLON

static
TYPE_INT

__init

ignore_loglevel_setup
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

ignore_loglevel
OP_ASSIGNMENT
NUMBER
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

ignore_loglevel_setup
BRACKET_C
SEMICOLON

static

void

_call_console_drivers
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

start
COMMA
TYPE_UNSIGNED
TYPE_LONG

end
COMMA
TYPE_INT

msg_log_level
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

msg_log_level
LESS

console_loglevel
OR

ignore_loglevel
BRACKET_C
AND

console_drivers
AND

start
NOT_EQ

end
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

start
AMPERSANT

LOG_BUF_MASK
BRACKET_C
GREATER
BRACKET_O

end
AMPERSANT

LOG_BUF_MASK
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

__call_console_drivers
BRACKET_O

start
AMPERSANT

LOG_BUF_MASK
COMMA

log_buf_len
BRACKET_C
SEMICOLON

__call_console_drivers
BRACKET_O
NUMBER
COMMA

end
AMPERSANT

LOG_BUF_MASK
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

__call_console_drivers
BRACKET_O

start
COMMA

end
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

call_console_drivers
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

start
COMMA
TYPE_UNSIGNED
TYPE_LONG

end
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

cur_index
COMMA

start_print
SEMICOLON

static
TYPE_INT

msg_level
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

BUG_ON
BRACKET_O
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C
BRACKET_O

start
MINUS

end
BRACKET_C
BRACKET_C
GREATER
NUMBER
BRACKET_C
SEMICOLON

cur_index
OP_ASSIGNMENT

start
SEMICOLON

start_print
OP_ASSIGNMENT

start
SEMICOLON
WHILE
BRACKET_O

cur_index
NOT_EQ

end
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

msg_level
LESS
NUMBER
AND
BRACKET_O
BRACKET_O

end
MINUS

cur_index
BRACKET_C
GREATER
NUMBER
BRACKET_C
AND

LOG_BUF
BRACKET_O

cur_index
PLUS
NUMBER
BRACKET_C
EQ
QUOTED_CHAR
AND

LOG_BUF
BRACKET_O

cur_index
PLUS
NUMBER
BRACKET_C
GR_EQ
QUOTED_CHAR
AND

LOG_BUF
BRACKET_O

cur_index
PLUS
NUMBER
BRACKET_C
LE_EQ
QUOTED_CHAR
AND

LOG_BUF
BRACKET_O

cur_index
PLUS
NUMBER
BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C
CURLY_BRACKET_O

msg_level
OP_ASSIGNMENT

LOG_BUF
BRACKET_O

cur_index
PLUS
NUMBER
BRACKET_C
MINUS
QUOTED_CHAR
SEMICOLON

cur_index
ASSIGN_PLUS
NUMBER
SEMICOLON

start_print
OP_ASSIGNMENT

cur_index
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

cur_index
NOT_EQ

end
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

c
OP_ASSIGNMENT

LOG_BUF
BRACKET_O

cur_index
BRACKET_C
SEMICOLON

cur_index
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

c
EQ
QUOTED_CHAR
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

msg_level
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

msg_level
OP_ASSIGNMENT

default_message_loglevel
SEMICOLON
CURLY_BRACKET_C

_call_console_drivers
BRACKET_O

start_print
COMMA

cur_index
COMMA

msg_level
BRACKET_C
SEMICOLON

msg_level
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

start_print
OP_ASSIGNMENT

cur_index
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

_call_console_drivers
BRACKET_O

start_print
COMMA

end
COMMA

msg_level
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

emit_log_char
BRACKET_O
TYPE_CHAR

c
BRACKET_C
CURLY_BRACKET_O

LOG_BUF
BRACKET_O

log_end
BRACKET_C
OP_ASSIGNMENT

c
SEMICOLON

log_end
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

log_end
MINUS

log_start
GREATER

log_buf_len
BRACKET_C

log_start
OP_ASSIGNMENT

log_end
MINUS

log_buf_len
SEMICOLON
IF
BRACKET_O

log_end
MINUS

con_start
GREATER

log_buf_len
BRACKET_C

con_start
OP_ASSIGNMENT

log_end
MINUS

log_buf_len
SEMICOLON
IF
BRACKET_O

logged_chars
LESS

log_buf_len
BRACKET_C

logged_chars
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

static

void

zap_locks
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

static
TYPE_UNSIGNED
TYPE_LONG

oops_timestamp
SEMICOLON
IF
BRACKET_O

time_after_eq
BRACKET_O

jiffies
COMMA

oops_timestamp
BRACKET_C
AND
NOT

time_after
BRACKET_O

jiffies
COMMA

oops_timestamp
PLUS
NUMBER
MULT

HZ
BRACKET_C
BRACKET_C

return
SEMICOLON

oops_timestamp
OP_ASSIGNMENT

jiffies
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON

init_MUTEX
BRACKET_O
AMPERSANT

console_sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_PRINTK_TIME
BRACKET_C

static
TYPE_INT

printk_time
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ELSE

static
TYPE_INT

printk_time
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF

module_param
BRACKET_O

printk_time
COMMA
TYPE_INT
COMMA

S_IRUGO
LOGICAL_OR

S_IWUSR
BRACKET_C
SEMICOLON

static
TYPE_INT

__init

printk_time_setup
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
MULT

str
BRACKET_C

return
NUMBER
SEMICOLON

printk_time
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

printk_time_setup
BRACKET_C
SEMICOLON

__attribute__
BRACKET_O
BRACKET_O

weak
BRACKET_C
BRACKET_C
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

printk_clock
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

sched_clock
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

have_callable_console
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

console
MULT

con
SEMICOLON
FOR
BRACKET_O

con
OP_ASSIGNMENT

console_drivers
SEMICOLON

con
SEMICOLON

con
OP_ASSIGNMENT

con
MINUS
GREATER

next
BRACKET_C
IF
BRACKET_O

con
MINUS
GREATER

flags
AMPERSANT

CON_ANYTIME
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_INT

printk
BRACKET_O
CONST
TYPE_CHAR
MULT

fmt
COMMA
DOT
DOT
DOT
BRACKET_C
CURLY_BRACKET_O

va_list

args
SEMICOLON
TYPE_INT

r
SEMICOLON

va_start
BRACKET_O

args
COMMA

fmt
BRACKET_C
SEMICOLON

r
OP_ASSIGNMENT

vprintk
BRACKET_O

fmt
COMMA

args
BRACKET_C
SEMICOLON

va_end
BRACKET_O

args
BRACKET_C
SEMICOLON

return

r
SEMICOLON
CURLY_BRACKET_C

static

volatile
TYPE_UNSIGNED
TYPE_INT

printk_cpu
OP_ASSIGNMENT

UINT_MAX
SEMICOLON

asmlinkage
TYPE_INT

vprintk
BRACKET_O
CONST
TYPE_CHAR
MULT

fmt
COMMA

va_list

args
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

printed_len
SEMICOLON
TYPE_CHAR
MULT

p
SEMICOLON

static
TYPE_CHAR

printk_buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

static
TYPE_INT

log_level_unknown
OP_ASSIGNMENT
NUMBER
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

oops_in_progress
BRACKET_C
AND

printk_cpu
EQ

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C

zap_locks
BRACKET_O
BRACKET_C
SEMICOLON

raw_local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

lockdep_off
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON

printk_cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON

printed_len
OP_ASSIGNMENT

vscnprintf
BRACKET_O

printk_buf
COMMA

sizeof
BRACKET_O

printk_buf
BRACKET_C
COMMA

fmt
COMMA

args
BRACKET_C
SEMICOLON
FOR
BRACKET_O

p
OP_ASSIGNMENT

printk_buf
SEMICOLON
MULT

p
SEMICOLON

p
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

log_level_unknown
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

printk_time
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

loglev_char
SEMICOLON
TYPE_CHAR

tbuf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA
MULT

tp
SEMICOLON
TYPE_UNSIGNED

tlen
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

t
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

nanosec_rem
SEMICOLON
IF
BRACKET_O

p
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
AND

p
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
GR_EQ
QUOTED_CHAR
AND

p
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
LE_EQ
QUOTED_CHAR
AND

p
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C
CURLY_BRACKET_O

loglev_char
OP_ASSIGNMENT

p
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

p
ASSIGN_PLUS
NUMBER
SEMICOLON

printed_len
ASSIGN_MINUS
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

loglev_char
OP_ASSIGNMENT

default_message_loglevel
PLUS
QUOTED_CHAR
SEMICOLON
CURLY_BRACKET_C

t
OP_ASSIGNMENT

printk_clock
BRACKET_O
BRACKET_C
SEMICOLON

nanosec_rem
OP_ASSIGNMENT

do_div
BRACKET_O

t
COMMA
NUMBER
BRACKET_C
SEMICOLON

tlen
OP_ASSIGNMENT

sprintf
BRACKET_O

tbuf
COMMA
STRING
COMMA

loglev_char
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

t
COMMA

nanosec_rem
DIV
NUMBER
BRACKET_C
SEMICOLON
FOR
BRACKET_O

tp
OP_ASSIGNMENT

tbuf
SEMICOLON

tp
LESS

tbuf
PLUS

tlen
SEMICOLON

tp
PLUS
PLUS
BRACKET_C

emit_log_char
BRACKET_O
MULT

tp
BRACKET_C
SEMICOLON

printed_len
ASSIGN_PLUS

tlen
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

p
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
NOT_EQ
QUOTED_CHAR
OR

p
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
LESS
QUOTED_CHAR
OR

p
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
GREATER
QUOTED_CHAR
OR

p
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
NOT_EQ
QUOTED_CHAR
BRACKET_C
CURLY_BRACKET_O

emit_log_char
BRACKET_O
QUOTED_CHAR
BRACKET_C
SEMICOLON

emit_log_char
BRACKET_O

default_message_loglevel
PLUS
QUOTED_CHAR
BRACKET_C
SEMICOLON

emit_log_char
BRACKET_O
QUOTED_CHAR
BRACKET_C
SEMICOLON

printed_len
ASSIGN_PLUS
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

log_level_unknown
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT
MULT

p
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

emit_log_char
BRACKET_O
MULT

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
MULT

p
EQ
QUOTED_CHAR
BRACKET_C

log_level_unknown
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

down_trylock
BRACKET_O
AMPERSANT

console_sem
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

console_locked
OP_ASSIGNMENT
NUMBER
SEMICOLON

printk_cpu
OP_ASSIGNMENT

UINT_MAX
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpu_online
BRACKET_O

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
OR

have_callable_console
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

console_may_schedule
OP_ASSIGNMENT
NUMBER
SEMICOLON

release_console_sem
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

console_locked
OP_ASSIGNMENT
NUMBER
SEMICOLON

up
BRACKET_O
AMPERSANT

console_sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

lockdep_on
BRACKET_O
BRACKET_C
SEMICOLON

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

printk_cpu
OP_ASSIGNMENT

UINT_MAX
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON

lockdep_on
BRACKET_O
BRACKET_C
SEMICOLON

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON

return

printed_len
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

printk
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

vprintk
BRACKET_C
SEMICOLON
PP_ELSE

asmlinkage
TYPE_LONG

sys_syslog
BRACKET_O
TYPE_INT

type
COMMA
TYPE_CHAR

__user
MULT

buf
COMMA
TYPE_INT

len
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C

static

void

call_console_drivers
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

start
COMMA
TYPE_UNSIGNED
TYPE_LONG

end
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

__init

console_setup
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

name
CORNER_BRACKET_O

sizeof
BRACKET_O

console_cmdline
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
DOT

name
BRACKET_C
CORNER_BRACKET_C
SEMICOLON
TYPE_CHAR
MULT

s
COMMA
MULT

options
SEMICOLON
TYPE_INT

idx
SEMICOLON
IF
BRACKET_O

str
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
GR_EQ
QUOTED_CHAR
AND

str
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
LE_EQ
QUOTED_CHAR
BRACKET_C
CURLY_BRACKET_O

strcpy
BRACKET_O

name
COMMA
STRING
BRACKET_C
SEMICOLON

strncpy
BRACKET_O

name
PLUS
NUMBER
COMMA

str
COMMA

sizeof
BRACKET_O

name
BRACKET_C
MINUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

strncpy
BRACKET_O

name
COMMA

str
COMMA

sizeof
BRACKET_O

name
BRACKET_C
MINUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

name
CORNER_BRACKET_O

sizeof
BRACKET_O

name
BRACKET_C
MINUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O

options
OP_ASSIGNMENT

strchr
BRACKET_O

str
COMMA
QUOTED_CHAR
BRACKET_C
BRACKET_C
NOT_EQ

NULL
BRACKET_C
MULT
BRACKET_O

options
PLUS
PLUS
BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_IFDEF

__sparc__
IF
BRACKET_O
NOT

strcmp
BRACKET_O

str
COMMA
STRING
BRACKET_C
BRACKET_C

strcpy
BRACKET_O

name
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

strcmp
BRACKET_O

str
COMMA
STRING
BRACKET_C
BRACKET_C

strcpy
BRACKET_O

name
COMMA
STRING
BRACKET_C
SEMICOLON
PP_ENDIF
FOR
BRACKET_O

s
OP_ASSIGNMENT

name
SEMICOLON
MULT

s
SEMICOLON

s
PLUS
PLUS
BRACKET_C
IF
BRACKET_O
BRACKET_O
MULT

s
GR_EQ
QUOTED_CHAR
AND
MULT

s
LE_EQ
QUOTED_CHAR
BRACKET_C
OR
MULT

s
EQ
QUOTED_CHAR
BRACKET_C
BREAK
SEMICOLON

idx
OP_ASSIGNMENT

simple_strtoul
BRACKET_O

s
COMMA

NULL
COMMA
NUMBER
BRACKET_C
SEMICOLON
MULT

s
OP_ASSIGNMENT
NUMBER
SEMICOLON

add_preferred_console
BRACKET_O

name
COMMA

idx
COMMA

options
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

console_setup
BRACKET_C
SEMICOLON
TYPE_INT

__init

add_preferred_console
BRACKET_O
TYPE_CHAR
MULT

name
COMMA
TYPE_INT

idx
COMMA
TYPE_CHAR
MULT

options
BRACKET_C
CURLY_BRACKET_O
STRUCT

console_cmdline
MULT

c
SEMICOLON
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

MAX_CMDLINECONSOLES
AND

console_cmdline
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

strcmp
BRACKET_O

console_cmdline
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
COMMA

name
BRACKET_C
EQ
NUMBER
AND

console_cmdline
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

index
EQ

idx
BRACKET_C
CURLY_BRACKET_O

selected_console
OP_ASSIGNMENT

i
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

i
EQ

MAX_CMDLINECONSOLES
BRACKET_C

return
MINUS

E2BIG
SEMICOLON

selected_console
OP_ASSIGNMENT

i
SEMICOLON

c
OP_ASSIGNMENT
AMPERSANT

console_cmdline
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

memcpy
BRACKET_O

c
MINUS
GREATER

name
COMMA

name
COMMA

sizeof
BRACKET_O

c
MINUS
GREATER

name
BRACKET_C
BRACKET_C
SEMICOLON

c
MINUS
GREATER

name
CORNER_BRACKET_O

sizeof
BRACKET_O

c
MINUS
GREATER

name
BRACKET_C
MINUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

c
MINUS
GREATER

options
OP_ASSIGNMENT

options
SEMICOLON

c
MINUS
GREATER

index
OP_ASSIGNMENT

idx
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_IFNDEF

CONFIG_DISABLE_CONSOLE_SUSPEND

void

suspend_console
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

acquire_console_sem
BRACKET_O
BRACKET_C
SEMICOLON

console_suspended
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

resume_console
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

console_suspended
OP_ASSIGNMENT
NUMBER
SEMICOLON

release_console_sem
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

void

acquire_console_sem
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

in_interrupt
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

console_suspended
BRACKET_C
CURLY_BRACKET_O

down
BRACKET_O
AMPERSANT

secondary_console_sem
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

down
BRACKET_O
AMPERSANT

console_sem
BRACKET_C
SEMICOLON

console_locked
OP_ASSIGNMENT
NUMBER
SEMICOLON

console_may_schedule
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

acquire_console_sem
BRACKET_C
SEMICOLON
TYPE_INT

try_acquire_console_sem
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

down_trylock
BRACKET_O
AMPERSANT

console_sem
BRACKET_C
BRACKET_C

return
MINUS
NUMBER
SEMICOLON

console_locked
OP_ASSIGNMENT
NUMBER
SEMICOLON

console_may_schedule
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

try_acquire_console_sem
BRACKET_C
SEMICOLON
TYPE_INT

is_console_locked
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

console_locked
SEMICOLON
CURLY_BRACKET_C

void

wake_up_klogd
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

oops_in_progress
AND

waitqueue_active
BRACKET_O
AMPERSANT

log_wait
BRACKET_C
BRACKET_C

wake_up_interruptible
BRACKET_O
AMPERSANT

log_wait
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

release_console_sem
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

_con_start
COMMA

_log_end
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

wake_klogd
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

console_suspended
BRACKET_C
CURLY_BRACKET_O

up
BRACKET_O
AMPERSANT

secondary_console_sem
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

console_may_schedule
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

spin_lock_irqsave
BRACKET_O
AMPERSANT

logbuf_lock
COMMA

flags
BRACKET_C
SEMICOLON

wake_klogd
LOGICAL_OR
OP_ASSIGNMENT

log_start
MINUS

log_end
SEMICOLON
IF
BRACKET_O

con_start
EQ

log_end
BRACKET_C
BREAK
SEMICOLON

_con_start
OP_ASSIGNMENT

con_start
SEMICOLON

_log_end
OP_ASSIGNMENT

log_end
SEMICOLON

con_start
OP_ASSIGNMENT

log_end
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

logbuf_lock
BRACKET_C
SEMICOLON

call_console_drivers
BRACKET_O

_con_start
COMMA

_log_end
BRACKET_C
SEMICOLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

console_locked
OP_ASSIGNMENT
NUMBER
SEMICOLON

up
BRACKET_O
AMPERSANT

console_sem
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

logbuf_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

wake_klogd
BRACKET_C

wake_up_klogd
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

release_console_sem
BRACKET_C
SEMICOLON

void

__sched

console_conditional_schedule
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

console_may_schedule
BRACKET_C

cond_resched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

console_conditional_schedule
BRACKET_C
SEMICOLON

void

console_print
BRACKET_O
CONST
TYPE_CHAR
MULT

s
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_EMERG
STRING
COMMA

s
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

console_print
BRACKET_C
SEMICOLON

void

console_unblank
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

console
MULT

c
SEMICOLON
IF
BRACKET_O

oops_in_progress
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

down_trylock
BRACKET_O
AMPERSANT

console_sem
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

return
SEMICOLON
CURLY_BRACKET_C
ELSE

acquire_console_sem
BRACKET_O
BRACKET_C
SEMICOLON

console_locked
OP_ASSIGNMENT
NUMBER
SEMICOLON

console_may_schedule
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O

c
OP_ASSIGNMENT

console_drivers
SEMICOLON

c
NOT_EQ

NULL
SEMICOLON

c
OP_ASSIGNMENT

c
MINUS
GREATER

next
BRACKET_C
IF
BRACKET_O
BRACKET_O

c
MINUS
GREATER

flags
AMPERSANT

CON_ENABLED
BRACKET_C
AND

c
MINUS
GREATER

unblank
BRACKET_C

c
MINUS
GREATER

unblank
BRACKET_O
BRACKET_C
SEMICOLON

release_console_sem
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

tty_driver
MULT

console_device
BRACKET_O
TYPE_INT
MULT

index
BRACKET_C
CURLY_BRACKET_O
STRUCT

console
MULT

c
SEMICOLON
STRUCT

tty_driver
MULT

driver
OP_ASSIGNMENT

NULL
SEMICOLON

acquire_console_sem
BRACKET_O
BRACKET_C
SEMICOLON
FOR
BRACKET_O

c
OP_ASSIGNMENT

console_drivers
SEMICOLON

c
NOT_EQ

NULL
SEMICOLON

c
OP_ASSIGNMENT

c
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

c
MINUS
GREATER

device
BRACKET_C
CONTINUE
SEMICOLON

driver
OP_ASSIGNMENT

c
MINUS
GREATER

device
BRACKET_O

c
COMMA

index
BRACKET_C
SEMICOLON
IF
BRACKET_O

driver
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

release_console_sem
BRACKET_O
BRACKET_C
SEMICOLON

return

driver
SEMICOLON
CURLY_BRACKET_C

void

console_stop
BRACKET_O
STRUCT

console
MULT

console
BRACKET_C
CURLY_BRACKET_O

acquire_console_sem
BRACKET_O
BRACKET_C
SEMICOLON

console
MINUS
GREATER

flags
AMPERSANT
OP_ASSIGNMENT
TILDE

CON_ENABLED
SEMICOLON

release_console_sem
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

console_stop
BRACKET_C
SEMICOLON

void

console_start
BRACKET_O
STRUCT

console
MULT

console
BRACKET_C
CURLY_BRACKET_O

acquire_console_sem
BRACKET_O
BRACKET_C
SEMICOLON

console
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

CON_ENABLED
SEMICOLON

release_console_sem
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

console_start
BRACKET_C
SEMICOLON

void

register_console
BRACKET_O
STRUCT

console
MULT

console
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

console
MULT

bootconsole
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

console_drivers
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

console
MINUS
GREATER

flags
AMPERSANT

CON_BOOT
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

console_drivers
MINUS
GREATER

flags
AMPERSANT

CON_BOOT
BRACKET_C

bootconsole
OP_ASSIGNMENT

console_drivers
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

preferred_console
LESS
NUMBER
OR

bootconsole
OR
NOT

console_drivers
BRACKET_C

preferred_console
OP_ASSIGNMENT

selected_console
SEMICOLON
IF
BRACKET_O

preferred_console
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

console
MINUS
GREATER

index
LESS
NUMBER
BRACKET_C

console
MINUS
GREATER

index
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

console
MINUS
GREATER

setup
EQ

NULL
OR

console
MINUS
GREATER

setup
BRACKET_O

console
COMMA

NULL
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

console
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

CON_ENABLED
LOGICAL_OR

CON_CONSDEV
SEMICOLON

preferred_console
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

MAX_CMDLINECONSOLES
AND

console_cmdline
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

strcmp
BRACKET_O

console_cmdline
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

name
COMMA

console
MINUS
GREATER

name
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

console
MINUS
GREATER

index
GR_EQ
NUMBER
AND

console
MINUS
GREATER

index
NOT_EQ

console_cmdline
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

index
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

console
MINUS
GREATER

index
LESS
NUMBER
BRACKET_C

console
MINUS
GREATER

index
OP_ASSIGNMENT

console_cmdline
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

index
SEMICOLON
IF
BRACKET_O

console
MINUS
GREATER

setup
AND

console
MINUS
GREATER

setup
BRACKET_O

console
COMMA

console_cmdline
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

options
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
BREAK
SEMICOLON

console
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

CON_ENABLED
SEMICOLON

console
MINUS
GREATER

index
OP_ASSIGNMENT

console_cmdline
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

index
SEMICOLON
IF
BRACKET_O

i
EQ

selected_console
BRACKET_C
CURLY_BRACKET_O

console
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

CON_CONSDEV
SEMICOLON

preferred_console
OP_ASSIGNMENT

selected_console
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT
BRACKET_O

console
MINUS
GREATER

flags
AMPERSANT

CON_ENABLED
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

bootconsole
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_INFO
STRING
COMMA

bootconsole
MINUS
GREATER

name
COMMA

bootconsole
MINUS
GREATER

index
COMMA

console
MINUS
GREATER

name
COMMA

console
MINUS
GREATER

index
BRACKET_C
SEMICOLON

unregister_console
BRACKET_O

bootconsole
BRACKET_C
SEMICOLON

console
MINUS
GREATER

flags
AMPERSANT
OP_ASSIGNMENT
TILDE

CON_PRINTBUFFER
SEMICOLON
CURLY_BRACKET_C

acquire_console_sem
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

console
MINUS
GREATER

flags
AMPERSANT

CON_CONSDEV
BRACKET_C
OR

console_drivers
EQ

NULL
BRACKET_C
CURLY_BRACKET_O

console
MINUS
GREATER

next
OP_ASSIGNMENT

console_drivers
SEMICOLON

console_drivers
OP_ASSIGNMENT

console
SEMICOLON
IF
BRACKET_O

console
MINUS
GREATER

next
BRACKET_C

console
MINUS
GREATER

next
MINUS
GREATER

flags
AMPERSANT
OP_ASSIGNMENT
TILDE

CON_CONSDEV
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

console
MINUS
GREATER

next
OP_ASSIGNMENT

console_drivers
MINUS
GREATER

next
SEMICOLON

console_drivers
MINUS
GREATER

next
OP_ASSIGNMENT

console
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

console
MINUS
GREATER

flags
AMPERSANT

CON_PRINTBUFFER
BRACKET_C
CURLY_BRACKET_O

spin_lock_irqsave
BRACKET_O
AMPERSANT

logbuf_lock
COMMA

flags
BRACKET_C
SEMICOLON

con_start
OP_ASSIGNMENT

log_start
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

logbuf_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

release_console_sem
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

register_console
BRACKET_C
SEMICOLON
TYPE_INT

unregister_console
BRACKET_O
STRUCT

console
MULT

console
BRACKET_C
CURLY_BRACKET_O
STRUCT

console
MULT

a
COMMA
MULT

b
SEMICOLON
TYPE_INT

res
OP_ASSIGNMENT
NUMBER
SEMICOLON

acquire_console_sem
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

console_drivers
EQ

console
BRACKET_C
CURLY_BRACKET_O

console_drivers
OP_ASSIGNMENT

console
MINUS
GREATER

next
SEMICOLON

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

console_drivers
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

a
OP_ASSIGNMENT

console_drivers
MINUS
GREATER

next
COMMA

b
OP_ASSIGNMENT

console_drivers
SEMICOLON

a
SEMICOLON

b
OP_ASSIGNMENT

a
COMMA

a
OP_ASSIGNMENT

b
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

a
EQ

console
BRACKET_C
CURLY_BRACKET_O

b
MINUS
GREATER

next
OP_ASSIGNMENT

a
MINUS
GREATER

next
SEMICOLON

res
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

console_drivers
NOT_EQ

NULL
AND

console
MINUS
GREATER

flags
AMPERSANT

CON_CONSDEV
BRACKET_C

console_drivers
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

CON_CONSDEV
SEMICOLON

release_console_sem
BRACKET_O
BRACKET_C
SEMICOLON

return

res
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

unregister_console
BRACKET_C
SEMICOLON

void

tty_write_message
BRACKET_O
STRUCT

tty_struct
MULT

tty
COMMA
TYPE_CHAR
MULT

msg
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

tty
AND

tty
MINUS
GREATER

driver
MINUS
GREATER

write
BRACKET_C

tty
MINUS
GREATER

driver
MINUS
GREATER

write
BRACKET_O

tty
COMMA

msg
COMMA

strlen
BRACKET_O

msg
BRACKET_C
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__printk_ratelimit
BRACKET_O
TYPE_INT

ratelimit_jiffies
COMMA
TYPE_INT

ratelimit_burst
BRACKET_C
CURLY_BRACKET_O

static

DEFINE_SPINLOCK
BRACKET_O

ratelimit_lock
BRACKET_C
SEMICOLON

static
TYPE_UNSIGNED
TYPE_LONG

toks
OP_ASSIGNMENT
NUMBER
MULT
NUMBER
MULT

HZ
SEMICOLON

static
TYPE_UNSIGNED
TYPE_LONG

last_msg
SEMICOLON

static
TYPE_INT

missed
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

now
OP_ASSIGNMENT

jiffies
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

ratelimit_lock
COMMA

flags
BRACKET_C
SEMICOLON

toks
ASSIGN_PLUS

now
MINUS

last_msg
SEMICOLON

last_msg
OP_ASSIGNMENT

now
SEMICOLON
IF
BRACKET_O

toks
GREATER
BRACKET_O

ratelimit_burst
MULT

ratelimit_jiffies
BRACKET_C
BRACKET_C

toks
OP_ASSIGNMENT

ratelimit_burst
MULT

ratelimit_jiffies
SEMICOLON
IF
BRACKET_O

toks
GR_EQ

ratelimit_jiffies
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

lost
OP_ASSIGNMENT

missed
SEMICOLON

missed
OP_ASSIGNMENT
NUMBER
SEMICOLON

toks
ASSIGN_MINUS

ratelimit_jiffies
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

ratelimit_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

lost
BRACKET_C

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

lost
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

missed
PLUS
PLUS
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

ratelimit_lock
COMMA

flags
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__printk_ratelimit
BRACKET_C
SEMICOLON
TYPE_INT

printk_ratelimit_jiffies
OP_ASSIGNMENT
NUMBER
MULT

HZ
SEMICOLON
TYPE_INT

printk_ratelimit_burst
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

printk_ratelimit
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

__printk_ratelimit
BRACKET_O

printk_ratelimit_jiffies
COMMA

printk_ratelimit_burst
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

printk_ratelimit
BRACKET_C
SEMICOLON

bool

printk_timed_ratelimit
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
MULT

caller_jiffies
COMMA
TYPE_UNSIGNED
TYPE_INT

interval_msecs
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
MULT

caller_jiffies
EQ
NUMBER
OR

time_after
BRACKET_O

jiffies
COMMA
MULT

caller_jiffies
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
MULT

caller_jiffies
OP_ASSIGNMENT

jiffies
PLUS

msecs_to_jiffies
BRACKET_O

interval_msecs
BRACKET_C
SEMICOLON

return

true
SEMICOLON
CURLY_BRACKET_C

return

false
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

printk_timed_ratelimit
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
STRUCT

profile_hit
CURLY_BRACKET_O

u32

pc
COMMA

hits
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
PP_DEFINE

PROFILE_GRPSHIFT
NUMBER
PP_DEFINE

PROFILE_GRPSZ
BRACKET_O
NUMBER
LESS
LESS

PROFILE_GRPSHIFT
BRACKET_C
PP_DEFINE

NR_PROFILE_HIT
BRACKET_O

PAGE_SIZE
DIV

sizeof
BRACKET_O
STRUCT

profile_hit
BRACKET_C
BRACKET_C
PP_DEFINE

NR_PROFILE_GRP
BRACKET_O

NR_PROFILE_HIT
DIV

PROFILE_GRPSZ
BRACKET_C
TYPE_INT
BRACKET_O
MULT

timer_hook
BRACKET_C
BRACKET_O
STRUCT

pt_regs
MULT
BRACKET_C

__read_mostly
SEMICOLON

static

atomic_t
MULT

prof_buffer
SEMICOLON

static
TYPE_UNSIGNED
TYPE_LONG

prof_len
COMMA

prof_shift
SEMICOLON
TYPE_INT

prof_on

__read_mostly
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

prof_on
BRACKET_C
SEMICOLON

static

cpumask_t

prof_cpu_mask
OP_ASSIGNMENT

CPU_MASK_ALL
SEMICOLON
PP_IFDEF

CONFIG_SMP

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

profile_hit
MULT
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

cpu_profile_hits
BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
TYPE_INT
COMMA

cpu_profile_flip
BRACKET_C
SEMICOLON

static

DEFINE_MUTEX
BRACKET_O

profile_flip_mutex
BRACKET_C
SEMICOLON
PP_ENDIF

static
TYPE_INT

__init

profile_setup
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

static
TYPE_CHAR

__initdata

schedstr
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
SEMICOLON

static
TYPE_CHAR

__initdata

sleepstr
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
SEMICOLON

static
TYPE_CHAR

__initdata

kvmstr
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
SEMICOLON
TYPE_INT

par
SEMICOLON
IF
BRACKET_O
NOT

strncmp
BRACKET_O

str
COMMA

sleepstr
COMMA

strlen
BRACKET_O

sleepstr
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

prof_on
OP_ASSIGNMENT

SLEEP_PROFILING
SEMICOLON
IF
BRACKET_O

str
CORNER_BRACKET_O

strlen
BRACKET_O

sleepstr
BRACKET_C
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

str
ASSIGN_PLUS

strlen
BRACKET_O

sleepstr
BRACKET_C
PLUS
NUMBER
SEMICOLON
IF
BRACKET_O

get_option
BRACKET_O
AMPERSANT

str
COMMA
AMPERSANT

par
BRACKET_C
BRACKET_C

prof_shift
OP_ASSIGNMENT

par
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
COMMA

prof_shift
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
NOT

strncmp
BRACKET_O

str
COMMA

schedstr
COMMA

strlen
BRACKET_O

schedstr
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

prof_on
OP_ASSIGNMENT

SCHED_PROFILING
SEMICOLON
IF
BRACKET_O

str
CORNER_BRACKET_O

strlen
BRACKET_O

schedstr
BRACKET_C
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

str
ASSIGN_PLUS

strlen
BRACKET_O

schedstr
BRACKET_C
PLUS
NUMBER
SEMICOLON
IF
BRACKET_O

get_option
BRACKET_O
AMPERSANT

str
COMMA
AMPERSANT

par
BRACKET_C
BRACKET_C

prof_shift
OP_ASSIGNMENT

par
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
COMMA

prof_shift
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
NOT

strncmp
BRACKET_O

str
COMMA

kvmstr
COMMA

strlen
BRACKET_O

kvmstr
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

prof_on
OP_ASSIGNMENT

KVM_PROFILING
SEMICOLON
IF
BRACKET_O

str
CORNER_BRACKET_O

strlen
BRACKET_O

kvmstr
BRACKET_C
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

str
ASSIGN_PLUS

strlen
BRACKET_O

kvmstr
BRACKET_C
PLUS
NUMBER
SEMICOLON
IF
BRACKET_O

get_option
BRACKET_O
AMPERSANT

str
COMMA
AMPERSANT

par
BRACKET_C
BRACKET_C

prof_shift
OP_ASSIGNMENT

par
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
COMMA

prof_shift
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

get_option
BRACKET_O
AMPERSANT

str
COMMA
AMPERSANT

par
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

prof_shift
OP_ASSIGNMENT

par
SEMICOLON

prof_on
OP_ASSIGNMENT

CPU_PROFILING
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
COMMA

prof_shift
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

profile_setup
BRACKET_C
SEMICOLON

void

__init

profile_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

prof_on
BRACKET_C

return
SEMICOLON

prof_len
OP_ASSIGNMENT
BRACKET_O

_etext
MINUS

_stext
BRACKET_C
GREATER
GREATER

prof_shift
SEMICOLON

prof_buffer
OP_ASSIGNMENT

alloc_bootmem
BRACKET_O

prof_len
MULT

sizeof
BRACKET_O

atomic_t
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_PROFILING

static

BLOCKING_NOTIFIER_HEAD
BRACKET_O

task_exit_notifier
BRACKET_C
SEMICOLON

static

ATOMIC_NOTIFIER_HEAD
BRACKET_O

task_free_notifier
BRACKET_C
SEMICOLON

static

BLOCKING_NOTIFIER_HEAD
BRACKET_O

munmap_notifier
BRACKET_C
SEMICOLON

void

profile_task_exit
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O

blocking_notifier_call_chain
BRACKET_O
AMPERSANT

task_exit_notifier
COMMA
NUMBER
COMMA

task
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

profile_handoff_task
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

ret
OP_ASSIGNMENT

atomic_notifier_call_chain
BRACKET_O
AMPERSANT

task_free_notifier
COMMA
NUMBER
COMMA

task
BRACKET_C
SEMICOLON

return
BRACKET_O

ret
EQ

NOTIFY_OK
BRACKET_C
QUESTION_MARK
NUMBER
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

profile_munmap
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O

blocking_notifier_call_chain
BRACKET_O
AMPERSANT

munmap_notifier
COMMA
NUMBER
COMMA
BRACKET_O

void
MULT
BRACKET_C

addr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

task_handoff_register
BRACKET_O
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O

return

atomic_notifier_chain_register
BRACKET_O
AMPERSANT

task_free_notifier
COMMA

n
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

task_handoff_unregister
BRACKET_O
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O

return

atomic_notifier_chain_unregister
BRACKET_O
AMPERSANT

task_free_notifier
COMMA

n
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

profile_event_register
BRACKET_O

enum

profile_type

type
COMMA
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
SWITCH
BRACKET_O

type
BRACKET_C
CURLY_BRACKET_O

case

PROFILE_TASK_EXIT
COLON

err
OP_ASSIGNMENT

blocking_notifier_chain_register
BRACKET_O
AMPERSANT

task_exit_notifier
COMMA

n
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PROFILE_MUNMAP
COLON

err
OP_ASSIGNMENT

blocking_notifier_chain_register
BRACKET_O
AMPERSANT

munmap_notifier
COMMA

n
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

err
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

profile_event_unregister
BRACKET_O

enum

profile_type

type
COMMA
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
SWITCH
BRACKET_O

type
BRACKET_C
CURLY_BRACKET_O

case

PROFILE_TASK_EXIT
COLON

err
OP_ASSIGNMENT

blocking_notifier_chain_unregister
BRACKET_O
AMPERSANT

task_exit_notifier
COMMA

n
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PROFILE_MUNMAP
COLON

err
OP_ASSIGNMENT

blocking_notifier_chain_unregister
BRACKET_O
AMPERSANT

munmap_notifier
COMMA

n
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

err
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

register_timer_hook
BRACKET_O
TYPE_INT
BRACKET_O
MULT

hook
BRACKET_C
BRACKET_O
STRUCT

pt_regs
MULT
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

timer_hook
BRACKET_C

return
MINUS

EBUSY
SEMICOLON

timer_hook
OP_ASSIGNMENT

hook
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

unregister_timer_hook
BRACKET_O
TYPE_INT
BRACKET_O
MULT

hook
BRACKET_C
BRACKET_O
STRUCT

pt_regs
MULT
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

WARN_ON
BRACKET_O

hook
NOT_EQ

timer_hook
BRACKET_C
SEMICOLON

timer_hook
OP_ASSIGNMENT

NULL
SEMICOLON

synchronize_sched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

register_timer_hook
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

unregister_timer_hook
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

task_handoff_register
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

task_handoff_unregister
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

profile_event_register
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

profile_event_unregister
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_SMP

static

void

__profile_flip_buffers
BRACKET_O

void
MULT

unused
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON

per_cpu
BRACKET_O

cpu_profile_flip
COMMA

cpu
BRACKET_C
OP_ASSIGNMENT
NOT

per_cpu
BRACKET_O

cpu_profile_flip
COMMA

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

profile_flip_buffers
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

j
COMMA

cpu
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

profile_flip_mutex
BRACKET_C
SEMICOLON

j
OP_ASSIGNMENT

per_cpu
BRACKET_O

cpu_profile_flip
COMMA

get_cpu
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

put_cpu
BRACKET_O
BRACKET_C
SEMICOLON

on_each_cpu
BRACKET_O

__profile_flip_buffers
COMMA

NULL
COMMA
NUMBER
COMMA
NUMBER
BRACKET_C
SEMICOLON

for_each_online_cpu
BRACKET_O

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

profile_hit
MULT

hits
OP_ASSIGNMENT

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O

j
CORNER_BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

NR_PROFILE_HIT
SEMICOLON
PLUS
PLUS

i
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

hits
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

hits
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

hits
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

pc
BRACKET_C

hits
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

pc
OP_ASSIGNMENT
NUMBER
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

atomic_add
BRACKET_O

hits
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

hits
COMMA
AMPERSANT

prof_buffer
CORNER_BRACKET_O

hits
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

pc
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

hits
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

hits
OP_ASSIGNMENT

hits
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

pc
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

profile_flip_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

profile_discard_flip_buffers
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

cpu
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

profile_flip_mutex
BRACKET_C
SEMICOLON

i
OP_ASSIGNMENT

per_cpu
BRACKET_O

cpu_profile_flip
COMMA

get_cpu
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

put_cpu
BRACKET_O
BRACKET_C
SEMICOLON

on_each_cpu
BRACKET_O

__profile_flip_buffers
COMMA

NULL
COMMA
NUMBER
COMMA
NUMBER
BRACKET_C
SEMICOLON

for_each_online_cpu
BRACKET_O

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

profile_hit
MULT

hits
OP_ASSIGNMENT

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

memset
BRACKET_O

hits
COMMA
NUMBER
COMMA

NR_PROFILE_HIT
MULT

sizeof
BRACKET_O
STRUCT

profile_hit
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

profile_flip_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

profile_hits
BRACKET_O
TYPE_INT

type
COMMA

void
MULT

__pc
COMMA
TYPE_UNSIGNED
TYPE_INT

nr_hits
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

primary
COMMA

secondary
COMMA

flags
COMMA

pc
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__pc
SEMICOLON
TYPE_INT

i
COMMA

j
COMMA

cpu
SEMICOLON
STRUCT

profile_hit
MULT

hits
SEMICOLON
IF
BRACKET_O

prof_on
NOT_EQ

type
OR
NOT

prof_buffer
BRACKET_C

return
SEMICOLON

pc
OP_ASSIGNMENT

min
BRACKET_O
BRACKET_O

pc
MINUS
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_stext
BRACKET_C
GREATER
GREATER

prof_shift
COMMA

prof_len
MINUS
NUMBER
BRACKET_C
SEMICOLON

i
OP_ASSIGNMENT

primary
OP_ASSIGNMENT
BRACKET_O

pc
AMPERSANT
BRACKET_O

NR_PROFILE_GRP
MINUS
NUMBER
BRACKET_C
BRACKET_C
LESS
LESS

PROFILE_GRPSHIFT
SEMICOLON

secondary
OP_ASSIGNMENT
BRACKET_O
TILDE
BRACKET_O

pc
LESS
LESS
NUMBER
BRACKET_C
AMPERSANT
BRACKET_O

NR_PROFILE_GRP
MINUS
NUMBER
BRACKET_C
BRACKET_C
LESS
LESS

PROFILE_GRPSHIFT
SEMICOLON

cpu
OP_ASSIGNMENT

get_cpu
BRACKET_O
BRACKET_C
SEMICOLON

hits
OP_ASSIGNMENT

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O

per_cpu
BRACKET_O

cpu_profile_flip
COMMA

cpu
BRACKET_C
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

hits
BRACKET_C
CURLY_BRACKET_O

put_cpu
BRACKET_O
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

PROFILE_GRPSZ
SEMICOLON
PLUS
PLUS

j
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

hits
CORNER_BRACKET_O

i
PLUS

j
CORNER_BRACKET_C
DOT

pc
EQ

pc
BRACKET_C
CURLY_BRACKET_O

hits
CORNER_BRACKET_O

i
PLUS

j
CORNER_BRACKET_C
DOT

hits
ASSIGN_PLUS

nr_hits
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
NOT

hits
CORNER_BRACKET_O

i
PLUS

j
CORNER_BRACKET_C
DOT

hits
BRACKET_C
CURLY_BRACKET_O

hits
CORNER_BRACKET_O

i
PLUS

j
CORNER_BRACKET_C
DOT

pc
OP_ASSIGNMENT

pc
SEMICOLON

hits
CORNER_BRACKET_O

i
PLUS

j
CORNER_BRACKET_C
DOT

hits
OP_ASSIGNMENT

nr_hits
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

i
OP_ASSIGNMENT
BRACKET_O

i
PLUS

secondary
BRACKET_C
AMPERSANT
BRACKET_O

NR_PROFILE_HIT
MINUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

i
NOT_EQ

primary
BRACKET_C
SEMICOLON

atomic_add
BRACKET_O

nr_hits
COMMA
AMPERSANT

prof_buffer
CORNER_BRACKET_O

pc
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

NR_PROFILE_HIT
SEMICOLON
PLUS
PLUS

i
BRACKET_C
CURLY_BRACKET_O

atomic_add
BRACKET_O

hits
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

hits
COMMA
AMPERSANT

prof_buffer
CORNER_BRACKET_O

hits
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

pc
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

hits
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

pc
OP_ASSIGNMENT

hits
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

hits
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

out
COLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON

put_cpu
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__devinit

profile_cpu_callback
BRACKET_O
STRUCT

notifier_block
MULT

info
COMMA
TYPE_UNSIGNED
TYPE_LONG

action
COMMA

void
MULT

__cpu
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

node
COMMA

cpu
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__cpu
SEMICOLON
STRUCT

page
MULT

page
SEMICOLON
SWITCH
BRACKET_O

action
BRACKET_C
CURLY_BRACKET_O

case

CPU_UP_PREPARE
COLON

case

CPU_UP_PREPARE_FROZEN
COLON

node
OP_ASSIGNMENT

cpu_to_node
BRACKET_O

cpu
BRACKET_C
SEMICOLON

per_cpu
BRACKET_O

cpu_profile_flip
COMMA

cpu
BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

page
OP_ASSIGNMENT

alloc_pages_node
BRACKET_O

node
COMMA

GFP_KERNEL
LOGICAL_OR

__GFP_ZERO
LOGICAL_OR

GFP_THISNODE
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

page
BRACKET_C

return

NOTIFY_BAD
SEMICOLON

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

page_address
BRACKET_O

page
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

page
OP_ASSIGNMENT

alloc_pages_node
BRACKET_O

node
COMMA

GFP_KERNEL
LOGICAL_OR

__GFP_ZERO
LOGICAL_OR

GFP_THISNODE
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

page
BRACKET_C

goto

out_free
SEMICOLON

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

page_address
BRACKET_O

page
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON

out_free
COLON

page
OP_ASSIGNMENT

virt_to_page
BRACKET_O

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

__free_page
BRACKET_O

page
BRACKET_C
SEMICOLON

return

NOTIFY_BAD
SEMICOLON

case

CPU_ONLINE
COLON

case

CPU_ONLINE_FROZEN
COLON

cpu_set
BRACKET_O

cpu
COMMA

prof_cpu_mask
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPU_UP_CANCELED
COLON

case

CPU_UP_CANCELED_FROZEN
COLON

case

CPU_DEAD
COLON

case

CPU_DEAD_FROZEN
COLON

cpu_clear
BRACKET_O

cpu
COMMA

prof_cpu_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

page
OP_ASSIGNMENT

virt_to_page
BRACKET_O

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

__free_page
BRACKET_O

page
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

page
OP_ASSIGNMENT

virt_to_page
BRACKET_O

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

__free_page
BRACKET_O

page
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

return

NOTIFY_OK
SEMICOLON
CURLY_BRACKET_C
PP_ELSE
PP_DEFINE

profile_flip_buffers
BRACKET_O
BRACKET_C
DO
CURLY_BRACKET_O
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

profile_discard_flip_buffers
BRACKET_O
BRACKET_C
DO
CURLY_BRACKET_O
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

profile_cpu_callback

NULL

void

profile_hits
BRACKET_O
TYPE_INT

type
COMMA

void
MULT

__pc
COMMA
TYPE_UNSIGNED
TYPE_INT

nr_hits
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

pc
SEMICOLON
IF
BRACKET_O

prof_on
NOT_EQ

type
OR
NOT

prof_buffer
BRACKET_C

return
SEMICOLON

pc
OP_ASSIGNMENT
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__pc
MINUS
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

_stext
BRACKET_C
GREATER
GREATER

prof_shift
SEMICOLON

atomic_add
BRACKET_O

nr_hits
COMMA
AMPERSANT

prof_buffer
CORNER_BRACKET_O

min
BRACKET_O

pc
COMMA

prof_len
MINUS
NUMBER
BRACKET_C
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

EXPORT_SYMBOL_GPL
BRACKET_O

profile_hits
BRACKET_C
SEMICOLON

void

profile_tick
BRACKET_O
TYPE_INT

type
BRACKET_C
CURLY_BRACKET_O
STRUCT

pt_regs
MULT

regs
OP_ASSIGNMENT

get_irq_regs
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

type
EQ

CPU_PROFILING
AND

timer_hook
BRACKET_C

timer_hook
BRACKET_O

regs
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

user_mode
BRACKET_O

regs
BRACKET_C
AND

cpu_isset
BRACKET_O

smp_processor_id
BRACKET_O
BRACKET_C
COMMA

prof_cpu_mask
BRACKET_C
BRACKET_C

profile_hit
BRACKET_O

type
COMMA
BRACKET_O

void
MULT
BRACKET_C

profile_pc
BRACKET_O

regs
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_PROC_FS
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static
TYPE_INT

prof_cpu_mask_read_proc
BRACKET_O
TYPE_CHAR
MULT

page
COMMA
TYPE_CHAR
MULT
MULT

start
COMMA

off_t

off
COMMA
TYPE_INT

count
COMMA
TYPE_INT
MULT

eof
COMMA

void
MULT

data
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

len
OP_ASSIGNMENT

cpumask_scnprintf
BRACKET_O

page
COMMA

count
COMMA
MULT
BRACKET_O

cpumask_t
MULT
BRACKET_C

data
BRACKET_C
SEMICOLON
IF
BRACKET_O

count
MINUS

len
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

len
ASSIGN_PLUS

sprintf
BRACKET_O

page
PLUS

len
COMMA
STRING
BRACKET_C
SEMICOLON

return

len
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

prof_cpu_mask_write_proc
BRACKET_O
STRUCT

file
MULT

file
COMMA
CONST
TYPE_CHAR

__user
MULT

buffer
COMMA
TYPE_UNSIGNED
TYPE_LONG

count
COMMA

void
MULT

data
BRACKET_C
CURLY_BRACKET_O

cpumask_t
MULT

mask
OP_ASSIGNMENT
BRACKET_O

cpumask_t
MULT
BRACKET_C

data
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

full_count
OP_ASSIGNMENT

count
COMMA

err
SEMICOLON

cpumask_t

new_value
SEMICOLON

err
OP_ASSIGNMENT

cpumask_parse_user
BRACKET_O

buffer
COMMA

count
COMMA

new_value
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

return

err
SEMICOLON
MULT

mask
OP_ASSIGNMENT

new_value
SEMICOLON

return

full_count
SEMICOLON
CURLY_BRACKET_C

void

create_prof_cpu_mask
BRACKET_O
STRUCT

proc_dir_entry
MULT

root_irq_dir
BRACKET_C
CURLY_BRACKET_O
STRUCT

proc_dir_entry
MULT

entry
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

entry
OP_ASSIGNMENT

create_proc_entry
BRACKET_O
STRING
COMMA
NUMBER
COMMA

root_irq_dir
BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON

entry
MINUS
GREATER

data
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C
AMPERSANT

prof_cpu_mask
SEMICOLON

entry
MINUS
GREATER

read_proc
OP_ASSIGNMENT

prof_cpu_mask_read_proc
SEMICOLON

entry
MINUS
GREATER

write_proc
OP_ASSIGNMENT

prof_cpu_mask_write_proc
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

read_profile
BRACKET_O
STRUCT

file
MULT

file
COMMA
TYPE_CHAR

__user
MULT

buf
COMMA

size_t

count
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

p
OP_ASSIGNMENT
MULT

ppos
SEMICOLON

ssize_t

read
SEMICOLON
TYPE_CHAR
MULT

pnt
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

sample_step
OP_ASSIGNMENT
NUMBER
LESS
LESS

prof_shift
SEMICOLON

profile_flip_buffers
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
GR_EQ
BRACKET_O

prof_len
PLUS
NUMBER
BRACKET_C
MULT

sizeof
BRACKET_O
TYPE_UNSIGNED
TYPE_INT
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

count
GREATER
BRACKET_O

prof_len
PLUS
NUMBER
BRACKET_C
MULT

sizeof
BRACKET_O
TYPE_UNSIGNED
TYPE_INT
BRACKET_C
MINUS

p
BRACKET_C

count
OP_ASSIGNMENT
BRACKET_O

prof_len
PLUS
NUMBER
BRACKET_C
MULT

sizeof
BRACKET_O
TYPE_UNSIGNED
TYPE_INT
BRACKET_C
MINUS

p
SEMICOLON

read
OP_ASSIGNMENT
NUMBER
SEMICOLON
WHILE
BRACKET_O

p
LESS

sizeof
BRACKET_O
TYPE_UNSIGNED
TYPE_INT
BRACKET_C
AND

count
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

put_user
BRACKET_O
MULT
BRACKET_O
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C
BRACKET_O
AMPERSANT

sample_step
BRACKET_C
PLUS

p
BRACKET_C
COMMA

buf
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

buf
PLUS
PLUS
SEMICOLON

p
PLUS
PLUS
SEMICOLON

count
MINUS
MINUS
SEMICOLON

read
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

pnt
OP_ASSIGNMENT
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

prof_buffer
PLUS

p
MINUS

sizeof
BRACKET_O

atomic_t
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

buf
COMMA
BRACKET_O

void
MULT
BRACKET_C

pnt
COMMA

count
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

read
ASSIGN_PLUS

count
SEMICOLON
MULT

ppos
ASSIGN_PLUS

read
SEMICOLON

return

read
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

write_profile
BRACKET_O
STRUCT

file
MULT

file
COMMA
CONST
TYPE_CHAR

__user
MULT

buf
COMMA

size_t

count
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_SMP

extern
TYPE_INT

setup_profiling_timer
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

multiplier
BRACKET_C
SEMICOLON
IF
BRACKET_O

count
EQ

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

multiplier
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

multiplier
COMMA

buf
COMMA

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

setup_profiling_timer
BRACKET_O

multiplier
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

profile_discard_flip_buffers
BRACKET_O
BRACKET_C
SEMICOLON

memset
BRACKET_O

prof_buffer
COMMA
NUMBER
COMMA

prof_len
MULT

sizeof
BRACKET_O

atomic_t
BRACKET_C
BRACKET_C
SEMICOLON

return

count
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

file_operations

proc_profile_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

read
OP_ASSIGNMENT

read_profile
COMMA
DOT

write
OP_ASSIGNMENT

write_profile
COMMA
CURLY_BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SMP

static

void

__init

profile_nop
BRACKET_O

void
MULT

unused
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static
TYPE_INT

__init

create_hash_tables
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
SEMICOLON

for_each_online_cpu
BRACKET_O

cpu
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

node
OP_ASSIGNMENT

cpu_to_node
BRACKET_O

cpu
BRACKET_C
SEMICOLON
STRUCT

page
MULT

page
SEMICOLON

page
OP_ASSIGNMENT

alloc_pages_node
BRACKET_O

node
COMMA

GFP_KERNEL
LOGICAL_OR

__GFP_ZERO
LOGICAL_OR

GFP_THISNODE
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

page
BRACKET_C

goto

out_cleanup
SEMICOLON

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
BRACKET_O
STRUCT

profile_hit
MULT
BRACKET_C

page_address
BRACKET_O

page
BRACKET_C
SEMICOLON

page
OP_ASSIGNMENT

alloc_pages_node
BRACKET_O

node
COMMA

GFP_KERNEL
LOGICAL_OR

__GFP_ZERO
LOGICAL_OR

GFP_THISNODE
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

page
BRACKET_C

goto

out_cleanup
SEMICOLON

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
BRACKET_O
STRUCT

profile_hit
MULT
BRACKET_C

page_address
BRACKET_O

page
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON

out_cleanup
COLON

prof_on
OP_ASSIGNMENT
NUMBER
SEMICOLON

smp_mb
BRACKET_O
BRACKET_C
SEMICOLON

on_each_cpu
BRACKET_O

profile_nop
COMMA

NULL
COMMA
NUMBER
COMMA
NUMBER
BRACKET_C
SEMICOLON

for_each_online_cpu
BRACKET_O

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

page
MULT

page
SEMICOLON
IF
BRACKET_O

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

page
OP_ASSIGNMENT

virt_to_page
BRACKET_O

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

__free_page
BRACKET_O

page
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

page
OP_ASSIGNMENT

virt_to_page
BRACKET_O

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

per_cpu
BRACKET_O

cpu_profile_hits
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

__free_page
BRACKET_O

page
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
MINUS
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ELSE
PP_DEFINE

create_hash_tables
BRACKET_O
BRACKET_C
BRACKET_O
CURLY_BRACKET_O
NUMBER
SEMICOLON
CURLY_BRACKET_C
BRACKET_C
PP_ENDIF

static
TYPE_INT

__init

create_proc_profile
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

proc_dir_entry
MULT

entry
SEMICOLON
IF
BRACKET_O
NOT

prof_on
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

create_hash_tables
BRACKET_O
BRACKET_C
BRACKET_C

return
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

entry
OP_ASSIGNMENT

create_proc_entry
BRACKET_O
STRING
COMMA

S_IWUSR
LOGICAL_OR

S_IRUGO
COMMA

NULL
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

entry
MINUS
GREATER

proc_fops
OP_ASSIGNMENT
AMPERSANT

proc_profile_operations
SEMICOLON

entry
MINUS
GREATER

size
OP_ASSIGNMENT
BRACKET_O
NUMBER
PLUS

prof_len
BRACKET_C
MULT

sizeof
BRACKET_O

atomic_t
BRACKET_C
SEMICOLON

hotcpu_notifier
BRACKET_O

profile_cpu_callback
COMMA
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

module_init
BRACKET_O

create_proc_profile
BRACKET_C
SEMICOLON
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

void

__ptrace_link
BRACKET_O
STRUCT

task_struct
MULT

child
COMMA
STRUCT

task_struct
MULT

new_parent
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

child
MINUS
GREATER

ptrace_list
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

child
MINUS
GREATER

parent
EQ

new_parent
BRACKET_C

return
SEMICOLON

list_add
BRACKET_O
AMPERSANT

child
MINUS
GREATER

ptrace_list
COMMA
AMPERSANT

child
MINUS
GREATER

parent
MINUS
GREATER

ptrace_children
BRACKET_C
SEMICOLON

remove_parent
BRACKET_O

child
BRACKET_C
SEMICOLON

child
MINUS
GREATER

parent
OP_ASSIGNMENT

new_parent
SEMICOLON

add_parent
BRACKET_O

child
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

ptrace_untrace
BRACKET_O
STRUCT

task_struct
MULT

child
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

child
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

child
MINUS
GREATER

state
EQ

TASK_TRACED
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

child
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_STOP_STOPPED
BRACKET_C
CURLY_BRACKET_O

child
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_STOPPED
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

signal_wake_up
BRACKET_O

child
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

child
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__ptrace_unlink
BRACKET_O
STRUCT

task_struct
MULT

child
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O
NOT

child
MINUS
GREATER

ptrace
BRACKET_C
SEMICOLON

child
MINUS
GREATER

ptrace
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

child
MINUS
GREATER

ptrace_list
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

list_del_init
BRACKET_O
AMPERSANT

child
MINUS
GREATER

ptrace_list
BRACKET_C
SEMICOLON

remove_parent
BRACKET_O

child
BRACKET_C
SEMICOLON

child
MINUS
GREATER

parent
OP_ASSIGNMENT

child
MINUS
GREATER

real_parent
SEMICOLON

add_parent
BRACKET_O

child
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

child
MINUS
GREATER

state
EQ

TASK_TRACED
BRACKET_C

ptrace_untrace
BRACKET_O

child
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

ptrace_check_attach
BRACKET_O
STRUCT

task_struct
MULT

child
COMMA
TYPE_INT

kill
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

child
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C
AND

child
MINUS
GREATER

parent
EQ

current
AND
BRACKET_O
NOT
BRACKET_O

child
MINUS
GREATER

ptrace
AMPERSANT

PT_ATTACHED
BRACKET_C
OR

child
MINUS
GREATER

real_parent
NOT_EQ

current
BRACKET_C
AND

child
MINUS
GREATER

signal
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

child
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

child
MINUS
GREATER

state
EQ

TASK_STOPPED
BRACKET_C
CURLY_BRACKET_O

child
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_TRACED
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

child
MINUS
GREATER

state
NOT_EQ

TASK_TRACED
AND
NOT

kill
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

child
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
AND
NOT

kill
BRACKET_C
CURLY_BRACKET_O

wait_task_inactive
BRACKET_O

child
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

may_attach
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

dumpable
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

task
EQ

current
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O
BRACKET_O

current
MINUS
GREATER

uid
NOT_EQ

task
MINUS
GREATER

euid
BRACKET_C
OR
BRACKET_O

current
MINUS
GREATER

uid
NOT_EQ

task
MINUS
GREATER

suid
BRACKET_C
OR
BRACKET_O

current
MINUS
GREATER

uid
NOT_EQ

task
MINUS
GREATER

uid
BRACKET_C
OR
BRACKET_O

current
MINUS
GREATER

gid
NOT_EQ

task
MINUS
GREATER

egid
BRACKET_C
OR
BRACKET_O

current
MINUS
GREATER

gid
NOT_EQ

task
MINUS
GREATER

sgid
BRACKET_C
OR
BRACKET_O

current
MINUS
GREATER

gid
NOT_EQ

task
MINUS
GREATER

gid
BRACKET_C
BRACKET_C
AND
NOT

capable
BRACKET_O

CAP_SYS_PTRACE
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON

smp_rmb
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

task
MINUS
GREATER

mm
BRACKET_C

dumpable
OP_ASSIGNMENT

task
MINUS
GREATER

mm
MINUS
GREATER

dumpable
SEMICOLON
IF
BRACKET_O
NOT

dumpable
AND
NOT

capable
BRACKET_O

CAP_SYS_PTRACE
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON

return

security_ptrace
BRACKET_O

current
COMMA

task
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

ptrace_may_attach
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
SEMICOLON

task_lock
BRACKET_O

task
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

may_attach
BRACKET_O

task
BRACKET_C
SEMICOLON

task_unlock
BRACKET_O

task
BRACKET_C
SEMICOLON

return
NOT

err
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

ptrace_attach
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON

audit_ptrace
BRACKET_O

task
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

task
MINUS
GREATER

pid
LE_EQ
NUMBER
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

task
MINUS
GREATER

tgid
EQ

current
MINUS
GREATER

tgid
BRACKET_C

goto

out
SEMICOLON

repeat
COLON

task_lock
BRACKET_O

task
BRACKET_C
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

write_trylock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

task_unlock
BRACKET_O

task
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

write_can_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
BRACKET_C
SEMICOLON

goto

repeat
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

task
MINUS
GREATER

mm
BRACKET_C

goto

bad
SEMICOLON
IF
BRACKET_O

task
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C

goto

bad
SEMICOLON

retval
OP_ASSIGNMENT

may_attach
BRACKET_O

task
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

goto

bad
SEMICOLON

task
MINUS
GREATER

ptrace
LOGICAL_OR
OP_ASSIGNMENT

PT_PTRACED
LOGICAL_OR
BRACKET_O
BRACKET_O

task
MINUS
GREATER

real_parent
NOT_EQ

current
BRACKET_C
QUESTION_MARK

PT_ATTACHED
COLON
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

capable
BRACKET_O

CAP_SYS_PTRACE
BRACKET_C
BRACKET_C

task
MINUS
GREATER

ptrace
LOGICAL_OR
OP_ASSIGNMENT

PT_PTRACE_CAP
SEMICOLON

__ptrace_link
BRACKET_O

task
COMMA

current
BRACKET_C
SEMICOLON

force_sig_specific
BRACKET_O

SIGSTOP
COMMA

task
BRACKET_C
SEMICOLON

bad
COLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

task_unlock
BRACKET_O

task
BRACKET_C
SEMICOLON

out
COLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static

inline

void

__ptrace_detach
BRACKET_O
STRUCT

task_struct
MULT

child
COMMA
TYPE_UNSIGNED
TYPE_INT

data
BRACKET_C
CURLY_BRACKET_O

child
MINUS
GREATER

exit_code
OP_ASSIGNMENT

data
SEMICOLON

__ptrace_unlink
BRACKET_O

child
BRACKET_C
SEMICOLON
IF
BRACKET_O

child
MINUS
GREATER

exit_state
NOT_EQ

EXIT_ZOMBIE
BRACKET_C

wake_up_process
BRACKET_O

child
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

ptrace_detach
BRACKET_O
STRUCT

task_struct
MULT

child
COMMA
TYPE_UNSIGNED
TYPE_INT

data
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

valid_signal
BRACKET_O

data
BRACKET_C
BRACKET_C

return
MINUS

EIO
SEMICOLON

ptrace_disable
BRACKET_O

child
BRACKET_C
SEMICOLON

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

child
MINUS
GREATER

ptrace
BRACKET_C

__ptrace_detach
BRACKET_O

child
COMMA

data
BRACKET_C
SEMICOLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

ptrace_readdata
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
TYPE_UNSIGNED
TYPE_LONG

src
COMMA
TYPE_CHAR

__user
MULT

dst
COMMA
TYPE_INT

len
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

copied
OP_ASSIGNMENT
NUMBER
SEMICOLON
WHILE
BRACKET_O

len
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

this_len
COMMA

retval
SEMICOLON

this_len
OP_ASSIGNMENT
BRACKET_O

len
GREATER

sizeof
BRACKET_O

buf
BRACKET_C
BRACKET_C
QUESTION_MARK

sizeof
BRACKET_O

buf
BRACKET_C
COLON

len
SEMICOLON

retval
OP_ASSIGNMENT

access_process_vm
BRACKET_O

tsk
COMMA

src
COMMA

buf
COMMA

this_len
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copied
BRACKET_C
BREAK
SEMICOLON

return
MINUS

EIO
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

copy_to_user
BRACKET_O

dst
COMMA

buf
COMMA

retval
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

copied
ASSIGN_PLUS

retval
SEMICOLON

src
ASSIGN_PLUS

retval
SEMICOLON

dst
ASSIGN_PLUS

retval
SEMICOLON

len
ASSIGN_MINUS

retval
SEMICOLON
CURLY_BRACKET_C

return

copied
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

ptrace_writedata
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
TYPE_CHAR

__user
MULT

src
COMMA
TYPE_UNSIGNED
TYPE_LONG

dst
COMMA
TYPE_INT

len
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

copied
OP_ASSIGNMENT
NUMBER
SEMICOLON
WHILE
BRACKET_O

len
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

this_len
COMMA

retval
SEMICOLON

this_len
OP_ASSIGNMENT
BRACKET_O

len
GREATER

sizeof
BRACKET_O

buf
BRACKET_C
BRACKET_C
QUESTION_MARK

sizeof
BRACKET_O

buf
BRACKET_C
COLON

len
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O

buf
COMMA

src
COMMA

this_len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

retval
OP_ASSIGNMENT

access_process_vm
BRACKET_O

tsk
COMMA

dst
COMMA

buf
COMMA

this_len
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copied
BRACKET_C
BREAK
SEMICOLON

return
MINUS

EIO
SEMICOLON
CURLY_BRACKET_C

copied
ASSIGN_PLUS

retval
SEMICOLON

src
ASSIGN_PLUS

retval
SEMICOLON

dst
ASSIGN_PLUS

retval
SEMICOLON

len
ASSIGN_MINUS

retval
SEMICOLON
CURLY_BRACKET_C

return

copied
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

ptrace_setoptions
BRACKET_O
STRUCT

task_struct
MULT

child
COMMA
TYPE_LONG

data
BRACKET_C
CURLY_BRACKET_O

child
MINUS
GREATER

ptrace
AMPERSANT
OP_ASSIGNMENT
TILDE

PT_TRACE_MASK
SEMICOLON
IF
BRACKET_O

data
AMPERSANT

PTRACE_O_TRACESYSGOOD
BRACKET_C

child
MINUS
GREATER

ptrace
LOGICAL_OR
OP_ASSIGNMENT

PT_TRACESYSGOOD
SEMICOLON
IF
BRACKET_O

data
AMPERSANT

PTRACE_O_TRACEFORK
BRACKET_C

child
MINUS
GREATER

ptrace
LOGICAL_OR
OP_ASSIGNMENT

PT_TRACE_FORK
SEMICOLON
IF
BRACKET_O

data
AMPERSANT

PTRACE_O_TRACEVFORK
BRACKET_C

child
MINUS
GREATER

ptrace
LOGICAL_OR
OP_ASSIGNMENT

PT_TRACE_VFORK
SEMICOLON
IF
BRACKET_O

data
AMPERSANT

PTRACE_O_TRACECLONE
BRACKET_C

child
MINUS
GREATER

ptrace
LOGICAL_OR
OP_ASSIGNMENT

PT_TRACE_CLONE
SEMICOLON
IF
BRACKET_O

data
AMPERSANT

PTRACE_O_TRACEEXEC
BRACKET_C

child
MINUS
GREATER

ptrace
LOGICAL_OR
OP_ASSIGNMENT

PT_TRACE_EXEC
SEMICOLON
IF
BRACKET_O

data
AMPERSANT

PTRACE_O_TRACEVFORKDONE
BRACKET_C

child
MINUS
GREATER

ptrace
LOGICAL_OR
OP_ASSIGNMENT

PT_TRACE_VFORK_DONE
SEMICOLON
IF
BRACKET_O

data
AMPERSANT

PTRACE_O_TRACEEXIT
BRACKET_C

child
MINUS
GREATER

ptrace
LOGICAL_OR
OP_ASSIGNMENT

PT_TRACE_EXIT
SEMICOLON

return
BRACKET_O

data
AMPERSANT
TILDE

PTRACE_O_MASK
BRACKET_C
QUESTION_MARK
MINUS

EINVAL
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

ptrace_getsiginfo
BRACKET_O
STRUCT

task_struct
MULT

child
COMMA

siginfo_t

__user
MULT

data
BRACKET_C
CURLY_BRACKET_O

siginfo_t

lastinfo
SEMICOLON
TYPE_INT

error
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

child
MINUS
GREATER

sighand
NOT_EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

child
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

child
MINUS
GREATER

last_siginfo
NOT_EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

lastinfo
OP_ASSIGNMENT
MULT

child
MINUS
GREATER

last_siginfo
SEMICOLON

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

child
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
BRACKET_C

return

copy_siginfo_to_user
BRACKET_O

data
COMMA
AMPERSANT

lastinfo
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

ptrace_setsiginfo
BRACKET_O
STRUCT

task_struct
MULT

child
COMMA

siginfo_t

__user
MULT

data
BRACKET_C
CURLY_BRACKET_O

siginfo_t

newinfo
SEMICOLON
TYPE_INT

error
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

newinfo
COMMA

data
COMMA

sizeof
BRACKET_O

siginfo_t
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

child
MINUS
GREATER

sighand
NOT_EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

child
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

child
MINUS
GREATER

last_siginfo
NOT_EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
MULT

child
MINUS
GREATER

last_siginfo
OP_ASSIGNMENT

newinfo
SEMICOLON

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

child
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

ptrace_request
BRACKET_O
STRUCT

task_struct
MULT

child
COMMA
TYPE_LONG

request
COMMA
TYPE_LONG

addr
COMMA
TYPE_LONG

data
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
MINUS

EIO
SEMICOLON
SWITCH
BRACKET_O

request
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

PTRACE_OLDSETOPTIONS

case

PTRACE_OLDSETOPTIONS
COLON
PP_ENDIF

case

PTRACE_SETOPTIONS
COLON

ret
OP_ASSIGNMENT

ptrace_setoptions
BRACKET_O

child
COMMA

data
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PTRACE_GETEVENTMSG
COLON

ret
OP_ASSIGNMENT

put_user
BRACKET_O

child
MINUS
GREATER

ptrace_message
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

__user
MULT
BRACKET_C

data
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PTRACE_GETSIGINFO
COLON

ret
OP_ASSIGNMENT

ptrace_getsiginfo
BRACKET_O

child
COMMA
BRACKET_O

siginfo_t

__user
MULT
BRACKET_C

data
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PTRACE_SETSIGINFO
COLON

ret
OP_ASSIGNMENT

ptrace_setsiginfo
BRACKET_O

child
COMMA
BRACKET_O

siginfo_t

__user
MULT
BRACKET_C

data
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

ptrace_traceme
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON

task_lock
BRACKET_O

current
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

current
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

security_ptrace
BRACKET_O

current
MINUS
GREATER

parent
COMMA

current
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C

current
MINUS
GREATER

ptrace
LOGICAL_OR
OP_ASSIGNMENT

PT_PTRACED
SEMICOLON
CURLY_BRACKET_C

task_unlock
BRACKET_O

current
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
STRUCT

task_struct
MULT

ptrace_get_task_struct
BRACKET_O

pid_t

pid
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

child
SEMICOLON
IF
BRACKET_O

pid
EQ
NUMBER
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

EPERM
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

child
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O

child
BRACKET_C

get_task_struct
BRACKET_O

child
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

child
BRACKET_C

return

ERR_PTR
BRACKET_O
MINUS

ESRCH
BRACKET_C
SEMICOLON

return

child
SEMICOLON
CURLY_BRACKET_C
PP_IFNDEF

__ARCH_SYS_PTRACE

asmlinkage
TYPE_LONG

sys_ptrace
BRACKET_O
TYPE_LONG

request
COMMA
TYPE_LONG

pid
COMMA
TYPE_LONG

addr
COMMA
TYPE_LONG

data
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

child
SEMICOLON
TYPE_LONG

ret
SEMICOLON

lock_kernel
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

request
EQ

PTRACE_TRACEME
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

ptrace_traceme
BRACKET_O
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

child
OP_ASSIGNMENT

ptrace_get_task_struct
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

child
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

child
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

request
EQ

PTRACE_ATTACH
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

ptrace_attach
BRACKET_O

child
BRACKET_C
SEMICOLON

goto

out_put_task_struct
SEMICOLON
CURLY_BRACKET_C

ret
OP_ASSIGNMENT

ptrace_check_attach
BRACKET_O

child
COMMA

request
EQ

PTRACE_KILL
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
LESS
NUMBER
BRACKET_C

goto

out_put_task_struct
SEMICOLON

ret
OP_ASSIGNMENT

arch_ptrace
BRACKET_O

child
COMMA

request
COMMA

addr
COMMA

data
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
LESS
NUMBER
BRACKET_C

goto

out_put_task_struct
SEMICOLON

out_put_task_struct
COLON

put_task_struct
BRACKET_O

child
BRACKET_C
SEMICOLON

out
COLON

unlock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static
STRUCT

rcu_ctrlblk

rcu_ctrlblk
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

cur
OP_ASSIGNMENT
MINUS
NUMBER
COMMA
DOT

completed
OP_ASSIGNMENT
MINUS
NUMBER
COMMA
DOT

lock
OP_ASSIGNMENT

__SPIN_LOCK_UNLOCKED
BRACKET_O
AMPERSANT

rcu_ctrlblk
DOT

lock
BRACKET_C
COMMA
DOT

cpumask
OP_ASSIGNMENT

CPU_MASK_NONE
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

rcu_ctrlblk

rcu_bh_ctrlblk
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

cur
OP_ASSIGNMENT
MINUS
NUMBER
COMMA
DOT

completed
OP_ASSIGNMENT
MINUS
NUMBER
COMMA
DOT

lock
OP_ASSIGNMENT

__SPIN_LOCK_UNLOCKED
BRACKET_O
AMPERSANT

rcu_bh_ctrlblk
DOT

lock
BRACKET_C
COMMA
DOT

cpumask
OP_ASSIGNMENT

CPU_MASK_NONE
COMMA
CURLY_BRACKET_C
SEMICOLON

DEFINE_PER_CPU
BRACKET_O
STRUCT

rcu_data
COMMA

rcu_data
BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
NUMBER

L
CURLY_BRACKET_C
SEMICOLON

DEFINE_PER_CPU
BRACKET_O
STRUCT

rcu_data
COMMA

rcu_bh_data
BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
NUMBER

L
CURLY_BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

tasklet_struct
COMMA

rcu_tasklet
BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O

NULL
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

blimit
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
TYPE_INT

qhimark
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
TYPE_INT

qlowmark
OP_ASSIGNMENT
NUMBER
SEMICOLON

static

atomic_t

rcu_barrier_cpu_count
SEMICOLON

static

DEFINE_MUTEX
BRACKET_O

rcu_barrier_mutex
BRACKET_C
SEMICOLON

static
STRUCT

completion

rcu_barrier_completion
SEMICOLON
PP_IFDEF

CONFIG_SMP

static

void

force_quiescent_state
BRACKET_O
STRUCT

rcu_data
MULT

rdp
COMMA
STRUCT

rcu_ctrlblk
MULT

rcp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
SEMICOLON

cpumask_t

cpumask
SEMICOLON

set_need_resched
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

rcp
MINUS
GREATER

signaled
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rcp
MINUS
GREATER

signaled
OP_ASSIGNMENT
NUMBER
SEMICOLON

cpumask
OP_ASSIGNMENT

rcp
MINUS
GREATER

cpumask
SEMICOLON

cpu_clear
BRACKET_O

rdp
MINUS
GREATER

cpu
COMMA

cpumask
BRACKET_C
SEMICOLON

for_each_cpu_mask
BRACKET_O

cpu
COMMA

cpumask
BRACKET_C

smp_send_reschedule
BRACKET_O

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ELSE

static

inline

void

force_quiescent_state
BRACKET_O
STRUCT

rcu_data
MULT

rdp
COMMA
STRUCT

rcu_ctrlblk
MULT

rcp
BRACKET_C
CURLY_BRACKET_O

set_need_resched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

void

fastcall

call_rcu
BRACKET_O
STRUCT

rcu_head
MULT

head
COMMA

void
BRACKET_O
MULT

func
BRACKET_C
BRACKET_O
STRUCT

rcu_head
MULT

rcu
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

rcu_data
MULT

rdp
SEMICOLON

head
MINUS
GREATER

func
OP_ASSIGNMENT

func
SEMICOLON

head
MINUS
GREATER

next
OP_ASSIGNMENT

NULL
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

rdp
OP_ASSIGNMENT
AMPERSANT

__get_cpu_var
BRACKET_O

rcu_data
BRACKET_C
SEMICOLON
MULT

rdp
MINUS
GREATER

nxttail
OP_ASSIGNMENT

head
SEMICOLON

rdp
MINUS
GREATER

nxttail
OP_ASSIGNMENT
AMPERSANT

head
MINUS
GREATER

next
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
PLUS
PLUS

rdp
MINUS
GREATER

qlen
GREATER

qhimark
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rdp
MINUS
GREATER

blimit
OP_ASSIGNMENT

INT_MAX
SEMICOLON

force_quiescent_state
BRACKET_O

rdp
COMMA
AMPERSANT

rcu_ctrlblk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

fastcall

call_rcu_bh
BRACKET_O
STRUCT

rcu_head
MULT

head
COMMA

void
BRACKET_O
MULT

func
BRACKET_C
BRACKET_O
STRUCT

rcu_head
MULT

rcu
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

rcu_data
MULT

rdp
SEMICOLON

head
MINUS
GREATER

func
OP_ASSIGNMENT

func
SEMICOLON

head
MINUS
GREATER

next
OP_ASSIGNMENT

NULL
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

rdp
OP_ASSIGNMENT
AMPERSANT

__get_cpu_var
BRACKET_O

rcu_bh_data
BRACKET_C
SEMICOLON
MULT

rdp
MINUS
GREATER

nxttail
OP_ASSIGNMENT

head
SEMICOLON

rdp
MINUS
GREATER

nxttail
OP_ASSIGNMENT
AMPERSANT

head
MINUS
GREATER

next
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
PLUS
PLUS

rdp
MINUS
GREATER

qlen
GREATER

qhimark
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rdp
MINUS
GREATER

blimit
OP_ASSIGNMENT

INT_MAX
SEMICOLON

force_quiescent_state
BRACKET_O

rdp
COMMA
AMPERSANT

rcu_bh_ctrlblk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

rcu_batches_completed
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

rcu_ctrlblk
DOT

completed
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

rcu_batches_completed_bh
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

rcu_bh_ctrlblk
DOT

completed
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_barrier_callback
BRACKET_O
STRUCT

rcu_head
MULT

notused
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

atomic_dec_and_test
BRACKET_O
AMPERSANT

rcu_barrier_cpu_count
BRACKET_C
BRACKET_C

complete
BRACKET_O
AMPERSANT

rcu_barrier_completion
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_barrier_func
BRACKET_O

void
MULT

notused
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
STRUCT

rcu_data
MULT

rdp
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

rcu_data
COMMA

cpu
BRACKET_C
SEMICOLON
STRUCT

rcu_head
MULT

head
SEMICOLON

head
OP_ASSIGNMENT
AMPERSANT

rdp
MINUS
GREATER

barrier
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

rcu_barrier_cpu_count
BRACKET_C
SEMICOLON

call_rcu
BRACKET_O

head
COMMA

rcu_barrier_callback
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

rcu_barrier
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

in_interrupt
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

rcu_barrier_mutex
BRACKET_C
SEMICOLON

init_completion
BRACKET_O
AMPERSANT

rcu_barrier_completion
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

rcu_barrier_cpu_count
COMMA
NUMBER
BRACKET_C
SEMICOLON

on_each_cpu
BRACKET_O

rcu_barrier_func
COMMA

NULL
COMMA
NUMBER
COMMA
NUMBER
BRACKET_C
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

rcu_barrier_completion
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

rcu_barrier_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

rcu_barrier
BRACKET_C
SEMICOLON

static

void

rcu_do_batch
BRACKET_O
STRUCT

rcu_data
MULT

rdp
BRACKET_C
CURLY_BRACKET_O
STRUCT

rcu_head
MULT

next
COMMA
MULT

list
SEMICOLON
TYPE_INT

count
OP_ASSIGNMENT
NUMBER
SEMICOLON

list
OP_ASSIGNMENT

rdp
MINUS
GREATER

donelist
SEMICOLON
WHILE
BRACKET_O

list
BRACKET_C
CURLY_BRACKET_O

next
OP_ASSIGNMENT

list
MINUS
GREATER

next
SEMICOLON

prefetch
BRACKET_O

next
BRACKET_C
SEMICOLON

list
MINUS
GREATER

func
BRACKET_O

list
BRACKET_C
SEMICOLON

list
OP_ASSIGNMENT

next
SEMICOLON
IF
BRACKET_O
PLUS
PLUS

count
GR_EQ

rdp
MINUS
GREATER

blimit
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

rdp
MINUS
GREATER

donelist
OP_ASSIGNMENT

list
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

rdp
MINUS
GREATER

qlen
ASSIGN_MINUS

count
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

rdp
MINUS
GREATER

blimit
EQ

INT_MAX
AND

rdp
MINUS
GREATER

qlen
LE_EQ

qlowmark
BRACKET_C

rdp
MINUS
GREATER

blimit
OP_ASSIGNMENT

blimit
SEMICOLON
IF
BRACKET_O
NOT

rdp
MINUS
GREATER

donelist
BRACKET_C

rdp
MINUS
GREATER

donetail
OP_ASSIGNMENT
AMPERSANT

rdp
MINUS
GREATER

donelist
SEMICOLON
ELSE

tasklet_schedule
BRACKET_O
AMPERSANT

per_cpu
BRACKET_O

rcu_tasklet
COMMA

rdp
MINUS
GREATER

cpu
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_start_batch
BRACKET_O
STRUCT

rcu_ctrlblk
MULT

rcp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

rcp
MINUS
GREATER

next_pending
AND

rcp
MINUS
GREATER

completed
EQ

rcp
MINUS
GREATER

cur
BRACKET_C
CURLY_BRACKET_O

rcp
MINUS
GREATER

next_pending
OP_ASSIGNMENT
NUMBER
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON

rcp
MINUS
GREATER

cur
PLUS
PLUS
SEMICOLON

smp_mb
BRACKET_O
BRACKET_C
SEMICOLON

cpus_andnot
BRACKET_O

rcp
MINUS
GREATER

cpumask
COMMA

cpu_online_map
COMMA

nohz_cpu_mask
BRACKET_C
SEMICOLON

rcp
MINUS
GREATER

signaled
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

cpu_quiet
BRACKET_O
TYPE_INT

cpu
COMMA
STRUCT

rcu_ctrlblk
MULT

rcp
BRACKET_C
CURLY_BRACKET_O

cpu_clear
BRACKET_O

cpu
COMMA

rcp
MINUS
GREATER

cpumask
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpus_empty
BRACKET_O

rcp
MINUS
GREATER

cpumask
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rcp
MINUS
GREATER

completed
OP_ASSIGNMENT

rcp
MINUS
GREATER

cur
SEMICOLON

rcu_start_batch
BRACKET_O

rcp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

rcu_check_quiescent_state
BRACKET_O
STRUCT

rcu_ctrlblk
MULT

rcp
COMMA
STRUCT

rcu_data
MULT

rdp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

rdp
MINUS
GREATER

quiescbatch
NOT_EQ

rcp
MINUS
GREATER

cur
BRACKET_C
CURLY_BRACKET_O

rdp
MINUS
GREATER

qs_pending
OP_ASSIGNMENT
NUMBER
SEMICOLON

rdp
MINUS
GREATER

passed_quiesc
OP_ASSIGNMENT
NUMBER
SEMICOLON

rdp
MINUS
GREATER

quiescbatch
OP_ASSIGNMENT

rcp
MINUS
GREATER

cur
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

rdp
MINUS
GREATER

qs_pending
BRACKET_C

return
SEMICOLON
IF
BRACKET_O
NOT

rdp
MINUS
GREATER

passed_quiesc
BRACKET_C

return
SEMICOLON

rdp
MINUS
GREATER

qs_pending
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

rcp
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

rdp
MINUS
GREATER

quiescbatch
EQ

rcp
MINUS
GREATER

cur
BRACKET_C
BRACKET_C

cpu_quiet
BRACKET_O

rdp
MINUS
GREATER

cpu
COMMA

rcp
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

rcp
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_HOTPLUG_CPU

static

void

rcu_move_batch
BRACKET_O
STRUCT

rcu_data
MULT

this_rdp
COMMA
STRUCT

rcu_head
MULT

list
COMMA
STRUCT

rcu_head
MULT
MULT

tail
BRACKET_C
CURLY_BRACKET_O

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON
MULT

this_rdp
MINUS
GREATER

nxttail
OP_ASSIGNMENT

list
SEMICOLON
IF
BRACKET_O

list
BRACKET_C

this_rdp
MINUS
GREATER

nxttail
OP_ASSIGNMENT

tail
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

__rcu_offline_cpu
BRACKET_O
STRUCT

rcu_data
MULT

this_rdp
COMMA
STRUCT

rcu_ctrlblk
MULT

rcp
COMMA
STRUCT

rcu_data
MULT

rdp
BRACKET_C
CURLY_BRACKET_O

spin_lock_bh
BRACKET_O
AMPERSANT

rcp
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

rcp
MINUS
GREATER

cur
NOT_EQ

rcp
MINUS
GREATER

completed
BRACKET_C

cpu_quiet
BRACKET_O

rdp
MINUS
GREATER

cpu
COMMA

rcp
BRACKET_C
SEMICOLON

spin_unlock_bh
BRACKET_O
AMPERSANT

rcp
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

rcu_move_batch
BRACKET_O

this_rdp
COMMA

rdp
MINUS
GREATER

curlist
COMMA

rdp
MINUS
GREATER

curtail
BRACKET_C
SEMICOLON

rcu_move_batch
BRACKET_O

this_rdp
COMMA

rdp
MINUS
GREATER

nxtlist
COMMA

rdp
MINUS
GREATER

nxttail
BRACKET_C
SEMICOLON

rcu_move_batch
BRACKET_O

this_rdp
COMMA

rdp
MINUS
GREATER

donelist
COMMA

rdp
MINUS
GREATER

donetail
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_offline_cpu
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

rcu_data
MULT

this_rdp
OP_ASSIGNMENT
AMPERSANT

get_cpu_var
BRACKET_O

rcu_data
BRACKET_C
SEMICOLON
STRUCT

rcu_data
MULT

this_bh_rdp
OP_ASSIGNMENT
AMPERSANT

get_cpu_var
BRACKET_O

rcu_bh_data
BRACKET_C
SEMICOLON

__rcu_offline_cpu
BRACKET_O

this_rdp
COMMA
AMPERSANT

rcu_ctrlblk
COMMA
AMPERSANT

per_cpu
BRACKET_O

rcu_data
COMMA

cpu
BRACKET_C
BRACKET_C
SEMICOLON

__rcu_offline_cpu
BRACKET_O

this_bh_rdp
COMMA
AMPERSANT

rcu_bh_ctrlblk
COMMA
AMPERSANT

per_cpu
BRACKET_O

rcu_bh_data
COMMA

cpu
BRACKET_C
BRACKET_C
SEMICOLON

put_cpu_var
BRACKET_O

rcu_data
BRACKET_C
SEMICOLON

put_cpu_var
BRACKET_O

rcu_bh_data
BRACKET_C
SEMICOLON

tasklet_kill_immediate
BRACKET_O
AMPERSANT

per_cpu
BRACKET_O

rcu_tasklet
COMMA

cpu
BRACKET_C
COMMA

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static

void

rcu_offline_cpu
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_ENDIF

static

void

__rcu_process_callbacks
BRACKET_O
STRUCT

rcu_ctrlblk
MULT

rcp
COMMA
STRUCT

rcu_data
MULT

rdp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

rdp
MINUS
GREATER

curlist
AND
NOT

rcu_batch_before
BRACKET_O

rcp
MINUS
GREATER

completed
COMMA

rdp
MINUS
GREATER

batch
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
MULT

rdp
MINUS
GREATER

donetail
OP_ASSIGNMENT

rdp
MINUS
GREATER

curlist
SEMICOLON

rdp
MINUS
GREATER

donetail
OP_ASSIGNMENT

rdp
MINUS
GREATER

curtail
SEMICOLON

rdp
MINUS
GREATER

curlist
OP_ASSIGNMENT

NULL
SEMICOLON

rdp
MINUS
GREATER

curtail
OP_ASSIGNMENT
AMPERSANT

rdp
MINUS
GREATER

curlist
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

rdp
MINUS
GREATER

nxtlist
AND
NOT

rdp
MINUS
GREATER

curlist
BRACKET_C
CURLY_BRACKET_O

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

rdp
MINUS
GREATER

curlist
OP_ASSIGNMENT

rdp
MINUS
GREATER

nxtlist
SEMICOLON

rdp
MINUS
GREATER

curtail
OP_ASSIGNMENT

rdp
MINUS
GREATER

nxttail
SEMICOLON

rdp
MINUS
GREATER

nxtlist
OP_ASSIGNMENT

NULL
SEMICOLON

rdp
MINUS
GREATER

nxttail
OP_ASSIGNMENT
AMPERSANT

rdp
MINUS
GREATER

nxtlist
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

rdp
MINUS
GREATER

batch
OP_ASSIGNMENT

rcp
MINUS
GREATER

cur
PLUS
NUMBER
SEMICOLON

smp_rmb
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

rcp
MINUS
GREATER

next_pending
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

rcp
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

rcp
MINUS
GREATER

next_pending
OP_ASSIGNMENT
NUMBER
SEMICOLON

rcu_start_batch
BRACKET_O

rcp
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

rcp
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

rcu_check_quiescent_state
BRACKET_O

rcp
COMMA

rdp
BRACKET_C
SEMICOLON
IF
BRACKET_O

rdp
MINUS
GREATER

donelist
BRACKET_C

rcu_do_batch
BRACKET_O

rdp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_process_callbacks
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

unused
BRACKET_C
CURLY_BRACKET_O

__rcu_process_callbacks
BRACKET_O
AMPERSANT

rcu_ctrlblk
COMMA
AMPERSANT

__get_cpu_var
BRACKET_O

rcu_data
BRACKET_C
BRACKET_C
SEMICOLON

__rcu_process_callbacks
BRACKET_O
AMPERSANT

rcu_bh_ctrlblk
COMMA
AMPERSANT

__get_cpu_var
BRACKET_O

rcu_bh_data
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__rcu_pending
BRACKET_O
STRUCT

rcu_ctrlblk
MULT

rcp
COMMA
STRUCT

rcu_data
MULT

rdp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

rdp
MINUS
GREATER

curlist
AND
NOT

rcu_batch_before
BRACKET_O

rcp
MINUS
GREATER

completed
COMMA

rdp
MINUS
GREATER

batch
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

rdp
MINUS
GREATER

curlist
AND

rdp
MINUS
GREATER

nxtlist
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

rdp
MINUS
GREATER

donelist
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

rdp
MINUS
GREATER

quiescbatch
NOT_EQ

rcp
MINUS
GREATER

cur
OR

rdp
MINUS
GREATER

qs_pending
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

rcu_pending
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O

return

__rcu_pending
BRACKET_O
AMPERSANT

rcu_ctrlblk
COMMA
AMPERSANT

per_cpu
BRACKET_O

rcu_data
COMMA

cpu
BRACKET_C
BRACKET_C
OR

__rcu_pending
BRACKET_O
AMPERSANT

rcu_bh_ctrlblk
COMMA
AMPERSANT

per_cpu
BRACKET_O

rcu_bh_data
COMMA

cpu
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

rcu_needs_cpu
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

rcu_data
MULT

rdp
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

rcu_data
COMMA

cpu
BRACKET_C
SEMICOLON
STRUCT

rcu_data
MULT

rdp_bh
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

rcu_bh_data
COMMA

cpu
BRACKET_C
SEMICOLON

return
BRACKET_O
NOT
NOT

rdp
MINUS
GREATER

curlist
OR
NOT
NOT

rdp_bh
MINUS
GREATER

curlist
OR

rcu_pending
BRACKET_O

cpu
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

rcu_check_callbacks
BRACKET_O
TYPE_INT

cpu
COMMA
TYPE_INT

user
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

user
OR
BRACKET_O

idle_cpu
BRACKET_O

cpu
BRACKET_C
AND
NOT

in_softirq
BRACKET_O
BRACKET_C
AND

hardirq_count
BRACKET_O
BRACKET_C
LE_EQ
BRACKET_O
NUMBER
LESS
LESS

HARDIRQ_SHIFT
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rcu_qsctr_inc
BRACKET_O

cpu
BRACKET_C
SEMICOLON

rcu_bh_qsctr_inc
BRACKET_O

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
NOT

in_softirq
BRACKET_O
BRACKET_C
BRACKET_C

rcu_bh_qsctr_inc
BRACKET_O

cpu
BRACKET_C
SEMICOLON

tasklet_schedule
BRACKET_O
AMPERSANT

per_cpu
BRACKET_O

rcu_tasklet
COMMA

cpu
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_init_percpu_data
BRACKET_O
TYPE_INT

cpu
COMMA
STRUCT

rcu_ctrlblk
MULT

rcp
COMMA
STRUCT

rcu_data
MULT

rdp
BRACKET_C
CURLY_BRACKET_O

memset
BRACKET_O

rdp
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
MULT

rdp
BRACKET_C
BRACKET_C
SEMICOLON

rdp
MINUS
GREATER

curtail
OP_ASSIGNMENT
AMPERSANT

rdp
MINUS
GREATER

curlist
SEMICOLON

rdp
MINUS
GREATER

nxttail
OP_ASSIGNMENT
AMPERSANT

rdp
MINUS
GREATER

nxtlist
SEMICOLON

rdp
MINUS
GREATER

donetail
OP_ASSIGNMENT
AMPERSANT

rdp
MINUS
GREATER

donelist
SEMICOLON

rdp
MINUS
GREATER

quiescbatch
OP_ASSIGNMENT

rcp
MINUS
GREATER

completed
SEMICOLON

rdp
MINUS
GREATER

qs_pending
OP_ASSIGNMENT
NUMBER
SEMICOLON

rdp
MINUS
GREATER

cpu
OP_ASSIGNMENT

cpu
SEMICOLON

rdp
MINUS
GREATER

blimit
OP_ASSIGNMENT

blimit
SEMICOLON
CURLY_BRACKET_C

static

void

__devinit

rcu_online_cpu
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

rcu_data
MULT

rdp
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

rcu_data
COMMA

cpu
BRACKET_C
SEMICOLON
STRUCT

rcu_data
MULT

bh_rdp
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

rcu_bh_data
COMMA

cpu
BRACKET_C
SEMICOLON

rcu_init_percpu_data
BRACKET_O

cpu
COMMA
AMPERSANT

rcu_ctrlblk
COMMA

rdp
BRACKET_C
SEMICOLON

rcu_init_percpu_data
BRACKET_O

cpu
COMMA
AMPERSANT

rcu_bh_ctrlblk
COMMA

bh_rdp
BRACKET_C
SEMICOLON

tasklet_init
BRACKET_O
AMPERSANT

per_cpu
BRACKET_O

rcu_tasklet
COMMA

cpu
BRACKET_C
COMMA

rcu_process_callbacks
COMMA
NUMBER

UL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__cpuinit

rcu_cpu_notify
BRACKET_O
STRUCT

notifier_block
MULT

self
COMMA
TYPE_UNSIGNED
TYPE_LONG

action
COMMA

void
MULT

hcpu
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

cpu
OP_ASSIGNMENT
BRACKET_O
TYPE_LONG
BRACKET_C

hcpu
SEMICOLON
SWITCH
BRACKET_O

action
BRACKET_C
CURLY_BRACKET_O

case

CPU_UP_PREPARE
COLON

case

CPU_UP_PREPARE_FROZEN
COLON

rcu_online_cpu
BRACKET_O

cpu
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPU_DEAD
COLON

case

CPU_DEAD_FROZEN
COLON

rcu_offline_cpu
BRACKET_O

cpu
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

NOTIFY_OK
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

notifier_block

__cpuinitdata

rcu_nb
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

notifier_call
OP_ASSIGNMENT

rcu_cpu_notify
COMMA
CURLY_BRACKET_C
SEMICOLON

void

__init

rcu_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

rcu_cpu_notify
BRACKET_O
AMPERSANT

rcu_nb
COMMA

CPU_UP_PREPARE
COMMA
BRACKET_O

void
MULT
BRACKET_C
BRACKET_O
TYPE_LONG
BRACKET_C

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

register_cpu_notifier
BRACKET_O
AMPERSANT

rcu_nb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

rcu_synchronize
CURLY_BRACKET_O
STRUCT

rcu_head

head
SEMICOLON
STRUCT

completion

completion
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static

void

wakeme_after_rcu
BRACKET_O
STRUCT

rcu_head
MULT

head
BRACKET_C
CURLY_BRACKET_O
STRUCT

rcu_synchronize
MULT

rcu
SEMICOLON

rcu
OP_ASSIGNMENT

container_of
BRACKET_O

head
COMMA
STRUCT

rcu_synchronize
COMMA

head
BRACKET_C
SEMICOLON

complete
BRACKET_O
AMPERSANT

rcu
MINUS
GREATER

completion
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

synchronize_rcu
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

rcu_synchronize

rcu
SEMICOLON

init_completion
BRACKET_O
AMPERSANT

rcu
DOT

completion
BRACKET_C
SEMICOLON

call_rcu
BRACKET_O
AMPERSANT

rcu
DOT

head
COMMA

wakeme_after_rcu
BRACKET_C
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

rcu
DOT

completion
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

module_param
BRACKET_O

blimit
COMMA
TYPE_INT
COMMA
NUMBER
BRACKET_C
SEMICOLON

module_param
BRACKET_O

qhimark
COMMA
TYPE_INT
COMMA
NUMBER
BRACKET_C
SEMICOLON

module_param
BRACKET_O

qlowmark
COMMA
TYPE_INT
COMMA
NUMBER
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

rcu_batches_completed
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

rcu_batches_completed_bh
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

call_rcu
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

call_rcu_bh
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

synchronize_rcu
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

MODULE_LICENSE
BRACKET_O
STRING
BRACKET_C
SEMICOLON

MODULE_AUTHOR
BRACKET_O
STRING
STRING
BRACKET_C
SEMICOLON

static
TYPE_INT

nreaders
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

static
TYPE_INT

nfakewriters
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
TYPE_INT

stat_interval
SEMICOLON

static
TYPE_INT

verbose
SEMICOLON

static
TYPE_INT

test_no_idle_hz
SEMICOLON

static
TYPE_INT

shuffle_interval
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
TYPE_CHAR
MULT

torture_type
OP_ASSIGNMENT
STRING
SEMICOLON

module_param
BRACKET_O

nreaders
COMMA
TYPE_INT
COMMA
NUMBER
BRACKET_C
SEMICOLON

MODULE_PARM_DESC
BRACKET_O

nreaders
COMMA
STRING
BRACKET_C
SEMICOLON

module_param
BRACKET_O

nfakewriters
COMMA
TYPE_INT
COMMA
NUMBER
BRACKET_C
SEMICOLON

MODULE_PARM_DESC
BRACKET_O

nfakewriters
COMMA
STRING
BRACKET_C
SEMICOLON

module_param
BRACKET_O

stat_interval
COMMA
TYPE_INT
COMMA
NUMBER
BRACKET_C
SEMICOLON

MODULE_PARM_DESC
BRACKET_O

stat_interval
COMMA
STRING
BRACKET_C
SEMICOLON

module_param
BRACKET_O

verbose
COMMA

bool
COMMA
NUMBER
BRACKET_C
SEMICOLON

MODULE_PARM_DESC
BRACKET_O

verbose
COMMA
STRING
BRACKET_C
SEMICOLON

module_param
BRACKET_O

test_no_idle_hz
COMMA

bool
COMMA
NUMBER
BRACKET_C
SEMICOLON

MODULE_PARM_DESC
BRACKET_O

test_no_idle_hz
COMMA
STRING
BRACKET_C
SEMICOLON

module_param
BRACKET_O

shuffle_interval
COMMA
TYPE_INT
COMMA
NUMBER
BRACKET_C
SEMICOLON

MODULE_PARM_DESC
BRACKET_O

shuffle_interval
COMMA
STRING
BRACKET_C
SEMICOLON

module_param
BRACKET_O

torture_type
COMMA

charp
COMMA
NUMBER
BRACKET_C
SEMICOLON

MODULE_PARM_DESC
BRACKET_O

torture_type
COMMA
STRING
BRACKET_C
SEMICOLON
PP_DEFINE

TORTURE_FLAG
STRING
PP_DEFINE

PRINTK_STRING
BRACKET_O

s
BRACKET_C
BACKLASHED_NEWLINE
DO
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ALERT
STRING

TORTURE_FLAG

s
STRING
COMMA

torture_type
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

VERBOSE_PRINTK_STRING
BRACKET_O

s
BRACKET_C
BACKLASHED_NEWLINE
DO
CURLY_BRACKET_O
IF
BRACKET_O

verbose
BRACKET_C

printk
BRACKET_O

KERN_ALERT
STRING

TORTURE_FLAG

s
STRING
COMMA

torture_type
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

VERBOSE_PRINTK_ERRSTRING
BRACKET_O

s
BRACKET_C
BACKLASHED_NEWLINE
DO
CURLY_BRACKET_O
IF
BRACKET_O

verbose
BRACKET_C

printk
BRACKET_O

KERN_ALERT
STRING

TORTURE_FLAG
STRING

s
STRING
COMMA

torture_type
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C

static
TYPE_CHAR

printk_buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

static
TYPE_INT

nrealreaders
SEMICOLON

static
STRUCT

task_struct
MULT

writer_task
SEMICOLON

static
STRUCT

task_struct
MULT
MULT

fakewriter_tasks
SEMICOLON

static
STRUCT

task_struct
MULT
MULT

reader_tasks
SEMICOLON

static
STRUCT

task_struct
MULT

stats_task
SEMICOLON

static
STRUCT

task_struct
MULT

shuffler_task
SEMICOLON
PP_DEFINE

RCU_TORTURE_PIPE_LEN
NUMBER
STRUCT

rcu_torture
CURLY_BRACKET_O
STRUCT

rcu_head

rtort_rcu
SEMICOLON
TYPE_INT

rtort_pipe_count
SEMICOLON
STRUCT

list_head

rtort_free
SEMICOLON
TYPE_INT

rtort_mbtest
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

fullstop
OP_ASSIGNMENT
NUMBER
SEMICOLON

static

LIST_HEAD
BRACKET_O

rcu_torture_freelist
BRACKET_C
SEMICOLON

static
STRUCT

rcu_torture
MULT

rcu_torture_current
OP_ASSIGNMENT

NULL
SEMICOLON

static
TYPE_LONG

rcu_torture_current_version
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
STRUCT

rcu_torture

rcu_tortures
CORNER_BRACKET_O
NUMBER
MULT

RCU_TORTURE_PIPE_LEN
CORNER_BRACKET_C
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

rcu_torture_lock
BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
TYPE_LONG
CORNER_BRACKET_O

RCU_TORTURE_PIPE_LEN
PLUS
NUMBER
CORNER_BRACKET_C
COMMA

rcu_torture_count
BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
NUMBER
CURLY_BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
TYPE_LONG
CORNER_BRACKET_O

RCU_TORTURE_PIPE_LEN
PLUS
NUMBER
CORNER_BRACKET_C
COMMA

rcu_torture_batch
BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
NUMBER
CURLY_BRACKET_C
SEMICOLON

static

atomic_t

rcu_torture_wcount
CORNER_BRACKET_O

RCU_TORTURE_PIPE_LEN
PLUS
NUMBER
CORNER_BRACKET_C
SEMICOLON

static

atomic_t

n_rcu_torture_alloc
SEMICOLON

static

atomic_t

n_rcu_torture_alloc_fail
SEMICOLON

static

atomic_t

n_rcu_torture_free
SEMICOLON

static

atomic_t

n_rcu_torture_mberror
SEMICOLON

static

atomic_t

n_rcu_torture_error
SEMICOLON

static
STRUCT

list_head

rcu_torture_removed
SEMICOLON

static
STRUCT

rcu_torture
MULT

rcu_torture_alloc
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head
MULT

p
SEMICOLON

spin_lock_bh
BRACKET_O
AMPERSANT

rcu_torture_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

rcu_torture_freelist
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

atomic_inc
BRACKET_O
AMPERSANT

n_rcu_torture_alloc_fail
BRACKET_C
SEMICOLON

spin_unlock_bh
BRACKET_O
AMPERSANT

rcu_torture_lock
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

atomic_inc
BRACKET_O
AMPERSANT

n_rcu_torture_alloc
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

rcu_torture_freelist
DOT

next
SEMICOLON

list_del_init
BRACKET_O

p
BRACKET_C
SEMICOLON

spin_unlock_bh
BRACKET_O
AMPERSANT

rcu_torture_lock
BRACKET_C
SEMICOLON

return

container_of
BRACKET_O

p
COMMA
STRUCT

rcu_torture
COMMA

rtort_free
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_torture_free
BRACKET_O
STRUCT

rcu_torture
MULT

p
BRACKET_C
CURLY_BRACKET_O

atomic_inc
BRACKET_O
AMPERSANT

n_rcu_torture_free
BRACKET_C
SEMICOLON

spin_lock_bh
BRACKET_O
AMPERSANT

rcu_torture_lock
BRACKET_C
SEMICOLON

list_add_tail
BRACKET_O
AMPERSANT

p
MINUS
GREATER

rtort_free
COMMA
AMPERSANT

rcu_torture_freelist
BRACKET_C
SEMICOLON

spin_unlock_bh
BRACKET_O
AMPERSANT

rcu_torture_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

rcu_random_state
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

rrs_state
SEMICOLON
TYPE_LONG

rrs_count
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
PP_DEFINE

RCU_RANDOM_MULT
NUMBER
PP_DEFINE

RCU_RANDOM_ADD
NUMBER
PP_DEFINE

RCU_RANDOM_REFRESH
NUMBER
PP_DEFINE

DEFINE_RCU_RANDOM
BRACKET_O

name
BRACKET_C
STRUCT

rcu_random_state

name
OP_ASSIGNMENT
CURLY_BRACKET_O
NUMBER
COMMA
NUMBER
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG

rcu_random
BRACKET_O
STRUCT

rcu_random_state
MULT

rrsp
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

refresh
SEMICOLON
IF
BRACKET_O
MINUS
MINUS

rrsp
MINUS
GREATER

rrs_count
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

get_random_bytes
BRACKET_O
AMPERSANT

refresh
COMMA

sizeof
BRACKET_O

refresh
BRACKET_C
BRACKET_C
SEMICOLON

rrsp
MINUS
GREATER

rrs_state
ASSIGN_PLUS

refresh
SEMICOLON

rrsp
MINUS
GREATER

rrs_count
OP_ASSIGNMENT

RCU_RANDOM_REFRESH
SEMICOLON
CURLY_BRACKET_C

rrsp
MINUS
GREATER

rrs_state
OP_ASSIGNMENT

rrsp
MINUS
GREATER

rrs_state
MULT

RCU_RANDOM_MULT
PLUS

RCU_RANDOM_ADD
SEMICOLON

return

swahw32
BRACKET_O

rrsp
MINUS
GREATER

rrs_state
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

rcu_torture_ops
CURLY_BRACKET_O

void
BRACKET_O
MULT

init
BRACKET_C
BRACKET_O

void
BRACKET_C
SEMICOLON

void
BRACKET_O
MULT

cleanup
BRACKET_C
BRACKET_O

void
BRACKET_C
SEMICOLON
TYPE_INT
BRACKET_O
MULT

readlock
BRACKET_C
BRACKET_O

void
BRACKET_C
SEMICOLON

void
BRACKET_O
MULT

readdelay
BRACKET_C
BRACKET_O
STRUCT

rcu_random_state
MULT

rrsp
BRACKET_C
SEMICOLON

void
BRACKET_O
MULT

readunlock
BRACKET_C
BRACKET_O
TYPE_INT

idx
BRACKET_C
SEMICOLON
TYPE_INT
BRACKET_O
MULT

completed
BRACKET_C
BRACKET_O

void
BRACKET_C
SEMICOLON

void
BRACKET_O
MULT

deferredfree
BRACKET_C
BRACKET_O
STRUCT

rcu_torture
MULT

p
BRACKET_C
SEMICOLON

void
BRACKET_O
MULT

sync
BRACKET_C
BRACKET_O

void
BRACKET_C
SEMICOLON
TYPE_INT
BRACKET_O
MULT

stats
BRACKET_C
BRACKET_O
TYPE_CHAR
MULT

page
BRACKET_C
SEMICOLON
TYPE_CHAR
MULT

name
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

rcu_torture_ops
MULT

cur_ops
OP_ASSIGNMENT

NULL
SEMICOLON

static
TYPE_INT

rcu_torture_read_lock
BRACKET_O

void
BRACKET_C

__acquires
BRACKET_O

RCU
BRACKET_C
CURLY_BRACKET_O

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_read_delay
BRACKET_O
STRUCT

rcu_random_state
MULT

rrsp
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

delay
SEMICOLON
CONST
TYPE_LONG

longdelay
OP_ASSIGNMENT
NUMBER
SEMICOLON

delay
OP_ASSIGNMENT

rcu_random
BRACKET_O

rrsp
BRACKET_C
MODULO
BRACKET_O

nrealreaders
MULT
NUMBER
MULT

longdelay
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

delay
BRACKET_C

udelay
BRACKET_O

longdelay
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_torture_read_unlock
BRACKET_O
TYPE_INT

idx
BRACKET_C

__releases
BRACKET_O

RCU
BRACKET_C
CURLY_BRACKET_O

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

rcu_torture_completed
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

rcu_batches_completed
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_torture_cb
BRACKET_O
STRUCT

rcu_head
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
STRUCT

rcu_torture
MULT

rp
OP_ASSIGNMENT

container_of
BRACKET_O

p
COMMA
STRUCT

rcu_torture
COMMA

rtort_rcu
BRACKET_C
SEMICOLON
IF
BRACKET_O

fullstop
BRACKET_C
CURLY_BRACKET_O

return
SEMICOLON
CURLY_BRACKET_C

i
OP_ASSIGNMENT

rp
MINUS
GREATER

rtort_pipe_count
SEMICOLON
IF
BRACKET_O

i
GREATER

RCU_TORTURE_PIPE_LEN
BRACKET_C

i
OP_ASSIGNMENT

RCU_TORTURE_PIPE_LEN
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

rcu_torture_wcount
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
PLUS
PLUS

rp
MINUS
GREATER

rtort_pipe_count
GR_EQ

RCU_TORTURE_PIPE_LEN
BRACKET_C
CURLY_BRACKET_O

rp
MINUS
GREATER

rtort_mbtest
OP_ASSIGNMENT
NUMBER
SEMICOLON

rcu_torture_free
BRACKET_O

rp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

cur_ops
MINUS
GREATER

deferredfree
BRACKET_O

rp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_torture_deferred_free
BRACKET_O
STRUCT

rcu_torture
MULT

p
BRACKET_C
CURLY_BRACKET_O

call_rcu
BRACKET_O
AMPERSANT

p
MINUS
GREATER

rtort_rcu
COMMA

rcu_torture_cb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

rcu_torture_ops

rcu_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

init
OP_ASSIGNMENT

NULL
COMMA
DOT

cleanup
OP_ASSIGNMENT

NULL
COMMA
DOT

readlock
OP_ASSIGNMENT

rcu_torture_read_lock
COMMA
DOT

readdelay
OP_ASSIGNMENT

rcu_read_delay
COMMA
DOT

readunlock
OP_ASSIGNMENT

rcu_torture_read_unlock
COMMA
DOT

completed
OP_ASSIGNMENT

rcu_torture_completed
COMMA
DOT

deferredfree
OP_ASSIGNMENT

rcu_torture_deferred_free
COMMA
DOT

sync
OP_ASSIGNMENT

synchronize_rcu
COMMA
DOT

stats
OP_ASSIGNMENT

NULL
COMMA
DOT

name
OP_ASSIGNMENT
STRING
CURLY_BRACKET_C
SEMICOLON

static

void

rcu_sync_torture_deferred_free
BRACKET_O
STRUCT

rcu_torture
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
STRUCT

rcu_torture
MULT

rp
SEMICOLON
STRUCT

rcu_torture
MULT

rp1
SEMICOLON

cur_ops
MINUS
GREATER

sync
BRACKET_O
BRACKET_C
SEMICOLON

list_add
BRACKET_O
AMPERSANT

p
MINUS
GREATER

rtort_free
COMMA
AMPERSANT

rcu_torture_removed
BRACKET_C
SEMICOLON

list_for_each_entry_safe
BRACKET_O

rp
COMMA

rp1
COMMA
AMPERSANT

rcu_torture_removed
COMMA

rtort_free
BRACKET_C
CURLY_BRACKET_O

i
OP_ASSIGNMENT

rp
MINUS
GREATER

rtort_pipe_count
SEMICOLON
IF
BRACKET_O

i
GREATER

RCU_TORTURE_PIPE_LEN
BRACKET_C

i
OP_ASSIGNMENT

RCU_TORTURE_PIPE_LEN
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

rcu_torture_wcount
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
PLUS
PLUS

rp
MINUS
GREATER

rtort_pipe_count
GR_EQ

RCU_TORTURE_PIPE_LEN
BRACKET_C
CURLY_BRACKET_O

rp
MINUS
GREATER

rtort_mbtest
OP_ASSIGNMENT
NUMBER
SEMICOLON

list_del
BRACKET_O
AMPERSANT

rp
MINUS
GREATER

rtort_free
BRACKET_C
SEMICOLON

rcu_torture_free
BRACKET_O

rp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

rcu_sync_torture_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

rcu_torture_removed
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

rcu_torture_ops

rcu_sync_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

init
OP_ASSIGNMENT

rcu_sync_torture_init
COMMA
DOT

cleanup
OP_ASSIGNMENT

NULL
COMMA
DOT

readlock
OP_ASSIGNMENT

rcu_torture_read_lock
COMMA
DOT

readdelay
OP_ASSIGNMENT

rcu_read_delay
COMMA
DOT

readunlock
OP_ASSIGNMENT

rcu_torture_read_unlock
COMMA
DOT

completed
OP_ASSIGNMENT

rcu_torture_completed
COMMA
DOT

deferredfree
OP_ASSIGNMENT

rcu_sync_torture_deferred_free
COMMA
DOT

sync
OP_ASSIGNMENT

synchronize_rcu
COMMA
DOT

stats
OP_ASSIGNMENT

NULL
COMMA
DOT

name
OP_ASSIGNMENT
STRING
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

rcu_bh_torture_read_lock
BRACKET_O

void
BRACKET_C

__acquires
BRACKET_O

RCU_BH
BRACKET_C
CURLY_BRACKET_O

rcu_read_lock_bh
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_bh_torture_read_unlock
BRACKET_O
TYPE_INT

idx
BRACKET_C

__releases
BRACKET_O

RCU_BH
BRACKET_C
CURLY_BRACKET_O

rcu_read_unlock_bh
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

rcu_bh_torture_completed
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

rcu_batches_completed_bh
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_bh_torture_deferred_free
BRACKET_O
STRUCT

rcu_torture
MULT

p
BRACKET_C
CURLY_BRACKET_O

call_rcu_bh
BRACKET_O
AMPERSANT

p
MINUS
GREATER

rtort_rcu
COMMA

rcu_torture_cb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

rcu_bh_torture_synchronize
CURLY_BRACKET_O
STRUCT

rcu_head

head
SEMICOLON
STRUCT

completion

completion
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static

void

rcu_bh_torture_wakeme_after_cb
BRACKET_O
STRUCT

rcu_head
MULT

head
BRACKET_C
CURLY_BRACKET_O
STRUCT

rcu_bh_torture_synchronize
MULT

rcu
SEMICOLON

rcu
OP_ASSIGNMENT

container_of
BRACKET_O

head
COMMA
STRUCT

rcu_bh_torture_synchronize
COMMA

head
BRACKET_C
SEMICOLON

complete
BRACKET_O
AMPERSANT

rcu
MINUS
GREATER

completion
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_bh_torture_synchronize
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

rcu_bh_torture_synchronize

rcu
SEMICOLON

init_completion
BRACKET_O
AMPERSANT

rcu
DOT

completion
BRACKET_C
SEMICOLON

call_rcu_bh
BRACKET_O
AMPERSANT

rcu
DOT

head
COMMA

rcu_bh_torture_wakeme_after_cb
BRACKET_C
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

rcu
DOT

completion
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

rcu_torture_ops

rcu_bh_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

init
OP_ASSIGNMENT

NULL
COMMA
DOT

cleanup
OP_ASSIGNMENT

NULL
COMMA
DOT

readlock
OP_ASSIGNMENT

rcu_bh_torture_read_lock
COMMA
DOT

readdelay
OP_ASSIGNMENT

rcu_read_delay
COMMA
DOT

readunlock
OP_ASSIGNMENT

rcu_bh_torture_read_unlock
COMMA
DOT

completed
OP_ASSIGNMENT

rcu_bh_torture_completed
COMMA
DOT

deferredfree
OP_ASSIGNMENT

rcu_bh_torture_deferred_free
COMMA
DOT

sync
OP_ASSIGNMENT

rcu_bh_torture_synchronize
COMMA
DOT

stats
OP_ASSIGNMENT

NULL
COMMA
DOT

name
OP_ASSIGNMENT
STRING
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

rcu_torture_ops

rcu_bh_sync_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

init
OP_ASSIGNMENT

rcu_sync_torture_init
COMMA
DOT

cleanup
OP_ASSIGNMENT

NULL
COMMA
DOT

readlock
OP_ASSIGNMENT

rcu_bh_torture_read_lock
COMMA
DOT

readdelay
OP_ASSIGNMENT

rcu_read_delay
COMMA
DOT

readunlock
OP_ASSIGNMENT

rcu_bh_torture_read_unlock
COMMA
DOT

completed
OP_ASSIGNMENT

rcu_bh_torture_completed
COMMA
DOT

deferredfree
OP_ASSIGNMENT

rcu_sync_torture_deferred_free
COMMA
DOT

sync
OP_ASSIGNMENT

rcu_bh_torture_synchronize
COMMA
DOT

stats
OP_ASSIGNMENT

NULL
COMMA
DOT

name
OP_ASSIGNMENT
STRING
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

srcu_struct

srcu_ctl
SEMICOLON

static

void

srcu_torture_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

init_srcu_struct
BRACKET_O
AMPERSANT

srcu_ctl
BRACKET_C
SEMICOLON

rcu_sync_torture_init
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

srcu_torture_cleanup
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

synchronize_srcu
BRACKET_O
AMPERSANT

srcu_ctl
BRACKET_C
SEMICOLON

cleanup_srcu_struct
BRACKET_O
AMPERSANT

srcu_ctl
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

srcu_torture_read_lock
BRACKET_O

void
BRACKET_C

__acquires
BRACKET_O
AMPERSANT

srcu_ctl
BRACKET_C
CURLY_BRACKET_O

return

srcu_read_lock
BRACKET_O
AMPERSANT

srcu_ctl
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

srcu_read_delay
BRACKET_O
STRUCT

rcu_random_state
MULT

rrsp
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

delay
SEMICOLON
CONST
TYPE_LONG

uspertick
OP_ASSIGNMENT
NUMBER
DIV

HZ
SEMICOLON
CONST
TYPE_LONG

longdelay
OP_ASSIGNMENT
NUMBER
SEMICOLON

delay
OP_ASSIGNMENT

rcu_random
BRACKET_O

rrsp
BRACKET_C
MODULO
BRACKET_O

nrealreaders
MULT
NUMBER
MULT

longdelay
MULT

uspertick
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

delay
BRACKET_C

schedule_timeout_interruptible
BRACKET_O

longdelay
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

srcu_torture_read_unlock
BRACKET_O
TYPE_INT

idx
BRACKET_C

__releases
BRACKET_O
AMPERSANT

srcu_ctl
BRACKET_C
CURLY_BRACKET_O

srcu_read_unlock
BRACKET_O
AMPERSANT

srcu_ctl
COMMA

idx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

srcu_torture_completed
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

srcu_batches_completed
BRACKET_O
AMPERSANT

srcu_ctl
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

srcu_torture_synchronize
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

synchronize_srcu
BRACKET_O
AMPERSANT

srcu_ctl
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

srcu_torture_stats
BRACKET_O
TYPE_CHAR
MULT

page
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cnt
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

cpu
SEMICOLON
TYPE_INT

idx
OP_ASSIGNMENT

srcu_ctl
DOT

completed
AMPERSANT
NUMBER

x1
SEMICOLON

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
COMMA

torture_type
COMMA

TORTURE_FLAG
COMMA

idx
BRACKET_C
SEMICOLON

for_each_possible_cpu
BRACKET_O

cpu
BRACKET_C
CURLY_BRACKET_O

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
COMMA

cpu
COMMA

per_cpu_ptr
BRACKET_O

srcu_ctl
DOT

per_cpu_ref
COMMA

cpu
BRACKET_C
MINUS
GREATER

c
CORNER_BRACKET_O
NOT

idx
CORNER_BRACKET_C
COMMA

per_cpu_ptr
BRACKET_O

srcu_ctl
DOT

per_cpu_ref
COMMA

cpu
BRACKET_C
MINUS
GREATER

c
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
BRACKET_C
SEMICOLON

return

cnt
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

rcu_torture_ops

srcu_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

init
OP_ASSIGNMENT

srcu_torture_init
COMMA
DOT

cleanup
OP_ASSIGNMENT

srcu_torture_cleanup
COMMA
DOT

readlock
OP_ASSIGNMENT

srcu_torture_read_lock
COMMA
DOT

readdelay
OP_ASSIGNMENT

srcu_read_delay
COMMA
DOT

readunlock
OP_ASSIGNMENT

srcu_torture_read_unlock
COMMA
DOT

completed
OP_ASSIGNMENT

srcu_torture_completed
COMMA
DOT

deferredfree
OP_ASSIGNMENT

rcu_sync_torture_deferred_free
COMMA
DOT

sync
OP_ASSIGNMENT

srcu_torture_synchronize
COMMA
DOT

stats
OP_ASSIGNMENT

srcu_torture_stats
COMMA
DOT

name
OP_ASSIGNMENT
STRING
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

sched_torture_read_lock
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

sched_torture_read_unlock
BRACKET_O
TYPE_INT

idx
BRACKET_C
CURLY_BRACKET_O

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

sched_torture_completed
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

sched_torture_synchronize
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

synchronize_sched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

rcu_torture_ops

sched_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

init
OP_ASSIGNMENT

rcu_sync_torture_init
COMMA
DOT

cleanup
OP_ASSIGNMENT

NULL
COMMA
DOT

readlock
OP_ASSIGNMENT

sched_torture_read_lock
COMMA
DOT

readdelay
OP_ASSIGNMENT

rcu_read_delay
COMMA
DOT

readunlock
OP_ASSIGNMENT

sched_torture_read_unlock
COMMA
DOT

completed
OP_ASSIGNMENT

sched_torture_completed
COMMA
DOT

deferredfree
OP_ASSIGNMENT

rcu_sync_torture_deferred_free
COMMA
DOT

sync
OP_ASSIGNMENT

sched_torture_synchronize
COMMA
DOT

stats
OP_ASSIGNMENT

NULL
COMMA
DOT

name
OP_ASSIGNMENT
STRING
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

rcu_torture_writer
BRACKET_O

void
MULT

arg
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
TYPE_LONG

oldbatch
OP_ASSIGNMENT

rcu_batches_completed
BRACKET_O
BRACKET_C
SEMICOLON
STRUCT

rcu_torture
MULT

rp
SEMICOLON
STRUCT

rcu_torture
MULT

old_rp
SEMICOLON

static

DEFINE_RCU_RANDOM
BRACKET_O

rand
BRACKET_C
SEMICOLON

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

set_user_nice
BRACKET_O

current
COMMA
NUMBER
BRACKET_C
SEMICOLON

current
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_NOFREEZE
SEMICOLON
DO
CURLY_BRACKET_O

schedule_timeout_uninterruptible
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

rp
OP_ASSIGNMENT

rcu_torture_alloc
BRACKET_O
BRACKET_C
BRACKET_C
EQ

NULL
BRACKET_C
CONTINUE
SEMICOLON

rp
MINUS
GREATER

rtort_pipe_count
OP_ASSIGNMENT
NUMBER
SEMICOLON

udelay
BRACKET_O

rcu_random
BRACKET_O
AMPERSANT

rand
BRACKET_C
AMPERSANT
NUMBER

x3ff
BRACKET_C
SEMICOLON

old_rp
OP_ASSIGNMENT

rcu_torture_current
SEMICOLON

rp
MINUS
GREATER

rtort_mbtest
OP_ASSIGNMENT
NUMBER
SEMICOLON

rcu_assign_pointer
BRACKET_O

rcu_torture_current
COMMA

rp
BRACKET_C
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

old_rp
BRACKET_C
CURLY_BRACKET_O

i
OP_ASSIGNMENT

old_rp
MINUS
GREATER

rtort_pipe_count
SEMICOLON
IF
BRACKET_O

i
GREATER

RCU_TORTURE_PIPE_LEN
BRACKET_C

i
OP_ASSIGNMENT

RCU_TORTURE_PIPE_LEN
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

rcu_torture_wcount
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

old_rp
MINUS
GREATER

rtort_pipe_count
PLUS
PLUS
SEMICOLON

cur_ops
MINUS
GREATER

deferredfree
BRACKET_O

old_rp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

rcu_torture_current_version
PLUS
PLUS
SEMICOLON

oldbatch
OP_ASSIGNMENT

cur_ops
MINUS
GREATER

completed
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
AND
NOT

fullstop
BRACKET_C
SEMICOLON

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C

schedule_timeout_uninterruptible
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

rcu_torture_fakewriter
BRACKET_O

void
MULT

arg
BRACKET_C
CURLY_BRACKET_O

DEFINE_RCU_RANDOM
BRACKET_O

rand
BRACKET_C
SEMICOLON

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

set_user_nice
BRACKET_O

current
COMMA
NUMBER
BRACKET_C
SEMICOLON

current
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_NOFREEZE
SEMICOLON
DO
CURLY_BRACKET_O

schedule_timeout_uninterruptible
BRACKET_O
NUMBER
PLUS

rcu_random
BRACKET_O
AMPERSANT

rand
BRACKET_C
MODULO
NUMBER
BRACKET_C
SEMICOLON

udelay
BRACKET_O

rcu_random
BRACKET_O
AMPERSANT

rand
BRACKET_C
AMPERSANT
NUMBER

x3ff
BRACKET_C
SEMICOLON

cur_ops
MINUS
GREATER

sync
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
AND
NOT

fullstop
BRACKET_C
SEMICOLON

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C

schedule_timeout_uninterruptible
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

rcu_torture_reader
BRACKET_O

void
MULT

arg
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

completed
SEMICOLON
TYPE_INT

idx
SEMICOLON

DEFINE_RCU_RANDOM
BRACKET_O

rand
BRACKET_C
SEMICOLON
STRUCT

rcu_torture
MULT

p
SEMICOLON
TYPE_INT

pipe_count
SEMICOLON

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

set_user_nice
BRACKET_O

current
COMMA
NUMBER
BRACKET_C
SEMICOLON

current
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_NOFREEZE
SEMICOLON
DO
CURLY_BRACKET_O

idx
OP_ASSIGNMENT

cur_ops
MINUS
GREATER

readlock
BRACKET_O
BRACKET_C
SEMICOLON

completed
OP_ASSIGNMENT

cur_ops
MINUS
GREATER

completed
BRACKET_O
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

rcu_dereference
BRACKET_O

rcu_torture_current
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
EQ

NULL
BRACKET_C
CURLY_BRACKET_O

cur_ops
MINUS
GREATER

readunlock
BRACKET_O

idx
BRACKET_C
SEMICOLON

schedule_timeout_interruptible
BRACKET_O

HZ
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

p
MINUS
GREATER

rtort_mbtest
EQ
NUMBER
BRACKET_C

atomic_inc
BRACKET_O
AMPERSANT

n_rcu_torture_mberror
BRACKET_C
SEMICOLON

cur_ops
MINUS
GREATER

readdelay
BRACKET_O
AMPERSANT

rand
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

pipe_count
OP_ASSIGNMENT

p
MINUS
GREATER

rtort_pipe_count
SEMICOLON
IF
BRACKET_O

pipe_count
GREATER

RCU_TORTURE_PIPE_LEN
BRACKET_C
CURLY_BRACKET_O

pipe_count
OP_ASSIGNMENT

RCU_TORTURE_PIPE_LEN
SEMICOLON
CURLY_BRACKET_C
PLUS
PLUS

__get_cpu_var
BRACKET_O

rcu_torture_count
BRACKET_C
CORNER_BRACKET_O

pipe_count
CORNER_BRACKET_C
SEMICOLON

completed
OP_ASSIGNMENT

cur_ops
MINUS
GREATER

completed
BRACKET_O
BRACKET_C
MINUS

completed
SEMICOLON
IF
BRACKET_O

completed
GREATER

RCU_TORTURE_PIPE_LEN
BRACKET_C
CURLY_BRACKET_O

completed
OP_ASSIGNMENT

RCU_TORTURE_PIPE_LEN
SEMICOLON
CURLY_BRACKET_C
PLUS
PLUS

__get_cpu_var
BRACKET_O

rcu_torture_batch
BRACKET_C
CORNER_BRACKET_O

completed
CORNER_BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON

cur_ops
MINUS
GREATER

readunlock
BRACKET_O

idx
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
AND
NOT

fullstop
BRACKET_C
SEMICOLON

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C

schedule_timeout_uninterruptible
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

rcu_torture_printk
BRACKET_O
TYPE_CHAR
MULT

page
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cnt
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

cpu
SEMICOLON
TYPE_INT

i
SEMICOLON
TYPE_LONG

pipesummary
CORNER_BRACKET_O

RCU_TORTURE_PIPE_LEN
PLUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
NUMBER
CURLY_BRACKET_C
SEMICOLON
TYPE_LONG

batchsummary
CORNER_BRACKET_O

RCU_TORTURE_PIPE_LEN
PLUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
NUMBER
CURLY_BRACKET_C
SEMICOLON

for_each_possible_cpu
BRACKET_O

cpu
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

RCU_TORTURE_PIPE_LEN
PLUS
NUMBER
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

pipesummary
CORNER_BRACKET_O

i
CORNER_BRACKET_C
ASSIGN_PLUS

per_cpu
BRACKET_O

rcu_torture_count
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

batchsummary
CORNER_BRACKET_O

i
CORNER_BRACKET_C
ASSIGN_PLUS

per_cpu
BRACKET_O

rcu_torture_batch
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT

RCU_TORTURE_PIPE_LEN
MINUS
NUMBER
SEMICOLON

i
GR_EQ
NUMBER
SEMICOLON

i
MINUS
MINUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

pipesummary
CORNER_BRACKET_O

i
CORNER_BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
COMMA

torture_type
COMMA

TORTURE_FLAG
BRACKET_C
SEMICOLON

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
STRING
COMMA

rcu_torture_current
COMMA

rcu_torture_current_version
COMMA

list_empty
BRACKET_O
AMPERSANT

rcu_torture_freelist
BRACKET_C
COMMA

atomic_read
BRACKET_O
AMPERSANT

n_rcu_torture_alloc
BRACKET_C
COMMA

atomic_read
BRACKET_O
AMPERSANT

n_rcu_torture_alloc_fail
BRACKET_C
COMMA

atomic_read
BRACKET_O
AMPERSANT

n_rcu_torture_free
BRACKET_C
COMMA

atomic_read
BRACKET_O
AMPERSANT

n_rcu_torture_mberror
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

n_rcu_torture_mberror
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
BRACKET_C
SEMICOLON

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
COMMA

torture_type
COMMA

TORTURE_FLAG
BRACKET_C
SEMICOLON
IF
BRACKET_O

i
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

n_rcu_torture_error
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

RCU_TORTURE_PIPE_LEN
PLUS
NUMBER
SEMICOLON

i
PLUS
PLUS
BRACKET_C

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
COMMA

pipesummary
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
COMMA

torture_type
COMMA

TORTURE_FLAG
BRACKET_C
SEMICOLON

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

RCU_TORTURE_PIPE_LEN
PLUS
NUMBER
SEMICOLON

i
PLUS
PLUS
BRACKET_C

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
COMMA

batchsummary
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
COMMA

torture_type
COMMA

TORTURE_FLAG
BRACKET_C
SEMICOLON

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

RCU_TORTURE_PIPE_LEN
PLUS
NUMBER
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
COMMA

atomic_read
BRACKET_O
AMPERSANT

rcu_torture_wcount
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

cnt
ASSIGN_PLUS

sprintf
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

cur_ops
MINUS
GREATER

stats
BRACKET_C

cnt
ASSIGN_PLUS

cur_ops
MINUS
GREATER

stats
BRACKET_O
AMPERSANT

page
CORNER_BRACKET_O

cnt
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

return

cnt
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_torture_stats_print
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cnt
SEMICOLON

cnt
OP_ASSIGNMENT

rcu_torture_printk
BRACKET_O

printk_buf
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_ALERT
STRING
COMMA

printk_buf
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

rcu_torture_stats
BRACKET_O

void
MULT

arg
BRACKET_C
CURLY_BRACKET_O

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O

schedule_timeout_interruptible
BRACKET_O

stat_interval
MULT

HZ
BRACKET_C
SEMICOLON

rcu_torture_stats_print
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

rcu_idle_cpu
SEMICOLON

static

void

rcu_torture_shuffle_tasks
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

cpumask_t

tmp_mask
OP_ASSIGNMENT

CPU_MASK_ALL
SEMICOLON
TYPE_INT

i
SEMICOLON

lock_cpu_hotplug
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

num_online_cpus
BRACKET_O
BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

unlock_cpu_hotplug
BRACKET_O
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

rcu_idle_cpu
NOT_EQ
MINUS
NUMBER
BRACKET_C

cpu_clear
BRACKET_O

rcu_idle_cpu
COMMA

tmp_mask
BRACKET_C
SEMICOLON

set_cpus_allowed
BRACKET_O

current
COMMA

tmp_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

reader_tasks
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nrealreaders
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

reader_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C

set_cpus_allowed
BRACKET_O

reader_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

tmp_mask
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

fakewriter_tasks
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nfakewriters
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

fakewriter_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C

set_cpus_allowed
BRACKET_O

fakewriter_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

tmp_mask
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

writer_task
BRACKET_C

set_cpus_allowed
BRACKET_O

writer_task
COMMA

tmp_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

stats_task
BRACKET_C

set_cpus_allowed
BRACKET_O

stats_task
COMMA

tmp_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

rcu_idle_cpu
EQ
MINUS
NUMBER
BRACKET_C

rcu_idle_cpu
OP_ASSIGNMENT

num_online_cpus
BRACKET_O
BRACKET_C
MINUS
NUMBER
SEMICOLON
ELSE

rcu_idle_cpu
MINUS
MINUS
SEMICOLON

unlock_cpu_hotplug
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

rcu_torture_shuffle
BRACKET_O

void
MULT

arg
BRACKET_C
CURLY_BRACKET_O

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O

schedule_timeout_interruptible
BRACKET_O

shuffle_interval
MULT

HZ
BRACKET_C
SEMICOLON

rcu_torture_shuffle_tasks
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline

void

rcu_torture_print_module_parms
BRACKET_O
TYPE_CHAR
MULT

tag
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ALERT
STRING

TORTURE_FLAG
STRING
STRING
STRING
COMMA

torture_type
COMMA

tag
COMMA

nrealreaders
COMMA

nfakewriters
COMMA

stat_interval
COMMA

verbose
COMMA

test_no_idle_hz
COMMA

shuffle_interval
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rcu_torture_cleanup
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON

fullstop
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

shuffler_task
BRACKET_C
CURLY_BRACKET_O

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

kthread_stop
BRACKET_O

shuffler_task
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

shuffler_task
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

writer_task
BRACKET_C
CURLY_BRACKET_O

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

kthread_stop
BRACKET_O

writer_task
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

writer_task
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

reader_tasks
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nrealreaders
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

reader_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

kthread_stop
BRACKET_O

reader_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

reader_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

kfree
BRACKET_O

reader_tasks
BRACKET_C
SEMICOLON

reader_tasks
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

rcu_torture_current
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

fakewriter_tasks
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nfakewriters
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

fakewriter_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

kthread_stop
BRACKET_O

fakewriter_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

fakewriter_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

kfree
BRACKET_O

fakewriter_tasks
BRACKET_C
SEMICOLON

fakewriter_tasks
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

stats_task
BRACKET_C
CURLY_BRACKET_O

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

kthread_stop
BRACKET_O

stats_task
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

stats_task
OP_ASSIGNMENT

NULL
SEMICOLON

rcu_barrier
BRACKET_O
BRACKET_C
SEMICOLON

rcu_torture_stats_print
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

cur_ops
MINUS
GREATER

cleanup
BRACKET_C

cur_ops
MINUS
GREATER

cleanup
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

n_rcu_torture_error
BRACKET_C
BRACKET_C

rcu_torture_print_module_parms
BRACKET_O
STRING
BRACKET_C
SEMICOLON
ELSE

rcu_torture_print_module_parms
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__init

rcu_torture_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
TYPE_INT

cpu
SEMICOLON
TYPE_INT

firsterr
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
STRUCT

rcu_torture_ops
MULT

torture_ops
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
AMPERSANT

rcu_ops
COMMA
AMPERSANT

rcu_sync_ops
COMMA
AMPERSANT

rcu_bh_ops
COMMA
AMPERSANT

rcu_bh_sync_ops
COMMA
AMPERSANT

srcu_ops
COMMA
AMPERSANT

sched_ops
COMMA
CURLY_BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

ARRAY_SIZE
BRACKET_O

torture_ops
BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

cur_ops
OP_ASSIGNMENT

torture_ops
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

strcmp
BRACKET_O

torture_type
COMMA

cur_ops
MINUS
GREATER

name
BRACKET_C
EQ
NUMBER
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

i
EQ

ARRAY_SIZE
BRACKET_O

torture_ops
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ALERT
STRING
COMMA

torture_type
BRACKET_C
SEMICOLON

return
BRACKET_O
MINUS

EINVAL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

cur_ops
MINUS
GREATER

init
BRACKET_C

cur_ops
MINUS
GREATER

init
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

nreaders
GR_EQ
NUMBER
BRACKET_C

nrealreaders
OP_ASSIGNMENT

nreaders
SEMICOLON
ELSE

nrealreaders
OP_ASSIGNMENT
NUMBER
MULT

num_online_cpus
BRACKET_O
BRACKET_C
SEMICOLON

rcu_torture_print_module_parms
BRACKET_O
STRING
BRACKET_C
SEMICOLON

fullstop
OP_ASSIGNMENT
NUMBER
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

rcu_torture_freelist
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

ARRAY_SIZE
BRACKET_O

rcu_tortures
BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

rcu_tortures
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

rtort_mbtest
OP_ASSIGNMENT
NUMBER
SEMICOLON

list_add_tail
BRACKET_O
AMPERSANT

rcu_tortures
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

rtort_free
COMMA
AMPERSANT

rcu_torture_freelist
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

rcu_torture_current
OP_ASSIGNMENT

NULL
SEMICOLON

rcu_torture_current_version
OP_ASSIGNMENT
NUMBER
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

n_rcu_torture_alloc
COMMA
NUMBER
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

n_rcu_torture_alloc_fail
COMMA
NUMBER
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

n_rcu_torture_free
COMMA
NUMBER
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

n_rcu_torture_mberror
COMMA
NUMBER
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

n_rcu_torture_error
COMMA
NUMBER
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

RCU_TORTURE_PIPE_LEN
PLUS
NUMBER
SEMICOLON

i
PLUS
PLUS
BRACKET_C

atomic_set
BRACKET_O
AMPERSANT

rcu_torture_wcount
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA
NUMBER
BRACKET_C
SEMICOLON

for_each_possible_cpu
BRACKET_O

cpu
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

RCU_TORTURE_PIPE_LEN
PLUS
NUMBER
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

per_cpu
BRACKET_O

rcu_torture_count
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

per_cpu
BRACKET_O

rcu_torture_batch
COMMA

cpu
BRACKET_C
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

writer_task
OP_ASSIGNMENT

kthread_run
BRACKET_O

rcu_torture_writer
COMMA

NULL
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

writer_task
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

firsterr
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

writer_task
BRACKET_C
SEMICOLON

VERBOSE_PRINTK_ERRSTRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

writer_task
OP_ASSIGNMENT

NULL
SEMICOLON

goto

unwind
SEMICOLON
CURLY_BRACKET_C

fakewriter_tasks
OP_ASSIGNMENT

kzalloc
BRACKET_O

nfakewriters
MULT

sizeof
BRACKET_O

fakewriter_tasks
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

fakewriter_tasks
EQ

NULL
BRACKET_C
CURLY_BRACKET_O

VERBOSE_PRINTK_ERRSTRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

firsterr
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

goto

unwind
SEMICOLON
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nfakewriters
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

fakewriter_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

kthread_run
BRACKET_O

rcu_torture_fakewriter
COMMA

NULL
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

fakewriter_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

firsterr
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

fakewriter_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

VERBOSE_PRINTK_ERRSTRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

fakewriter_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

goto

unwind
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

reader_tasks
OP_ASSIGNMENT

kzalloc
BRACKET_O

nrealreaders
MULT

sizeof
BRACKET_O

reader_tasks
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

reader_tasks
EQ

NULL
BRACKET_C
CURLY_BRACKET_O

VERBOSE_PRINTK_ERRSTRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

firsterr
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON

goto

unwind
SEMICOLON
CURLY_BRACKET_C
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nrealreaders
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

reader_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

kthread_run
BRACKET_O

rcu_torture_reader
COMMA

NULL
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

reader_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

firsterr
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

reader_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

VERBOSE_PRINTK_ERRSTRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

reader_tasks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

goto

unwind
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

stat_interval
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

VERBOSE_PRINTK_STRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

stats_task
OP_ASSIGNMENT

kthread_run
BRACKET_O

rcu_torture_stats
COMMA

NULL
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

stats_task
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

firsterr
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

stats_task
BRACKET_C
SEMICOLON

VERBOSE_PRINTK_ERRSTRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

stats_task
OP_ASSIGNMENT

NULL
SEMICOLON

goto

unwind
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

test_no_idle_hz
BRACKET_C
CURLY_BRACKET_O

rcu_idle_cpu
OP_ASSIGNMENT

num_online_cpus
BRACKET_O
BRACKET_C
MINUS
NUMBER
SEMICOLON

shuffler_task
OP_ASSIGNMENT

kthread_run
BRACKET_O

rcu_torture_shuffle
COMMA

NULL
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

shuffler_task
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

firsterr
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

shuffler_task
BRACKET_C
SEMICOLON

VERBOSE_PRINTK_ERRSTRING
BRACKET_O
STRING
BRACKET_C
SEMICOLON

shuffler_task
OP_ASSIGNMENT

NULL
SEMICOLON

goto

unwind
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON

unwind
COLON

rcu_torture_cleanup
BRACKET_O
BRACKET_C
SEMICOLON

return

firsterr
SEMICOLON
CURLY_BRACKET_C

module_init
BRACKET_O

rcu_torture_init
BRACKET_C
SEMICOLON

module_exit
BRACKET_O

rcu_torture_cleanup
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static

DEFINE_MUTEX
BRACKET_O

relay_channels_mutex
BRACKET_C
SEMICOLON

static

LIST_HEAD
BRACKET_O

relay_channels
BRACKET_C
SEMICOLON

static

void

relay_file_mmap_close
BRACKET_O
STRUCT

vm_area_struct
MULT

vma
BRACKET_C
CURLY_BRACKET_O
STRUCT

rchan_buf
MULT

buf
OP_ASSIGNMENT

vma
MINUS
GREATER

vm_private_data
SEMICOLON

buf
MINUS
GREATER

chan
MINUS
GREATER

cb
MINUS
GREATER

buf_unmapped
BRACKET_O

buf
COMMA

vma
MINUS
GREATER

vm_file
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

page
MULT

relay_buf_nopage
BRACKET_O
STRUCT

vm_area_struct
MULT

vma
COMMA
TYPE_UNSIGNED
TYPE_LONG

address
COMMA
TYPE_INT
MULT

type
BRACKET_C
CURLY_BRACKET_O
STRUCT

page
MULT

page
SEMICOLON
STRUCT

rchan_buf
MULT

buf
OP_ASSIGNMENT

vma
MINUS
GREATER

vm_private_data
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

offset
OP_ASSIGNMENT

address
MINUS

vma
MINUS
GREATER

vm_start
SEMICOLON
IF
BRACKET_O

address
GREATER

vma
MINUS
GREATER

vm_end
BRACKET_C

return

NOPAGE_SIGBUS
SEMICOLON
IF
BRACKET_O
NOT

buf
BRACKET_C

return

NOPAGE_OOM
SEMICOLON

page
OP_ASSIGNMENT

vmalloc_to_page
BRACKET_O

buf
MINUS
GREATER

start
PLUS

offset
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

page
BRACKET_C

return

NOPAGE_OOM
SEMICOLON

get_page
BRACKET_O

page
BRACKET_C
SEMICOLON
IF
BRACKET_O

type
BRACKET_C
MULT

type
OP_ASSIGNMENT

VM_FAULT_MINOR
SEMICOLON

return

page
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

vm_operations_struct

relay_file_mmap_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

nopage
OP_ASSIGNMENT

relay_buf_nopage
COMMA
DOT

close
OP_ASSIGNMENT

relay_file_mmap_close
COMMA
CURLY_BRACKET_C
SEMICOLON
TYPE_INT

relay_mmap_buf
BRACKET_O
STRUCT

rchan_buf
MULT

buf
COMMA
STRUCT

vm_area_struct
MULT

vma
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

length
OP_ASSIGNMENT

vma
MINUS
GREATER

vm_end
MINUS

vma
MINUS
GREATER

vm_start
SEMICOLON
STRUCT

file
MULT

filp
OP_ASSIGNMENT

vma
MINUS
GREATER

vm_file
SEMICOLON
IF
BRACKET_O
NOT

buf
BRACKET_C

return
MINUS

EBADF
SEMICOLON
IF
BRACKET_O

length
NOT_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

buf
MINUS
GREATER

chan
MINUS
GREATER

alloc_size
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

vma
MINUS
GREATER

vm_ops
OP_ASSIGNMENT
AMPERSANT

relay_file_mmap_ops
SEMICOLON

vma
MINUS
GREATER

vm_flags
LOGICAL_OR
OP_ASSIGNMENT

VM_DONTEXPAND
SEMICOLON

vma
MINUS
GREATER

vm_private_data
OP_ASSIGNMENT

buf
SEMICOLON

buf
MINUS
GREATER

chan
MINUS
GREATER

cb
MINUS
GREATER

buf_mapped
BRACKET_O

buf
COMMA

filp
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void
MULT

relay_alloc_buf
BRACKET_O
STRUCT

rchan_buf
MULT

buf
COMMA

size_t
MULT

size
BRACKET_C
CURLY_BRACKET_O

void
MULT

mem
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

i
COMMA

j
COMMA

n_pages
SEMICOLON
MULT

size
OP_ASSIGNMENT

PAGE_ALIGN
BRACKET_O
MULT

size
BRACKET_C
SEMICOLON

n_pages
OP_ASSIGNMENT
MULT

size
GREATER
GREATER

PAGE_SHIFT
SEMICOLON

buf
MINUS
GREATER

page_array
OP_ASSIGNMENT

kcalloc
BRACKET_O

n_pages
COMMA

sizeof
BRACKET_O
STRUCT

page
MULT
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

buf
MINUS
GREATER

page_array
BRACKET_C

return

NULL
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

n_pages
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

buf
MINUS
GREATER

page_array
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

alloc_page
BRACKET_O

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

buf
MINUS
GREATER

page_array
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
BRACKET_C

goto

depopulate
SEMICOLON
CURLY_BRACKET_C

mem
OP_ASSIGNMENT

vmap
BRACKET_O

buf
MINUS
GREATER

page_array
COMMA

n_pages
COMMA

VM_MAP
COMMA

PAGE_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

mem
BRACKET_C

goto

depopulate
SEMICOLON

memset
BRACKET_O

mem
COMMA
NUMBER
COMMA
MULT

size
BRACKET_C
SEMICOLON

buf
MINUS
GREATER

page_count
OP_ASSIGNMENT

n_pages
SEMICOLON

return

mem
SEMICOLON

depopulate
COLON
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

i
SEMICOLON

j
PLUS
PLUS
BRACKET_C

__free_page
BRACKET_O

buf
MINUS
GREATER

page_array
CORNER_BRACKET_O

j
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

kfree
BRACKET_O

buf
MINUS
GREATER

page_array
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C
STRUCT

rchan_buf
MULT

relay_create_buf
BRACKET_O
STRUCT

rchan
MULT

chan
BRACKET_C
CURLY_BRACKET_O
STRUCT

rchan_buf
MULT

buf
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

rchan_buf
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

buf
BRACKET_C

return

NULL
SEMICOLON

buf
MINUS
GREATER

padding
OP_ASSIGNMENT

kmalloc
BRACKET_O

chan
MINUS
GREATER

n_subbufs
MULT

sizeof
BRACKET_O

size_t
MULT
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

buf
MINUS
GREATER

padding
BRACKET_C

goto

free_buf
SEMICOLON

buf
MINUS
GREATER

start
OP_ASSIGNMENT

relay_alloc_buf
BRACKET_O

buf
COMMA
AMPERSANT

chan
MINUS
GREATER

alloc_size
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

buf
MINUS
GREATER

start
BRACKET_C

goto

free_buf
SEMICOLON

buf
MINUS
GREATER

chan
OP_ASSIGNMENT

chan
SEMICOLON

kref_get
BRACKET_O
AMPERSANT

buf
MINUS
GREATER

chan
MINUS
GREATER

kref
BRACKET_C
SEMICOLON

return

buf
SEMICOLON

free_buf
COLON

kfree
BRACKET_O

buf
MINUS
GREATER

padding
BRACKET_C
SEMICOLON

kfree
BRACKET_O

buf
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

void

relay_destroy_channel
BRACKET_O
STRUCT

kref
MULT

kref
BRACKET_C
CURLY_BRACKET_O
STRUCT

rchan
MULT

chan
OP_ASSIGNMENT

container_of
BRACKET_O

kref
COMMA
STRUCT

rchan
COMMA

kref
BRACKET_C
SEMICOLON

kfree
BRACKET_O

chan
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

relay_destroy_buf
BRACKET_O
STRUCT

rchan_buf
MULT

buf
BRACKET_C
CURLY_BRACKET_O
STRUCT

rchan
MULT

chan
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

buf
MINUS
GREATER

start
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

vunmap
BRACKET_O

buf
MINUS
GREATER

start
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

buf
MINUS
GREATER

page_count
SEMICOLON

i
PLUS
PLUS
BRACKET_C

__free_page
BRACKET_O

buf
MINUS
GREATER

page_array
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

kfree
BRACKET_O

buf
MINUS
GREATER

page_array
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

buf
MINUS
GREATER

cpu
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

kfree
BRACKET_O

buf
MINUS
GREATER

padding
BRACKET_C
SEMICOLON

kfree
BRACKET_O

buf
BRACKET_C
SEMICOLON

kref_put
BRACKET_O
AMPERSANT

chan
MINUS
GREATER

kref
COMMA

relay_destroy_channel
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

relay_remove_buf
BRACKET_O
STRUCT

kref
MULT

kref
BRACKET_C
CURLY_BRACKET_O
STRUCT

rchan_buf
MULT

buf
OP_ASSIGNMENT

container_of
BRACKET_O

kref
COMMA
STRUCT

rchan_buf
COMMA

kref
BRACKET_C
SEMICOLON

buf
MINUS
GREATER

chan
MINUS
GREATER

cb
MINUS
GREATER

remove_buf_file
BRACKET_O

buf
MINUS
GREATER

dentry
BRACKET_C
SEMICOLON

relay_destroy_buf
BRACKET_O

buf
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

relay_buf_empty
BRACKET_O
STRUCT

rchan_buf
MULT

buf
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O

buf
MINUS
GREATER

subbufs_produced
MINUS

buf
MINUS
GREATER

subbufs_consumed
BRACKET_C
QUESTION_MARK
NUMBER
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

relay_buf_empty
BRACKET_C
SEMICOLON
TYPE_INT

relay_buf_full
BRACKET_O
STRUCT

rchan_buf
MULT

buf
BRACKET_C
CURLY_BRACKET_O

size_t

ready
OP_ASSIGNMENT

buf
MINUS
GREATER

subbufs_produced
MINUS

buf
MINUS
GREATER

subbufs_consumed
SEMICOLON

return
BRACKET_O

ready
GR_EQ

buf
MINUS
GREATER

chan
MINUS
GREATER

n_subbufs
BRACKET_C
QUESTION_MARK
NUMBER
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

relay_buf_full
BRACKET_C
SEMICOLON

static
TYPE_INT

subbuf_start_default_callback
BRACKET_O
STRUCT

rchan_buf
MULT

buf
COMMA

void
MULT

subbuf
COMMA

void
MULT

prev_subbuf
COMMA

size_t

prev_padding
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

relay_buf_full
BRACKET_O

buf
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

buf_mapped_default_callback
BRACKET_O
STRUCT

rchan_buf
MULT

buf
COMMA
STRUCT

file
MULT

filp
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static

void

buf_unmapped_default_callback
BRACKET_O
STRUCT

rchan_buf
MULT

buf
COMMA
STRUCT

file
MULT

filp
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static
STRUCT

dentry
MULT

create_buf_file_default_callback
BRACKET_O
CONST
TYPE_CHAR
MULT

filename
COMMA
STRUCT

dentry
MULT

parent
COMMA
TYPE_INT

mode
COMMA
STRUCT

rchan_buf
MULT

buf
COMMA
TYPE_INT
MULT

is_global
BRACKET_C
CURLY_BRACKET_O

return

NULL
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

remove_buf_file_default_callback
BRACKET_O
STRUCT

dentry
MULT

dentry
BRACKET_C
CURLY_BRACKET_O

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

rchan_callbacks

default_channel_callbacks
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

subbuf_start
OP_ASSIGNMENT

subbuf_start_default_callback
COMMA
DOT

buf_mapped
OP_ASSIGNMENT

buf_mapped_default_callback
COMMA
DOT

buf_unmapped
OP_ASSIGNMENT

buf_unmapped_default_callback
COMMA
DOT

create_buf_file
OP_ASSIGNMENT

create_buf_file_default_callback
COMMA
DOT

remove_buf_file
OP_ASSIGNMENT

remove_buf_file_default_callback
COMMA
CURLY_BRACKET_C
SEMICOLON

static

void

wakeup_readers
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

data
BRACKET_C
CURLY_BRACKET_O
STRUCT

rchan_buf
MULT

buf
OP_ASSIGNMENT
BRACKET_O
STRUCT

rchan_buf
MULT
BRACKET_C

data
SEMICOLON

wake_up_interruptible
BRACKET_O
AMPERSANT

buf
MINUS
GREATER

read_wait
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

__relay_reset
BRACKET_O
STRUCT

rchan_buf
MULT

buf
COMMA
TYPE_UNSIGNED
TYPE_INT

init
BRACKET_C
CURLY_BRACKET_O

size_t

i
SEMICOLON
IF
BRACKET_O

init
BRACKET_C
CURLY_BRACKET_O

init_waitqueue_head
BRACKET_O
AMPERSANT

buf
MINUS
GREATER

read_wait
BRACKET_C
SEMICOLON

kref_init
BRACKET_O
AMPERSANT

buf
MINUS
GREATER

kref
BRACKET_C
SEMICOLON

setup_timer
BRACKET_O
AMPERSANT

buf
MINUS
GREATER

timer
COMMA

wakeup_readers
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

buf
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

del_timer_sync
BRACKET_O
AMPERSANT

buf
MINUS
GREATER

timer
BRACKET_C
SEMICOLON

buf
MINUS
GREATER

subbufs_produced
OP_ASSIGNMENT
NUMBER
SEMICOLON

buf
MINUS
GREATER

subbufs_consumed
OP_ASSIGNMENT
NUMBER
SEMICOLON

buf
MINUS
GREATER

bytes_consumed
OP_ASSIGNMENT
NUMBER
SEMICOLON

buf
MINUS
GREATER

finalized
OP_ASSIGNMENT
NUMBER
SEMICOLON

buf
MINUS
GREATER

data
OP_ASSIGNMENT

buf
MINUS
GREATER

start
SEMICOLON

buf
MINUS
GREATER

offset
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

buf
MINUS
GREATER

chan
MINUS
GREATER

n_subbufs
SEMICOLON

i
PLUS
PLUS
BRACKET_C

buf
MINUS
GREATER

padding
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

buf
MINUS
GREATER

chan
MINUS
GREATER

cb
MINUS
GREATER

subbuf_start
BRACKET_O

buf
COMMA

buf
MINUS
GREATER

data
COMMA

NULL
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

relay_reset
BRACKET_O
STRUCT

rchan
MULT

chan
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON
IF
BRACKET_O
NOT

chan
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

chan
MINUS
GREATER

is_global
AND

chan
MINUS
GREATER

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

__relay_reset
BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA
NUMBER
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

mutex_lock
BRACKET_O
AMPERSANT

relay_channels_mutex
BRACKET_C
SEMICOLON

for_each_online_cpu
BRACKET_O

i
BRACKET_C
IF
BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C

__relay_reset
BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA
NUMBER
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

relay_channels_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

relay_reset
BRACKET_C
SEMICOLON

static
STRUCT

rchan_buf
MULT

relay_open_buf
BRACKET_O
STRUCT

rchan
MULT

chan
COMMA
TYPE_UNSIGNED
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

rchan_buf
MULT

buf
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

dentry
MULT

dentry
SEMICOLON
TYPE_CHAR
MULT

tmpname
SEMICOLON
IF
BRACKET_O

chan
MINUS
GREATER

is_global
BRACKET_C

return

chan
MINUS
GREATER

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

tmpname
OP_ASSIGNMENT

kzalloc
BRACKET_O

NAME_MAX
PLUS
NUMBER
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tmpname
BRACKET_C

goto

end
SEMICOLON

snprintf
BRACKET_O

tmpname
COMMA

NAME_MAX
COMMA
STRING
COMMA

chan
MINUS
GREATER

base_filename
COMMA

cpu
BRACKET_C
SEMICOLON

buf
OP_ASSIGNMENT

relay_create_buf
BRACKET_O

chan
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

buf
BRACKET_C

goto

free_name
SEMICOLON

buf
MINUS
GREATER

cpu
OP_ASSIGNMENT

cpu
SEMICOLON

__relay_reset
BRACKET_O

buf
COMMA
NUMBER
BRACKET_C
SEMICOLON

dentry
OP_ASSIGNMENT

chan
MINUS
GREATER

cb
MINUS
GREATER

create_buf_file
BRACKET_O

tmpname
COMMA

chan
MINUS
GREATER

parent
COMMA

S_IRUSR
COMMA

buf
COMMA
AMPERSANT

chan
MINUS
GREATER

is_global
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

dentry
BRACKET_C

goto

free_buf
SEMICOLON

buf
MINUS
GREATER

dentry
OP_ASSIGNMENT

dentry
SEMICOLON
IF
BRACKET_O

chan
MINUS
GREATER

is_global
BRACKET_C
CURLY_BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

buf
SEMICOLON

buf
MINUS
GREATER

cpu
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

goto

free_name
SEMICOLON

free_buf
COLON

relay_destroy_buf
BRACKET_O

buf
BRACKET_C
SEMICOLON

free_name
COLON

kfree
BRACKET_O

tmpname
BRACKET_C
SEMICOLON

end
COLON

return

buf
SEMICOLON
CURLY_BRACKET_C

static

void

relay_close_buf
BRACKET_O
STRUCT

rchan_buf
MULT

buf
BRACKET_C
CURLY_BRACKET_O

buf
MINUS
GREATER

finalized
OP_ASSIGNMENT
NUMBER
SEMICOLON

del_timer_sync
BRACKET_O
AMPERSANT

buf
MINUS
GREATER

timer
BRACKET_C
SEMICOLON

kref_put
BRACKET_O
AMPERSANT

buf
MINUS
GREATER

kref
COMMA

relay_remove_buf
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

setup_callbacks
BRACKET_O
STRUCT

rchan
MULT

chan
COMMA
STRUCT

rchan_callbacks
MULT

cb
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

cb
BRACKET_C
CURLY_BRACKET_O

chan
MINUS
GREATER

cb
OP_ASSIGNMENT
AMPERSANT

default_channel_callbacks
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

cb
MINUS
GREATER

subbuf_start
BRACKET_C

cb
MINUS
GREATER

subbuf_start
OP_ASSIGNMENT

subbuf_start_default_callback
SEMICOLON
IF
BRACKET_O
NOT

cb
MINUS
GREATER

buf_mapped
BRACKET_C

cb
MINUS
GREATER

buf_mapped
OP_ASSIGNMENT

buf_mapped_default_callback
SEMICOLON
IF
BRACKET_O
NOT

cb
MINUS
GREATER

buf_unmapped
BRACKET_C

cb
MINUS
GREATER

buf_unmapped
OP_ASSIGNMENT

buf_unmapped_default_callback
SEMICOLON
IF
BRACKET_O
NOT

cb
MINUS
GREATER

create_buf_file
BRACKET_C

cb
MINUS
GREATER

create_buf_file
OP_ASSIGNMENT

create_buf_file_default_callback
SEMICOLON
IF
BRACKET_O
NOT

cb
MINUS
GREATER

remove_buf_file
BRACKET_C

cb
MINUS
GREATER

remove_buf_file
OP_ASSIGNMENT

remove_buf_file_default_callback
SEMICOLON

chan
MINUS
GREATER

cb
OP_ASSIGNMENT

cb
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__cpuinit

relay_hotcpu_callback
BRACKET_O
STRUCT

notifier_block
MULT

nb
COMMA
TYPE_UNSIGNED
TYPE_LONG

action
COMMA

void
MULT

hcpu
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

hotcpu
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

hcpu
SEMICOLON
STRUCT

rchan
MULT

chan
SEMICOLON
SWITCH
BRACKET_O

action
BRACKET_C
CURLY_BRACKET_O

case

CPU_UP_PREPARE
COLON

case

CPU_UP_PREPARE_FROZEN
COLON

mutex_lock
BRACKET_O
AMPERSANT

relay_channels_mutex
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

chan
COMMA
AMPERSANT

relay_channels
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

hotcpu
CORNER_BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

hotcpu
CORNER_BRACKET_C
OP_ASSIGNMENT

relay_open_buf
BRACKET_O

chan
COMMA

hotcpu
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

hotcpu
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
STRING
COMMA

hotcpu
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

relay_channels_mutex
BRACKET_C
SEMICOLON

return

NOTIFY_BAD
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

relay_channels_mutex
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPU_DEAD
COLON

case

CPU_DEAD_FROZEN
COLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

NOTIFY_OK
SEMICOLON
CURLY_BRACKET_C
STRUCT

rchan
MULT

relay_open
BRACKET_O
CONST
TYPE_CHAR
MULT

base_filename
COMMA
STRUCT

dentry
MULT

parent
COMMA

size_t

subbuf_size
COMMA

size_t

n_subbufs
COMMA
STRUCT

rchan_callbacks
MULT

cb
COMMA

void
MULT

private_data
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON
STRUCT

rchan
MULT

chan
SEMICOLON
IF
BRACKET_O
NOT

base_filename
BRACKET_C

return

NULL
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

subbuf_size
AND

n_subbufs
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

chan
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

rchan
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

chan
BRACKET_C

return

NULL
SEMICOLON

chan
MINUS
GREATER

version
OP_ASSIGNMENT

RELAYFS_CHANNEL_VERSION
SEMICOLON

chan
MINUS
GREATER

n_subbufs
OP_ASSIGNMENT

n_subbufs
SEMICOLON

chan
MINUS
GREATER

subbuf_size
OP_ASSIGNMENT

subbuf_size
SEMICOLON

chan
MINUS
GREATER

alloc_size
OP_ASSIGNMENT

FIX_SIZE
BRACKET_O

subbuf_size
MULT

n_subbufs
BRACKET_C
SEMICOLON

chan
MINUS
GREATER

parent
OP_ASSIGNMENT

parent
SEMICOLON

chan
MINUS
GREATER

private_data
OP_ASSIGNMENT

private_data
SEMICOLON

strlcpy
BRACKET_O

chan
MINUS
GREATER

base_filename
COMMA

base_filename
COMMA

NAME_MAX
BRACKET_C
SEMICOLON

setup_callbacks
BRACKET_O

chan
COMMA

cb
BRACKET_C
SEMICOLON

kref_init
BRACKET_O
AMPERSANT

chan
MINUS
GREATER

kref
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

relay_channels_mutex
BRACKET_C
SEMICOLON

for_each_online_cpu
BRACKET_O

i
BRACKET_C
CURLY_BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

relay_open_buf
BRACKET_O

chan
COMMA

i
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C

goto

free_bufs
SEMICOLON
CURLY_BRACKET_C

list_add
BRACKET_O
AMPERSANT

chan
MINUS
GREATER

list
COMMA
AMPERSANT

relay_channels
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

relay_channels_mutex
BRACKET_C
SEMICOLON

return

chan
SEMICOLON

free_bufs
COLON

for_each_online_cpu
BRACKET_O

i
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
BREAK
SEMICOLON

relay_close_buf
BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

kref_put
BRACKET_O
AMPERSANT

chan
MINUS
GREATER

kref
COMMA

relay_destroy_channel
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

relay_channels_mutex
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

relay_open
BRACKET_C
SEMICOLON

size_t

relay_switch_subbuf
BRACKET_O
STRUCT

rchan_buf
MULT

buf
COMMA

size_t

length
BRACKET_C
CURLY_BRACKET_O

void
MULT

old
COMMA
MULT

new
SEMICOLON

size_t

old_subbuf
COMMA

new_subbuf
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

length
GREATER

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
BRACKET_C
BRACKET_C

goto

toobig
SEMICOLON
IF
BRACKET_O

buf
MINUS
GREATER

offset
NOT_EQ

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
PLUS
NUMBER
BRACKET_C
CURLY_BRACKET_O

buf
MINUS
GREATER

prev_padding
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
MINUS

buf
MINUS
GREATER

offset
SEMICOLON

old_subbuf
OP_ASSIGNMENT

buf
MINUS
GREATER

subbufs_produced
MODULO

buf
MINUS
GREATER

chan
MINUS
GREATER

n_subbufs
SEMICOLON

buf
MINUS
GREATER

padding
CORNER_BRACKET_O

old_subbuf
CORNER_BRACKET_C
OP_ASSIGNMENT

buf
MINUS
GREATER

prev_padding
SEMICOLON

buf
MINUS
GREATER

subbufs_produced
PLUS
PLUS
SEMICOLON

buf
MINUS
GREATER

dentry
MINUS
GREATER

d_inode
MINUS
GREATER

i_size
ASSIGN_PLUS

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
MINUS

buf
MINUS
GREATER

padding
CORNER_BRACKET_O

old_subbuf
CORNER_BRACKET_C
SEMICOLON

smp_mb
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

waitqueue_active
BRACKET_O
AMPERSANT

buf
MINUS
GREATER

read_wait
BRACKET_C
BRACKET_C

__mod_timer
BRACKET_O
AMPERSANT

buf
MINUS
GREATER

timer
COMMA

jiffies
PLUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

old
OP_ASSIGNMENT

buf
MINUS
GREATER

data
SEMICOLON

new_subbuf
OP_ASSIGNMENT

buf
MINUS
GREATER

subbufs_produced
MODULO

buf
MINUS
GREATER

chan
MINUS
GREATER

n_subbufs
SEMICOLON

new
OP_ASSIGNMENT

buf
MINUS
GREATER

start
PLUS

new_subbuf
MULT

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
SEMICOLON

buf
MINUS
GREATER

offset
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

buf
MINUS
GREATER

chan
MINUS
GREATER

cb
MINUS
GREATER

subbuf_start
BRACKET_O

buf
COMMA

new
COMMA

old
COMMA

buf
MINUS
GREATER

prev_padding
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

buf
MINUS
GREATER

offset
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
PLUS
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

buf
MINUS
GREATER

data
OP_ASSIGNMENT

new
SEMICOLON

buf
MINUS
GREATER

padding
CORNER_BRACKET_O

new_subbuf
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

length
PLUS

buf
MINUS
GREATER

offset
GREATER

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
BRACKET_C
BRACKET_C

goto

toobig
SEMICOLON

return

length
SEMICOLON

toobig
COLON

buf
MINUS
GREATER

chan
MINUS
GREATER

last_toobig
OP_ASSIGNMENT

length
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

relay_switch_subbuf
BRACKET_C
SEMICOLON

void

relay_subbufs_consumed
BRACKET_O
STRUCT

rchan
MULT

chan
COMMA
TYPE_UNSIGNED
TYPE_INT

cpu
COMMA

size_t

subbufs_consumed
BRACKET_C
CURLY_BRACKET_O
STRUCT

rchan_buf
MULT

buf
SEMICOLON
IF
BRACKET_O
NOT

chan
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

cpu
GR_EQ

NR_CPUS
OR
NOT

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

cpu
CORNER_BRACKET_C
BRACKET_C

return
SEMICOLON

buf
OP_ASSIGNMENT

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

cpu
CORNER_BRACKET_C
SEMICOLON

buf
MINUS
GREATER

subbufs_consumed
ASSIGN_PLUS

subbufs_consumed
SEMICOLON
IF
BRACKET_O

buf
MINUS
GREATER

subbufs_consumed
GREATER

buf
MINUS
GREATER

subbufs_produced
BRACKET_C

buf
MINUS
GREATER

subbufs_consumed
OP_ASSIGNMENT

buf
MINUS
GREATER

subbufs_produced
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

relay_subbufs_consumed
BRACKET_C
SEMICOLON

void

relay_close
BRACKET_O
STRUCT

rchan
MULT

chan
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON
IF
BRACKET_O
NOT

chan
BRACKET_C

return
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

relay_channels_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

chan
MINUS
GREATER

is_global
AND

chan
MINUS
GREATER

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C

relay_close_buf
BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
ELSE

for_each_possible_cpu
BRACKET_O

i
BRACKET_C
IF
BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C

relay_close_buf
BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

chan
MINUS
GREATER

last_toobig
BRACKET_C

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA

chan
MINUS
GREATER

last_toobig
COMMA

chan
MINUS
GREATER

subbuf_size
BRACKET_C
SEMICOLON

list_del
BRACKET_O
AMPERSANT

chan
MINUS
GREATER

list
BRACKET_C
SEMICOLON

kref_put
BRACKET_O
AMPERSANT

chan
MINUS
GREATER

kref
COMMA

relay_destroy_channel
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

relay_channels_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

relay_close
BRACKET_C
SEMICOLON

void

relay_flush
BRACKET_O
STRUCT

rchan
MULT

chan
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON
IF
BRACKET_O
NOT

chan
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

chan
MINUS
GREATER

is_global
AND

chan
MINUS
GREATER

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

relay_switch_subbuf
BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA
NUMBER
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

mutex_lock
BRACKET_O
AMPERSANT

relay_channels_mutex
BRACKET_C
SEMICOLON

for_each_possible_cpu
BRACKET_O

i
BRACKET_C
IF
BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C

relay_switch_subbuf
BRACKET_O

chan
MINUS
GREATER

buf
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA
NUMBER
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

relay_channels_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

relay_flush
BRACKET_C
SEMICOLON

static
TYPE_INT

relay_file_open
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

filp
BRACKET_C
CURLY_BRACKET_O
STRUCT

rchan_buf
MULT

buf
OP_ASSIGNMENT

inode
MINUS
GREATER

i_private
SEMICOLON

kref_get
BRACKET_O
AMPERSANT

buf
MINUS
GREATER

kref
BRACKET_C
SEMICOLON

filp
MINUS
GREATER

private_data
OP_ASSIGNMENT

buf
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

relay_file_mmap
BRACKET_O
STRUCT

file
MULT

filp
COMMA
STRUCT

vm_area_struct
MULT

vma
BRACKET_C
CURLY_BRACKET_O
STRUCT

rchan_buf
MULT

buf
OP_ASSIGNMENT

filp
MINUS
GREATER

private_data
SEMICOLON

return

relay_mmap_buf
BRACKET_O

buf
COMMA

vma
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_INT

relay_file_poll
BRACKET_O
STRUCT

file
MULT

filp
COMMA

poll_table
MULT

wait
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

mask
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

rchan_buf
MULT

buf
OP_ASSIGNMENT

filp
MINUS
GREATER

private_data
SEMICOLON
IF
BRACKET_O

buf
MINUS
GREATER

finalized
BRACKET_C

return

POLLERR
SEMICOLON
IF
BRACKET_O

filp
MINUS
GREATER

f_mode
AMPERSANT

FMODE_READ
BRACKET_C
CURLY_BRACKET_O

poll_wait
BRACKET_O

filp
COMMA
AMPERSANT

buf
MINUS
GREATER

read_wait
COMMA

wait
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

relay_buf_empty
BRACKET_O

buf
BRACKET_C
BRACKET_C

mask
LOGICAL_OR
OP_ASSIGNMENT

POLLIN
LOGICAL_OR

POLLRDNORM
SEMICOLON
CURLY_BRACKET_C

return

mask
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

relay_file_release
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

filp
BRACKET_C
CURLY_BRACKET_O
STRUCT

rchan_buf
MULT

buf
OP_ASSIGNMENT

filp
MINUS
GREATER

private_data
SEMICOLON

kref_put
BRACKET_O
AMPERSANT

buf
MINUS
GREATER

kref
COMMA

relay_remove_buf
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

relay_file_read_consume
BRACKET_O
STRUCT

rchan_buf
MULT

buf
COMMA

size_t

read_pos
COMMA

size_t

bytes_consumed
BRACKET_C
CURLY_BRACKET_O

size_t

subbuf_size
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
SEMICOLON

size_t

n_subbufs
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
MINUS
GREATER

n_subbufs
SEMICOLON

size_t

read_subbuf
SEMICOLON
IF
BRACKET_O

buf
MINUS
GREATER

bytes_consumed
PLUS

bytes_consumed
GREATER

subbuf_size
BRACKET_C
CURLY_BRACKET_O

relay_subbufs_consumed
BRACKET_O

buf
MINUS
GREATER

chan
COMMA

buf
MINUS
GREATER

cpu
COMMA
NUMBER
BRACKET_C
SEMICOLON

buf
MINUS
GREATER

bytes_consumed
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

buf
MINUS
GREATER

bytes_consumed
ASSIGN_PLUS

bytes_consumed
SEMICOLON
IF
BRACKET_O
NOT

read_pos
BRACKET_C

read_subbuf
OP_ASSIGNMENT

buf
MINUS
GREATER

subbufs_consumed
MODULO

n_subbufs
SEMICOLON
ELSE

read_subbuf
OP_ASSIGNMENT

read_pos
DIV

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
SEMICOLON
IF
BRACKET_O

buf
MINUS
GREATER

bytes_consumed
PLUS

buf
MINUS
GREATER

padding
CORNER_BRACKET_O

read_subbuf
CORNER_BRACKET_C
EQ

subbuf_size
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

read_subbuf
EQ

buf
MINUS
GREATER

subbufs_produced
MODULO

n_subbufs
BRACKET_C
AND
BRACKET_O

buf
MINUS
GREATER

offset
EQ

subbuf_size
BRACKET_C
BRACKET_C

return
SEMICOLON

relay_subbufs_consumed
BRACKET_O

buf
MINUS
GREATER

chan
COMMA

buf
MINUS
GREATER

cpu
COMMA
NUMBER
BRACKET_C
SEMICOLON

buf
MINUS
GREATER

bytes_consumed
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

relay_file_read_avail
BRACKET_O
STRUCT

rchan_buf
MULT

buf
COMMA

size_t

read_pos
BRACKET_C
CURLY_BRACKET_O

size_t

subbuf_size
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
SEMICOLON

size_t

n_subbufs
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
MINUS
GREATER

n_subbufs
SEMICOLON

size_t

produced
OP_ASSIGNMENT

buf
MINUS
GREATER

subbufs_produced
SEMICOLON

size_t

consumed
OP_ASSIGNMENT

buf
MINUS
GREATER

subbufs_consumed
SEMICOLON

relay_file_read_consume
BRACKET_O

buf
COMMA

read_pos
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

buf
MINUS
GREATER

offset
GREATER

subbuf_size
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

produced
EQ

consumed
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

produced
MINUS

consumed
GR_EQ

n_subbufs
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

consumed
OP_ASSIGNMENT

produced
MINUS

n_subbufs
PLUS
NUMBER
SEMICOLON

buf
MINUS
GREATER

subbufs_consumed
OP_ASSIGNMENT

consumed
SEMICOLON

buf
MINUS
GREATER

bytes_consumed
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

produced
OP_ASSIGNMENT
BRACKET_O

produced
MODULO

n_subbufs
BRACKET_C
MULT

subbuf_size
PLUS

buf
MINUS
GREATER

offset
SEMICOLON

consumed
OP_ASSIGNMENT
BRACKET_O

consumed
MODULO

n_subbufs
BRACKET_C
MULT

subbuf_size
PLUS

buf
MINUS
GREATER

bytes_consumed
SEMICOLON
IF
BRACKET_O

consumed
GREATER

produced
BRACKET_C

produced
ASSIGN_PLUS

n_subbufs
MULT

subbuf_size
SEMICOLON
IF
BRACKET_O

consumed
EQ

produced
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

size_t

relay_file_read_subbuf_avail
BRACKET_O

size_t

read_pos
COMMA
STRUCT

rchan_buf
MULT

buf
BRACKET_C
CURLY_BRACKET_O

size_t

padding
COMMA

avail
OP_ASSIGNMENT
NUMBER
SEMICOLON

size_t

read_subbuf
COMMA

read_offset
COMMA

write_subbuf
COMMA

write_offset
SEMICOLON

size_t

subbuf_size
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
SEMICOLON

write_subbuf
OP_ASSIGNMENT
BRACKET_O

buf
MINUS
GREATER

data
MINUS

buf
MINUS
GREATER

start
BRACKET_C
DIV

subbuf_size
SEMICOLON

write_offset
OP_ASSIGNMENT

buf
MINUS
GREATER

offset
GREATER

subbuf_size
QUESTION_MARK

subbuf_size
COLON

buf
MINUS
GREATER

offset
SEMICOLON

read_subbuf
OP_ASSIGNMENT

read_pos
DIV

subbuf_size
SEMICOLON

read_offset
OP_ASSIGNMENT

read_pos
MODULO

subbuf_size
SEMICOLON

padding
OP_ASSIGNMENT

buf
MINUS
GREATER

padding
CORNER_BRACKET_O

read_subbuf
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

read_subbuf
EQ

write_subbuf
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

read_offset
PLUS

padding
LESS

write_offset
BRACKET_C

avail
OP_ASSIGNMENT

write_offset
MINUS
BRACKET_O

read_offset
PLUS

padding
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

avail
OP_ASSIGNMENT
BRACKET_O

subbuf_size
MINUS

padding
BRACKET_C
MINUS

read_offset
SEMICOLON

return

avail
SEMICOLON
CURLY_BRACKET_C

static

size_t

relay_file_read_start_pos
BRACKET_O

size_t

read_pos
COMMA
STRUCT

rchan_buf
MULT

buf
BRACKET_C
CURLY_BRACKET_O

size_t

read_subbuf
COMMA

padding
COMMA

padding_start
COMMA

padding_end
SEMICOLON

size_t

subbuf_size
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
SEMICOLON

size_t

n_subbufs
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
MINUS
GREATER

n_subbufs
SEMICOLON

size_t

consumed
OP_ASSIGNMENT

buf
MINUS
GREATER

subbufs_consumed
MODULO

n_subbufs
SEMICOLON
IF
BRACKET_O
NOT

read_pos
BRACKET_C

read_pos
OP_ASSIGNMENT

consumed
MULT

subbuf_size
PLUS

buf
MINUS
GREATER

bytes_consumed
SEMICOLON

read_subbuf
OP_ASSIGNMENT

read_pos
DIV

subbuf_size
SEMICOLON

padding
OP_ASSIGNMENT

buf
MINUS
GREATER

padding
CORNER_BRACKET_O

read_subbuf
CORNER_BRACKET_C
SEMICOLON

padding_start
OP_ASSIGNMENT
BRACKET_O

read_subbuf
PLUS
NUMBER
BRACKET_C
MULT

subbuf_size
MINUS

padding
SEMICOLON

padding_end
OP_ASSIGNMENT
BRACKET_O

read_subbuf
PLUS
NUMBER
BRACKET_C
MULT

subbuf_size
SEMICOLON
IF
BRACKET_O

read_pos
GR_EQ

padding_start
AND

read_pos
LESS

padding_end
BRACKET_C
CURLY_BRACKET_O

read_subbuf
OP_ASSIGNMENT
BRACKET_O

read_subbuf
PLUS
NUMBER
BRACKET_C
MODULO

n_subbufs
SEMICOLON

read_pos
OP_ASSIGNMENT

read_subbuf
MULT

subbuf_size
SEMICOLON
CURLY_BRACKET_C

return

read_pos
SEMICOLON
CURLY_BRACKET_C

static

size_t

relay_file_read_end_pos
BRACKET_O
STRUCT

rchan_buf
MULT

buf
COMMA

size_t

read_pos
COMMA

size_t

count
BRACKET_C
CURLY_BRACKET_O

size_t

read_subbuf
COMMA

padding
COMMA

end_pos
SEMICOLON

size_t

subbuf_size
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
MINUS
GREATER

subbuf_size
SEMICOLON

size_t

n_subbufs
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
MINUS
GREATER

n_subbufs
SEMICOLON

read_subbuf
OP_ASSIGNMENT

read_pos
DIV

subbuf_size
SEMICOLON

padding
OP_ASSIGNMENT

buf
MINUS
GREATER

padding
CORNER_BRACKET_O

read_subbuf
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

read_pos
MODULO

subbuf_size
PLUS

count
PLUS

padding
EQ

subbuf_size
BRACKET_C

end_pos
OP_ASSIGNMENT
BRACKET_O

read_subbuf
PLUS
NUMBER
BRACKET_C
MULT

subbuf_size
SEMICOLON
ELSE

end_pos
OP_ASSIGNMENT

read_pos
PLUS

count
SEMICOLON
IF
BRACKET_O

end_pos
GR_EQ

subbuf_size
MULT

n_subbufs
BRACKET_C

end_pos
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

end_pos
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

subbuf_read_actor
BRACKET_O

size_t

read_start
COMMA
STRUCT

rchan_buf
MULT

buf
COMMA

size_t

avail
COMMA

read_descriptor_t
MULT

desc
COMMA

read_actor_t

actor
BRACKET_C
CURLY_BRACKET_O

void
MULT

from
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

from
OP_ASSIGNMENT

buf
MINUS
GREATER

start
PLUS

read_start
SEMICOLON

ret
OP_ASSIGNMENT

avail
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

desc
MINUS
GREATER

arg
DOT

buf
COMMA

from
COMMA

avail
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

desc
MINUS
GREATER

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

desc
MINUS
GREATER

arg
DOT

data
ASSIGN_PLUS

ret
SEMICOLON

desc
MINUS
GREATER

written
ASSIGN_PLUS

ret
SEMICOLON

desc
MINUS
GREATER

count
ASSIGN_MINUS

ret
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

subbuf_send_actor
BRACKET_O

size_t

read_start
COMMA
STRUCT

rchan_buf
MULT

buf
COMMA

size_t

avail
COMMA

read_descriptor_t
MULT

desc
COMMA

read_actor_t

actor
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

pidx
COMMA

poff
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

subbuf_pages
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

subbuf_pages
OP_ASSIGNMENT

buf
MINUS
GREATER

chan
MINUS
GREATER

alloc_size
GREATER
GREATER

PAGE_SHIFT
SEMICOLON

pidx
OP_ASSIGNMENT
BRACKET_O

read_start
DIV

PAGE_SIZE
BRACKET_C
MODULO

subbuf_pages
SEMICOLON

poff
OP_ASSIGNMENT

read_start
AMPERSANT
TILDE

PAGE_MASK
SEMICOLON
WHILE
BRACKET_O

avail
BRACKET_C
CURLY_BRACKET_O
STRUCT

page
MULT

p
OP_ASSIGNMENT

buf
MINUS
GREATER

page_array
CORNER_BRACKET_O

pidx
CORNER_BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

len
SEMICOLON

len
OP_ASSIGNMENT

PAGE_SIZE
MINUS

poff
SEMICOLON
IF
BRACKET_O

len
GREATER

avail
BRACKET_C

len
OP_ASSIGNMENT

avail
SEMICOLON

len
OP_ASSIGNMENT

actor
BRACKET_O

desc
COMMA

p
COMMA

poff
COMMA

len
BRACKET_C
SEMICOLON
IF
BRACKET_O

desc
MINUS
GREATER

error
BRACKET_C
BREAK
SEMICOLON

avail
ASSIGN_MINUS

len
SEMICOLON

ret
ASSIGN_PLUS

len
SEMICOLON

poff
OP_ASSIGNMENT
NUMBER
SEMICOLON

pidx
OP_ASSIGNMENT
BRACKET_O

pidx
PLUS
NUMBER
BRACKET_C
MODULO

subbuf_pages
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

typedef
TYPE_INT
BRACKET_O
MULT

subbuf_actor_t
BRACKET_C
BRACKET_O

size_t

read_start
COMMA
STRUCT

rchan_buf
MULT

buf
COMMA

size_t

avail
COMMA

read_descriptor_t
MULT

desc
COMMA

read_actor_t

actor
BRACKET_C
SEMICOLON

static

ssize_t

relay_file_read_subbufs
BRACKET_O
STRUCT

file
MULT

filp
COMMA

loff_t
MULT

ppos
COMMA

subbuf_actor_t

subbuf_actor
COMMA

read_actor_t

actor
COMMA

read_descriptor_t
MULT

desc
BRACKET_C
CURLY_BRACKET_O
STRUCT

rchan_buf
MULT

buf
OP_ASSIGNMENT

filp
MINUS
GREATER

private_data
SEMICOLON

size_t

read_start
COMMA

avail
SEMICOLON
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O
NOT

desc
MINUS
GREATER

count
BRACKET_C

return
NUMBER
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

filp
MINUS
GREATER

f_path
DOT

dentry
MINUS
GREATER

d_inode
MINUS
GREATER

i_mutex
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O
IF
BRACKET_O
NOT

relay_file_read_avail
BRACKET_O

buf
COMMA
MULT

ppos
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

read_start
OP_ASSIGNMENT

relay_file_read_start_pos
BRACKET_O
MULT

ppos
COMMA

buf
BRACKET_C
SEMICOLON

avail
OP_ASSIGNMENT

relay_file_read_subbuf_avail
BRACKET_O

read_start
COMMA

buf
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

avail
BRACKET_C
BREAK
SEMICOLON

avail
OP_ASSIGNMENT

min
BRACKET_O

desc
MINUS
GREATER

count
COMMA

avail
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

subbuf_actor
BRACKET_O

read_start
COMMA

buf
COMMA

avail
COMMA

desc
COMMA

actor
BRACKET_C
SEMICOLON
IF
BRACKET_O

desc
MINUS
GREATER

error
LESS
NUMBER
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C
CURLY_BRACKET_O

relay_file_read_consume
BRACKET_O

buf
COMMA

read_start
COMMA

ret
BRACKET_C
SEMICOLON
MULT

ppos
OP_ASSIGNMENT

relay_file_read_end_pos
BRACKET_O

buf
COMMA

read_start
COMMA

ret
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
WHILE
BRACKET_O

desc
MINUS
GREATER

count
AND

ret
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

filp
MINUS
GREATER

f_path
DOT

dentry
MINUS
GREATER

d_inode
MINUS
GREATER

i_mutex
BRACKET_C
SEMICOLON

return

desc
MINUS
GREATER

written
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

relay_file_read
BRACKET_O
STRUCT

file
MULT

filp
COMMA
TYPE_CHAR

__user
MULT

buffer
COMMA

size_t

count
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

read_descriptor_t

desc
SEMICOLON

desc
DOT

written
OP_ASSIGNMENT
NUMBER
SEMICOLON

desc
DOT

count
OP_ASSIGNMENT

count
SEMICOLON

desc
DOT

arg
DOT

buf
OP_ASSIGNMENT

buffer
SEMICOLON

desc
DOT

error
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

relay_file_read_subbufs
BRACKET_O

filp
COMMA

ppos
COMMA

subbuf_read_actor
COMMA

NULL
COMMA
AMPERSANT

desc
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

relay_file_sendfile
BRACKET_O
STRUCT

file
MULT

filp
COMMA

loff_t
MULT

ppos
COMMA

size_t

count
COMMA

read_actor_t

actor
COMMA

void
MULT

target
BRACKET_C
CURLY_BRACKET_O

read_descriptor_t

desc
SEMICOLON

desc
DOT

written
OP_ASSIGNMENT
NUMBER
SEMICOLON

desc
DOT

count
OP_ASSIGNMENT

count
SEMICOLON

desc
DOT

arg
DOT

data
OP_ASSIGNMENT

target
SEMICOLON

desc
DOT

error
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

relay_file_read_subbufs
BRACKET_O

filp
COMMA

ppos
COMMA

subbuf_send_actor
COMMA

actor
COMMA
AMPERSANT

desc
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CONST
STRUCT

file_operations

relay_file_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

open
OP_ASSIGNMENT

relay_file_open
COMMA
DOT

poll
OP_ASSIGNMENT

relay_file_poll
COMMA
DOT

mmap
OP_ASSIGNMENT

relay_file_mmap
COMMA
DOT

read
OP_ASSIGNMENT

relay_file_read
COMMA
DOT

llseek
OP_ASSIGNMENT

no_llseek
COMMA
DOT

release
OP_ASSIGNMENT

relay_file_release
COMMA
DOT

sendfile
OP_ASSIGNMENT

relay_file_sendfile
COMMA
CURLY_BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

relay_file_operations
BRACKET_C
SEMICOLON

static

__init
TYPE_INT

relay_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

hotcpu_notifier
BRACKET_O

relay_hotcpu_callback
COMMA
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

module_init
BRACKET_O

relay_init
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
STRUCT

resource

ioport_resource
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

start
OP_ASSIGNMENT
NUMBER
COMMA
DOT

end
OP_ASSIGNMENT

IO_SPACE_LIMIT
COMMA
DOT

flags
OP_ASSIGNMENT

IORESOURCE_IO
COMMA
CURLY_BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

ioport_resource
BRACKET_C
SEMICOLON
STRUCT

resource

iomem_resource
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

name
OP_ASSIGNMENT
STRING
COMMA
DOT

start
OP_ASSIGNMENT
NUMBER
COMMA
DOT

end
OP_ASSIGNMENT
MINUS
NUMBER
COMMA
DOT

flags
OP_ASSIGNMENT

IORESOURCE_MEM
COMMA
CURLY_BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

iomem_resource
BRACKET_C
SEMICOLON

static

DEFINE_RWLOCK
BRACKET_O

resource_lock
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_PROC_FS

enum
CURLY_BRACKET_O

MAX_IORES_LEVEL
OP_ASSIGNMENT
NUMBER
CURLY_BRACKET_C
SEMICOLON

static

void
MULT

r_next
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

v
COMMA

loff_t
MULT

pos
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT

p
OP_ASSIGNMENT

v
SEMICOLON
BRACKET_O
MULT

pos
BRACKET_C
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

child
BRACKET_C

return

p
MINUS
GREATER

child
SEMICOLON
WHILE
BRACKET_O
NOT

p
MINUS
GREATER

sibling
AND

p
MINUS
GREATER

parent
BRACKET_C

p
OP_ASSIGNMENT

p
MINUS
GREATER

parent
SEMICOLON

return

p
MINUS
GREATER

sibling
SEMICOLON
CURLY_BRACKET_C

static

void
MULT

r_start
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

loff_t
MULT

pos
BRACKET_C

__acquires
BRACKET_O

resource_lock
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT

p
OP_ASSIGNMENT

m
MINUS
GREATER

private
SEMICOLON

loff_t

l
OP_ASSIGNMENT
NUMBER
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON
FOR
BRACKET_O

p
OP_ASSIGNMENT

p
MINUS
GREATER

child
SEMICOLON

p
AND

l
LESS
MULT

pos
SEMICOLON

p
OP_ASSIGNMENT

r_next
BRACKET_O

m
COMMA

p
COMMA
AMPERSANT

l
BRACKET_C
BRACKET_C
SEMICOLON

return

p
SEMICOLON
CURLY_BRACKET_C

static

void

r_stop
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

v
BRACKET_C

__releases
BRACKET_O

resource_lock
BRACKET_C
CURLY_BRACKET_O

read_unlock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

r_show
BRACKET_O
STRUCT

seq_file
MULT

m
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT

root
OP_ASSIGNMENT

m
MINUS
GREATER

private
SEMICOLON
STRUCT

resource
MULT

r
OP_ASSIGNMENT

v
COMMA
MULT

p
SEMICOLON
TYPE_INT

width
OP_ASSIGNMENT

root
MINUS
GREATER

end
LESS
NUMBER

x10000
QUESTION_MARK
NUMBER
COLON
NUMBER
SEMICOLON
TYPE_INT

depth
SEMICOLON
FOR
BRACKET_O

depth
OP_ASSIGNMENT
NUMBER
COMMA

p
OP_ASSIGNMENT

r
SEMICOLON

depth
LESS

MAX_IORES_LEVEL
SEMICOLON

depth
PLUS
PLUS
COMMA

p
OP_ASSIGNMENT

p
MINUS
GREATER

parent
BRACKET_C
IF
BRACKET_O

p
MINUS
GREATER

parent
EQ

root
BRACKET_C
BREAK
SEMICOLON

seq_printf
BRACKET_O

m
COMMA
STRING
COMMA

depth
MULT
NUMBER
COMMA
STRING
COMMA

width
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

r
MINUS
GREATER

start
COMMA

width
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

r
MINUS
GREATER

end
COMMA

r
MINUS
GREATER

name
QUESTION_MARK

r
MINUS
GREATER

name
COLON
STRING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

seq_operations

resource_op
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

start
OP_ASSIGNMENT

r_start
COMMA
DOT

next
OP_ASSIGNMENT

r_next
COMMA
DOT

stop
OP_ASSIGNMENT

r_stop
COMMA
DOT

show
OP_ASSIGNMENT

r_show
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

ioports_open
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

res
OP_ASSIGNMENT

seq_open
BRACKET_O

file
COMMA
AMPERSANT

resource_op
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

res
BRACKET_C
CURLY_BRACKET_O
STRUCT

seq_file
MULT

m
OP_ASSIGNMENT

file
MINUS
GREATER

private_data
SEMICOLON

m
MINUS
GREATER

private
OP_ASSIGNMENT
AMPERSANT

ioport_resource
SEMICOLON
CURLY_BRACKET_C

return

res
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

iomem_open
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

res
OP_ASSIGNMENT

seq_open
BRACKET_O

file
COMMA
AMPERSANT

resource_op
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

res
BRACKET_C
CURLY_BRACKET_O
STRUCT

seq_file
MULT

m
OP_ASSIGNMENT

file
MINUS
GREATER

private_data
SEMICOLON

m
MINUS
GREATER

private
OP_ASSIGNMENT
AMPERSANT

iomem_resource
SEMICOLON
CURLY_BRACKET_C

return

res
SEMICOLON
CURLY_BRACKET_C

static
CONST
STRUCT

file_operations

proc_ioports_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

open
OP_ASSIGNMENT

ioports_open
COMMA
DOT

read
OP_ASSIGNMENT

seq_read
COMMA
DOT

llseek
OP_ASSIGNMENT

seq_lseek
COMMA
DOT

release
OP_ASSIGNMENT

seq_release
COMMA
CURLY_BRACKET_C
SEMICOLON

static
CONST
STRUCT

file_operations

proc_iomem_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

open
OP_ASSIGNMENT

iomem_open
COMMA
DOT

read
OP_ASSIGNMENT

seq_read
COMMA
DOT

llseek
OP_ASSIGNMENT

seq_lseek
COMMA
DOT

release
OP_ASSIGNMENT

seq_release
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__init

ioresources_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

proc_dir_entry
MULT

entry
SEMICOLON

entry
OP_ASSIGNMENT

create_proc_entry
BRACKET_O
STRING
COMMA
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

entry
BRACKET_C

entry
MINUS
GREATER

proc_fops
OP_ASSIGNMENT
AMPERSANT

proc_ioports_operations
SEMICOLON

entry
OP_ASSIGNMENT

create_proc_entry
BRACKET_O
STRING
COMMA
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

entry
BRACKET_C

entry
MINUS
GREATER

proc_fops
OP_ASSIGNMENT
AMPERSANT

proc_iomem_operations
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__initcall
BRACKET_O

ioresources_init
BRACKET_C
SEMICOLON
PP_ENDIF

static
STRUCT

resource
MULT

__request_resource
BRACKET_O
STRUCT

resource
MULT

root
COMMA
STRUCT

resource
MULT

new
BRACKET_C
CURLY_BRACKET_O

resource_size_t

start
OP_ASSIGNMENT

new
MINUS
GREATER

start
SEMICOLON

resource_size_t

end
OP_ASSIGNMENT

new
MINUS
GREATER

end
SEMICOLON
STRUCT

resource
MULT

tmp
COMMA
MULT
MULT

p
SEMICOLON
IF
BRACKET_O

end
LESS

start
BRACKET_C

return

root
SEMICOLON
IF
BRACKET_O

start
LESS

root
MINUS
GREATER

start
BRACKET_C

return

root
SEMICOLON
IF
BRACKET_O

end
GREATER

root
MINUS
GREATER

end
BRACKET_C

return

root
SEMICOLON

p
OP_ASSIGNMENT
AMPERSANT

root
MINUS
GREATER

child
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

tmp
OP_ASSIGNMENT
MULT

p
SEMICOLON
IF
BRACKET_O
NOT

tmp
OR

tmp
MINUS
GREATER

start
GREATER

end
BRACKET_C
CURLY_BRACKET_O

new
MINUS
GREATER

sibling
OP_ASSIGNMENT

tmp
SEMICOLON
MULT

p
OP_ASSIGNMENT

new
SEMICOLON

new
MINUS
GREATER

parent
OP_ASSIGNMENT

root
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

p
OP_ASSIGNMENT
AMPERSANT

tmp
MINUS
GREATER

sibling
SEMICOLON
IF
BRACKET_O

tmp
MINUS
GREATER

end
LESS

start
BRACKET_C
CONTINUE
SEMICOLON

return

tmp
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

__release_resource
BRACKET_O
STRUCT

resource
MULT

old
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT

tmp
COMMA
MULT
MULT

p
SEMICOLON

p
OP_ASSIGNMENT
AMPERSANT

old
MINUS
GREATER

parent
MINUS
GREATER

child
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

tmp
OP_ASSIGNMENT
MULT

p
SEMICOLON
IF
BRACKET_O
NOT

tmp
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

tmp
EQ

old
BRACKET_C
CURLY_BRACKET_O
MULT

p
OP_ASSIGNMENT

tmp
MINUS
GREATER

sibling
SEMICOLON

old
MINUS
GREATER

parent
OP_ASSIGNMENT

NULL
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

p
OP_ASSIGNMENT
AMPERSANT

tmp
MINUS
GREATER

sibling
SEMICOLON
CURLY_BRACKET_C

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

request_resource
BRACKET_O
STRUCT

resource
MULT

root
COMMA
STRUCT

resource
MULT

new
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT

conflict
SEMICOLON

write_lock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON

conflict
OP_ASSIGNMENT

__request_resource
BRACKET_O

root
COMMA

new
BRACKET_C
SEMICOLON

write_unlock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON

return

conflict
QUESTION_MARK
MINUS

EBUSY
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

request_resource
BRACKET_C
SEMICOLON
TYPE_INT

release_resource
BRACKET_O
STRUCT

resource
MULT

old
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON

write_lock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT

__release_resource
BRACKET_O

old
BRACKET_C
SEMICOLON

write_unlock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

release_resource
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_MEMORY_HOTPLUG
TYPE_INT

find_next_system_ram
BRACKET_O
STRUCT

resource
MULT

res
BRACKET_C
CURLY_BRACKET_O

resource_size_t

start
COMMA

end
SEMICOLON
STRUCT

resource
MULT

p
SEMICOLON

BUG_ON
BRACKET_O
NOT

res
BRACKET_C
SEMICOLON

start
OP_ASSIGNMENT

res
MINUS
GREATER

start
SEMICOLON

end
OP_ASSIGNMENT

res
MINUS
GREATER

end
SEMICOLON

BUG_ON
BRACKET_O

start
GR_EQ

end
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON
FOR
BRACKET_O

p
OP_ASSIGNMENT

iomem_resource
DOT

child
SEMICOLON

p
SEMICOLON

p
OP_ASSIGNMENT

p
MINUS
GREATER

sibling
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

flags
NOT_EQ

res
MINUS
GREATER

flags
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

start
GREATER

end
BRACKET_C
CURLY_BRACKET_O

p
OP_ASSIGNMENT

NULL
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
BRACKET_O

p
MINUS
GREATER

end
GR_EQ

start
BRACKET_C
AND
BRACKET_O

p
MINUS
GREATER

start
LESS

end
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
BRACKET_C

return
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

res
MINUS
GREATER

start
LESS

p
MINUS
GREATER

start
BRACKET_C

res
MINUS
GREATER

start
OP_ASSIGNMENT

p
MINUS
GREATER

start
SEMICOLON
IF
BRACKET_O

res
MINUS
GREATER

end
GREATER

p
MINUS
GREATER

end
BRACKET_C

res
MINUS
GREATER

end
OP_ASSIGNMENT

p
MINUS
GREATER

end
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

find_resource
BRACKET_O
STRUCT

resource
MULT

root
COMMA
STRUCT

resource
MULT

new
COMMA

resource_size_t

size
COMMA

resource_size_t

min
COMMA

resource_size_t

max
COMMA

resource_size_t

align
COMMA

void
BRACKET_O
MULT

alignf
BRACKET_C
BRACKET_O

void
MULT
COMMA
STRUCT

resource
MULT
COMMA

resource_size_t
COMMA

resource_size_t
BRACKET_C
COMMA

void
MULT

alignf_data
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT

this
OP_ASSIGNMENT

root
MINUS
GREATER

child
SEMICOLON

new
MINUS
GREATER

start
OP_ASSIGNMENT

root
MINUS
GREATER

start
SEMICOLON
IF
BRACKET_O

this
AND

this
MINUS
GREATER

start
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

new
MINUS
GREATER

start
OP_ASSIGNMENT

this
MINUS
GREATER

end
PLUS
NUMBER
SEMICOLON

this
OP_ASSIGNMENT

this
MINUS
GREATER

sibling
SEMICOLON
CURLY_BRACKET_C
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

this
BRACKET_C

new
MINUS
GREATER

end
OP_ASSIGNMENT

this
MINUS
GREATER

start
MINUS
NUMBER
SEMICOLON
ELSE

new
MINUS
GREATER

end
OP_ASSIGNMENT

root
MINUS
GREATER

end
SEMICOLON
IF
BRACKET_O

new
MINUS
GREATER

start
LESS

min
BRACKET_C

new
MINUS
GREATER

start
OP_ASSIGNMENT

min
SEMICOLON
IF
BRACKET_O

new
MINUS
GREATER

end
GREATER

max
BRACKET_C

new
MINUS
GREATER

end
OP_ASSIGNMENT

max
SEMICOLON

new
MINUS
GREATER

start
OP_ASSIGNMENT

ALIGN
BRACKET_O

new
MINUS
GREATER

start
COMMA

align
BRACKET_C
SEMICOLON
IF
BRACKET_O

alignf
BRACKET_C

alignf
BRACKET_O

alignf_data
COMMA

new
COMMA

size
COMMA

align
BRACKET_C
SEMICOLON
IF
BRACKET_O

new
MINUS
GREATER

start
LESS

new
MINUS
GREATER

end
AND

new
MINUS
GREATER

end
MINUS

new
MINUS
GREATER

start
GR_EQ

size
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O

new
MINUS
GREATER

end
OP_ASSIGNMENT

new
MINUS
GREATER

start
PLUS

size
MINUS
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

this
BRACKET_C
BREAK
SEMICOLON

new
MINUS
GREATER

start
OP_ASSIGNMENT

this
MINUS
GREATER

end
PLUS
NUMBER
SEMICOLON

this
OP_ASSIGNMENT

this
MINUS
GREATER

sibling
SEMICOLON
CURLY_BRACKET_C

return
MINUS

EBUSY
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

allocate_resource
BRACKET_O
STRUCT

resource
MULT

root
COMMA
STRUCT

resource
MULT

new
COMMA

resource_size_t

size
COMMA

resource_size_t

min
COMMA

resource_size_t

max
COMMA

resource_size_t

align
COMMA

void
BRACKET_O
MULT

alignf
BRACKET_C
BRACKET_O

void
MULT
COMMA
STRUCT

resource
MULT
COMMA

resource_size_t
COMMA

resource_size_t
BRACKET_C
COMMA

void
MULT

alignf_data
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
SEMICOLON

write_lock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

find_resource
BRACKET_O

root
COMMA

new
COMMA

size
COMMA

min
COMMA

max
COMMA

align
COMMA

alignf
COMMA

alignf_data
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
GR_EQ
NUMBER
AND

__request_resource
BRACKET_O

root
COMMA

new
BRACKET_C
BRACKET_C

err
OP_ASSIGNMENT
MINUS

EBUSY
SEMICOLON

write_unlock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

allocate_resource
BRACKET_C
SEMICOLON
TYPE_INT

insert_resource
BRACKET_O
STRUCT

resource
MULT

parent
COMMA
STRUCT

resource
MULT

new
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

result
SEMICOLON
STRUCT

resource
MULT

first
COMMA
MULT

next
SEMICOLON

write_lock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON

parent
OP_ASSIGNMENT

first
BRACKET_C
CURLY_BRACKET_O

result
OP_ASSIGNMENT
NUMBER
SEMICOLON

first
OP_ASSIGNMENT

__request_resource
BRACKET_O

parent
COMMA

new
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

first
BRACKET_C

goto

out
SEMICOLON

result
OP_ASSIGNMENT
MINUS

EBUSY
SEMICOLON
IF
BRACKET_O

first
EQ

parent
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O
BRACKET_O

first
MINUS
GREATER

start
GREATER

new
MINUS
GREATER

start
BRACKET_C
OR
BRACKET_O

first
MINUS
GREATER

end
LESS

new
MINUS
GREATER

end
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O
BRACKET_O

first
MINUS
GREATER

start
EQ

new
MINUS
GREATER

start
BRACKET_C
AND
BRACKET_O

first
MINUS
GREATER

end
EQ

new
MINUS
GREATER

end
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
FOR
BRACKET_O

next
OP_ASSIGNMENT

first
SEMICOLON
SEMICOLON

next
OP_ASSIGNMENT

next
MINUS
GREATER

sibling
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

next
MINUS
GREATER

start
LESS

new
MINUS
GREATER

start
OR

next
MINUS
GREATER

end
GREATER

new
MINUS
GREATER

end
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O
NOT

next
MINUS
GREATER

sibling
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

next
MINUS
GREATER

sibling
MINUS
GREATER

start
GREATER

new
MINUS
GREATER

end
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

result
OP_ASSIGNMENT
NUMBER
SEMICOLON

new
MINUS
GREATER

parent
OP_ASSIGNMENT

parent
SEMICOLON

new
MINUS
GREATER

sibling
OP_ASSIGNMENT

next
MINUS
GREATER

sibling
SEMICOLON

new
MINUS
GREATER

child
OP_ASSIGNMENT

first
SEMICOLON

next
MINUS
GREATER

sibling
OP_ASSIGNMENT

NULL
SEMICOLON
FOR
BRACKET_O

next
OP_ASSIGNMENT

first
SEMICOLON

next
SEMICOLON

next
OP_ASSIGNMENT

next
MINUS
GREATER

sibling
BRACKET_C

next
MINUS
GREATER

parent
OP_ASSIGNMENT

new
SEMICOLON
IF
BRACKET_O

parent
MINUS
GREATER

child
EQ

first
BRACKET_C
CURLY_BRACKET_O

parent
MINUS
GREATER

child
OP_ASSIGNMENT

new
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

next
OP_ASSIGNMENT

parent
MINUS
GREATER

child
SEMICOLON
WHILE
BRACKET_O

next
MINUS
GREATER

sibling
NOT_EQ

first
BRACKET_C

next
OP_ASSIGNMENT

next
MINUS
GREATER

sibling
SEMICOLON

next
MINUS
GREATER

sibling
OP_ASSIGNMENT

new
SEMICOLON
CURLY_BRACKET_C

out
COLON

write_unlock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON

return

result
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

adjust_resource
BRACKET_O
STRUCT

resource
MULT

res
COMMA

resource_size_t

start
COMMA

resource_size_t

size
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT

tmp
COMMA
MULT

parent
OP_ASSIGNMENT

res
MINUS
GREATER

parent
SEMICOLON

resource_size_t

end
OP_ASSIGNMENT

start
PLUS

size
MINUS
NUMBER
SEMICOLON
TYPE_INT

result
OP_ASSIGNMENT
MINUS

EBUSY
SEMICOLON

write_lock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

start
LESS

parent
MINUS
GREATER

start
BRACKET_C
OR
BRACKET_O

end
GREATER

parent
MINUS
GREATER

end
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
FOR
BRACKET_O

tmp
OP_ASSIGNMENT

res
MINUS
GREATER

child
SEMICOLON

tmp
SEMICOLON

tmp
OP_ASSIGNMENT

tmp
MINUS
GREATER

sibling
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

tmp
MINUS
GREATER

start
LESS

start
BRACKET_C
OR
BRACKET_O

tmp
MINUS
GREATER

end
GREATER

end
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

res
MINUS
GREATER

sibling
AND
BRACKET_O

res
MINUS
GREATER

sibling
MINUS
GREATER

start
LE_EQ

end
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

tmp
OP_ASSIGNMENT

parent
MINUS
GREATER

child
SEMICOLON
IF
BRACKET_O

tmp
NOT_EQ

res
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O

tmp
MINUS
GREATER

sibling
NOT_EQ

res
BRACKET_C

tmp
OP_ASSIGNMENT

tmp
MINUS
GREATER

sibling
SEMICOLON
IF
BRACKET_O

start
LE_EQ

tmp
MINUS
GREATER

end
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

res
MINUS
GREATER

start
OP_ASSIGNMENT

start
SEMICOLON

res
MINUS
GREATER

end
OP_ASSIGNMENT

end
SEMICOLON

result
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON

write_unlock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON

return

result
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

adjust_resource
BRACKET_C
SEMICOLON
STRUCT

resource
MULT

__request_region
BRACKET_O
STRUCT

resource
MULT

parent
COMMA

resource_size_t

start
COMMA

resource_size_t

n
COMMA
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT

res
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
MULT

res
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

res
BRACKET_C
CURLY_BRACKET_O

res
MINUS
GREATER

name
OP_ASSIGNMENT

name
SEMICOLON

res
MINUS
GREATER

start
OP_ASSIGNMENT

start
SEMICOLON

res
MINUS
GREATER

end
OP_ASSIGNMENT

start
PLUS

n
MINUS
NUMBER
SEMICOLON

res
MINUS
GREATER

flags
OP_ASSIGNMENT

IORESOURCE_BUSY
SEMICOLON

write_lock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT

conflict
SEMICOLON

conflict
OP_ASSIGNMENT

__request_resource
BRACKET_O

parent
COMMA

res
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

conflict
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

conflict
NOT_EQ

parent
BRACKET_C
CURLY_BRACKET_O

parent
OP_ASSIGNMENT

conflict
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

conflict
MINUS
GREATER

flags
AMPERSANT

IORESOURCE_BUSY
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
CURLY_BRACKET_C

kfree
BRACKET_O

res
BRACKET_C
SEMICOLON

res
OP_ASSIGNMENT

NULL
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

write_unlock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

res
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__request_region
BRACKET_C
SEMICOLON
TYPE_INT

__check_region
BRACKET_O
STRUCT

resource
MULT

parent
COMMA

resource_size_t

start
COMMA

resource_size_t

n
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT

res
SEMICOLON

res
OP_ASSIGNMENT

__request_region
BRACKET_O

parent
COMMA

start
COMMA

n
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

res
BRACKET_C

return
MINUS

EBUSY
SEMICOLON

release_resource
BRACKET_O

res
BRACKET_C
SEMICOLON

kfree
BRACKET_O

res
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__check_region
BRACKET_C
SEMICOLON

void

__release_region
BRACKET_O
STRUCT

resource
MULT

parent
COMMA

resource_size_t

start
COMMA

resource_size_t

n
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT
MULT

p
SEMICOLON

resource_size_t

end
SEMICOLON

p
OP_ASSIGNMENT
AMPERSANT

parent
MINUS
GREATER

child
SEMICOLON

end
OP_ASSIGNMENT

start
PLUS

n
MINUS
NUMBER
SEMICOLON

write_lock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT

res
OP_ASSIGNMENT
MULT

p
SEMICOLON
IF
BRACKET_O
NOT

res
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

res
MINUS
GREATER

start
LE_EQ

start
AND

res
MINUS
GREATER

end
GR_EQ

end
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT
BRACKET_O

res
MINUS
GREATER

flags
AMPERSANT

IORESOURCE_BUSY
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

p
OP_ASSIGNMENT
AMPERSANT

res
MINUS
GREATER

child
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

res
MINUS
GREATER

start
NOT_EQ

start
OR

res
MINUS
GREATER

end
NOT_EQ

end
BRACKET_C
BREAK
SEMICOLON
MULT

p
OP_ASSIGNMENT

res
MINUS
GREATER

sibling
SEMICOLON

write_unlock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON

kfree
BRACKET_O

res
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

p
OP_ASSIGNMENT
AMPERSANT

res
MINUS
GREATER

sibling
SEMICOLON
CURLY_BRACKET_C

write_unlock
BRACKET_O
AMPERSANT

resource_lock
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

start
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

end
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__release_region
BRACKET_C
SEMICOLON
STRUCT

region_devres
CURLY_BRACKET_O
STRUCT

resource
MULT

parent
SEMICOLON

resource_size_t

start
SEMICOLON

resource_size_t

n
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static

void

devm_region_release
BRACKET_O
STRUCT

device
MULT

dev
COMMA

void
MULT

res
BRACKET_C
CURLY_BRACKET_O
STRUCT

region_devres
MULT

this
OP_ASSIGNMENT

res
SEMICOLON

__release_region
BRACKET_O

this
MINUS
GREATER

parent
COMMA

this
MINUS
GREATER

start
COMMA

this
MINUS
GREATER

n
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

devm_region_match
BRACKET_O
STRUCT

device
MULT

dev
COMMA

void
MULT

res
COMMA

void
MULT

match_data
BRACKET_C
CURLY_BRACKET_O
STRUCT

region_devres
MULT

this
OP_ASSIGNMENT

res
COMMA
MULT

match
OP_ASSIGNMENT

match_data
SEMICOLON

return

this
MINUS
GREATER

parent
EQ

match
MINUS
GREATER

parent
AND

this
MINUS
GREATER

start
EQ

match
MINUS
GREATER

start
AND

this
MINUS
GREATER

n
EQ

match
MINUS
GREATER

n
SEMICOLON
CURLY_BRACKET_C
STRUCT

resource
MULT

__devm_request_region
BRACKET_O
STRUCT

device
MULT

dev
COMMA
STRUCT

resource
MULT

parent
COMMA

resource_size_t

start
COMMA

resource_size_t

n
COMMA
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O
STRUCT

region_devres
MULT

dr
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

resource
MULT

res
SEMICOLON

dr
OP_ASSIGNMENT

devres_alloc
BRACKET_O

devm_region_release
COMMA

sizeof
BRACKET_O
STRUCT

region_devres
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

dr
BRACKET_C

return

NULL
SEMICOLON

dr
MINUS
GREATER

parent
OP_ASSIGNMENT

parent
SEMICOLON

dr
MINUS
GREATER

start
OP_ASSIGNMENT

start
SEMICOLON

dr
MINUS
GREATER

n
OP_ASSIGNMENT

n
SEMICOLON

res
OP_ASSIGNMENT

__request_region
BRACKET_O

parent
COMMA

start
COMMA

n
COMMA

name
BRACKET_C
SEMICOLON
IF
BRACKET_O

res
BRACKET_C

devres_add
BRACKET_O

dev
COMMA

dr
BRACKET_C
SEMICOLON
ELSE

devres_free
BRACKET_O

dr
BRACKET_C
SEMICOLON

return

res
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__devm_request_region
BRACKET_C
SEMICOLON

void

__devm_release_region
BRACKET_O
STRUCT

device
MULT

dev
COMMA
STRUCT

resource
MULT

parent
COMMA

resource_size_t

start
COMMA

resource_size_t

n
BRACKET_C
CURLY_BRACKET_O
STRUCT

region_devres

match_data
OP_ASSIGNMENT
CURLY_BRACKET_O

parent
COMMA

start
COMMA

n
CURLY_BRACKET_C
SEMICOLON

__release_region
BRACKET_O

parent
COMMA

start
COMMA

n
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

devres_destroy
BRACKET_O

dev
COMMA

devm_region_release
COMMA

devm_region_match
COMMA
AMPERSANT

match_data
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__devm_release_region
BRACKET_C
SEMICOLON
PP_DEFINE

MAXRESERVE
NUMBER

static
TYPE_INT

__init

reserve_setup
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

static
TYPE_INT

reserved
SEMICOLON

static
STRUCT

resource

reserve
CORNER_BRACKET_O

MAXRESERVE
CORNER_BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

io_start
COMMA

io_num
SEMICOLON
TYPE_INT

x
OP_ASSIGNMENT

reserved
SEMICOLON
IF
BRACKET_O

get_option
BRACKET_O
AMPERSANT

str
COMMA
AMPERSANT

io_start
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

get_option
BRACKET_O
AMPERSANT

str
COMMA
AMPERSANT

io_num
BRACKET_C
EQ
NUMBER
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

x
LESS

MAXRESERVE
BRACKET_C
CURLY_BRACKET_O
STRUCT

resource
MULT

res
OP_ASSIGNMENT

reserve
PLUS

x
SEMICOLON

res
MINUS
GREATER

name
OP_ASSIGNMENT
STRING
SEMICOLON

res
MINUS
GREATER

start
OP_ASSIGNMENT

io_start
SEMICOLON

res
MINUS
GREATER

end
OP_ASSIGNMENT

io_start
PLUS

io_num
MINUS
NUMBER
SEMICOLON

res
MINUS
GREATER

flags
OP_ASSIGNMENT

IORESOURCE_BUSY
SEMICOLON

res
MINUS
GREATER

child
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

request_resource
BRACKET_O

res
MINUS
GREATER

start
GR_EQ
NUMBER

x10000
QUESTION_MARK
AMPERSANT

iomem_resource
COLON
AMPERSANT

ioport_resource
COMMA

res
BRACKET_C
EQ
NUMBER
BRACKET_C

reserved
OP_ASSIGNMENT

x
PLUS
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

reserve_setup
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_IFDEF

CONFIG_DEBUG_RT_MUTEXES
PP_INCLUDE
PP_ELSE
PP_INCLUDE
PP_ENDIF

static

void

rt_mutex_set_owner
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
STRUCT

task_struct
MULT

owner
COMMA
TYPE_UNSIGNED
TYPE_LONG

mask
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

val
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

owner
LOGICAL_OR

mask
SEMICOLON
IF
BRACKET_O

rt_mutex_has_waiters
BRACKET_O

lock
BRACKET_C
BRACKET_C

val
LOGICAL_OR
OP_ASSIGNMENT

RT_MUTEX_HAS_WAITERS
SEMICOLON

lock
MINUS
GREATER

owner
OP_ASSIGNMENT
BRACKET_O
STRUCT

task_struct
MULT
BRACKET_C

val
SEMICOLON
CURLY_BRACKET_C

static

inline

void

clear_rt_mutex_waiters
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

lock
MINUS
GREATER

owner
OP_ASSIGNMENT
BRACKET_O
STRUCT

task_struct
MULT
BRACKET_C
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

lock
MINUS
GREATER

owner
AMPERSANT
TILDE

RT_MUTEX_HAS_WAITERS
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

fixup_rt_mutex_waiters
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

rt_mutex_has_waiters
BRACKET_O

lock
BRACKET_C
BRACKET_C

clear_rt_mutex_waiters
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IF
PP_DEFINED
BRACKET_O

__HAVE_ARCH_CMPXCHG
BRACKET_C
AND
NOT
PP_DEFINED
BRACKET_O

CONFIG_DEBUG_RT_MUTEXES
BRACKET_C
PP_DEFINE

rt_mutex_cmpxchg
BRACKET_O

l
COMMA

c
COMMA

n
BRACKET_C
BRACKET_O

cmpxchg
BRACKET_O
AMPERSANT

l
MINUS
GREATER

owner
COMMA

c
COMMA

n
BRACKET_C
EQ

c
BRACKET_C

static

inline

void

mark_rt_mutex_waiters
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

owner
COMMA
MULT

p
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
MULT
BRACKET_C
AMPERSANT

lock
MINUS
GREATER

owner
SEMICOLON
DO
CURLY_BRACKET_O

owner
OP_ASSIGNMENT
MULT

p
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

cmpxchg
BRACKET_O

p
COMMA

owner
COMMA

owner
LOGICAL_OR

RT_MUTEX_HAS_WAITERS
BRACKET_C
NOT_EQ

owner
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ELSE
PP_DEFINE

rt_mutex_cmpxchg
BRACKET_O

l
COMMA

c
COMMA

n
BRACKET_C
BRACKET_O
NUMBER
BRACKET_C

static

inline

void

mark_rt_mutex_waiters
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

lock
MINUS
GREATER

owner
OP_ASSIGNMENT
BRACKET_O
STRUCT

task_struct
MULT
BRACKET_C
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

lock
MINUS
GREATER

owner
LOGICAL_OR

RT_MUTEX_HAS_WAITERS
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
TYPE_INT

rt_mutex_getprio
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

likely
BRACKET_O
NOT

task_has_pi_waiters
BRACKET_O

task
BRACKET_C
BRACKET_C
BRACKET_C

return

task
MINUS
GREATER

normal_prio
SEMICOLON

return

min
BRACKET_O

task_top_pi_waiter
BRACKET_O

task
BRACKET_C
MINUS
GREATER

pi_list_entry
DOT

prio
COMMA

task
MINUS
GREATER

normal_prio
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

__rt_mutex_adjust_prio
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

prio
OP_ASSIGNMENT

rt_mutex_getprio
BRACKET_O

task
BRACKET_C
SEMICOLON
IF
BRACKET_O

task
MINUS
GREATER

prio
NOT_EQ

prio
BRACKET_C

rt_mutex_setprio
BRACKET_O

task
COMMA

prio
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

rt_mutex_adjust_prio
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

task
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

__rt_mutex_adjust_prio
BRACKET_O

task
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

task
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

max_lock_depth
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
TYPE_INT

rt_mutex_adjust_prio_chain
BRACKET_O
STRUCT

task_struct
MULT

task
COMMA
TYPE_INT

deadlock_detect
COMMA
STRUCT

rt_mutex
MULT

orig_lock
COMMA
STRUCT

rt_mutex_waiter
MULT

orig_waiter
COMMA
STRUCT

task_struct
MULT

top_task
BRACKET_C
CURLY_BRACKET_O
STRUCT

rt_mutex
MULT

lock
SEMICOLON
STRUCT

rt_mutex_waiter
MULT

waiter
COMMA
MULT

top_waiter
OP_ASSIGNMENT

orig_waiter
SEMICOLON
TYPE_INT

detect_deadlock
COMMA

ret
OP_ASSIGNMENT
NUMBER
COMMA

depth
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

detect_deadlock
OP_ASSIGNMENT

debug_rt_mutex_detect_deadlock
BRACKET_O

orig_waiter
COMMA

deadlock_detect
BRACKET_C
SEMICOLON

again
COLON
IF
BRACKET_O
PLUS
PLUS

depth
GREATER

max_lock_depth
BRACKET_C
CURLY_BRACKET_O

static
TYPE_INT

prev_max
SEMICOLON
IF
BRACKET_O

prev_max
NOT_EQ

max_lock_depth
BRACKET_C
CURLY_BRACKET_O

prev_max
OP_ASSIGNMENT

max_lock_depth
SEMICOLON

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA

max_lock_depth
COMMA

top_task
MINUS
GREATER

comm
COMMA

top_task
MINUS
GREATER

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

put_task_struct
BRACKET_O

task
BRACKET_C
SEMICOLON

return

deadlock_detect
QUESTION_MARK
MINUS

EDEADLK
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C

retry
COLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

task
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

waiter
OP_ASSIGNMENT

task
MINUS
GREATER

pi_blocked_on
SEMICOLON
IF
BRACKET_O
NOT

waiter
OR
NOT

waiter
MINUS
GREATER

task
BRACKET_C

goto

out_unlock_pi
SEMICOLON
IF
BRACKET_O

orig_waiter
AND
NOT

orig_waiter
MINUS
GREATER

task
BRACKET_C

goto

out_unlock_pi
SEMICOLON
IF
BRACKET_O

top_waiter
AND
BRACKET_O
NOT

task_has_pi_waiters
BRACKET_O

task
BRACKET_C
OR

top_waiter
NOT_EQ

task_top_pi_waiter
BRACKET_O

task
BRACKET_C
BRACKET_C
BRACKET_C

goto

out_unlock_pi
SEMICOLON
IF
BRACKET_O
NOT

detect_deadlock
AND

waiter
MINUS
GREATER

list_entry
DOT

prio
EQ

task
MINUS
GREATER

prio
BRACKET_C

goto

out_unlock_pi
SEMICOLON

lock
OP_ASSIGNMENT

waiter
MINUS
GREATER

lock
SEMICOLON
IF
BRACKET_O
NOT

spin_trylock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

task
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON

goto

retry
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

lock
EQ

orig_lock
OR

rt_mutex_owner
BRACKET_O

lock
BRACKET_C
EQ

top_task
BRACKET_C
CURLY_BRACKET_O

debug_rt_mutex_deadlock
BRACKET_O

deadlock_detect
COMMA

orig_waiter
COMMA

lock
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

deadlock_detect
QUESTION_MARK
MINUS

EDEADLK
COLON
NUMBER
SEMICOLON

goto

out_unlock_pi
SEMICOLON
CURLY_BRACKET_C

top_waiter
OP_ASSIGNMENT

rt_mutex_top_waiter
BRACKET_O

lock
BRACKET_C
SEMICOLON

plist_del
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list_entry
COMMA
AMPERSANT

lock
MINUS
GREATER

wait_list
BRACKET_C
SEMICOLON

waiter
MINUS
GREATER

list_entry
DOT

prio
OP_ASSIGNMENT

task
MINUS
GREATER

prio
SEMICOLON

plist_add
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list_entry
COMMA
AMPERSANT

lock
MINUS
GREATER

wait_list
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

task
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

put_task_struct
BRACKET_O

task
BRACKET_C
SEMICOLON

task
OP_ASSIGNMENT

rt_mutex_owner
BRACKET_O

lock
BRACKET_C
SEMICOLON

get_task_struct
BRACKET_O

task
BRACKET_C
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

task
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

waiter
EQ

rt_mutex_top_waiter
BRACKET_O

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

plist_del
BRACKET_O
AMPERSANT

top_waiter
MINUS
GREATER

pi_list_entry
COMMA
AMPERSANT

task
MINUS
GREATER

pi_waiters
BRACKET_C
SEMICOLON

waiter
MINUS
GREATER

pi_list_entry
DOT

prio
OP_ASSIGNMENT

waiter
MINUS
GREATER

list_entry
DOT

prio
SEMICOLON

plist_add
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

pi_list_entry
COMMA
AMPERSANT

task
MINUS
GREATER

pi_waiters
BRACKET_C
SEMICOLON

__rt_mutex_adjust_prio
BRACKET_O

task
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

top_waiter
EQ

waiter
BRACKET_C
CURLY_BRACKET_O

plist_del
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

pi_list_entry
COMMA
AMPERSANT

task
MINUS
GREATER

pi_waiters
BRACKET_C
SEMICOLON

waiter
OP_ASSIGNMENT

rt_mutex_top_waiter
BRACKET_O

lock
BRACKET_C
SEMICOLON

waiter
MINUS
GREATER

pi_list_entry
DOT

prio
OP_ASSIGNMENT

waiter
MINUS
GREATER

list_entry
DOT

prio
SEMICOLON

plist_add
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

pi_list_entry
COMMA
AMPERSANT

task
MINUS
GREATER

pi_waiters
BRACKET_C
SEMICOLON

__rt_mutex_adjust_prio
BRACKET_O

task
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

task
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

top_waiter
OP_ASSIGNMENT

rt_mutex_top_waiter
BRACKET_O

lock
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

detect_deadlock
AND

waiter
NOT_EQ

top_waiter
BRACKET_C

goto

out_put_task
SEMICOLON

goto

again
SEMICOLON

out_unlock_pi
COLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

task
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

out_put_task
COLON

put_task_struct
BRACKET_O

task
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

try_to_steal_lock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

pendowner
OP_ASSIGNMENT

rt_mutex_owner
BRACKET_O

lock
BRACKET_C
SEMICOLON
STRUCT

rt_mutex_waiter
MULT

next
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O
NOT

rt_mutex_owner_pending
BRACKET_O

lock
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

pendowner
EQ

current
BRACKET_C

return
NUMBER
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

pendowner
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

current
MINUS
GREATER

prio
GR_EQ

pendowner
MINUS
GREATER

prio
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

pendowner
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

likely
BRACKET_O
NOT

rt_mutex_has_waiters
BRACKET_O

lock
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

pendowner
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

next
OP_ASSIGNMENT

rt_mutex_top_waiter
BRACKET_O

lock
BRACKET_C
SEMICOLON

plist_del
BRACKET_O
AMPERSANT

next
MINUS
GREATER

pi_list_entry
COMMA
AMPERSANT

pendowner
MINUS
GREATER

pi_waiters
BRACKET_C
SEMICOLON

__rt_mutex_adjust_prio
BRACKET_O

pendowner
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

pendowner
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

next
MINUS
GREATER

task
NOT_EQ

current
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_lock_irqsave
BRACKET_O
AMPERSANT

current
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

plist_add
BRACKET_O
AMPERSANT

next
MINUS
GREATER

pi_list_entry
COMMA
AMPERSANT

current
MINUS
GREATER

pi_waiters
BRACKET_C
SEMICOLON

__rt_mutex_adjust_prio
BRACKET_O

current
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

current
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

try_to_take_rt_mutex
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

mark_rt_mutex_waiters
BRACKET_O

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

rt_mutex_owner
BRACKET_O

lock
BRACKET_C
AND
NOT

try_to_steal_lock
BRACKET_O

lock
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

debug_rt_mutex_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON

rt_mutex_set_owner
BRACKET_O

lock
COMMA

current
COMMA
NUMBER
BRACKET_C
SEMICOLON

rt_mutex_deadlock_account_lock
BRACKET_O

lock
COMMA

current
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

task_blocks_on_rt_mutex
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
STRUCT

rt_mutex_waiter
MULT

waiter
COMMA
TYPE_INT

detect_deadlock
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

owner
OP_ASSIGNMENT

rt_mutex_owner
BRACKET_O

lock
BRACKET_C
SEMICOLON
STRUCT

rt_mutex_waiter
MULT

top_waiter
OP_ASSIGNMENT

waiter
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

chain_walk
OP_ASSIGNMENT
NUMBER
COMMA

res
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

current
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

__rt_mutex_adjust_prio
BRACKET_O

current
BRACKET_C
SEMICOLON

waiter
MINUS
GREATER

task
OP_ASSIGNMENT

current
SEMICOLON

waiter
MINUS
GREATER

lock
OP_ASSIGNMENT

lock
SEMICOLON

plist_node_init
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list_entry
COMMA

current
MINUS
GREATER

prio
BRACKET_C
SEMICOLON

plist_node_init
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

pi_list_entry
COMMA

current
MINUS
GREATER

prio
BRACKET_C
SEMICOLON
IF
BRACKET_O

rt_mutex_has_waiters
BRACKET_O

lock
BRACKET_C
BRACKET_C

top_waiter
OP_ASSIGNMENT

rt_mutex_top_waiter
BRACKET_O

lock
BRACKET_C
SEMICOLON

plist_add
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list_entry
COMMA
AMPERSANT

lock
MINUS
GREATER

wait_list
BRACKET_C
SEMICOLON

current
MINUS
GREATER

pi_blocked_on
OP_ASSIGNMENT

waiter
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

current
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

waiter
EQ

rt_mutex_top_waiter
BRACKET_O

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_lock_irqsave
BRACKET_O
AMPERSANT

owner
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

plist_del
BRACKET_O
AMPERSANT

top_waiter
MINUS
GREATER

pi_list_entry
COMMA
AMPERSANT

owner
MINUS
GREATER

pi_waiters
BRACKET_C
SEMICOLON

plist_add
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

pi_list_entry
COMMA
AMPERSANT

owner
MINUS
GREATER

pi_waiters
BRACKET_C
SEMICOLON

__rt_mutex_adjust_prio
BRACKET_O

owner
BRACKET_C
SEMICOLON
IF
BRACKET_O

owner
MINUS
GREATER

pi_blocked_on
BRACKET_C

chain_walk
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

owner
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

debug_rt_mutex_detect_deadlock
BRACKET_O

waiter
COMMA

detect_deadlock
BRACKET_C
BRACKET_C

chain_walk
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

chain_walk
BRACKET_C

return
NUMBER
SEMICOLON

get_task_struct
BRACKET_O

owner
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

res
OP_ASSIGNMENT

rt_mutex_adjust_prio_chain
BRACKET_O

owner
COMMA

detect_deadlock
COMMA

lock
COMMA

waiter
COMMA

current
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

return

res
SEMICOLON
CURLY_BRACKET_C

static

void

wakeup_next_waiter
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O
STRUCT

rt_mutex_waiter
MULT

waiter
SEMICOLON
STRUCT

task_struct
MULT

pendowner
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

current
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

waiter
OP_ASSIGNMENT

rt_mutex_top_waiter
BRACKET_O

lock
BRACKET_C
SEMICOLON

plist_del
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list_entry
COMMA
AMPERSANT

lock
MINUS
GREATER

wait_list
BRACKET_C
SEMICOLON

plist_del
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

pi_list_entry
COMMA
AMPERSANT

current
MINUS
GREATER

pi_waiters
BRACKET_C
SEMICOLON

pendowner
OP_ASSIGNMENT

waiter
MINUS
GREATER

task
SEMICOLON

waiter
MINUS
GREATER

task
OP_ASSIGNMENT

NULL
SEMICOLON

rt_mutex_set_owner
BRACKET_O

lock
COMMA

pendowner
COMMA

RT_MUTEX_OWNER_PENDING
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

current
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

pendowner
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O
NOT

pendowner
MINUS
GREATER

pi_blocked_on
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

pendowner
MINUS
GREATER

pi_blocked_on
NOT_EQ

waiter
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

pendowner
MINUS
GREATER

pi_blocked_on
MINUS
GREATER

lock
NOT_EQ

lock
BRACKET_C
SEMICOLON

pendowner
MINUS
GREATER

pi_blocked_on
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

rt_mutex_has_waiters
BRACKET_O

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

rt_mutex_waiter
MULT

next
SEMICOLON

next
OP_ASSIGNMENT

rt_mutex_top_waiter
BRACKET_O

lock
BRACKET_C
SEMICOLON

plist_add
BRACKET_O
AMPERSANT

next
MINUS
GREATER

pi_list_entry
COMMA
AMPERSANT

pendowner
MINUS
GREATER

pi_waiters
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

pendowner
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

wake_up_process
BRACKET_O

pendowner
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

remove_waiter
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
STRUCT

rt_mutex_waiter
MULT

waiter
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

first
OP_ASSIGNMENT
BRACKET_O

waiter
EQ

rt_mutex_top_waiter
BRACKET_O

lock
BRACKET_C
BRACKET_C
SEMICOLON
STRUCT

task_struct
MULT

owner
OP_ASSIGNMENT

rt_mutex_owner
BRACKET_O

lock
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

chain_walk
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

current
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

plist_del
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list_entry
COMMA
AMPERSANT

lock
MINUS
GREATER

wait_list
BRACKET_C
SEMICOLON

waiter
MINUS
GREATER

task
OP_ASSIGNMENT

NULL
SEMICOLON

current
MINUS
GREATER

pi_blocked_on
OP_ASSIGNMENT

NULL
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

current
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

first
AND

owner
NOT_EQ

current
BRACKET_C
CURLY_BRACKET_O

spin_lock_irqsave
BRACKET_O
AMPERSANT

owner
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

plist_del
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

pi_list_entry
COMMA
AMPERSANT

owner
MINUS
GREATER

pi_waiters
BRACKET_C
SEMICOLON
IF
BRACKET_O

rt_mutex_has_waiters
BRACKET_O

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

rt_mutex_waiter
MULT

next
SEMICOLON

next
OP_ASSIGNMENT

rt_mutex_top_waiter
BRACKET_O

lock
BRACKET_C
SEMICOLON

plist_add
BRACKET_O
AMPERSANT

next
MINUS
GREATER

pi_list_entry
COMMA
AMPERSANT

owner
MINUS
GREATER

pi_waiters
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__rt_mutex_adjust_prio
BRACKET_O

owner
BRACKET_C
SEMICOLON
IF
BRACKET_O

owner
MINUS
GREATER

pi_blocked_on
BRACKET_C

chain_walk
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

owner
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

WARN_ON
BRACKET_O
NOT

plist_node_empty
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

pi_list_entry
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

chain_walk
BRACKET_C

return
SEMICOLON

get_task_struct
BRACKET_O

owner
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

rt_mutex_adjust_prio_chain
BRACKET_O

owner
COMMA
NUMBER
COMMA

lock
COMMA

NULL
COMMA

current
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

rt_mutex_adjust_pi
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
STRUCT

rt_mutex_waiter
MULT

waiter
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

task
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

waiter
OP_ASSIGNMENT

task
MINUS
GREATER

pi_blocked_on
SEMICOLON
IF
BRACKET_O
NOT

waiter
OR

waiter
MINUS
GREATER

list_entry
DOT

prio
EQ

task
MINUS
GREATER

prio
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

task
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

task
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

get_task_struct
BRACKET_O

task
BRACKET_C
SEMICOLON

rt_mutex_adjust_prio_chain
BRACKET_O

task
COMMA
NUMBER
COMMA

NULL
COMMA

NULL
COMMA

task
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__sched

rt_mutex_slowlock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
TYPE_INT

state
COMMA
STRUCT

hrtimer_sleeper
MULT

timeout
COMMA
TYPE_INT

detect_deadlock
BRACKET_C
CURLY_BRACKET_O
STRUCT

rt_mutex_waiter

waiter
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

debug_rt_mutex_init_waiter
BRACKET_O
AMPERSANT

waiter
BRACKET_C
SEMICOLON

waiter
DOT

task
OP_ASSIGNMENT

NULL
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

try_to_take_rt_mutex
BRACKET_O

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

set_current_state
BRACKET_O

state
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

timeout
BRACKET_C
BRACKET_C

hrtimer_start
BRACKET_O
AMPERSANT

timeout
MINUS
GREATER

timer
COMMA

timeout
MINUS
GREATER

timer
DOT

expires
COMMA

HRTIMER_MODE_ABS
BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

try_to_take_rt_mutex
BRACKET_O

lock
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

state
EQ

TASK_INTERRUPTIBLE
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

signal_pending
BRACKET_O

current
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
MINUS

EINTR
SEMICOLON
IF
BRACKET_O

timeout
AND
NOT

timeout
MINUS
GREATER

task
BRACKET_C

ret
OP_ASSIGNMENT
MINUS

ETIMEDOUT
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

waiter
DOT

task
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

task_blocks_on_rt_mutex
BRACKET_O

lock
COMMA
AMPERSANT

waiter
COMMA

detect_deadlock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

waiter
DOT

task
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

ret
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

debug_rt_mutex_print_deadlock
BRACKET_O
AMPERSANT

waiter
BRACKET_C
SEMICOLON
IF
BRACKET_O

waiter
DOT

task
BRACKET_C

schedule_rt_mutex
BRACKET_O

lock
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

state
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

waiter
DOT

task
BRACKET_C
BRACKET_C

remove_waiter
BRACKET_O

lock
COMMA
AMPERSANT

waiter
BRACKET_C
SEMICOLON

fixup_rt_mutex_waiters
BRACKET_O

lock
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

timeout
BRACKET_C
BRACKET_C

hrtimer_cancel
BRACKET_O
AMPERSANT

timeout
MINUS
GREATER

timer
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
BRACKET_C
BRACKET_C

rt_mutex_adjust_prio
BRACKET_O

current
BRACKET_C
SEMICOLON

debug_rt_mutex_free_waiter
BRACKET_O
AMPERSANT

waiter
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

rt_mutex_slowtrylock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

rt_mutex_owner
BRACKET_O

lock
BRACKET_C
NOT_EQ

current
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

try_to_take_rt_mutex
BRACKET_O

lock
BRACKET_C
SEMICOLON

fixup_rt_mutex_waiters
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

void

__sched

rt_mutex_slowunlock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

debug_rt_mutex_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

rt_mutex_deadlock_account_unlock
BRACKET_O

current
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

rt_mutex_has_waiters
BRACKET_O

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

lock
MINUS
GREATER

owner
OP_ASSIGNMENT

NULL
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

wakeup_next_waiter
BRACKET_O

lock
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

rt_mutex_adjust_prio
BRACKET_O

current
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

rt_mutex_fastlock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
TYPE_INT

state
COMMA
TYPE_INT

detect_deadlock
COMMA
TYPE_INT
BRACKET_O
MULT

slowfn
BRACKET_C
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
TYPE_INT

state
COMMA
STRUCT

hrtimer_sleeper
MULT

timeout
COMMA
TYPE_INT

detect_deadlock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

detect_deadlock
AND

likely
BRACKET_O

rt_mutex_cmpxchg
BRACKET_O

lock
COMMA

NULL
COMMA

current
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rt_mutex_deadlock_account_lock
BRACKET_O

lock
COMMA

current
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE

return

slowfn
BRACKET_O

lock
COMMA

state
COMMA

NULL
COMMA

detect_deadlock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

rt_mutex_timed_fastlock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
TYPE_INT

state
COMMA
STRUCT

hrtimer_sleeper
MULT

timeout
COMMA
TYPE_INT

detect_deadlock
COMMA
TYPE_INT
BRACKET_O
MULT

slowfn
BRACKET_C
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
TYPE_INT

state
COMMA
STRUCT

hrtimer_sleeper
MULT

timeout
COMMA
TYPE_INT

detect_deadlock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

detect_deadlock
AND

likely
BRACKET_O

rt_mutex_cmpxchg
BRACKET_O

lock
COMMA

NULL
COMMA

current
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rt_mutex_deadlock_account_lock
BRACKET_O

lock
COMMA

current
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE

return

slowfn
BRACKET_O

lock
COMMA

state
COMMA

timeout
COMMA

detect_deadlock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

rt_mutex_fasttrylock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
TYPE_INT
BRACKET_O
MULT

slowfn
BRACKET_C
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

likely
BRACKET_O

rt_mutex_cmpxchg
BRACKET_O

lock
COMMA

NULL
COMMA

current
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rt_mutex_deadlock_account_lock
BRACKET_O

lock
COMMA

current
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

slowfn
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

rt_mutex_fastunlock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA

void
BRACKET_O
MULT

slowfn
BRACKET_C
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

likely
BRACKET_O

rt_mutex_cmpxchg
BRACKET_O

lock
COMMA

current
COMMA

NULL
BRACKET_C
BRACKET_C
BRACKET_C

rt_mutex_deadlock_account_unlock
BRACKET_O

current
BRACKET_C
SEMICOLON
ELSE

slowfn
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__sched

rt_mutex_lock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

rt_mutex_fastlock
BRACKET_O

lock
COMMA

TASK_UNINTERRUPTIBLE
COMMA
NUMBER
COMMA

rt_mutex_slowlock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

rt_mutex_lock
BRACKET_C
SEMICOLON
TYPE_INT

__sched

rt_mutex_lock_interruptible
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
TYPE_INT

detect_deadlock
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

return

rt_mutex_fastlock
BRACKET_O

lock
COMMA

TASK_INTERRUPTIBLE
COMMA

detect_deadlock
COMMA

rt_mutex_slowlock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

rt_mutex_lock_interruptible
BRACKET_C
SEMICOLON
TYPE_INT

rt_mutex_timed_lock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
STRUCT

hrtimer_sleeper
MULT

timeout
COMMA
TYPE_INT

detect_deadlock
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

return

rt_mutex_timed_fastlock
BRACKET_O

lock
COMMA

TASK_INTERRUPTIBLE
COMMA

timeout
COMMA

detect_deadlock
COMMA

rt_mutex_slowlock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

rt_mutex_timed_lock
BRACKET_C
SEMICOLON
TYPE_INT

__sched

rt_mutex_trylock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

return

rt_mutex_fasttrylock
BRACKET_O

lock
COMMA

rt_mutex_slowtrylock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

rt_mutex_trylock
BRACKET_C
SEMICOLON

void

__sched

rt_mutex_unlock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

rt_mutex_fastunlock
BRACKET_O

lock
COMMA

rt_mutex_slowunlock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

rt_mutex_unlock
BRACKET_C
SEMICOLON

void

rt_mutex_destroy
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

WARN_ON
BRACKET_O

rt_mutex_is_locked
BRACKET_O

lock
BRACKET_C
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_DEBUG_RT_MUTEXES

lock
MINUS
GREATER

magic
OP_ASSIGNMENT

NULL
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

rt_mutex_destroy
BRACKET_C
SEMICOLON

void

__rt_mutex_init
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O

lock
MINUS
GREATER

owner
OP_ASSIGNMENT

NULL
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

plist_head_init
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

wait_list
COMMA
AMPERSANT

lock
MINUS
GREATER

wait_lock
BRACKET_C
SEMICOLON

debug_rt_mutex_init
BRACKET_O

lock
COMMA

name
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

__rt_mutex_init
BRACKET_C
SEMICOLON

void

rt_mutex_init_proxy_locked
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
STRUCT

task_struct
MULT

proxy_owner
BRACKET_C
CURLY_BRACKET_O

__rt_mutex_init
BRACKET_O

lock
COMMA

NULL
BRACKET_C
SEMICOLON

debug_rt_mutex_proxy_lock
BRACKET_O

lock
COMMA

proxy_owner
BRACKET_C
SEMICOLON

rt_mutex_set_owner
BRACKET_O

lock
COMMA

proxy_owner
COMMA
NUMBER
BRACKET_C
SEMICOLON

rt_mutex_deadlock_account_lock
BRACKET_O

lock
COMMA

proxy_owner
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

rt_mutex_proxy_unlock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
STRUCT

task_struct
MULT

proxy_owner
BRACKET_C
CURLY_BRACKET_O

debug_rt_mutex_proxy_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

rt_mutex_set_owner
BRACKET_O

lock
COMMA

NULL
COMMA
NUMBER
BRACKET_C
SEMICOLON

rt_mutex_deadlock_account_unlock
BRACKET_O

proxy_owner
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

task_struct
MULT

rt_mutex_next_owner
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

rt_mutex_has_waiters
BRACKET_O

lock
BRACKET_C
BRACKET_C

return

NULL
SEMICOLON

return

rt_mutex_top_waiter
BRACKET_O

lock
BRACKET_C
MINUS
GREATER

task
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_IFDEF

CONFIG_DEBUG_RT_MUTEXES
PP_INCLUDE
PP_ELSE
PP_INCLUDE
PP_ENDIF
PP_DEFINE

TRACE_WARN_ON
BRACKET_O

x
BRACKET_C

WARN_ON
BRACKET_O

x
BRACKET_C
PP_DEFINE

TRACE_BUG_ON
BRACKET_O

x
BRACKET_C

BUG_ON
BRACKET_O

x
BRACKET_C
PP_DEFINE

TRACE_OFF
BRACKET_O
BRACKET_C
BACKLASHED_NEWLINE
DO
CURLY_BRACKET_O
BACKLASHED_NEWLINE
IF
BRACKET_O

rt_trace_on
BRACKET_C
CURLY_BRACKET_O
BACKLASHED_NEWLINE

rt_trace_on
OP_ASSIGNMENT
NUMBER
SEMICOLON
BACKLASHED_NEWLINE

console_verbose
BRACKET_O
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
IF
BRACKET_O

spin_is_locked
BRACKET_O
AMPERSANT

current
MINUS
GREATER

pi_lock
BRACKET_C
BRACKET_C
BACKLASHED_NEWLINE

spin_unlock
BRACKET_O
AMPERSANT

current
MINUS
GREATER

pi_lock
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

TRACE_OFF_NOLOCK
BRACKET_O
BRACKET_C
BACKLASHED_NEWLINE
DO
CURLY_BRACKET_O
BACKLASHED_NEWLINE
IF
BRACKET_O

rt_trace_on
BRACKET_C
CURLY_BRACKET_O
BACKLASHED_NEWLINE

rt_trace_on
OP_ASSIGNMENT
NUMBER
SEMICOLON
BACKLASHED_NEWLINE

console_verbose
BRACKET_O
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

TRACE_BUG_LOCKED
BRACKET_O
BRACKET_C
BACKLASHED_NEWLINE
DO
CURLY_BRACKET_O
BACKLASHED_NEWLINE

TRACE_OFF
BRACKET_O
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE

BUG
BRACKET_O
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

TRACE_WARN_ON_LOCKED
BRACKET_O

c
BRACKET_C
BACKLASHED_NEWLINE
DO
CURLY_BRACKET_O
BACKLASHED_NEWLINE
IF
BRACKET_O

unlikely
BRACKET_O

c
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
BACKLASHED_NEWLINE

TRACE_OFF
BRACKET_O
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE

WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

TRACE_BUG_ON_LOCKED
BRACKET_O

c
BRACKET_C
BACKLASHED_NEWLINE
DO
CURLY_BRACKET_O
BACKLASHED_NEWLINE
IF
BRACKET_O

unlikely
BRACKET_O

c
BRACKET_C
BRACKET_C
BACKLASHED_NEWLINE

TRACE_BUG_LOCKED
BRACKET_O
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_IFDEF

CONFIG_SMP
PP_DEFINE

SMP_TRACE_BUG_ON_LOCKED
BRACKET_O

c
BRACKET_C

TRACE_BUG_ON_LOCKED
BRACKET_O

c
BRACKET_C
PP_ELSE
PP_DEFINE

SMP_TRACE_BUG_ON_LOCKED
BRACKET_O

c
BRACKET_C
DO
CURLY_BRACKET_O
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_ENDIF
TYPE_INT

rt_trace_on
OP_ASSIGNMENT
NUMBER
SEMICOLON

void

deadlock_trace_off
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

rt_trace_on
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

printk_task
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
BRACKET_C

printk
BRACKET_O
STRING
COMMA

p
MINUS
GREATER

comm
COMMA

p
MINUS
GREATER

pid
COMMA

p
COMMA

p
MINUS
GREATER

prio
BRACKET_C
SEMICOLON
ELSE

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

printk_lock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
TYPE_INT

print_owner
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

lock
MINUS
GREATER

name
BRACKET_C

printk
BRACKET_O
STRING
COMMA

lock
COMMA

lock
MINUS
GREATER

name
BRACKET_C
SEMICOLON
ELSE

printk
BRACKET_O
STRING
COMMA

lock
COMMA

lock
MINUS
GREATER

file
COMMA

lock
MINUS
GREATER

line
BRACKET_C
SEMICOLON
IF
BRACKET_O

print_owner
AND

rt_mutex_owner
BRACKET_O

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

lock
MINUS
GREATER

owner
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk_task
BRACKET_O

rt_mutex_owner
BRACKET_O

lock
BRACKET_C
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

rt_mutex_debug_task_free
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O

WARN_ON
BRACKET_O
NOT

plist_head_empty
BRACKET_O
AMPERSANT

task
MINUS
GREATER

pi_waiters
BRACKET_C
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

task
MINUS
GREATER

pi_blocked_on
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_rt_mutex_deadlock
BRACKET_O
TYPE_INT

detect
COMMA
STRUCT

rt_mutex_waiter
MULT

act_waiter
COMMA
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

task
SEMICOLON
IF
BRACKET_O
NOT

rt_trace_on
OR

detect
OR
NOT

act_waiter
BRACKET_C

return
SEMICOLON

task
OP_ASSIGNMENT

rt_mutex_owner
BRACKET_O

act_waiter
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

task
AND

task
NOT_EQ

current
BRACKET_C
CURLY_BRACKET_O

act_waiter
MINUS
GREATER

deadlock_task_pid
OP_ASSIGNMENT

task
MINUS
GREATER

pid
SEMICOLON

act_waiter
MINUS
GREATER

deadlock_lock
OP_ASSIGNMENT

lock
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

debug_rt_mutex_print_deadlock
BRACKET_O
STRUCT

rt_mutex_waiter
MULT

waiter
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

task
SEMICOLON
IF
BRACKET_O
NOT

waiter
MINUS
GREATER

deadlock_lock
OR
NOT

rt_trace_on
BRACKET_C

return
SEMICOLON

task
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

waiter
MINUS
GREATER

deadlock_task_pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

task
BRACKET_C

return
SEMICOLON

TRACE_OFF_NOLOCK
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

task
MINUS
GREATER

comm
COMMA

task
MINUS
GREATER

pid
COMMA

current
MINUS
GREATER

comm
COMMA

current
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

current
MINUS
GREATER

comm
COMMA

current
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

printk_lock
BRACKET_O

waiter
MINUS
GREATER

lock
COMMA
NUMBER
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

task
MINUS
GREATER

comm
COMMA

task
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

printk_lock
BRACKET_O

waiter
MINUS
GREATER

deadlock_lock
COMMA
NUMBER
BRACKET_C
SEMICOLON

debug_show_held_locks
BRACKET_O

current
BRACKET_C
SEMICOLON

debug_show_held_locks
BRACKET_O

task
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

task
MINUS
GREATER

comm
COMMA

task
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

show_stack
BRACKET_O

task
COMMA

NULL
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

current
MINUS
GREATER

comm
COMMA

current
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

debug_show_all_locks
BRACKET_O
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
STRING
BRACKET_C
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_rt_mutex_lock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

void

debug_rt_mutex_unlock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

TRACE_WARN_ON_LOCKED
BRACKET_O

rt_mutex_owner
BRACKET_O

lock
BRACKET_C
NOT_EQ

current
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_rt_mutex_proxy_lock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
STRUCT

task_struct
MULT

powner
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

void

debug_rt_mutex_proxy_unlock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
BRACKET_C
CURLY_BRACKET_O

TRACE_WARN_ON_LOCKED
BRACKET_O
NOT

rt_mutex_owner
BRACKET_O

lock
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_rt_mutex_init_waiter
BRACKET_O
STRUCT

rt_mutex_waiter
MULT

waiter
BRACKET_C
CURLY_BRACKET_O

memset
BRACKET_O

waiter
COMMA
NUMBER

x11
COMMA

sizeof
BRACKET_O
MULT

waiter
BRACKET_C
BRACKET_C
SEMICOLON

plist_node_init
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list_entry
COMMA

MAX_PRIO
BRACKET_C
SEMICOLON

plist_node_init
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

pi_list_entry
COMMA

MAX_PRIO
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_rt_mutex_free_waiter
BRACKET_O
STRUCT

rt_mutex_waiter
MULT

waiter
BRACKET_C
CURLY_BRACKET_O

TRACE_WARN_ON
BRACKET_O
NOT

plist_node_empty
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

list_entry
BRACKET_C
BRACKET_C
SEMICOLON

TRACE_WARN_ON
BRACKET_O
NOT

plist_node_empty
BRACKET_O
AMPERSANT

waiter
MINUS
GREATER

pi_list_entry
BRACKET_C
BRACKET_C
SEMICOLON

TRACE_WARN_ON
BRACKET_O

waiter
MINUS
GREATER

task
BRACKET_C
SEMICOLON

memset
BRACKET_O

waiter
COMMA
NUMBER

x22
COMMA

sizeof
BRACKET_O
MULT

waiter
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

debug_rt_mutex_init
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
CONST
TYPE_CHAR
MULT

name
BRACKET_C
CURLY_BRACKET_O

debug_check_no_locks_freed
BRACKET_O
BRACKET_O

void
MULT
BRACKET_C

lock
COMMA

sizeof
BRACKET_O
MULT

lock
BRACKET_C
BRACKET_C
SEMICOLON

lock
MINUS
GREATER

name
OP_ASSIGNMENT

name
SEMICOLON
CURLY_BRACKET_C

void

rt_mutex_deadlock_account_lock
BRACKET_O
STRUCT

rt_mutex
MULT

lock
COMMA
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

void

rt_mutex_deadlock_account_unlock
BRACKET_O
STRUCT

task_struct
MULT

task
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_DEFINE

MAX_RT_TEST_THREADS
NUMBER
PP_DEFINE

MAX_RT_TEST_MUTEXES
NUMBER

static

spinlock_t

rttest_lock
SEMICOLON

static

atomic_t

rttest_event
SEMICOLON
STRUCT

test_thread_data
CURLY_BRACKET_O
TYPE_INT

opcode
SEMICOLON
TYPE_INT

opdata
SEMICOLON
TYPE_INT

mutexes
CORNER_BRACKET_O

MAX_RT_TEST_MUTEXES
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

bkl
SEMICOLON
TYPE_INT

event
SEMICOLON
STRUCT

sys_device

sysdev
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

test_thread_data

thread_data
CORNER_BRACKET_O

MAX_RT_TEST_THREADS
CORNER_BRACKET_C
SEMICOLON

static
STRUCT

task_struct
MULT

threads
CORNER_BRACKET_O

MAX_RT_TEST_THREADS
CORNER_BRACKET_C
SEMICOLON

static
STRUCT

rt_mutex

mutexes
CORNER_BRACKET_O

MAX_RT_TEST_MUTEXES
CORNER_BRACKET_C
SEMICOLON

enum

test_opcodes
CURLY_BRACKET_O

RTTEST_NOP
OP_ASSIGNMENT
NUMBER
COMMA

RTTEST_SCHEDOT
COMMA

RTTEST_SCHEDRT
COMMA

RTTEST_LOCK
COMMA

RTTEST_LOCKNOWAIT
COMMA

RTTEST_LOCKINT
COMMA

RTTEST_LOCKINTNOWAIT
COMMA

RTTEST_LOCKCONT
COMMA

RTTEST_UNLOCK
COMMA

RTTEST_LOCKBKL
COMMA

RTTEST_UNLOCKBKL
COMMA

RTTEST_SIGNAL
COMMA

RTTEST_RESETEVENT
OP_ASSIGNMENT
NUMBER
COMMA

RTTEST_RESET
OP_ASSIGNMENT
NUMBER
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

handle_op
BRACKET_O
STRUCT

test_thread_data
MULT

td
COMMA
TYPE_INT

lockwakeup
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

id
COMMA

ret
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
SWITCH
BRACKET_O

td
MINUS
GREATER

opcode
BRACKET_C
CURLY_BRACKET_O

case

RTTEST_NOP
COLON

return
NUMBER
SEMICOLON

case

RTTEST_LOCKCONT
COLON

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

td
MINUS
GREATER

opdata
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

td
MINUS
GREATER

event
OP_ASSIGNMENT

atomic_add_return
BRACKET_O
NUMBER
COMMA
AMPERSANT

rttest_event
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON

case

RTTEST_RESET
COLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

MAX_RT_TEST_MUTEXES
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

i
CORNER_BRACKET_C
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

rt_mutex_unlock
BRACKET_O
AMPERSANT

mutexes
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

lockwakeup
AND

td
MINUS
GREATER

bkl
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

unlock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

td
MINUS
GREATER

bkl
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON

case

RTTEST_RESETEVENT
COLON

atomic_set
BRACKET_O
AMPERSANT

rttest_event
COMMA
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON

default
COLON
IF
BRACKET_O

lockwakeup
BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C
SWITCH
BRACKET_O

td
MINUS
GREATER

opcode
BRACKET_C
CURLY_BRACKET_O

case

RTTEST_LOCK
COLON

case

RTTEST_LOCKNOWAIT
COLON

id
OP_ASSIGNMENT

td
MINUS
GREATER

opdata
SEMICOLON
IF
BRACKET_O

id
LESS
NUMBER
OR

id
GR_EQ

MAX_RT_TEST_MUTEXES
BRACKET_C

return

ret
SEMICOLON

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

id
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

td
MINUS
GREATER

event
OP_ASSIGNMENT

atomic_add_return
BRACKET_O
NUMBER
COMMA
AMPERSANT

rttest_event
BRACKET_C
SEMICOLON

rt_mutex_lock
BRACKET_O
AMPERSANT

mutexes
CORNER_BRACKET_O

id
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

td
MINUS
GREATER

event
OP_ASSIGNMENT

atomic_add_return
BRACKET_O
NUMBER
COMMA
AMPERSANT

rttest_event
BRACKET_C
SEMICOLON

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

id
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON

case

RTTEST_LOCKINT
COLON

case

RTTEST_LOCKINTNOWAIT
COLON

id
OP_ASSIGNMENT

td
MINUS
GREATER

opdata
SEMICOLON
IF
BRACKET_O

id
LESS
NUMBER
OR

id
GR_EQ

MAX_RT_TEST_MUTEXES
BRACKET_C

return

ret
SEMICOLON

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

id
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

td
MINUS
GREATER

event
OP_ASSIGNMENT

atomic_add_return
BRACKET_O
NUMBER
COMMA
AMPERSANT

rttest_event
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

rt_mutex_lock_interruptible
BRACKET_O
AMPERSANT

mutexes
CORNER_BRACKET_O

id
CORNER_BRACKET_C
COMMA
NUMBER
BRACKET_C
SEMICOLON

td
MINUS
GREATER

event
OP_ASSIGNMENT

atomic_add_return
BRACKET_O
NUMBER
COMMA
AMPERSANT

rttest_event
BRACKET_C
SEMICOLON

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

id
CORNER_BRACKET_C
OP_ASSIGNMENT

ret
QUESTION_MARK
NUMBER
COLON
NUMBER
SEMICOLON

return

ret
QUESTION_MARK
MINUS

EINTR
COLON
NUMBER
SEMICOLON

case

RTTEST_UNLOCK
COLON

id
OP_ASSIGNMENT

td
MINUS
GREATER

opdata
SEMICOLON
IF
BRACKET_O

id
LESS
NUMBER
OR

id
GR_EQ

MAX_RT_TEST_MUTEXES
OR

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

id
CORNER_BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

return

ret
SEMICOLON

td
MINUS
GREATER

event
OP_ASSIGNMENT

atomic_add_return
BRACKET_O
NUMBER
COMMA
AMPERSANT

rttest_event
BRACKET_C
SEMICOLON

rt_mutex_unlock
BRACKET_O
AMPERSANT

mutexes
CORNER_BRACKET_O

id
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

td
MINUS
GREATER

event
OP_ASSIGNMENT

atomic_add_return
BRACKET_O
NUMBER
COMMA
AMPERSANT

rttest_event
BRACKET_C
SEMICOLON

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

id
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON

case

RTTEST_LOCKBKL
COLON
IF
BRACKET_O

td
MINUS
GREATER

bkl
BRACKET_C

return
NUMBER
SEMICOLON

td
MINUS
GREATER

bkl
OP_ASSIGNMENT
NUMBER
SEMICOLON

lock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

td
MINUS
GREATER

bkl
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON

case

RTTEST_UNLOCKBKL
COLON
IF
BRACKET_O

td
MINUS
GREATER

bkl
NOT_EQ
NUMBER
BRACKET_C
BREAK
SEMICOLON

unlock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

td
MINUS
GREATER

bkl
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON

default
COLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

void

schedule_rt_mutex_test
BRACKET_O
STRUCT

rt_mutex
MULT

mutex
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

tid
COMMA

op
COMMA

dat
SEMICOLON
STRUCT

test_thread_data
MULT

td
SEMICOLON
FOR
BRACKET_O

tid
OP_ASSIGNMENT
NUMBER
SEMICOLON

tid
LESS

MAX_RT_TEST_THREADS
SEMICOLON

tid
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

threads
CORNER_BRACKET_O

tid
CORNER_BRACKET_C
EQ

current
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

BUG_ON
BRACKET_O

tid
EQ

MAX_RT_TEST_THREADS
BRACKET_C
SEMICOLON

td
OP_ASSIGNMENT
AMPERSANT

thread_data
CORNER_BRACKET_O

tid
CORNER_BRACKET_C
SEMICOLON

op
OP_ASSIGNMENT

td
MINUS
GREATER

opcode
SEMICOLON

dat
OP_ASSIGNMENT

td
MINUS
GREATER

opdata
SEMICOLON
SWITCH
BRACKET_O

op
BRACKET_C
CURLY_BRACKET_O

case

RTTEST_LOCK
COLON

case

RTTEST_LOCKINT
COLON

case

RTTEST_LOCKNOWAIT
COLON

case

RTTEST_LOCKINTNOWAIT
COLON
IF
BRACKET_O

mutex
NOT_EQ
AMPERSANT

mutexes
CORNER_BRACKET_O

dat
CORNER_BRACKET_C
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

dat
CORNER_BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
BREAK
SEMICOLON

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

dat
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

td
MINUS
GREATER

event
OP_ASSIGNMENT

atomic_add_return
BRACKET_O
NUMBER
COMMA
AMPERSANT

rttest_event
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

RTTEST_LOCKBKL
COLON

default
COLON
BREAK
SEMICOLON
CURLY_BRACKET_C

schedule
BRACKET_O
BRACKET_C
SEMICOLON
SWITCH
BRACKET_O

op
BRACKET_C
CURLY_BRACKET_O

case

RTTEST_LOCK
COLON

case

RTTEST_LOCKINT
COLON
IF
BRACKET_O

mutex
NOT_EQ
AMPERSANT

mutexes
CORNER_BRACKET_O

dat
CORNER_BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

dat
CORNER_BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

return
SEMICOLON

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

dat
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

td
MINUS
GREATER

event
OP_ASSIGNMENT

atomic_add_return
BRACKET_O
NUMBER
COMMA
AMPERSANT

rttest_event
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

RTTEST_LOCKNOWAIT
COLON

case

RTTEST_LOCKINTNOWAIT
COLON
IF
BRACKET_O

mutex
NOT_EQ
AMPERSANT

mutexes
CORNER_BRACKET_O

dat
CORNER_BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

dat
CORNER_BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

return
SEMICOLON

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

dat
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

td
MINUS
GREATER

event
OP_ASSIGNMENT

atomic_add_return
BRACKET_O
NUMBER
COMMA
AMPERSANT

rttest_event
BRACKET_C
SEMICOLON

return
SEMICOLON

case

RTTEST_LOCKBKL
COLON

return
SEMICOLON

default
COLON

return
SEMICOLON
CURLY_BRACKET_C

td
MINUS
GREATER

opcode
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
IF
BRACKET_O

td
MINUS
GREATER

opcode
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

handle_op
BRACKET_O

td
COMMA
NUMBER
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
IF
BRACKET_O

td
MINUS
GREATER

opcode
EQ

RTTEST_LOCKCONT
BRACKET_C
BREAK
SEMICOLON

td
MINUS
GREATER

opcode
OP_ASSIGNMENT

ret
SEMICOLON
CURLY_BRACKET_C

schedule
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

td
MINUS
GREATER

opcode
OP_ASSIGNMENT

op
SEMICOLON

td
MINUS
GREATER

opdata
OP_ASSIGNMENT

dat
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

test_func
BRACKET_O

void
MULT

data
BRACKET_C
CURLY_BRACKET_O
STRUCT

test_thread_data
MULT

td
OP_ASSIGNMENT

data
SEMICOLON
TYPE_INT

ret
SEMICOLON

current
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_MUTEX_TESTER
SEMICOLON

allow_signal
BRACKET_O

SIGHUP
BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
IF
BRACKET_O

td
MINUS
GREATER

opcode
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

handle_op
BRACKET_O

td
COMMA
NUMBER
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON

td
MINUS
GREATER

opcode
OP_ASSIGNMENT

ret
SEMICOLON
CURLY_BRACKET_C

schedule
BRACKET_O
BRACKET_C
SEMICOLON

try_to_freeze
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

signal_pending
BRACKET_O

current
BRACKET_C
BRACKET_C

flush_signals
BRACKET_O

current
BRACKET_C
SEMICOLON
IF
BRACKET_O

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

sysfs_test_command
BRACKET_O
STRUCT

sys_device
MULT

dev
COMMA
CONST
TYPE_CHAR
MULT

buf
COMMA

size_t

count
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_param

schedpar
SEMICOLON
STRUCT

test_thread_data
MULT

td
SEMICOLON
TYPE_CHAR

cmdbuf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

op
COMMA

dat
COMMA

tid
COMMA

ret
SEMICOLON

td
OP_ASSIGNMENT

container_of
BRACKET_O

dev
COMMA
STRUCT

test_thread_data
COMMA

sysdev
BRACKET_C
SEMICOLON

tid
OP_ASSIGNMENT

td
MINUS
GREATER

sysdev
DOT

id
SEMICOLON
IF
BRACKET_O

count
GR_EQ

sizeof
BRACKET_O

cmdbuf
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

buf
CORNER_BRACKET_O

count
MINUS
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C

count
MINUS
MINUS
SEMICOLON
IF
BRACKET_O

count
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

memcpy
BRACKET_O

cmdbuf
COMMA

buf
COMMA

count
BRACKET_C
SEMICOLON

cmdbuf
CORNER_BRACKET_O

count
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

sscanf
BRACKET_O

cmdbuf
COMMA
STRING
COMMA
AMPERSANT

op
COMMA
AMPERSANT

dat
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
SWITCH
BRACKET_O

op
BRACKET_C
CURLY_BRACKET_O

case

RTTEST_SCHEDOT
COLON

schedpar
DOT

sched_priority
OP_ASSIGNMENT
NUMBER
SEMICOLON

ret
OP_ASSIGNMENT

sched_setscheduler
BRACKET_O

threads
CORNER_BRACKET_O

tid
CORNER_BRACKET_C
COMMA

SCHED_NORMAL
COMMA
AMPERSANT

schedpar
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

return

ret
SEMICOLON

set_user_nice
BRACKET_O

current
COMMA
NUMBER
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

RTTEST_SCHEDRT
COLON

schedpar
DOT

sched_priority
OP_ASSIGNMENT

dat
SEMICOLON

ret
OP_ASSIGNMENT

sched_setscheduler
BRACKET_O

threads
CORNER_BRACKET_O

tid
CORNER_BRACKET_C
COMMA

SCHED_FIFO
COMMA
AMPERSANT

schedpar
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

return

ret
SEMICOLON
BREAK
SEMICOLON

case

RTTEST_SIGNAL
COLON

send_sig
BRACKET_O

SIGHUP
COMMA

threads
CORNER_BRACKET_O

tid
CORNER_BRACKET_C
COMMA
NUMBER
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON
IF
BRACKET_O

td
MINUS
GREATER

opcode
GREATER
NUMBER
BRACKET_C

return
MINUS

EBUSY
SEMICOLON

td
MINUS
GREATER

opdata
OP_ASSIGNMENT

dat
SEMICOLON

td
MINUS
GREATER

opcode
OP_ASSIGNMENT

op
SEMICOLON

wake_up_process
BRACKET_O

threads
CORNER_BRACKET_O

tid
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

count
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

sysfs_test_status
BRACKET_O
STRUCT

sys_device
MULT

dev
COMMA
TYPE_CHAR
MULT

buf
BRACKET_C
CURLY_BRACKET_O
STRUCT

test_thread_data
MULT

td
SEMICOLON
STRUCT

task_struct
MULT

tsk
SEMICOLON
TYPE_CHAR
MULT

curr
OP_ASSIGNMENT

buf
SEMICOLON
TYPE_INT

i
SEMICOLON

td
OP_ASSIGNMENT

container_of
BRACKET_O

dev
COMMA
STRUCT

test_thread_data
COMMA

sysdev
BRACKET_C
SEMICOLON

tsk
OP_ASSIGNMENT

threads
CORNER_BRACKET_O

td
MINUS
GREATER

sysdev
DOT

id
CORNER_BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

rttest_lock
BRACKET_C
SEMICOLON

curr
ASSIGN_PLUS

sprintf
BRACKET_O

curr
COMMA
STRING
COMMA

td
MINUS
GREATER

opcode
COMMA

td
MINUS
GREATER

event
COMMA

tsk
MINUS
GREATER

state
COMMA
BRACKET_O

MAX_RT_PRIO
MINUS
NUMBER
BRACKET_C
MINUS

tsk
MINUS
GREATER

prio
COMMA
BRACKET_O

MAX_RT_PRIO
MINUS
NUMBER
BRACKET_C
MINUS

tsk
MINUS
GREATER

normal_prio
COMMA

tsk
MINUS
GREATER

pi_blocked_on
COMMA

td
MINUS
GREATER

bkl
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT

MAX_RT_TEST_MUTEXES
MINUS
NUMBER
SEMICOLON

i
GR_EQ
NUMBER
SEMICOLON

i
MINUS
MINUS
BRACKET_C

curr
ASSIGN_PLUS

sprintf
BRACKET_O

curr
COMMA
STRING
COMMA

td
MINUS
GREATER

mutexes
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

rttest_lock
BRACKET_C
SEMICOLON

curr
ASSIGN_PLUS

sprintf
BRACKET_O

curr
COMMA
STRING
COMMA

tsk
COMMA

mutexes
CORNER_BRACKET_O

td
MINUS
GREATER

sysdev
DOT

id
CORNER_BRACKET_C
DOT

owner
BRACKET_C
SEMICOLON

return

curr
MINUS

buf
SEMICOLON
CURLY_BRACKET_C

static

SYSDEV_ATTR
BRACKET_O

status
COMMA
NUMBER
COMMA

sysfs_test_status
COMMA

NULL
BRACKET_C
SEMICOLON

static

SYSDEV_ATTR
BRACKET_O

command
COMMA
NUMBER
COMMA

NULL
COMMA

sysfs_test_command
BRACKET_C
SEMICOLON

static
STRUCT

sysdev_class

rttest_sysclass
OP_ASSIGNMENT
CURLY_BRACKET_O

set_kset_name
BRACKET_O
STRING
BRACKET_C
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

init_test_thread
BRACKET_O
TYPE_INT

id
BRACKET_C
CURLY_BRACKET_O

thread_data
CORNER_BRACKET_O

id
CORNER_BRACKET_C
DOT

sysdev
DOT

cls
OP_ASSIGNMENT
AMPERSANT

rttest_sysclass
SEMICOLON

thread_data
CORNER_BRACKET_O

id
CORNER_BRACKET_C
DOT

sysdev
DOT

id
OP_ASSIGNMENT

id
SEMICOLON

threads
CORNER_BRACKET_O

id
CORNER_BRACKET_C
OP_ASSIGNMENT

kthread_run
BRACKET_O

test_func
COMMA
AMPERSANT

thread_data
CORNER_BRACKET_O

id
CORNER_BRACKET_C
COMMA
STRING
COMMA

id
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

threads
CORNER_BRACKET_O

id
CORNER_BRACKET_C
BRACKET_C
BRACKET_C

return

PTR_ERR
BRACKET_O

threads
CORNER_BRACKET_O

id
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

return

sysdev_register
BRACKET_O
AMPERSANT

thread_data
CORNER_BRACKET_O

id
CORNER_BRACKET_C
DOT

sysdev
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

init_rttest
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
COMMA

i
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

rttest_lock
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

MAX_RT_TEST_MUTEXES
SEMICOLON

i
PLUS
PLUS
BRACKET_C

rt_mutex_init
BRACKET_O
AMPERSANT

mutexes
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

sysdev_class_register
BRACKET_O
AMPERSANT

rttest_sysclass
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

return

ret
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

MAX_RT_TEST_THREADS
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

init_test_thread
BRACKET_O

i
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C
BREAK
SEMICOLON

ret
OP_ASSIGNMENT

sysdev_create_file
BRACKET_O
AMPERSANT

thread_data
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sysdev
COMMA
AMPERSANT

attr_status
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C
BREAK
SEMICOLON

ret
OP_ASSIGNMENT

sysdev_create_file
BRACKET_O
AMPERSANT

thread_data
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sysdev
COMMA
AMPERSANT

attr_command
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

printk
BRACKET_O
STRING
COMMA

ret
QUESTION_MARK
STRING
COLON
STRING
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

device_initcall
BRACKET_O

init_rttest
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

void

down_read
BRACKET_O
STRUCT

rw_semaphore
MULT

sem
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

rwsem_acquire_read
BRACKET_O
AMPERSANT

sem
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

__down_read
BRACKET_O

sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

down_read
BRACKET_C
SEMICOLON
TYPE_INT

down_read_trylock
BRACKET_O
STRUCT

rw_semaphore
MULT

sem
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT

__down_read_trylock
BRACKET_O

sem
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
NUMBER
BRACKET_C

rwsem_acquire_read
BRACKET_O
AMPERSANT

sem
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

down_read_trylock
BRACKET_C
SEMICOLON

void

down_write
BRACKET_O
STRUCT

rw_semaphore
MULT

sem
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

rwsem_acquire
BRACKET_O
AMPERSANT

sem
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

__down_write
BRACKET_O

sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

down_write
BRACKET_C
SEMICOLON
TYPE_INT

down_write_trylock
BRACKET_O
STRUCT

rw_semaphore
MULT

sem
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT

__down_write_trylock
BRACKET_O

sem
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
NUMBER
BRACKET_C

rwsem_acquire
BRACKET_O
AMPERSANT

sem
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

down_write_trylock
BRACKET_C
SEMICOLON

void

up_read
BRACKET_O
STRUCT

rw_semaphore
MULT

sem
BRACKET_C
CURLY_BRACKET_O

rwsem_release
BRACKET_O
AMPERSANT

sem
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

__up_read
BRACKET_O

sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

up_read
BRACKET_C
SEMICOLON

void

up_write
BRACKET_O
STRUCT

rw_semaphore
MULT

sem
BRACKET_C
CURLY_BRACKET_O

rwsem_release
BRACKET_O
AMPERSANT

sem
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

__up_write
BRACKET_O

sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

up_write
BRACKET_C
SEMICOLON

void

downgrade_write
BRACKET_O
STRUCT

rw_semaphore
MULT

sem
BRACKET_C
CURLY_BRACKET_O

__downgrade_write
BRACKET_O

sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

downgrade_write
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_DEBUG_LOCK_ALLOC

void

down_read_nested
BRACKET_O
STRUCT

rw_semaphore
MULT

sem
COMMA
TYPE_INT

subclass
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

rwsem_acquire_read
BRACKET_O
AMPERSANT

sem
MINUS
GREATER

dep_map
COMMA

subclass
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

__down_read
BRACKET_O

sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

down_read_nested
BRACKET_C
SEMICOLON

void

down_read_non_owner
BRACKET_O
STRUCT

rw_semaphore
MULT

sem
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

__down_read
BRACKET_O

sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

down_read_non_owner
BRACKET_C
SEMICOLON

void

down_write_nested
BRACKET_O
STRUCT

rw_semaphore
MULT

sem
COMMA
TYPE_INT

subclass
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

rwsem_acquire
BRACKET_O
AMPERSANT

sem
MINUS
GREATER

dep_map
COMMA

subclass
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

__down_write_nested
BRACKET_O

sem
COMMA

subclass
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

down_write_nested
BRACKET_C
SEMICOLON

void

up_read_non_owner
BRACKET_O
STRUCT

rw_semaphore
MULT

sem
BRACKET_C
CURLY_BRACKET_O

__up_read
BRACKET_O

sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

up_read_non_owner
BRACKET_C
SEMICOLON
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

__attribute__
BRACKET_O
BRACKET_O

weak
BRACKET_C
BRACKET_C

sched_clock
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

jiffies
MULT
BRACKET_O
NUMBER
DIV

HZ
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

NICE_TO_PRIO
BRACKET_O

nice
BRACKET_C
BRACKET_O

MAX_RT_PRIO
PLUS
BRACKET_O

nice
BRACKET_C
PLUS
NUMBER
BRACKET_C
PP_DEFINE

PRIO_TO_NICE
BRACKET_O

prio
BRACKET_C
BRACKET_O
BRACKET_O

prio
BRACKET_C
MINUS

MAX_RT_PRIO
MINUS
NUMBER
BRACKET_C
PP_DEFINE

TASK_NICE
BRACKET_O

p
BRACKET_C

PRIO_TO_NICE
BRACKET_O
BRACKET_O

p
BRACKET_C
MINUS
GREATER

static_prio
BRACKET_C
PP_DEFINE

USER_PRIO
BRACKET_O

p
BRACKET_C
BRACKET_O
BRACKET_O

p
BRACKET_C
MINUS

MAX_RT_PRIO
BRACKET_C
PP_DEFINE

TASK_USER_PRIO
BRACKET_O

p
BRACKET_C

USER_PRIO
BRACKET_O
BRACKET_O

p
BRACKET_C
MINUS
GREATER

static_prio
BRACKET_C
PP_DEFINE

MAX_USER_PRIO
BRACKET_O

USER_PRIO
BRACKET_O

MAX_PRIO
BRACKET_C
BRACKET_C
PP_DEFINE

NS_TO_JIFFIES
BRACKET_O

TIME
BRACKET_C
BRACKET_O
BRACKET_O

TIME
BRACKET_C
DIV
BRACKET_O
NUMBER
DIV

HZ
BRACKET_C
BRACKET_C
PP_DEFINE

JIFFIES_TO_NS
BRACKET_O

TIME
BRACKET_C
BRACKET_O
BRACKET_O

TIME
BRACKET_C
MULT
BRACKET_O
NUMBER
DIV

HZ
BRACKET_C
BRACKET_C
PP_DEFINE

MIN_TIMESLICE

max
BRACKET_O
NUMBER
MULT

HZ
DIV
NUMBER
COMMA
NUMBER
BRACKET_C
PP_DEFINE

DEF_TIMESLICE
BRACKET_O
NUMBER
MULT

HZ
DIV
NUMBER
BRACKET_C
PP_DEFINE

ON_RUNQUEUE_WEIGHT
NUMBER
PP_DEFINE

CHILD_PENALTY
NUMBER
PP_DEFINE

PARENT_PENALTY
NUMBER
PP_DEFINE

EXIT_WEIGHT
NUMBER
PP_DEFINE

PRIO_BONUS_RATIO
NUMBER
PP_DEFINE

MAX_BONUS
BRACKET_O

MAX_USER_PRIO
MULT

PRIO_BONUS_RATIO
DIV
NUMBER
BRACKET_C
PP_DEFINE

INTERACTIVE_DELTA
NUMBER
PP_DEFINE

MAX_SLEEP_AVG
BRACKET_O

DEF_TIMESLICE
MULT

MAX_BONUS
BRACKET_C
PP_DEFINE

STARVATION_LIMIT
BRACKET_O

MAX_SLEEP_AVG
BRACKET_C
PP_DEFINE

NS_MAX_SLEEP_AVG
BRACKET_O

JIFFIES_TO_NS
BRACKET_O

MAX_SLEEP_AVG
BRACKET_C
BRACKET_C
PP_DEFINE

CURRENT_BONUS
BRACKET_O

p
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O

NS_TO_JIFFIES
BRACKET_O
BRACKET_O

p
BRACKET_C
MINUS
GREATER

sleep_avg
BRACKET_C
MULT

MAX_BONUS
DIV
BACKLASHED_NEWLINE

MAX_SLEEP_AVG
BRACKET_C
PP_DEFINE

GRANULARITY
BRACKET_O
NUMBER
MULT

HZ
DIV
NUMBER
QUESTION_MARK
COLON
NUMBER
BRACKET_C
PP_IFDEF

CONFIG_SMP
PP_DEFINE

TIMESLICE_GRANULARITY
BRACKET_O

p
BRACKET_C
BRACKET_O

GRANULARITY
MULT
BACKLASHED_NEWLINE
BRACKET_O
NUMBER
LESS
LESS
BRACKET_O
BRACKET_O
BRACKET_O

MAX_BONUS
MINUS

CURRENT_BONUS
BRACKET_O

p
BRACKET_C
BRACKET_C
QUESTION_MARK
COLON
NUMBER
BRACKET_C
MINUS
NUMBER
BRACKET_C
BRACKET_C
MULT
BACKLASHED_NEWLINE

num_online_cpus
BRACKET_O
BRACKET_C
BRACKET_C
PP_ELSE
PP_DEFINE

TIMESLICE_GRANULARITY
BRACKET_O

p
BRACKET_C
BRACKET_O

GRANULARITY
MULT
BACKLASHED_NEWLINE
BRACKET_O
NUMBER
LESS
LESS
BRACKET_O
BRACKET_O
BRACKET_O

MAX_BONUS
MINUS

CURRENT_BONUS
BRACKET_O

p
BRACKET_C
BRACKET_C
QUESTION_MARK
COLON
NUMBER
BRACKET_C
MINUS
NUMBER
BRACKET_C
BRACKET_C
BRACKET_C
PP_ENDIF
PP_DEFINE

SCALE
BRACKET_O

v1
COMMA

v1_max
COMMA

v2_max
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O

v1
BRACKET_C
MULT
BRACKET_O

v2_max
BRACKET_C
DIV
BRACKET_O

v1_max
BRACKET_C
PP_DEFINE

DELTA
BRACKET_O

p
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O

SCALE
BRACKET_O

TASK_NICE
BRACKET_O

p
BRACKET_C
PLUS
NUMBER
COMMA
NUMBER
COMMA

MAX_BONUS
BRACKET_C
MINUS
NUMBER
MULT

MAX_BONUS
DIV
NUMBER
PLUS
BACKLASHED_NEWLINE

INTERACTIVE_DELTA
BRACKET_C
PP_DEFINE

TASK_INTERACTIVE
BRACKET_O

p
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O
BRACKET_O

p
BRACKET_C
MINUS
GREATER

prio
LE_EQ
BRACKET_O

p
BRACKET_C
MINUS
GREATER

static_prio
MINUS

DELTA
BRACKET_O

p
BRACKET_C
BRACKET_C
PP_DEFINE

INTERACTIVE_SLEEP
BRACKET_O

p
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O

JIFFIES_TO_NS
BRACKET_O

MAX_SLEEP_AVG
MULT
BACKLASHED_NEWLINE
BRACKET_O

MAX_BONUS
DIV
NUMBER
PLUS

DELTA
BRACKET_O
BRACKET_O

p
BRACKET_C
BRACKET_C
PLUS
NUMBER
BRACKET_C
DIV

MAX_BONUS
MINUS
NUMBER
BRACKET_C
BRACKET_C
PP_DEFINE

TASK_PREEMPTS_CURR
BRACKET_O

p
COMMA

rq
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O
BRACKET_O

p
BRACKET_C
MINUS
GREATER

prio
LESS
BRACKET_O

rq
BRACKET_C
MINUS
GREATER

curr
MINUS
GREATER

prio
BRACKET_C
PP_DEFINE

SCALE_PRIO
BRACKET_O

x
COMMA

prio
BRACKET_C
BACKLASHED_NEWLINE

max
BRACKET_O

x
MULT
BRACKET_O

MAX_PRIO
MINUS

prio
BRACKET_C
DIV
BRACKET_O

MAX_USER_PRIO
DIV
NUMBER
BRACKET_C
COMMA

MIN_TIMESLICE
BRACKET_C

static
TYPE_UNSIGNED
TYPE_INT

static_prio_timeslice
BRACKET_O
TYPE_INT

static_prio
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

static_prio
LESS

NICE_TO_PRIO
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C

return

SCALE_PRIO
BRACKET_O

DEF_TIMESLICE
MULT
NUMBER
COMMA

static_prio
BRACKET_C
SEMICOLON
ELSE

return

SCALE_PRIO
BRACKET_O

DEF_TIMESLICE
COMMA

static_prio
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_SMP

static

inline

u32

sg_div_cpu_power
BRACKET_O
CONST
STRUCT

sched_group
MULT

sg
COMMA

u32

load
BRACKET_C
CURLY_BRACKET_O

return

reciprocal_divide
BRACKET_O

load
COMMA

sg
MINUS
GREATER

reciprocal_cpu_power
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

sg_inc_cpu_power
BRACKET_O
STRUCT

sched_group
MULT

sg
COMMA

u32

val
BRACKET_C
CURLY_BRACKET_O

sg
MINUS
GREATER

__cpu_power
ASSIGN_PLUS

val
SEMICOLON

sg
MINUS
GREATER

reciprocal_cpu_power
OP_ASSIGNMENT

reciprocal_value
BRACKET_O

sg
MINUS
GREATER

__cpu_power
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static

inline
TYPE_UNSIGNED
TYPE_INT

task_timeslice
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

return

static_prio_timeslice
BRACKET_O

p
MINUS
GREATER

static_prio
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

prio_array
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

nr_active
SEMICOLON

DECLARE_BITMAP
BRACKET_O

bitmap
COMMA

MAX_PRIO
PLUS
NUMBER
BRACKET_C
SEMICOLON
STRUCT

list_head

queue
CORNER_BRACKET_O

MAX_PRIO
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

rq
CURLY_BRACKET_O

spinlock_t

lock
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

nr_running
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

raw_weighted_load
SEMICOLON
PP_IFDEF

CONFIG_SMP
TYPE_UNSIGNED
TYPE_LONG

cpu_load
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_CHAR

idle_at_tick
SEMICOLON
PP_IFDEF

CONFIG_NO_HZ
TYPE_UNSIGNED
TYPE_CHAR

in_nohz_recently
SEMICOLON
PP_ENDIF
PP_ENDIF
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

nr_switches
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

nr_uninterruptible
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

expired_timestamp
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

most_recent_timestamp
SEMICOLON
STRUCT

task_struct
MULT

curr
COMMA
MULT

idle
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

next_balance
SEMICOLON
STRUCT

mm_struct
MULT

prev_mm
SEMICOLON
STRUCT

prio_array
MULT

active
COMMA
MULT

expired
COMMA

arrays
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

best_expired_prio
SEMICOLON

atomic_t

nr_iowait
SEMICOLON
PP_IFDEF

CONFIG_SMP
STRUCT

sched_domain
MULT

sd
SEMICOLON
TYPE_INT

active_balance
SEMICOLON
TYPE_INT

push_cpu
SEMICOLON
TYPE_INT

cpu
SEMICOLON
STRUCT

task_struct
MULT

migration_thread
SEMICOLON
STRUCT

list_head

migration_queue
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_SCHEDSTATS
STRUCT

sched_info

rq_sched_info
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

yld_exp_empty
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

yld_act_empty
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

yld_both_empty
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

yld_cnt
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

sched_switch
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

sched_cnt
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

sched_goidle
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

ttwu_cnt
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

ttwu_local
SEMICOLON
PP_ENDIF
STRUCT

lock_class_key

rq_lock_key
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

rq
COMMA

runqueues
BRACKET_C

____cacheline_aligned_in_smp
SEMICOLON

static

DEFINE_MUTEX
BRACKET_O

sched_hotcpu_mutex
BRACKET_C
SEMICOLON

static

inline
TYPE_INT

cpu_of
BRACKET_O
STRUCT

rq
MULT

rq
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_SMP

return

rq
MINUS
GREATER

cpu
SEMICOLON
PP_ELSE

return
NUMBER
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C
PP_DEFINE

for_each_domain
BRACKET_O

cpu
COMMA

__sd
BRACKET_C
BACKLASHED_NEWLINE
FOR
BRACKET_O

__sd
OP_ASSIGNMENT

rcu_dereference
BRACKET_O

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

sd
BRACKET_C
SEMICOLON

__sd
SEMICOLON

__sd
OP_ASSIGNMENT

__sd
MINUS
GREATER

parent
BRACKET_C
PP_DEFINE

cpu_rq
BRACKET_O

cpu
BRACKET_C
BRACKET_O
AMPERSANT

per_cpu
BRACKET_O

runqueues
COMMA
BRACKET_O

cpu
BRACKET_C
BRACKET_C
BRACKET_C
PP_DEFINE

this_rq
BRACKET_O
BRACKET_C
BRACKET_O
AMPERSANT

__get_cpu_var
BRACKET_O

runqueues
BRACKET_C
BRACKET_C
PP_DEFINE

task_rq
BRACKET_O

p
BRACKET_C

cpu_rq
BRACKET_O

task_cpu
BRACKET_O

p
BRACKET_C
BRACKET_C
PP_DEFINE

cpu_curr
BRACKET_O

cpu
BRACKET_C
BRACKET_O

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

curr
BRACKET_C
PP_IFNDEF

prepare_arch_switch
PP_DEFINE

prepare_arch_switch
BRACKET_O

next
BRACKET_C
DO
CURLY_BRACKET_O
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_ENDIF
PP_IFNDEF

finish_arch_switch
PP_DEFINE

finish_arch_switch
BRACKET_O

prev
BRACKET_C
DO
CURLY_BRACKET_O
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_ENDIF
PP_IFNDEF

__ARCH_WANT_UNLOCKED_CTXSW

static

inline
TYPE_INT

task_running
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

return

rq
MINUS
GREATER

curr
EQ

p
SEMICOLON
CURLY_BRACKET_C

static

inline

void

prepare_lock_switch
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
STRUCT

task_struct
MULT

next
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static

inline

void

finish_lock_switch
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
STRUCT

task_struct
MULT

prev
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_DEBUG_SPINLOCK

rq
MINUS
GREATER

lock
DOT

owner
OP_ASSIGNMENT

current
SEMICOLON
PP_ENDIF

spin_acquire
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
DOT

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_THIS_IP_
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static

inline
TYPE_INT

task_running
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_SMP

return

p
MINUS
GREATER

oncpu
SEMICOLON
PP_ELSE

return

rq
MINUS
GREATER

curr
EQ

p
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

static

inline

void

prepare_lock_switch
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
STRUCT

task_struct
MULT

next
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_SMP

next
MINUS
GREATER

oncpu
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF
PP_IFDEF

__ARCH_WANT_INTERRUPTS_ON_CTXSW

spin_unlock_irq
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
PP_ELSE

spin_unlock
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

static

inline

void

finish_lock_switch
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
STRUCT

task_struct
MULT

prev
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_SMP

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON

prev
MINUS
GREATER

oncpu
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF
PP_IFNDEF

__ARCH_WANT_INTERRUPTS_ON_CTXSW

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C
PP_ENDIF

static

inline
STRUCT

rq
MULT

__task_rq_lock
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C

__acquires
BRACKET_O

rq
MINUS
GREATER

lock
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
SEMICOLON

repeat_lock_task
COLON

rq
OP_ASSIGNMENT

task_rq
BRACKET_O

p
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

rq
NOT_EQ

task_rq
BRACKET_O

p
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

goto

repeat_lock_task
SEMICOLON
CURLY_BRACKET_C

return

rq
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

rq
MULT

task_rq_lock
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

flags
BRACKET_C

__acquires
BRACKET_O

rq
MINUS
GREATER

lock
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
SEMICOLON

repeat_lock_task
COLON

local_irq_save
BRACKET_O
MULT

flags
BRACKET_C
SEMICOLON

rq
OP_ASSIGNMENT

task_rq
BRACKET_O

p
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

rq
NOT_EQ

task_rq
BRACKET_O

p
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
COMMA
MULT

flags
BRACKET_C
SEMICOLON

goto

repeat_lock_task
SEMICOLON
CURLY_BRACKET_C

return

rq
SEMICOLON
CURLY_BRACKET_C

static

inline

void

__task_rq_unlock
BRACKET_O
STRUCT

rq
MULT

rq
BRACKET_C

__releases
BRACKET_O

rq
MINUS
GREATER

lock
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

task_rq_unlock
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

flags
BRACKET_C

__releases
BRACKET_O

rq
MINUS
GREATER

lock
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
COMMA
MULT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_SCHEDSTATS
PP_DEFINE

SCHEDSTAT_VERSION
NUMBER

static
TYPE_INT

show_schedstat
BRACKET_O
STRUCT

seq_file
MULT

seq
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
SEMICOLON

seq_printf
BRACKET_O

seq
COMMA
STRING
COMMA

SCHEDSTAT_VERSION
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

seq
COMMA
STRING
COMMA

jiffies
BRACKET_C
SEMICOLON

for_each_online_cpu
BRACKET_O

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SMP
STRUCT

sched_domain
MULT

sd
SEMICOLON
TYPE_INT

dcnt
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF

seq_printf
BRACKET_O

seq
COMMA
STRING
COMMA

cpu
COMMA

rq
MINUS
GREATER

yld_both_empty
COMMA

rq
MINUS
GREATER

yld_act_empty
COMMA

rq
MINUS
GREATER

yld_exp_empty
COMMA

rq
MINUS
GREATER

yld_cnt
COMMA

rq
MINUS
GREATER

sched_switch
COMMA

rq
MINUS
GREATER

sched_cnt
COMMA

rq
MINUS
GREATER

sched_goidle
COMMA

rq
MINUS
GREATER

ttwu_cnt
COMMA

rq
MINUS
GREATER

ttwu_local
COMMA

rq
MINUS
GREATER

rq_sched_info
DOT

cpu_time
COMMA

rq
MINUS
GREATER

rq_sched_info
DOT

run_delay
COMMA

rq
MINUS
GREATER

rq_sched_info
DOT

pcnt
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

seq
COMMA
STRING
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SMP

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

for_each_domain
BRACKET_O

cpu
COMMA

sd
BRACKET_C
CURLY_BRACKET_O

enum

idle_type

itype
SEMICOLON
TYPE_CHAR

mask_str
CORNER_BRACKET_O

NR_CPUS
CORNER_BRACKET_C
SEMICOLON

cpumask_scnprintf
BRACKET_O

mask_str
COMMA

NR_CPUS
COMMA

sd
MINUS
GREATER

span
BRACKET_C
SEMICOLON

seq_printf
BRACKET_O

seq
COMMA
STRING
COMMA

dcnt
PLUS
PLUS
COMMA

mask_str
BRACKET_C
SEMICOLON
FOR
BRACKET_O

itype
OP_ASSIGNMENT

SCHED_IDLE
SEMICOLON

itype
LESS

MAX_IDLE_TYPES
SEMICOLON

itype
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

seq_printf
BRACKET_O

seq
COMMA
STRING
STRING
COMMA

sd
MINUS
GREATER

lb_cnt
CORNER_BRACKET_O

itype
CORNER_BRACKET_C
COMMA

sd
MINUS
GREATER

lb_balanced
CORNER_BRACKET_O

itype
CORNER_BRACKET_C
COMMA

sd
MINUS
GREATER

lb_failed
CORNER_BRACKET_O

itype
CORNER_BRACKET_C
COMMA

sd
MINUS
GREATER

lb_imbalance
CORNER_BRACKET_O

itype
CORNER_BRACKET_C
COMMA

sd
MINUS
GREATER

lb_gained
CORNER_BRACKET_O

itype
CORNER_BRACKET_C
COMMA

sd
MINUS
GREATER

lb_hot_gained
CORNER_BRACKET_O

itype
CORNER_BRACKET_C
COMMA

sd
MINUS
GREATER

lb_nobusyq
CORNER_BRACKET_O

itype
CORNER_BRACKET_C
COMMA

sd
MINUS
GREATER

lb_nobusyg
CORNER_BRACKET_O

itype
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

seq_printf
BRACKET_O

seq
COMMA
STRING
STRING
COMMA

sd
MINUS
GREATER

alb_cnt
COMMA

sd
MINUS
GREATER

alb_failed
COMMA

sd
MINUS
GREATER

alb_pushed
COMMA

sd
MINUS
GREATER

sbe_cnt
COMMA

sd
MINUS
GREATER

sbe_balanced
COMMA

sd
MINUS
GREATER

sbe_pushed
COMMA

sd
MINUS
GREATER

sbf_cnt
COMMA

sd
MINUS
GREATER

sbf_balanced
COMMA

sd
MINUS
GREATER

sbf_pushed
COMMA

sd
MINUS
GREATER

ttwu_wake_remote
COMMA

sd
MINUS
GREATER

ttwu_move_affine
COMMA

sd
MINUS
GREATER

ttwu_move_balance
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

schedstat_open
BRACKET_O
STRUCT

inode
MULT

inode
COMMA
STRUCT

file
MULT

file
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

size
OP_ASSIGNMENT

PAGE_SIZE
MULT
BRACKET_O
NUMBER
PLUS

num_online_cpus
BRACKET_O
BRACKET_C
DIV
NUMBER
BRACKET_C
SEMICOLON
TYPE_CHAR
MULT

buf
OP_ASSIGNMENT

kmalloc
BRACKET_O

size
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
STRUCT

seq_file
MULT

m
SEMICOLON
TYPE_INT

res
SEMICOLON
IF
BRACKET_O
NOT

buf
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

res
OP_ASSIGNMENT

single_open
BRACKET_O

file
COMMA

show_schedstat
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

res
BRACKET_C
CURLY_BRACKET_O

m
OP_ASSIGNMENT

file
MINUS
GREATER

private_data
SEMICOLON

m
MINUS
GREATER

buf
OP_ASSIGNMENT

buf
SEMICOLON

m
MINUS
GREATER

size
OP_ASSIGNMENT

size
SEMICOLON
CURLY_BRACKET_C
ELSE

kfree
BRACKET_O

buf
BRACKET_C
SEMICOLON

return

res
SEMICOLON
CURLY_BRACKET_C
CONST
STRUCT

file_operations

proc_schedstat_operations
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

open
OP_ASSIGNMENT

schedstat_open
COMMA
DOT

read
OP_ASSIGNMENT

seq_read
COMMA
DOT

llseek
OP_ASSIGNMENT

seq_lseek
COMMA
DOT

release
OP_ASSIGNMENT

single_release
COMMA
CURLY_BRACKET_C
SEMICOLON

static

inline

void

rq_sched_info_arrive
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
TYPE_UNSIGNED
TYPE_LONG

delta_jiffies
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

rq
BRACKET_C
CURLY_BRACKET_O

rq
MINUS
GREATER

rq_sched_info
DOT

run_delay
ASSIGN_PLUS

delta_jiffies
SEMICOLON

rq
MINUS
GREATER

rq_sched_info
DOT

pcnt
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline

void

rq_sched_info_depart
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
TYPE_UNSIGNED
TYPE_LONG

delta_jiffies
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

rq
BRACKET_C

rq
MINUS
GREATER

rq_sched_info
DOT

cpu_time
ASSIGN_PLUS

delta_jiffies
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

schedstat_inc
BRACKET_O

rq
COMMA

field
BRACKET_C
DO
CURLY_BRACKET_O
BRACKET_O

rq
BRACKET_C
MINUS
GREATER

field
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

schedstat_add
BRACKET_O

rq
COMMA

field
COMMA

amt
BRACKET_C
DO
CURLY_BRACKET_O
BRACKET_O

rq
BRACKET_C
MINUS
GREATER

field
ASSIGN_PLUS
BRACKET_O

amt
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_ELSE

static

inline

void

rq_sched_info_arrive
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
TYPE_UNSIGNED
TYPE_LONG

delta_jiffies
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C

static

inline

void

rq_sched_info_depart
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
TYPE_UNSIGNED
TYPE_LONG

delta_jiffies
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_DEFINE

schedstat_inc
BRACKET_O

rq
COMMA

field
BRACKET_C
DO
CURLY_BRACKET_O
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

schedstat_add
BRACKET_O

rq
COMMA

field
COMMA

amt
BRACKET_C
DO
CURLY_BRACKET_O
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_ENDIF

static

inline
STRUCT

rq
MULT

this_rq_lock
BRACKET_O

void
BRACKET_C

__acquires
BRACKET_O

rq
MINUS
GREATER

lock
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

rq
OP_ASSIGNMENT

this_rq
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

return

rq
SEMICOLON
CURLY_BRACKET_C
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_SCHEDSTATS
BRACKET_C
OR
PP_DEFINED
BRACKET_O

CONFIG_TASK_DELAY_ACCT
BRACKET_C

static

inline

void

sched_info_dequeued
BRACKET_O
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O

t
MINUS
GREATER

sched_info
DOT

last_queued
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

sched_info_arrive
BRACKET_O
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

now
OP_ASSIGNMENT

jiffies
COMMA

delta_jiffies
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

t
MINUS
GREATER

sched_info
DOT

last_queued
BRACKET_C

delta_jiffies
OP_ASSIGNMENT

now
MINUS

t
MINUS
GREATER

sched_info
DOT

last_queued
SEMICOLON

sched_info_dequeued
BRACKET_O

t
BRACKET_C
SEMICOLON

t
MINUS
GREATER

sched_info
DOT

run_delay
ASSIGN_PLUS

delta_jiffies
SEMICOLON

t
MINUS
GREATER

sched_info
DOT

last_arrival
OP_ASSIGNMENT

now
SEMICOLON

t
MINUS
GREATER

sched_info
DOT

pcnt
PLUS
PLUS
SEMICOLON

rq_sched_info_arrive
BRACKET_O

task_rq
BRACKET_O

t
BRACKET_C
COMMA

delta_jiffies
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

sched_info_queued
BRACKET_O
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

sched_info_on
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C
IF
BRACKET_O
NOT

t
MINUS
GREATER

sched_info
DOT

last_queued
BRACKET_C

t
MINUS
GREATER

sched_info
DOT

last_queued
OP_ASSIGNMENT

jiffies
SEMICOLON
CURLY_BRACKET_C

static

inline

void

sched_info_depart
BRACKET_O
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

delta_jiffies
OP_ASSIGNMENT

jiffies
MINUS

t
MINUS
GREATER

sched_info
DOT

last_arrival
SEMICOLON

t
MINUS
GREATER

sched_info
DOT

cpu_time
ASSIGN_PLUS

delta_jiffies
SEMICOLON

rq_sched_info_depart
BRACKET_O

task_rq
BRACKET_O

t
BRACKET_C
COMMA

delta_jiffies
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

__sched_info_switch
BRACKET_O
STRUCT

task_struct
MULT

prev
COMMA
STRUCT

task_struct
MULT

next
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

task_rq
BRACKET_O

prev
BRACKET_C
SEMICOLON
IF
BRACKET_O

prev
NOT_EQ

rq
MINUS
GREATER

idle
BRACKET_C

sched_info_depart
BRACKET_O

prev
BRACKET_C
SEMICOLON
IF
BRACKET_O

next
NOT_EQ

rq
MINUS
GREATER

idle
BRACKET_C

sched_info_arrive
BRACKET_O

next
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

sched_info_switch
BRACKET_O
STRUCT

task_struct
MULT

prev
COMMA
STRUCT

task_struct
MULT

next
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

sched_info_on
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

__sched_info_switch
BRACKET_O

prev
COMMA

next
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ELSE
PP_DEFINE

sched_info_queued
BRACKET_O

t
BRACKET_C
DO
CURLY_BRACKET_O
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_DEFINE

sched_info_switch
BRACKET_O

t
COMMA

next
BRACKET_C
DO
CURLY_BRACKET_O
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_ENDIF

static

void

dequeue_task
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

prio_array
MULT

array
BRACKET_C
CURLY_BRACKET_O

array
MINUS
GREATER

nr_active
MINUS
MINUS
SEMICOLON

list_del
BRACKET_O
AMPERSANT

p
MINUS
GREATER

run_list
BRACKET_C
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O

array
MINUS
GREATER

queue
PLUS

p
MINUS
GREATER

prio
BRACKET_C
BRACKET_C

__clear_bit
BRACKET_O

p
MINUS
GREATER

prio
COMMA

array
MINUS
GREATER

bitmap
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

enqueue_task
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

prio_array
MULT

array
BRACKET_C
CURLY_BRACKET_O

sched_info_queued
BRACKET_O

p
BRACKET_C
SEMICOLON

list_add_tail
BRACKET_O
AMPERSANT

p
MINUS
GREATER

run_list
COMMA

array
MINUS
GREATER

queue
PLUS

p
MINUS
GREATER

prio
BRACKET_C
SEMICOLON

__set_bit
BRACKET_O

p
MINUS
GREATER

prio
COMMA

array
MINUS
GREATER

bitmap
BRACKET_C
SEMICOLON

array
MINUS
GREATER

nr_active
PLUS
PLUS
SEMICOLON

p
MINUS
GREATER

array
OP_ASSIGNMENT

array
SEMICOLON
CURLY_BRACKET_C

static

void

requeue_task
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

prio_array
MULT

array
BRACKET_C
CURLY_BRACKET_O

list_move_tail
BRACKET_O
AMPERSANT

p
MINUS
GREATER

run_list
COMMA

array
MINUS
GREATER

queue
PLUS

p
MINUS
GREATER

prio
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

enqueue_task_head
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

prio_array
MULT

array
BRACKET_C
CURLY_BRACKET_O

list_add
BRACKET_O
AMPERSANT

p
MINUS
GREATER

run_list
COMMA

array
MINUS
GREATER

queue
PLUS

p
MINUS
GREATER

prio
BRACKET_C
SEMICOLON

__set_bit
BRACKET_O

p
MINUS
GREATER

prio
COMMA

array
MINUS
GREATER

bitmap
BRACKET_C
SEMICOLON

array
MINUS
GREATER

nr_active
PLUS
PLUS
SEMICOLON

p
MINUS
GREATER

array
OP_ASSIGNMENT

array
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

__normal_prio
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

bonus
COMMA

prio
SEMICOLON

bonus
OP_ASSIGNMENT

CURRENT_BONUS
BRACKET_O

p
BRACKET_C
MINUS

MAX_BONUS
DIV
NUMBER
SEMICOLON

prio
OP_ASSIGNMENT

p
MINUS
GREATER

static_prio
MINUS

bonus
SEMICOLON
IF
BRACKET_O

prio
LESS

MAX_RT_PRIO
BRACKET_C

prio
OP_ASSIGNMENT

MAX_RT_PRIO
SEMICOLON
IF
BRACKET_O

prio
GREATER

MAX_PRIO
MINUS
NUMBER
BRACKET_C

prio
OP_ASSIGNMENT

MAX_PRIO
MINUS
NUMBER
SEMICOLON

return

prio
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

TIME_SLICE_NICE_ZERO

DEF_TIMESLICE
PP_DEFINE

LOAD_WEIGHT
BRACKET_O

lp
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O
BRACKET_O
BRACKET_O

lp
BRACKET_C
MULT

SCHED_LOAD_SCALE
BRACKET_C
DIV

TIME_SLICE_NICE_ZERO
BRACKET_C
PP_DEFINE

PRIO_TO_LOAD_WEIGHT
BRACKET_O

prio
BRACKET_C
BACKLASHED_NEWLINE

LOAD_WEIGHT
BRACKET_O

static_prio_timeslice
BRACKET_O

prio
BRACKET_C
BRACKET_C
PP_DEFINE

RTPRIO_TO_LOAD_WEIGHT
BRACKET_O

rp
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O

PRIO_TO_LOAD_WEIGHT
BRACKET_O

MAX_RT_PRIO
BRACKET_C
PLUS

LOAD_WEIGHT
BRACKET_O

rp
BRACKET_C
BRACKET_C

static

void

set_load_weight
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

has_rt_policy
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_SMP
IF
BRACKET_O

p
EQ

task_rq
BRACKET_O

p
BRACKET_C
MINUS
GREATER

migration_thread
BRACKET_C

p
MINUS
GREATER

load_weight
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE
PP_ENDIF

p
MINUS
GREATER

load_weight
OP_ASSIGNMENT

RTPRIO_TO_LOAD_WEIGHT
BRACKET_O

p
MINUS
GREATER

rt_priority
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

p
MINUS
GREATER

load_weight
OP_ASSIGNMENT

PRIO_TO_LOAD_WEIGHT
BRACKET_O

p
MINUS
GREATER

static_prio
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

inc_raw_weighted_load
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
CONST
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

rq
MINUS
GREATER

raw_weighted_load
ASSIGN_PLUS

p
MINUS
GREATER

load_weight
SEMICOLON
CURLY_BRACKET_C

static

inline

void

dec_raw_weighted_load
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
CONST
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

rq
MINUS
GREATER

raw_weighted_load
ASSIGN_MINUS

p
MINUS
GREATER

load_weight
SEMICOLON
CURLY_BRACKET_C

static

inline

void

inc_nr_running
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

rq
MULT

rq
BRACKET_C
CURLY_BRACKET_O

rq
MINUS
GREATER

nr_running
PLUS
PLUS
SEMICOLON

inc_raw_weighted_load
BRACKET_O

rq
COMMA

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

dec_nr_running
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

rq
MULT

rq
BRACKET_C
CURLY_BRACKET_O

rq
MINUS
GREATER

nr_running
MINUS
MINUS
SEMICOLON

dec_raw_weighted_load
BRACKET_O

rq
COMMA

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

normal_prio
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

prio
SEMICOLON
IF
BRACKET_O

has_rt_policy
BRACKET_O

p
BRACKET_C
BRACKET_C

prio
OP_ASSIGNMENT

MAX_RT_PRIO
MINUS
NUMBER
MINUS

p
MINUS
GREATER

rt_priority
SEMICOLON
ELSE

prio
OP_ASSIGNMENT

__normal_prio
BRACKET_O

p
BRACKET_C
SEMICOLON

return

prio
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

effective_prio
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

normal_prio
OP_ASSIGNMENT

normal_prio
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

rt_prio
BRACKET_O

p
MINUS
GREATER

prio
BRACKET_C
BRACKET_C

return

p
MINUS
GREATER

normal_prio
SEMICOLON

return

p
MINUS
GREATER

prio
SEMICOLON
CURLY_BRACKET_C

static

void

__activate_task
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

rq
MULT

rq
BRACKET_C
CURLY_BRACKET_O
STRUCT

prio_array
MULT

target
OP_ASSIGNMENT

rq
MINUS
GREATER

active
SEMICOLON
IF
BRACKET_O

batch_task
BRACKET_O

p
BRACKET_C
BRACKET_C

target
OP_ASSIGNMENT

rq
MINUS
GREATER

expired
SEMICOLON

enqueue_task
BRACKET_O

p
COMMA

target
BRACKET_C
SEMICOLON

inc_nr_running
BRACKET_O

p
COMMA

rq
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

__activate_idle_task
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

rq
MULT

rq
BRACKET_C
CURLY_BRACKET_O

enqueue_task_head
BRACKET_O

p
COMMA

rq
MINUS
GREATER

active
BRACKET_C
SEMICOLON

inc_nr_running
BRACKET_O

p
COMMA

rq
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

recalc_task_prio
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

now
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

sleep_time
OP_ASSIGNMENT

now
MINUS

p
MINUS
GREATER

timestamp
SEMICOLON
IF
BRACKET_O

batch_task
BRACKET_O

p
BRACKET_C
BRACKET_C

sleep_time
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

sleep_time
GREATER
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

ceiling
OP_ASSIGNMENT

INTERACTIVE_SLEEP
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

mm
AND

sleep_time
GREATER

ceiling
AND

p
MINUS
GREATER

sleep_avg
LESS

ceiling
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

sleep_avg
OP_ASSIGNMENT

ceiling
SEMICOLON

p
MINUS
GREATER

sleep_type
OP_ASSIGNMENT

SLEEP_NONINTERACTIVE
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

sleep_type
EQ

SLEEP_NONINTERACTIVE
AND

p
MINUS
GREATER

mm
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

sleep_avg
GR_EQ

ceiling
BRACKET_C

sleep_time
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE
IF
BRACKET_O

p
MINUS
GREATER

sleep_avg
PLUS

sleep_time
GR_EQ

ceiling
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

sleep_avg
OP_ASSIGNMENT

ceiling
SEMICOLON

sleep_time
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

p
MINUS
GREATER

sleep_avg
ASSIGN_PLUS

sleep_time
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

p
MINUS
GREATER

sleep_avg
GREATER

NS_MAX_SLEEP_AVG
BRACKET_C

p
MINUS
GREATER

sleep_avg
OP_ASSIGNMENT

NS_MAX_SLEEP_AVG
SEMICOLON
CURLY_BRACKET_C

return

effective_prio
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

activate_task
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

rq
MULT

rq
COMMA
TYPE_INT

local
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

now
SEMICOLON
IF
BRACKET_O

rt_task
BRACKET_O

p
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

now
OP_ASSIGNMENT

sched_clock
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SMP
IF
BRACKET_O
NOT

local
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

this_rq
OP_ASSIGNMENT

this_rq
BRACKET_O
BRACKET_C
SEMICOLON

now
OP_ASSIGNMENT
BRACKET_O

now
MINUS

this_rq
MINUS
GREATER

most_recent_timestamp
BRACKET_C
PLUS

rq
MINUS
GREATER

most_recent_timestamp
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
IF
BRACKET_O

unlikely
BRACKET_O

prof_on
EQ

SLEEP_PROFILING
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

state
EQ

TASK_UNINTERRUPTIBLE
BRACKET_C

profile_hits
BRACKET_O

SLEEP_PROFILING
COMMA
BRACKET_O

void
MULT
BRACKET_C

get_wchan
BRACKET_O

p
BRACKET_C
COMMA
BRACKET_O

now
MINUS

p
MINUS
GREATER

timestamp
BRACKET_C
GREATER
GREATER
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

p
MINUS
GREATER

prio
OP_ASSIGNMENT

recalc_task_prio
BRACKET_O

p
COMMA

now
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

sleep_type
EQ

SLEEP_NORMAL
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

in_interrupt
BRACKET_O
BRACKET_C
BRACKET_C

p
MINUS
GREATER

sleep_type
OP_ASSIGNMENT

SLEEP_INTERRUPTED
SEMICOLON
ELSE
CURLY_BRACKET_O

p
MINUS
GREATER

sleep_type
OP_ASSIGNMENT

SLEEP_INTERACTIVE
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

p
MINUS
GREATER

timestamp
OP_ASSIGNMENT

now
SEMICOLON

out
COLON

__activate_task
BRACKET_O

p
COMMA

rq
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

deactivate_task
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

rq
MULT

rq
BRACKET_C
CURLY_BRACKET_O

dec_nr_running
BRACKET_O

p
COMMA

rq
BRACKET_C
SEMICOLON

dequeue_task
BRACKET_O

p
COMMA

p
MINUS
GREATER

array
BRACKET_C
SEMICOLON

p
MINUS
GREATER

array
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_SMP
PP_IFNDEF

tsk_is_polling
PP_DEFINE

tsk_is_polling
BRACKET_O

t
BRACKET_C

test_tsk_thread_flag
BRACKET_O

t
COMMA

TIF_POLLING_NRFLAG
BRACKET_C
PP_ENDIF

static

void

resched_task
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
SEMICOLON

assert_spin_locked
BRACKET_O
AMPERSANT

task_rq
BRACKET_O

p
BRACKET_C
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

test_tsk_thread_flag
BRACKET_O

p
COMMA

TIF_NEED_RESCHED
BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON

set_tsk_thread_flag
BRACKET_O

p
COMMA

TIF_NEED_RESCHED
BRACKET_C
SEMICOLON

cpu
OP_ASSIGNMENT

task_cpu
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpu
EQ

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C

return
SEMICOLON

smp_mb
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tsk_is_polling
BRACKET_O

p
BRACKET_C
BRACKET_C

smp_send_reschedule
BRACKET_O

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

resched_cpu
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O
NOT

spin_trylock_irqsave
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
BRACKET_C

return
SEMICOLON

resched_task
BRACKET_O

cpu_curr
BRACKET_O

cpu
BRACKET_C
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static

inline

void

resched_task
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

assert_spin_locked
BRACKET_O
AMPERSANT

task_rq
BRACKET_O

p
BRACKET_C
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

set_tsk_need_resched
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

inline
TYPE_INT

task_curr
BRACKET_O
CONST
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

return

cpu_curr
BRACKET_O

task_cpu
BRACKET_O

p
BRACKET_C
BRACKET_C
EQ

p
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

weighted_cpuload
BRACKET_O
CONST
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O

return

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

raw_weighted_load
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_SMP
STRUCT

migration_req
CURLY_BRACKET_O
STRUCT

list_head

list
SEMICOLON
STRUCT

task_struct
MULT

task
SEMICOLON
TYPE_INT

dest_cpu
SEMICOLON
STRUCT

completion

done
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

migrate_task
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

dest_cpu
COMMA
STRUCT

migration_req
MULT

req
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

task_rq
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
MINUS
GREATER

array
AND
NOT

task_running
BRACKET_O

rq
COMMA

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

set_task_cpu
BRACKET_O

p
COMMA

dest_cpu
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

init_completion
BRACKET_O
AMPERSANT

req
MINUS
GREATER

done
BRACKET_C
SEMICOLON

req
MINUS
GREATER

task
OP_ASSIGNMENT

p
SEMICOLON

req
MINUS
GREATER

dest_cpu
OP_ASSIGNMENT

dest_cpu
SEMICOLON

list_add
BRACKET_O
AMPERSANT

req
MINUS
GREATER

list
COMMA
AMPERSANT

rq
MINUS
GREATER

migration_queue
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

wait_task_inactive
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON
STRUCT

prio_array
MULT

array
SEMICOLON
TYPE_INT

running
SEMICOLON

repeat
COLON

rq
OP_ASSIGNMENT

task_rq
BRACKET_O

p
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

task_running
BRACKET_O

rq
COMMA

p
BRACKET_C
BRACKET_C

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON

rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

running
OP_ASSIGNMENT

task_running
BRACKET_O

rq
COMMA

p
BRACKET_C
SEMICOLON

array
OP_ASSIGNMENT

p
MINUS
GREATER

array
SEMICOLON

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

running
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON

goto

repeat
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

array
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

yield
BRACKET_O
BRACKET_C
SEMICOLON

goto

repeat
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

kick_process
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

cpu
OP_ASSIGNMENT

task_cpu
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

cpu
NOT_EQ

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
AND

task_curr
BRACKET_O

p
BRACKET_C
BRACKET_C

smp_send_reschedule
BRACKET_O

cpu
BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_UNSIGNED
TYPE_LONG

source_load
BRACKET_O
TYPE_INT

cpu
COMMA
TYPE_INT

type
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

type
EQ
NUMBER
BRACKET_C

return

rq
MINUS
GREATER

raw_weighted_load
SEMICOLON

return

min
BRACKET_O

rq
MINUS
GREATER

cpu_load
CORNER_BRACKET_O

type
MINUS
NUMBER
CORNER_BRACKET_C
COMMA

rq
MINUS
GREATER

raw_weighted_load
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_UNSIGNED
TYPE_LONG

target_load
BRACKET_O
TYPE_INT

cpu
COMMA
TYPE_INT

type
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

type
EQ
NUMBER
BRACKET_C

return

rq
MINUS
GREATER

raw_weighted_load
SEMICOLON

return

max
BRACKET_O

rq
MINUS
GREATER

cpu_load
CORNER_BRACKET_O

type
MINUS
NUMBER
CORNER_BRACKET_C
COMMA

rq
MINUS
GREATER

raw_weighted_load
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_UNSIGNED
TYPE_LONG

cpu_avg_load_per_task
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

n
OP_ASSIGNMENT

rq
MINUS
GREATER

nr_running
SEMICOLON

return

n
QUESTION_MARK

rq
MINUS
GREATER

raw_weighted_load
DIV

n
COLON

SCHED_LOAD_SCALE
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

sched_group
MULT

find_idlest_group
BRACKET_O
STRUCT

sched_domain
MULT

sd
COMMA
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

this_cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_group
MULT

idlest
OP_ASSIGNMENT

NULL
COMMA
MULT

this
OP_ASSIGNMENT

NULL
COMMA
MULT

group
OP_ASSIGNMENT

sd
MINUS
GREATER

groups
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

min_load
OP_ASSIGNMENT

ULONG_MAX
COMMA

this_load
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

load_idx
OP_ASSIGNMENT

sd
MINUS
GREATER

forkexec_idx
SEMICOLON
TYPE_INT

imbalance
OP_ASSIGNMENT
NUMBER
PLUS
BRACKET_O

sd
MINUS
GREATER

imbalance_pct
MINUS
NUMBER
BRACKET_C
DIV
NUMBER
SEMICOLON
DO
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

load
COMMA

avg_load
SEMICOLON
TYPE_INT

local_group
SEMICOLON
TYPE_INT

i
SEMICOLON
IF
BRACKET_O
NOT

cpus_intersects
BRACKET_O

group
MINUS
GREATER

cpumask
COMMA

p
MINUS
GREATER

cpus_allowed
BRACKET_C
BRACKET_C

goto

nextgroup
SEMICOLON

local_group
OP_ASSIGNMENT

cpu_isset
BRACKET_O

this_cpu
COMMA

group
MINUS
GREATER

cpumask
BRACKET_C
SEMICOLON

avg_load
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_cpu_mask
BRACKET_O

i
COMMA

group
MINUS
GREATER

cpumask
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

local_group
BRACKET_C

load
OP_ASSIGNMENT

source_load
BRACKET_O

i
COMMA

load_idx
BRACKET_C
SEMICOLON
ELSE

load
OP_ASSIGNMENT

target_load
BRACKET_O

i
COMMA

load_idx
BRACKET_C
SEMICOLON

avg_load
ASSIGN_PLUS

load
SEMICOLON
CURLY_BRACKET_C

avg_load
OP_ASSIGNMENT

sg_div_cpu_power
BRACKET_O

group
COMMA

avg_load
MULT

SCHED_LOAD_SCALE
BRACKET_C
SEMICOLON
IF
BRACKET_O

local_group
BRACKET_C
CURLY_BRACKET_O

this_load
OP_ASSIGNMENT

avg_load
SEMICOLON

this
OP_ASSIGNMENT

group
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

avg_load
LESS

min_load
BRACKET_C
CURLY_BRACKET_O

min_load
OP_ASSIGNMENT

avg_load
SEMICOLON

idlest
OP_ASSIGNMENT

group
SEMICOLON
CURLY_BRACKET_C

nextgroup
COLON

group
OP_ASSIGNMENT

group
MINUS
GREATER

next
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

group
NOT_EQ

sd
MINUS
GREATER

groups
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

idlest
OR
NUMBER
MULT

this_load
LESS

imbalance
MULT

min_load
BRACKET_C

return

NULL
SEMICOLON

return

idlest
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

find_idlest_cpu
BRACKET_O
STRUCT

sched_group
MULT

group
COMMA
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

this_cpu
BRACKET_C
CURLY_BRACKET_O

cpumask_t

tmp
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

load
COMMA

min_load
OP_ASSIGNMENT

ULONG_MAX
SEMICOLON
TYPE_INT

idlest
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
TYPE_INT

i
SEMICOLON

cpus_and
BRACKET_O

tmp
COMMA

group
MINUS
GREATER

cpumask
COMMA

p
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON

for_each_cpu_mask
BRACKET_O

i
COMMA

tmp
BRACKET_C
CURLY_BRACKET_O

load
OP_ASSIGNMENT

weighted_cpuload
BRACKET_O

i
BRACKET_C
SEMICOLON
IF
BRACKET_O

load
LESS

min_load
OR
BRACKET_O

load
EQ

min_load
AND

i
EQ

this_cpu
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

min_load
OP_ASSIGNMENT

load
SEMICOLON

idlest
OP_ASSIGNMENT

i
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

idlest
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

find_idlest_cpu_nodomain
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

this_cpu
BRACKET_C
CURLY_BRACKET_O

cpumask_t

tmp
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

load
COMMA

min_load
OP_ASSIGNMENT

ULONG_MAX
SEMICOLON
TYPE_INT

idlest
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
TYPE_INT

i
SEMICOLON

cpus_and
BRACKET_O

tmp
COMMA

cpu_online_map
COMMA

p
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON

for_each_cpu_mask
BRACKET_O

i
COMMA

tmp
BRACKET_C
CURLY_BRACKET_O

load
OP_ASSIGNMENT

target_load
BRACKET_O

i
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

load
LESS

min_load
BRACKET_C
CURLY_BRACKET_O

min_load
OP_ASSIGNMENT

load
SEMICOLON

idlest
OP_ASSIGNMENT

i
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

idlest
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

affinity_load_balancing
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
TYPE_INT

sched_balance_self
BRACKET_O
TYPE_INT

cpu
COMMA
TYPE_INT

flag
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

t
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

sched_domain
MULT

tmp
COMMA
MULT

sd
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O

affinity_load_balancing
AND
NOT

cpus_full
BRACKET_O

t
MINUS
GREATER

cpus_allowed
BRACKET_C
BRACKET_C

return

find_idlest_cpu_nodomain
BRACKET_O

t
COMMA

cpu
BRACKET_C
SEMICOLON

for_each_domain
BRACKET_O

cpu
COMMA

tmp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

tmp
MINUS
GREATER

flags
AMPERSANT

SD_POWERSAVINGS_BALANCE
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

tmp
MINUS
GREATER

flags
AMPERSANT

flag
BRACKET_C

sd
OP_ASSIGNMENT

tmp
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

sd
BRACKET_C
CURLY_BRACKET_O

cpumask_t

span
SEMICOLON
STRUCT

sched_group
MULT

group
SEMICOLON
TYPE_INT

new_cpu
COMMA

weight
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

flag
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

sd
OP_ASSIGNMENT

sd
MINUS
GREATER

child
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

span
OP_ASSIGNMENT

sd
MINUS
GREATER

span
SEMICOLON

group
OP_ASSIGNMENT

find_idlest_group
BRACKET_O

sd
COMMA

t
COMMA

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

group
BRACKET_C
CURLY_BRACKET_O

sd
OP_ASSIGNMENT

sd
MINUS
GREATER

child
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

new_cpu
OP_ASSIGNMENT

find_idlest_cpu
BRACKET_O

group
COMMA

t
COMMA

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

new_cpu
EQ
MINUS
NUMBER
OR

new_cpu
EQ

cpu
BRACKET_C
CURLY_BRACKET_O

sd
OP_ASSIGNMENT

sd
MINUS
GREATER

child
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

cpu
OP_ASSIGNMENT

new_cpu
SEMICOLON

sd
OP_ASSIGNMENT

NULL
SEMICOLON

weight
OP_ASSIGNMENT

cpus_weight
BRACKET_O

span
BRACKET_C
SEMICOLON

for_each_domain
BRACKET_O

cpu
COMMA

tmp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

weight
LE_EQ

cpus_weight
BRACKET_O

tmp
MINUS
GREATER

span
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

tmp
MINUS
GREATER

flags
AMPERSANT

flag
BRACKET_C

sd
OP_ASSIGNMENT

tmp
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

cpu
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IF
PP_DEFINED
BRACKET_O

ARCH_HAS_SCHED_WAKE_IDLE
BRACKET_C

static
TYPE_INT

wake_idle
BRACKET_O
TYPE_INT

cpu
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

cpumask_t

tmp
SEMICOLON
STRUCT

sched_domain
MULT

sd
SEMICOLON
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

idle_cpu
BRACKET_O

cpu
BRACKET_C
OR

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

nr_running
GREATER
NUMBER
BRACKET_C

return

cpu
SEMICOLON

for_each_domain
BRACKET_O

cpu
COMMA

sd
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

SD_WAKE_IDLE
BRACKET_C
CURLY_BRACKET_O

cpus_and
BRACKET_O

tmp
COMMA

sd
MINUS
GREATER

span
COMMA

p
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON

for_each_cpu_mask
BRACKET_O

i
COMMA

tmp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

idle_cpu
BRACKET_O

i
BRACKET_C
BRACKET_C

return

i
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
BREAK
SEMICOLON
CURLY_BRACKET_C

return

cpu
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static

inline
TYPE_INT

wake_idle
BRACKET_O
TYPE_INT

cpu
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

return

cpu
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

try_to_wake_up
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_UNSIGNED
TYPE_INT

state
COMMA
TYPE_INT

sync
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
COMMA

this_cpu
COMMA

success
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_LONG

old_state
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON
PP_IFDEF

CONFIG_SMP
STRUCT

sched_domain
MULT

sd
COMMA
MULT

this_sd
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

load
COMMA

this_load
SEMICOLON
TYPE_INT

new_cpu
SEMICOLON
PP_ENDIF

rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

old_state
OP_ASSIGNMENT

p
MINUS
GREATER

state
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

old_state
AMPERSANT

state
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

array
BRACKET_C

goto

out_running
SEMICOLON

cpu
OP_ASSIGNMENT

task_cpu
BRACKET_O

p
BRACKET_C
SEMICOLON

this_cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SMP
IF
BRACKET_O

unlikely
BRACKET_O

task_running
BRACKET_O

rq
COMMA

p
BRACKET_C
BRACKET_C
BRACKET_C

goto

out_activate
SEMICOLON

new_cpu
OP_ASSIGNMENT

cpu
SEMICOLON

schedstat_inc
BRACKET_O

rq
COMMA

ttwu_cnt
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpu
EQ

this_cpu
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

rq
COMMA

ttwu_local
BRACKET_C
SEMICOLON

goto

out_set_cpu
SEMICOLON
CURLY_BRACKET_C

for_each_domain
BRACKET_O

this_cpu
COMMA

sd
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cpu_isset
BRACKET_O

cpu
COMMA

sd
MINUS
GREATER

span
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

sd
COMMA

ttwu_wake_remote
BRACKET_C
SEMICOLON

this_sd
OP_ASSIGNMENT

sd
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O
NOT

cpu_isset
BRACKET_O

this_cpu
COMMA

p
MINUS
GREATER

cpus_allowed
BRACKET_C
BRACKET_C
BRACKET_C

goto

out_set_cpu
SEMICOLON
IF
BRACKET_O

this_sd
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

idx
OP_ASSIGNMENT

this_sd
MINUS
GREATER

wake_idx
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

imbalance
SEMICOLON

imbalance
OP_ASSIGNMENT
NUMBER
PLUS
BRACKET_O

this_sd
MINUS
GREATER

imbalance_pct
MINUS
NUMBER
BRACKET_C
DIV
NUMBER
SEMICOLON

load
OP_ASSIGNMENT

source_load
BRACKET_O

cpu
COMMA

idx
BRACKET_C
SEMICOLON

this_load
OP_ASSIGNMENT

target_load
BRACKET_O

this_cpu
COMMA

idx
BRACKET_C
SEMICOLON

new_cpu
OP_ASSIGNMENT

this_cpu
SEMICOLON
IF
BRACKET_O

this_sd
MINUS
GREATER

flags
AMPERSANT

SD_WAKE_AFFINE
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

tl
OP_ASSIGNMENT

this_load
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

tl_per_task
SEMICOLON

tl_per_task
OP_ASSIGNMENT

cpu_avg_load_per_task
BRACKET_O

this_cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

sync
BRACKET_C

tl
ASSIGN_MINUS

current
MINUS
GREATER

load_weight
SEMICOLON
IF
BRACKET_O
BRACKET_O

tl
LE_EQ

load
AND

tl
PLUS

target_load
BRACKET_O

cpu
COMMA

idx
BRACKET_C
LE_EQ

tl_per_task
BRACKET_C
OR
NUMBER
MULT
BRACKET_O

tl
PLUS

p
MINUS
GREATER

load_weight
BRACKET_C
LE_EQ

imbalance
MULT

load
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

this_sd
COMMA

ttwu_move_affine
BRACKET_C
SEMICOLON

goto

out_set_cpu
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

this_sd
MINUS
GREATER

flags
AMPERSANT

SD_WAKE_BALANCE
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

imbalance
MULT

this_load
LE_EQ
NUMBER
MULT

load
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

this_sd
COMMA

ttwu_move_balance
BRACKET_C
SEMICOLON

goto

out_set_cpu
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

new_cpu
OP_ASSIGNMENT

cpu
SEMICOLON

out_set_cpu
COLON

new_cpu
OP_ASSIGNMENT

wake_idle
BRACKET_O

new_cpu
COMMA

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

new_cpu
NOT_EQ

cpu
BRACKET_C
CURLY_BRACKET_O

set_task_cpu
BRACKET_O

p
COMMA

new_cpu
BRACKET_C
SEMICOLON

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

old_state
OP_ASSIGNMENT

p
MINUS
GREATER

state
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

old_state
AMPERSANT

state
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

array
BRACKET_C

goto

out_running
SEMICOLON

this_cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON

cpu
OP_ASSIGNMENT

task_cpu
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

out_activate
COLON
PP_ENDIF
IF
BRACKET_O

old_state
EQ

TASK_UNINTERRUPTIBLE
BRACKET_C
CURLY_BRACKET_O

rq
MINUS
GREATER

nr_uninterruptible
MINUS
MINUS
SEMICOLON

p
MINUS
GREATER

sleep_type
OP_ASSIGNMENT

SLEEP_NONINTERACTIVE
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

old_state
AMPERSANT

TASK_NONINTERACTIVE
BRACKET_C

p
MINUS
GREATER

sleep_type
OP_ASSIGNMENT

SLEEP_NONINTERACTIVE
SEMICOLON

activate_task
BRACKET_O

p
COMMA

rq
COMMA

cpu
EQ

this_cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sync
OR

cpu
NOT_EQ

this_cpu
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

TASK_PREEMPTS_CURR
BRACKET_O

p
COMMA

rq
BRACKET_C
BRACKET_C

resched_task
BRACKET_O

rq
MINUS
GREATER

curr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

success
OP_ASSIGNMENT
NUMBER
SEMICOLON

out_running
COLON

p
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_RUNNING
SEMICOLON

out
COLON

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

return

success
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

fastcall

wake_up_process
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

return

try_to_wake_up
BRACKET_O

p
COMMA

TASK_STOPPED
LOGICAL_OR

TASK_TRACED
LOGICAL_OR

TASK_INTERRUPTIBLE
LOGICAL_OR

TASK_UNINTERRUPTIBLE
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

wake_up_process
BRACKET_C
SEMICOLON
TYPE_INT

fastcall

wake_up_state
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_UNSIGNED
TYPE_INT

state
BRACKET_C
CURLY_BRACKET_O

return

try_to_wake_up
BRACKET_O

p
COMMA

state
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

task_running_tick
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
SEMICOLON

void

fastcall

sched_fork
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

clone_flags
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
OP_ASSIGNMENT

get_cpu
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SMP

cpu
OP_ASSIGNMENT

sched_balance_self
BRACKET_O

cpu
COMMA

SD_BALANCE_FORK
BRACKET_C
SEMICOLON
PP_ENDIF

set_task_cpu
BRACKET_O

p
COMMA

cpu
BRACKET_C
SEMICOLON

p
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_RUNNING
SEMICOLON

p
MINUS
GREATER

prio
OP_ASSIGNMENT

current
MINUS
GREATER

normal_prio
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

p
MINUS
GREATER

run_list
BRACKET_C
SEMICOLON

p
MINUS
GREATER

array
OP_ASSIGNMENT

NULL
SEMICOLON
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_SCHEDSTATS
BRACKET_C
OR
PP_DEFINED
BRACKET_O

CONFIG_TASK_DELAY_ACCT
BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

sched_info_on
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

memset
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sched_info
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

p
MINUS
GREATER

sched_info
BRACKET_C
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_SMP
BRACKET_C
AND
PP_DEFINED
BRACKET_O

__ARCH_WANT_UNLOCKED_CTXSW
BRACKET_C

p
MINUS
GREATER

oncpu
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_PREEMPT

task_thread_info
BRACKET_O

p
BRACKET_C
MINUS
GREATER

preempt_count
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

p
MINUS
GREATER

time_slice
OP_ASSIGNMENT
BRACKET_O

current
MINUS
GREATER

time_slice
PLUS
NUMBER
BRACKET_C
GREATER
GREATER
NUMBER
SEMICOLON

p
MINUS
GREATER

first_time_slice
OP_ASSIGNMENT
NUMBER
SEMICOLON

current
MINUS
GREATER

time_slice
GREATER
GR_EQ
NUMBER
SEMICOLON

p
MINUS
GREATER

timestamp
OP_ASSIGNMENT

sched_clock
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

current
MINUS
GREATER

time_slice
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

time_slice
OP_ASSIGNMENT
NUMBER
SEMICOLON

task_running_tick
BRACKET_O

cpu_rq
BRACKET_O

cpu
BRACKET_C
COMMA

current
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

put_cpu
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

fastcall

wake_up_new_task
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_UNSIGNED
TYPE_LONG

clone_flags
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
COMMA
MULT

this_rq
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

this_cpu
COMMA

cpu
SEMICOLON

rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

p
MINUS
GREATER

state
NOT_EQ

TASK_RUNNING
BRACKET_C
SEMICOLON

this_cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON

cpu
OP_ASSIGNMENT

task_cpu
BRACKET_O

p
BRACKET_C
SEMICOLON

p
MINUS
GREATER

sleep_avg
OP_ASSIGNMENT

JIFFIES_TO_NS
BRACKET_O

CURRENT_BONUS
BRACKET_O

p
BRACKET_C
MULT

CHILD_PENALTY
DIV
NUMBER
MULT

MAX_SLEEP_AVG
DIV

MAX_BONUS
BRACKET_C
SEMICOLON

p
MINUS
GREATER

prio
OP_ASSIGNMENT

effective_prio
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

cpu
EQ

this_cpu
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT
BRACKET_O

clone_flags
AMPERSANT

CLONE_VM
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O
NOT

current
MINUS
GREATER

array
BRACKET_C
BRACKET_C

__activate_task
BRACKET_O

p
COMMA

rq
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O

p
MINUS
GREATER

prio
OP_ASSIGNMENT

current
MINUS
GREATER

prio
SEMICOLON

p
MINUS
GREATER

normal_prio
OP_ASSIGNMENT

current
MINUS
GREATER

normal_prio
SEMICOLON

list_add_tail
BRACKET_O
AMPERSANT

p
MINUS
GREATER

run_list
COMMA
AMPERSANT

current
MINUS
GREATER

run_list
BRACKET_C
SEMICOLON

p
MINUS
GREATER

array
OP_ASSIGNMENT

current
MINUS
GREATER

array
SEMICOLON

p
MINUS
GREATER

array
MINUS
GREATER

nr_active
PLUS
PLUS
SEMICOLON

inc_nr_running
BRACKET_O

p
COMMA

rq
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

set_need_resched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

__activate_task
BRACKET_O

p
COMMA

rq
BRACKET_C
SEMICOLON

this_rq
OP_ASSIGNMENT

rq
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

this_rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

this_cpu
BRACKET_C
SEMICOLON

p
MINUS
GREATER

timestamp
OP_ASSIGNMENT
BRACKET_O

p
MINUS
GREATER

timestamp
MINUS

this_rq
MINUS
GREATER

most_recent_timestamp
BRACKET_C
PLUS

rq
MINUS
GREATER

most_recent_timestamp
SEMICOLON

__activate_task
BRACKET_O

p
COMMA

rq
BRACKET_C
SEMICOLON
IF
BRACKET_O

TASK_PREEMPTS_CURR
BRACKET_O

p
COMMA

rq
BRACKET_C
BRACKET_C

resched_task
BRACKET_O

rq
MINUS
GREATER

curr
BRACKET_C
SEMICOLON

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

this_rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

current
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

sleep_avg
OP_ASSIGNMENT

JIFFIES_TO_NS
BRACKET_O

CURRENT_BONUS
BRACKET_O

current
BRACKET_C
MULT

PARENT_PENALTY
DIV
NUMBER
MULT

MAX_SLEEP_AVG
DIV

MAX_BONUS
BRACKET_C
SEMICOLON

task_rq_unlock
BRACKET_O

this_rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

fastcall

sched_exit
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON

rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

p
MINUS
GREATER

parent
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

first_time_slice
AND

task_cpu
BRACKET_O

p
BRACKET_C
EQ

task_cpu
BRACKET_O

p
MINUS
GREATER

parent
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

parent
MINUS
GREATER

time_slice
ASSIGN_PLUS

p
MINUS
GREATER

time_slice
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

parent
MINUS
GREATER

time_slice
GREATER

task_timeslice
BRACKET_O

p
BRACKET_C
BRACKET_C
BRACKET_C

p
MINUS
GREATER

parent
MINUS
GREATER

time_slice
OP_ASSIGNMENT

task_timeslice
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

p
MINUS
GREATER

sleep_avg
LESS

p
MINUS
GREATER

parent
MINUS
GREATER

sleep_avg
BRACKET_C

p
MINUS
GREATER

parent
MINUS
GREATER

sleep_avg
OP_ASSIGNMENT

p
MINUS
GREATER

parent
MINUS
GREATER

sleep_avg
DIV
BRACKET_O

EXIT_WEIGHT
PLUS
NUMBER
BRACKET_C
MULT

EXIT_WEIGHT
PLUS

p
MINUS
GREATER

sleep_avg
DIV
BRACKET_O

EXIT_WEIGHT
PLUS
NUMBER
BRACKET_C
SEMICOLON

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

prepare_task_switch
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
STRUCT

task_struct
MULT

next
BRACKET_C
CURLY_BRACKET_O

prepare_lock_switch
BRACKET_O

rq
COMMA

next
BRACKET_C
SEMICOLON

prepare_arch_switch
BRACKET_O

next
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

finish_task_switch
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
STRUCT

task_struct
MULT

prev
BRACKET_C

__releases
BRACKET_O

rq
MINUS
GREATER

lock
BRACKET_C
CURLY_BRACKET_O
STRUCT

mm_struct
MULT

mm
OP_ASSIGNMENT

rq
MINUS
GREATER

prev_mm
SEMICOLON
TYPE_LONG

prev_state
SEMICOLON

rq
MINUS
GREATER

prev_mm
OP_ASSIGNMENT

NULL
SEMICOLON

prev_state
OP_ASSIGNMENT

prev
MINUS
GREATER

state
SEMICOLON

finish_arch_switch
BRACKET_O

prev
BRACKET_C
SEMICOLON

finish_lock_switch
BRACKET_O

rq
COMMA

prev
BRACKET_C
SEMICOLON
IF
BRACKET_O

mm
BRACKET_C

mmdrop
BRACKET_O

mm
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

prev_state
EQ

TASK_DEAD
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kprobe_flush_task
BRACKET_O

prev
BRACKET_C
SEMICOLON

put_task_struct
BRACKET_O

prev
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

asmlinkage

void

schedule_tail
BRACKET_O
STRUCT

task_struct
MULT

prev
BRACKET_C

__releases
BRACKET_O

rq
MINUS
GREATER

lock
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

this_rq
BRACKET_O
BRACKET_C
SEMICOLON

finish_task_switch
BRACKET_O

rq
COMMA

prev
BRACKET_C
SEMICOLON
PP_IFDEF

__ARCH_WANT_UNLOCKED_CTXSW

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
PP_ENDIF
IF
BRACKET_O

current
MINUS
GREATER

set_child_tid
BRACKET_C

put_user
BRACKET_O

current
MINUS
GREATER

pid
COMMA

current
MINUS
GREATER

set_child_tid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
STRUCT

task_struct
MULT

context_switch
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
STRUCT

task_struct
MULT

prev
COMMA
STRUCT

task_struct
MULT

next
BRACKET_C
CURLY_BRACKET_O
STRUCT

mm_struct
MULT

mm
OP_ASSIGNMENT

next
MINUS
GREATER

mm
SEMICOLON
STRUCT

mm_struct
MULT

oldmm
OP_ASSIGNMENT

prev
MINUS
GREATER

active_mm
SEMICOLON

arch_enter_lazy_cpu_mode
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

mm
BRACKET_C
CURLY_BRACKET_O

next
MINUS
GREATER

active_mm
OP_ASSIGNMENT

oldmm
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

oldmm
MINUS
GREATER

mm_count
BRACKET_C
SEMICOLON

enter_lazy_tlb
BRACKET_O

oldmm
COMMA

next
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

switch_mm
BRACKET_O

oldmm
COMMA

mm
COMMA

next
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

prev
MINUS
GREATER

mm
BRACKET_C
CURLY_BRACKET_O

prev
MINUS
GREATER

active_mm
OP_ASSIGNMENT

NULL
SEMICOLON

WARN_ON
BRACKET_O

rq
MINUS
GREATER

prev_mm
BRACKET_C
SEMICOLON

rq
MINUS
GREATER

prev_mm
OP_ASSIGNMENT

oldmm
SEMICOLON
CURLY_BRACKET_C
PP_IFNDEF

__ARCH_WANT_UNLOCKED_CTXSW

spin_release
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
DOT

dep_map
COMMA
NUMBER
COMMA

_THIS_IP_
BRACKET_C
SEMICOLON
PP_ENDIF

switch_to
BRACKET_O

prev
COMMA

next
COMMA

prev
BRACKET_C
SEMICOLON

return

prev
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

nr_running
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

i
COMMA

sum
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_online_cpu
BRACKET_O

i
BRACKET_C

sum
ASSIGN_PLUS

cpu_rq
BRACKET_O

i
BRACKET_C
MINUS
GREATER

nr_running
SEMICOLON

return

sum
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

nr_uninterruptible
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

i
COMMA

sum
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_possible_cpu
BRACKET_O

i
BRACKET_C

sum
ASSIGN_PLUS

cpu_rq
BRACKET_O

i
BRACKET_C
MINUS
GREATER

nr_uninterruptible
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C

sum
LESS
NUMBER
BRACKET_C
BRACKET_C

sum
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

sum
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

nr_context_switches
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

sum
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_possible_cpu
BRACKET_O

i
BRACKET_C

sum
ASSIGN_PLUS

cpu_rq
BRACKET_O

i
BRACKET_C
MINUS
GREATER

nr_switches
SEMICOLON

return

sum
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

nr_iowait
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

i
COMMA

sum
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_possible_cpu
BRACKET_O

i
BRACKET_C

sum
ASSIGN_PLUS

atomic_read
BRACKET_O
AMPERSANT

cpu_rq
BRACKET_O

i
BRACKET_C
MINUS
GREATER

nr_iowait
BRACKET_C
SEMICOLON

return

sum
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

nr_active
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

i
COMMA

running
OP_ASSIGNMENT
NUMBER
COMMA

uninterruptible
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_online_cpu
BRACKET_O

i
BRACKET_C
CURLY_BRACKET_O

running
ASSIGN_PLUS

cpu_rq
BRACKET_O

i
BRACKET_C
MINUS
GREATER

nr_running
SEMICOLON

uninterruptible
ASSIGN_PLUS

cpu_rq
BRACKET_O

i
BRACKET_C
MINUS
GREATER

nr_uninterruptible
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C

uninterruptible
LESS
NUMBER
BRACKET_C
BRACKET_C

uninterruptible
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

running
PLUS

uninterruptible
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_SMP

static

inline
TYPE_INT

task_hot
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

now
COMMA
STRUCT

sched_domain
MULT

sd
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O
TYPE_LONG
TYPE_LONG
BRACKET_C
BRACKET_O

now
MINUS

p
MINUS
GREATER

last_ran
BRACKET_C
LESS
BRACKET_O
TYPE_LONG
TYPE_LONG
BRACKET_C

sd
MINUS
GREATER

cache_hot_time
SEMICOLON
CURLY_BRACKET_C

static

void

double_rq_lock
BRACKET_O
STRUCT

rq
MULT

rq1
COMMA
STRUCT

rq
MULT

rq2
BRACKET_C

__acquires
BRACKET_O

rq1
MINUS
GREATER

lock
BRACKET_C

__acquires
BRACKET_O

rq2
MINUS
GREATER

lock
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

rq1
EQ

rq2
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

rq1
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

__acquire
BRACKET_O

rq2
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

rq1
LESS

rq2
BRACKET_C
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

rq1
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

rq2
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

spin_lock
BRACKET_O
AMPERSANT

rq2
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

rq1
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

double_rq_unlock
BRACKET_O
STRUCT

rq
MULT

rq1
COMMA
STRUCT

rq
MULT

rq2
BRACKET_C

__releases
BRACKET_O

rq1
MINUS
GREATER

lock
BRACKET_C

__releases
BRACKET_O

rq2
MINUS
GREATER

lock
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

rq1
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

rq1
NOT_EQ

rq2
BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

rq2
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
ELSE

__release
BRACKET_O

rq2
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

double_lock_balance
BRACKET_O
STRUCT

rq
MULT

this_rq
COMMA
STRUCT

rq
MULT

busiest
BRACKET_C

__releases
BRACKET_O

this_rq
MINUS
GREATER

lock
BRACKET_C

__acquires
BRACKET_O

busiest
MINUS
GREATER

lock
BRACKET_C

__acquires
BRACKET_O

this_rq
MINUS
GREATER

lock
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

this_rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O
NOT

spin_trylock
BRACKET_O
AMPERSANT

busiest
MINUS
GREATER

lock
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

busiest
LESS

this_rq
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

this_rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

busiest
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

this_rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

spin_lock
BRACKET_O
AMPERSANT

busiest
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

sched_migrate_task
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

dest_cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

migration_req

req
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON

rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cpu_isset
BRACKET_O

dest_cpu
COMMA

p
MINUS
GREATER

cpus_allowed
BRACKET_C
OR

unlikely
BRACKET_O

cpu_is_offline
BRACKET_O

dest_cpu
BRACKET_C
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

migrate_task
BRACKET_O

p
COMMA

dest_cpu
COMMA
AMPERSANT

req
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

mt
OP_ASSIGNMENT

rq
MINUS
GREATER

migration_thread
SEMICOLON

get_task_struct
BRACKET_O

mt
BRACKET_C
SEMICOLON

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

wake_up_process
BRACKET_O

mt
BRACKET_C
SEMICOLON

put_task_struct
BRACKET_O

mt
BRACKET_C
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

req
DOT

done
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

out
COLON

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

sched_exec
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

new_cpu
COMMA

this_cpu
OP_ASSIGNMENT

get_cpu
BRACKET_O
BRACKET_C
SEMICOLON

new_cpu
OP_ASSIGNMENT

sched_balance_self
BRACKET_O

this_cpu
COMMA

SD_BALANCE_EXEC
BRACKET_C
SEMICOLON

put_cpu
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

new_cpu
NOT_EQ

this_cpu
BRACKET_C

sched_migrate_task
BRACKET_O

current
COMMA

new_cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

pull_task
BRACKET_O
STRUCT

rq
MULT

src_rq
COMMA
STRUCT

prio_array
MULT

src_array
COMMA
STRUCT

task_struct
MULT

p
COMMA
STRUCT

rq
MULT

this_rq
COMMA
STRUCT

prio_array
MULT

this_array
COMMA
TYPE_INT

this_cpu
BRACKET_C
CURLY_BRACKET_O

dequeue_task
BRACKET_O

p
COMMA

src_array
BRACKET_C
SEMICOLON

dec_nr_running
BRACKET_O

p
COMMA

src_rq
BRACKET_C
SEMICOLON

set_task_cpu
BRACKET_O

p
COMMA

this_cpu
BRACKET_C
SEMICOLON

inc_nr_running
BRACKET_O

p
COMMA

this_rq
BRACKET_C
SEMICOLON

enqueue_task
BRACKET_O

p
COMMA

this_array
BRACKET_C
SEMICOLON

p
MINUS
GREATER

timestamp
OP_ASSIGNMENT
BRACKET_O

p
MINUS
GREATER

timestamp
MINUS

src_rq
MINUS
GREATER

most_recent_timestamp
BRACKET_C
PLUS

this_rq
MINUS
GREATER

most_recent_timestamp
SEMICOLON
IF
BRACKET_O

TASK_PREEMPTS_CURR
BRACKET_O

p
COMMA

this_rq
BRACKET_C
BRACKET_C

resched_task
BRACKET_O

this_rq
MINUS
GREATER

curr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

can_migrate_task
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

rq
MULT

rq
COMMA
TYPE_INT

this_cpu
COMMA
STRUCT

sched_domain
MULT

sd
COMMA

enum

idle_type

idle
COMMA
TYPE_INT
MULT

all_pinned
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

cpu_isset
BRACKET_O

this_cpu
COMMA

p
MINUS
GREATER

cpus_allowed
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
MULT

all_pinned
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

task_running
BRACKET_O

rq
COMMA

p
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

sd
MINUS
GREATER

nr_balance_failed
GREATER

sd
MINUS
GREATER

cache_nice_tries
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_SCHEDSTATS
IF
BRACKET_O

task_hot
BRACKET_O

p
COMMA

rq
MINUS
GREATER

most_recent_timestamp
COMMA

sd
BRACKET_C
BRACKET_C

schedstat_inc
BRACKET_O

sd
COMMA

lb_hot_gained
CORNER_BRACKET_O

idle
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
PP_ENDIF

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

task_hot
BRACKET_O

p
COMMA

rq
MINUS
GREATER

most_recent_timestamp
COMMA

sd
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

rq_best_prio
BRACKET_O

rq
BRACKET_C

min
BRACKET_O
BRACKET_O

rq
BRACKET_C
MINUS
GREATER

curr
MINUS
GREATER

prio
COMMA
BRACKET_O

rq
BRACKET_C
MINUS
GREATER

best_expired_prio
BRACKET_C

static
TYPE_INT

move_tasks
BRACKET_O
STRUCT

rq
MULT

this_rq
COMMA
TYPE_INT

this_cpu
COMMA
STRUCT

rq
MULT

busiest
COMMA
TYPE_UNSIGNED
TYPE_LONG

max_nr_move
COMMA
TYPE_UNSIGNED
TYPE_LONG

max_load_move
COMMA
STRUCT

sched_domain
MULT

sd
COMMA

enum

idle_type

idle
COMMA
TYPE_INT
MULT

all_pinned
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

idx
COMMA

pulled
OP_ASSIGNMENT
NUMBER
COMMA

pinned
OP_ASSIGNMENT
NUMBER
COMMA

this_best_prio
COMMA

best_prio
COMMA

best_prio_seen
COMMA

skip_for_load
SEMICOLON
STRUCT

prio_array
MULT

array
COMMA
MULT

dst_array
SEMICOLON
STRUCT

list_head
MULT

head
COMMA
MULT

curr
SEMICOLON
STRUCT

task_struct
MULT

tmp
SEMICOLON
TYPE_LONG

rem_load_move
SEMICOLON
IF
BRACKET_O

max_nr_move
EQ
NUMBER
OR

max_load_move
EQ
NUMBER
BRACKET_C

goto

out
SEMICOLON

rem_load_move
OP_ASSIGNMENT

max_load_move
SEMICOLON

pinned
OP_ASSIGNMENT
NUMBER
SEMICOLON

this_best_prio
OP_ASSIGNMENT

rq_best_prio
BRACKET_O

this_rq
BRACKET_C
SEMICOLON

best_prio
OP_ASSIGNMENT

rq_best_prio
BRACKET_O

busiest
BRACKET_C
SEMICOLON

best_prio_seen
OP_ASSIGNMENT

best_prio
EQ

busiest
MINUS
GREATER

curr
MINUS
GREATER

prio
SEMICOLON
IF
BRACKET_O

busiest
MINUS
GREATER

expired
MINUS
GREATER

nr_active
BRACKET_C
CURLY_BRACKET_O

array
OP_ASSIGNMENT

busiest
MINUS
GREATER

expired
SEMICOLON

dst_array
OP_ASSIGNMENT

this_rq
MINUS
GREATER

expired
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

array
OP_ASSIGNMENT

busiest
MINUS
GREATER

active
SEMICOLON

dst_array
OP_ASSIGNMENT

this_rq
MINUS
GREATER

active
SEMICOLON
CURLY_BRACKET_C

new_array
COLON

idx
OP_ASSIGNMENT
NUMBER
SEMICOLON

skip_bitmap
COLON
IF
BRACKET_O
NOT

idx
BRACKET_C

idx
OP_ASSIGNMENT

sched_find_first_bit
BRACKET_O

array
MINUS
GREATER

bitmap
BRACKET_C
SEMICOLON
ELSE

idx
OP_ASSIGNMENT

find_next_bit
BRACKET_O

array
MINUS
GREATER

bitmap
COMMA

MAX_PRIO
COMMA

idx
BRACKET_C
SEMICOLON
IF
BRACKET_O

idx
GR_EQ

MAX_PRIO
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

array
EQ

busiest
MINUS
GREATER

expired
AND

busiest
MINUS
GREATER

active
MINUS
GREATER

nr_active
BRACKET_C
CURLY_BRACKET_O

array
OP_ASSIGNMENT

busiest
MINUS
GREATER

active
SEMICOLON

dst_array
OP_ASSIGNMENT

this_rq
MINUS
GREATER

active
SEMICOLON

goto

new_array
SEMICOLON
CURLY_BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

head
OP_ASSIGNMENT

array
MINUS
GREATER

queue
PLUS

idx
SEMICOLON

curr
OP_ASSIGNMENT

head
MINUS
GREATER

prev
SEMICOLON

skip_queue
COLON

tmp
OP_ASSIGNMENT

list_entry
BRACKET_O

curr
COMMA
STRUCT

task_struct
COMMA

run_list
BRACKET_C
SEMICOLON

curr
OP_ASSIGNMENT

curr
MINUS
GREATER

prev
SEMICOLON

skip_for_load
OP_ASSIGNMENT

tmp
MINUS
GREATER

load_weight
GREATER

rem_load_move
SEMICOLON
IF
BRACKET_O

skip_for_load
AND

idx
LESS

this_best_prio
BRACKET_C

skip_for_load
OP_ASSIGNMENT
NOT

best_prio_seen
AND

idx
EQ

best_prio
SEMICOLON
IF
BRACKET_O

skip_for_load
OR
NOT

can_migrate_task
BRACKET_O

tmp
COMMA

busiest
COMMA

this_cpu
COMMA

sd
COMMA

idle
COMMA
AMPERSANT

pinned
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

best_prio_seen
LOGICAL_OR
OP_ASSIGNMENT

idx
EQ

best_prio
SEMICOLON
IF
BRACKET_O

curr
NOT_EQ

head
BRACKET_C

goto

skip_queue
SEMICOLON

idx
PLUS
PLUS
SEMICOLON

goto

skip_bitmap
SEMICOLON
CURLY_BRACKET_C

pull_task
BRACKET_O

busiest
COMMA

array
COMMA

tmp
COMMA

this_rq
COMMA

dst_array
COMMA

this_cpu
BRACKET_C
SEMICOLON

pulled
PLUS
PLUS
SEMICOLON

rem_load_move
ASSIGN_MINUS

tmp
MINUS
GREATER

load_weight
SEMICOLON
IF
BRACKET_O

pulled
LESS

max_nr_move
AND

rem_load_move
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

idx
LESS

this_best_prio
BRACKET_C

this_best_prio
OP_ASSIGNMENT

idx
SEMICOLON
IF
BRACKET_O

curr
NOT_EQ

head
BRACKET_C

goto

skip_queue
SEMICOLON

idx
PLUS
PLUS
SEMICOLON

goto

skip_bitmap
SEMICOLON
CURLY_BRACKET_C

out
COLON

schedstat_add
BRACKET_O

sd
COMMA

lb_gained
CORNER_BRACKET_O

idle
CORNER_BRACKET_C
COMMA

pulled
BRACKET_C
SEMICOLON
IF
BRACKET_O

all_pinned
BRACKET_C
MULT

all_pinned
OP_ASSIGNMENT

pinned
SEMICOLON

return

pulled
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

sched_group
MULT

find_busiest_group
BRACKET_O
STRUCT

sched_domain
MULT

sd
COMMA
TYPE_INT

this_cpu
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

imbalance
COMMA

enum

idle_type

idle
COMMA
TYPE_INT
MULT

sd_idle
COMMA

cpumask_t
MULT

cpus
COMMA
TYPE_INT
MULT

balance
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_group
MULT

busiest
OP_ASSIGNMENT

NULL
COMMA
MULT

this
OP_ASSIGNMENT

NULL
COMMA
MULT

group
OP_ASSIGNMENT

sd
MINUS
GREATER

groups
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

max_load
COMMA

avg_load
COMMA

total_load
COMMA

this_load
COMMA

total_pwr
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

max_pull
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

busiest_load_per_task
COMMA

busiest_nr_running
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

this_load_per_task
COMMA

this_nr_running
SEMICOLON
TYPE_INT

load_idx
SEMICOLON
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_SCHED_MC
BRACKET_C
OR
PP_DEFINED
BRACKET_O

CONFIG_SCHED_SMT
BRACKET_C
TYPE_INT

power_savings_balance
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

leader_nr_running
OP_ASSIGNMENT
NUMBER
COMMA

min_load_per_task
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

min_nr_running
OP_ASSIGNMENT

ULONG_MAX
SEMICOLON
STRUCT

sched_group
MULT

group_min
OP_ASSIGNMENT

NULL
COMMA
MULT

group_leader
OP_ASSIGNMENT

NULL
SEMICOLON
PP_ENDIF

max_load
OP_ASSIGNMENT

this_load
OP_ASSIGNMENT

total_load
OP_ASSIGNMENT

total_pwr
OP_ASSIGNMENT
NUMBER
SEMICOLON

busiest_load_per_task
OP_ASSIGNMENT

busiest_nr_running
OP_ASSIGNMENT
NUMBER
SEMICOLON

this_load_per_task
OP_ASSIGNMENT

this_nr_running
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

idle
EQ

NOT_IDLE
BRACKET_C

load_idx
OP_ASSIGNMENT

sd
MINUS
GREATER

busy_idx
SEMICOLON
ELSE
IF
BRACKET_O

idle
EQ

NEWLY_IDLE
BRACKET_C

load_idx
OP_ASSIGNMENT

sd
MINUS
GREATER

newidle_idx
SEMICOLON
ELSE

load_idx
OP_ASSIGNMENT

sd
MINUS
GREATER

idle_idx
SEMICOLON
DO
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

load
COMMA

group_capacity
SEMICOLON
TYPE_INT

local_group
SEMICOLON
TYPE_INT

i
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

balance_cpu
OP_ASSIGNMENT
MINUS
NUMBER
COMMA

first_idle_cpu
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

sum_nr_running
COMMA

sum_weighted_load
SEMICOLON

local_group
OP_ASSIGNMENT

cpu_isset
BRACKET_O

this_cpu
COMMA

group
MINUS
GREATER

cpumask
BRACKET_C
SEMICOLON
IF
BRACKET_O

local_group
BRACKET_C

balance_cpu
OP_ASSIGNMENT

first_cpu
BRACKET_O

group
MINUS
GREATER

cpumask
BRACKET_C
SEMICOLON

sum_weighted_load
OP_ASSIGNMENT

sum_nr_running
OP_ASSIGNMENT

avg_load
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_cpu_mask
BRACKET_O

i
COMMA

group
MINUS
GREATER

cpumask
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
SEMICOLON
IF
BRACKET_O
NOT

cpu_isset
BRACKET_O

i
COMMA
MULT

cpus
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

i
BRACKET_C
SEMICOLON
IF
BRACKET_O
MULT

sd_idle
AND
NOT

idle_cpu
BRACKET_O

i
BRACKET_C
BRACKET_C
MULT

sd_idle
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

local_group
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

idle_cpu
BRACKET_O

i
BRACKET_C
AND
NOT

first_idle_cpu
BRACKET_C
CURLY_BRACKET_O

first_idle_cpu
OP_ASSIGNMENT
NUMBER
SEMICOLON

balance_cpu
OP_ASSIGNMENT

i
SEMICOLON
CURLY_BRACKET_C

load
OP_ASSIGNMENT

target_load
BRACKET_O

i
COMMA

load_idx
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

load
OP_ASSIGNMENT

source_load
BRACKET_O

i
COMMA

load_idx
BRACKET_C
SEMICOLON

avg_load
ASSIGN_PLUS

load
SEMICOLON

sum_nr_running
ASSIGN_PLUS

rq
MINUS
GREATER

nr_running
SEMICOLON

sum_weighted_load
ASSIGN_PLUS

rq
MINUS
GREATER

raw_weighted_load
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

local_group
AND

balance_cpu
NOT_EQ

this_cpu
AND

balance
BRACKET_C
CURLY_BRACKET_O
MULT

balance
OP_ASSIGNMENT
NUMBER
SEMICOLON

goto

ret
SEMICOLON
CURLY_BRACKET_C

total_load
ASSIGN_PLUS

avg_load
SEMICOLON

total_pwr
ASSIGN_PLUS

group
MINUS
GREATER

__cpu_power
SEMICOLON

avg_load
OP_ASSIGNMENT

sg_div_cpu_power
BRACKET_O

group
COMMA

avg_load
MULT

SCHED_LOAD_SCALE
BRACKET_C
SEMICOLON

group_capacity
OP_ASSIGNMENT

group
MINUS
GREATER

__cpu_power
DIV

SCHED_LOAD_SCALE
SEMICOLON
IF
BRACKET_O

local_group
BRACKET_C
CURLY_BRACKET_O

this_load
OP_ASSIGNMENT

avg_load
SEMICOLON

this
OP_ASSIGNMENT

group
SEMICOLON

this_nr_running
OP_ASSIGNMENT

sum_nr_running
SEMICOLON

this_load_per_task
OP_ASSIGNMENT

sum_weighted_load
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

avg_load
GREATER

max_load
AND

sum_nr_running
GREATER

group_capacity
BRACKET_C
CURLY_BRACKET_O

max_load
OP_ASSIGNMENT

avg_load
SEMICOLON

busiest
OP_ASSIGNMENT

group
SEMICOLON

busiest_nr_running
OP_ASSIGNMENT

sum_nr_running
SEMICOLON

busiest_load_per_task
OP_ASSIGNMENT

sum_weighted_load
SEMICOLON
CURLY_BRACKET_C
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_SCHED_MC
BRACKET_C
OR
PP_DEFINED
BRACKET_O

CONFIG_SCHED_SMT
BRACKET_C
IF
BRACKET_O

idle
EQ

NOT_IDLE
OR
NOT
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

SD_POWERSAVINGS_BALANCE
BRACKET_C
BRACKET_C

goto

group_next
SEMICOLON
IF
BRACKET_O

local_group
AND
BRACKET_O

this_nr_running
GR_EQ

group_capacity
OR
NOT

this_nr_running
BRACKET_C
BRACKET_C

power_savings_balance
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

power_savings_balance
OR

sum_nr_running
GR_EQ

group_capacity
OR
NOT

sum_nr_running
BRACKET_C

goto

group_next
SEMICOLON
IF
BRACKET_O
BRACKET_O

sum_nr_running
LESS

min_nr_running
BRACKET_C
OR
BRACKET_O

sum_nr_running
EQ

min_nr_running
AND

first_cpu
BRACKET_O

group
MINUS
GREATER

cpumask
BRACKET_C
LESS

first_cpu
BRACKET_O

group_min
MINUS
GREATER

cpumask
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

group_min
OP_ASSIGNMENT

group
SEMICOLON

min_nr_running
OP_ASSIGNMENT

sum_nr_running
SEMICOLON

min_load_per_task
OP_ASSIGNMENT

sum_weighted_load
DIV

sum_nr_running
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

sum_nr_running
LE_EQ

group_capacity
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sum_nr_running
GREATER

leader_nr_running
OR
BRACKET_O

sum_nr_running
EQ

leader_nr_running
AND

first_cpu
BRACKET_O

group
MINUS
GREATER

cpumask
BRACKET_C
GREATER

first_cpu
BRACKET_O

group_leader
MINUS
GREATER

cpumask
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

group_leader
OP_ASSIGNMENT

group
SEMICOLON

leader_nr_running
OP_ASSIGNMENT

sum_nr_running
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

group_next
COLON
PP_ENDIF

group
OP_ASSIGNMENT

group
MINUS
GREATER

next
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

group
NOT_EQ

sd
MINUS
GREATER

groups
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

busiest
OR

this_load
GR_EQ

max_load
OR

busiest_nr_running
EQ
NUMBER
BRACKET_C

goto

out_balanced
SEMICOLON

avg_load
OP_ASSIGNMENT
BRACKET_O

SCHED_LOAD_SCALE
MULT

total_load
BRACKET_C
DIV

total_pwr
SEMICOLON
IF
BRACKET_O

this_load
GR_EQ

avg_load
OR
NUMBER
MULT

max_load
LE_EQ

sd
MINUS
GREATER

imbalance_pct
MULT

this_load
BRACKET_C

goto

out_balanced
SEMICOLON

busiest_load_per_task
ASSIGN_DIV

busiest_nr_running
SEMICOLON
IF
BRACKET_O

max_load
LE_EQ

busiest_load_per_task
BRACKET_C

goto

out_balanced
SEMICOLON
IF
BRACKET_O

max_load
LESS

avg_load
BRACKET_C
CURLY_BRACKET_O
MULT

imbalance
OP_ASSIGNMENT
NUMBER
SEMICOLON

goto

small_imbalance
SEMICOLON
CURLY_BRACKET_C

max_pull
OP_ASSIGNMENT

min
BRACKET_O

max_load
MINUS

avg_load
COMMA

max_load
MINUS

busiest_load_per_task
BRACKET_C
SEMICOLON
MULT

imbalance
OP_ASSIGNMENT

min
BRACKET_O

max_pull
MULT

busiest
MINUS
GREATER

__cpu_power
COMMA
BRACKET_O

avg_load
MINUS

this_load
BRACKET_C
MULT

this
MINUS
GREATER

__cpu_power
BRACKET_C
DIV

SCHED_LOAD_SCALE
SEMICOLON
IF
BRACKET_O
MULT

imbalance
LESS

busiest_load_per_task
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

tmp
COMMA

pwr_now
COMMA

pwr_move
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

imbn
SEMICOLON

small_imbalance
COLON

pwr_move
OP_ASSIGNMENT

pwr_now
OP_ASSIGNMENT
NUMBER
SEMICOLON

imbn
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

this_nr_running
BRACKET_C
CURLY_BRACKET_O

this_load_per_task
ASSIGN_DIV

this_nr_running
SEMICOLON
IF
BRACKET_O

busiest_load_per_task
GREATER

this_load_per_task
BRACKET_C

imbn
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE

this_load_per_task
OP_ASSIGNMENT

SCHED_LOAD_SCALE
SEMICOLON
IF
BRACKET_O

max_load
MINUS

this_load
GR_EQ

busiest_load_per_task
MULT

imbn
BRACKET_C
CURLY_BRACKET_O
MULT

imbalance
OP_ASSIGNMENT

busiest_load_per_task
SEMICOLON

return

busiest
SEMICOLON
CURLY_BRACKET_C

pwr_now
ASSIGN_PLUS

busiest
MINUS
GREATER

__cpu_power
MULT

min
BRACKET_O

busiest_load_per_task
COMMA

max_load
BRACKET_C
SEMICOLON

pwr_now
ASSIGN_PLUS

this
MINUS
GREATER

__cpu_power
MULT

min
BRACKET_O

this_load_per_task
COMMA

this_load
BRACKET_C
SEMICOLON

pwr_now
ASSIGN_DIV

SCHED_LOAD_SCALE
SEMICOLON

tmp
OP_ASSIGNMENT

sg_div_cpu_power
BRACKET_O

busiest
COMMA

busiest_load_per_task
MULT

SCHED_LOAD_SCALE
BRACKET_C
SEMICOLON
IF
BRACKET_O

max_load
GREATER

tmp
BRACKET_C

pwr_move
ASSIGN_PLUS

busiest
MINUS
GREATER

__cpu_power
MULT

min
BRACKET_O

busiest_load_per_task
COMMA

max_load
MINUS

tmp
BRACKET_C
SEMICOLON
IF
BRACKET_O

max_load
MULT

busiest
MINUS
GREATER

__cpu_power
LESS

busiest_load_per_task
MULT

SCHED_LOAD_SCALE
BRACKET_C

tmp
OP_ASSIGNMENT

sg_div_cpu_power
BRACKET_O

this
COMMA

max_load
MULT

busiest
MINUS
GREATER

__cpu_power
BRACKET_C
SEMICOLON
ELSE

tmp
OP_ASSIGNMENT

sg_div_cpu_power
BRACKET_O

this
COMMA

busiest_load_per_task
MULT

SCHED_LOAD_SCALE
BRACKET_C
SEMICOLON

pwr_move
ASSIGN_PLUS

this
MINUS
GREATER

__cpu_power
MULT

min
BRACKET_O

this_load_per_task
COMMA

this_load
PLUS

tmp
BRACKET_C
SEMICOLON

pwr_move
ASSIGN_DIV

SCHED_LOAD_SCALE
SEMICOLON
IF
BRACKET_O

pwr_move
LE_EQ

pwr_now
BRACKET_C

goto

out_balanced
SEMICOLON
MULT

imbalance
OP_ASSIGNMENT

busiest_load_per_task
SEMICOLON
CURLY_BRACKET_C

return

busiest
SEMICOLON

out_balanced
COLON
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_SCHED_MC
BRACKET_C
OR
PP_DEFINED
BRACKET_O

CONFIG_SCHED_SMT
BRACKET_C
IF
BRACKET_O

idle
EQ

NOT_IDLE
OR
NOT
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

SD_POWERSAVINGS_BALANCE
BRACKET_C
BRACKET_C

goto

ret
SEMICOLON
IF
BRACKET_O

this
EQ

group_leader
AND

group_leader
NOT_EQ

group_min
BRACKET_C
CURLY_BRACKET_O
MULT

imbalance
OP_ASSIGNMENT

min_load_per_task
SEMICOLON

return

group_min
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

ret
COLON
MULT

imbalance
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

rq
MULT

find_busiest_queue
BRACKET_O
STRUCT

sched_group
MULT

group
COMMA

enum

idle_type

idle
COMMA
TYPE_UNSIGNED
TYPE_LONG

imbalance
COMMA

cpumask_t
MULT

cpus
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

busiest
OP_ASSIGNMENT

NULL
COMMA
MULT

rq
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

max_load
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

i
SEMICOLON

for_each_cpu_mask
BRACKET_O

i
COMMA

group
MINUS
GREATER

cpumask
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

cpu_isset
BRACKET_O

i
COMMA
MULT

cpus
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

i
BRACKET_C
SEMICOLON
IF
BRACKET_O

rq
MINUS
GREATER

nr_running
EQ
NUMBER
AND

rq
MINUS
GREATER

raw_weighted_load
GREATER

imbalance
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

rq
MINUS
GREATER

raw_weighted_load
GREATER

max_load
BRACKET_C
CURLY_BRACKET_O

max_load
OP_ASSIGNMENT

rq
MINUS
GREATER

raw_weighted_load
SEMICOLON

busiest
OP_ASSIGNMENT

rq
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

busiest
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

MAX_PINNED_INTERVAL
NUMBER

static

inline
TYPE_UNSIGNED
TYPE_LONG

minus_1_or_zero
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

n
BRACKET_C
CURLY_BRACKET_O

return

n
GREATER
NUMBER
QUESTION_MARK

n
MINUS
NUMBER
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

load_balance
BRACKET_O
TYPE_INT

this_cpu
COMMA
STRUCT

rq
MULT

this_rq
COMMA
STRUCT

sched_domain
MULT

sd
COMMA

enum

idle_type

idle
COMMA
TYPE_INT
MULT

balance
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

nr_moved
COMMA

all_pinned
OP_ASSIGNMENT
NUMBER
COMMA

active_balance
OP_ASSIGNMENT
NUMBER
COMMA

sd_idle
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

sched_group
MULT

group
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

imbalance
SEMICOLON
STRUCT

rq
MULT

busiest
SEMICOLON

cpumask_t

cpus
OP_ASSIGNMENT

CPU_MASK_ALL
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O

idle
NOT_EQ

NOT_IDLE
AND

sd
MINUS
GREATER

flags
AMPERSANT

SD_SHARE_CPUPOWER
AND
NOT

test_sd_parent
BRACKET_O

sd
COMMA

SD_POWERSAVINGS_BALANCE
BRACKET_C
BRACKET_C

sd_idle
OP_ASSIGNMENT
NUMBER
SEMICOLON

schedstat_inc
BRACKET_O

sd
COMMA

lb_cnt
CORNER_BRACKET_O

idle
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

redo
COLON

group
OP_ASSIGNMENT

find_busiest_group
BRACKET_O

sd
COMMA

this_cpu
COMMA
AMPERSANT

imbalance
COMMA

idle
COMMA
AMPERSANT

sd_idle
COMMA
AMPERSANT

cpus
COMMA

balance
BRACKET_C
SEMICOLON
IF
BRACKET_O
MULT

balance
EQ
NUMBER
BRACKET_C

goto

out_balanced
SEMICOLON
IF
BRACKET_O
NOT

group
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

sd
COMMA

lb_nobusyg
CORNER_BRACKET_O

idle
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

goto

out_balanced
SEMICOLON
CURLY_BRACKET_C

busiest
OP_ASSIGNMENT

find_busiest_queue
BRACKET_O

group
COMMA

idle
COMMA

imbalance
COMMA
AMPERSANT

cpus
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

busiest
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

sd
COMMA

lb_nobusyq
CORNER_BRACKET_O

idle
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

goto

out_balanced
SEMICOLON
CURLY_BRACKET_C

BUG_ON
BRACKET_O

busiest
EQ

this_rq
BRACKET_C
SEMICOLON

schedstat_add
BRACKET_O

sd
COMMA

lb_imbalance
CORNER_BRACKET_O

idle
CORNER_BRACKET_C
COMMA

imbalance
BRACKET_C
SEMICOLON

nr_moved
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

busiest
MINUS
GREATER

nr_running
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

double_rq_lock
BRACKET_O

this_rq
COMMA

busiest
BRACKET_C
SEMICOLON

nr_moved
OP_ASSIGNMENT

move_tasks
BRACKET_O

this_rq
COMMA

this_cpu
COMMA

busiest
COMMA

minus_1_or_zero
BRACKET_O

busiest
MINUS
GREATER

nr_running
BRACKET_C
COMMA

imbalance
COMMA

sd
COMMA

idle
COMMA
AMPERSANT

all_pinned
BRACKET_C
SEMICOLON

double_rq_unlock
BRACKET_O

this_rq
COMMA

busiest
BRACKET_C
SEMICOLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

nr_moved
AND

this_cpu
NOT_EQ

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C

resched_cpu
BRACKET_O

this_cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

all_pinned
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

cpu_clear
BRACKET_O

cpu_of
BRACKET_O

busiest
BRACKET_C
COMMA

cpus
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cpus_empty
BRACKET_O

cpus
BRACKET_C
BRACKET_C

goto

redo
SEMICOLON

goto

out_balanced
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

nr_moved
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

sd
COMMA

lb_failed
CORNER_BRACKET_O

idle
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

sd
MINUS
GREATER

nr_balance_failed
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

sd
MINUS
GREATER

nr_balance_failed
GREATER

sd
MINUS
GREATER

cache_nice_tries
PLUS
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_lock_irqsave
BRACKET_O
AMPERSANT

busiest
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cpu_isset
BRACKET_O

this_cpu
COMMA

busiest
MINUS
GREATER

curr
MINUS
GREATER

cpus_allowed
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

busiest
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

all_pinned
OP_ASSIGNMENT
NUMBER
SEMICOLON

goto

out_one_pinned
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

busiest
MINUS
GREATER

active_balance
BRACKET_C
CURLY_BRACKET_O

busiest
MINUS
GREATER

active_balance
OP_ASSIGNMENT
NUMBER
SEMICOLON

busiest
MINUS
GREATER

push_cpu
OP_ASSIGNMENT

this_cpu
SEMICOLON

active_balance
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

busiest
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

active_balance
BRACKET_C

wake_up_process
BRACKET_O

busiest
MINUS
GREATER

migration_thread
BRACKET_C
SEMICOLON

sd
MINUS
GREATER

nr_balance_failed
OP_ASSIGNMENT

sd
MINUS
GREATER

cache_nice_tries
PLUS
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE

sd
MINUS
GREATER

nr_balance_failed
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
NOT

active_balance
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

sd
MINUS
GREATER

balance_interval
OP_ASSIGNMENT

sd
MINUS
GREATER

min_interval
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

sd
MINUS
GREATER

balance_interval
LESS

sd
MINUS
GREATER

max_interval
BRACKET_C

sd
MINUS
GREATER

balance_interval
ASSIGN_MULT
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

nr_moved
AND
NOT

sd_idle
AND

sd
MINUS
GREATER

flags
AMPERSANT

SD_SHARE_CPUPOWER
AND
NOT

test_sd_parent
BRACKET_O

sd
COMMA

SD_POWERSAVINGS_BALANCE
BRACKET_C
BRACKET_C

return
MINUS
NUMBER
SEMICOLON

return

nr_moved
SEMICOLON

out_balanced
COLON

schedstat_inc
BRACKET_O

sd
COMMA

lb_balanced
CORNER_BRACKET_O

idle
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

sd
MINUS
GREATER

nr_balance_failed
OP_ASSIGNMENT
NUMBER
SEMICOLON

out_one_pinned
COLON
IF
BRACKET_O
BRACKET_O

all_pinned
AND

sd
MINUS
GREATER

balance_interval
LESS

MAX_PINNED_INTERVAL
BRACKET_C
OR
BRACKET_O

sd
MINUS
GREATER

balance_interval
LESS

sd
MINUS
GREATER

max_interval
BRACKET_C
BRACKET_C

sd
MINUS
GREATER

balance_interval
ASSIGN_MULT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

sd_idle
AND

sd
MINUS
GREATER

flags
AMPERSANT

SD_SHARE_CPUPOWER
AND
NOT

test_sd_parent
BRACKET_O

sd
COMMA

SD_POWERSAVINGS_BALANCE
BRACKET_C
BRACKET_C

return
MINUS
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

load_balance_newidle
BRACKET_O
TYPE_INT

this_cpu
COMMA
STRUCT

rq
MULT

this_rq
COMMA
STRUCT

sched_domain
MULT

sd
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_group
MULT

group
SEMICOLON
STRUCT

rq
MULT

busiest
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

imbalance
SEMICOLON
TYPE_INT

nr_moved
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

sd_idle
OP_ASSIGNMENT
NUMBER
SEMICOLON

cpumask_t

cpus
OP_ASSIGNMENT

CPU_MASK_ALL
SEMICOLON
IF
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

SD_SHARE_CPUPOWER
AND
NOT

test_sd_parent
BRACKET_O

sd
COMMA

SD_POWERSAVINGS_BALANCE
BRACKET_C
BRACKET_C

sd_idle
OP_ASSIGNMENT
NUMBER
SEMICOLON

schedstat_inc
BRACKET_O

sd
COMMA

lb_cnt
CORNER_BRACKET_O

NEWLY_IDLE
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

redo
COLON

group
OP_ASSIGNMENT

find_busiest_group
BRACKET_O

sd
COMMA

this_cpu
COMMA
AMPERSANT

imbalance
COMMA

NEWLY_IDLE
COMMA
AMPERSANT

sd_idle
COMMA
AMPERSANT

cpus
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

group
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

sd
COMMA

lb_nobusyg
CORNER_BRACKET_O

NEWLY_IDLE
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

goto

out_balanced
SEMICOLON
CURLY_BRACKET_C

busiest
OP_ASSIGNMENT

find_busiest_queue
BRACKET_O

group
COMMA

NEWLY_IDLE
COMMA

imbalance
COMMA
AMPERSANT

cpus
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

busiest
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

sd
COMMA

lb_nobusyq
CORNER_BRACKET_O

NEWLY_IDLE
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

goto

out_balanced
SEMICOLON
CURLY_BRACKET_C

BUG_ON
BRACKET_O

busiest
EQ

this_rq
BRACKET_C
SEMICOLON

schedstat_add
BRACKET_O

sd
COMMA

lb_imbalance
CORNER_BRACKET_O

NEWLY_IDLE
CORNER_BRACKET_C
COMMA

imbalance
BRACKET_C
SEMICOLON

nr_moved
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

busiest
MINUS
GREATER

nr_running
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

double_lock_balance
BRACKET_O

this_rq
COMMA

busiest
BRACKET_C
SEMICOLON

nr_moved
OP_ASSIGNMENT

move_tasks
BRACKET_O

this_rq
COMMA

this_cpu
COMMA

busiest
COMMA

minus_1_or_zero
BRACKET_O

busiest
MINUS
GREATER

nr_running
BRACKET_C
COMMA

imbalance
COMMA

sd
COMMA

NEWLY_IDLE
COMMA

NULL
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

busiest
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

nr_moved
BRACKET_C
CURLY_BRACKET_O

cpu_clear
BRACKET_O

cpu_of
BRACKET_O

busiest
BRACKET_C
COMMA

cpus
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cpus_empty
BRACKET_O

cpus
BRACKET_C
BRACKET_C

goto

redo
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

nr_moved
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

sd
COMMA

lb_failed
CORNER_BRACKET_O

NEWLY_IDLE
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sd_idle
AND

sd
MINUS
GREATER

flags
AMPERSANT

SD_SHARE_CPUPOWER
AND
NOT

test_sd_parent
BRACKET_O

sd
COMMA

SD_POWERSAVINGS_BALANCE
BRACKET_C
BRACKET_C

return
MINUS
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE

sd
MINUS
GREATER

nr_balance_failed
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

nr_moved
SEMICOLON

out_balanced
COLON

schedstat_inc
BRACKET_O

sd
COMMA

lb_balanced
CORNER_BRACKET_O

NEWLY_IDLE
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sd_idle
AND

sd
MINUS
GREATER

flags
AMPERSANT

SD_SHARE_CPUPOWER
AND
NOT

test_sd_parent
BRACKET_O

sd
COMMA

SD_POWERSAVINGS_BALANCE
BRACKET_C
BRACKET_C

return
MINUS
NUMBER
SEMICOLON

sd
MINUS
GREATER

nr_balance_failed
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

idle_balance
BRACKET_O
TYPE_INT

this_cpu
COMMA
STRUCT

rq
MULT

this_rq
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_domain
MULT

sd
SEMICOLON
TYPE_INT

pulled_task
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

next_balance
OP_ASSIGNMENT

jiffies
PLUS
NUMBER
MULT

HZ
SEMICOLON

for_each_domain
BRACKET_O

this_cpu
COMMA

sd
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

interval
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

SD_LOAD_BALANCE
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

SD_BALANCE_NEWIDLE
BRACKET_C

pulled_task
OP_ASSIGNMENT

load_balance_newidle
BRACKET_O

this_cpu
COMMA

this_rq
COMMA

sd
BRACKET_C
SEMICOLON

interval
OP_ASSIGNMENT

msecs_to_jiffies
BRACKET_O

sd
MINUS
GREATER

balance_interval
BRACKET_C
SEMICOLON
IF
BRACKET_O

time_after
BRACKET_O

next_balance
COMMA

sd
MINUS
GREATER

last_balance
PLUS

interval
BRACKET_C
BRACKET_C

next_balance
OP_ASSIGNMENT

sd
MINUS
GREATER

last_balance
PLUS

interval
SEMICOLON
IF
BRACKET_O

pulled_task
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

pulled_task
BRACKET_C

this_rq
MINUS
GREATER

next_balance
OP_ASSIGNMENT

next_balance
SEMICOLON
CURLY_BRACKET_C

static

void

active_load_balance
BRACKET_O
STRUCT

rq
MULT

busiest_rq
COMMA
TYPE_INT

busiest_cpu
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

target_cpu
OP_ASSIGNMENT

busiest_rq
MINUS
GREATER

push_cpu
SEMICOLON
STRUCT

sched_domain
MULT

sd
SEMICOLON
STRUCT

rq
MULT

target_rq
SEMICOLON
IF
BRACKET_O

busiest_rq
MINUS
GREATER

nr_running
LE_EQ
NUMBER
BRACKET_C

return
SEMICOLON

target_rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

target_cpu
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

busiest_rq
EQ

target_rq
BRACKET_C
SEMICOLON

double_lock_balance
BRACKET_O

busiest_rq
COMMA

target_rq
BRACKET_C
SEMICOLON

for_each_domain
BRACKET_O

target_cpu
COMMA

sd
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

SD_LOAD_BALANCE
BRACKET_C
AND

cpu_isset
BRACKET_O

busiest_cpu
COMMA

sd
MINUS
GREATER

span
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

likely
BRACKET_O

sd
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

sd
COMMA

alb_cnt
BRACKET_C
SEMICOLON
IF
BRACKET_O

move_tasks
BRACKET_O

target_rq
COMMA

target_cpu
COMMA

busiest_rq
COMMA
NUMBER
COMMA

RTPRIO_TO_LOAD_WEIGHT
BRACKET_O
NUMBER
BRACKET_C
COMMA

sd
COMMA

SCHED_IDLE
COMMA

NULL
BRACKET_C
BRACKET_C

schedstat_inc
BRACKET_O

sd
COMMA

alb_pushed
BRACKET_C
SEMICOLON
ELSE

schedstat_inc
BRACKET_O

sd
COMMA

alb_failed
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

target_rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

update_load
BRACKET_O
STRUCT

rq
MULT

this_rq
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

this_load
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

i
COMMA

scale
SEMICOLON

this_load
OP_ASSIGNMENT

this_rq
MINUS
GREATER

raw_weighted_load
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
COMMA

scale
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS
NUMBER
SEMICOLON

i
PLUS
PLUS
COMMA

scale
ASSIGN_PLUS

scale
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

old_load
COMMA

new_load
SEMICOLON

old_load
OP_ASSIGNMENT

this_rq
MINUS
GREATER

cpu_load
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

new_load
OP_ASSIGNMENT

this_load
SEMICOLON
IF
BRACKET_O

new_load
GREATER

old_load
BRACKET_C

new_load
ASSIGN_PLUS

scale
MINUS
NUMBER
SEMICOLON

this_rq
MINUS
GREATER

cpu_load
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT
BRACKET_O

old_load
MULT
BRACKET_O

scale
MINUS
NUMBER
BRACKET_C
PLUS

new_load
BRACKET_C
GREATER
GREATER

i
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_IFDEF

CONFIG_NO_HZ

static
STRUCT
CURLY_BRACKET_O

atomic_t

load_balancer
SEMICOLON

cpumask_t

cpu_mask
SEMICOLON
CURLY_BRACKET_C

nohz

____cacheline_aligned
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

load_balancer
OP_ASSIGNMENT

ATOMIC_INIT
BRACKET_O
MINUS
NUMBER
BRACKET_C
COMMA
DOT

cpu_mask
OP_ASSIGNMENT

CPU_MASK_NONE
COMMA
CURLY_BRACKET_C
SEMICOLON
TYPE_INT

select_nohz_load_balancer
BRACKET_O
TYPE_INT

stop_tick
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

stop_tick
BRACKET_C
CURLY_BRACKET_O

cpu_set
BRACKET_O

cpu
COMMA

nohz
DOT

cpu_mask
BRACKET_C
SEMICOLON

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

in_nohz_recently
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

cpu_is_offline
BRACKET_O

cpu
BRACKET_C
AND

atomic_read
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
BRACKET_C
EQ

cpu
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

atomic_cmpxchg
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
COMMA

cpu
COMMA
MINUS
NUMBER
BRACKET_C
NOT_EQ

cpu
BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

cpus_weight
BRACKET_O

nohz
DOT

cpu_mask
BRACKET_C
EQ

num_online_cpus
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
BRACKET_C
EQ

cpu
BRACKET_C

atomic_set
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
COMMA
MINUS
NUMBER
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
BRACKET_C
EQ
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

atomic_cmpxchg
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
COMMA
MINUS
NUMBER
COMMA

cpu
BRACKET_C
EQ
MINUS
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
BRACKET_C
EQ

cpu
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O
NOT

cpu_isset
BRACKET_O

cpu
COMMA

nohz
DOT

cpu_mask
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

cpu_clear
BRACKET_O

cpu
COMMA

nohz
DOT

cpu_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
BRACKET_C
EQ

cpu
BRACKET_C
IF
BRACKET_O

atomic_cmpxchg
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
COMMA

cpu
COMMA
MINUS
NUMBER
BRACKET_C
NOT_EQ

cpu
BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static

DEFINE_SPINLOCK
BRACKET_O

balancing
BRACKET_C
SEMICOLON

static

inline

void

rebalance_domains
BRACKET_O
TYPE_INT

cpu
COMMA

enum

idle_type

idle
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

balance
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

interval
SEMICOLON
STRUCT

sched_domain
MULT

sd
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

next_balance
OP_ASSIGNMENT

jiffies
PLUS
NUMBER
MULT

HZ
SEMICOLON

for_each_domain
BRACKET_O

cpu
COMMA

sd
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

SD_LOAD_BALANCE
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

interval
OP_ASSIGNMENT

sd
MINUS
GREATER

balance_interval
SEMICOLON
IF
BRACKET_O

idle
NOT_EQ

SCHED_IDLE
BRACKET_C

interval
ASSIGN_MULT

sd
MINUS
GREATER

busy_factor
SEMICOLON

interval
OP_ASSIGNMENT

msecs_to_jiffies
BRACKET_O

interval
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

interval
BRACKET_C
BRACKET_C

interval
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

SD_SERIALIZE
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

spin_trylock
BRACKET_O
AMPERSANT

balancing
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

time_after_eq
BRACKET_O

jiffies
COMMA

sd
MINUS
GREATER

last_balance
PLUS

interval
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

load_balance
BRACKET_O

cpu
COMMA

rq
COMMA

sd
COMMA

idle
COMMA
AMPERSANT

balance
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

idle
OP_ASSIGNMENT

NOT_IDLE
SEMICOLON
CURLY_BRACKET_C

sd
MINUS
GREATER

last_balance
OP_ASSIGNMENT

jiffies
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

SD_SERIALIZE
BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

balancing
BRACKET_C
SEMICOLON

out
COLON
IF
BRACKET_O

time_after
BRACKET_O

next_balance
COMMA

sd
MINUS
GREATER

last_balance
PLUS

interval
BRACKET_C
BRACKET_C

next_balance
OP_ASSIGNMENT

sd
MINUS
GREATER

last_balance
PLUS

interval
SEMICOLON
IF
BRACKET_O
NOT

balance
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

rq
MINUS
GREATER

next_balance
OP_ASSIGNMENT

next_balance
SEMICOLON
CURLY_BRACKET_C

static

void

run_rebalance_domains
BRACKET_O
STRUCT

softirq_action
MULT

h
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

local_cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
STRUCT

rq
MULT

local_rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

local_cpu
BRACKET_C
SEMICOLON

enum

idle_type

idle
OP_ASSIGNMENT

local_rq
MINUS
GREATER

idle_at_tick
QUESTION_MARK

SCHED_IDLE
COLON

NOT_IDLE
SEMICOLON

rebalance_domains
BRACKET_O

local_cpu
COMMA

idle
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_NO_HZ
IF
BRACKET_O

local_rq
MINUS
GREATER

idle_at_tick
AND

atomic_read
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
BRACKET_C
EQ

local_cpu
BRACKET_C
CURLY_BRACKET_O

cpumask_t

cpus
OP_ASSIGNMENT

nohz
DOT

cpu_mask
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON
TYPE_INT

balance_cpu
SEMICOLON

cpu_clear
BRACKET_O

local_cpu
COMMA

cpus
BRACKET_C
SEMICOLON

for_each_cpu_mask
BRACKET_O

balance_cpu
COMMA

cpus
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

need_resched
BRACKET_O
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

rebalance_domains
BRACKET_O

balance_cpu
COMMA

SCHED_IDLE
BRACKET_C
SEMICOLON

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

balance_cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

time_after
BRACKET_O

local_rq
MINUS
GREATER

next_balance
COMMA

rq
MINUS
GREATER

next_balance
BRACKET_C
BRACKET_C

local_rq
MINUS
GREATER

next_balance
OP_ASSIGNMENT

rq
MINUS
GREATER

next_balance
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ENDIF
CURLY_BRACKET_C

static

inline

void

trigger_load_balance
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_NO_HZ
IF
BRACKET_O

rq
MINUS
GREATER

in_nohz_recently
AND
NOT

rq
MINUS
GREATER

idle_at_tick
BRACKET_C
CURLY_BRACKET_O

rq
MINUS
GREATER

in_nohz_recently
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
BRACKET_C
EQ

cpu
BRACKET_C
CURLY_BRACKET_O

cpu_clear
BRACKET_O

cpu
COMMA

nohz
DOT

cpu_mask
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
COMMA
MINUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
BRACKET_C
EQ
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ilb
OP_ASSIGNMENT

first_cpu
BRACKET_O

nohz
DOT

cpu_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

ilb
NOT_EQ

NR_CPUS
BRACKET_C

resched_cpu
BRACKET_O

ilb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

rq
MINUS
GREATER

idle_at_tick
AND

atomic_read
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
BRACKET_C
EQ

cpu
AND

cpus_weight
BRACKET_O

nohz
DOT

cpu_mask
BRACKET_C
EQ

num_online_cpus
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

resched_cpu
BRACKET_O

cpu
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

rq
MINUS
GREATER

idle_at_tick
AND

atomic_read
BRACKET_O
AMPERSANT

nohz
DOT

load_balancer
BRACKET_C
NOT_EQ

cpu
AND

cpu_isset
BRACKET_O

cpu
COMMA

nohz
DOT

cpu_mask
BRACKET_C
BRACKET_C

return
SEMICOLON
PP_ENDIF
IF
BRACKET_O

time_after_eq
BRACKET_O

jiffies
COMMA

rq
MINUS
GREATER

next_balance
BRACKET_C
BRACKET_C

raise_softirq
BRACKET_O

SCHED_SOFTIRQ
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static

inline

void

idle_balance
BRACKET_O
TYPE_INT

cpu
COMMA
STRUCT

rq
MULT

rq
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_ENDIF

DEFINE_PER_CPU
BRACKET_O
STRUCT

kernel_stat
COMMA

kstat
BRACKET_C
SEMICOLON

EXPORT_PER_CPU_SYMBOL
BRACKET_O

kstat
BRACKET_C
SEMICOLON

static

inline

void

update_cpu_clock
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

rq
MULT

rq
COMMA
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

now
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

sched_time
ASSIGN_PLUS

now
MINUS

p
MINUS
GREATER

last_ran
SEMICOLON

p
MINUS
GREATER

last_ran
OP_ASSIGNMENT

rq
MINUS
GREATER

most_recent_timestamp
OP_ASSIGNMENT

now
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

current_sched_time
BRACKET_O
CONST
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

ns
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

ns
OP_ASSIGNMENT

p
MINUS
GREATER

sched_time
PLUS

sched_clock
BRACKET_O
BRACKET_C
MINUS

p
MINUS
GREATER

last_ran
SEMICOLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON

return

ns
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

expired_starving
BRACKET_O
STRUCT

rq
MULT

rq
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

rq
MINUS
GREATER

curr
MINUS
GREATER

static_prio
GREATER

rq
MINUS
GREATER

best_expired_prio
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

STARVATION_LIMIT
OR
NOT

rq
MINUS
GREATER

expired_timestamp
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

jiffies
MINUS

rq
MINUS
GREATER

expired_timestamp
GREATER

STARVATION_LIMIT
MULT

rq
MINUS
GREATER

nr_running
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

account_user_time
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA

cputime_t

cputime
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_usage_stat
MULT

cpustat
OP_ASSIGNMENT
AMPERSANT

kstat_this_cpu
DOT

cpustat
SEMICOLON

cputime64_t

tmp
SEMICOLON

p
MINUS
GREATER

utime
OP_ASSIGNMENT

cputime_add
BRACKET_O

p
MINUS
GREATER

utime
COMMA

cputime
BRACKET_C
SEMICOLON

tmp
OP_ASSIGNMENT

cputime_to_cputime64
BRACKET_O

cputime
BRACKET_C
SEMICOLON
IF
BRACKET_O

TASK_NICE
BRACKET_O

p
BRACKET_C
GREATER
NUMBER
BRACKET_C

cpustat
MINUS
GREATER

nice
OP_ASSIGNMENT

cputime64_add
BRACKET_O

cpustat
MINUS
GREATER

nice
COMMA

tmp
BRACKET_C
SEMICOLON
ELSE

cpustat
MINUS
GREATER

user
OP_ASSIGNMENT

cputime64_add
BRACKET_O

cpustat
MINUS
GREATER

user
COMMA

tmp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

account_system_time
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

hardirq_offset
COMMA

cputime_t

cputime
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_usage_stat
MULT

cpustat
OP_ASSIGNMENT
AMPERSANT

kstat_this_cpu
DOT

cpustat
SEMICOLON
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

this_rq
BRACKET_O
BRACKET_C
SEMICOLON

cputime64_t

tmp
SEMICOLON

p
MINUS
GREATER

stime
OP_ASSIGNMENT

cputime_add
BRACKET_O

p
MINUS
GREATER

stime
COMMA

cputime
BRACKET_C
SEMICOLON

tmp
OP_ASSIGNMENT

cputime_to_cputime64
BRACKET_O

cputime
BRACKET_C
SEMICOLON
IF
BRACKET_O

hardirq_count
BRACKET_O
BRACKET_C
MINUS

hardirq_offset
BRACKET_C

cpustat
MINUS
GREATER

irq
OP_ASSIGNMENT

cputime64_add
BRACKET_O

cpustat
MINUS
GREATER

irq
COMMA

tmp
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O

softirq_count
BRACKET_O
BRACKET_C
BRACKET_C

cpustat
MINUS
GREATER

softirq
OP_ASSIGNMENT

cputime64_add
BRACKET_O

cpustat
MINUS
GREATER

softirq
COMMA

tmp
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O

p
NOT_EQ

rq
MINUS
GREATER

idle
BRACKET_C

cpustat
MINUS
GREATER

system
OP_ASSIGNMENT

cputime64_add
BRACKET_O

cpustat
MINUS
GREATER

system
COMMA

tmp
BRACKET_C
SEMICOLON
ELSE
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

nr_iowait
BRACKET_C
GREATER
NUMBER
BRACKET_C

cpustat
MINUS
GREATER

iowait
OP_ASSIGNMENT

cputime64_add
BRACKET_O

cpustat
MINUS
GREATER

iowait
COMMA

tmp
BRACKET_C
SEMICOLON
ELSE

cpustat
MINUS
GREATER

idle
OP_ASSIGNMENT

cputime64_add
BRACKET_O

cpustat
MINUS
GREATER

idle
COMMA

tmp
BRACKET_C
SEMICOLON

acct_update_integrals
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

account_steal_time
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA

cputime_t

steal
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_usage_stat
MULT

cpustat
OP_ASSIGNMENT
AMPERSANT

kstat_this_cpu
DOT

cpustat
SEMICOLON

cputime64_t

tmp
OP_ASSIGNMENT

cputime_to_cputime64
BRACKET_O

steal
BRACKET_C
SEMICOLON
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

this_rq
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
EQ

rq
MINUS
GREATER

idle
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

stime
OP_ASSIGNMENT

cputime_add
BRACKET_O

p
MINUS
GREATER

stime
COMMA

steal
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

nr_iowait
BRACKET_C
GREATER
NUMBER
BRACKET_C

cpustat
MINUS
GREATER

iowait
OP_ASSIGNMENT

cputime64_add
BRACKET_O

cpustat
MINUS
GREATER

iowait
COMMA

tmp
BRACKET_C
SEMICOLON
ELSE

cpustat
MINUS
GREATER

idle
OP_ASSIGNMENT

cputime64_add
BRACKET_O

cpustat
MINUS
GREATER

idle
COMMA

tmp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

cpustat
MINUS
GREATER

steal
OP_ASSIGNMENT

cputime64_add
BRACKET_O

cpustat
MINUS
GREATER

steal
COMMA

tmp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

task_running_tick
BRACKET_O
STRUCT

rq
MULT

rq
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

array
NOT_EQ

rq
MINUS
GREATER

active
BRACKET_C
CURLY_BRACKET_O

set_tsk_need_resched
BRACKET_O

p
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

spin_lock
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

rt_task
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

p
MINUS
GREATER

policy
EQ

SCHED_RR
BRACKET_C
AND
NOT
MINUS
MINUS

p
MINUS
GREATER

time_slice
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

time_slice
OP_ASSIGNMENT

task_timeslice
BRACKET_O

p
BRACKET_C
SEMICOLON

p
MINUS
GREATER

first_time_slice
OP_ASSIGNMENT
NUMBER
SEMICOLON

set_tsk_need_resched
BRACKET_O

p
BRACKET_C
SEMICOLON

requeue_task
BRACKET_O

p
COMMA

rq
MINUS
GREATER

active
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

goto

out_unlock
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT
MINUS
MINUS

p
MINUS
GREATER

time_slice
BRACKET_C
CURLY_BRACKET_O

dequeue_task
BRACKET_O

p
COMMA

rq
MINUS
GREATER

active
BRACKET_C
SEMICOLON

set_tsk_need_resched
BRACKET_O

p
BRACKET_C
SEMICOLON

p
MINUS
GREATER

prio
OP_ASSIGNMENT

effective_prio
BRACKET_O

p
BRACKET_C
SEMICOLON

p
MINUS
GREATER

time_slice
OP_ASSIGNMENT

task_timeslice
BRACKET_O

p
BRACKET_C
SEMICOLON

p
MINUS
GREATER

first_time_slice
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

rq
MINUS
GREATER

expired_timestamp
BRACKET_C

rq
MINUS
GREATER

expired_timestamp
OP_ASSIGNMENT

jiffies
SEMICOLON
IF
BRACKET_O
NOT

TASK_INTERACTIVE
BRACKET_O

p
BRACKET_C
OR

expired_starving
BRACKET_O

rq
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

enqueue_task
BRACKET_O

p
COMMA

rq
MINUS
GREATER

expired
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

static_prio
LESS

rq
MINUS
GREATER

best_expired_prio
BRACKET_C

rq
MINUS
GREATER

best_expired_prio
OP_ASSIGNMENT

p
MINUS
GREATER

static_prio
SEMICOLON
CURLY_BRACKET_C
ELSE

enqueue_task
BRACKET_O

p
COMMA

rq
MINUS
GREATER

active
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

TASK_INTERACTIVE
BRACKET_O

p
BRACKET_C
AND
NOT
BRACKET_O
BRACKET_O

task_timeslice
BRACKET_O

p
BRACKET_C
MINUS

p
MINUS
GREATER

time_slice
BRACKET_C
MODULO

TIMESLICE_GRANULARITY
BRACKET_O

p
BRACKET_C
BRACKET_C
AND
BRACKET_O

p
MINUS
GREATER

time_slice
GR_EQ

TIMESLICE_GRANULARITY
BRACKET_O

p
BRACKET_C
BRACKET_C
AND
BRACKET_O

p
MINUS
GREATER

array
EQ

rq
MINUS
GREATER

active
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

requeue_task
BRACKET_O

p
COMMA

rq
MINUS
GREATER

active
BRACKET_C
SEMICOLON

set_tsk_need_resched
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

out_unlock
COLON

spin_unlock
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

scheduler_tick
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

now
OP_ASSIGNMENT

sched_clock
BRACKET_O
BRACKET_C
SEMICOLON
STRUCT

task_struct
MULT

p
OP_ASSIGNMENT

current
SEMICOLON
TYPE_INT

cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
TYPE_INT

idle_at_tick
OP_ASSIGNMENT

idle_cpu
BRACKET_O

cpu
BRACKET_C
SEMICOLON
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON

update_cpu_clock
BRACKET_O

p
COMMA

rq
COMMA

now
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

idle_at_tick
BRACKET_C

task_running_tick
BRACKET_O

rq
COMMA

p
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SMP

update_load
BRACKET_O

rq
BRACKET_C
SEMICOLON

rq
MINUS
GREATER

idle_at_tick
OP_ASSIGNMENT

idle_at_tick
SEMICOLON

trigger_load_balance
BRACKET_O

cpu
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_PREEMPT
BRACKET_C
AND
PP_DEFINED
BRACKET_O

CONFIG_DEBUG_PREEMPT
BRACKET_C

void

fastcall

add_preempt_count
BRACKET_O
TYPE_INT

val
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
BRACKET_O

preempt_count
BRACKET_O
BRACKET_C
LESS
NUMBER
BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON

preempt_count
BRACKET_O
BRACKET_C
ASSIGN_PLUS

val
SEMICOLON

DEBUG_LOCKS_WARN_ON
BRACKET_O
BRACKET_O

preempt_count
BRACKET_O
BRACKET_C
AMPERSANT

PREEMPT_MASK
BRACKET_C
GR_EQ

PREEMPT_MASK
MINUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

add_preempt_count
BRACKET_C
SEMICOLON

void

fastcall

sub_preempt_count
BRACKET_O
TYPE_INT

val
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O

val
GREATER

preempt_count
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

DEBUG_LOCKS_WARN_ON
BRACKET_O
BRACKET_O

val
LESS

PREEMPT_MASK
BRACKET_C
AND
NOT
BRACKET_O

preempt_count
BRACKET_O
BRACKET_C
AMPERSANT

PREEMPT_MASK
BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON

preempt_count
BRACKET_O
BRACKET_C
ASSIGN_MINUS

val
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

sub_preempt_count
BRACKET_C
SEMICOLON
PP_ENDIF

static

inline
TYPE_INT

interactive_sleep
BRACKET_O

enum

sleep_type

sleep_type
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O

sleep_type
EQ

SLEEP_INTERACTIVE
OR

sleep_type
EQ

SLEEP_INTERRUPTED
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage

void

__sched

schedule
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

prev
COMMA
MULT

next
SEMICOLON
STRUCT

prio_array
MULT

array
SEMICOLON
STRUCT

list_head
MULT

queue
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

now
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

run_time
SEMICOLON
TYPE_INT

cpu
COMMA

idx
COMMA

new_prio
SEMICOLON
TYPE_LONG
MULT

switch_count
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

in_atomic
BRACKET_O
BRACKET_C
AND
NOT

current
MINUS
GREATER

exit_state
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
STRING
COMMA

current
MINUS
GREATER

comm
COMMA

preempt_count
BRACKET_O
BRACKET_C
COMMA

current
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

debug_show_held_locks
BRACKET_O

current
BRACKET_C
SEMICOLON
IF
BRACKET_O

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C

print_irqtrace_events
BRACKET_O

current
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

profile_hit
BRACKET_O

SCHED_PROFILING
COMMA

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

need_resched
COLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

prev
OP_ASSIGNMENT

current
SEMICOLON

release_kernel_lock
BRACKET_O

prev
BRACKET_C
SEMICOLON

need_resched_nonpreemptible
COLON

rq
OP_ASSIGNMENT

this_rq
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

prev
EQ

rq
MINUS
GREATER

idle
BRACKET_C
AND

prev
MINUS
GREATER

state
NOT_EQ

TASK_RUNNING
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

schedstat_inc
BRACKET_O

rq
COMMA

sched_cnt
BRACKET_C
SEMICOLON

now
OP_ASSIGNMENT

sched_clock
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O
BRACKET_O
TYPE_LONG
TYPE_LONG
BRACKET_C
BRACKET_O

now
MINUS

prev
MINUS
GREATER

timestamp
BRACKET_C
LESS

NS_MAX_SLEEP_AVG
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

run_time
OP_ASSIGNMENT

now
MINUS

prev
MINUS
GREATER

timestamp
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
BRACKET_O
TYPE_LONG
TYPE_LONG
BRACKET_C
BRACKET_O

now
MINUS

prev
MINUS
GREATER

timestamp
BRACKET_C
LESS
NUMBER
BRACKET_C
BRACKET_C

run_time
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE

run_time
OP_ASSIGNMENT

NS_MAX_SLEEP_AVG
SEMICOLON

run_time
ASSIGN_DIV
BRACKET_O

CURRENT_BONUS
BRACKET_O

prev
BRACKET_C
QUESTION_MARK
COLON
NUMBER
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

switch_count
OP_ASSIGNMENT
AMPERSANT

prev
MINUS
GREATER

nivcsw
SEMICOLON
IF
BRACKET_O

prev
MINUS
GREATER

state
AND
NOT
BRACKET_O

preempt_count
BRACKET_O
BRACKET_C
AMPERSANT

PREEMPT_ACTIVE
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

switch_count
OP_ASSIGNMENT
AMPERSANT

prev
MINUS
GREATER

nvcsw
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
BRACKET_O

prev
MINUS
GREATER

state
AMPERSANT

TASK_INTERRUPTIBLE
BRACKET_C
AND

unlikely
BRACKET_O

signal_pending
BRACKET_O

prev
BRACKET_C
BRACKET_C
BRACKET_C
BRACKET_C

prev
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_RUNNING
SEMICOLON
ELSE
CURLY_BRACKET_O
IF
BRACKET_O

prev
MINUS
GREATER

state
EQ

TASK_UNINTERRUPTIBLE
BRACKET_C

rq
MINUS
GREATER

nr_uninterruptible
PLUS
PLUS
SEMICOLON

deactivate_task
BRACKET_O

prev
COMMA

rq
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

rq
MINUS
GREATER

nr_running
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

idle_balance
BRACKET_O

cpu
COMMA

rq
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

rq
MINUS
GREATER

nr_running
BRACKET_C
CURLY_BRACKET_O

next
OP_ASSIGNMENT

rq
MINUS
GREATER

idle
SEMICOLON

rq
MINUS
GREATER

expired_timestamp
OP_ASSIGNMENT
NUMBER
SEMICOLON

goto

switch_tasks
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

array
OP_ASSIGNMENT

rq
MINUS
GREATER

active
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

array
MINUS
GREATER

nr_active
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

rq
COMMA

sched_switch
BRACKET_C
SEMICOLON

rq
MINUS
GREATER

active
OP_ASSIGNMENT

rq
MINUS
GREATER

expired
SEMICOLON

rq
MINUS
GREATER

expired
OP_ASSIGNMENT

array
SEMICOLON

array
OP_ASSIGNMENT

rq
MINUS
GREATER

active
SEMICOLON

rq
MINUS
GREATER

expired_timestamp
OP_ASSIGNMENT
NUMBER
SEMICOLON

rq
MINUS
GREATER

best_expired_prio
OP_ASSIGNMENT

MAX_PRIO
SEMICOLON
CURLY_BRACKET_C

idx
OP_ASSIGNMENT

sched_find_first_bit
BRACKET_O

array
MINUS
GREATER

bitmap
BRACKET_C
SEMICOLON

queue
OP_ASSIGNMENT

array
MINUS
GREATER

queue
PLUS

idx
SEMICOLON

next
OP_ASSIGNMENT

list_entry
BRACKET_O

queue
MINUS
GREATER

next
COMMA
STRUCT

task_struct
COMMA

run_list
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

rt_task
BRACKET_O

next
BRACKET_C
AND

interactive_sleep
BRACKET_O

next
MINUS
GREATER

sleep_type
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

delta
OP_ASSIGNMENT

now
MINUS

next
MINUS
GREATER

timestamp
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
BRACKET_O
TYPE_LONG
TYPE_LONG
BRACKET_C
BRACKET_O

now
MINUS

next
MINUS
GREATER

timestamp
BRACKET_C
LESS
NUMBER
BRACKET_C
BRACKET_C

delta
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

next
MINUS
GREATER

sleep_type
EQ

SLEEP_INTERACTIVE
BRACKET_C

delta
OP_ASSIGNMENT

delta
MULT
BRACKET_O

ON_RUNQUEUE_WEIGHT
MULT
NUMBER
DIV
NUMBER
BRACKET_C
DIV
NUMBER
SEMICOLON

array
OP_ASSIGNMENT

next
MINUS
GREATER

array
SEMICOLON

new_prio
OP_ASSIGNMENT

recalc_task_prio
BRACKET_O

next
COMMA

next
MINUS
GREATER

timestamp
PLUS

delta
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

next
MINUS
GREATER

prio
NOT_EQ

new_prio
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

dequeue_task
BRACKET_O

next
COMMA

array
BRACKET_C
SEMICOLON

next
MINUS
GREATER

prio
OP_ASSIGNMENT

new_prio
SEMICOLON

enqueue_task
BRACKET_O

next
COMMA

array
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

next
MINUS
GREATER

sleep_type
OP_ASSIGNMENT

SLEEP_NORMAL
SEMICOLON

switch_tasks
COLON
IF
BRACKET_O

next
EQ

rq
MINUS
GREATER

idle
BRACKET_C

schedstat_inc
BRACKET_O

rq
COMMA

sched_goidle
BRACKET_C
SEMICOLON

prefetch
BRACKET_O

next
BRACKET_C
SEMICOLON

prefetch_stack
BRACKET_O

next
BRACKET_C
SEMICOLON

clear_tsk_need_resched
BRACKET_O

prev
BRACKET_C
SEMICOLON

rcu_qsctr_inc
BRACKET_O

task_cpu
BRACKET_O

prev
BRACKET_C
BRACKET_C
SEMICOLON

update_cpu_clock
BRACKET_O

prev
COMMA

rq
COMMA

now
BRACKET_C
SEMICOLON

prev
MINUS
GREATER

sleep_avg
ASSIGN_MINUS

run_time
SEMICOLON
IF
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C

prev
MINUS
GREATER

sleep_avg
LE_EQ
NUMBER
BRACKET_C

prev
MINUS
GREATER

sleep_avg
OP_ASSIGNMENT
NUMBER
SEMICOLON

prev
MINUS
GREATER

timestamp
OP_ASSIGNMENT

prev
MINUS
GREATER

last_ran
OP_ASSIGNMENT

now
SEMICOLON

sched_info_switch
BRACKET_O

prev
COMMA

next
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

prev
NOT_EQ

next
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

next
MINUS
GREATER

timestamp
OP_ASSIGNMENT

next
MINUS
GREATER

last_ran
OP_ASSIGNMENT

now
SEMICOLON

rq
MINUS
GREATER

nr_switches
PLUS
PLUS
SEMICOLON

rq
MINUS
GREATER

curr
OP_ASSIGNMENT

next
SEMICOLON
PLUS
PLUS
MULT

switch_count
SEMICOLON

prepare_task_switch
BRACKET_O

rq
COMMA

next
BRACKET_C
SEMICOLON

prev
OP_ASSIGNMENT

context_switch
BRACKET_O

rq
COMMA

prev
COMMA

next
BRACKET_C
SEMICOLON

barrier
BRACKET_O
BRACKET_C
SEMICOLON

finish_task_switch
BRACKET_O

this_rq
BRACKET_O
BRACKET_C
COMMA

prev
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

spin_unlock_irq
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

prev
OP_ASSIGNMENT

current
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

reacquire_kernel_lock
BRACKET_O

prev
BRACKET_C
LESS
NUMBER
BRACKET_C
BRACKET_C

goto

need_resched_nonpreemptible
SEMICOLON

preempt_enable_no_resched
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

test_thread_flag
BRACKET_O

TIF_NEED_RESCHED
BRACKET_C
BRACKET_C
BRACKET_C

goto

need_resched
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

schedule
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_PREEMPT

asmlinkage

void

__sched

preempt_schedule
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

thread_info
MULT

ti
OP_ASSIGNMENT

current_thread_info
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_PREEMPT_BKL
STRUCT

task_struct
MULT

task
OP_ASSIGNMENT

current
SEMICOLON
TYPE_INT

saved_lock_depth
SEMICOLON
PP_ENDIF
IF
BRACKET_O

likely
BRACKET_O

ti
MINUS
GREATER

preempt_count
OR

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

return
SEMICOLON

need_resched
COLON

add_preempt_count
BRACKET_O

PREEMPT_ACTIVE
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_PREEMPT_BKL

saved_lock_depth
OP_ASSIGNMENT

task
MINUS
GREATER

lock_depth
SEMICOLON

task
MINUS
GREATER

lock_depth
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
PP_ENDIF

schedule
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_PREEMPT_BKL

task
MINUS
GREATER

lock_depth
OP_ASSIGNMENT

saved_lock_depth
SEMICOLON
PP_ENDIF

sub_preempt_count
BRACKET_O

PREEMPT_ACTIVE
BRACKET_C
SEMICOLON

barrier
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

test_thread_flag
BRACKET_O

TIF_NEED_RESCHED
BRACKET_C
BRACKET_C
BRACKET_C

goto

need_resched
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

preempt_schedule
BRACKET_C
SEMICOLON

asmlinkage

void

__sched

preempt_schedule_irq
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

thread_info
MULT

ti
OP_ASSIGNMENT

current_thread_info
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_PREEMPT_BKL
STRUCT

task_struct
MULT

task
OP_ASSIGNMENT

current
SEMICOLON
TYPE_INT

saved_lock_depth
SEMICOLON
PP_ENDIF

BUG_ON
BRACKET_O

ti
MINUS
GREATER

preempt_count
OR
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

need_resched
COLON

add_preempt_count
BRACKET_O

PREEMPT_ACTIVE
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_PREEMPT_BKL

saved_lock_depth
OP_ASSIGNMENT

task
MINUS
GREATER

lock_depth
SEMICOLON

task
MINUS
GREATER

lock_depth
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
PP_ENDIF

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_PREEMPT_BKL

task
MINUS
GREATER

lock_depth
OP_ASSIGNMENT

saved_lock_depth
SEMICOLON
PP_ENDIF

sub_preempt_count
BRACKET_O

PREEMPT_ACTIVE
BRACKET_C
SEMICOLON

barrier
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

test_thread_flag
BRACKET_O

TIF_NEED_RESCHED
BRACKET_C
BRACKET_C
BRACKET_C

goto

need_resched
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
TYPE_INT

default_wake_function
BRACKET_O

wait_queue_t
MULT

curr
COMMA
TYPE_UNSIGNED

mode
COMMA
TYPE_INT

sync
COMMA

void
MULT

key
BRACKET_C
CURLY_BRACKET_O

return

try_to_wake_up
BRACKET_O

curr
MINUS
GREATER

private
COMMA

mode
COMMA

sync
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

default_wake_function
BRACKET_C
SEMICOLON

static

void

__wake_up_common
BRACKET_O

wait_queue_head_t
MULT

q
COMMA
TYPE_UNSIGNED
TYPE_INT

mode
COMMA
TYPE_INT

nr_exclusive
COMMA
TYPE_INT

sync
COMMA

void
MULT

key
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head
MULT

tmp
COMMA
MULT

next
SEMICOLON

list_for_each_safe
BRACKET_O

tmp
COMMA

next
COMMA
AMPERSANT

q
MINUS
GREATER

task_list
BRACKET_C
CURLY_BRACKET_O

wait_queue_t
MULT

curr
OP_ASSIGNMENT

list_entry
BRACKET_O

tmp
COMMA

wait_queue_t
COMMA

task_list
BRACKET_C
SEMICOLON
TYPE_UNSIGNED

flags
OP_ASSIGNMENT

curr
MINUS
GREATER

flags
SEMICOLON
IF
BRACKET_O

curr
MINUS
GREATER

func
BRACKET_O

curr
COMMA

mode
COMMA

sync
COMMA

key
BRACKET_C
AND
BRACKET_O

flags
AMPERSANT

WQ_FLAG_EXCLUSIVE
BRACKET_C
AND
NOT
MINUS
MINUS

nr_exclusive
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

fastcall

__wake_up
BRACKET_O

wait_queue_head_t
MULT

q
COMMA
TYPE_UNSIGNED
TYPE_INT

mode
COMMA
TYPE_INT

nr_exclusive
COMMA

void
MULT

key
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

__wake_up_common
BRACKET_O

q
COMMA

mode
COMMA

nr_exclusive
COMMA
NUMBER
COMMA

key
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__wake_up
BRACKET_C
SEMICOLON

void

fastcall

__wake_up_locked
BRACKET_O

wait_queue_head_t
MULT

q
COMMA
TYPE_UNSIGNED
TYPE_INT

mode
BRACKET_C
CURLY_BRACKET_O

__wake_up_common
BRACKET_O

q
COMMA

mode
COMMA
NUMBER
COMMA
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

fastcall

__wake_up_sync
BRACKET_O

wait_queue_head_t
MULT

q
COMMA
TYPE_UNSIGNED
TYPE_INT

mode
COMMA
TYPE_INT

nr_exclusive
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

sync
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

q
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

nr_exclusive
BRACKET_C
BRACKET_C

sync
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

__wake_up_common
BRACKET_O

q
COMMA

mode
COMMA

nr_exclusive
COMMA

sync
COMMA

NULL
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

__wake_up_sync
BRACKET_C
SEMICOLON

void

fastcall

complete
BRACKET_O
STRUCT

completion
MULT

x
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
COMMA

flags
BRACKET_C
SEMICOLON

x
MINUS
GREATER

done
PLUS
PLUS
SEMICOLON

__wake_up_common
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA

TASK_UNINTERRUPTIBLE
LOGICAL_OR

TASK_INTERRUPTIBLE
COMMA
NUMBER
COMMA
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

complete
BRACKET_C
SEMICOLON

void

fastcall

complete_all
BRACKET_O
STRUCT

completion
MULT

x
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
COMMA

flags
BRACKET_C
SEMICOLON

x
MINUS
GREATER

done
ASSIGN_PLUS

UINT_MAX
DIV
NUMBER
SEMICOLON

__wake_up_common
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA

TASK_UNINTERRUPTIBLE
LOGICAL_OR

TASK_INTERRUPTIBLE
COMMA
NUMBER
COMMA
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

complete_all
BRACKET_C
SEMICOLON

void

fastcall

__sched

wait_for_completion
BRACKET_O
STRUCT

completion
MULT

x
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

x
MINUS
GREATER

done
BRACKET_C
CURLY_BRACKET_O

DECLARE_WAITQUEUE
BRACKET_O

wait
COMMA

current
BRACKET_C
SEMICOLON

wait
DOT

flags
LOGICAL_OR
OP_ASSIGNMENT

WQ_FLAG_EXCLUSIVE
SEMICOLON

__add_wait_queue_tail
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O

__set_current_state
BRACKET_O

TASK_UNINTERRUPTIBLE
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

x
MINUS
GREATER

done
BRACKET_C
SEMICOLON

__remove_wait_queue
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

x
MINUS
GREATER

done
MINUS
MINUS
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

wait_for_completion
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

fastcall

__sched

wait_for_completion_timeout
BRACKET_O
STRUCT

completion
MULT

x
COMMA
TYPE_UNSIGNED
TYPE_LONG

timeout
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

x
MINUS
GREATER

done
BRACKET_C
CURLY_BRACKET_O

DECLARE_WAITQUEUE
BRACKET_O

wait
COMMA

current
BRACKET_C
SEMICOLON

wait
DOT

flags
LOGICAL_OR
OP_ASSIGNMENT

WQ_FLAG_EXCLUSIVE
SEMICOLON

__add_wait_queue_tail
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O

__set_current_state
BRACKET_O

TASK_UNINTERRUPTIBLE
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON

timeout
OP_ASSIGNMENT

schedule_timeout
BRACKET_O

timeout
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

timeout
BRACKET_C
CURLY_BRACKET_O

__remove_wait_queue
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

x
MINUS
GREATER

done
BRACKET_C
SEMICOLON

__remove_wait_queue
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

x
MINUS
GREATER

done
MINUS
MINUS
SEMICOLON

out
COLON

spin_unlock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON

return

timeout
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

wait_for_completion_timeout
BRACKET_C
SEMICOLON
TYPE_INT

fastcall

__sched

wait_for_completion_interruptible
BRACKET_O
STRUCT

completion
MULT

x
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

x
MINUS
GREATER

done
BRACKET_C
CURLY_BRACKET_O

DECLARE_WAITQUEUE
BRACKET_O

wait
COMMA

current
BRACKET_C
SEMICOLON

wait
DOT

flags
LOGICAL_OR
OP_ASSIGNMENT

WQ_FLAG_EXCLUSIVE
SEMICOLON

__add_wait_queue_tail
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O
IF
BRACKET_O

signal_pending
BRACKET_O

current
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

ERESTARTSYS
SEMICOLON

__remove_wait_queue
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

__set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

x
MINUS
GREATER

done
BRACKET_C
SEMICOLON

__remove_wait_queue
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

x
MINUS
GREATER

done
MINUS
MINUS
SEMICOLON

out
COLON

spin_unlock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

wait_for_completion_interruptible
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

fastcall

__sched

wait_for_completion_interruptible_timeout
BRACKET_O
STRUCT

completion
MULT

x
COMMA
TYPE_UNSIGNED
TYPE_LONG

timeout
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

x
MINUS
GREATER

done
BRACKET_C
CURLY_BRACKET_O

DECLARE_WAITQUEUE
BRACKET_O

wait
COMMA

current
BRACKET_C
SEMICOLON

wait
DOT

flags
LOGICAL_OR
OP_ASSIGNMENT

WQ_FLAG_EXCLUSIVE
SEMICOLON

__add_wait_queue_tail
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O
IF
BRACKET_O

signal_pending
BRACKET_O

current
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

timeout
OP_ASSIGNMENT
MINUS

ERESTARTSYS
SEMICOLON

__remove_wait_queue
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

__set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON

timeout
OP_ASSIGNMENT

schedule_timeout
BRACKET_O

timeout
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

timeout
BRACKET_C
CURLY_BRACKET_O

__remove_wait_queue
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

x
MINUS
GREATER

done
BRACKET_C
SEMICOLON

__remove_wait_queue
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

x
MINUS
GREATER

done
MINUS
MINUS
SEMICOLON

out
COLON

spin_unlock_irq
BRACKET_O
AMPERSANT

x
MINUS
GREATER

wait
DOT

lock
BRACKET_C
SEMICOLON

return

timeout
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

wait_for_completion_interruptible_timeout
BRACKET_C
SEMICOLON
PP_DEFINE

SLEEP_ON_VAR
BACKLASHED_NEWLINE
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
BACKLASHED_NEWLINE

wait_queue_t

wait
SEMICOLON
BACKLASHED_NEWLINE

init_waitqueue_entry
BRACKET_O
AMPERSANT

wait
COMMA

current
BRACKET_C
SEMICOLON
PP_DEFINE

SLEEP_ON_HEAD
BACKLASHED_NEWLINE

spin_lock_irqsave
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE

__add_wait_queue
BRACKET_O

q
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE

spin_unlock
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
PP_DEFINE

SLEEP_ON_TAIL
BACKLASHED_NEWLINE

spin_lock_irq
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE

__remove_wait_queue
BRACKET_O

q
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

void

fastcall

__sched

interruptible_sleep_on
BRACKET_O

wait_queue_head_t
MULT

q
BRACKET_C
CURLY_BRACKET_O

SLEEP_ON_VAR

current
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_INTERRUPTIBLE
SEMICOLON

SLEEP_ON_HEAD

schedule
BRACKET_O
BRACKET_C
SEMICOLON

SLEEP_ON_TAIL
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

interruptible_sleep_on
BRACKET_C
SEMICOLON
TYPE_LONG

fastcall

__sched

interruptible_sleep_on_timeout
BRACKET_O

wait_queue_head_t
MULT

q
COMMA
TYPE_LONG

timeout
BRACKET_C
CURLY_BRACKET_O

SLEEP_ON_VAR

current
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_INTERRUPTIBLE
SEMICOLON

SLEEP_ON_HEAD

timeout
OP_ASSIGNMENT

schedule_timeout
BRACKET_O

timeout
BRACKET_C
SEMICOLON

SLEEP_ON_TAIL

return

timeout
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

interruptible_sleep_on_timeout
BRACKET_C
SEMICOLON

void

fastcall

__sched

sleep_on
BRACKET_O

wait_queue_head_t
MULT

q
BRACKET_C
CURLY_BRACKET_O

SLEEP_ON_VAR

current
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_UNINTERRUPTIBLE
SEMICOLON

SLEEP_ON_HEAD

schedule
BRACKET_O
BRACKET_C
SEMICOLON

SLEEP_ON_TAIL
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

sleep_on
BRACKET_C
SEMICOLON
TYPE_LONG

fastcall

__sched

sleep_on_timeout
BRACKET_O

wait_queue_head_t
MULT

q
COMMA
TYPE_LONG

timeout
BRACKET_C
CURLY_BRACKET_O

SLEEP_ON_VAR

current
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_UNINTERRUPTIBLE
SEMICOLON

SLEEP_ON_HEAD

timeout
OP_ASSIGNMENT

schedule_timeout
BRACKET_O

timeout
BRACKET_C
SEMICOLON

SLEEP_ON_TAIL

return

timeout
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

sleep_on_timeout
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_RT_MUTEXES

void

rt_mutex_setprio
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

prio
BRACKET_C
CURLY_BRACKET_O
STRUCT

prio_array
MULT

array
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON
TYPE_INT

oldprio
SEMICOLON

BUG_ON
BRACKET_O

prio
LESS
NUMBER
OR

prio
GREATER

MAX_PRIO
BRACKET_C
SEMICOLON

rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

oldprio
OP_ASSIGNMENT

p
MINUS
GREATER

prio
SEMICOLON

array
OP_ASSIGNMENT

p
MINUS
GREATER

array
SEMICOLON
IF
BRACKET_O

array
BRACKET_C

dequeue_task
BRACKET_O

p
COMMA

array
BRACKET_C
SEMICOLON

p
MINUS
GREATER

prio
OP_ASSIGNMENT

prio
SEMICOLON
IF
BRACKET_O

array
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

rt_task
BRACKET_O

p
BRACKET_C
BRACKET_C

array
OP_ASSIGNMENT

rq
MINUS
GREATER

active
SEMICOLON

enqueue_task
BRACKET_O

p
COMMA

array
BRACKET_C
SEMICOLON
IF
BRACKET_O

task_running
BRACKET_O

rq
COMMA

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

prio
GREATER

oldprio
BRACKET_C

resched_task
BRACKET_O

rq
MINUS
GREATER

curr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

TASK_PREEMPTS_CURR
BRACKET_O

p
COMMA

rq
BRACKET_C
BRACKET_C

resched_task
BRACKET_O

rq
MINUS
GREATER

curr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

void

set_user_nice
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_LONG

nice
BRACKET_C
CURLY_BRACKET_O
STRUCT

prio_array
MULT

array
SEMICOLON
TYPE_INT

old_prio
COMMA

delta
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON
IF
BRACKET_O

TASK_NICE
BRACKET_O

p
BRACKET_C
EQ

nice
OR

nice
LESS
MINUS
NUMBER
OR

nice
GREATER
NUMBER
BRACKET_C

return
SEMICOLON

rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

has_rt_policy
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

static_prio
OP_ASSIGNMENT

NICE_TO_PRIO
BRACKET_O

nice
BRACKET_C
SEMICOLON

goto

out_unlock
SEMICOLON
CURLY_BRACKET_C

array
OP_ASSIGNMENT

p
MINUS
GREATER

array
SEMICOLON
IF
BRACKET_O

array
BRACKET_C
CURLY_BRACKET_O

dequeue_task
BRACKET_O

p
COMMA

array
BRACKET_C
SEMICOLON

dec_raw_weighted_load
BRACKET_O

rq
COMMA

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

p
MINUS
GREATER

static_prio
OP_ASSIGNMENT

NICE_TO_PRIO
BRACKET_O

nice
BRACKET_C
SEMICOLON

set_load_weight
BRACKET_O

p
BRACKET_C
SEMICOLON

old_prio
OP_ASSIGNMENT

p
MINUS
GREATER

prio
SEMICOLON

p
MINUS
GREATER

prio
OP_ASSIGNMENT

effective_prio
BRACKET_O

p
BRACKET_C
SEMICOLON

delta
OP_ASSIGNMENT

p
MINUS
GREATER

prio
MINUS

old_prio
SEMICOLON
IF
BRACKET_O

array
BRACKET_C
CURLY_BRACKET_O

enqueue_task
BRACKET_O

p
COMMA

array
BRACKET_C
SEMICOLON

inc_raw_weighted_load
BRACKET_O

rq
COMMA

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

delta
LESS
NUMBER
OR
BRACKET_O

delta
GREATER
NUMBER
AND

task_running
BRACKET_O

rq
COMMA

p
BRACKET_C
BRACKET_C
BRACKET_C

resched_task
BRACKET_O

rq
MINUS
GREATER

curr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

out_unlock
COLON

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

set_user_nice
BRACKET_C
SEMICOLON
TYPE_INT

can_nice
BRACKET_O
CONST
STRUCT

task_struct
MULT

p
COMMA
CONST
TYPE_INT

nice
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

nice_rlim
OP_ASSIGNMENT
NUMBER
MINUS

nice
SEMICOLON

return
BRACKET_O

nice_rlim
LE_EQ

p
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_NICE
CORNER_BRACKET_C
DOT

rlim_cur
OR

capable
BRACKET_O

CAP_SYS_NICE
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

__ARCH_WANT_SYS_NICE

asmlinkage
TYPE_LONG

sys_nice
BRACKET_O
TYPE_INT

increment
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

nice
COMMA

retval
SEMICOLON
IF
BRACKET_O

increment
LESS
MINUS
NUMBER
BRACKET_C

increment
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

increment
GREATER
NUMBER
BRACKET_C

increment
OP_ASSIGNMENT
NUMBER
SEMICOLON

nice
OP_ASSIGNMENT

PRIO_TO_NICE
BRACKET_O

current
MINUS
GREATER

static_prio
BRACKET_C
PLUS

increment
SEMICOLON
IF
BRACKET_O

nice
LESS
MINUS
NUMBER
BRACKET_C

nice
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

nice
GREATER
NUMBER
BRACKET_C

nice
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

increment
LESS
NUMBER
AND
NOT

can_nice
BRACKET_O

current
COMMA

nice
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON

retval
OP_ASSIGNMENT

security_task_setnice
BRACKET_O

current
COMMA

nice
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON

set_user_nice
BRACKET_O

current
COMMA

nice
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
TYPE_INT

task_prio
BRACKET_O
CONST
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

return

p
MINUS
GREATER

prio
MINUS

MAX_RT_PRIO
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

task_nice
BRACKET_O
CONST
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

return

TASK_NICE
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

task_nice
BRACKET_C
SEMICOLON
TYPE_INT

idle_cpu
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O

return

cpu_curr
BRACKET_O

cpu
BRACKET_C
EQ

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

idle
SEMICOLON
CURLY_BRACKET_C
STRUCT

task_struct
MULT

idle_task
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O

return

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

idle
SEMICOLON
CURLY_BRACKET_C

static

inline
STRUCT

task_struct
MULT

find_process_by_pid
BRACKET_O

pid_t

pid
BRACKET_C
CURLY_BRACKET_O

return

pid
QUESTION_MARK

find_task_by_pid
BRACKET_O

pid
BRACKET_C
COLON

current
SEMICOLON
CURLY_BRACKET_C

static

void

__setscheduler
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

policy
COMMA
TYPE_INT

prio
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

p
MINUS
GREATER

array
BRACKET_C
SEMICOLON

p
MINUS
GREATER

policy
OP_ASSIGNMENT

policy
SEMICOLON

p
MINUS
GREATER

rt_priority
OP_ASSIGNMENT

prio
SEMICOLON

p
MINUS
GREATER

normal_prio
OP_ASSIGNMENT

normal_prio
BRACKET_O

p
BRACKET_C
SEMICOLON

p
MINUS
GREATER

prio
OP_ASSIGNMENT

rt_mutex_getprio
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

policy
EQ

SCHED_BATCH
BRACKET_C

p
MINUS
GREATER

sleep_avg
OP_ASSIGNMENT
NUMBER
SEMICOLON

set_load_weight
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

sched_setscheduler
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

policy
COMMA
STRUCT

sched_param
MULT

param
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
COMMA

oldprio
COMMA

oldpolicy
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
STRUCT

prio_array
MULT

array
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON

BUG_ON
BRACKET_O

in_interrupt
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

recheck
COLON
IF
BRACKET_O

policy
LESS
NUMBER
BRACKET_C

policy
OP_ASSIGNMENT

oldpolicy
OP_ASSIGNMENT

p
MINUS
GREATER

policy
SEMICOLON
ELSE
IF
BRACKET_O

policy
NOT_EQ

SCHED_FIFO
AND

policy
NOT_EQ

SCHED_RR
AND

policy
NOT_EQ

SCHED_NORMAL
AND

policy
NOT_EQ

SCHED_BATCH
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

param
MINUS
GREATER

sched_priority
LESS
NUMBER
OR
BRACKET_O

p
MINUS
GREATER

mm
AND

param
MINUS
GREATER

sched_priority
GREATER

MAX_USER_RT_PRIO
MINUS
NUMBER
BRACKET_C
OR
BRACKET_O
NOT

p
MINUS
GREATER

mm
AND

param
MINUS
GREATER

sched_priority
GREATER

MAX_RT_PRIO
MINUS
NUMBER
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

is_rt_policy
BRACKET_O

policy
BRACKET_C
NOT_EQ
BRACKET_O

param
MINUS
GREATER

sched_priority
NOT_EQ
NUMBER
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SYS_NICE
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

is_rt_policy
BRACKET_O

policy
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

rlim_rtprio
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O
NOT

lock_task_sighand
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
BRACKET_C

return
MINUS

ESRCH
SEMICOLON

rlim_rtprio
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_RTPRIO
CORNER_BRACKET_C
DOT

rlim_cur
SEMICOLON

unlock_task_sighand
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

policy
NOT_EQ

p
MINUS
GREATER

policy
AND
NOT

rlim_rtprio
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

param
MINUS
GREATER

sched_priority
GREATER

p
MINUS
GREATER

rt_priority
AND

param
MINUS
GREATER

sched_priority
GREATER

rlim_rtprio
BRACKET_C

return
MINUS

EPERM
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

p
MINUS
GREATER

euid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

p
MINUS
GREATER

uid
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
CURLY_BRACKET_C

retval
OP_ASSIGNMENT

security_task_setscheduler
BRACKET_O

p
COMMA

policy
COMMA

param
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

rq
OP_ASSIGNMENT

__task_rq_lock
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

oldpolicy
NOT_EQ
MINUS
NUMBER
AND

oldpolicy
NOT_EQ

p
MINUS
GREATER

policy
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

policy
OP_ASSIGNMENT

oldpolicy
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

__task_rq_unlock
BRACKET_O

rq
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

goto

recheck
SEMICOLON
CURLY_BRACKET_C

array
OP_ASSIGNMENT

p
MINUS
GREATER

array
SEMICOLON
IF
BRACKET_O

array
BRACKET_C

deactivate_task
BRACKET_O

p
COMMA

rq
BRACKET_C
SEMICOLON

oldprio
OP_ASSIGNMENT

p
MINUS
GREATER

prio
SEMICOLON

__setscheduler
BRACKET_O

p
COMMA

policy
COMMA

param
MINUS
GREATER

sched_priority
BRACKET_C
SEMICOLON
IF
BRACKET_O

array
BRACKET_C
CURLY_BRACKET_O

__activate_task
BRACKET_O

p
COMMA

rq
BRACKET_C
SEMICOLON
IF
BRACKET_O

task_running
BRACKET_O

rq
COMMA

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

prio
GREATER

oldprio
BRACKET_C

resched_task
BRACKET_O

rq
MINUS
GREATER

curr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

TASK_PREEMPTS_CURR
BRACKET_O

p
COMMA

rq
BRACKET_C
BRACKET_C

resched_task
BRACKET_O

rq
MINUS
GREATER

curr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__task_rq_unlock
BRACKET_O

rq
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

rt_mutex_adjust_pi
BRACKET_O

p
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

sched_setscheduler
BRACKET_C
SEMICOLON

static
TYPE_INT

do_sched_setscheduler
BRACKET_O

pid_t

pid
COMMA
TYPE_INT

policy
COMMA
STRUCT

sched_param

__user
MULT

param
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_param

lparam
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON
TYPE_INT

retval
SEMICOLON
IF
BRACKET_O
NOT

param
OR

pid
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

lparam
COMMA

param
COMMA

sizeof
BRACKET_O
STRUCT

sched_param
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

p
OP_ASSIGNMENT

find_process_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
NOT_EQ

NULL
BRACKET_C

retval
OP_ASSIGNMENT

sched_setscheduler
BRACKET_O

p
COMMA

policy
COMMA
AMPERSANT

lparam
BRACKET_C
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sched_setscheduler
BRACKET_O

pid_t

pid
COMMA
TYPE_INT

policy
COMMA
STRUCT

sched_param

__user
MULT

param
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

policy
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

return

do_sched_setscheduler
BRACKET_O

pid
COMMA

policy
COMMA

param
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sched_setparam
BRACKET_O

pid_t

pid
COMMA
STRUCT

sched_param

__user
MULT

param
BRACKET_C
CURLY_BRACKET_O

return

do_sched_setscheduler
BRACKET_O

pid
COMMA
MINUS
NUMBER
COMMA

param
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sched_getscheduler
BRACKET_O

pid_t

pid
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON
TYPE_INT

retval
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

pid
LESS
NUMBER
BRACKET_C

goto

out_nounlock
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

find_process_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
BRACKET_C
CURLY_BRACKET_O

retval
OP_ASSIGNMENT

security_task_getscheduler
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

p
MINUS
GREATER

policy
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

out_nounlock
COLON

return

retval
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sched_getparam
BRACKET_O

pid_t

pid
COMMA
STRUCT

sched_param

__user
MULT

param
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_param

lp
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON
TYPE_INT

retval
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
NOT

param
OR

pid
LESS
NUMBER
BRACKET_C

goto

out_nounlock
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

find_process_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON
IF
BRACKET_O
NOT

p
BRACKET_C

goto

out_unlock
SEMICOLON

retval
OP_ASSIGNMENT

security_task_getscheduler
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

goto

out_unlock
SEMICOLON

lp
DOT

sched_priority
OP_ASSIGNMENT

p
MINUS
GREATER

rt_priority
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT

copy_to_user
BRACKET_O

param
COMMA
AMPERSANT

lp
COMMA

sizeof
BRACKET_O
MULT

param
BRACKET_C
BRACKET_C
QUESTION_MARK
MINUS

EFAULT
COLON
NUMBER
SEMICOLON

out_nounlock
COLON

return

retval
SEMICOLON

out_unlock
COLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

sched_setaffinity
BRACKET_O

pid_t

pid
COMMA

cpumask_t

new_mask
BRACKET_C
CURLY_BRACKET_O

cpumask_t

cpus_allowed
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON
TYPE_INT

retval
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

sched_hotcpu_mutex
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

find_process_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
BRACKET_C
CURLY_BRACKET_O

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

sched_hotcpu_mutex
BRACKET_C
SEMICOLON

return
MINUS

ESRCH
SEMICOLON
CURLY_BRACKET_C

get_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
IF
BRACKET_O
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

p
MINUS
GREATER

euid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

p
MINUS
GREATER

uid
BRACKET_C
AND
NOT

capable
BRACKET_O

CAP_SYS_NICE
BRACKET_C
BRACKET_C

goto

out_unlock
SEMICOLON

retval
OP_ASSIGNMENT

security_task_setscheduler
BRACKET_O

p
COMMA
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

goto

out_unlock
SEMICOLON

cpus_allowed
OP_ASSIGNMENT

cpuset_cpus_allowed
BRACKET_O

p
BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

new_mask
COMMA

new_mask
COMMA

cpus_allowed
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT

set_cpus_allowed
BRACKET_O

p
COMMA

new_mask
BRACKET_C
SEMICOLON

out_unlock
COLON

put_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

sched_hotcpu_mutex
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

get_user_cpu_mask
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

__user
MULT

user_mask_ptr
COMMA
TYPE_UNSIGNED

len
COMMA

cpumask_t
MULT

new_mask
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

len
LESS

sizeof
BRACKET_O

cpumask_t
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

memset
BRACKET_O

new_mask
COMMA
NUMBER
COMMA

sizeof
BRACKET_O

cpumask_t
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

len
GREATER

sizeof
BRACKET_O

cpumask_t
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

len
OP_ASSIGNMENT

sizeof
BRACKET_O

cpumask_t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

copy_from_user
BRACKET_O

new_mask
COMMA

user_mask_ptr
COMMA

len
BRACKET_C
QUESTION_MARK
MINUS

EFAULT
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sched_setaffinity
BRACKET_O

pid_t

pid
COMMA
TYPE_UNSIGNED
TYPE_INT

len
COMMA
TYPE_UNSIGNED
TYPE_LONG

__user
MULT

user_mask_ptr
BRACKET_C
CURLY_BRACKET_O

cpumask_t

new_mask
SEMICOLON
TYPE_INT

retval
SEMICOLON

retval
OP_ASSIGNMENT

get_user_cpu_mask
BRACKET_O

user_mask_ptr
COMMA

len
COMMA
AMPERSANT

new_mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON

return

sched_setaffinity
BRACKET_O

pid
COMMA

new_mask
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

cpumask_t

cpu_present_map

__read_mostly
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

cpu_present_map
BRACKET_C
SEMICOLON
PP_IFNDEF

CONFIG_SMP

cpumask_t

cpu_online_map

__read_mostly
OP_ASSIGNMENT

CPU_MASK_ALL
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

cpu_online_map
BRACKET_C
SEMICOLON

cpumask_t

cpu_possible_map

__read_mostly
OP_ASSIGNMENT

CPU_MASK_ALL
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

cpu_possible_map
BRACKET_C
SEMICOLON
PP_ENDIF
TYPE_LONG

sched_getaffinity
BRACKET_O

pid_t

pid
COMMA

cpumask_t
MULT

mask
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON
TYPE_INT

retval
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

sched_hotcpu_mutex
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

p
OP_ASSIGNMENT

find_process_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
BRACKET_C

goto

out_unlock
SEMICOLON

retval
OP_ASSIGNMENT

security_task_getscheduler
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

goto

out_unlock
SEMICOLON

cpus_and
BRACKET_O
MULT

mask
COMMA

p
MINUS
GREATER

cpus_allowed
COMMA

cpu_online_map
BRACKET_C
SEMICOLON

out_unlock
COLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

sched_hotcpu_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sched_getaffinity
BRACKET_O

pid_t

pid
COMMA
TYPE_UNSIGNED
TYPE_INT

len
COMMA
TYPE_UNSIGNED
TYPE_LONG

__user
MULT

user_mask_ptr
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

cpumask_t

mask
SEMICOLON
IF
BRACKET_O

len
LESS

sizeof
BRACKET_O

cpumask_t
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

ret
OP_ASSIGNMENT

sched_getaffinity
BRACKET_O

pid
COMMA
AMPERSANT

mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
LESS
NUMBER
BRACKET_C

return

ret
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

user_mask_ptr
COMMA
AMPERSANT

mask
COMMA

sizeof
BRACKET_O

cpumask_t
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return

sizeof
BRACKET_O

cpumask_t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sched_yield
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

this_rq_lock
BRACKET_O
BRACKET_C
SEMICOLON
STRUCT

prio_array
MULT

array
OP_ASSIGNMENT

current
MINUS
GREATER

array
COMMA
MULT

target
OP_ASSIGNMENT

rq
MINUS
GREATER

expired
SEMICOLON

schedstat_inc
BRACKET_O

rq
COMMA

yld_cnt
BRACKET_C
SEMICOLON
IF
BRACKET_O

rt_task
BRACKET_O

current
BRACKET_C
BRACKET_C

target
OP_ASSIGNMENT

rq
MINUS
GREATER

active
SEMICOLON
IF
BRACKET_O

array
MINUS
GREATER

nr_active
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

schedstat_inc
BRACKET_O

rq
COMMA

yld_act_empty
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

rq
MINUS
GREATER

expired
MINUS
GREATER

nr_active
BRACKET_C

schedstat_inc
BRACKET_O

rq
COMMA

yld_both_empty
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
NOT

rq
MINUS
GREATER

expired
MINUS
GREATER

nr_active
BRACKET_C

schedstat_inc
BRACKET_O

rq
COMMA

yld_exp_empty
BRACKET_C
SEMICOLON
IF
BRACKET_O

array
NOT_EQ

target
BRACKET_C
CURLY_BRACKET_O

dequeue_task
BRACKET_O

current
COMMA

array
BRACKET_C
SEMICOLON

enqueue_task
BRACKET_O

current
COMMA

target
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

requeue_task
BRACKET_O

current
COMMA

array
BRACKET_C
SEMICOLON

__release
BRACKET_O

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

spin_release
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
DOT

dep_map
COMMA
NUMBER
COMMA

_THIS_IP_
BRACKET_C
SEMICOLON

_raw_spin_unlock
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

preempt_enable_no_resched
BRACKET_O
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

__cond_resched
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_DEBUG_SPINLOCK_SLEEP

__might_sleep
BRACKET_O

__FILE__
COMMA

__LINE__
BRACKET_C
SEMICOLON
PP_ENDIF
DO
CURLY_BRACKET_O

add_preempt_count
BRACKET_O

PREEMPT_ACTIVE
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

sub_preempt_count
BRACKET_O

PREEMPT_ACTIVE
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

need_resched
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__sched

cond_resched
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

need_resched
BRACKET_O
BRACKET_C
AND
NOT
BRACKET_O

preempt_count
BRACKET_O
BRACKET_C
AMPERSANT

PREEMPT_ACTIVE
BRACKET_C
AND

system_state
EQ

SYSTEM_RUNNING
BRACKET_C
CURLY_BRACKET_O

__cond_resched
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

cond_resched
BRACKET_C
SEMICOLON
TYPE_INT

cond_resched_lock
BRACKET_O

spinlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

need_lockbreak
BRACKET_O

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

need_resched
BRACKET_O
BRACKET_C
AND

system_state
EQ

SYSTEM_RUNNING
BRACKET_C
CURLY_BRACKET_O

spin_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_THIS_IP_
BRACKET_C
SEMICOLON

_raw_spin_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

preempt_enable_no_resched
BRACKET_O
BRACKET_C
SEMICOLON

__cond_resched
BRACKET_O
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

cond_resched_lock
BRACKET_C
SEMICOLON
TYPE_INT

__sched

cond_resched_softirq
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O
NOT

in_softirq
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

need_resched
BRACKET_O
BRACKET_C
AND

system_state
EQ

SYSTEM_RUNNING
BRACKET_C
CURLY_BRACKET_O

local_bh_enable
BRACKET_O
BRACKET_C
SEMICOLON

__cond_resched
BRACKET_O
BRACKET_C
SEMICOLON

local_bh_disable
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

cond_resched_softirq
BRACKET_C
SEMICOLON

void

__sched

yield
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON

sys_sched_yield
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

yield
BRACKET_C
SEMICOLON

void

__sched

io_schedule
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT
AMPERSANT

__raw_get_cpu_var
BRACKET_O

runqueues
BRACKET_C
SEMICOLON

delayacct_blkio_start
BRACKET_O
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

nr_iowait
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

atomic_dec
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

nr_iowait
BRACKET_C
SEMICOLON

delayacct_blkio_end
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

io_schedule
BRACKET_C
SEMICOLON
TYPE_LONG

__sched

io_schedule_timeout
BRACKET_O
TYPE_LONG

timeout
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT
AMPERSANT

__raw_get_cpu_var
BRACKET_O

runqueues
BRACKET_C
SEMICOLON
TYPE_LONG

ret
SEMICOLON

delayacct_blkio_start
BRACKET_O
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

nr_iowait
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

schedule_timeout
BRACKET_O

timeout
BRACKET_C
SEMICOLON

atomic_dec
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

nr_iowait
BRACKET_C
SEMICOLON

delayacct_blkio_end
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sched_get_priority_max
BRACKET_O
TYPE_INT

policy
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
SWITCH
BRACKET_O

policy
BRACKET_C
CURLY_BRACKET_O

case

SCHED_FIFO
COLON

case

SCHED_RR
COLON

ret
OP_ASSIGNMENT

MAX_USER_RT_PRIO
MINUS
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

SCHED_NORMAL
COLON

case

SCHED_BATCH
COLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sched_get_priority_min
BRACKET_O
TYPE_INT

policy
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
SWITCH
BRACKET_O

policy
BRACKET_C
CURLY_BRACKET_O

case

SCHED_FIFO
COLON

case

SCHED_RR
COLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

SCHED_NORMAL
COLON

case

SCHED_BATCH
COLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sched_rr_get_interval
BRACKET_O

pid_t

pid
COMMA
STRUCT

timespec

__user
MULT

interval
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON
TYPE_INT

retval
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
STRUCT

timespec

t
SEMICOLON
IF
BRACKET_O

pid
LESS
NUMBER
BRACKET_C

goto

out_nounlock
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

find_process_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
BRACKET_C

goto

out_unlock
SEMICOLON

retval
OP_ASSIGNMENT

security_task_getscheduler
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

goto

out_unlock
SEMICOLON

jiffies_to_timespec
BRACKET_O

p
MINUS
GREATER

policy
EQ

SCHED_FIFO
QUESTION_MARK
NUMBER
COLON

task_timeslice
BRACKET_O

p
BRACKET_C
COMMA
AMPERSANT

t
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT

copy_to_user
BRACKET_O

interval
COMMA
AMPERSANT

t
COMMA

sizeof
BRACKET_O

t
BRACKET_C
BRACKET_C
QUESTION_MARK
MINUS

EFAULT
COLON
NUMBER
SEMICOLON

out_nounlock
COLON

return

retval
SEMICOLON

out_unlock
COLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

static
CONST
TYPE_CHAR

stat_nam
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
STRING
SEMICOLON

static

void

show_task
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

free
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED

state
SEMICOLON

state
OP_ASSIGNMENT

p
MINUS
GREATER

state
QUESTION_MARK

__ffs
BRACKET_O

p
MINUS
GREATER

state
BRACKET_C
PLUS
NUMBER
COLON
NUMBER
SEMICOLON

printk
BRACKET_O
STRING
COMMA

p
MINUS
GREATER

comm
COMMA

state
LESS

sizeof
BRACKET_O

stat_nam
BRACKET_C
MINUS
NUMBER
QUESTION_MARK

stat_nam
CORNER_BRACKET_O

state
CORNER_BRACKET_C
COLON
QUOTED_CHAR
BRACKET_C
SEMICOLON
PP_IF
BRACKET_O

BITS_PER_LONG
EQ
NUMBER
BRACKET_C
IF
BRACKET_O

state
EQ

TASK_RUNNING
BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
ELSE

printk
BRACKET_O
STRING
COMMA

thread_saved_pc
BRACKET_O

p
BRACKET_C
BRACKET_C
SEMICOLON
PP_ELSE
IF
BRACKET_O

state
EQ

TASK_RUNNING
BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
ELSE

printk
BRACKET_O
STRING
COMMA

thread_saved_pc
BRACKET_O

p
BRACKET_C
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_DEBUG_STACK_USAGE
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
MULT

n
OP_ASSIGNMENT

end_of_stack
BRACKET_O

p
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT
MULT

n
BRACKET_C

n
PLUS
PLUS
SEMICOLON

free
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

n
MINUS
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

end_of_stack
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

printk
BRACKET_O
STRING
COMMA

free
COMMA

p
MINUS
GREATER

pid
COMMA

p
MINUS
GREATER

parent
MINUS
GREATER

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
MINUS
GREATER

mm
BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
ELSE

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

state
NOT_EQ

TASK_RUNNING
BRACKET_C

show_stack
BRACKET_O

p
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

show_state_filter
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

state_filter
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

g
COMMA
MULT

p
SEMICOLON
PP_IF
BRACKET_O

BITS_PER_LONG
EQ
NUMBER
BRACKET_C

printk
BRACKET_O
STRING
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
PP_ELSE

printk
BRACKET_O
STRING
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
PP_ENDIF

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

do_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
CURLY_BRACKET_O

touch_nmi_watchdog
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

state_filter
OR
BRACKET_O

p
MINUS
GREATER

state
AMPERSANT

state_filter
BRACKET_C
BRACKET_C

show_task
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

while_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
SEMICOLON

touch_all_softlockup_watchdogs
BRACKET_O
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

state_filter
EQ
MINUS
NUMBER
BRACKET_C

debug_show_all_locks
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__cpuinit

init_idle
BRACKET_O
STRUCT

task_struct
MULT

idle
COMMA
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

idle
MINUS
GREATER

timestamp
OP_ASSIGNMENT

sched_clock
BRACKET_O
BRACKET_C
SEMICOLON

idle
MINUS
GREATER

sleep_avg
OP_ASSIGNMENT
NUMBER
SEMICOLON

idle
MINUS
GREATER

array
OP_ASSIGNMENT

NULL
SEMICOLON

idle
MINUS
GREATER

prio
OP_ASSIGNMENT

idle
MINUS
GREATER

normal_prio
OP_ASSIGNMENT

MAX_PRIO
SEMICOLON

idle
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_RUNNING
SEMICOLON

idle
MINUS
GREATER

cpus_allowed
OP_ASSIGNMENT

cpumask_of_cpu
BRACKET_O

cpu
BRACKET_C
SEMICOLON

set_task_cpu
BRACKET_O

idle
COMMA

cpu
BRACKET_C
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

rq
MINUS
GREATER

curr
OP_ASSIGNMENT

rq
MINUS
GREATER

idle
OP_ASSIGNMENT

idle
SEMICOLON
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_SMP
BRACKET_C
AND
PP_DEFINED
BRACKET_O

__ARCH_WANT_UNLOCKED_CTXSW
BRACKET_C

idle
MINUS
GREATER

oncpu
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_PREEMPT
BRACKET_C
AND
NOT
PP_DEFINED
BRACKET_O

CONFIG_PREEMPT_BKL
BRACKET_C

task_thread_info
BRACKET_O

idle
BRACKET_C
MINUS
GREATER

preempt_count
OP_ASSIGNMENT
BRACKET_O

idle
MINUS
GREATER

lock_depth
GR_EQ
NUMBER
BRACKET_C
SEMICOLON
PP_ELSE

task_thread_info
BRACKET_O

idle
BRACKET_C
MINUS
GREATER

preempt_count
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

cpumask_t

nohz_cpu_mask
OP_ASSIGNMENT

CPU_MASK_NONE
SEMICOLON
PP_IFDEF

CONFIG_SMP
TYPE_INT

set_cpus_allowed
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA

cpumask_t

new_mask
BRACKET_C
CURLY_BRACKET_O
STRUCT

migration_req

req
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cpus_intersects
BRACKET_O

new_mask
COMMA

cpu_online_map
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

p
MINUS
GREATER

cpus_allowed
OP_ASSIGNMENT

new_mask
SEMICOLON
IF
BRACKET_O

cpu_isset
BRACKET_O

task_cpu
BRACKET_O

p
BRACKET_C
COMMA

new_mask
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

migrate_task
BRACKET_O

p
COMMA

any_online_cpu
BRACKET_O

new_mask
BRACKET_C
COMMA
AMPERSANT

req
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

wake_up_process
BRACKET_O

rq
MINUS
GREATER

migration_thread
BRACKET_C
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

req
DOT

done
BRACKET_C
SEMICOLON

tlb_migrate_finish
BRACKET_O

p
MINUS
GREATER

mm
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

out
COLON

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

set_cpus_allowed
BRACKET_C
SEMICOLON

static
TYPE_INT

__migrate_task
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

src_cpu
COMMA
TYPE_INT

dest_cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq_dest
COMMA
MULT

rq_src
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

cpu_is_offline
BRACKET_O

dest_cpu
BRACKET_C
BRACKET_C
BRACKET_C

return

ret
SEMICOLON

rq_src
OP_ASSIGNMENT

cpu_rq
BRACKET_O

src_cpu
BRACKET_C
SEMICOLON

rq_dest
OP_ASSIGNMENT

cpu_rq
BRACKET_O

dest_cpu
BRACKET_C
SEMICOLON

double_rq_lock
BRACKET_O

rq_src
COMMA

rq_dest
BRACKET_C
SEMICOLON
IF
BRACKET_O

task_cpu
BRACKET_O

p
BRACKET_C
NOT_EQ

src_cpu
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O
NOT

cpu_isset
BRACKET_O

dest_cpu
COMMA

p
MINUS
GREATER

cpus_allowed
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

set_task_cpu
BRACKET_O

p
COMMA

dest_cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

array
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

timestamp
OP_ASSIGNMENT

p
MINUS
GREATER

timestamp
MINUS

rq_src
MINUS
GREATER

most_recent_timestamp
PLUS

rq_dest
MINUS
GREATER

most_recent_timestamp
SEMICOLON

deactivate_task
BRACKET_O

p
COMMA

rq_src
BRACKET_C
SEMICOLON

__activate_task
BRACKET_O

p
COMMA

rq_dest
BRACKET_C
SEMICOLON
IF
BRACKET_O

TASK_PREEMPTS_CURR
BRACKET_O

p
COMMA

rq_dest
BRACKET_C
BRACKET_C

resched_task
BRACKET_O

rq_dest
MINUS
GREATER

curr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON

double_rq_unlock
BRACKET_O

rq_src
COMMA

rq_dest
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

migration_thread
BRACKET_O

void
MULT

data
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
OP_ASSIGNMENT
BRACKET_O
TYPE_LONG
BRACKET_C

data
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

rq
MINUS
GREATER

migration_thread
NOT_EQ

current
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

migration_req
MULT

req
SEMICOLON
STRUCT

list_head
MULT

head
SEMICOLON

try_to_freeze
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpu_is_offline
BRACKET_O

cpu
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irq
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

goto

wait_to_die
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

rq
MINUS
GREATER

active_balance
BRACKET_C
CURLY_BRACKET_O

active_load_balance
BRACKET_O

rq
COMMA

cpu
BRACKET_C
SEMICOLON

rq
MINUS
GREATER

active_balance
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

head
OP_ASSIGNMENT
AMPERSANT

rq
MINUS
GREATER

migration_queue
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O

head
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irq
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

req
OP_ASSIGNMENT

list_entry
BRACKET_O

head
MINUS
GREATER

next
COMMA
STRUCT

migration_req
COMMA

list
BRACKET_C
SEMICOLON

list_del_init
BRACKET_O

head
MINUS
GREATER

next
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

__migrate_task
BRACKET_O

req
MINUS
GREATER

task
COMMA

cpu
COMMA

req
MINUS
GREATER

dest_cpu
BRACKET_C
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

complete
BRACKET_O
AMPERSANT

req
MINUS
GREATER

done
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON

wait_to_die
COLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

schedule
BRACKET_O
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_HOTPLUG_CPU

static

void

move_task_off_dead_cpu
BRACKET_O
TYPE_INT

dead_cpu
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

cpumask_t

mask
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON
TYPE_INT

dest_cpu
SEMICOLON

restart
COLON

mask
OP_ASSIGNMENT

node_to_cpumask
BRACKET_O

cpu_to_node
BRACKET_O

dead_cpu
BRACKET_C
BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

mask
COMMA

mask
COMMA

p
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON

dest_cpu
OP_ASSIGNMENT

any_online_cpu
BRACKET_O

mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

dest_cpu
EQ

NR_CPUS
BRACKET_C

dest_cpu
OP_ASSIGNMENT

any_online_cpu
BRACKET_O

p
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON
IF
BRACKET_O

dest_cpu
EQ

NR_CPUS
BRACKET_C
CURLY_BRACKET_O

rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

cpus_setall
BRACKET_O

p
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON

dest_cpu
OP_ASSIGNMENT

any_online_cpu
BRACKET_O

p
MINUS
GREATER

cpus_allowed
BRACKET_C
SEMICOLON

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

mm
AND

printk_ratelimit
BRACKET_O
BRACKET_C
BRACKET_C

printk
BRACKET_O

KERN_INFO
STRING
STRING
COMMA

p
MINUS
GREATER

pid
COMMA

p
MINUS
GREATER

comm
COMMA

dead_cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

__migrate_task
BRACKET_O

p
COMMA

dead_cpu
COMMA

dest_cpu
BRACKET_C
BRACKET_C

goto

restart
SEMICOLON
CURLY_BRACKET_C

static

void

migrate_nr_uninterruptible
BRACKET_O
STRUCT

rq
MULT

rq_src
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq_dest
OP_ASSIGNMENT

cpu_rq
BRACKET_O

any_online_cpu
BRACKET_O

CPU_MASK_ALL
BRACKET_C
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

double_rq_lock
BRACKET_O

rq_src
COMMA

rq_dest
BRACKET_C
SEMICOLON

rq_dest
MINUS
GREATER

nr_uninterruptible
ASSIGN_PLUS

rq_src
MINUS
GREATER

nr_uninterruptible
SEMICOLON

rq_src
MINUS
GREATER

nr_uninterruptible
OP_ASSIGNMENT
NUMBER
SEMICOLON

double_rq_unlock
BRACKET_O

rq_src
COMMA

rq_dest
BRACKET_C
SEMICOLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

migrate_live_tasks
BRACKET_O
TYPE_INT

src_cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
MULT

t
SEMICOLON

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

do_each_thread
BRACKET_O

t
COMMA

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
EQ

current
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

task_cpu
BRACKET_O

p
BRACKET_C
EQ

src_cpu
BRACKET_C

move_task_off_dead_cpu
BRACKET_O

src_cpu
COMMA

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

while_each_thread
BRACKET_O

t
COMMA

p
BRACKET_C
SEMICOLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

sched_idle_next
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

this_cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

this_cpu
BRACKET_C
SEMICOLON
STRUCT

task_struct
MULT

p
OP_ASSIGNMENT

rq
MINUS
GREATER

idle
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

BUG_ON
BRACKET_O

cpu_online
BRACKET_O

this_cpu
BRACKET_C
BRACKET_C
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

__setscheduler
BRACKET_O

p
COMMA

SCHED_FIFO
COMMA

MAX_RT_PRIO
MINUS
NUMBER
BRACKET_C
SEMICOLON

__activate_idle_task
BRACKET_O

p
COMMA

rq
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

idle_task_exit
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

mm_struct
MULT

mm
OP_ASSIGNMENT

current
MINUS
GREATER

active_mm
SEMICOLON

BUG_ON
BRACKET_O

cpu_online
BRACKET_O

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

mm
NOT_EQ
AMPERSANT

init_mm
BRACKET_C

switch_mm
BRACKET_O

mm
COMMA
AMPERSANT

init_mm
COMMA

current
BRACKET_C
SEMICOLON

mmdrop
BRACKET_O

mm
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

migrate_dead
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

dead_cpu
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

dead_cpu
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

p
MINUS
GREATER

exit_state
NOT_EQ

EXIT_ZOMBIE
AND

p
MINUS
GREATER

exit_state
NOT_EQ

EXIT_DEAD
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

p
MINUS
GREATER

state
EQ

TASK_DEAD
BRACKET_C
SEMICOLON

get_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

move_task_off_dead_cpu
BRACKET_O

dead_cpu
COMMA

p
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

put_task_struct
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

migrate_dead_tasks
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

dead_cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

dead_cpu
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

arr
COMMA

i
SEMICOLON
FOR
BRACKET_O

arr
OP_ASSIGNMENT
NUMBER
SEMICOLON

arr
LESS
NUMBER
SEMICOLON

arr
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

MAX_PRIO
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head
MULT

list
OP_ASSIGNMENT
AMPERSANT

rq
MINUS
GREATER

arrays
CORNER_BRACKET_O

arr
CORNER_BRACKET_C
DOT

queue
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O

list
BRACKET_C
BRACKET_C

migrate_dead
BRACKET_O

dead_cpu
COMMA

list_entry
BRACKET_O

list
MINUS
GREATER

next
COMMA
STRUCT

task_struct
COMMA

run_list
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

__cpuinit

migration_call
BRACKET_O
STRUCT

notifier_block
MULT

nfb
COMMA
TYPE_UNSIGNED
TYPE_LONG

action
COMMA

void
MULT

hcpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON
TYPE_INT

cpu
OP_ASSIGNMENT
BRACKET_O
TYPE_LONG
BRACKET_C

hcpu
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON
SWITCH
BRACKET_O

action
BRACKET_C
CURLY_BRACKET_O

case

CPU_LOCK_ACQUIRE
COLON

mutex_lock
BRACKET_O
AMPERSANT

sched_hotcpu_mutex
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPU_UP_PREPARE
COLON

case

CPU_UP_PREPARE_FROZEN
COLON

p
OP_ASSIGNMENT

kthread_create
BRACKET_O

migration_thread
COMMA

hcpu
COMMA
STRING
COMMA

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

p
BRACKET_C
BRACKET_C

return

NOTIFY_BAD
SEMICOLON

p
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_NOFREEZE
SEMICOLON

kthread_bind
BRACKET_O

p
COMMA

cpu
BRACKET_C
SEMICOLON

rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

__setscheduler
BRACKET_O

p
COMMA

SCHED_FIFO
COMMA

MAX_RT_PRIO
MINUS
NUMBER
BRACKET_C
SEMICOLON

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

migration_thread
OP_ASSIGNMENT

p
SEMICOLON
BREAK
SEMICOLON

case

CPU_ONLINE
COLON

case

CPU_ONLINE_FROZEN
COLON

wake_up_process
BRACKET_O

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

migration_thread
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
PP_IFDEF

CONFIG_HOTPLUG_CPU

case

CPU_UP_CANCELED
COLON

case

CPU_UP_CANCELED_FROZEN
COLON
IF
BRACKET_O
NOT

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

migration_thread
BRACKET_C
BREAK
SEMICOLON

kthread_bind
BRACKET_O

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

migration_thread
COMMA

any_online_cpu
BRACKET_O

cpu_online_map
BRACKET_C
BRACKET_C
SEMICOLON

kthread_stop
BRACKET_O

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

migration_thread
BRACKET_C
SEMICOLON

cpu_rq
BRACKET_O

cpu
BRACKET_C
MINUS
GREATER

migration_thread
OP_ASSIGNMENT

NULL
SEMICOLON
BREAK
SEMICOLON

case

CPU_DEAD
COLON

case

CPU_DEAD_FROZEN
COLON

migrate_live_tasks
BRACKET_O

cpu
BRACKET_C
SEMICOLON

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON

kthread_stop
BRACKET_O

rq
MINUS
GREATER

migration_thread
BRACKET_C
SEMICOLON

rq
MINUS
GREATER

migration_thread
OP_ASSIGNMENT

NULL
SEMICOLON

rq
OP_ASSIGNMENT

task_rq_lock
BRACKET_O

rq
MINUS
GREATER

idle
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

deactivate_task
BRACKET_O

rq
MINUS
GREATER

idle
COMMA

rq
BRACKET_C
SEMICOLON

rq
MINUS
GREATER

idle
MINUS
GREATER

static_prio
OP_ASSIGNMENT

MAX_PRIO
SEMICOLON

__setscheduler
BRACKET_O

rq
MINUS
GREATER

idle
COMMA

SCHED_NORMAL
COMMA
NUMBER
BRACKET_C
SEMICOLON

migrate_dead_tasks
BRACKET_O

cpu
BRACKET_C
SEMICOLON

task_rq_unlock
BRACKET_O

rq
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

migrate_nr_uninterruptible
BRACKET_O

rq
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

rq
MINUS
GREATER

nr_running
NOT_EQ
NUMBER
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

migration_queue
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

migration_req
MULT

req
SEMICOLON

req
OP_ASSIGNMENT

list_entry
BRACKET_O

rq
MINUS
GREATER

migration_queue
DOT

next
COMMA
STRUCT

migration_req
COMMA

list
BRACKET_C
SEMICOLON

list_del_init
BRACKET_O
AMPERSANT

req
MINUS
GREATER

list
BRACKET_C
SEMICOLON

complete
BRACKET_O
AMPERSANT

req
MINUS
GREATER

done
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
PP_ENDIF

case

CPU_LOCK_RELEASE
COLON

mutex_unlock
BRACKET_O
AMPERSANT

sched_hotcpu_mutex
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

NOTIFY_OK
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

notifier_block

__cpuinitdata

migration_notifier
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

notifier_call
OP_ASSIGNMENT

migration_call
COMMA
DOT

priority
OP_ASSIGNMENT
NUMBER
CURLY_BRACKET_C
SEMICOLON
TYPE_INT

__init

migration_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

void
MULT

cpu
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C
BRACKET_O
TYPE_LONG
BRACKET_C

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
TYPE_INT

err
SEMICOLON

err
OP_ASSIGNMENT

migration_call
BRACKET_O
AMPERSANT

migration_notifier
COMMA

CPU_UP_PREPARE
COMMA

cpu
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

err
EQ

NOTIFY_BAD
BRACKET_C
SEMICOLON

migration_call
BRACKET_O
AMPERSANT

migration_notifier
COMMA

CPU_ONLINE
COMMA

cpu
BRACKET_C
SEMICOLON

register_cpu_notifier
BRACKET_O
AMPERSANT

migration_notifier
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_SMP
TYPE_INT

nr_cpu_ids

__read_mostly
OP_ASSIGNMENT

NR_CPUS
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

nr_cpu_ids
BRACKET_C
SEMICOLON
HASH

undef

SCHED_DOMAIN_DEBUG
PP_IFDEF

SCHED_DOMAIN_DEBUG

static

void

sched_domain_debug
BRACKET_O
STRUCT

sched_domain
MULT

sd
COMMA
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

level
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

sd
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_DEBUG
STRING
COMMA

cpu
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

printk
BRACKET_O

KERN_DEBUG
STRING
COMMA

cpu
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
TYPE_CHAR

str
CORNER_BRACKET_O

NR_CPUS
CORNER_BRACKET_C
SEMICOLON
STRUCT

sched_group
MULT

group
OP_ASSIGNMENT

sd
MINUS
GREATER

groups
SEMICOLON

cpumask_t

groupmask
SEMICOLON

cpumask_scnprintf
BRACKET_O

str
COMMA

NR_CPUS
COMMA

sd
MINUS
GREATER

span
BRACKET_C
SEMICOLON

cpus_clear
BRACKET_O

groupmask
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_DEBUG
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

level
PLUS
NUMBER
SEMICOLON

i
PLUS
PLUS
BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

level
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

SD_LOAD_BALANCE
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O

sd
MINUS
GREATER

parent
BRACKET_C

printk
BRACKET_O

KERN_ERR
STRING
STRING
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

printk
BRACKET_O
STRING
COMMA

str
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cpu_isset
BRACKET_O

cpu
COMMA

sd
MINUS
GREATER

span
BRACKET_C
BRACKET_C

printk
BRACKET_O

KERN_ERR
STRING
STRING
COMMA

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cpu_isset
BRACKET_O

cpu
COMMA

group
MINUS
GREATER

cpumask
BRACKET_C
BRACKET_C

printk
BRACKET_O

KERN_ERR
STRING
STRING
COMMA

cpu
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_DEBUG
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

level
PLUS
NUMBER
SEMICOLON

i
PLUS
PLUS
BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O
IF
BRACKET_O
NOT

group
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_ERR
STRING
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

group
MINUS
GREATER

__cpu_power
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_ERR
STRING
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

cpus_weight
BRACKET_O

group
MINUS
GREATER

cpumask
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_ERR
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

cpus_intersects
BRACKET_O

groupmask
COMMA

group
MINUS
GREATER

cpumask
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_ERR
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

cpus_or
BRACKET_O

groupmask
COMMA

groupmask
COMMA

group
MINUS
GREATER

cpumask
BRACKET_C
SEMICOLON

cpumask_scnprintf
BRACKET_O

str
COMMA

NR_CPUS
COMMA

group
MINUS
GREATER

cpumask
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

str
BRACKET_C
SEMICOLON

group
OP_ASSIGNMENT

group
MINUS
GREATER

next
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

group
NOT_EQ

sd
MINUS
GREATER

groups
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cpus_equal
BRACKET_O

sd
MINUS
GREATER

span
COMMA

groupmask
BRACKET_C
BRACKET_C

printk
BRACKET_O

KERN_ERR
STRING
STRING
BRACKET_C
SEMICOLON

level
PLUS
PLUS
SEMICOLON

sd
OP_ASSIGNMENT

sd
MINUS
GREATER

parent
SEMICOLON
IF
BRACKET_O
NOT

sd
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O
NOT

cpus_subset
BRACKET_O

groupmask
COMMA

sd
MINUS
GREATER

span
BRACKET_C
BRACKET_C

printk
BRACKET_O

KERN_ERR
STRING
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

sd
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ELSE
PP_DEFINE

sched_domain_debug
BRACKET_O

sd
COMMA

cpu
BRACKET_C
DO
CURLY_BRACKET_O
CURLY_BRACKET_C
WHILE
BRACKET_O
NUMBER
BRACKET_C
PP_ENDIF

static
TYPE_INT

sd_degenerate
BRACKET_O
STRUCT

sched_domain
MULT

sd
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cpus_weight
BRACKET_O

sd
MINUS
GREATER

span
BRACKET_C
EQ
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT
BRACKET_O

SD_LOAD_BALANCE
LOGICAL_OR

SD_BALANCE_NEWIDLE
LOGICAL_OR

SD_BALANCE_FORK
LOGICAL_OR

SD_BALANCE_EXEC
LOGICAL_OR

SD_SHARE_CPUPOWER
LOGICAL_OR

SD_SHARE_PKG_RESOURCES
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sd
MINUS
GREATER

groups
NOT_EQ

sd
MINUS
GREATER

groups
MINUS
GREATER

next
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT
BRACKET_O

SD_WAKE_IDLE
LOGICAL_OR

SD_WAKE_AFFINE
LOGICAL_OR

SD_WAKE_BALANCE
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

sd_parent_degenerate
BRACKET_O
STRUCT

sched_domain
MULT

sd
COMMA
STRUCT

sched_domain
MULT

parent
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

cflags
OP_ASSIGNMENT

sd
MINUS
GREATER

flags
COMMA

pflags
OP_ASSIGNMENT

parent
MINUS
GREATER

flags
SEMICOLON
IF
BRACKET_O

sd_degenerate
BRACKET_O

parent
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

cpus_equal
BRACKET_O

sd
MINUS
GREATER

span
COMMA

parent
MINUS
GREATER

span
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

cflags
AMPERSANT

SD_WAKE_AFFINE
BRACKET_C

pflags
AMPERSANT
OP_ASSIGNMENT
TILDE

SD_WAKE_BALANCE
SEMICOLON
IF
BRACKET_O

parent
MINUS
GREATER

groups
EQ

parent
MINUS
GREATER

groups
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O

pflags
AMPERSANT
OP_ASSIGNMENT
TILDE
BRACKET_O

SD_LOAD_BALANCE
LOGICAL_OR

SD_BALANCE_NEWIDLE
LOGICAL_OR

SD_BALANCE_FORK
LOGICAL_OR

SD_BALANCE_EXEC
LOGICAL_OR

SD_SHARE_CPUPOWER
LOGICAL_OR

SD_SHARE_PKG_RESOURCES
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
TILDE

cflags
AMPERSANT

pflags
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

cpu_attach_domain
BRACKET_O
STRUCT

sched_domain
MULT

sd
COMMA
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON
STRUCT

sched_domain
MULT

tmp
SEMICOLON
FOR
BRACKET_O

tmp
OP_ASSIGNMENT

sd
SEMICOLON

tmp
SEMICOLON

tmp
OP_ASSIGNMENT

tmp
MINUS
GREATER

parent
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_domain
MULT

parent
OP_ASSIGNMENT

tmp
MINUS
GREATER

parent
SEMICOLON
IF
BRACKET_O
NOT

parent
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

sd_parent_degenerate
BRACKET_O

tmp
COMMA

parent
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

tmp
MINUS
GREATER

parent
OP_ASSIGNMENT

parent
MINUS
GREATER

parent
SEMICOLON
IF
BRACKET_O

parent
MINUS
GREATER

parent
BRACKET_C

parent
MINUS
GREATER

parent
MINUS
GREATER

child
OP_ASSIGNMENT

tmp
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

sd
AND

sd_degenerate
BRACKET_O

sd
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

sd
OP_ASSIGNMENT

sd
MINUS
GREATER

parent
SEMICOLON
IF
BRACKET_O

sd
BRACKET_C

sd
MINUS
GREATER

child
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

sched_domain_debug
BRACKET_O

sd
COMMA

cpu
BRACKET_C
SEMICOLON

rcu_assign_pointer
BRACKET_O

rq
MINUS
GREATER

sd
COMMA

sd
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

cpumask_t

cpu_isolated_map
OP_ASSIGNMENT

CPU_MASK_NONE
SEMICOLON

static
TYPE_INT

__init

isolated_cpu_setup
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ints
CORNER_BRACKET_O

NR_CPUS
CORNER_BRACKET_C
COMMA

i
SEMICOLON

str
OP_ASSIGNMENT

get_options
BRACKET_O

str
COMMA

ARRAY_SIZE
BRACKET_O

ints
BRACKET_C
COMMA

ints
BRACKET_C
SEMICOLON

cpus_clear
BRACKET_O

cpu_isolated_map
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LE_EQ

ints
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

ints
CORNER_BRACKET_O

i
CORNER_BRACKET_C
LESS

NR_CPUS
BRACKET_C

cpu_set
BRACKET_O

ints
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

cpu_isolated_map
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

isolated_cpu_setup
BRACKET_C
SEMICOLON

static

void

init_sched_build_groups
BRACKET_O

cpumask_t

span
COMMA
CONST

cpumask_t
MULT

cpu_map
COMMA
TYPE_INT
BRACKET_O
MULT

group_fn
BRACKET_C
BRACKET_O
TYPE_INT

cpu
COMMA
CONST

cpumask_t
MULT

cpu_map
COMMA
STRUCT

sched_group
MULT
MULT

sg
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_group
MULT

first
OP_ASSIGNMENT

NULL
COMMA
MULT

last
OP_ASSIGNMENT

NULL
SEMICOLON

cpumask_t

covered
OP_ASSIGNMENT

CPU_MASK_NONE
SEMICOLON
TYPE_INT

i
SEMICOLON

for_each_cpu_mask
BRACKET_O

i
COMMA

span
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_group
MULT

sg
SEMICOLON
TYPE_INT

group
OP_ASSIGNMENT

group_fn
BRACKET_O

i
COMMA

cpu_map
COMMA
AMPERSANT

sg
BRACKET_C
SEMICOLON
TYPE_INT

j
SEMICOLON
IF
BRACKET_O

cpu_isset
BRACKET_O

i
COMMA

covered
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

sg
MINUS
GREATER

cpumask
OP_ASSIGNMENT

CPU_MASK_NONE
SEMICOLON

sg
MINUS
GREATER

__cpu_power
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_cpu_mask
BRACKET_O

j
COMMA

span
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

group_fn
BRACKET_O

j
COMMA

cpu_map
COMMA

NULL
BRACKET_C
NOT_EQ

group
BRACKET_C
CONTINUE
SEMICOLON

cpu_set
BRACKET_O

j
COMMA

covered
BRACKET_C
SEMICOLON

cpu_set
BRACKET_O

j
COMMA

sg
MINUS
GREATER

cpumask
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

first
BRACKET_C

first
OP_ASSIGNMENT

sg
SEMICOLON
IF
BRACKET_O

last
BRACKET_C

last
MINUS
GREATER

next
OP_ASSIGNMENT

sg
SEMICOLON

last
OP_ASSIGNMENT

sg
SEMICOLON
CURLY_BRACKET_C

last
MINUS
GREATER

next
OP_ASSIGNMENT

first
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

SD_NODES_PER_DOMAIN
NUMBER
PP_DEFINE

SEARCH_SCOPE
NUMBER
PP_DEFINE

MIN_CACHE_SIZE
BRACKET_O
NUMBER
MULT
NUMBER

U
BRACKET_C
PP_DEFINE

DEFAULT_CACHE_SIZE
BRACKET_O
NUMBER
MULT
NUMBER
MULT
NUMBER

U
BRACKET_C
PP_DEFINE

ITERATIONS
NUMBER
PP_DEFINE

SIZE_THRESH
NUMBER
PP_DEFINE

COST_THRESH
NUMBER
PP_DEFINE

MAX_DOMAIN_DISTANCE
NUMBER

static
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

migration_cost
CORNER_BRACKET_O

MAX_DOMAIN_DISTANCE
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CORNER_BRACKET_O
NUMBER
DOT
DOT
DOT

MAX_DOMAIN_DISTANCE
MINUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
PP_IFDEF

CONFIG_DEFAULT_MIGRATION_COST

CONFIG_DEFAULT_MIGRATION_COST
PP_ELSE
MINUS
NUMBER

LL
PP_ENDIF
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__init

migration_cost_setup
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ints
CORNER_BRACKET_O

MAX_DOMAIN_DISTANCE
PLUS
NUMBER
CORNER_BRACKET_C
COMMA

i
SEMICOLON

str
OP_ASSIGNMENT

get_options
BRACKET_O

str
COMMA

ARRAY_SIZE
BRACKET_O

ints
BRACKET_C
COMMA

ints
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

ints
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LE_EQ

ints
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

migration_cost
CORNER_BRACKET_O

i
MINUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG
BRACKET_C

ints
CORNER_BRACKET_O

i
CORNER_BRACKET_C
MULT
NUMBER
SEMICOLON

printk
BRACKET_O
STRING
COMMA

i
MINUS
NUMBER
COMMA

migration_cost
CORNER_BRACKET_O

i
MINUS
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

migration_cost_setup
BRACKET_C
SEMICOLON
PP_DEFINE

MIGRATION_FACTOR_SCALE
NUMBER

static
TYPE_UNSIGNED
TYPE_INT

migration_factor
OP_ASSIGNMENT

MIGRATION_FACTOR_SCALE
SEMICOLON

static
TYPE_INT

__init

setup_migration_factor
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

get_option
BRACKET_O
AMPERSANT

str
COMMA
AMPERSANT

migration_factor
BRACKET_C
SEMICOLON

migration_factor
OP_ASSIGNMENT

migration_factor
MULT

MIGRATION_FACTOR_SCALE
DIV
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

setup_migration_factor
BRACKET_C
SEMICOLON

static
TYPE_UNSIGNED
TYPE_LONG

domain_distance
BRACKET_O
TYPE_INT

cpu1
COMMA
TYPE_INT

cpu2
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

distance
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

sched_domain
MULT

sd
SEMICOLON

for_each_domain
BRACKET_O

cpu1
COMMA

sd
BRACKET_C
CURLY_BRACKET_O

WARN_ON
BRACKET_O
NOT

cpu_isset
BRACKET_O

cpu1
COMMA

sd
MINUS
GREATER

span
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpu_isset
BRACKET_O

cpu2
COMMA

sd
MINUS
GREATER

span
BRACKET_C
BRACKET_C

return

distance
SEMICOLON

distance
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

distance
GR_EQ

MAX_DOMAIN_DISTANCE
BRACKET_C
CURLY_BRACKET_O

WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

distance
OP_ASSIGNMENT

MAX_DOMAIN_DISTANCE
MINUS
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

distance
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_INT

migration_debug
SEMICOLON

static
TYPE_INT

__init

setup_migration_debug
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

get_option
BRACKET_O
AMPERSANT

str
COMMA
AMPERSANT

migration_debug
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

setup_migration_debug
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

max_cache_size
SEMICOLON

static
TYPE_INT

__init

setup_max_cache_size
BRACKET_O
TYPE_CHAR
MULT

str
BRACKET_C
CURLY_BRACKET_O

get_option
BRACKET_O
AMPERSANT

str
COMMA
AMPERSANT

max_cache_size
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__setup
BRACKET_O
STRING
COMMA

setup_max_cache_size
BRACKET_C
SEMICOLON

static

void

touch_cache
BRACKET_O

void
MULT

__cache
COMMA
TYPE_UNSIGNED
TYPE_LONG

__size
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

size
OP_ASSIGNMENT

__size
DIV

sizeof
BRACKET_O
TYPE_LONG
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

chunk1
OP_ASSIGNMENT

size
DIV
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

chunk2
OP_ASSIGNMENT
NUMBER
MULT

size
DIV
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG
MULT

cache
OP_ASSIGNMENT

__cache
SEMICOLON
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

size
DIV
NUMBER
SEMICOLON

i
ASSIGN_PLUS
NUMBER
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

i
MODULO
NUMBER
BRACKET_C
CURLY_BRACKET_O

case
NUMBER
COLON

cache
CORNER_BRACKET_O

i
CORNER_BRACKET_C
PLUS
PLUS
SEMICOLON

case
NUMBER
COLON

cache
CORNER_BRACKET_O

size
MINUS
NUMBER
MINUS

i
CORNER_BRACKET_C
PLUS
PLUS
SEMICOLON

case
NUMBER
COLON

cache
CORNER_BRACKET_O

chunk1
MINUS

i
CORNER_BRACKET_C
PLUS
PLUS
SEMICOLON

case
NUMBER
COLON

cache
CORNER_BRACKET_O

chunk1
PLUS

i
CORNER_BRACKET_C
PLUS
PLUS
SEMICOLON

case
NUMBER
COLON

cache
CORNER_BRACKET_O

chunk2
MINUS

i
CORNER_BRACKET_C
PLUS
PLUS
SEMICOLON

case
NUMBER
COLON

cache
CORNER_BRACKET_O

chunk2
PLUS

i
CORNER_BRACKET_C
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

measure_one
BRACKET_O

void
MULT

cache
COMMA
TYPE_UNSIGNED
TYPE_LONG

size
COMMA
TYPE_INT

source
COMMA
TYPE_INT

target
BRACKET_C
CURLY_BRACKET_O

cpumask_t

mask
COMMA

saved_mask
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

t0
COMMA

t1
COMMA

t2
COMMA

t3
COMMA

cost
SEMICOLON

saved_mask
OP_ASSIGNMENT

current
MINUS
GREATER

cpus_allowed
SEMICOLON

sched_cacheflush
BRACKET_O
BRACKET_C
SEMICOLON

mask
OP_ASSIGNMENT

cpumask_of_cpu
BRACKET_O

source
BRACKET_C
SEMICOLON

set_cpus_allowed
BRACKET_O

current
COMMA

mask
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

smp_processor_id
BRACKET_O
BRACKET_C
NOT_EQ

source
BRACKET_C
SEMICOLON

t0
OP_ASSIGNMENT

sched_clock
BRACKET_O
BRACKET_C
SEMICOLON

touch_cache
BRACKET_O

cache
COMMA

size
BRACKET_C
SEMICOLON

t1
OP_ASSIGNMENT

sched_clock
BRACKET_O
BRACKET_C
SEMICOLON

mask
OP_ASSIGNMENT

cpumask_of_cpu
BRACKET_O

target
BRACKET_C
SEMICOLON

set_cpus_allowed
BRACKET_O

current
COMMA

mask
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

smp_processor_id
BRACKET_O
BRACKET_C
NOT_EQ

target
BRACKET_C
SEMICOLON

t2
OP_ASSIGNMENT

sched_clock
BRACKET_O
BRACKET_C
SEMICOLON

touch_cache
BRACKET_O

cache
COMMA

size
BRACKET_C
SEMICOLON

t3
OP_ASSIGNMENT

sched_clock
BRACKET_O
BRACKET_C
SEMICOLON

cost
OP_ASSIGNMENT

t1
MINUS

t0
PLUS

t3
MINUS

t2
SEMICOLON
IF
BRACKET_O

migration_debug
GR_EQ
NUMBER
BRACKET_C

printk
BRACKET_O
STRING
COMMA

source
COMMA

target
COMMA

t1
MINUS

t0
COMMA

t1
MINUS

t0
COMMA

t3
MINUS

t2
COMMA

cost
BRACKET_C
SEMICOLON

sched_cacheflush
BRACKET_O
BRACKET_C
SEMICOLON

set_cpus_allowed
BRACKET_O

current
COMMA

saved_mask
BRACKET_C
SEMICOLON

return

cost
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

measure_cost
BRACKET_O
TYPE_INT

cpu1
COMMA
TYPE_INT

cpu2
COMMA

void
MULT

cache
COMMA
TYPE_UNSIGNED
TYPE_INT

size
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

cost1
COMMA

cost2
SEMICOLON
TYPE_INT

i
SEMICOLON

cost1
OP_ASSIGNMENT
NUMBER
SEMICOLON

measure_one
BRACKET_O

cache
COMMA

size
COMMA

cpu1
COMMA

cpu2
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

ITERATIONS
SEMICOLON

i
PLUS
PLUS
BRACKET_C

cost1
ASSIGN_PLUS

measure_one
BRACKET_O

cache
COMMA

size
MINUS

i
MULT
NUMBER
COMMA

cpu1
COMMA

cpu2
BRACKET_C
SEMICOLON

measure_one
BRACKET_O

cache
COMMA

size
COMMA

cpu2
COMMA

cpu1
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

ITERATIONS
SEMICOLON

i
PLUS
PLUS
BRACKET_C

cost1
ASSIGN_PLUS

measure_one
BRACKET_O

cache
COMMA

size
MINUS

i
MULT
NUMBER
COMMA

cpu2
COMMA

cpu1
BRACKET_C
SEMICOLON

cost2
OP_ASSIGNMENT
NUMBER
SEMICOLON

measure_one
BRACKET_O

cache
COMMA

size
COMMA

cpu1
COMMA

cpu1
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

ITERATIONS
SEMICOLON

i
PLUS
PLUS
BRACKET_C

cost2
ASSIGN_PLUS

measure_one
BRACKET_O

cache
COMMA

size
MINUS

i
MULT
NUMBER
COMMA

cpu1
COMMA

cpu1
BRACKET_C
SEMICOLON

measure_one
BRACKET_O

cache
COMMA

size
COMMA

cpu2
COMMA

cpu2
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

ITERATIONS
SEMICOLON

i
PLUS
PLUS
BRACKET_C

cost2
ASSIGN_PLUS

measure_one
BRACKET_O

cache
COMMA

size
MINUS

i
MULT
NUMBER
COMMA

cpu2
COMMA

cpu2
BRACKET_C
SEMICOLON

do_div
BRACKET_O

cost1
COMMA
NUMBER
MULT

ITERATIONS
BRACKET_C
SEMICOLON

do_div
BRACKET_O

cost2
COMMA
NUMBER
MULT

ITERATIONS
BRACKET_C
SEMICOLON

return

cost1
MINUS

cost2
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

measure_migration_cost
BRACKET_O
TYPE_INT

cpu1
COMMA
TYPE_INT

cpu2
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_LONG

max_cost
OP_ASSIGNMENT
NUMBER
COMMA

fluct
OP_ASSIGNMENT
NUMBER
COMMA

avg_fluct
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

max_size
COMMA

size
COMMA

size_found
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_LONG
TYPE_LONG

cost
OP_ASSIGNMENT
NUMBER
COMMA

prev_cost
SEMICOLON

void
MULT

cache
SEMICOLON
IF
BRACKET_O

max_cache_size
BRACKET_C
CURLY_BRACKET_O

max_size
OP_ASSIGNMENT

max
BRACKET_O

max_cache_size
MULT

SEARCH_SCOPE
COMMA

MIN_CACHE_SIZE
BRACKET_C
SEMICOLON

size
OP_ASSIGNMENT

max
BRACKET_O

max_cache_size
DIV

SEARCH_SCOPE
COMMA

MIN_CACHE_SIZE
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

max_size
OP_ASSIGNMENT

DEFAULT_CACHE_SIZE
MULT

SEARCH_SCOPE
SEMICOLON

size
OP_ASSIGNMENT

MIN_CACHE_SIZE
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

cpu_online
BRACKET_O

cpu1
BRACKET_C
OR
NOT

cpu_online
BRACKET_O

cpu2
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

cpu1
COMMA

cpu2
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

cache
OP_ASSIGNMENT

vmalloc
BRACKET_O

max_size
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cache
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA
NUMBER
MULT

max_size
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

size
LE_EQ

max_size
BRACKET_C
CURLY_BRACKET_O

prev_cost
OP_ASSIGNMENT

cost
SEMICOLON

cost
OP_ASSIGNMENT

measure_cost
BRACKET_O

cpu1
COMMA

cpu2
COMMA

cache
COMMA

size
BRACKET_C
SEMICOLON
IF
BRACKET_O

cost
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

max_cost
LESS

cost
BRACKET_C
CURLY_BRACKET_O

max_cost
OP_ASSIGNMENT

cost
SEMICOLON

size_found
OP_ASSIGNMENT

size
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

fluct
OP_ASSIGNMENT

abs
BRACKET_O

cost
MINUS

prev_cost
BRACKET_C
SEMICOLON

avg_fluct
OP_ASSIGNMENT
BRACKET_O

avg_fluct
PLUS

fluct
BRACKET_C
DIV
NUMBER
SEMICOLON
IF
BRACKET_O

migration_debug
BRACKET_C

printk
BRACKET_O
STRING
STRING
COMMA

cpu1
COMMA

cpu2
COMMA

size
COMMA
BRACKET_O
TYPE_LONG
BRACKET_C

cost
DIV
NUMBER
COMMA
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C

cost
DIV
NUMBER
BRACKET_C
MODULO
NUMBER
COMMA
BRACKET_O
TYPE_LONG
BRACKET_C

max_cost
DIV
NUMBER
COMMA
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C

max_cost
DIV
NUMBER
BRACKET_C
MODULO
NUMBER
COMMA

domain_distance
BRACKET_O

cpu1
COMMA

cpu2
BRACKET_C
COMMA

cost
COMMA

avg_fluct
BRACKET_C
SEMICOLON
IF
BRACKET_O

size_found
AND
BRACKET_O

size
MULT
NUMBER
GREATER

size_found
MULT

SIZE_THRESH
BRACKET_C
BRACKET_C
IF
BRACKET_O

cost
PLUS

avg_fluct
LE_EQ
NUMBER
OR

max_cost
MULT
NUMBER
GREATER
BRACKET_O

cost
PLUS

avg_fluct
BRACKET_C
MULT

COST_THRESH
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

migration_debug
BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

size
OP_ASSIGNMENT

size
MULT
NUMBER
DIV
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

migration_debug
BRACKET_C

printk
BRACKET_O
STRING
COMMA

cpu1
COMMA

cpu2
COMMA

size_found
COMMA

max_cost
BRACKET_C
SEMICOLON

vfree
BRACKET_O

cache
BRACKET_C
SEMICOLON

return
NUMBER
MULT

max_cost
MULT

migration_factor
DIV

MIGRATION_FACTOR_SCALE
SEMICOLON
CURLY_BRACKET_C

static

void

calibrate_migration_costs
BRACKET_O
CONST

cpumask_t
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu1
OP_ASSIGNMENT
MINUS
NUMBER
COMMA

cpu2
OP_ASSIGNMENT
MINUS
NUMBER
COMMA

cpu
COMMA

orig_cpu
OP_ASSIGNMENT

raw_smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

j0
COMMA

j1
COMMA

distance
COMMA

max_distance
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

sched_domain
MULT

sd
SEMICOLON

j0
OP_ASSIGNMENT

jiffies
SEMICOLON

for_each_cpu_mask
BRACKET_O

cpu1
COMMA
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O

for_each_cpu_mask
BRACKET_O

cpu2
COMMA
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cpu1
EQ

cpu2
BRACKET_C
CONTINUE
SEMICOLON

distance
OP_ASSIGNMENT

domain_distance
BRACKET_O

cpu1
COMMA

cpu2
BRACKET_C
SEMICOLON

max_distance
OP_ASSIGNMENT

max
BRACKET_O

max_distance
COMMA

distance
BRACKET_C
SEMICOLON
IF
BRACKET_O

migration_cost
CORNER_BRACKET_O

distance
CORNER_BRACKET_C
EQ
MINUS
NUMBER

LL
BRACKET_C

migration_cost
CORNER_BRACKET_O

distance
CORNER_BRACKET_C
OP_ASSIGNMENT

measure_migration_cost
BRACKET_O

cpu1
COMMA

cpu2
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

for_each_cpu_mask
BRACKET_O

cpu
COMMA
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O

distance
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_domain
BRACKET_O

cpu
COMMA

sd
BRACKET_C
CURLY_BRACKET_O

sd
MINUS
GREATER

cache_hot_time
OP_ASSIGNMENT

migration_cost
CORNER_BRACKET_O

distance
CORNER_BRACKET_C
SEMICOLON

distance
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

migration_debug
BRACKET_C

printk
BRACKET_O
STRING
COMMA

max_cache_size
COMMA
PP_IFDEF

CONFIG_X86

cpu_khz
DIV
NUMBER
PP_ELSE
MINUS
NUMBER
PP_ENDIF
BRACKET_C
SEMICOLON
IF
BRACKET_O

system_state
EQ

SYSTEM_BOOTING
AND

num_online_cpus
BRACKET_O
BRACKET_C
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
FOR
BRACKET_O

distance
OP_ASSIGNMENT
NUMBER
SEMICOLON

distance
LE_EQ

max_distance
SEMICOLON

distance
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

distance
BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA
BRACKET_O
TYPE_LONG
BRACKET_C

migration_cost
CORNER_BRACKET_O

distance
CORNER_BRACKET_C
DIV
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

j1
OP_ASSIGNMENT

jiffies
SEMICOLON
IF
BRACKET_O

migration_debug
BRACKET_C

printk
BRACKET_O
STRING
COMMA
BRACKET_O

j1
MINUS

j0
BRACKET_C
DIV

HZ
BRACKET_C
SEMICOLON
IF
BRACKET_O

raw_smp_processor_id
BRACKET_O
BRACKET_C
NOT_EQ

orig_cpu
BRACKET_C
CURLY_BRACKET_O

cpumask_t

mask
OP_ASSIGNMENT

cpumask_of_cpu
BRACKET_O

orig_cpu
BRACKET_C
COMMA

saved_mask
OP_ASSIGNMENT

current
MINUS
GREATER

cpus_allowed
SEMICOLON

set_cpus_allowed
BRACKET_O

current
COMMA

mask
BRACKET_C
SEMICOLON

set_cpus_allowed
BRACKET_O

current
COMMA

saved_mask
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_IFDEF

CONFIG_NUMA

static
TYPE_INT

find_next_best_node
BRACKET_O
TYPE_INT

node
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

used_nodes
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

n
COMMA

val
COMMA

min_val
COMMA

best_node
OP_ASSIGNMENT
NUMBER
SEMICOLON

min_val
OP_ASSIGNMENT

INT_MAX
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

MAX_NUMNODES
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

n
OP_ASSIGNMENT
BRACKET_O

node
PLUS

i
BRACKET_C
MODULO

MAX_NUMNODES
SEMICOLON
IF
BRACKET_O
NOT

nr_cpus_node
BRACKET_O

n
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

test_bit
BRACKET_O

n
COMMA

used_nodes
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

val
OP_ASSIGNMENT

node_distance
BRACKET_O

node
COMMA

n
BRACKET_C
SEMICOLON
IF
BRACKET_O

val
LESS

min_val
BRACKET_C
CURLY_BRACKET_O

min_val
OP_ASSIGNMENT

val
SEMICOLON

best_node
OP_ASSIGNMENT

n
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

set_bit
BRACKET_O

best_node
COMMA

used_nodes
BRACKET_C
SEMICOLON

return

best_node
SEMICOLON
CURLY_BRACKET_C

static

cpumask_t

sched_domain_node_span
BRACKET_O
TYPE_INT

node
BRACKET_C
CURLY_BRACKET_O

DECLARE_BITMAP
BRACKET_O

used_nodes
COMMA

MAX_NUMNODES
BRACKET_C
SEMICOLON

cpumask_t

span
COMMA

nodemask
SEMICOLON
TYPE_INT

i
SEMICOLON

cpus_clear
BRACKET_O

span
BRACKET_C
SEMICOLON

bitmap_zero
BRACKET_O

used_nodes
COMMA

MAX_NUMNODES
BRACKET_C
SEMICOLON

nodemask
OP_ASSIGNMENT

node_to_cpumask
BRACKET_O

node
BRACKET_C
SEMICOLON

cpus_or
BRACKET_O

span
COMMA

span
COMMA

nodemask
BRACKET_C
SEMICOLON

set_bit
BRACKET_O

node
COMMA

used_nodes
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

SD_NODES_PER_DOMAIN
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

next_node
OP_ASSIGNMENT

find_next_best_node
BRACKET_O

node
COMMA

used_nodes
BRACKET_C
SEMICOLON

nodemask
OP_ASSIGNMENT

node_to_cpumask
BRACKET_O

next_node
BRACKET_C
SEMICOLON

cpus_or
BRACKET_O

span
COMMA

span
COMMA

nodemask
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

span
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
TYPE_INT

sched_smt_power_savings
OP_ASSIGNMENT
NUMBER
COMMA

sched_mc_power_savings
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_IFDEF

CONFIG_SCHED_SMT

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

sched_domain
COMMA

cpu_domains
BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

sched_group
COMMA

sched_group_cpus
BRACKET_C
SEMICOLON

static
TYPE_INT

cpu_to_cpu_group
BRACKET_O
TYPE_INT

cpu
COMMA
CONST

cpumask_t
MULT

cpu_map
COMMA
STRUCT

sched_group
MULT
MULT

sg
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sg
BRACKET_C
MULT

sg
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

sched_group_cpus
COMMA

cpu
BRACKET_C
SEMICOLON

return

cpu
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_SCHED_MC

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

sched_domain
COMMA

core_domains
BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

sched_group
COMMA

sched_group_core
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_SCHED_MC
BRACKET_C
AND
PP_DEFINED
BRACKET_O

CONFIG_SCHED_SMT
BRACKET_C

static
TYPE_INT

cpu_to_core_group
BRACKET_O
TYPE_INT

cpu
COMMA
CONST

cpumask_t
MULT

cpu_map
COMMA
STRUCT

sched_group
MULT
MULT

sg
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

group
SEMICOLON

cpumask_t

mask
OP_ASSIGNMENT

cpu_sibling_map
CORNER_BRACKET_O

cpu
CORNER_BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

mask
COMMA

mask
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON

group
OP_ASSIGNMENT

first_cpu
BRACKET_O

mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

sg
BRACKET_C
MULT

sg
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

sched_group_core
COMMA

group
BRACKET_C
SEMICOLON

return

group
SEMICOLON
CURLY_BRACKET_C
PP_ELIF
PP_DEFINED
BRACKET_O

CONFIG_SCHED_MC
BRACKET_C

static
TYPE_INT

cpu_to_core_group
BRACKET_O
TYPE_INT

cpu
COMMA
CONST

cpumask_t
MULT

cpu_map
COMMA
STRUCT

sched_group
MULT
MULT

sg
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sg
BRACKET_C
MULT

sg
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

sched_group_core
COMMA

cpu
BRACKET_C
SEMICOLON

return

cpu
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

sched_domain
COMMA

phys_domains
BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

sched_group
COMMA

sched_group_phys
BRACKET_C
SEMICOLON

static
TYPE_INT

cpu_to_phys_group
BRACKET_O
TYPE_INT

cpu
COMMA
CONST

cpumask_t
MULT

cpu_map
COMMA
STRUCT

sched_group
MULT
MULT

sg
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

group
SEMICOLON
PP_IFDEF

CONFIG_SCHED_MC

cpumask_t

mask
OP_ASSIGNMENT

cpu_coregroup_map
BRACKET_O

cpu
BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

mask
COMMA

mask
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON

group
OP_ASSIGNMENT

first_cpu
BRACKET_O

mask
BRACKET_C
SEMICOLON
PP_ELIF
PP_DEFINED
BRACKET_O

CONFIG_SCHED_SMT
BRACKET_C

cpumask_t

mask
OP_ASSIGNMENT

cpu_sibling_map
CORNER_BRACKET_O

cpu
CORNER_BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

mask
COMMA

mask
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON

group
OP_ASSIGNMENT

first_cpu
BRACKET_O

mask
BRACKET_C
SEMICOLON
PP_ELSE

group
OP_ASSIGNMENT

cpu
SEMICOLON
PP_ENDIF
IF
BRACKET_O

sg
BRACKET_C
MULT

sg
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

sched_group_phys
COMMA

group
BRACKET_C
SEMICOLON

return

group
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_NUMA

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

sched_domain
COMMA

node_domains
BRACKET_C
SEMICOLON

static
STRUCT

sched_group
MULT
MULT

sched_group_nodes_bycpu
CORNER_BRACKET_O

NR_CPUS
CORNER_BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

sched_domain
COMMA

allnodes_domains
BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

sched_group
COMMA

sched_group_allnodes
BRACKET_C
SEMICOLON

static
TYPE_INT

cpu_to_allnodes_group
BRACKET_O
TYPE_INT

cpu
COMMA
CONST

cpumask_t
MULT

cpu_map
COMMA
STRUCT

sched_group
MULT
MULT

sg
BRACKET_C
CURLY_BRACKET_O

cpumask_t

nodemask
OP_ASSIGNMENT

node_to_cpumask
BRACKET_O

cpu_to_node
BRACKET_O

cpu
BRACKET_C
BRACKET_C
SEMICOLON
TYPE_INT

group
SEMICOLON

cpus_and
BRACKET_O

nodemask
COMMA

nodemask
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON

group
OP_ASSIGNMENT

first_cpu
BRACKET_O

nodemask
BRACKET_C
SEMICOLON
IF
BRACKET_O

sg
BRACKET_C
MULT

sg
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

sched_group_allnodes
COMMA

group
BRACKET_C
SEMICOLON

return

group
SEMICOLON
CURLY_BRACKET_C

static

void

init_numa_sched_groups_power
BRACKET_O
STRUCT

sched_group
MULT

group_head
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_group
MULT

sg
OP_ASSIGNMENT

group_head
SEMICOLON
TYPE_INT

j
SEMICOLON
IF
BRACKET_O
NOT

sg
BRACKET_C

return
SEMICOLON

next_sg
COLON

for_each_cpu_mask
BRACKET_O

j
COMMA

sg
MINUS
GREATER

cpumask
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_domain
MULT

sd
SEMICOLON

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

phys_domains
COMMA

j
BRACKET_C
SEMICOLON
IF
BRACKET_O

j
NOT_EQ

first_cpu
BRACKET_O

sd
MINUS
GREATER

groups
MINUS
GREATER

cpumask
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
CONTINUE
SEMICOLON
CURLY_BRACKET_C

sg_inc_cpu_power
BRACKET_O

sg
COMMA

sd
MINUS
GREATER

groups
MINUS
GREATER

__cpu_power
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

sg
OP_ASSIGNMENT

sg
MINUS
GREATER

next
SEMICOLON
IF
BRACKET_O

sg
NOT_EQ

group_head
BRACKET_C

goto

next_sg
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_NUMA

static

void

free_sched_groups
BRACKET_O
CONST

cpumask_t
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
COMMA

i
SEMICOLON

for_each_cpu_mask
BRACKET_O

cpu
COMMA
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_group
MULT
MULT

sched_group_nodes
OP_ASSIGNMENT

sched_group_nodes_bycpu
CORNER_BRACKET_O

cpu
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sched_group_nodes
BRACKET_C
CONTINUE
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

MAX_NUMNODES
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

cpumask_t

nodemask
OP_ASSIGNMENT

node_to_cpumask
BRACKET_O

i
BRACKET_C
SEMICOLON
STRUCT

sched_group
MULT

oldsg
COMMA
MULT

sg
OP_ASSIGNMENT

sched_group_nodes
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

nodemask
COMMA

nodemask
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpus_empty
BRACKET_O

nodemask
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

sg
EQ

NULL
BRACKET_C
CONTINUE
SEMICOLON

sg
OP_ASSIGNMENT

sg
MINUS
GREATER

next
SEMICOLON

next_sg
COLON

oldsg
OP_ASSIGNMENT

sg
SEMICOLON

sg
OP_ASSIGNMENT

sg
MINUS
GREATER

next
SEMICOLON

kfree
BRACKET_O

oldsg
BRACKET_C
SEMICOLON
IF
BRACKET_O

oldsg
NOT_EQ

sched_group_nodes
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C

goto

next_sg
SEMICOLON
CURLY_BRACKET_C

kfree
BRACKET_O

sched_group_nodes
BRACKET_C
SEMICOLON

sched_group_nodes_bycpu
CORNER_BRACKET_O

cpu
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ELSE

static

void

free_sched_groups
BRACKET_O
CONST

cpumask_t
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_ENDIF

static

void

init_sched_groups_power
BRACKET_O
TYPE_INT

cpu
COMMA
STRUCT

sched_domain
MULT

sd
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_domain
MULT

child
SEMICOLON
STRUCT

sched_group
MULT

group
SEMICOLON

WARN_ON
BRACKET_O
NOT

sd
OR
NOT

sd
MINUS
GREATER

groups
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpu
NOT_EQ

first_cpu
BRACKET_O

sd
MINUS
GREATER

groups
MINUS
GREATER

cpumask
BRACKET_C
BRACKET_C

return
SEMICOLON

child
OP_ASSIGNMENT

sd
MINUS
GREATER

child
SEMICOLON

sd
MINUS
GREATER

groups
MINUS
GREATER

__cpu_power
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

child
OR
BRACKET_O
NOT
BRACKET_O

sd
MINUS
GREATER

flags
AMPERSANT

SD_POWERSAVINGS_BALANCE
BRACKET_C
AND
BRACKET_O

child
MINUS
GREATER

flags
AMPERSANT
BRACKET_O

SD_SHARE_CPUPOWER
LOGICAL_OR

SD_SHARE_PKG_RESOURCES
BRACKET_C
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

sg_inc_cpu_power
BRACKET_O

sd
MINUS
GREATER

groups
COMMA

SCHED_LOAD_SCALE
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

group
OP_ASSIGNMENT

child
MINUS
GREATER

groups
SEMICOLON
DO
CURLY_BRACKET_O

sg_inc_cpu_power
BRACKET_O

sd
MINUS
GREATER

groups
COMMA

group
MINUS
GREATER

__cpu_power
BRACKET_C
SEMICOLON

group
OP_ASSIGNMENT

group
MINUS
GREATER

next
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

group
NOT_EQ

child
MINUS
GREATER

groups
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

build_sched_domains
BRACKET_O
CONST

cpumask_t
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
STRUCT

sched_domain
MULT

sd
SEMICOLON
PP_IFDEF

CONFIG_NUMA
STRUCT

sched_group
MULT
MULT

sched_group_nodes
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_INT

sd_allnodes
OP_ASSIGNMENT
NUMBER
SEMICOLON

sched_group_nodes
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

sched_group
MULT
BRACKET_C
MULT

MAX_NUMNODES
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sched_group_nodes
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

sched_group_nodes_bycpu
CORNER_BRACKET_O

first_cpu
BRACKET_O
MULT

cpu_map
BRACKET_C
CORNER_BRACKET_C
OP_ASSIGNMENT

sched_group_nodes
SEMICOLON
PP_ENDIF

for_each_cpu_mask
BRACKET_O

i
COMMA
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_domain
MULT

sd
OP_ASSIGNMENT

NULL
COMMA
MULT

p
SEMICOLON

cpumask_t

nodemask
OP_ASSIGNMENT

node_to_cpumask
BRACKET_O

cpu_to_node
BRACKET_O

i
BRACKET_C
BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

nodemask
COMMA

nodemask
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_NUMA
IF
BRACKET_O

cpus_weight
BRACKET_O
MULT

cpu_map
BRACKET_C
GREATER

SD_NODES_PER_DOMAIN
MULT

cpus_weight
BRACKET_O

nodemask
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

allnodes_domains
COMMA

i
BRACKET_C
SEMICOLON
MULT

sd
OP_ASSIGNMENT

SD_ALLNODES_INIT
SEMICOLON

sd
MINUS
GREATER

span
OP_ASSIGNMENT
MULT

cpu_map
SEMICOLON

cpu_to_allnodes_group
BRACKET_O

i
COMMA

cpu_map
COMMA
AMPERSANT

sd
MINUS
GREATER

groups
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

sd
SEMICOLON

sd_allnodes
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE

p
OP_ASSIGNMENT

NULL
SEMICOLON

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

node_domains
COMMA

i
BRACKET_C
SEMICOLON
MULT

sd
OP_ASSIGNMENT

SD_NODE_INIT
SEMICOLON

sd
MINUS
GREATER

span
OP_ASSIGNMENT

sched_domain_node_span
BRACKET_O

cpu_to_node
BRACKET_O

i
BRACKET_C
BRACKET_C
SEMICOLON

sd
MINUS
GREATER

parent
OP_ASSIGNMENT

p
SEMICOLON
IF
BRACKET_O

p
BRACKET_C

p
MINUS
GREATER

child
OP_ASSIGNMENT

sd
SEMICOLON

cpus_and
BRACKET_O

sd
MINUS
GREATER

span
COMMA

sd
MINUS
GREATER

span
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON
PP_ENDIF

p
OP_ASSIGNMENT

sd
SEMICOLON

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

phys_domains
COMMA

i
BRACKET_C
SEMICOLON
MULT

sd
OP_ASSIGNMENT

SD_CPU_INIT
SEMICOLON

sd
MINUS
GREATER

span
OP_ASSIGNMENT

nodemask
SEMICOLON

sd
MINUS
GREATER

parent
OP_ASSIGNMENT

p
SEMICOLON
IF
BRACKET_O

p
BRACKET_C

p
MINUS
GREATER

child
OP_ASSIGNMENT

sd
SEMICOLON

cpu_to_phys_group
BRACKET_O

i
COMMA

cpu_map
COMMA
AMPERSANT

sd
MINUS
GREATER

groups
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SCHED_MC

p
OP_ASSIGNMENT

sd
SEMICOLON

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

core_domains
COMMA

i
BRACKET_C
SEMICOLON
MULT

sd
OP_ASSIGNMENT

SD_MC_INIT
SEMICOLON

sd
MINUS
GREATER

span
OP_ASSIGNMENT

cpu_coregroup_map
BRACKET_O

i
BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

sd
MINUS
GREATER

span
COMMA

sd
MINUS
GREATER

span
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON

sd
MINUS
GREATER

parent
OP_ASSIGNMENT

p
SEMICOLON

p
MINUS
GREATER

child
OP_ASSIGNMENT

sd
SEMICOLON

cpu_to_core_group
BRACKET_O

i
COMMA

cpu_map
COMMA
AMPERSANT

sd
MINUS
GREATER

groups
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_SCHED_SMT

p
OP_ASSIGNMENT

sd
SEMICOLON

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

cpu_domains
COMMA

i
BRACKET_C
SEMICOLON
MULT

sd
OP_ASSIGNMENT

SD_SIBLING_INIT
SEMICOLON

sd
MINUS
GREATER

span
OP_ASSIGNMENT

cpu_sibling_map
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

sd
MINUS
GREATER

span
COMMA

sd
MINUS
GREATER

span
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON

sd
MINUS
GREATER

parent
OP_ASSIGNMENT

p
SEMICOLON

p
MINUS
GREATER

child
OP_ASSIGNMENT

sd
SEMICOLON

cpu_to_cpu_group
BRACKET_O

i
COMMA

cpu_map
COMMA
AMPERSANT

sd
MINUS
GREATER

groups
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C
PP_IFDEF

CONFIG_SCHED_SMT

for_each_cpu_mask
BRACKET_O

i
COMMA
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O

cpumask_t

this_sibling_map
OP_ASSIGNMENT

cpu_sibling_map
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

this_sibling_map
COMMA

this_sibling_map
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON
IF
BRACKET_O

i
NOT_EQ

first_cpu
BRACKET_O

this_sibling_map
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

init_sched_build_groups
BRACKET_O

this_sibling_map
COMMA

cpu_map
COMMA
AMPERSANT

cpu_to_cpu_group
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_SCHED_MC

for_each_cpu_mask
BRACKET_O

i
COMMA
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O

cpumask_t

this_core_map
OP_ASSIGNMENT

cpu_coregroup_map
BRACKET_O

i
BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

this_core_map
COMMA

this_core_map
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON
IF
BRACKET_O

i
NOT_EQ

first_cpu
BRACKET_O

this_core_map
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

init_sched_build_groups
BRACKET_O

this_core_map
COMMA

cpu_map
COMMA
AMPERSANT

cpu_to_core_group
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

MAX_NUMNODES
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

cpumask_t

nodemask
OP_ASSIGNMENT

node_to_cpumask
BRACKET_O

i
BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

nodemask
COMMA

nodemask
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpus_empty
BRACKET_O

nodemask
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

init_sched_build_groups
BRACKET_O

nodemask
COMMA

cpu_map
COMMA
AMPERSANT

cpu_to_phys_group
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_NUMA
IF
BRACKET_O

sd_allnodes
BRACKET_C

init_sched_build_groups
BRACKET_O
MULT

cpu_map
COMMA

cpu_map
COMMA
AMPERSANT

cpu_to_allnodes_group
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

MAX_NUMNODES
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_group
MULT

sg
COMMA
MULT

prev
SEMICOLON

cpumask_t

nodemask
OP_ASSIGNMENT

node_to_cpumask
BRACKET_O

i
BRACKET_C
SEMICOLON

cpumask_t

domainspan
SEMICOLON

cpumask_t

covered
OP_ASSIGNMENT

CPU_MASK_NONE
SEMICOLON
TYPE_INT

j
SEMICOLON

cpus_and
BRACKET_O

nodemask
COMMA

nodemask
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpus_empty
BRACKET_O

nodemask
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

sched_group_nodes
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

domainspan
OP_ASSIGNMENT

sched_domain_node_span
BRACKET_O

i
BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

domainspan
COMMA

domainspan
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON

sg
OP_ASSIGNMENT

kmalloc_node
BRACKET_O

sizeof
BRACKET_O
STRUCT

sched_group
BRACKET_C
COMMA

GFP_KERNEL
COMMA

i
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sg
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
STRING
COMMA

i
BRACKET_C
SEMICOLON

goto

error
SEMICOLON
CURLY_BRACKET_C

sched_group_nodes
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

sg
SEMICOLON

for_each_cpu_mask
BRACKET_O

j
COMMA

nodemask
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_domain
MULT

sd
SEMICOLON

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

node_domains
COMMA

j
BRACKET_C
SEMICOLON

sd
MINUS
GREATER

groups
OP_ASSIGNMENT

sg
SEMICOLON
CURLY_BRACKET_C

sg
MINUS
GREATER

__cpu_power
OP_ASSIGNMENT
NUMBER
SEMICOLON

sg
MINUS
GREATER

cpumask
OP_ASSIGNMENT

nodemask
SEMICOLON

sg
MINUS
GREATER

next
OP_ASSIGNMENT

sg
SEMICOLON

cpus_or
BRACKET_O

covered
COMMA

covered
COMMA

nodemask
BRACKET_C
SEMICOLON

prev
OP_ASSIGNMENT

sg
SEMICOLON
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

MAX_NUMNODES
SEMICOLON

j
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

cpumask_t

tmp
COMMA

notcovered
SEMICOLON
TYPE_INT

n
OP_ASSIGNMENT
BRACKET_O

i
PLUS

j
BRACKET_C
MODULO

MAX_NUMNODES
SEMICOLON

cpus_complement
BRACKET_O

notcovered
COMMA

covered
BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

tmp
COMMA

notcovered
COMMA
MULT

cpu_map
BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

tmp
COMMA

tmp
COMMA

domainspan
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpus_empty
BRACKET_O

tmp
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

nodemask
OP_ASSIGNMENT

node_to_cpumask
BRACKET_O

n
BRACKET_C
SEMICOLON

cpus_and
BRACKET_O

tmp
COMMA

tmp
COMMA

nodemask
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpus_empty
BRACKET_O

tmp
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

sg
OP_ASSIGNMENT

kmalloc_node
BRACKET_O

sizeof
BRACKET_O
STRUCT

sched_group
BRACKET_C
COMMA

GFP_KERNEL
COMMA

i
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sg
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
COMMA

j
BRACKET_C
SEMICOLON

goto

error
SEMICOLON
CURLY_BRACKET_C

sg
MINUS
GREATER

__cpu_power
OP_ASSIGNMENT
NUMBER
SEMICOLON

sg
MINUS
GREATER

cpumask
OP_ASSIGNMENT

tmp
SEMICOLON

sg
MINUS
GREATER

next
OP_ASSIGNMENT

prev
MINUS
GREATER

next
SEMICOLON

cpus_or
BRACKET_O

covered
COMMA

covered
COMMA

tmp
BRACKET_C
SEMICOLON

prev
MINUS
GREATER

next
OP_ASSIGNMENT

sg
SEMICOLON

prev
OP_ASSIGNMENT

sg
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_SCHED_SMT

for_each_cpu_mask
BRACKET_O

i
COMMA
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

cpu_domains
COMMA

i
BRACKET_C
SEMICOLON

init_sched_groups_power
BRACKET_O

i
COMMA

sd
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_SCHED_MC

for_each_cpu_mask
BRACKET_O

i
COMMA
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

core_domains
COMMA

i
BRACKET_C
SEMICOLON

init_sched_groups_power
BRACKET_O

i
COMMA

sd
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

for_each_cpu_mask
BRACKET_O

i
COMMA
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

phys_domains
COMMA

i
BRACKET_C
SEMICOLON

init_sched_groups_power
BRACKET_O

i
COMMA

sd
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_NUMA
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

MAX_NUMNODES
SEMICOLON

i
PLUS
PLUS
BRACKET_C

init_numa_sched_groups_power
BRACKET_O

sched_group_nodes
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

sd_allnodes
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_group
MULT

sg
SEMICOLON

cpu_to_allnodes_group
BRACKET_O

first_cpu
BRACKET_O
MULT

cpu_map
BRACKET_C
COMMA

cpu_map
COMMA
AMPERSANT

sg
BRACKET_C
SEMICOLON

init_numa_sched_groups_power
BRACKET_O

sg
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

for_each_cpu_mask
BRACKET_O

i
COMMA
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_domain
MULT

sd
SEMICOLON
PP_IFDEF

CONFIG_SCHED_SMT

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

cpu_domains
COMMA

i
BRACKET_C
SEMICOLON
PP_ELIF
PP_DEFINED
BRACKET_O

CONFIG_SCHED_MC
BRACKET_C

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

core_domains
COMMA

i
BRACKET_C
SEMICOLON
PP_ELSE

sd
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

phys_domains
COMMA

i
BRACKET_C
SEMICOLON
PP_ENDIF

cpu_attach_domain
BRACKET_O

sd
COMMA

i
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

calibrate_migration_costs
BRACKET_O

cpu_map
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
PP_IFDEF

CONFIG_NUMA

error
COLON

free_sched_groups
BRACKET_O

cpu_map
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

static
TYPE_INT

arch_init_sched_domains
BRACKET_O
CONST

cpumask_t
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O

cpumask_t

cpu_default_map
SEMICOLON
TYPE_INT

err
SEMICOLON

cpus_andnot
BRACKET_O

cpu_default_map
COMMA
MULT

cpu_map
COMMA

cpu_isolated_map
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

build_sched_domains
BRACKET_O
AMPERSANT

cpu_default_map
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C

static

void

arch_destroy_sched_domains
BRACKET_O
CONST

cpumask_t
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O

free_sched_groups
BRACKET_O

cpu_map
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

detach_destroy_domains
BRACKET_O
CONST

cpumask_t
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON

for_each_cpu_mask
BRACKET_O

i
COMMA
MULT

cpu_map
BRACKET_C

cpu_attach_domain
BRACKET_O

NULL
COMMA

i
BRACKET_C
SEMICOLON

synchronize_sched
BRACKET_O
BRACKET_C
SEMICOLON

arch_destroy_sched_domains
BRACKET_O

cpu_map
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

partition_sched_domains
BRACKET_O

cpumask_t
MULT

partition1
COMMA

cpumask_t
MULT

partition2
BRACKET_C
CURLY_BRACKET_O

cpumask_t

change_map
SEMICOLON
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
SEMICOLON

cpus_and
BRACKET_O
MULT

partition1
COMMA
MULT

partition1
COMMA

cpu_online_map
BRACKET_C
SEMICOLON

cpus_and
BRACKET_O
MULT

partition2
COMMA
MULT

partition2
COMMA

cpu_online_map
BRACKET_C
SEMICOLON

cpus_or
BRACKET_O

change_map
COMMA
MULT

partition1
COMMA
MULT

partition2
BRACKET_C
SEMICOLON

detach_destroy_domains
BRACKET_O
AMPERSANT

change_map
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cpus_empty
BRACKET_O
MULT

partition1
BRACKET_C
BRACKET_C

err
OP_ASSIGNMENT

build_sched_domains
BRACKET_O

partition1
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

err
AND
NOT

cpus_empty
BRACKET_O
MULT

partition2
BRACKET_C
BRACKET_C

err
OP_ASSIGNMENT

build_sched_domains
BRACKET_O

partition2
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_SCHED_MC
BRACKET_C
OR
PP_DEFINED
BRACKET_O

CONFIG_SCHED_SMT
BRACKET_C
TYPE_INT

arch_reinit_sched_domains
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

sched_hotcpu_mutex
BRACKET_C
SEMICOLON

detach_destroy_domains
BRACKET_O
AMPERSANT

cpu_online_map
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

arch_init_sched_domains
BRACKET_O
AMPERSANT

cpu_online_map
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

sched_hotcpu_mutex
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

sched_power_savings_store
BRACKET_O
CONST
TYPE_CHAR
MULT

buf
COMMA

size_t

count
COMMA
TYPE_INT

smt
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
NOT_EQ
QUOTED_CHAR
AND

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
NOT_EQ
QUOTED_CHAR
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

smt
BRACKET_C

sched_smt_power_savings
OP_ASSIGNMENT
BRACKET_O

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C
SEMICOLON
ELSE

sched_mc_power_savings
OP_ASSIGNMENT
BRACKET_O

buf
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ
QUOTED_CHAR
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

arch_reinit_sched_domains
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
QUESTION_MARK

ret
COLON

count
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

sched_create_sysfs_power_savings_entries
BRACKET_O
STRUCT

sysdev_class
MULT

cls
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_IFDEF

CONFIG_SCHED_SMT
IF
BRACKET_O

smt_capable
BRACKET_O
BRACKET_C
BRACKET_C

err
OP_ASSIGNMENT

sysfs_create_file
BRACKET_O
AMPERSANT

cls
MINUS
GREATER

kset
DOT

kobj
COMMA
AMPERSANT

attr_sched_smt_power_savings
DOT

attr
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_SCHED_MC
IF
BRACKET_O
NOT

err
AND

mc_capable
BRACKET_O
BRACKET_C
BRACKET_C

err
OP_ASSIGNMENT

sysfs_create_file
BRACKET_O
AMPERSANT

cls
MINUS
GREATER

kset
DOT

kobj
COMMA
AMPERSANT

attr_sched_mc_power_savings
DOT

attr
BRACKET_C
SEMICOLON
PP_ENDIF

return

err
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_SCHED_MC

static

ssize_t

sched_mc_power_savings_show
BRACKET_O
STRUCT

sys_device
MULT

dev
COMMA
TYPE_CHAR
MULT

page
BRACKET_C
CURLY_BRACKET_O

return

sprintf
BRACKET_O

page
COMMA
STRING
COMMA

sched_mc_power_savings
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

sched_mc_power_savings_store
BRACKET_O
STRUCT

sys_device
MULT

dev
COMMA
CONST
TYPE_CHAR
MULT

buf
COMMA

size_t

count
BRACKET_C
CURLY_BRACKET_O

return

sched_power_savings_store
BRACKET_O

buf
COMMA

count
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

SYSDEV_ATTR
BRACKET_O

sched_mc_power_savings
COMMA
NUMBER
COMMA

sched_mc_power_savings_show
COMMA

sched_mc_power_savings_store
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_SCHED_SMT

static

ssize_t

sched_smt_power_savings_show
BRACKET_O
STRUCT

sys_device
MULT

dev
COMMA
TYPE_CHAR
MULT

page
BRACKET_C
CURLY_BRACKET_O

return

sprintf
BRACKET_O

page
COMMA
STRING
COMMA

sched_smt_power_savings
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

ssize_t

sched_smt_power_savings_store
BRACKET_O
STRUCT

sys_device
MULT

dev
COMMA
CONST
TYPE_CHAR
MULT

buf
COMMA

size_t

count
BRACKET_C
CURLY_BRACKET_O

return

sched_power_savings_store
BRACKET_O

buf
COMMA

count
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

SYSDEV_ATTR
BRACKET_O

sched_smt_power_savings
COMMA
NUMBER
COMMA

sched_smt_power_savings_show
COMMA

sched_smt_power_savings_store
BRACKET_C
SEMICOLON
PP_ENDIF

static
TYPE_INT

update_sched_domains
BRACKET_O
STRUCT

notifier_block
MULT

nfb
COMMA
TYPE_UNSIGNED
TYPE_LONG

action
COMMA

void
MULT

hcpu
BRACKET_C
CURLY_BRACKET_O
SWITCH
BRACKET_O

action
BRACKET_C
CURLY_BRACKET_O

case

CPU_UP_PREPARE
COLON

case

CPU_UP_PREPARE_FROZEN
COLON

case

CPU_DOWN_PREPARE
COLON

case

CPU_DOWN_PREPARE_FROZEN
COLON

detach_destroy_domains
BRACKET_O
AMPERSANT

cpu_online_map
BRACKET_C
SEMICOLON

return

NOTIFY_OK
SEMICOLON

case

CPU_UP_CANCELED
COLON

case

CPU_UP_CANCELED_FROZEN
COLON

case

CPU_DOWN_FAILED
COLON

case

CPU_DOWN_FAILED_FROZEN
COLON

case

CPU_ONLINE
COLON

case

CPU_ONLINE_FROZEN
COLON

case

CPU_DEAD
COLON

case

CPU_DEAD_FROZEN
COLON
BREAK
SEMICOLON

default
COLON

return

NOTIFY_DONE
SEMICOLON
CURLY_BRACKET_C

arch_init_sched_domains
BRACKET_O
AMPERSANT

cpu_online_map
BRACKET_C
SEMICOLON

return

NOTIFY_OK
SEMICOLON
CURLY_BRACKET_C

void

__init

sched_init_smp
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

cpumask_t

non_isolated_cpus
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

sched_hotcpu_mutex
BRACKET_C
SEMICOLON

arch_init_sched_domains
BRACKET_O
AMPERSANT

cpu_online_map
BRACKET_C
SEMICOLON

cpus_andnot
BRACKET_O

non_isolated_cpus
COMMA

cpu_possible_map
COMMA

cpu_isolated_map
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpus_empty
BRACKET_O

non_isolated_cpus
BRACKET_C
BRACKET_C

cpu_set
BRACKET_O

smp_processor_id
BRACKET_O
BRACKET_C
COMMA

non_isolated_cpus
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

sched_hotcpu_mutex
BRACKET_C
SEMICOLON

hotcpu_notifier
BRACKET_O

update_sched_domains
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

set_cpus_allowed
BRACKET_O

current
COMMA

non_isolated_cpus
BRACKET_C
LESS
NUMBER
BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

void

__init

sched_init_smp
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_ENDIF
TYPE_INT

in_sched_functions
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O

extern
TYPE_CHAR

__sched_text_start
CORNER_BRACKET_O
CORNER_BRACKET_C
COMMA

__sched_text_end
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

return

in_lock_functions
BRACKET_O

addr
BRACKET_C
OR
BRACKET_O

addr
GR_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__sched_text_start
AND

addr
LESS
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__sched_text_end
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

__init

sched_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

j
COMMA

k
SEMICOLON
TYPE_INT

highest_cpu
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_possible_cpu
BRACKET_O

i
BRACKET_C
CURLY_BRACKET_O
STRUCT

prio_array
MULT

array
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

i
BRACKET_C
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

lockdep_set_class
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
COMMA
AMPERSANT

rq
MINUS
GREATER

rq_lock_key
BRACKET_C
SEMICOLON

rq
MINUS
GREATER

nr_running
OP_ASSIGNMENT
NUMBER
SEMICOLON

rq
MINUS
GREATER

active
OP_ASSIGNMENT

rq
MINUS
GREATER

arrays
SEMICOLON

rq
MINUS
GREATER

expired
OP_ASSIGNMENT

rq
MINUS
GREATER

arrays
PLUS
NUMBER
SEMICOLON

rq
MINUS
GREATER

best_expired_prio
OP_ASSIGNMENT

MAX_PRIO
SEMICOLON
PP_IFDEF

CONFIG_SMP

rq
MINUS
GREATER

sd
OP_ASSIGNMENT

NULL
SEMICOLON
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS
NUMBER
SEMICOLON

j
PLUS
PLUS
BRACKET_C

rq
MINUS
GREATER

cpu_load
CORNER_BRACKET_O

j
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

rq
MINUS
GREATER

active_balance
OP_ASSIGNMENT
NUMBER
SEMICOLON

rq
MINUS
GREATER

push_cpu
OP_ASSIGNMENT
NUMBER
SEMICOLON

rq
MINUS
GREATER

cpu
OP_ASSIGNMENT

i
SEMICOLON

rq
MINUS
GREATER

migration_thread
OP_ASSIGNMENT

NULL
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

migration_queue
BRACKET_C
SEMICOLON
PP_ENDIF

atomic_set
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

nr_iowait
COMMA
NUMBER
BRACKET_C
SEMICOLON
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS
NUMBER
SEMICOLON

j
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

array
OP_ASSIGNMENT

rq
MINUS
GREATER

arrays
PLUS

j
SEMICOLON
FOR
BRACKET_O

k
OP_ASSIGNMENT
NUMBER
SEMICOLON

k
LESS

MAX_PRIO
SEMICOLON

k
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

INIT_LIST_HEAD
BRACKET_O

array
MINUS
GREATER

queue
PLUS

k
BRACKET_C
SEMICOLON

__clear_bit
BRACKET_O

k
COMMA

array
MINUS
GREATER

bitmap
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__set_bit
BRACKET_O

MAX_PRIO
COMMA

array
MINUS
GREATER

bitmap
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

highest_cpu
OP_ASSIGNMENT

i
SEMICOLON
CURLY_BRACKET_C

set_load_weight
BRACKET_O
AMPERSANT

init_task
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SMP

nr_cpu_ids
OP_ASSIGNMENT

highest_cpu
PLUS
NUMBER
SEMICOLON

open_softirq
BRACKET_O

SCHED_SOFTIRQ
COMMA

run_rebalance_domains
COMMA

NULL
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_RT_MUTEXES

plist_head_init
BRACKET_O
AMPERSANT

init_task
DOT

pi_waiters
COMMA
AMPERSANT

init_task
DOT

pi_lock
BRACKET_C
SEMICOLON
PP_ENDIF

atomic_inc
BRACKET_O
AMPERSANT

init_mm
DOT

mm_count
BRACKET_C
SEMICOLON

enter_lazy_tlb
BRACKET_O
AMPERSANT

init_mm
COMMA

current
BRACKET_C
SEMICOLON

init_idle
BRACKET_O

current
COMMA

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_DEBUG_SPINLOCK_SLEEP

void

__might_sleep
BRACKET_O
TYPE_CHAR
MULT

file
COMMA
TYPE_INT

line
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

in_atomic

static
TYPE_UNSIGNED
TYPE_LONG

prev_jiffy
SEMICOLON
IF
BRACKET_O
BRACKET_O

in_atomic
BRACKET_O
BRACKET_C
OR

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
AND

system_state
EQ

SYSTEM_RUNNING
AND
NOT

oops_in_progress
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

time_before
BRACKET_O

jiffies
COMMA

prev_jiffy
PLUS

HZ
BRACKET_C
AND

prev_jiffy
BRACKET_C

return
SEMICOLON

prev_jiffy
OP_ASSIGNMENT

jiffies
SEMICOLON

printk
BRACKET_O

KERN_ERR
STRING
STRING
COMMA

file
COMMA

line
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
COMMA

in_atomic
BRACKET_O
BRACKET_C
COMMA

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

debug_show_held_locks
BRACKET_O

current
BRACKET_C
SEMICOLON
IF
BRACKET_O

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C

print_irqtrace_events
BRACKET_O

current
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__might_sleep
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_MAGIC_SYSRQ

void

normalize_rt_tasks
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

prio_array
MULT

array
SEMICOLON
STRUCT

task_struct
MULT

g
COMMA
MULT

p
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

rq
MULT

rq
SEMICOLON

read_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

do_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

rt_task
BRACKET_O

p
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON

rq
OP_ASSIGNMENT

__task_rq_lock
BRACKET_O

p
BRACKET_C
SEMICOLON

array
OP_ASSIGNMENT

p
MINUS
GREATER

array
SEMICOLON
IF
BRACKET_O

array
BRACKET_C

deactivate_task
BRACKET_O

p
COMMA

task_rq
BRACKET_O

p
BRACKET_C
BRACKET_C
SEMICOLON

__setscheduler
BRACKET_O

p
COMMA

SCHED_NORMAL
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

array
BRACKET_C
CURLY_BRACKET_O

__activate_task
BRACKET_O

p
COMMA

task_rq
BRACKET_O

p
BRACKET_C
BRACKET_C
SEMICOLON

resched_task
BRACKET_O

rq
MINUS
GREATER

curr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__task_rq_unlock
BRACKET_O

rq
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pi_lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

while_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
SEMICOLON

read_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_IA64
BRACKET_C
OR
PP_DEFINED
BRACKET_O

CONFIG_KDB
BRACKET_C
STRUCT

task_struct
MULT

curr_task
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O

return

cpu_curr
BRACKET_O

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

set_curr_task
BRACKET_O
TYPE_INT

cpu
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

cpu_curr
BRACKET_O

cpu
BRACKET_C
OP_ASSIGNMENT

p
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_KDB
PP_INCLUDE

static

void

kdb_prio
BRACKET_O
TYPE_CHAR
MULT

name
COMMA
STRUCT

prio_array
MULT

array
COMMA

kdb_printf_t

xxx_printf
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

pri
SEMICOLON

xxx_printf
BRACKET_O
STRING
COMMA

name
COMMA

array
MINUS
GREATER

nr_active
COMMA

array
MINUS
GREATER

bitmap
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

array
MINUS
GREATER

bitmap
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

array
MINUS
GREATER

bitmap
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

pri
OP_ASSIGNMENT

sched_find_first_bit
BRACKET_O

array
MINUS
GREATER

bitmap
BRACKET_C
SEMICOLON
IF
BRACKET_O

pri
NOT_EQ

MAX_PRIO
BRACKET_C
CURLY_BRACKET_O

xxx_printf
BRACKET_O
STRING
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

pri
NOT_EQ

MAX_PRIO
BRACKET_C
CURLY_BRACKET_O

xxx_printf
BRACKET_O
STRING
COMMA

pri
BRACKET_C
SEMICOLON

pri
PLUS
PLUS
SEMICOLON

pri
OP_ASSIGNMENT

find_next_bit
BRACKET_O

array
MINUS
GREATER

bitmap
COMMA

MAX_PRIO
COMMA

pri
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

xxx_printf
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
FOR
BRACKET_O

pri
OP_ASSIGNMENT
NUMBER
SEMICOLON

pri
LESS

MAX_PRIO
SEMICOLON

pri
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

printed_hdr
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

list_head
MULT

head
COMMA
MULT

curr
SEMICOLON

head
OP_ASSIGNMENT

array
MINUS
GREATER

queue
PLUS

pri
SEMICOLON

curr
OP_ASSIGNMENT

head
MINUS
GREATER

next
SEMICOLON
WHILE
BRACKET_O

curr
NOT_EQ

head
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

task
SEMICOLON
IF
BRACKET_O
NOT

printed_hdr
BRACKET_C
CURLY_BRACKET_O

xxx_printf
BRACKET_O
STRING
COMMA

pri
BRACKET_C
SEMICOLON

printed_hdr
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

task
OP_ASSIGNMENT

list_entry
BRACKET_O

curr
COMMA
STRUCT

task_struct
COMMA

run_list
BRACKET_C
SEMICOLON

xxx_printf
BRACKET_O
STRING
COMMA

task
COMMA

task
MINUS
GREATER

pid
COMMA

task
MINUS
GREATER

comm
COMMA

task
MINUS
GREATER

time_slice
BRACKET_C
SEMICOLON

curr
OP_ASSIGNMENT

curr
MINUS
GREATER

next
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C

void

kdb_runqueue
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

cpu
COMMA

kdb_printf_t

xxx_printf
BRACKET_C
CURLY_BRACKET_O
STRUCT

rq
MULT

rq
SEMICOLON

rq
OP_ASSIGNMENT

cpu_rq
BRACKET_O

cpu
BRACKET_C
SEMICOLON

xxx_printf
BRACKET_O
STRING
COMMA

cpu
COMMA
BRACKET_O

spin_is_locked
BRACKET_O
AMPERSANT

rq
MINUS
GREATER

lock
BRACKET_C
BRACKET_C
QUESTION_MARK
STRING
COLON
STRING
COMMA

rq
MINUS
GREATER

curr
COMMA

rq
MINUS
GREATER

curr
MINUS
GREATER

pid
COMMA

rq
MINUS
GREATER

curr
MINUS
GREATER

comm
BRACKET_C
SEMICOLON
IF
BRACKET_O

rq
MINUS
GREATER

curr
EQ

rq
MINUS
GREATER

idle
BRACKET_C

xxx_printf
BRACKET_O
STRING
BRACKET_C
SEMICOLON

xxx_printf
BRACKET_O
STRING
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SMP

xxx_printf
BRACKET_O
STRING
COMMA

rq
MINUS
GREATER

cpu_load
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

rq
MINUS
GREATER

cpu_load
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

rq
MINUS
GREATER

cpu_load
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
PP_ENDIF

xxx_printf
BRACKET_O
STRING
COMMA

rq
MINUS
GREATER

nr_running
COMMA

rq
MINUS
GREATER

nr_switches
BRACKET_C
SEMICOLON

kdb_prio
BRACKET_O
STRING
COMMA

rq
MINUS
GREATER

active
COMMA

xxx_printf
BRACKET_C
SEMICOLON

kdb_prio
BRACKET_O
STRING
COMMA

rq
MINUS
GREATER

expired
COMMA

xxx_printf
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

kdb_runqueue
BRACKET_C
SEMICOLON
PP_ENDIF
PP_INCLUDE
PP_INCLUDE

static
TYPE_INT

mode1_syscalls
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O

__NR_seccomp_read
COMMA

__NR_seccomp_write
COMMA

__NR_seccomp_exit
COMMA

__NR_seccomp_sigreturn
COMMA
NUMBER
COMMA
CURLY_BRACKET_C
SEMICOLON
PP_IFDEF

TIF_32BIT

static
TYPE_INT

mode1_syscalls_32
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O

__NR_seccomp_read_32
COMMA

__NR_seccomp_write_32
COMMA

__NR_seccomp_exit_32
COMMA

__NR_seccomp_sigreturn_32
COMMA
NUMBER
COMMA
CURLY_BRACKET_C
SEMICOLON
PP_ENDIF

void

__secure_computing
BRACKET_O
TYPE_INT

this_syscall
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

mode
OP_ASSIGNMENT

current
MINUS
GREATER

seccomp
DOT

mode
SEMICOLON
TYPE_INT
MULT

syscall
SEMICOLON
SWITCH
BRACKET_O

mode
BRACKET_C
CURLY_BRACKET_O

case
NUMBER
COLON

syscall
OP_ASSIGNMENT

mode1_syscalls
SEMICOLON
PP_IFDEF

TIF_32BIT
IF
BRACKET_O

test_thread_flag
BRACKET_O

TIF_32BIT
BRACKET_C
BRACKET_C

syscall
OP_ASSIGNMENT

mode1_syscalls_32
SEMICOLON
PP_ENDIF
DO
CURLY_BRACKET_O
IF
BRACKET_O
MULT

syscall
EQ

this_syscall
BRACKET_C

return
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
MULT
PLUS
PLUS

syscall
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON

BUG
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

SECCOMP_DEBUG

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON
PP_ENDIF

do_exit
BRACKET_O

SIGKILL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static
STRUCT

kmem_cache
MULT

sigqueue_cachep
SEMICOLON

static
TYPE_INT

sig_ignored
BRACKET_O
STRUCT

task_struct
MULT

t
COMMA
TYPE_INT

sig
BRACKET_C
CURLY_BRACKET_O

void

__user
MULT

handler
SEMICOLON
IF
BRACKET_O

t
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

sigismember
BRACKET_O
AMPERSANT

t
MINUS
GREATER

blocked
COMMA

sig
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

handler
OP_ASSIGNMENT

t
MINUS
GREATER

sighand
MINUS
GREATER

action
CORNER_BRACKET_O

sig
MINUS
NUMBER
CORNER_BRACKET_C
DOT

sa
DOT

sa_handler
SEMICOLON

return

handler
EQ

SIG_IGN
OR
BRACKET_O

handler
EQ

SIG_DFL
AND

sig_kernel_ignore
BRACKET_O

sig
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

has_pending_signals
BRACKET_O

sigset_t
MULT

signal
COMMA

sigset_t
MULT

blocked
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

ready
SEMICOLON
TYPE_LONG

i
SEMICOLON
SWITCH
BRACKET_O

_NSIG_WORDS
BRACKET_C
CURLY_BRACKET_O

default
COLON
FOR
BRACKET_O

i
OP_ASSIGNMENT

_NSIG_WORDS
COMMA

ready
OP_ASSIGNMENT
NUMBER
SEMICOLON
MINUS
MINUS

i
GR_EQ
NUMBER
SEMICOLON
BRACKET_C

ready
LOGICAL_OR
OP_ASSIGNMENT

signal
MINUS
GREATER

sig
CORNER_BRACKET_O

i
CORNER_BRACKET_C
AMPERSANT
TILDE

blocked
MINUS
GREATER

sig
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case
NUMBER
COLON

ready
OP_ASSIGNMENT

signal
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
AMPERSANT
TILDE

blocked
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

ready
LOGICAL_OR
OP_ASSIGNMENT

signal
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
AMPERSANT
TILDE

blocked
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

ready
LOGICAL_OR
OP_ASSIGNMENT

signal
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
AMPERSANT
TILDE

blocked
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

ready
LOGICAL_OR
OP_ASSIGNMENT

signal
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
AMPERSANT
TILDE

blocked
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case
NUMBER
COLON

ready
OP_ASSIGNMENT

signal
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
AMPERSANT
TILDE

blocked
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

ready
LOGICAL_OR
OP_ASSIGNMENT

signal
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
AMPERSANT
TILDE

blocked
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case
NUMBER
COLON

ready
OP_ASSIGNMENT

signal
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
AMPERSANT
TILDE

blocked
MINUS
GREATER

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ready
NOT_EQ
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

PENDING
BRACKET_O

p
COMMA

b
BRACKET_C

has_pending_signals
BRACKET_O
AMPERSANT
BRACKET_O

p
BRACKET_C
MINUS
GREATER

signal
COMMA
BRACKET_O

b
BRACKET_C
BRACKET_C

static
TYPE_INT

recalc_sigpending_tsk
BRACKET_O
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

t
MINUS
GREATER

signal
MINUS
GREATER

group_stop_count
GREATER
NUMBER
OR
BRACKET_O

freezing
BRACKET_O

t
BRACKET_C
BRACKET_C
OR

PENDING
BRACKET_O
AMPERSANT

t
MINUS
GREATER

pending
COMMA
AMPERSANT

t
MINUS
GREATER

blocked
BRACKET_C
OR

PENDING
BRACKET_O
AMPERSANT

t
MINUS
GREATER

signal
MINUS
GREATER

shared_pending
COMMA
AMPERSANT

t
MINUS
GREATER

blocked
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

set_tsk_thread_flag
BRACKET_O

t
COMMA

TIF_SIGPENDING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

recalc_sigpending_and_wake
BRACKET_O
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

recalc_sigpending_tsk
BRACKET_O

t
BRACKET_C
BRACKET_C

signal_wake_up
BRACKET_O

t
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

recalc_sigpending
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

recalc_sigpending_tsk
BRACKET_O

current
BRACKET_C
BRACKET_C

clear_thread_flag
BRACKET_O

TIF_SIGPENDING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

next_signal
BRACKET_O
STRUCT

sigpending
MULT

pending
COMMA

sigset_t
MULT

mask
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

i
COMMA
MULT

s
COMMA
MULT

m
COMMA

x
SEMICOLON
TYPE_INT

sig
OP_ASSIGNMENT
NUMBER
SEMICOLON

s
OP_ASSIGNMENT

pending
MINUS
GREATER

signal
DOT

sig
SEMICOLON

m
OP_ASSIGNMENT

mask
MINUS
GREATER

sig
SEMICOLON
SWITCH
BRACKET_O

_NSIG_WORDS
BRACKET_C
CURLY_BRACKET_O

default
COLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

_NSIG_WORDS
SEMICOLON
PLUS
PLUS

i
COMMA
PLUS
PLUS

s
COMMA
PLUS
PLUS

m
BRACKET_C
IF
BRACKET_O
BRACKET_O

x
OP_ASSIGNMENT
MULT

s
AMPERSANT
TILDE
MULT

m
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

sig
OP_ASSIGNMENT

ffz
BRACKET_O
TILDE

x
BRACKET_C
PLUS

i
MULT

_NSIG_BPW
PLUS
NUMBER
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON

case
NUMBER
COLON
IF
BRACKET_O
BRACKET_O

x
OP_ASSIGNMENT

s
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
AMPERSANT
TILDE

m
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

sig
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE
IF
BRACKET_O
BRACKET_O

x
OP_ASSIGNMENT

s
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
AMPERSANT
TILDE

m
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

sig
OP_ASSIGNMENT

_NSIG_BPW
PLUS
NUMBER
SEMICOLON
ELSE
BREAK
SEMICOLON

sig
ASSIGN_PLUS

ffz
BRACKET_O
TILDE

x
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case
NUMBER
COLON
IF
BRACKET_O
BRACKET_O

x
OP_ASSIGNMENT
MULT

s
AMPERSANT
TILDE
MULT

m
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

sig
OP_ASSIGNMENT

ffz
BRACKET_O
TILDE

x
BRACKET_C
PLUS
NUMBER
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

sig
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

sigqueue
MULT

__sigqueue_alloc
BRACKET_O
STRUCT

task_struct
MULT

t
COMMA

gfp_t

flags
COMMA
TYPE_INT

override_rlimit
BRACKET_C
CURLY_BRACKET_O
STRUCT

sigqueue
MULT

q
OP_ASSIGNMENT

NULL
SEMICOLON
STRUCT

user_struct
MULT

user
SEMICOLON

user
OP_ASSIGNMENT

t
MINUS
GREATER

user
SEMICOLON

barrier
BRACKET_O
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

user
MINUS
GREATER

sigpending
BRACKET_C
SEMICOLON
IF
BRACKET_O

override_rlimit
OR

atomic_read
BRACKET_O
AMPERSANT

user
MINUS
GREATER

sigpending
BRACKET_C
LE_EQ

t
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_SIGPENDING
CORNER_BRACKET_C
DOT

rlim_cur
BRACKET_C

q
OP_ASSIGNMENT

kmem_cache_alloc
BRACKET_O

sigqueue_cachep
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

q
EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

atomic_dec
BRACKET_O
AMPERSANT

user
MINUS
GREATER

sigpending
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
BRACKET_C
SEMICOLON

q
MINUS
GREATER

flags
OP_ASSIGNMENT
NUMBER
SEMICOLON

q
MINUS
GREATER

user
OP_ASSIGNMENT

get_uid
BRACKET_O

user
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
BRACKET_O

q
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

__sigqueue_free
BRACKET_O
STRUCT

sigqueue
MULT

q
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

q
MINUS
GREATER

flags
AMPERSANT

SIGQUEUE_PREALLOC
BRACKET_C

return
SEMICOLON

atomic_dec
BRACKET_O
AMPERSANT

q
MINUS
GREATER

user
MINUS
GREATER

sigpending
BRACKET_C
SEMICOLON

free_uid
BRACKET_O

q
MINUS
GREATER

user
BRACKET_C
SEMICOLON

kmem_cache_free
BRACKET_O

sigqueue_cachep
COMMA

q
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

flush_sigqueue
BRACKET_O
STRUCT

sigpending
MULT

queue
BRACKET_C
CURLY_BRACKET_O
STRUCT

sigqueue
MULT

q
SEMICOLON

sigemptyset
BRACKET_O
AMPERSANT

queue
MINUS
GREATER

signal
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

queue
MINUS
GREATER

list
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

q
OP_ASSIGNMENT

list_entry
BRACKET_O

queue
MINUS
GREATER

list
DOT

next
COMMA
STRUCT

sigqueue
COMMA

list
BRACKET_C
SEMICOLON

list_del_init
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
BRACKET_C
SEMICOLON

__sigqueue_free
BRACKET_O

q
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

flush_signals
BRACKET_O
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

t
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

clear_tsk_thread_flag
BRACKET_O

t
COMMA

TIF_SIGPENDING
BRACKET_C
SEMICOLON

flush_sigqueue
BRACKET_O
AMPERSANT

t
MINUS
GREATER

pending
BRACKET_C
SEMICOLON

flush_sigqueue
BRACKET_O
AMPERSANT

t
MINUS
GREATER

signal
MINUS
GREATER

shared_pending
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

t
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

ignore_signals
BRACKET_O
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

_NSIG
SEMICOLON
PLUS
PLUS

i
BRACKET_C

t
MINUS
GREATER

sighand
MINUS
GREATER

action
CORNER_BRACKET_O

i
CORNER_BRACKET_C
DOT

sa
DOT

sa_handler
OP_ASSIGNMENT

SIG_IGN
SEMICOLON

flush_signals
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

flush_signal_handlers
BRACKET_O
STRUCT

task_struct
MULT

t
COMMA
TYPE_INT

force_default
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
STRUCT

k_sigaction
MULT

ka
OP_ASSIGNMENT
AMPERSANT

t
MINUS
GREATER

sighand
MINUS
GREATER

action
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT

_NSIG
SEMICOLON

i
NOT_EQ
NUMBER
SEMICOLON

i
MINUS
MINUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

force_default
OR

ka
MINUS
GREATER

sa
DOT

sa_handler
NOT_EQ

SIG_IGN
BRACKET_C

ka
MINUS
GREATER

sa
DOT

sa_handler
OP_ASSIGNMENT

SIG_DFL
SEMICOLON

ka
MINUS
GREATER

sa
DOT

sa_flags
OP_ASSIGNMENT
NUMBER
SEMICOLON

sigemptyset
BRACKET_O
AMPERSANT

ka
MINUS
GREATER

sa
DOT

sa_mask
BRACKET_C
SEMICOLON

ka
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

block_all_signals
BRACKET_O
TYPE_INT
BRACKET_O
MULT

notifier
BRACKET_C
BRACKET_O

void
MULT

priv
BRACKET_C
COMMA

void
MULT

priv
COMMA

sigset_t
MULT

mask
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

current
MINUS
GREATER

notifier_mask
OP_ASSIGNMENT

mask
SEMICOLON

current
MINUS
GREATER

notifier_data
OP_ASSIGNMENT

priv
SEMICOLON

current
MINUS
GREATER

notifier
OP_ASSIGNMENT

notifier
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

unblock_all_signals
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

current
MINUS
GREATER

notifier
OP_ASSIGNMENT

NULL
SEMICOLON

current
MINUS
GREATER

notifier_data
OP_ASSIGNMENT

NULL
SEMICOLON

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

collect_signal
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

sigpending
MULT

list
COMMA

siginfo_t
MULT

info
BRACKET_C
CURLY_BRACKET_O
STRUCT

sigqueue
MULT

q
COMMA
MULT

first
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_INT

still_pending
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

sigismember
BRACKET_O
AMPERSANT

list
MINUS
GREATER

signal
COMMA

sig
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

list_for_each_entry
BRACKET_O

q
COMMA
AMPERSANT

list
MINUS
GREATER

list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

q
MINUS
GREATER

info
DOT

si_signo
EQ

sig
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

first
BRACKET_C
CURLY_BRACKET_O

still_pending
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

first
OP_ASSIGNMENT

q
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

first
BRACKET_C
CURLY_BRACKET_O

list_del_init
BRACKET_O
AMPERSANT

first
MINUS
GREATER

list
BRACKET_C
SEMICOLON

copy_siginfo
BRACKET_O

info
COMMA
AMPERSANT

first
MINUS
GREATER

info
BRACKET_C
SEMICOLON

__sigqueue_free
BRACKET_O

first
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

still_pending
BRACKET_C

sigdelset
BRACKET_O
AMPERSANT

list
MINUS
GREATER

signal
COMMA

sig
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

sigdelset
BRACKET_O
AMPERSANT

list
MINUS
GREATER

signal
COMMA

sig
BRACKET_C
SEMICOLON

info
MINUS
GREATER

si_signo
OP_ASSIGNMENT

sig
SEMICOLON

info
MINUS
GREATER

si_errno
OP_ASSIGNMENT
NUMBER
SEMICOLON

info
MINUS
GREATER

si_code
OP_ASSIGNMENT
NUMBER
SEMICOLON

info
MINUS
GREATER

si_pid
OP_ASSIGNMENT
NUMBER
SEMICOLON

info
MINUS
GREATER

si_uid
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__dequeue_signal
BRACKET_O
STRUCT

sigpending
MULT

pending
COMMA

sigset_t
MULT

mask
COMMA

siginfo_t
MULT

info
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

sig
OP_ASSIGNMENT

next_signal
BRACKET_O

pending
COMMA

mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

sig
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

current
MINUS
GREATER

notifier
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sigismember
BRACKET_O

current
MINUS
GREATER

notifier_mask
COMMA

sig
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT
BRACKET_O

current
MINUS
GREATER

notifier
BRACKET_C
BRACKET_O

current
MINUS
GREATER

notifier_data
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

clear_thread_flag
BRACKET_O

TIF_SIGPENDING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

collect_signal
BRACKET_O

sig
COMMA

pending
COMMA

info
BRACKET_C
BRACKET_C

sig
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

sig
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

dequeue_signal
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA

sigset_t
MULT

mask
COMMA

siginfo_t
MULT

info
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

signr
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

tsk
EQ

current
BRACKET_C
BRACKET_C

signr
OP_ASSIGNMENT

__dequeue_signal
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

pending
COMMA

mask
COMMA

info
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

signr
BRACKET_C
CURLY_BRACKET_O

signr
OP_ASSIGNMENT

__dequeue_signal
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

signal
MINUS
GREATER

shared_pending
COMMA

mask
COMMA

info
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

signr
EQ

SIGALRM
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

hrtimer
MULT

tmr
OP_ASSIGNMENT
AMPERSANT

tsk
MINUS
GREATER

signal
MINUS
GREATER

real_timer
SEMICOLON
IF
BRACKET_O
NOT

hrtimer_is_queued
BRACKET_O

tmr
BRACKET_C
AND

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_real_incr
DOT

tv64
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

hrtimer_forward
BRACKET_O

tmr
COMMA

tmr
MINUS
GREATER

base
MINUS
GREATER

get_time
BRACKET_O
BRACKET_C
COMMA

tsk
MINUS
GREATER

signal
MINUS
GREATER

it_real_incr
BRACKET_C
SEMICOLON

hrtimer_restart
BRACKET_O

tmr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

likely
BRACKET_O

tsk
EQ

current
BRACKET_C
BRACKET_C

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

signr
AND

unlikely
BRACKET_O

sig_kernel_stop
BRACKET_O

signr
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT
BRACKET_O

tsk
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_GROUP_EXIT
BRACKET_C
BRACKET_C

tsk
MINUS
GREATER

signal
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

SIGNAL_STOP_DEQUEUED
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

signr
AND

likely
BRACKET_O

tsk
EQ

current
BRACKET_C
AND
BRACKET_O
BRACKET_O

info
MINUS
GREATER

si_code
AMPERSANT

__SI_MASK
BRACKET_C
EQ

__SI_TIMER
BRACKET_C
AND

info
MINUS
GREATER

si_sys_private
BRACKET_C
CURLY_BRACKET_O

spin_unlock
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

do_schedule_next_timer
BRACKET_O

info
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

signr
SEMICOLON
CURLY_BRACKET_C

void

signal_wake_up
BRACKET_O
STRUCT

task_struct
MULT

t
COMMA
TYPE_INT

resume
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

mask
SEMICOLON

set_tsk_thread_flag
BRACKET_O

t
COMMA

TIF_SIGPENDING
BRACKET_C
SEMICOLON

mask
OP_ASSIGNMENT

TASK_INTERRUPTIBLE
SEMICOLON
IF
BRACKET_O

resume
BRACKET_C

mask
LOGICAL_OR
OP_ASSIGNMENT

TASK_STOPPED
LOGICAL_OR

TASK_TRACED
SEMICOLON
IF
BRACKET_O
NOT

wake_up_state
BRACKET_O

t
COMMA

mask
BRACKET_C
BRACKET_C

kick_process
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

rm_from_queue_full
BRACKET_O

sigset_t
MULT

mask
COMMA
STRUCT

sigpending
MULT

s
BRACKET_C
CURLY_BRACKET_O
STRUCT

sigqueue
MULT

q
COMMA
MULT

n
SEMICOLON

sigset_t

m
SEMICOLON

sigandsets
BRACKET_O
AMPERSANT

m
COMMA

mask
COMMA
AMPERSANT

s
MINUS
GREATER

signal
BRACKET_C
SEMICOLON
IF
BRACKET_O

sigisemptyset
BRACKET_O
AMPERSANT

m
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

signandsets
BRACKET_O
AMPERSANT

s
MINUS
GREATER

signal
COMMA
AMPERSANT

s
MINUS
GREATER

signal
COMMA

mask
BRACKET_C
SEMICOLON

list_for_each_entry_safe
BRACKET_O

q
COMMA

n
COMMA
AMPERSANT

s
MINUS
GREATER

list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sigismember
BRACKET_O

mask
COMMA

q
MINUS
GREATER

info
DOT

si_signo
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

list_del_init
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
BRACKET_C
SEMICOLON

__sigqueue_free
BRACKET_O

q
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

rm_from_queue
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

mask
COMMA
STRUCT

sigpending
MULT

s
BRACKET_C
CURLY_BRACKET_O
STRUCT

sigqueue
MULT

q
COMMA
MULT

n
SEMICOLON
IF
BRACKET_O
NOT

sigtestsetmask
BRACKET_O
AMPERSANT

s
MINUS
GREATER

signal
COMMA

mask
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

sigdelsetmask
BRACKET_O
AMPERSANT

s
MINUS
GREATER

signal
COMMA

mask
BRACKET_C
SEMICOLON

list_for_each_entry_safe
BRACKET_O

q
COMMA

n
COMMA
AMPERSANT

s
MINUS
GREATER

list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

q
MINUS
GREATER

info
DOT

si_signo
LESS

SIGRTMIN
AND
BRACKET_O

mask
AMPERSANT

sigmask
BRACKET_O

q
MINUS
GREATER

info
DOT

si_signo
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

list_del_init
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
BRACKET_C
SEMICOLON

__sigqueue_free
BRACKET_O

q
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

check_kill_permission
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
NOT

valid_signal
BRACKET_O

sig
BRACKET_C
BRACKET_C

return

error
SEMICOLON

error
OP_ASSIGNMENT

audit_signal_info
BRACKET_O

sig
COMMA

t
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C

return

error
SEMICOLON

error
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
IF
BRACKET_O
BRACKET_O

info
EQ

SEND_SIG_NOINFO
OR
BRACKET_O
NOT

is_si_special
BRACKET_O

info
BRACKET_C
AND

SI_FROMUSER
BRACKET_O

info
BRACKET_C
BRACKET_C
BRACKET_C
AND
BRACKET_O
BRACKET_O

sig
NOT_EQ

SIGCONT
BRACKET_C
OR
BRACKET_O

process_session
BRACKET_O

current
BRACKET_C
NOT_EQ

process_session
BRACKET_O

t
BRACKET_C
BRACKET_C
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

euid
EXCLUSIVE_OR

t
MINUS
GREATER

suid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

euid
EXCLUSIVE_OR

t
MINUS
GREATER

uid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

uid
EXCLUSIVE_OR

t
MINUS
GREATER

suid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

uid
EXCLUSIVE_OR

t
MINUS
GREATER

uid
BRACKET_C
AND
NOT

capable
BRACKET_O

CAP_KILL
BRACKET_C
BRACKET_C

return

error
SEMICOLON

return

security_task_kill
BRACKET_O

t
COMMA

info
COMMA

sig
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

do_notify_parent_cldstop
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
TYPE_INT

why
BRACKET_C
SEMICOLON

static

void

handle_stop_signal
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

t
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_GROUP_EXIT
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

sig_kernel_stop
BRACKET_O

sig
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rm_from_queue
BRACKET_O

sigmask
BRACKET_O

SIGCONT
BRACKET_C
COMMA
AMPERSANT

p
MINUS
GREATER

signal
MINUS
GREATER

shared_pending
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

p
SEMICOLON
DO
CURLY_BRACKET_O

rm_from_queue
BRACKET_O

sigmask
BRACKET_O

SIGCONT
BRACKET_C
COMMA
AMPERSANT

t
MINUS
GREATER

pending
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

sig
EQ

SIGCONT
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

group_stop_count
GREATER
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

group_stop_count
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

signal
MINUS
GREATER

flags
OP_ASSIGNMENT

SIGNAL_STOP_CONTINUED
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

do_notify_parent_cldstop
BRACKET_O

p
COMMA

CLD_STOPPED
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

rm_from_queue
BRACKET_O

SIG_KERNEL_STOP_MASK
COMMA
AMPERSANT

p
MINUS
GREATER

signal
MINUS
GREATER

shared_pending
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

p
SEMICOLON
DO
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

state
SEMICOLON

rm_from_queue
BRACKET_O

SIG_KERNEL_STOP_MASK
COMMA
AMPERSANT

t
MINUS
GREATER

pending
BRACKET_C
SEMICOLON

state
OP_ASSIGNMENT

TASK_STOPPED
SEMICOLON
IF
BRACKET_O

sig_user_defined
BRACKET_O

t
COMMA

SIGCONT
BRACKET_C
AND
NOT

sigismember
BRACKET_O
AMPERSANT

t
MINUS
GREATER

blocked
COMMA

SIGCONT
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

set_tsk_thread_flag
BRACKET_O

t
COMMA

TIF_SIGPENDING
BRACKET_C
SEMICOLON

state
LOGICAL_OR
OP_ASSIGNMENT

TASK_INTERRUPTIBLE
SEMICOLON
CURLY_BRACKET_C

wake_up_state
BRACKET_O

t
COMMA

state
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_STOP_STOPPED
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

flags
OP_ASSIGNMENT

SIGNAL_STOP_CONTINUED
SEMICOLON

p
MINUS
GREATER

signal
MINUS
GREATER

group_exit_code
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

do_notify_parent_cldstop
BRACKET_O

p
COMMA

CLD_CONTINUED
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

flags
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

sig
EQ

SIGKILL
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

flags
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

send_signal
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
STRUCT

task_struct
MULT

t
COMMA
STRUCT

sigpending
MULT

signals
BRACKET_C
CURLY_BRACKET_O
STRUCT

sigqueue
MULT

q
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

signalfd_notify
BRACKET_O

t
COMMA

sig
BRACKET_C
SEMICOLON
IF
BRACKET_O

info
EQ

SEND_SIG_FORCED
BRACKET_C

goto

out_set
SEMICOLON

q
OP_ASSIGNMENT

__sigqueue_alloc
BRACKET_O

t
COMMA

GFP_ATOMIC
COMMA
BRACKET_O

sig
LESS

SIGRTMIN
AND
BRACKET_O

is_si_special
BRACKET_O

info
BRACKET_C
OR

info
MINUS
GREATER

si_code
GR_EQ
NUMBER
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

q
BRACKET_C
CURLY_BRACKET_O

list_add_tail
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
COMMA
AMPERSANT

signals
MINUS
GREATER

list
BRACKET_C
SEMICOLON
SWITCH
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

info
BRACKET_C
CURLY_BRACKET_O

case
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

SEND_SIG_NOINFO
COLON

q
MINUS
GREATER

info
DOT

si_signo
OP_ASSIGNMENT

sig
SEMICOLON

q
MINUS
GREATER

info
DOT

si_errno
OP_ASSIGNMENT
NUMBER
SEMICOLON

q
MINUS
GREATER

info
DOT

si_code
OP_ASSIGNMENT

SI_USER
SEMICOLON

q
MINUS
GREATER

info
DOT

si_pid
OP_ASSIGNMENT

current
MINUS
GREATER

pid
SEMICOLON

q
MINUS
GREATER

info
DOT

si_uid
OP_ASSIGNMENT

current
MINUS
GREATER

uid
SEMICOLON
BREAK
SEMICOLON

case
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

SEND_SIG_PRIV
COLON

q
MINUS
GREATER

info
DOT

si_signo
OP_ASSIGNMENT

sig
SEMICOLON

q
MINUS
GREATER

info
DOT

si_errno
OP_ASSIGNMENT
NUMBER
SEMICOLON

q
MINUS
GREATER

info
DOT

si_code
OP_ASSIGNMENT

SI_KERNEL
SEMICOLON

q
MINUS
GREATER

info
DOT

si_pid
OP_ASSIGNMENT
NUMBER
SEMICOLON

q
MINUS
GREATER

info
DOT

si_uid
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

default
COLON

copy_siginfo
BRACKET_O
AMPERSANT

q
MINUS
GREATER

info
COMMA

info
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
NOT

is_si_special
BRACKET_O

info
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sig
GR_EQ

SIGRTMIN
AND

info
MINUS
GREATER

si_code
NOT_EQ

SI_USER
BRACKET_C

return
MINUS

EAGAIN
SEMICOLON
CURLY_BRACKET_C

out_set
COLON

sigaddset
BRACKET_O
AMPERSANT

signals
MINUS
GREATER

signal
COMMA

sig
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

LEGACY_QUEUE
BRACKET_O

sigptr
COMMA

sig
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O
BRACKET_O
BRACKET_O

sig
BRACKET_C
LESS

SIGRTMIN
BRACKET_C
AND

sigismember
BRACKET_O
AMPERSANT
BRACKET_O

sigptr
BRACKET_C
MINUS
GREATER

signal
COMMA
BRACKET_O

sig
BRACKET_C
BRACKET_C
BRACKET_C

static
TYPE_INT

specific_send_sig_info
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

BUG_ON
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

assert_spin_locked
BRACKET_O
AMPERSANT

t
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

sig_ignored
BRACKET_O

t
COMMA

sig
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

LEGACY_QUEUE
BRACKET_O
AMPERSANT

t
MINUS
GREATER

pending
COMMA

sig
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

ret
OP_ASSIGNMENT

send_signal
BRACKET_O

sig
COMMA

info
COMMA

t
COMMA
AMPERSANT

t
MINUS
GREATER

pending
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
AND
NOT

sigismember
BRACKET_O
AMPERSANT

t
MINUS
GREATER

blocked
COMMA

sig
BRACKET_C
BRACKET_C

signal_wake_up
BRACKET_O

t
COMMA

sig
EQ

SIGKILL
BRACKET_C
SEMICOLON

out
COLON

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

force_sig_info
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
TYPE_INT

flags
SEMICOLON
TYPE_INT

ret
COMMA

blocked
COMMA

ignored
SEMICOLON
STRUCT

k_sigaction
MULT

action
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

t
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

action
OP_ASSIGNMENT
AMPERSANT

t
MINUS
GREATER

sighand
MINUS
GREATER

action
CORNER_BRACKET_O

sig
MINUS
NUMBER
CORNER_BRACKET_C
SEMICOLON

ignored
OP_ASSIGNMENT

action
MINUS
GREATER

sa
DOT

sa_handler
EQ

SIG_IGN
SEMICOLON

blocked
OP_ASSIGNMENT

sigismember
BRACKET_O
AMPERSANT

t
MINUS
GREATER

blocked
COMMA

sig
BRACKET_C
SEMICOLON
IF
BRACKET_O

blocked
OR

ignored
BRACKET_C
CURLY_BRACKET_O

action
MINUS
GREATER

sa
DOT

sa_handler
OP_ASSIGNMENT

SIG_DFL
SEMICOLON
IF
BRACKET_O

blocked
BRACKET_C
CURLY_BRACKET_O

sigdelset
BRACKET_O
AMPERSANT

t
MINUS
GREATER

blocked
COMMA

sig
BRACKET_C
SEMICOLON

recalc_sigpending_and_wake
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

ret
OP_ASSIGNMENT

specific_send_sig_info
BRACKET_O

sig
COMMA

info
COMMA

t
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

t
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

void

force_sig_specific
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

task_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O

force_sig_info
BRACKET_O

sig
COMMA

SEND_SIG_FORCED
COMMA

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

wants_signal
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sigismember
BRACKET_O
AMPERSANT

p
MINUS
GREATER

blocked
COMMA

sig
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

flags
AMPERSANT

PF_EXITING
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

sig
EQ

SIGKILL
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

state
AMPERSANT
BRACKET_O

TASK_STOPPED
LOGICAL_OR

TASK_TRACED
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return

task_curr
BRACKET_O

p
BRACKET_C
OR
NOT

signal_pending
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

__group_complete_signal
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

t
SEMICOLON
IF
BRACKET_O

wants_signal
BRACKET_O

sig
COMMA

p
BRACKET_C
BRACKET_C

t
OP_ASSIGNMENT

p
SEMICOLON
ELSE
IF
BRACKET_O

thread_group_empty
BRACKET_O

p
BRACKET_C
BRACKET_C

return
SEMICOLON
ELSE
CURLY_BRACKET_O

t
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

curr_target
SEMICOLON
IF
BRACKET_O

t
EQ

NULL
BRACKET_C

t
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

curr_target
OP_ASSIGNMENT

p
SEMICOLON
WHILE
BRACKET_O
NOT

wants_signal
BRACKET_O

sig
COMMA

t
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
IF
BRACKET_O

t
EQ

p
MINUS
GREATER

signal
MINUS
GREATER

curr_target
BRACKET_C

return
SEMICOLON
CURLY_BRACKET_C

p
MINUS
GREATER

signal
MINUS
GREATER

curr_target
OP_ASSIGNMENT

t
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

sig_fatal
BRACKET_O

p
COMMA

sig
BRACKET_C
AND
NOT
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_GROUP_EXIT
BRACKET_C
AND
NOT

sigismember
BRACKET_O
AMPERSANT

t
MINUS
GREATER

real_blocked
COMMA

sig
BRACKET_C
AND
BRACKET_O

sig
EQ

SIGKILL
OR
NOT
BRACKET_O

t
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

sig_kernel_coredump
BRACKET_O

sig
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

flags
OP_ASSIGNMENT

SIGNAL_GROUP_EXIT
SEMICOLON

p
MINUS
GREATER

signal
MINUS
GREATER

group_exit_code
OP_ASSIGNMENT

sig
SEMICOLON

p
MINUS
GREATER

signal
MINUS
GREATER

group_stop_count
OP_ASSIGNMENT
NUMBER
SEMICOLON

t
OP_ASSIGNMENT

p
SEMICOLON
DO
CURLY_BRACKET_O

sigaddset
BRACKET_O
AMPERSANT

t
MINUS
GREATER

pending
DOT

signal
COMMA

SIGKILL
BRACKET_C
SEMICOLON

signal_wake_up
BRACKET_O

t
COMMA
NUMBER
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

p
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

rm_from_queue
BRACKET_O

SIG_KERNEL_STOP_MASK
COMMA
AMPERSANT

t
MINUS
GREATER

pending
BRACKET_C
SEMICOLON

rm_from_queue
BRACKET_O

SIG_KERNEL_STOP_MASK
COMMA
AMPERSANT

p
MINUS
GREATER

signal
MINUS
GREATER

shared_pending
BRACKET_C
SEMICOLON

p
MINUS
GREATER

signal
MINUS
GREATER

group_stop_count
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
MINUS
GREATER

signal
MINUS
GREATER

group_exit_task
OP_ASSIGNMENT

t
SEMICOLON

t
OP_ASSIGNMENT

p
SEMICOLON
DO
CURLY_BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

group_stop_count
PLUS
PLUS
SEMICOLON

signal_wake_up
BRACKET_O

t
COMMA
NUMBER
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

p
BRACKET_C
SEMICOLON

wake_up_process
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

group_exit_task
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

signal_wake_up
BRACKET_O

t
COMMA

sig
EQ

SIGKILL
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__group_send_sig_info
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

assert_spin_locked
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

handle_stop_signal
BRACKET_O

sig
COMMA

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

sig_ignored
BRACKET_O

p
COMMA

sig
BRACKET_C
BRACKET_C

return

ret
SEMICOLON
IF
BRACKET_O

LEGACY_QUEUE
BRACKET_O
AMPERSANT

p
MINUS
GREATER

signal
MINUS
GREATER

shared_pending
COMMA

sig
BRACKET_C
BRACKET_C

return

ret
SEMICOLON

ret
OP_ASSIGNMENT

send_signal
BRACKET_O

sig
COMMA

info
COMMA

p
COMMA
AMPERSANT

p
MINUS
GREATER

signal
MINUS
GREATER

shared_pending
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

ret
BRACKET_C
BRACKET_C

return

ret
SEMICOLON

__group_complete_signal
BRACKET_O

sig
COMMA

p
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

zap_other_threads
BRACKET_O
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

t
SEMICOLON

p
MINUS
GREATER

signal
MINUS
GREATER

flags
OP_ASSIGNMENT

SIGNAL_GROUP_EXIT
SEMICOLON

p
MINUS
GREATER

signal
MINUS
GREATER

group_stop_count
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

thread_group_empty
BRACKET_O

p
BRACKET_C
BRACKET_C

return
SEMICOLON
FOR
BRACKET_O

t
OP_ASSIGNMENT

next_thread
BRACKET_O

p
BRACKET_C
SEMICOLON

t
NOT_EQ

p
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

t
MINUS
GREATER

exit_state
BRACKET_C
CONTINUE
SEMICOLON

sigaddset
BRACKET_O
AMPERSANT

t
MINUS
GREATER

pending
DOT

signal
COMMA

SIGKILL
BRACKET_C
SEMICOLON

signal_wake_up
BRACKET_O

t
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
STRUCT

sighand_struct
MULT

lock_task_sighand
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

flags
BRACKET_C
CURLY_BRACKET_O
STRUCT

sighand_struct
MULT

sighand
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

sighand
OP_ASSIGNMENT

rcu_dereference
BRACKET_O

tsk
MINUS
GREATER

sighand
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

sighand
EQ

NULL
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

sighand
MINUS
GREATER

siglock
COMMA
MULT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

sighand
EQ

tsk
MINUS
GREATER

sighand
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

sighand
MINUS
GREATER

siglock
COMMA
MULT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

sighand
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

group_send_sig_info
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

ret
SEMICOLON

ret
OP_ASSIGNMENT

check_kill_permission
BRACKET_O

sig
COMMA

info
COMMA

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
AND

sig
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON
IF
BRACKET_O

lock_task_sighand
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

__group_send_sig_info
BRACKET_O

sig
COMMA

info
COMMA

p
BRACKET_C
SEMICOLON

unlock_task_sighand
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

__kill_pgrp_info
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
STRUCT

pid
MULT

pgrp
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
OP_ASSIGNMENT

NULL
SEMICOLON
TYPE_INT

retval
COMMA

success
SEMICOLON

success
OP_ASSIGNMENT
NUMBER
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

do_each_pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
COMMA

p
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT

group_send_sig_info
BRACKET_O

sig
COMMA

info
COMMA

p
BRACKET_C
SEMICOLON

success
LOGICAL_OR
OP_ASSIGNMENT
NOT

err
SEMICOLON

retval
OP_ASSIGNMENT

err
SEMICOLON
CURLY_BRACKET_C

while_each_pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
COMMA

p
BRACKET_C
SEMICOLON

return

success
QUESTION_MARK
NUMBER
COLON

retval
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

kill_pgrp_info
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
STRUCT

pid
MULT

pgrp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT

__kill_pgrp_info
BRACKET_O

sig
COMMA

info
COMMA

pgrp
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

kill_pid_info
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
STRUCT

pid
MULT

pid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

sig_needs_tasklist
BRACKET_O

sig
BRACKET_C
BRACKET_C
BRACKET_C

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

pid_task
BRACKET_O

pid
COMMA

PIDTYPE_PID
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON
IF
BRACKET_O

p
BRACKET_C

error
OP_ASSIGNMENT

group_send_sig_info
BRACKET_O

sig
COMMA

info
COMMA

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

sig_needs_tasklist
BRACKET_O

sig
BRACKET_C
BRACKET_C
BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

kill_proc_info
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA

pid_t

pid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

kill_pid_info
BRACKET_O

sig
COMMA

info
COMMA

find_pid
BRACKET_O

pid
BRACKET_C
BRACKET_C
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

kill_pid_info_as_uid
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
STRUCT

pid
MULT

pid
COMMA

uid_t

uid
COMMA

uid_t

euid
COMMA

u32

secid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON
IF
BRACKET_O
NOT

valid_signal
BRACKET_O

sig
BRACKET_C
BRACKET_C

return

ret
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

pid_task
BRACKET_O

pid
COMMA

PIDTYPE_PID
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

goto

out_unlock
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
BRACKET_O

info
EQ

SEND_SIG_NOINFO
OR
BRACKET_O
NOT

is_si_special
BRACKET_O

info
BRACKET_C
AND

SI_FROMUSER
BRACKET_O

info
BRACKET_C
BRACKET_C
BRACKET_C
AND
BRACKET_O

euid
NOT_EQ

p
MINUS
GREATER

suid
BRACKET_C
AND
BRACKET_O

euid
NOT_EQ

p
MINUS
GREATER

uid
BRACKET_C
AND
BRACKET_O

uid
NOT_EQ

p
MINUS
GREATER

suid
BRACKET_C
AND
BRACKET_O

uid
NOT_EQ

p
MINUS
GREATER

uid
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON

goto

out_unlock
SEMICOLON
CURLY_BRACKET_C

ret
OP_ASSIGNMENT

security_task_kill
BRACKET_O

p
COMMA

info
COMMA

sig
COMMA

secid
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

goto

out_unlock
SEMICOLON
IF
BRACKET_O

sig
AND

p
MINUS
GREATER

sighand
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

__group_send_sig_info
BRACKET_O

sig
COMMA

info
COMMA

p
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

out_unlock
COLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

kill_pid_info_as_uid
BRACKET_C
SEMICOLON

static
TYPE_INT

kill_something_info
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
TYPE_INT

pid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

pid
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

kill_pgrp_info
BRACKET_O

sig
COMMA

info
COMMA

task_pgrp
BRACKET_O

current
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

pid
EQ
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
OP_ASSIGNMENT
NUMBER
COMMA

count
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

for_each_process
BRACKET_O

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

p
MINUS
GREATER

pid
GREATER
NUMBER
AND

p
MINUS
GREATER

tgid
NOT_EQ

current
MINUS
GREATER

tgid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT

group_send_sig_info
BRACKET_O

sig
COMMA

info
COMMA

p
BRACKET_C
SEMICOLON
PLUS
PLUS

count
SEMICOLON
IF
BRACKET_O

err
NOT_EQ
MINUS

EPERM
BRACKET_C

retval
OP_ASSIGNMENT

err
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

count
QUESTION_MARK

retval
COLON
MINUS

ESRCH
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

pid
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

kill_pgrp_info
BRACKET_O

sig
COMMA

info
COMMA

find_pid
BRACKET_O
MINUS

pid
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

kill_pid_info
BRACKET_O

sig
COMMA

info
COMMA

find_pid
BRACKET_O

pid
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

send_sig_info
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O
NOT

valid_signal
BRACKET_O

sig
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

specific_send_sig_info
BRACKET_O

sig
COMMA

info
COMMA

p
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

__si_special
BRACKET_O

priv
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O
BRACKET_O

priv
BRACKET_C
QUESTION_MARK

SEND_SIG_PRIV
COLON

SEND_SIG_NOINFO
BRACKET_C
TYPE_INT

send_sig
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

priv
BRACKET_C
CURLY_BRACKET_O

return

send_sig_info
BRACKET_O

sig
COMMA

__si_special
BRACKET_O

priv
BRACKET_C
COMMA

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

send_group_sig_info
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

siginfo
MULT

info
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

group_send_sig_info
BRACKET_O

sig
COMMA

info
COMMA

p
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

void

force_sig
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O

force_sig_info
BRACKET_O

sig
COMMA

SEND_SIG_PRIV
COMMA

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

force_sigsegv
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sig
EQ

SIGSEGV
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

p
MINUS
GREATER

sighand
MINUS
GREATER

action
CORNER_BRACKET_O

sig
MINUS
NUMBER
CORNER_BRACKET_C
DOT

sa
DOT

sa_handler
OP_ASSIGNMENT

SIG_DFL
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

force_sig
BRACKET_O

SIGSEGV
COMMA

p
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

kill_pgrp
BRACKET_O
STRUCT

pid
MULT

pid
COMMA
TYPE_INT

sig
COMMA
TYPE_INT

priv
BRACKET_C
CURLY_BRACKET_O

return

kill_pgrp_info
BRACKET_O

sig
COMMA

__si_special
BRACKET_O

priv
BRACKET_C
COMMA

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

kill_pgrp
BRACKET_C
SEMICOLON
TYPE_INT

kill_pid
BRACKET_O
STRUCT

pid
MULT

pid
COMMA
TYPE_INT

sig
COMMA
TYPE_INT

priv
BRACKET_C
CURLY_BRACKET_O

return

kill_pid_info
BRACKET_O

sig
COMMA

__si_special
BRACKET_O

priv
BRACKET_C
COMMA

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

kill_pid
BRACKET_C
SEMICOLON
TYPE_INT

kill_proc
BRACKET_O

pid_t

pid
COMMA
TYPE_INT

sig
COMMA
TYPE_INT

priv
BRACKET_C
CURLY_BRACKET_O

return

kill_proc_info
BRACKET_O

sig
COMMA

__si_special
BRACKET_O

priv
BRACKET_C
COMMA

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

sigqueue
MULT

sigqueue_alloc
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

sigqueue
MULT

q
SEMICOLON
IF
BRACKET_O
BRACKET_O

q
OP_ASSIGNMENT

__sigqueue_alloc
BRACKET_O

current
COMMA

GFP_KERNEL
COMMA
NUMBER
BRACKET_C
BRACKET_C
BRACKET_C

q
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

SIGQUEUE_PREALLOC
SEMICOLON

return
BRACKET_O

q
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

sigqueue_free
BRACKET_O
STRUCT

sigqueue
MULT

q
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spinlock_t
MULT

lock
OP_ASSIGNMENT
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
SEMICOLON

BUG_ON
BRACKET_O
NOT
BRACKET_O

q
MINUS
GREATER

flags
AMPERSANT

SIGQUEUE_PREALLOC
BRACKET_C
BRACKET_C
SEMICOLON

spin_lock_irqsave
BRACKET_O

lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
BRACKET_C
BRACKET_C

list_del_init
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O

lock
COMMA

flags
BRACKET_C
SEMICOLON

q
MINUS
GREATER

flags
AMPERSANT
OP_ASSIGNMENT
TILDE

SIGQUEUE_PREALLOC
SEMICOLON

__sigqueue_free
BRACKET_O

q
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

send_sigqueue
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

sigqueue
MULT

q
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

BUG_ON
BRACKET_O
NOT
BRACKET_O

q
MINUS
GREATER

flags
AMPERSANT

SIGQUEUE_PREALLOC
BRACKET_C
BRACKET_C
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

likely
BRACKET_O

lock_task_sighand
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

goto

out_err
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

q
MINUS
GREATER

info
DOT

si_code
NOT_EQ

SI_TIMER
BRACKET_C
SEMICOLON

q
MINUS
GREATER

info
DOT

si_overrun
PLUS
PLUS
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

sig_ignored
BRACKET_O

p
COMMA

sig
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

signalfd_notify
BRACKET_O

p
COMMA

sig
BRACKET_C
SEMICOLON

list_add_tail
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
COMMA
AMPERSANT

p
MINUS
GREATER

pending
DOT

list
BRACKET_C
SEMICOLON

sigaddset
BRACKET_O
AMPERSANT

p
MINUS
GREATER

pending
DOT

signal
COMMA

sig
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sigismember
BRACKET_O
AMPERSANT

p
MINUS
GREATER

blocked
COMMA

sig
BRACKET_C
BRACKET_C

signal_wake_up
BRACKET_O

p
COMMA

sig
EQ

SIGKILL
BRACKET_C
SEMICOLON

out
COLON

unlock_task_sighand
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

out_err
COLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

send_group_sigqueue
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

sigqueue
MULT

q
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

BUG_ON
BRACKET_O
NOT
BRACKET_O

q
MINUS
GREATER

flags
AMPERSANT

SIGQUEUE_PREALLOC
BRACKET_C
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

handle_stop_signal
BRACKET_O

sig
COMMA

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

sig_ignored
BRACKET_O

p
COMMA

sig
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

q
MINUS
GREATER

info
DOT

si_code
NOT_EQ

SI_TIMER
BRACKET_C
SEMICOLON

q
MINUS
GREATER

info
DOT

si_overrun
PLUS
PLUS
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

signalfd_notify
BRACKET_O

p
COMMA

sig
BRACKET_C
SEMICOLON

list_add_tail
BRACKET_O
AMPERSANT

q
MINUS
GREATER

list
COMMA
AMPERSANT

p
MINUS
GREATER

signal
MINUS
GREATER

shared_pending
DOT

list
BRACKET_C
SEMICOLON

sigaddset
BRACKET_O
AMPERSANT

p
MINUS
GREATER

signal
MINUS
GREATER

shared_pending
DOT

signal
COMMA

sig
BRACKET_C
SEMICOLON

__group_complete_signal
BRACKET_O

sig
COMMA

p
BRACKET_C
SEMICOLON

out
COLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

inline

void

__wake_up_parent
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
STRUCT

task_struct
MULT

parent
BRACKET_C
CURLY_BRACKET_O

wake_up_interruptible_sync
BRACKET_O
AMPERSANT

parent
MINUS
GREATER

signal
MINUS
GREATER

wait_chldexit
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

do_notify_parent
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
TYPE_INT

sig
BRACKET_C
CURLY_BRACKET_O
STRUCT

siginfo

info
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

sighand_struct
MULT

psig
SEMICOLON

BUG_ON
BRACKET_O

sig
EQ
MINUS
NUMBER
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

tsk
MINUS
GREATER

state
AMPERSANT
BRACKET_O

TASK_STOPPED
LOGICAL_OR

TASK_TRACED
BRACKET_C
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

tsk
MINUS
GREATER

ptrace
AND
BRACKET_O

tsk
MINUS
GREATER

group_leader
NOT_EQ

tsk
OR
NOT

thread_group_empty
BRACKET_O

tsk
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

info
DOT

si_signo
OP_ASSIGNMENT

sig
SEMICOLON

info
DOT

si_errno
OP_ASSIGNMENT
NUMBER
SEMICOLON

info
DOT

si_pid
OP_ASSIGNMENT

tsk
MINUS
GREATER

pid
SEMICOLON

info
DOT

si_uid
OP_ASSIGNMENT

tsk
MINUS
GREATER

uid
SEMICOLON

info
DOT

si_utime
OP_ASSIGNMENT

cputime_to_jiffies
BRACKET_O

cputime_add
BRACKET_O

tsk
MINUS
GREATER

utime
COMMA

tsk
MINUS
GREATER

signal
MINUS
GREATER

utime
BRACKET_C
BRACKET_C
SEMICOLON

info
DOT

si_stime
OP_ASSIGNMENT

cputime_to_jiffies
BRACKET_O

cputime_add
BRACKET_O

tsk
MINUS
GREATER

stime
COMMA

tsk
MINUS
GREATER

signal
MINUS
GREATER

stime
BRACKET_C
BRACKET_C
SEMICOLON

info
DOT

si_status
OP_ASSIGNMENT

tsk
MINUS
GREATER

exit_code
AMPERSANT
NUMBER

x7f
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

exit_code
AMPERSANT
NUMBER

x80
BRACKET_C

info
DOT

si_code
OP_ASSIGNMENT

CLD_DUMPED
SEMICOLON
ELSE
IF
BRACKET_O

tsk
MINUS
GREATER

exit_code
AMPERSANT
NUMBER

x7f
BRACKET_C

info
DOT

si_code
OP_ASSIGNMENT

CLD_KILLED
SEMICOLON
ELSE
CURLY_BRACKET_O

info
DOT

si_code
OP_ASSIGNMENT

CLD_EXITED
SEMICOLON

info
DOT

si_status
OP_ASSIGNMENT

tsk
MINUS
GREATER

exit_code
GREATER
GREATER
NUMBER
SEMICOLON
CURLY_BRACKET_C

psig
OP_ASSIGNMENT

tsk
MINUS
GREATER

parent
MINUS
GREATER

sighand
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

psig
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tsk
MINUS
GREATER

ptrace
AND

sig
EQ

SIGCHLD
AND
BRACKET_O

psig
MINUS
GREATER

action
CORNER_BRACKET_O

SIGCHLD
MINUS
NUMBER
CORNER_BRACKET_C
DOT

sa
DOT

sa_handler
EQ

SIG_IGN
OR
BRACKET_O

psig
MINUS
GREATER

action
CORNER_BRACKET_O

SIGCHLD
MINUS
NUMBER
CORNER_BRACKET_C
DOT

sa
DOT

sa_flags
AMPERSANT

SA_NOCLDWAIT
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

tsk
MINUS
GREATER

exit_signal
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

psig
MINUS
GREATER

action
CORNER_BRACKET_O

SIGCHLD
MINUS
NUMBER
CORNER_BRACKET_C
DOT

sa
DOT

sa_handler
EQ

SIG_IGN
BRACKET_C

sig
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

valid_signal
BRACKET_O

sig
BRACKET_C
AND

sig
GREATER
NUMBER
BRACKET_C

__group_send_sig_info
BRACKET_O

sig
COMMA
AMPERSANT

info
COMMA

tsk
MINUS
GREATER

parent
BRACKET_C
SEMICOLON

__wake_up_parent
BRACKET_O

tsk
COMMA

tsk
MINUS
GREATER

parent
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

psig
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

do_notify_parent_cldstop
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
TYPE_INT

why
BRACKET_C
CURLY_BRACKET_O
STRUCT

siginfo

info
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
STRUCT

task_struct
MULT

parent
SEMICOLON
STRUCT

sighand_struct
MULT

sighand
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C

parent
OP_ASSIGNMENT

tsk
MINUS
GREATER

parent
SEMICOLON
ELSE
CURLY_BRACKET_O

tsk
OP_ASSIGNMENT

tsk
MINUS
GREATER

group_leader
SEMICOLON

parent
OP_ASSIGNMENT

tsk
MINUS
GREATER

real_parent
SEMICOLON
CURLY_BRACKET_C

info
DOT

si_signo
OP_ASSIGNMENT

SIGCHLD
SEMICOLON

info
DOT

si_errno
OP_ASSIGNMENT
NUMBER
SEMICOLON

info
DOT

si_pid
OP_ASSIGNMENT

tsk
MINUS
GREATER

pid
SEMICOLON

info
DOT

si_uid
OP_ASSIGNMENT

tsk
MINUS
GREATER

uid
SEMICOLON

info
DOT

si_utime
OP_ASSIGNMENT

cputime_to_jiffies
BRACKET_O

tsk
MINUS
GREATER

utime
BRACKET_C
SEMICOLON

info
DOT

si_stime
OP_ASSIGNMENT

cputime_to_jiffies
BRACKET_O

tsk
MINUS
GREATER

stime
BRACKET_C
SEMICOLON

info
DOT

si_code
OP_ASSIGNMENT

why
SEMICOLON
SWITCH
BRACKET_O

why
BRACKET_C
CURLY_BRACKET_O

case

CLD_CONTINUED
COLON

info
DOT

si_status
OP_ASSIGNMENT

SIGCONT
SEMICOLON
BREAK
SEMICOLON

case

CLD_STOPPED
COLON

info
DOT

si_status
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

group_exit_code
AMPERSANT
NUMBER

x7f
SEMICOLON
BREAK
SEMICOLON

case

CLD_TRAPPED
COLON

info
DOT

si_status
OP_ASSIGNMENT

tsk
MINUS
GREATER

exit_code
AMPERSANT
NUMBER

x7f
SEMICOLON
BREAK
SEMICOLON

default
COLON

BUG
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

sighand
OP_ASSIGNMENT

parent
MINUS
GREATER

sighand
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

sighand
MINUS
GREATER

action
CORNER_BRACKET_O

SIGCHLD
MINUS
NUMBER
CORNER_BRACKET_C
DOT

sa
DOT

sa_handler
NOT_EQ

SIG_IGN
AND
NOT
BRACKET_O

sighand
MINUS
GREATER

action
CORNER_BRACKET_O

SIGCHLD
MINUS
NUMBER
CORNER_BRACKET_C
DOT

sa
DOT

sa_flags
AMPERSANT

SA_NOCLDSTOP
BRACKET_C
BRACKET_C

__group_send_sig_info
BRACKET_O

SIGCHLD
COMMA
AMPERSANT

info
COMMA

parent
BRACKET_C
SEMICOLON

__wake_up_parent
BRACKET_O

tsk
COMMA

parent
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
TYPE_INT

may_ptrace_stop
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

likely
BRACKET_O

current
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

current
MINUS
GREATER

parent
EQ

current
MINUS
GREATER

real_parent
AND
BRACKET_O

current
MINUS
GREATER

ptrace
AMPERSANT

PT_ATTACHED
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

current
MINUS
GREATER

signal
EQ

current
MINUS
GREATER

parent
MINUS
GREATER

signal
BRACKET_C
AND

unlikely
BRACKET_O

current
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_GROUP_EXIT
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

current
MINUS
GREATER

mm
MINUS
GREATER

core_waiters
BRACKET_C
AND

unlikely
BRACKET_O

current
MINUS
GREATER

mm
EQ

current
MINUS
GREATER

parent
MINUS
GREATER

mm
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

ptrace_stop
BRACKET_O
TYPE_INT

exit_code
COMMA
TYPE_INT

nostop_code
COMMA

siginfo_t
MULT

info
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

current
MINUS
GREATER

signal
MINUS
GREATER

group_stop_count
GREATER
NUMBER
BRACKET_C
MINUS
MINUS

current
MINUS
GREATER

signal
MINUS
GREATER

group_stop_count
SEMICOLON

current
MINUS
GREATER

last_siginfo
OP_ASSIGNMENT

info
SEMICOLON

current
MINUS
GREATER

exit_code
OP_ASSIGNMENT

exit_code
SEMICOLON

set_current_state
BRACKET_O

TASK_TRACED
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

try_to_freeze
BRACKET_O
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

may_ptrace_stop
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

do_notify_parent_cldstop
BRACKET_O

current
COMMA

CLD_TRAPPED
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON

current
MINUS
GREATER

exit_code
OP_ASSIGNMENT

nostop_code
SEMICOLON
CURLY_BRACKET_C

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

current
MINUS
GREATER

last_siginfo
OP_ASSIGNMENT

NULL
SEMICOLON

recalc_sigpending_tsk
BRACKET_O

current
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

ptrace_notify
BRACKET_O
TYPE_INT

exit_code
BRACKET_C
CURLY_BRACKET_O

siginfo_t

info
SEMICOLON

BUG_ON
BRACKET_O
BRACKET_O

exit_code
AMPERSANT
BRACKET_O
NUMBER

x7f
LOGICAL_OR
TILDE
NUMBER

xffff
BRACKET_C
BRACKET_C
NOT_EQ

SIGTRAP
BRACKET_C
SEMICOLON

memset
BRACKET_O
AMPERSANT

info
COMMA
NUMBER
COMMA

sizeof

info
BRACKET_C
SEMICOLON

info
DOT

si_signo
OP_ASSIGNMENT

SIGTRAP
SEMICOLON

info
DOT

si_code
OP_ASSIGNMENT

exit_code
SEMICOLON

info
DOT

si_pid
OP_ASSIGNMENT

current
MINUS
GREATER

pid
SEMICOLON

info
DOT

si_uid
OP_ASSIGNMENT

current
MINUS
GREATER

uid
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

ptrace_stop
BRACKET_O

exit_code
COMMA
NUMBER
COMMA
AMPERSANT

info
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

finish_stop
BRACKET_O
TYPE_INT

stop_count
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

stop_count
EQ
NUMBER
OR
BRACKET_O

current
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

do_notify_parent_cldstop
BRACKET_O

current
COMMA

CLD_STOPPED
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
DO
CURLY_BRACKET_O

schedule
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

try_to_freeze
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

current
MINUS
GREATER

exit_code
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

do_signal_stop
BRACKET_O
TYPE_INT

signr
BRACKET_C
CURLY_BRACKET_O
STRUCT

signal_struct
MULT

sig
OP_ASSIGNMENT

current
MINUS
GREATER

signal
SEMICOLON
TYPE_INT

stop_count
SEMICOLON
IF
BRACKET_O
NOT

likely
BRACKET_O

sig
MINUS
GREATER

flags
AMPERSANT

SIGNAL_STOP_DEQUEUED
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

sig
MINUS
GREATER

group_stop_count
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

stop_count
OP_ASSIGNMENT
MINUS
MINUS

sig
MINUS
GREATER

group_stop_count
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
STRUCT

task_struct
MULT

t
SEMICOLON

sig
MINUS
GREATER

group_exit_code
OP_ASSIGNMENT

signr
SEMICOLON

stop_count
OP_ASSIGNMENT
NUMBER
SEMICOLON
FOR
BRACKET_O

t
OP_ASSIGNMENT

next_thread
BRACKET_O

current
BRACKET_C
SEMICOLON

t
NOT_EQ

current
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
BRACKET_C
IF
BRACKET_O
NOT

t
MINUS
GREATER

exit_state
AND
NOT
BRACKET_O

t
MINUS
GREATER

state
AMPERSANT
BRACKET_O

TASK_STOPPED
LOGICAL_OR

TASK_TRACED
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

stop_count
PLUS
PLUS
SEMICOLON

signal_wake_up
BRACKET_O

t
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

sig
MINUS
GREATER

group_stop_count
OP_ASSIGNMENT

stop_count
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

stop_count
EQ
NUMBER
BRACKET_C

sig
MINUS
GREATER

flags
OP_ASSIGNMENT

SIGNAL_STOP_STOPPED
SEMICOLON

current
MINUS
GREATER

exit_code
OP_ASSIGNMENT

sig
MINUS
GREATER

group_exit_code
SEMICOLON

__set_current_state
BRACKET_O

TASK_STOPPED
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

finish_stop
BRACKET_O

stop_count
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

handle_group_stop
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

stop_count
SEMICOLON
IF
BRACKET_O

current
MINUS
GREATER

signal
MINUS
GREATER

group_exit_task
EQ

current
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

signal
MINUS
GREATER

group_exit_task
OP_ASSIGNMENT

NULL
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

current
MINUS
GREATER

signal
MINUS
GREATER

flags
AMPERSANT

SIGNAL_GROUP_EXIT
BRACKET_C

return
NUMBER
SEMICOLON

stop_count
OP_ASSIGNMENT
MINUS
MINUS

current
MINUS
GREATER

signal
MINUS
GREATER

group_stop_count
SEMICOLON
IF
BRACKET_O

stop_count
EQ
NUMBER
BRACKET_C

current
MINUS
GREATER

signal
MINUS
GREATER

flags
OP_ASSIGNMENT

SIGNAL_STOP_STOPPED
SEMICOLON

current
MINUS
GREATER

exit_code
OP_ASSIGNMENT

current
MINUS
GREATER

signal
MINUS
GREATER

group_exit_code
SEMICOLON

set_current_state
BRACKET_O

TASK_STOPPED
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

finish_stop
BRACKET_O

stop_count
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

get_signal_to_deliver
BRACKET_O

siginfo_t
MULT

info
COMMA
STRUCT

k_sigaction
MULT

return_ka
COMMA
STRUCT

pt_regs
MULT

regs
COMMA

void
MULT

cookie
BRACKET_C
CURLY_BRACKET_O

sigset_t
MULT

mask
OP_ASSIGNMENT
AMPERSANT

current
MINUS
GREATER

blocked
SEMICOLON
TYPE_INT

signr
OP_ASSIGNMENT
NUMBER
SEMICOLON

try_to_freeze
BRACKET_O
BRACKET_C
SEMICOLON

relock
COLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_sigaction
MULT

ka
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

current
MINUS
GREATER

signal
MINUS
GREATER

group_stop_count
GREATER
NUMBER
BRACKET_C
AND

handle_group_stop
BRACKET_O
BRACKET_C
BRACKET_C

goto

relock
SEMICOLON

signr
OP_ASSIGNMENT

dequeue_signal
BRACKET_O

current
COMMA

mask
COMMA

info
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

signr
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O
BRACKET_O

current
MINUS
GREATER

ptrace
AMPERSANT

PT_PTRACED
BRACKET_C
AND

signr
NOT_EQ

SIGKILL
BRACKET_C
CURLY_BRACKET_O

ptrace_signal_deliver
BRACKET_O

regs
COMMA

cookie
BRACKET_C
SEMICOLON

ptrace_stop
BRACKET_O

signr
COMMA

signr
COMMA

info
BRACKET_C
SEMICOLON

signr
OP_ASSIGNMENT

current
MINUS
GREATER

exit_code
SEMICOLON
IF
BRACKET_O

signr
EQ
NUMBER
BRACKET_C
CONTINUE
SEMICOLON

current
MINUS
GREATER

exit_code
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

signr
NOT_EQ

info
MINUS
GREATER

si_signo
BRACKET_C
CURLY_BRACKET_O

info
MINUS
GREATER

si_signo
OP_ASSIGNMENT

signr
SEMICOLON

info
MINUS
GREATER

si_errno
OP_ASSIGNMENT
NUMBER
SEMICOLON

info
MINUS
GREATER

si_code
OP_ASSIGNMENT

SI_USER
SEMICOLON

info
MINUS
GREATER

si_pid
OP_ASSIGNMENT

current
MINUS
GREATER

parent
MINUS
GREATER

pid
SEMICOLON

info
MINUS
GREATER

si_uid
OP_ASSIGNMENT

current
MINUS
GREATER

parent
MINUS
GREATER

uid
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

sigismember
BRACKET_O
AMPERSANT

current
MINUS
GREATER

blocked
COMMA

signr
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

specific_send_sig_info
BRACKET_O

signr
COMMA

info
COMMA

current
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

ka
OP_ASSIGNMENT
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

action
CORNER_BRACKET_O

signr
MINUS
NUMBER
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O

ka
MINUS
GREATER

sa
DOT

sa_handler
EQ

SIG_IGN
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

ka
MINUS
GREATER

sa
DOT

sa_handler
NOT_EQ

SIG_DFL
BRACKET_C
CURLY_BRACKET_O
MULT

return_ka
OP_ASSIGNMENT
MULT

ka
SEMICOLON
IF
BRACKET_O

ka
MINUS
GREATER

sa
DOT

sa_flags
AMPERSANT

SA_ONESHOT
BRACKET_C

ka
MINUS
GREATER

sa
DOT

sa_handler
OP_ASSIGNMENT

SIG_DFL
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

sig_kernel_ignore
BRACKET_O

signr
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

current
EQ

child_reaper
BRACKET_O

current
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

sig_kernel_stop
BRACKET_O

signr
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

signr
NOT_EQ

SIGSTOP
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

is_current_pgrp_orphaned
BRACKET_O
BRACKET_C
BRACKET_C

goto

relock
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

likely
BRACKET_O

do_signal_stop
BRACKET_O

signr
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

goto

relock
SEMICOLON
CURLY_BRACKET_C
CONTINUE
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

current
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_SIGNALED
SEMICOLON
IF
BRACKET_O

sig_kernel_coredump
BRACKET_O

signr
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

do_coredump
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C

signr
COMMA

signr
COMMA

regs
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

do_group_exit
BRACKET_O

signr
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

return

signr
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

recalc_sigpending
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

dequeue_signal
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

flush_signals
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

force_sig
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

kill_proc
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

ptrace_notify
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

send_sig
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

send_sig_info
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

sigprocmask
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

block_all_signals
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

unblock_all_signals
BRACKET_C
SEMICOLON

asmlinkage
TYPE_LONG

sys_restart_syscall
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

restart_block
MULT

restart
OP_ASSIGNMENT
AMPERSANT

current_thread_info
BRACKET_O
BRACKET_C
MINUS
GREATER

restart_block
SEMICOLON

return

restart
MINUS
GREATER

fn
BRACKET_O

restart
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

do_no_restart_syscall
BRACKET_O
STRUCT

restart_block
MULT

param
BRACKET_C
CURLY_BRACKET_O

return
MINUS

EINTR
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

sigprocmask
BRACKET_O
TYPE_INT

how
COMMA

sigset_t
MULT

set
COMMA

sigset_t
MULT

oldset
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

oldset
BRACKET_C
MULT

oldset
OP_ASSIGNMENT

current
MINUS
GREATER

blocked
SEMICOLON

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
SWITCH
BRACKET_O

how
BRACKET_C
CURLY_BRACKET_O

case

SIG_BLOCK
COLON

sigorsets
BRACKET_O
AMPERSANT

current
MINUS
GREATER

blocked
COMMA
AMPERSANT

current
MINUS
GREATER

blocked
COMMA

set
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

SIG_UNBLOCK
COLON

signandsets
BRACKET_O
AMPERSANT

current
MINUS
GREATER

blocked
COMMA
AMPERSANT

current
MINUS
GREATER

blocked
COMMA

set
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

SIG_SETMASK
COLON

current
MINUS
GREATER

blocked
OP_ASSIGNMENT
MULT

set
SEMICOLON
BREAK
SEMICOLON

default
COLON

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_rt_sigprocmask
BRACKET_O
TYPE_INT

how
COMMA

sigset_t

__user
MULT

set
COMMA

sigset_t

__user
MULT

oset
COMMA

size_t

sigsetsize
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

sigset_t

old_set
COMMA

new_set
SEMICOLON
IF
BRACKET_O

sigsetsize
NOT_EQ

sizeof
BRACKET_O

sigset_t
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

set
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

new_set
COMMA

set
COMMA

sizeof
BRACKET_O
MULT

set
BRACKET_C
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

sigdelsetmask
BRACKET_O
AMPERSANT

new_set
COMMA

sigmask
BRACKET_O

SIGKILL
BRACKET_C
LOGICAL_OR

sigmask
BRACKET_O

SIGSTOP
BRACKET_C
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

sigprocmask
BRACKET_O

how
COMMA
AMPERSANT

new_set
COMMA
AMPERSANT

old_set
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

oset
BRACKET_C

goto

set_old
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

oset
BRACKET_C
CURLY_BRACKET_O

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

old_set
OP_ASSIGNMENT

current
MINUS
GREATER

blocked
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

set_old
COLON

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

oset
COMMA
AMPERSANT

old_set
COMMA

sizeof
BRACKET_O
MULT

oset
BRACKET_C
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

error
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON

return

error
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

do_sigpending
BRACKET_O

void

__user
MULT

set
COMMA
TYPE_UNSIGNED
TYPE_LONG

sigsetsize
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

sigset_t

pending
SEMICOLON
IF
BRACKET_O

sigsetsize
GREATER

sizeof
BRACKET_O

sigset_t
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

sigorsets
BRACKET_O
AMPERSANT

pending
COMMA
AMPERSANT

current
MINUS
GREATER

pending
DOT

signal
COMMA
AMPERSANT

current
MINUS
GREATER

signal
MINUS
GREATER

shared_pending
DOT

signal
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

sigandsets
BRACKET_O
AMPERSANT

pending
COMMA
AMPERSANT

current
MINUS
GREATER

blocked
COMMA
AMPERSANT

pending
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

copy_to_user
BRACKET_O

set
COMMA
AMPERSANT

pending
COMMA

sigsetsize
BRACKET_C
BRACKET_C

error
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON

return

error
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_rt_sigpending
BRACKET_O

sigset_t

__user
MULT

set
COMMA

size_t

sigsetsize
BRACKET_C
CURLY_BRACKET_O

return

do_sigpending
BRACKET_O

set
COMMA

sigsetsize
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFNDEF

HAVE_ARCH_COPY_SIGINFO_TO_USER
TYPE_INT

copy_siginfo_to_user
BRACKET_O

siginfo_t

__user
MULT

to
COMMA

siginfo_t
MULT

from
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
SEMICOLON
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_WRITE
COMMA

to
COMMA

sizeof
BRACKET_O

siginfo_t
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

from
MINUS
GREATER

si_code
LESS
NUMBER
BRACKET_C

return

__copy_to_user
BRACKET_O

to
COMMA

from
COMMA

sizeof
BRACKET_O

siginfo_t
BRACKET_C
BRACKET_C
QUESTION_MARK
MINUS

EFAULT
COLON
NUMBER
SEMICOLON

err
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_signo
COMMA
AMPERSANT

to
MINUS
GREATER

si_signo
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_errno
COMMA
AMPERSANT

to
MINUS
GREATER

si_errno
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O
BRACKET_O

short
BRACKET_C

from
MINUS
GREATER

si_code
COMMA
AMPERSANT

to
MINUS
GREATER

si_code
BRACKET_C
SEMICOLON
SWITCH
BRACKET_O

from
MINUS
GREATER

si_code
AMPERSANT

__SI_MASK
BRACKET_C
CURLY_BRACKET_O

case

__SI_KILL
COLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_pid
COMMA
AMPERSANT

to
MINUS
GREATER

si_pid
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_uid
COMMA
AMPERSANT

to
MINUS
GREATER

si_uid
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

__SI_TIMER
COLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_tid
COMMA
AMPERSANT

to
MINUS
GREATER

si_tid
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_overrun
COMMA
AMPERSANT

to
MINUS
GREATER

si_overrun
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_ptr
COMMA
AMPERSANT

to
MINUS
GREATER

si_ptr
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

__SI_POLL
COLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_band
COMMA
AMPERSANT

to
MINUS
GREATER

si_band
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_fd
COMMA
AMPERSANT

to
MINUS
GREATER

si_fd
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

__SI_FAULT
COLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_addr
COMMA
AMPERSANT

to
MINUS
GREATER

si_addr
BRACKET_C
SEMICOLON
PP_IFDEF

__ARCH_SI_TRAPNO

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_trapno
COMMA
AMPERSANT

to
MINUS
GREATER

si_trapno
BRACKET_C
SEMICOLON
PP_ENDIF
BREAK
SEMICOLON

case

__SI_CHLD
COLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_pid
COMMA
AMPERSANT

to
MINUS
GREATER

si_pid
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_uid
COMMA
AMPERSANT

to
MINUS
GREATER

si_uid
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_status
COMMA
AMPERSANT

to
MINUS
GREATER

si_status
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_utime
COMMA
AMPERSANT

to
MINUS
GREATER

si_utime
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_stime
COMMA
AMPERSANT

to
MINUS
GREATER

si_stime
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

__SI_RT
COLON

case

__SI_MESGQ
COLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_pid
COMMA
AMPERSANT

to
MINUS
GREATER

si_pid
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_uid
COMMA
AMPERSANT

to
MINUS
GREATER

si_uid
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_ptr
COMMA
AMPERSANT

to
MINUS
GREATER

si_ptr
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_pid
COMMA
AMPERSANT

to
MINUS
GREATER

si_pid
BRACKET_C
SEMICOLON

err
LOGICAL_OR
OP_ASSIGNMENT

__put_user
BRACKET_O

from
MINUS
GREATER

si_uid
COMMA
AMPERSANT

to
MINUS
GREATER

si_uid
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

err
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

asmlinkage
TYPE_LONG

sys_rt_sigtimedwait
BRACKET_O
CONST

sigset_t

__user
MULT

uthese
COMMA

siginfo_t

__user
MULT

uinfo
COMMA
CONST
STRUCT

timespec

__user
MULT

uts
COMMA

size_t

sigsetsize
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
COMMA

sig
SEMICOLON

sigset_t

these
SEMICOLON
STRUCT

timespec

ts
SEMICOLON

siginfo_t

info
SEMICOLON
TYPE_LONG

timeout
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

sigsetsize
NOT_EQ

sizeof
BRACKET_O

sigset_t
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

these
COMMA

uthese
COMMA

sizeof
BRACKET_O

these
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

sigdelsetmask
BRACKET_O
AMPERSANT

these
COMMA

sigmask
BRACKET_O

SIGKILL
BRACKET_C
LOGICAL_OR

sigmask
BRACKET_O

SIGSTOP
BRACKET_C
BRACKET_C
SEMICOLON

signotset
BRACKET_O
AMPERSANT

these
BRACKET_C
SEMICOLON
IF
BRACKET_O

uts
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

ts
COMMA

uts
COMMA

sizeof
BRACKET_O

ts
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

ts
DOT

tv_nsec
GR_EQ
NUMBER

L
OR

ts
DOT

tv_nsec
LESS
NUMBER
OR

ts
DOT

tv_sec
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

sig
OP_ASSIGNMENT

dequeue_signal
BRACKET_O

current
COMMA
AMPERSANT

these
COMMA
AMPERSANT

info
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sig
BRACKET_C
CURLY_BRACKET_O

timeout
OP_ASSIGNMENT

MAX_SCHEDULE_TIMEOUT
SEMICOLON
IF
BRACKET_O

uts
BRACKET_C

timeout
OP_ASSIGNMENT
BRACKET_O

timespec_to_jiffies
BRACKET_O
AMPERSANT

ts
BRACKET_C
PLUS
BRACKET_O

ts
DOT

tv_sec
OR

ts
DOT

tv_nsec
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

timeout
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

real_blocked
OP_ASSIGNMENT

current
MINUS
GREATER

blocked
SEMICOLON

sigandsets
BRACKET_O
AMPERSANT

current
MINUS
GREATER

blocked
COMMA
AMPERSANT

current
MINUS
GREATER

blocked
COMMA
AMPERSANT

these
BRACKET_C
SEMICOLON

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

timeout
OP_ASSIGNMENT

schedule_timeout_interruptible
BRACKET_O

timeout
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

sig
OP_ASSIGNMENT

dequeue_signal
BRACKET_O

current
COMMA
AMPERSANT

these
COMMA
AMPERSANT

info
BRACKET_C
SEMICOLON

current
MINUS
GREATER

blocked
OP_ASSIGNMENT

current
MINUS
GREATER

real_blocked
SEMICOLON

siginitset
BRACKET_O
AMPERSANT

current
MINUS
GREATER

real_blocked
COMMA
NUMBER
BRACKET_C
SEMICOLON

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

sig
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

sig
SEMICOLON
IF
BRACKET_O

uinfo
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_siginfo_to_user
BRACKET_O

uinfo
COMMA
AMPERSANT

info
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

ret
OP_ASSIGNMENT
MINUS

EAGAIN
SEMICOLON
IF
BRACKET_O

timeout
BRACKET_C

ret
OP_ASSIGNMENT
MINUS

EINTR
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_kill
BRACKET_O
TYPE_INT

pid
COMMA
TYPE_INT

sig
BRACKET_C
CURLY_BRACKET_O
STRUCT

siginfo

info
SEMICOLON

info
DOT

si_signo
OP_ASSIGNMENT

sig
SEMICOLON

info
DOT

si_errno
OP_ASSIGNMENT
NUMBER
SEMICOLON

info
DOT

si_code
OP_ASSIGNMENT

SI_USER
SEMICOLON

info
DOT

si_pid
OP_ASSIGNMENT

current
MINUS
GREATER

tgid
SEMICOLON

info
DOT

si_uid
OP_ASSIGNMENT

current
MINUS
GREATER

uid
SEMICOLON

return

kill_something_info
BRACKET_O

sig
COMMA
AMPERSANT

info
COMMA

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

do_tkill
BRACKET_O
TYPE_INT

tgid
COMMA
TYPE_INT

pid
COMMA
TYPE_INT

sig
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
SEMICOLON
STRUCT

siginfo

info
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON

error
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

info
DOT

si_signo
OP_ASSIGNMENT

sig
SEMICOLON

info
DOT

si_errno
OP_ASSIGNMENT
NUMBER
SEMICOLON

info
DOT

si_code
OP_ASSIGNMENT

SI_TKILL
SEMICOLON

info
DOT

si_pid
OP_ASSIGNMENT

current
MINUS
GREATER

tgid
SEMICOLON

info
DOT

si_uid
OP_ASSIGNMENT

current
MINUS
GREATER

uid
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O

p
AND
BRACKET_O

tgid
LE_EQ
NUMBER
OR

p
MINUS
GREATER

tgid
EQ

tgid
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT

check_kill_permission
BRACKET_O

sig
COMMA
AMPERSANT

info
COMMA

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

error
AND

sig
AND

p
MINUS
GREATER

sighand
BRACKET_C
CURLY_BRACKET_O

spin_lock_irq
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

handle_stop_signal
BRACKET_O

sig
COMMA

p
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

specific_send_sig_info
BRACKET_O

sig
COMMA
AMPERSANT

info
COMMA

p
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

p
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_tgkill
BRACKET_O
TYPE_INT

tgid
COMMA
TYPE_INT

pid
COMMA
TYPE_INT

sig
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

pid
LE_EQ
NUMBER
OR

tgid
LE_EQ
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

return

do_tkill
BRACKET_O

tgid
COMMA

pid
COMMA

sig
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_tkill
BRACKET_O
TYPE_INT

pid
COMMA
TYPE_INT

sig
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

pid
LE_EQ
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

return

do_tkill
BRACKET_O
NUMBER
COMMA

pid
COMMA

sig
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_rt_sigqueueinfo
BRACKET_O
TYPE_INT

pid
COMMA
TYPE_INT

sig
COMMA

siginfo_t

__user
MULT

uinfo
BRACKET_C
CURLY_BRACKET_O

siginfo_t

info
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

info
COMMA

uinfo
COMMA

sizeof
BRACKET_O

siginfo_t
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

info
DOT

si_code
GR_EQ
NUMBER
BRACKET_C

return
MINUS

EPERM
SEMICOLON

info
DOT

si_signo
OP_ASSIGNMENT

sig
SEMICOLON

return

kill_proc_info
BRACKET_O

sig
COMMA
AMPERSANT

info
COMMA

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

do_sigaction
BRACKET_O
TYPE_INT

sig
COMMA
STRUCT

k_sigaction
MULT

act
COMMA
STRUCT

k_sigaction
MULT

oact
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_sigaction
MULT

k
SEMICOLON

sigset_t

mask
SEMICOLON
IF
BRACKET_O
NOT

valid_signal
BRACKET_O

sig
BRACKET_C
OR

sig
LESS
NUMBER
OR
BRACKET_O

act
AND

sig_kernel_only
BRACKET_O

sig
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

k
OP_ASSIGNMENT
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

action
CORNER_BRACKET_O

sig
MINUS
NUMBER
CORNER_BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

signal_pending
BRACKET_O

current
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

return
MINUS

ERESTARTNOINTR
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

oact
BRACKET_C
MULT

oact
OP_ASSIGNMENT
MULT

k
SEMICOLON
IF
BRACKET_O

act
BRACKET_C
CURLY_BRACKET_O

sigdelsetmask
BRACKET_O
AMPERSANT

act
MINUS
GREATER

sa
DOT

sa_mask
COMMA

sigmask
BRACKET_O

SIGKILL
BRACKET_C
LOGICAL_OR

sigmask
BRACKET_O

SIGSTOP
BRACKET_C
BRACKET_C
SEMICOLON
MULT

k
OP_ASSIGNMENT
MULT

act
SEMICOLON
IF
BRACKET_O

act
MINUS
GREATER

sa
DOT

sa_handler
EQ

SIG_IGN
OR
BRACKET_O

act
MINUS
GREATER

sa
DOT

sa_handler
EQ

SIG_DFL
AND

sig_kernel_ignore
BRACKET_O

sig
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

t
OP_ASSIGNMENT

current
SEMICOLON

sigemptyset
BRACKET_O
AMPERSANT

mask
BRACKET_C
SEMICOLON

sigaddset
BRACKET_O
AMPERSANT

mask
COMMA

sig
BRACKET_C
SEMICOLON

rm_from_queue_full
BRACKET_O
AMPERSANT

mask
COMMA
AMPERSANT

t
MINUS
GREATER

signal
MINUS
GREATER

shared_pending
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O

rm_from_queue_full
BRACKET_O
AMPERSANT

mask
COMMA
AMPERSANT

t
MINUS
GREATER

pending
BRACKET_C
SEMICOLON

recalc_sigpending_and_wake
BRACKET_O

t
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

current
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

do_sigaltstack
BRACKET_O
CONST

stack_t

__user
MULT

uss
COMMA

stack_t

__user
MULT

uoss
COMMA
TYPE_UNSIGNED
TYPE_LONG

sp
BRACKET_C
CURLY_BRACKET_O

stack_t

oss
SEMICOLON
TYPE_INT

error
SEMICOLON
IF
BRACKET_O

uoss
BRACKET_C
CURLY_BRACKET_O

oss
DOT

ss_sp
OP_ASSIGNMENT
BRACKET_O

void

__user
MULT
BRACKET_C

current
MINUS
GREATER

sas_ss_sp
SEMICOLON

oss
DOT

ss_size
OP_ASSIGNMENT

current
MINUS
GREATER

sas_ss_size
SEMICOLON

oss
DOT

ss_flags
OP_ASSIGNMENT

sas_ss_flags
BRACKET_O

sp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

uss
BRACKET_C
CURLY_BRACKET_O

void

__user
MULT

ss_sp
SEMICOLON

size_t

ss_size
SEMICOLON
TYPE_INT

ss_flags
SEMICOLON

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

access_ok
BRACKET_O

VERIFY_READ
COMMA

uss
COMMA

sizeof
BRACKET_O
MULT

uss
BRACKET_C
BRACKET_C
OR

__get_user
BRACKET_O

ss_sp
COMMA
AMPERSANT

uss
MINUS
GREATER

ss_sp
BRACKET_C
OR

__get_user
BRACKET_O

ss_flags
COMMA
AMPERSANT

uss
MINUS
GREATER

ss_flags
BRACKET_C
OR

__get_user
BRACKET_O

ss_size
COMMA
AMPERSANT

uss
MINUS
GREATER

ss_size
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

error
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

on_sig_stack
BRACKET_O

sp
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

ss_flags
NOT_EQ

SS_DISABLE
AND

ss_flags
NOT_EQ

SS_ONSTACK
AND

ss_flags
NOT_EQ
NUMBER
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

ss_flags
EQ

SS_DISABLE
BRACKET_C
CURLY_BRACKET_O

ss_size
OP_ASSIGNMENT
NUMBER
SEMICOLON

ss_sp
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

ENOMEM
SEMICOLON
IF
BRACKET_O

ss_size
LESS

MINSIGSTKSZ
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

sas_ss_sp
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

ss_sp
SEMICOLON

current
MINUS
GREATER

sas_ss_size
OP_ASSIGNMENT

ss_size
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

uoss
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

uoss
COMMA
AMPERSANT

oss
COMMA

sizeof
BRACKET_O

oss
BRACKET_C
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

error
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON

return

error
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

__ARCH_WANT_SYS_SIGPENDING

asmlinkage
TYPE_LONG

sys_sigpending
BRACKET_O

old_sigset_t

__user
MULT

set
BRACKET_C
CURLY_BRACKET_O

return

do_sigpending
BRACKET_O

set
COMMA

sizeof
BRACKET_O
MULT

set
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

__ARCH_WANT_SYS_SIGPROCMASK

asmlinkage
TYPE_LONG

sys_sigprocmask
BRACKET_O
TYPE_INT

how
COMMA

old_sigset_t

__user
MULT

set
COMMA

old_sigset_t

__user
MULT

oset
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
SEMICOLON

old_sigset_t

old_set
COMMA

new_set
SEMICOLON
IF
BRACKET_O

set
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

new_set
COMMA

set
COMMA

sizeof
BRACKET_O
MULT

set
BRACKET_C
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

new_set
AMPERSANT
OP_ASSIGNMENT
TILDE
BRACKET_O

sigmask
BRACKET_O

SIGKILL
BRACKET_C
LOGICAL_OR

sigmask
BRACKET_O

SIGSTOP
BRACKET_C
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

old_set
OP_ASSIGNMENT

current
MINUS
GREATER

blocked
DOT

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
SWITCH
BRACKET_O

how
BRACKET_C
CURLY_BRACKET_O

default
COLON

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
BREAK
SEMICOLON

case

SIG_BLOCK
COLON

sigaddsetmask
BRACKET_O
AMPERSANT

current
MINUS
GREATER

blocked
COMMA

new_set
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

SIG_UNBLOCK
COLON

sigdelsetmask
BRACKET_O
AMPERSANT

current
MINUS
GREATER

blocked
COMMA

new_set
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

SIG_SETMASK
COLON

current
MINUS
GREATER

blocked
DOT

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

new_set
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

oset
BRACKET_C

goto

set_old
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

oset
BRACKET_C
CURLY_BRACKET_O

old_set
OP_ASSIGNMENT

current
MINUS
GREATER

blocked
DOT

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

set_old
COLON

error
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

oset
COMMA
AMPERSANT

old_set
COMMA

sizeof
BRACKET_O
MULT

oset
BRACKET_C
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

error
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON

return

error
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

__ARCH_WANT_SYS_RT_SIGACTION

asmlinkage
TYPE_LONG

sys_rt_sigaction
BRACKET_O
TYPE_INT

sig
COMMA
CONST
STRUCT

sigaction

__user
MULT

act
COMMA
STRUCT

sigaction

__user
MULT

oact
COMMA

size_t

sigsetsize
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_sigaction

new_sa
COMMA

old_sa
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

sigsetsize
NOT_EQ

sizeof
BRACKET_O

sigset_t
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

act
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

new_sa
DOT

sa
COMMA

act
COMMA

sizeof
BRACKET_O

new_sa
DOT

sa
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

ret
OP_ASSIGNMENT

do_sigaction
BRACKET_O

sig
COMMA

act
QUESTION_MARK
AMPERSANT

new_sa
COLON

NULL
COMMA

oact
QUESTION_MARK
AMPERSANT

old_sa
COLON

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
AND

oact
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_to_user
BRACKET_O

oact
COMMA
AMPERSANT

old_sa
DOT

sa
COMMA

sizeof
BRACKET_O

old_sa
DOT

sa
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

out
COLON

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

__ARCH_WANT_SYS_SGETMASK

asmlinkage
TYPE_LONG

sys_sgetmask
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

current
MINUS
GREATER

blocked
DOT

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_ssetmask
BRACKET_O
TYPE_INT

newmask
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

old
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

old
OP_ASSIGNMENT

current
MINUS
GREATER

blocked
DOT

sig
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

siginitset
BRACKET_O
AMPERSANT

current
MINUS
GREATER

blocked
COMMA

newmask
AMPERSANT
TILDE
BRACKET_O

sigmask
BRACKET_O

SIGKILL
BRACKET_C
LOGICAL_OR

sigmask
BRACKET_O

SIGSTOP
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

return

old
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

__ARCH_WANT_SYS_SIGNAL

asmlinkage
TYPE_UNSIGNED
TYPE_LONG

sys_signal
BRACKET_O
TYPE_INT

sig
COMMA

__sighandler_t

handler
BRACKET_C
CURLY_BRACKET_O
STRUCT

k_sigaction

new_sa
COMMA

old_sa
SEMICOLON
TYPE_INT

ret
SEMICOLON

new_sa
DOT

sa
DOT

sa_handler
OP_ASSIGNMENT

handler
SEMICOLON

new_sa
DOT

sa
DOT

sa_flags
OP_ASSIGNMENT

SA_ONESHOT
LOGICAL_OR

SA_NOMASK
SEMICOLON

sigemptyset
BRACKET_O
AMPERSANT

new_sa
DOT

sa
DOT

sa_mask
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

do_sigaction
BRACKET_O

sig
COMMA
AMPERSANT

new_sa
COMMA
AMPERSANT

old_sa
BRACKET_C
SEMICOLON

return

ret
QUESTION_MARK

ret
COLON
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

old_sa
DOT

sa
DOT

sa_handler
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

__ARCH_WANT_SYS_PAUSE

asmlinkage
TYPE_LONG

sys_pause
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_INTERRUPTIBLE
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

return
MINUS

ERESTARTNOHAND
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

__ARCH_WANT_SYS_RT_SIGSUSPEND

asmlinkage
TYPE_LONG

sys_rt_sigsuspend
BRACKET_O

sigset_t

__user
MULT

unewset
COMMA

size_t

sigsetsize
BRACKET_C
CURLY_BRACKET_O

sigset_t

newset
SEMICOLON
IF
BRACKET_O

sigsetsize
NOT_EQ

sizeof
BRACKET_O

sigset_t
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

newset
COMMA

unewset
COMMA

sizeof
BRACKET_O

newset
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

sigdelsetmask
BRACKET_O
AMPERSANT

newset
COMMA

sigmask
BRACKET_O

SIGKILL
BRACKET_C
LOGICAL_OR

sigmask
BRACKET_O

SIGSTOP
BRACKET_C
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

current
MINUS
GREATER

saved_sigmask
OP_ASSIGNMENT

current
MINUS
GREATER

blocked
SEMICOLON

current
MINUS
GREATER

blocked
OP_ASSIGNMENT

newset
SEMICOLON

recalc_sigpending
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

current
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_INTERRUPTIBLE
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

set_thread_flag
BRACKET_O

TIF_RESTORE_SIGMASK
BRACKET_C
SEMICOLON

return
MINUS

ERESTARTNOHAND
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

__attribute__
BRACKET_O
BRACKET_O

weak
BRACKET_C
BRACKET_C
CONST
TYPE_CHAR
MULT

arch_vma_name
BRACKET_O
STRUCT

vm_area_struct
MULT

vma
BRACKET_C
CURLY_BRACKET_O

return

NULL
SEMICOLON
CURLY_BRACKET_C

void

__init

signals_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

sigqueue_cachep
OP_ASSIGNMENT

KMEM_CACHE
BRACKET_O

sigqueue
COMMA

SLAB_PANIC
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_KDB
PP_INCLUDE

void

kdb_send_sig_info
BRACKET_O
STRUCT

task_struct
MULT

t
COMMA
STRUCT

siginfo
MULT

info
COMMA
TYPE_INT

seqno
BRACKET_C
CURLY_BRACKET_O

static
STRUCT

task_struct
MULT

kdb_prev_t
SEMICOLON

static
TYPE_INT

kdb_prev_seqno
SEMICOLON
TYPE_INT

sig
COMMA

new_t
SEMICOLON
IF
BRACKET_O
NOT

spin_trylock
BRACKET_O
AMPERSANT

t
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kdb_printf
BRACKET_O
STRING
STRING
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

t
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

new_t
OP_ASSIGNMENT

kdb_prev_t
NOT_EQ

t
OR

kdb_prev_seqno
NOT_EQ

seqno
SEMICOLON

kdb_prev_t
OP_ASSIGNMENT

t
SEMICOLON

kdb_prev_seqno
OP_ASSIGNMENT

seqno
SEMICOLON
IF
BRACKET_O

t
MINUS
GREATER

state
NOT_EQ

TASK_RUNNING
AND

new_t
BRACKET_C
CURLY_BRACKET_O

kdb_printf
BRACKET_O
STRING
STRING
STRING
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

sig
OP_ASSIGNMENT

info
MINUS
GREATER

si_signo
SEMICOLON
IF
BRACKET_O

send_sig_info
BRACKET_O

sig
COMMA

info
COMMA

t
BRACKET_C
BRACKET_C

kdb_printf
BRACKET_O
STRING
COMMA

sig
COMMA

t
MINUS
GREATER

pid
BRACKET_C
SEMICOLON
ELSE

kdb_printf
BRACKET_O
STRING
COMMA

sig
COMMA

t
MINUS
GREATER

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_IFNDEF

__ARCH_IRQ_STAT

irq_cpustat_t

irq_stat
CORNER_BRACKET_O

NR_CPUS
CORNER_BRACKET_C

____cacheline_aligned
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

irq_stat
BRACKET_C
SEMICOLON
PP_ENDIF

static
STRUCT

softirq_action

softirq_vec
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C

__cacheline_aligned_in_smp
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

task_struct
MULT
COMMA

ksoftirqd
BRACKET_C
SEMICOLON

static

inline

void

wakeup_softirqd
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

__get_cpu_var
BRACKET_O

ksoftirqd
BRACKET_C
SEMICOLON
IF
BRACKET_O

tsk
AND

tsk
MINUS
GREATER

state
NOT_EQ

TASK_RUNNING
BRACKET_C

wake_up_process
BRACKET_O

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

static

void

__local_bh_disable
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

WARN_ON_ONCE
BRACKET_O

in_irq
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

raw_local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

add_preempt_count
BRACKET_O

SOFTIRQ_OFFSET
BRACKET_C
SEMICOLON
IF
BRACKET_O

softirq_count
BRACKET_O
BRACKET_C
EQ

SOFTIRQ_OFFSET
BRACKET_C

trace_softirqs_off
BRACKET_O

ip
BRACKET_C
SEMICOLON

raw_local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

static

inline

void

__local_bh_disable
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O

add_preempt_count
BRACKET_O

SOFTIRQ_OFFSET
BRACKET_C
SEMICOLON

barrier
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

void

local_bh_disable
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

__local_bh_disable
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

local_bh_disable
BRACKET_C
SEMICOLON

void

__local_bh_enable
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

WARN_ON_ONCE
BRACKET_O

in_irq
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

WARN_ON_ONCE
BRACKET_O

softirq_count
BRACKET_O
BRACKET_C
EQ

SOFTIRQ_OFFSET
BRACKET_C
SEMICOLON

sub_preempt_count
BRACKET_O

SOFTIRQ_OFFSET
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

__local_bh_enable
BRACKET_C
SEMICOLON

void

_local_bh_enable
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

WARN_ON_ONCE
BRACKET_O

in_irq
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

WARN_ON_ONCE
BRACKET_O
NOT

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

softirq_count
BRACKET_O
BRACKET_C
EQ

SOFTIRQ_OFFSET
BRACKET_C

trace_softirqs_on
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

sub_preempt_count
BRACKET_O

SOFTIRQ_OFFSET
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_local_bh_enable
BRACKET_C
SEMICOLON

void

local_bh_enable
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_TRACE_IRQFLAGS
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

WARN_ON_ONCE
BRACKET_O

in_irq
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
PP_ENDIF

WARN_ON_ONCE
BRACKET_O

irqs_disabled
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON
PP_ENDIF
IF
BRACKET_O

softirq_count
BRACKET_O
BRACKET_C
EQ

SOFTIRQ_OFFSET
BRACKET_C

trace_softirqs_on
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

sub_preempt_count
BRACKET_O

SOFTIRQ_OFFSET
MINUS
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

in_interrupt
BRACKET_O
BRACKET_C
AND

local_softirq_pending
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

do_softirq
BRACKET_O
BRACKET_C
SEMICOLON

dec_preempt_count
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
PP_ENDIF

preempt_check_resched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

local_bh_enable
BRACKET_C
SEMICOLON

void

local_bh_enable_ip
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

ip
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_TRACE_IRQFLAGS
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

WARN_ON_ONCE
BRACKET_O

in_irq
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON
PP_ENDIF
IF
BRACKET_O

softirq_count
BRACKET_O
BRACKET_C
EQ

SOFTIRQ_OFFSET
BRACKET_C

trace_softirqs_on
BRACKET_O

ip
BRACKET_C
SEMICOLON

sub_preempt_count
BRACKET_O

SOFTIRQ_OFFSET
MINUS
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O
NOT

in_interrupt
BRACKET_O
BRACKET_C
AND

local_softirq_pending
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

do_softirq
BRACKET_O
BRACKET_C
SEMICOLON

dec_preempt_count
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_TRACE_IRQFLAGS

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
PP_ENDIF

preempt_check_resched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

local_bh_enable_ip
BRACKET_C
SEMICOLON
PP_DEFINE

MAX_SOFTIRQ_RESTART
NUMBER

asmlinkage

void

__do_softirq
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

softirq_action
MULT

h
SEMICOLON

__u32

pending
SEMICOLON
TYPE_INT

max_restart
OP_ASSIGNMENT

MAX_SOFTIRQ_RESTART
SEMICOLON
TYPE_INT

cpu
SEMICOLON

pending
OP_ASSIGNMENT

local_softirq_pending
BRACKET_O
BRACKET_C
SEMICOLON

account_system_vtime
BRACKET_O

current
BRACKET_C
SEMICOLON

__local_bh_disable
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

trace_softirq_enter
BRACKET_O
BRACKET_C
SEMICOLON

cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON

restart
COLON

set_softirq_pending
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

h
OP_ASSIGNMENT

softirq_vec
SEMICOLON
DO
CURLY_BRACKET_O
IF
BRACKET_O

pending
AMPERSANT
NUMBER
BRACKET_C
CURLY_BRACKET_O

h
MINUS
GREATER

action
BRACKET_O

h
BRACKET_C
SEMICOLON

rcu_bh_qsctr_inc
BRACKET_O

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

h
PLUS
PLUS
SEMICOLON

pending
GREATER
GR_EQ
NUMBER
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

pending
BRACKET_C
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

pending
OP_ASSIGNMENT

local_softirq_pending
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

pending
AND
MINUS
MINUS

max_restart
BRACKET_C

goto

restart
SEMICOLON
IF
BRACKET_O

pending
BRACKET_C

wakeup_softirqd
BRACKET_O
BRACKET_C
SEMICOLON

trace_softirq_exit
BRACKET_O
BRACKET_C
SEMICOLON

account_system_vtime
BRACKET_O

current
BRACKET_C
SEMICOLON

_local_bh_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFNDEF

__ARCH_HAS_DO_SOFTIRQ

asmlinkage

void

do_softirq
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

__u32

pending
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O

in_interrupt
BRACKET_O
BRACKET_C
BRACKET_C

return
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

pending
OP_ASSIGNMENT

local_softirq_pending
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

pending
BRACKET_C

__do_softirq
BRACKET_O
BRACKET_C
SEMICOLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

do_softirq
BRACKET_C
SEMICOLON
PP_ENDIF

void

irq_enter
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

__irq_enter
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_NO_HZ
IF
BRACKET_O

idle_cpu
BRACKET_O

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C

tick_nohz_update_jiffies
BRACKET_O
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C
PP_IFDEF

__ARCH_IRQ_EXIT_IRQS_DISABLED
PP_DEFINE

invoke_softirq
BRACKET_O
BRACKET_C

__do_softirq
BRACKET_O
BRACKET_C
PP_ELSE
PP_DEFINE

invoke_softirq
BRACKET_O
BRACKET_C

do_softirq
BRACKET_O
BRACKET_C
PP_ENDIF

void

irq_exit
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

account_system_vtime
BRACKET_O

current
BRACKET_C
SEMICOLON

trace_hardirq_exit
BRACKET_O
BRACKET_C
SEMICOLON

sub_preempt_count
BRACKET_O

IRQ_EXIT_OFFSET
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

in_interrupt
BRACKET_O
BRACKET_C
AND

local_softirq_pending
BRACKET_O
BRACKET_C
BRACKET_C

invoke_softirq
BRACKET_O
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_NO_HZ
IF
BRACKET_O
NOT

in_interrupt
BRACKET_O
BRACKET_C
AND

idle_cpu
BRACKET_O

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
AND
NOT

need_resched
BRACKET_O
BRACKET_C
BRACKET_C

tick_nohz_stop_sched_tick
BRACKET_O
BRACKET_C
SEMICOLON
PP_ENDIF

preempt_enable_no_resched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

inline

fastcall

void

raise_softirq_irqoff
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

nr
BRACKET_C
CURLY_BRACKET_O

__raise_softirq_irqoff
BRACKET_O

nr
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

in_interrupt
BRACKET_O
BRACKET_C
BRACKET_C

wakeup_softirqd
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

raise_softirq_irqoff
BRACKET_C
SEMICOLON

void

fastcall

raise_softirq
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

nr
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

raise_softirq_irqoff
BRACKET_O

nr
BRACKET_C
SEMICOLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

open_softirq
BRACKET_O
TYPE_INT

nr
COMMA

void
BRACKET_O
MULT

action
BRACKET_C
BRACKET_O
STRUCT

softirq_action
MULT
BRACKET_C
COMMA

void
MULT

data
BRACKET_C
CURLY_BRACKET_O

softirq_vec
CORNER_BRACKET_O

nr
CORNER_BRACKET_C
DOT

data
OP_ASSIGNMENT

data
SEMICOLON

softirq_vec
CORNER_BRACKET_O

nr
CORNER_BRACKET_C
DOT

action
OP_ASSIGNMENT

action
SEMICOLON
CURLY_BRACKET_C
STRUCT

tasklet_head
CURLY_BRACKET_O
STRUCT

tasklet_struct
MULT

list
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

tasklet_head
COMMA

tasklet_vec
BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O

NULL
CURLY_BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

tasklet_head
COMMA

tasklet_hi_vec
BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O

NULL
CURLY_BRACKET_C
SEMICOLON

void

fastcall

__tasklet_schedule
BRACKET_O
STRUCT

tasklet_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

t
MINUS
GREATER

next
OP_ASSIGNMENT

__get_cpu_var
BRACKET_O

tasklet_vec
BRACKET_C
DOT

list
SEMICOLON

__get_cpu_var
BRACKET_O

tasklet_vec
BRACKET_C
DOT

list
OP_ASSIGNMENT

t
SEMICOLON

raise_softirq_irqoff
BRACKET_O

TASKLET_SOFTIRQ
BRACKET_C
SEMICOLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__tasklet_schedule
BRACKET_C
SEMICOLON

void

fastcall

__tasklet_hi_schedule
BRACKET_O
STRUCT

tasklet_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

t
MINUS
GREATER

next
OP_ASSIGNMENT

__get_cpu_var
BRACKET_O

tasklet_hi_vec
BRACKET_C
DOT

list
SEMICOLON

__get_cpu_var
BRACKET_O

tasklet_hi_vec
BRACKET_C
DOT

list
OP_ASSIGNMENT

t
SEMICOLON

raise_softirq_irqoff
BRACKET_O

HI_SOFTIRQ
BRACKET_C
SEMICOLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__tasklet_hi_schedule
BRACKET_C
SEMICOLON

static

void

tasklet_action
BRACKET_O
STRUCT

softirq_action
MULT

a
BRACKET_C
CURLY_BRACKET_O
STRUCT

tasklet_struct
MULT

list
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

list
OP_ASSIGNMENT

__get_cpu_var
BRACKET_O

tasklet_vec
BRACKET_C
DOT

list
SEMICOLON

__get_cpu_var
BRACKET_O

tasklet_vec
BRACKET_C
DOT

list
OP_ASSIGNMENT

NULL
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

tasklet_struct
MULT

t
OP_ASSIGNMENT

list
SEMICOLON

list
OP_ASSIGNMENT

list
MINUS
GREATER

next
SEMICOLON
IF
BRACKET_O

tasklet_trylock
BRACKET_O

t
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

atomic_read
BRACKET_O
AMPERSANT

t
MINUS
GREATER

count
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

test_and_clear_bit
BRACKET_O

TASKLET_STATE_SCHED
COMMA
AMPERSANT

t
MINUS
GREATER

state
BRACKET_C
BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON

t
MINUS
GREATER

func
BRACKET_O

t
MINUS
GREATER

data
BRACKET_C
SEMICOLON

tasklet_unlock
BRACKET_O

t
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

tasklet_unlock
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

t
MINUS
GREATER

next
OP_ASSIGNMENT

__get_cpu_var
BRACKET_O

tasklet_vec
BRACKET_C
DOT

list
SEMICOLON

__get_cpu_var
BRACKET_O

tasklet_vec
BRACKET_C
DOT

list
OP_ASSIGNMENT

t
SEMICOLON

__raise_softirq_irqoff
BRACKET_O

TASKLET_SOFTIRQ
BRACKET_C
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

tasklet_hi_action
BRACKET_O
STRUCT

softirq_action
MULT

a
BRACKET_C
CURLY_BRACKET_O
STRUCT

tasklet_struct
MULT

list
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

list
OP_ASSIGNMENT

__get_cpu_var
BRACKET_O

tasklet_hi_vec
BRACKET_C
DOT

list
SEMICOLON

__get_cpu_var
BRACKET_O

tasklet_hi_vec
BRACKET_C
DOT

list
OP_ASSIGNMENT

NULL
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

list
BRACKET_C
CURLY_BRACKET_O
STRUCT

tasklet_struct
MULT

t
OP_ASSIGNMENT

list
SEMICOLON

list
OP_ASSIGNMENT

list
MINUS
GREATER

next
SEMICOLON
IF
BRACKET_O

tasklet_trylock
BRACKET_O

t
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

atomic_read
BRACKET_O
AMPERSANT

t
MINUS
GREATER

count
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

test_and_clear_bit
BRACKET_O

TASKLET_STATE_SCHED
COMMA
AMPERSANT

t
MINUS
GREATER

state
BRACKET_C
BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON

t
MINUS
GREATER

func
BRACKET_O

t
MINUS
GREATER

data
BRACKET_C
SEMICOLON

tasklet_unlock
BRACKET_O

t
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
CURLY_BRACKET_C

tasklet_unlock
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

t
MINUS
GREATER

next
OP_ASSIGNMENT

__get_cpu_var
BRACKET_O

tasklet_hi_vec
BRACKET_C
DOT

list
SEMICOLON

__get_cpu_var
BRACKET_O

tasklet_hi_vec
BRACKET_C
DOT

list
OP_ASSIGNMENT

t
SEMICOLON

__raise_softirq_irqoff
BRACKET_O

HI_SOFTIRQ
BRACKET_C
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

tasklet_init
BRACKET_O
STRUCT

tasklet_struct
MULT

t
COMMA

void
BRACKET_O
MULT

func
BRACKET_C
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
COMMA
TYPE_UNSIGNED
TYPE_LONG

data
BRACKET_C
CURLY_BRACKET_O

t
MINUS
GREATER

next
OP_ASSIGNMENT

NULL
SEMICOLON

t
MINUS
GREATER

state
OP_ASSIGNMENT
NUMBER
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

t
MINUS
GREATER

count
COMMA
NUMBER
BRACKET_C
SEMICOLON

t
MINUS
GREATER

func
OP_ASSIGNMENT

func
SEMICOLON

t
MINUS
GREATER

data
OP_ASSIGNMENT

data
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

tasklet_init
BRACKET_C
SEMICOLON

void

tasklet_kill
BRACKET_O
STRUCT

tasklet_struct
MULT

t
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

in_interrupt
BRACKET_O
BRACKET_C
BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

test_and_set_bit
BRACKET_O

TASKLET_STATE_SCHED
COMMA
AMPERSANT

t
MINUS
GREATER

state
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
DO

yield
BRACKET_O
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

test_bit
BRACKET_O

TASKLET_STATE_SCHED
COMMA
AMPERSANT

t
MINUS
GREATER

state
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

tasklet_unlock_wait
BRACKET_O

t
BRACKET_C
SEMICOLON

clear_bit
BRACKET_O

TASKLET_STATE_SCHED
COMMA
AMPERSANT

t
MINUS
GREATER

state
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

tasklet_kill
BRACKET_C
SEMICOLON

void

__init

softirq_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

open_softirq
BRACKET_O

TASKLET_SOFTIRQ
COMMA

tasklet_action
COMMA

NULL
BRACKET_C
SEMICOLON

open_softirq
BRACKET_O

HI_SOFTIRQ
COMMA

tasklet_hi_action
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

ksoftirqd
BRACKET_O

void
MULT

__bind_cpu
BRACKET_C
CURLY_BRACKET_O

set_user_nice
BRACKET_O

current
COMMA
NUMBER
BRACKET_C
SEMICOLON

current
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_NOFREEZE
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

local_softirq_pending
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

preempt_enable_no_resched
BRACKET_O
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

local_softirq_pending
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cpu_is_offline
BRACKET_O
BRACKET_O
TYPE_LONG
BRACKET_C

__bind_cpu
BRACKET_C
BRACKET_C

goto

wait_to_die
SEMICOLON

do_softirq
BRACKET_O
BRACKET_C
SEMICOLON

preempt_enable_no_resched
BRACKET_O
BRACKET_C
SEMICOLON

cond_resched
BRACKET_O
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON

wait_to_die
COLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

schedule
BRACKET_O
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_HOTPLUG_CPU

void

tasklet_kill_immediate
BRACKET_O
STRUCT

tasklet_struct
MULT

t
COMMA
TYPE_UNSIGNED
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

tasklet_struct
MULT
MULT

i
SEMICOLON

BUG_ON
BRACKET_O

cpu_online
BRACKET_O

cpu
BRACKET_C
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

test_bit
BRACKET_O

TASKLET_STATE_RUN
COMMA
AMPERSANT

t
MINUS
GREATER

state
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

test_bit
BRACKET_O

TASKLET_STATE_SCHED
COMMA
AMPERSANT

t
MINUS
GREATER

state
BRACKET_C
BRACKET_C

return
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

tasklet_vec
COMMA

cpu
BRACKET_C
DOT

list
SEMICOLON
MULT

i
SEMICOLON

i
OP_ASSIGNMENT
AMPERSANT
BRACKET_O
MULT

i
BRACKET_C
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
MULT

i
EQ

t
BRACKET_C
CURLY_BRACKET_O
MULT

i
OP_ASSIGNMENT

t
MINUS
GREATER

next
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

takeover_tasklets
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

tasklet_struct
MULT
MULT

i
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
AMPERSANT

__get_cpu_var
BRACKET_O

tasklet_vec
BRACKET_C
DOT

list
SEMICOLON
MULT

i
SEMICOLON

i
OP_ASSIGNMENT
AMPERSANT
BRACKET_O
MULT

i
BRACKET_C
MINUS
GREATER

next
BRACKET_C
SEMICOLON
MULT

i
OP_ASSIGNMENT

per_cpu
BRACKET_O

tasklet_vec
COMMA

cpu
BRACKET_C
DOT

list
SEMICOLON

per_cpu
BRACKET_O

tasklet_vec
COMMA

cpu
BRACKET_C
DOT

list
OP_ASSIGNMENT

NULL
SEMICOLON

raise_softirq_irqoff
BRACKET_O

TASKLET_SOFTIRQ
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
AMPERSANT

__get_cpu_var
BRACKET_O

tasklet_hi_vec
BRACKET_C
DOT

list
SEMICOLON
MULT

i
SEMICOLON

i
OP_ASSIGNMENT
AMPERSANT
BRACKET_O
MULT

i
BRACKET_C
MINUS
GREATER

next
BRACKET_C
SEMICOLON
MULT

i
OP_ASSIGNMENT

per_cpu
BRACKET_O

tasklet_hi_vec
COMMA

cpu
BRACKET_C
DOT

list
SEMICOLON

per_cpu
BRACKET_O

tasklet_hi_vec
COMMA

cpu
BRACKET_C
DOT

list
OP_ASSIGNMENT

NULL
SEMICOLON

raise_softirq_irqoff
BRACKET_O

HI_SOFTIRQ
BRACKET_C
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

__cpuinit

cpu_callback
BRACKET_O
STRUCT

notifier_block
MULT

nfb
COMMA
TYPE_UNSIGNED
TYPE_LONG

action
COMMA

void
MULT

hcpu
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

hotcpu
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

hcpu
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON
SWITCH
BRACKET_O

action
BRACKET_C
CURLY_BRACKET_O

case

CPU_UP_PREPARE
COLON

case

CPU_UP_PREPARE_FROZEN
COLON

p
OP_ASSIGNMENT

kthread_create
BRACKET_O

ksoftirqd
COMMA

hcpu
COMMA
STRING
COMMA

hotcpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

hotcpu
BRACKET_C
SEMICOLON

return

NOTIFY_BAD
SEMICOLON
CURLY_BRACKET_C

kthread_bind
BRACKET_O

p
COMMA

hotcpu
BRACKET_C
SEMICOLON

per_cpu
BRACKET_O

ksoftirqd
COMMA

hotcpu
BRACKET_C
OP_ASSIGNMENT

p
SEMICOLON
BREAK
SEMICOLON

case

CPU_ONLINE
COLON

case

CPU_ONLINE_FROZEN
COLON

wake_up_process
BRACKET_O

per_cpu
BRACKET_O

ksoftirqd
COMMA

hotcpu
BRACKET_C
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
PP_IFDEF

CONFIG_HOTPLUG_CPU

case

CPU_UP_CANCELED
COLON

case

CPU_UP_CANCELED_FROZEN
COLON
IF
BRACKET_O
NOT

per_cpu
BRACKET_O

ksoftirqd
COMMA

hotcpu
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

kthread_bind
BRACKET_O

per_cpu
BRACKET_O

ksoftirqd
COMMA

hotcpu
BRACKET_C
COMMA

any_online_cpu
BRACKET_O

cpu_online_map
BRACKET_C
BRACKET_C
SEMICOLON

case

CPU_DEAD
COLON

case

CPU_DEAD_FROZEN
COLON

p
OP_ASSIGNMENT

per_cpu
BRACKET_O

ksoftirqd
COMMA

hotcpu
BRACKET_C
SEMICOLON

per_cpu
BRACKET_O

ksoftirqd
COMMA

hotcpu
BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

kthread_stop
BRACKET_O

p
BRACKET_C
SEMICOLON

takeover_tasklets
BRACKET_O

hotcpu
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

return

NOTIFY_OK
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

notifier_block

__cpuinitdata

cpu_nfb
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

notifier_call
OP_ASSIGNMENT

cpu_callback
CURLY_BRACKET_C
SEMICOLON

__init
TYPE_INT

spawn_ksoftirqd
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

void
MULT

cpu
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C
BRACKET_O
TYPE_LONG
BRACKET_C

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
TYPE_INT

err
OP_ASSIGNMENT

cpu_callback
BRACKET_O
AMPERSANT

cpu_nfb
COMMA

CPU_UP_PREPARE
COMMA

cpu
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

err
EQ

NOTIFY_BAD
BRACKET_C
SEMICOLON

cpu_callback
BRACKET_O
AMPERSANT

cpu_nfb
COMMA

CPU_ONLINE
COMMA

cpu
BRACKET_C
SEMICOLON

register_cpu_notifier
BRACKET_O
AMPERSANT

cpu_nfb
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_SMP
TYPE_INT

on_each_cpu
BRACKET_O

void
BRACKET_O
MULT

func
BRACKET_C
BRACKET_O

void
MULT

info
BRACKET_C
COMMA

void
MULT

info
COMMA
TYPE_INT

retry
COMMA
TYPE_INT

wait
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

smp_call_function
BRACKET_O

func
COMMA

info
COMMA

retry
COMMA

wait
BRACKET_C
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

func
BRACKET_O

info
BRACKET_C
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

on_each_cpu
BRACKET_C
SEMICOLON
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static

DEFINE_SPINLOCK
BRACKET_O

print_lock
BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
COMMA

touch_timestamp
BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
COMMA

print_timestamp
BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

task_struct
MULT
COMMA

watchdog_task
BRACKET_C
SEMICOLON

static
TYPE_INT

did_panic
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
TYPE_INT

softlock_panic
BRACKET_O
STRUCT

notifier_block
MULT

this
COMMA
TYPE_UNSIGNED
TYPE_LONG

event
COMMA

void
MULT

ptr
BRACKET_C
CURLY_BRACKET_O

did_panic
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

NOTIFY_DONE
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

notifier_block

panic_block
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

notifier_call
OP_ASSIGNMENT

softlock_panic
COMMA
CURLY_BRACKET_C
SEMICOLON

static
TYPE_UNSIGNED
TYPE_LONG

get_timestamp
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

sched_clock
BRACKET_O
BRACKET_C
GREATER
GREATER
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

touch_softlockup_watchdog
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

__raw_get_cpu_var
BRACKET_O

touch_timestamp
BRACKET_C
OP_ASSIGNMENT

get_timestamp
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

touch_softlockup_watchdog
BRACKET_C
SEMICOLON

void

touch_all_softlockup_watchdogs
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
SEMICOLON

for_each_online_cpu
BRACKET_O

cpu
BRACKET_C

per_cpu
BRACKET_O

touch_timestamp
COMMA

cpu
BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

touch_all_softlockup_watchdogs
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

softlockup_get_next_event
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

this_cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

touch_timestamp
OP_ASSIGNMENT

per_cpu
BRACKET_O

touch_timestamp
COMMA

this_cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

per_cpu
BRACKET_O

print_timestamp
COMMA

this_cpu
BRACKET_C
EQ

touch_timestamp
OR

did_panic
OR
NOT

per_cpu
BRACKET_O

watchdog_task
COMMA

this_cpu
BRACKET_C
BRACKET_C

return

MAX_JIFFY_OFFSET
SEMICOLON

return

max_t
BRACKET_O
TYPE_LONG
COMMA
NUMBER
COMMA

touch_timestamp
PLUS

HZ
MINUS

jiffies
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

softlockup_tick
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

this_cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

touch_timestamp
OP_ASSIGNMENT

per_cpu
BRACKET_O

touch_timestamp
COMMA

this_cpu
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

print_timestamp
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

now
SEMICOLON
IF
BRACKET_O

touch_timestamp
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

touch_softlockup_watchdog
BRACKET_O
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

print_timestamp
OP_ASSIGNMENT

per_cpu
BRACKET_O

print_timestamp
COMMA

this_cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

print_timestamp
LESS
BRACKET_O

touch_timestamp
PLUS
NUMBER
BRACKET_C
OR

did_panic
OR
NOT

per_cpu
BRACKET_O

watchdog_task
COMMA

this_cpu
BRACKET_C
BRACKET_C

return
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

system_state
NOT_EQ

SYSTEM_RUNNING
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

touch_softlockup_watchdog
BRACKET_O
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

now
OP_ASSIGNMENT

get_timestamp
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

now
GREATER
BRACKET_O

touch_timestamp
PLUS
NUMBER
BRACKET_C
BRACKET_C

wake_up_process
BRACKET_O

per_cpu
BRACKET_O

watchdog_task
COMMA

this_cpu
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

now
GREATER
BRACKET_O

touch_timestamp
PLUS
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

per_cpu
BRACKET_O

print_timestamp
COMMA

this_cpu
BRACKET_C
OP_ASSIGNMENT

touch_timestamp
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

print_lock
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_ERR
STRING
COMMA

this_cpu
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

print_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

watchdog
BRACKET_O

void
MULT

__bind_cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

sched_param

param
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

sched_priority
OP_ASSIGNMENT

MAX_RT_PRIO
MINUS
NUMBER
CURLY_BRACKET_C
SEMICOLON

sched_setscheduler
BRACKET_O

current
COMMA

SCHED_FIFO
COMMA
AMPERSANT

param
BRACKET_C
SEMICOLON

current
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_NOFREEZE
SEMICOLON

touch_softlockup_watchdog
BRACKET_O
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON

touch_softlockup_watchdog
BRACKET_O
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__cpuinit

cpu_callback
BRACKET_O
STRUCT

notifier_block
MULT

nfb
COMMA
TYPE_UNSIGNED
TYPE_LONG

action
COMMA

void
MULT

hcpu
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

hotcpu
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

hcpu
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON
SWITCH
BRACKET_O

action
BRACKET_C
CURLY_BRACKET_O

case

CPU_UP_PREPARE
COLON

case

CPU_UP_PREPARE_FROZEN
COLON

BUG_ON
BRACKET_O

per_cpu
BRACKET_O

watchdog_task
COMMA

hotcpu
BRACKET_C
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

kthread_create
BRACKET_O

watchdog
COMMA

hcpu
COMMA
STRING
COMMA

hotcpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

hotcpu
BRACKET_C
SEMICOLON

return

NOTIFY_BAD
SEMICOLON
CURLY_BRACKET_C

per_cpu
BRACKET_O

touch_timestamp
COMMA

hotcpu
BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

per_cpu
BRACKET_O

watchdog_task
COMMA

hotcpu
BRACKET_C
OP_ASSIGNMENT

p
SEMICOLON

kthread_bind
BRACKET_O

p
COMMA

hotcpu
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPU_ONLINE
COLON

case

CPU_ONLINE_FROZEN
COLON

wake_up_process
BRACKET_O

per_cpu
BRACKET_O

watchdog_task
COMMA

hotcpu
BRACKET_C
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
PP_IFDEF

CONFIG_HOTPLUG_CPU

case

CPU_UP_CANCELED
COLON

case

CPU_UP_CANCELED_FROZEN
COLON
IF
BRACKET_O
NOT

per_cpu
BRACKET_O

watchdog_task
COMMA

hotcpu
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

kthread_bind
BRACKET_O

per_cpu
BRACKET_O

watchdog_task
COMMA

hotcpu
BRACKET_C
COMMA

any_online_cpu
BRACKET_O

cpu_online_map
BRACKET_C
BRACKET_C
SEMICOLON

case

CPU_DEAD
COLON

case

CPU_DEAD_FROZEN
COLON

p
OP_ASSIGNMENT

per_cpu
BRACKET_O

watchdog_task
COMMA

hotcpu
BRACKET_C
SEMICOLON

per_cpu
BRACKET_O

watchdog_task
COMMA

hotcpu
BRACKET_C
OP_ASSIGNMENT

NULL
SEMICOLON

kthread_stop
BRACKET_O

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

return

NOTIFY_OK
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

notifier_block

__cpuinitdata

cpu_nfb
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

notifier_call
OP_ASSIGNMENT

cpu_callback
CURLY_BRACKET_C
SEMICOLON

__init

void

spawn_softlockup_task
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

void
MULT

cpu
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C
BRACKET_O
TYPE_LONG
BRACKET_C

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
TYPE_INT

err
OP_ASSIGNMENT

cpu_callback
BRACKET_O
AMPERSANT

cpu_nfb
COMMA

CPU_UP_PREPARE
COMMA

cpu
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

err
EQ

NOTIFY_BAD
BRACKET_C
SEMICOLON

cpu_callback
BRACKET_O
AMPERSANT

cpu_nfb
COMMA

CPU_ONLINE
COMMA

cpu
BRACKET_C
SEMICOLON

register_cpu_notifier
BRACKET_O
AMPERSANT

cpu_nfb
BRACKET_C
SEMICOLON

atomic_notifier_chain_register
BRACKET_O
AMPERSANT

panic_notifier_list
COMMA
AMPERSANT

panic_block
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
TYPE_INT

__lockfunc

_spin_trylock
BRACKET_O

spinlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

_raw_spin_trylock
BRACKET_O

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_spin_trylock
BRACKET_C
SEMICOLON
TYPE_INT

__lockfunc

_read_trylock
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

_raw_read_trylock
BRACKET_O

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rwlock_acquire_read
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_read_trylock
BRACKET_C
SEMICOLON
TYPE_INT

__lockfunc

_write_trylock
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

_raw_write_trylock
BRACKET_O

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rwlock_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_write_trylock
BRACKET_C
SEMICOLON
PP_IF
NOT
PP_DEFINED
BRACKET_O

CONFIG_PREEMPT
BRACKET_C
OR
NOT
PP_DEFINED
BRACKET_O

CONFIG_SMP
BRACKET_C
OR
BACKLASHED_NEWLINE
PP_DEFINED
BRACKET_O

CONFIG_DEBUG_LOCK_ALLOC
BRACKET_C

void

__lockfunc

_read_lock
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

rwlock_acquire_read
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_read_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_read_lock
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

__lockfunc

_spin_lock_irqsave
BRACKET_O

spinlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

spin_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_PROVE_LOCKING

_raw_spin_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
PP_ELSE

_raw_spin_lock_flags
BRACKET_O

lock
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
PP_ENDIF

return

flags
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_spin_lock_irqsave
BRACKET_C
SEMICOLON

void

__lockfunc

_spin_lock_irq
BRACKET_O

spinlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

spin_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_spin_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_spin_lock_irq
BRACKET_C
SEMICOLON

void

__lockfunc

_spin_lock_bh
BRACKET_O

spinlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

local_bh_disable
BRACKET_O
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

spin_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_spin_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_spin_lock_bh
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

__lockfunc

_read_lock_irqsave
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

rwlock_acquire_read
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_read_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON

return

flags
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_read_lock_irqsave
BRACKET_C
SEMICOLON

void

__lockfunc

_read_lock_irq
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

rwlock_acquire_read
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_read_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_read_lock_irq
BRACKET_C
SEMICOLON

void

__lockfunc

_read_lock_bh
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

local_bh_disable
BRACKET_O
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

rwlock_acquire_read
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_read_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_read_lock_bh
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

__lockfunc

_write_lock_irqsave
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

rwlock_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_write_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON

return

flags
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_write_lock_irqsave
BRACKET_C
SEMICOLON

void

__lockfunc

_write_lock_irq
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

rwlock_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_write_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_write_lock_irq
BRACKET_C
SEMICOLON

void

__lockfunc

_write_lock_bh
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

local_bh_disable
BRACKET_O
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

rwlock_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_write_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_write_lock_bh
BRACKET_C
SEMICOLON

void

__lockfunc

_spin_lock
BRACKET_O

spinlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

spin_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_spin_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_spin_lock
BRACKET_C
SEMICOLON

void

__lockfunc

_write_lock
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

rwlock_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_write_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_write_lock
BRACKET_C
SEMICOLON
PP_ELSE
PP_DEFINE

BUILD_LOCK_OPS
BRACKET_O

op
COMMA

locktype
BRACKET_C
BACKLASHED_NEWLINE

void

__lockfunc

_
DOUBLE_HASH

op
DOUBLE_HASH

_lock
BRACKET_O

locktype
DOUBLE_HASH

_t
MULT

lock
BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_O
BACKLASHED_NEWLINE
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
BACKLASHED_NEWLINE

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
IF
BRACKET_O

likely
BRACKET_O

_raw_
DOUBLE_HASH

op
DOUBLE_HASH

_trylock
BRACKET_O

lock
BRACKET_C
BRACKET_C
BRACKET_C
BACKLASHED_NEWLINE
BREAK
SEMICOLON
BACKLASHED_NEWLINE

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE
IF
BRACKET_O
NOT
BRACKET_O

lock
BRACKET_C
MINUS
GREATER

break_lock
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O

lock
BRACKET_C
MINUS
GREATER

break_lock
OP_ASSIGNMENT
NUMBER
SEMICOLON
BACKLASHED_NEWLINE
WHILE
BRACKET_O
NOT

op
DOUBLE_HASH

_can_lock
BRACKET_O

lock
BRACKET_C
AND
BRACKET_O

lock
BRACKET_C
MINUS
GREATER

break_lock
BRACKET_C
BACKLASHED_NEWLINE

_raw_
DOUBLE_HASH

op
DOUBLE_HASH

_relax
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

raw_lock
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O

lock
BRACKET_C
MINUS
GREATER

break_lock
OP_ASSIGNMENT
NUMBER
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE

EXPORT_SYMBOL
BRACKET_O

_
DOUBLE_HASH

op
DOUBLE_HASH

_lock
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE
TYPE_UNSIGNED
TYPE_LONG

__lockfunc

_
DOUBLE_HASH

op
DOUBLE_HASH

_lock_irqsave
BRACKET_O

locktype
DOUBLE_HASH

_t
MULT

lock
BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_O
BACKLASHED_NEWLINE
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
BACKLASHED_NEWLINE

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
IF
BRACKET_O

likely
BRACKET_O

_raw_
DOUBLE_HASH

op
DOUBLE_HASH

_trylock
BRACKET_O

lock
BRACKET_C
BRACKET_C
BRACKET_C
BACKLASHED_NEWLINE
BREAK
SEMICOLON
BACKLASHED_NEWLINE

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE
IF
BRACKET_O
NOT
BRACKET_O

lock
BRACKET_C
MINUS
GREATER

break_lock
BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O

lock
BRACKET_C
MINUS
GREATER

break_lock
OP_ASSIGNMENT
NUMBER
SEMICOLON
BACKLASHED_NEWLINE
WHILE
BRACKET_O
NOT

op
DOUBLE_HASH

_can_lock
BRACKET_O

lock
BRACKET_C
AND
BRACKET_O

lock
BRACKET_C
MINUS
GREATER

break_lock
BRACKET_C
BACKLASHED_NEWLINE

_raw_
DOUBLE_HASH

op
DOUBLE_HASH

_relax
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

raw_lock
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE
BRACKET_O

lock
BRACKET_C
MINUS
GREATER

break_lock
OP_ASSIGNMENT
NUMBER
SEMICOLON
BACKLASHED_NEWLINE

return

flags
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE

EXPORT_SYMBOL
BRACKET_O

_
DOUBLE_HASH

op
DOUBLE_HASH

_lock_irqsave
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE

void

__lockfunc

_
DOUBLE_HASH

op
DOUBLE_HASH

_lock_irq
BRACKET_O

locktype
DOUBLE_HASH

_t
MULT

lock
BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_O
BACKLASHED_NEWLINE

_
DOUBLE_HASH

op
DOUBLE_HASH

_lock_irqsave
BRACKET_O

lock
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE

EXPORT_SYMBOL
BRACKET_O

_
DOUBLE_HASH

op
DOUBLE_HASH

_lock_irq
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE

void

__lockfunc

_
DOUBLE_HASH

op
DOUBLE_HASH

_lock_bh
BRACKET_O

locktype
DOUBLE_HASH

_t
MULT

lock
BRACKET_C
BACKLASHED_NEWLINE
CURLY_BRACKET_O
BACKLASHED_NEWLINE
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE

flags
OP_ASSIGNMENT

_
DOUBLE_HASH

op
DOUBLE_HASH

_lock_irqsave
BRACKET_O

lock
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE

local_bh_disable
BRACKET_O
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
BACKLASHED_NEWLINE
CURLY_BRACKET_C
BACKLASHED_NEWLINE
BACKLASHED_NEWLINE

EXPORT_SYMBOL
BRACKET_O

_
DOUBLE_HASH

op
DOUBLE_HASH

_lock_bh
BRACKET_C

BUILD_LOCK_OPS
BRACKET_O

spin
COMMA

spinlock
BRACKET_C
SEMICOLON

BUILD_LOCK_OPS
BRACKET_O

read
COMMA

rwlock
BRACKET_C
SEMICOLON

BUILD_LOCK_OPS
BRACKET_O

write
COMMA

rwlock
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_DEBUG_LOCK_ALLOC

void

__lockfunc

_spin_lock_nested
BRACKET_O

spinlock_t
MULT

lock
COMMA
TYPE_INT

subclass
BRACKET_C
CURLY_BRACKET_O

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

spin_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA

subclass
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_spin_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_spin_lock_nested
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

__lockfunc

_spin_lock_irqsave_nested
BRACKET_O

spinlock_t
MULT

lock
COMMA
TYPE_INT

subclass
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

spin_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA

subclass
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_PROVE_SPIN_LOCKING

_raw_spin_lock
BRACKET_O

lock
BRACKET_C
SEMICOLON
PP_ELSE

_raw_spin_lock_flags
BRACKET_O

lock
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
PP_ENDIF

return

flags
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_spin_lock_irqsave_nested
BRACKET_C
SEMICOLON
PP_ENDIF

void

__lockfunc

_spin_unlock
BRACKET_O

spinlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

spin_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_spin_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_spin_unlock
BRACKET_C
SEMICOLON

void

__lockfunc

_write_unlock
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

rwlock_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_write_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_write_unlock
BRACKET_C
SEMICOLON

void

__lockfunc

_read_unlock
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

rwlock_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_read_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_read_unlock
BRACKET_C
SEMICOLON

void

__lockfunc

_spin_unlock_irqrestore
BRACKET_O

spinlock_t
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_LONG

flags
BRACKET_C
CURLY_BRACKET_O

spin_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_spin_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_spin_unlock_irqrestore
BRACKET_C
SEMICOLON

void

__lockfunc

_spin_unlock_irq
BRACKET_O

spinlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

spin_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_spin_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_spin_unlock_irq
BRACKET_C
SEMICOLON

void

__lockfunc

_spin_unlock_bh
BRACKET_O

spinlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

spin_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_spin_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

preempt_enable_no_resched
BRACKET_O
BRACKET_C
SEMICOLON

local_bh_enable_ip
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_spin_unlock_bh
BRACKET_C
SEMICOLON

void

__lockfunc

_read_unlock_irqrestore
BRACKET_O

rwlock_t
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_LONG

flags
BRACKET_C
CURLY_BRACKET_O

rwlock_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_read_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_read_unlock_irqrestore
BRACKET_C
SEMICOLON

void

__lockfunc

_read_unlock_irq
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

rwlock_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_read_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_read_unlock_irq
BRACKET_C
SEMICOLON

void

__lockfunc

_read_unlock_bh
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

rwlock_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_read_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

preempt_enable_no_resched
BRACKET_O
BRACKET_C
SEMICOLON

local_bh_enable_ip
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_read_unlock_bh
BRACKET_C
SEMICOLON

void

__lockfunc

_write_unlock_irqrestore
BRACKET_O

rwlock_t
MULT

lock
COMMA
TYPE_UNSIGNED
TYPE_LONG

flags
BRACKET_C
CURLY_BRACKET_O

rwlock_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_write_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_write_unlock_irqrestore
BRACKET_C
SEMICOLON

void

__lockfunc

_write_unlock_irq
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

rwlock_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_write_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_write_unlock_irq
BRACKET_C
SEMICOLON

void

__lockfunc

_write_unlock_bh
BRACKET_O

rwlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

rwlock_release
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

_raw_write_unlock
BRACKET_O

lock
BRACKET_C
SEMICOLON

preempt_enable_no_resched
BRACKET_O
BRACKET_C
SEMICOLON

local_bh_enable_ip
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_write_unlock_bh
BRACKET_C
SEMICOLON
TYPE_INT

__lockfunc

_spin_trylock_bh
BRACKET_O

spinlock_t
MULT

lock
BRACKET_C
CURLY_BRACKET_O

local_bh_disable
BRACKET_O
BRACKET_C
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

_raw_spin_trylock
BRACKET_O

lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_acquire
BRACKET_O
AMPERSANT

lock
MINUS
GREATER

dep_map
COMMA
NUMBER
COMMA
NUMBER
COMMA

_RET_IP_
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

preempt_enable_no_resched
BRACKET_O
BRACKET_C
SEMICOLON

local_bh_enable_ip
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__builtin_return_address
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

_spin_trylock_bh
BRACKET_C
SEMICOLON
TYPE_INT

in_lock_functions
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

addr
BRACKET_C
CURLY_BRACKET_O

extern
TYPE_CHAR

__lock_text_start
CORNER_BRACKET_O
CORNER_BRACKET_C
COMMA

__lock_text_end
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

return

addr
GR_EQ
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__lock_text_start
AND

addr
LESS
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

__lock_text_end
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

in_lock_functions
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
TYPE_INT

init_srcu_struct
BRACKET_O
STRUCT

srcu_struct
MULT

sp
BRACKET_C
CURLY_BRACKET_O

sp
MINUS
GREATER

completed
OP_ASSIGNMENT
NUMBER
SEMICOLON

mutex_init
BRACKET_O
AMPERSANT

sp
MINUS
GREATER

mutex
BRACKET_C
SEMICOLON

sp
MINUS
GREATER

per_cpu_ref
OP_ASSIGNMENT

alloc_percpu
BRACKET_O
STRUCT

srcu_struct_array
BRACKET_C
SEMICOLON

return
BRACKET_O

sp
MINUS
GREATER

per_cpu_ref
QUESTION_MARK
NUMBER
COLON
MINUS

ENOMEM
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

srcu_readers_active_idx
BRACKET_O
STRUCT

srcu_struct
MULT

sp
COMMA
TYPE_INT

idx
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
SEMICOLON
TYPE_INT

sum
SEMICOLON

sum
OP_ASSIGNMENT
NUMBER
SEMICOLON

for_each_possible_cpu
BRACKET_O

cpu
BRACKET_C

sum
ASSIGN_PLUS

per_cpu_ptr
BRACKET_O

sp
MINUS
GREATER

per_cpu_ref
COMMA

cpu
BRACKET_C
MINUS
GREATER

c
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
SEMICOLON

return

sum
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

srcu_readers_active
BRACKET_O
STRUCT

srcu_struct
MULT

sp
BRACKET_C
CURLY_BRACKET_O

return

srcu_readers_active_idx
BRACKET_O

sp
COMMA
NUMBER
BRACKET_C
PLUS

srcu_readers_active_idx
BRACKET_O

sp
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

cleanup_srcu_struct
BRACKET_O
STRUCT

srcu_struct
MULT

sp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

sum
SEMICOLON

sum
OP_ASSIGNMENT

srcu_readers_active
BRACKET_O

sp
BRACKET_C
SEMICOLON

WARN_ON
BRACKET_O

sum
BRACKET_C
SEMICOLON
IF
BRACKET_O

sum
NOT_EQ
NUMBER
BRACKET_C

return
SEMICOLON

free_percpu
BRACKET_O

sp
MINUS
GREATER

per_cpu_ref
BRACKET_C
SEMICOLON

sp
MINUS
GREATER

per_cpu_ref
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

srcu_read_lock
BRACKET_O
STRUCT

srcu_struct
MULT

sp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

idx
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

idx
OP_ASSIGNMENT

sp
MINUS
GREATER

completed
AMPERSANT
NUMBER

x1
SEMICOLON

barrier
BRACKET_O
BRACKET_C
SEMICOLON

per_cpu_ptr
BRACKET_O

sp
MINUS
GREATER

per_cpu_ref
COMMA

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
MINUS
GREATER

c
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
PLUS
PLUS
SEMICOLON

srcu_barrier
BRACKET_O
BRACKET_C
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON

return

idx
SEMICOLON
CURLY_BRACKET_C

void

srcu_read_unlock
BRACKET_O
STRUCT

srcu_struct
MULT

sp
COMMA
TYPE_INT

idx
BRACKET_C
CURLY_BRACKET_O

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

srcu_barrier
BRACKET_O
BRACKET_C
SEMICOLON

per_cpu_ptr
BRACKET_O

sp
MINUS
GREATER

per_cpu_ref
COMMA

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
MINUS
GREATER

c
CORNER_BRACKET_O

idx
CORNER_BRACKET_C
MINUS
MINUS
SEMICOLON

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

synchronize_srcu
BRACKET_O
STRUCT

srcu_struct
MULT

sp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

idx
SEMICOLON

idx
OP_ASSIGNMENT

sp
MINUS
GREATER

completed
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

sp
MINUS
GREATER

mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O
BRACKET_O

sp
MINUS
GREATER

completed
MINUS

idx
BRACKET_C
GR_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

mutex_unlock
BRACKET_O
AMPERSANT

sp
MINUS
GREATER

mutex
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

synchronize_sched
BRACKET_O
BRACKET_C
SEMICOLON

idx
OP_ASSIGNMENT

sp
MINUS
GREATER

completed
AMPERSANT
NUMBER

x1
SEMICOLON

sp
MINUS
GREATER

completed
PLUS
PLUS
SEMICOLON

synchronize_sched
BRACKET_O
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

srcu_readers_active_idx
BRACKET_O

sp
COMMA

idx
BRACKET_C
BRACKET_C

schedule_timeout_interruptible
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

synchronize_sched
BRACKET_O
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

sp
MINUS
GREATER

mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_LONG

srcu_batches_completed
BRACKET_O
STRUCT

srcu_struct
MULT

sp
BRACKET_C
CURLY_BRACKET_O

return

sp
MINUS
GREATER

completed
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

init_srcu_struct
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

cleanup_srcu_struct
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

srcu_read_lock
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

srcu_read_unlock
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

synchronize_srcu
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

srcu_batches_completed
BRACKET_C
SEMICOLON

EXPORT_SYMBOL_GPL
BRACKET_O

srcu_readers_active
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

void

print_stack_trace
BRACKET_O
STRUCT

stack_trace
MULT

trace
COMMA
TYPE_INT

spaces
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

j
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

trace
MINUS
GREATER

nr_entries
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

ip
OP_ASSIGNMENT

trace
MINUS
GREATER

entries
CORNER_BRACKET_O

i
CORNER_BRACKET_C
SEMICOLON
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

spaces
PLUS
NUMBER
SEMICOLON

j
PLUS
PLUS
BRACKET_C

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON

print_ip_sym
BRACKET_O

ip
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

enum

stopmachine_state
CURLY_BRACKET_O

STOPMACHINE_WAIT
COMMA

STOPMACHINE_PREPARE
COMMA

STOPMACHINE_DISABLE_IRQ
COMMA

STOPMACHINE_EXIT
COMMA
CURLY_BRACKET_C
SEMICOLON

static

enum

stopmachine_state

stopmachine_state
SEMICOLON

static
TYPE_UNSIGNED
TYPE_INT

stopmachine_num_threads
SEMICOLON

static

atomic_t

stopmachine_thread_ack
SEMICOLON

static

DECLARE_MUTEX
BRACKET_O

stopmachine_mutex
BRACKET_C
SEMICOLON

static
TYPE_INT

stopmachine
BRACKET_O

void
MULT

cpu
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

irqs_disabled
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

prepared
OP_ASSIGNMENT
NUMBER
SEMICOLON

set_cpus_allowed
BRACKET_O

current
COMMA

cpumask_of_cpu
BRACKET_O
BRACKET_O
TYPE_INT
BRACKET_C
BRACKET_O
TYPE_LONG
BRACKET_C

cpu
BRACKET_C
BRACKET_C
SEMICOLON

smp_mb
BRACKET_O
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

stopmachine_thread_ack
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

stopmachine_state
NOT_EQ

STOPMACHINE_EXIT
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

stopmachine_state
EQ

STOPMACHINE_DISABLE_IRQ
AND
NOT

irqs_disabled
BRACKET_C
CURLY_BRACKET_O

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

hard_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

irqs_disabled
OP_ASSIGNMENT
NUMBER
SEMICOLON

smp_mb
BRACKET_O
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

stopmachine_thread_ack
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

stopmachine_state
EQ

STOPMACHINE_PREPARE
AND
NOT

prepared
BRACKET_C
CURLY_BRACKET_O

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

prepared
OP_ASSIGNMENT
NUMBER
SEMICOLON

smp_mb
BRACKET_O
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

stopmachine_thread_ack
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

prepared
AND
NOT

irqs_disabled
BRACKET_C

yield
BRACKET_O
BRACKET_C
SEMICOLON
ELSE

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

smp_mb
BRACKET_O
BRACKET_C
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

stopmachine_thread_ack
BRACKET_C
SEMICOLON
IF
BRACKET_O

irqs_disabled
BRACKET_C

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

prepared
BRACKET_C

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

stopmachine_set_state
BRACKET_O

enum

stopmachine_state

state
BRACKET_C
CURLY_BRACKET_O

atomic_set
BRACKET_O
AMPERSANT

stopmachine_thread_ack
COMMA
NUMBER
BRACKET_C
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON

stopmachine_state
OP_ASSIGNMENT

state
SEMICOLON
WHILE
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

stopmachine_thread_ack
BRACKET_C
NOT_EQ

stopmachine_num_threads
BRACKET_C

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

stop_machine
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

sched_param

param
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

sched_priority
OP_ASSIGNMENT

MAX_RT_PRIO
MINUS
NUMBER
CURLY_BRACKET_C
SEMICOLON

sched_setscheduler
BRACKET_O

current
COMMA

SCHED_FIFO
COMMA
AMPERSANT

param
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

stopmachine_thread_ack
COMMA
NUMBER
BRACKET_C
SEMICOLON

stopmachine_num_threads
OP_ASSIGNMENT
NUMBER
SEMICOLON

stopmachine_state
OP_ASSIGNMENT

STOPMACHINE_WAIT
SEMICOLON

for_each_online_cpu
BRACKET_O

i
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

i
EQ

raw_smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

ret
OP_ASSIGNMENT

kernel_thread
BRACKET_O

stopmachine
COMMA
BRACKET_O

void
MULT
BRACKET_C
BRACKET_O
TYPE_LONG
BRACKET_C

i
COMMA

CLONE_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
LESS
NUMBER
BRACKET_C
BREAK
SEMICOLON

stopmachine_num_threads
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

stopmachine_thread_ack
BRACKET_C
NOT_EQ

stopmachine_num_threads
BRACKET_C

yield
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

stopmachine_set_state
BRACKET_O

STOPMACHINE_EXIT
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

stopmachine_set_state
BRACKET_O

STOPMACHINE_PREPARE
BRACKET_C
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

hard_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

stopmachine_set_state
BRACKET_O

STOPMACHINE_DISABLE_IRQ
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

restart_machine
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

stopmachine_set_state
BRACKET_O

STOPMACHINE_EXIT
BRACKET_C
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

preempt_enable_no_resched
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

stop_machine_data
CURLY_BRACKET_O
TYPE_INT
BRACKET_O
MULT

fn
BRACKET_C
BRACKET_O

void
MULT
BRACKET_C
SEMICOLON

void
MULT

data
SEMICOLON
STRUCT

completion

done
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

do_stop
BRACKET_O

void
MULT

_smdata
BRACKET_C
CURLY_BRACKET_O
STRUCT

stop_machine_data
MULT

smdata
OP_ASSIGNMENT

_smdata
SEMICOLON
TYPE_INT

ret
SEMICOLON

ret
OP_ASSIGNMENT

stop_machine
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

ret
OP_ASSIGNMENT

smdata
MINUS
GREATER

fn
BRACKET_O

smdata
MINUS
GREATER

data
BRACKET_C
SEMICOLON

restart_machine
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

complete
BRACKET_O
AMPERSANT

smdata
MINUS
GREATER

done
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

schedule
BRACKET_O
BRACKET_C
SEMICOLON

set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

__set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
STRUCT

task_struct
MULT

__stop_machine_run
BRACKET_O
TYPE_INT
BRACKET_O
MULT

fn
BRACKET_C
BRACKET_O

void
MULT
BRACKET_C
COMMA

void
MULT

data
COMMA
TYPE_UNSIGNED
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

stop_machine_data

smdata
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON

smdata
DOT

fn
OP_ASSIGNMENT

fn
SEMICOLON

smdata
DOT

data
OP_ASSIGNMENT

data
SEMICOLON

init_completion
BRACKET_O
AMPERSANT

smdata
DOT

done
BRACKET_C
SEMICOLON

down
BRACKET_O
AMPERSANT

stopmachine_mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpu
EQ

NR_CPUS
BRACKET_C

cpu
OP_ASSIGNMENT

raw_smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

kthread_create
BRACKET_O

do_stop
COMMA
AMPERSANT

smdata
COMMA
STRING
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

IS_ERR
BRACKET_O

p
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

kthread_bind
BRACKET_O

p
COMMA

cpu
BRACKET_C
SEMICOLON

wake_up_process
BRACKET_O

p
BRACKET_C
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

smdata
DOT

done
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

up
BRACKET_O
AMPERSANT

stopmachine_mutex
BRACKET_C
SEMICOLON

return

p
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

stop_machine_run
BRACKET_O
TYPE_INT
BRACKET_O
MULT

fn
BRACKET_C
BRACKET_O

void
MULT
BRACKET_C
COMMA

void
MULT

data
COMMA
TYPE_UNSIGNED
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON
TYPE_INT

ret
SEMICOLON

lock_cpu_hotplug
BRACKET_O
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

__stop_machine_run
BRACKET_O

fn
COMMA

data
COMMA

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

IS_ERR
BRACKET_O

p
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT

kthread_stop
BRACKET_O

p
BRACKET_C
SEMICOLON
ELSE

ret
OP_ASSIGNMENT

PTR_ERR
BRACKET_O

p
BRACKET_C
SEMICOLON

unlock_cpu_hotplug
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

stop_machine_run
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_IFNDEF

SET_UNALIGN_CTL
PP_DEFINE

SET_UNALIGN_CTL
BRACKET_O

a
COMMA

b
BRACKET_C
BRACKET_O
MINUS

EINVAL
BRACKET_C
PP_ENDIF
PP_IFNDEF

GET_UNALIGN_CTL
PP_DEFINE

GET_UNALIGN_CTL
BRACKET_O

a
COMMA

b
BRACKET_C
BRACKET_O
MINUS

EINVAL
BRACKET_C
PP_ENDIF
PP_IFNDEF

SET_FPEMU_CTL
PP_DEFINE

SET_FPEMU_CTL
BRACKET_O

a
COMMA

b
BRACKET_C
BRACKET_O
MINUS

EINVAL
BRACKET_C
PP_ENDIF
PP_IFNDEF

GET_FPEMU_CTL
PP_DEFINE

GET_FPEMU_CTL
BRACKET_O

a
COMMA

b
BRACKET_C
BRACKET_O
MINUS

EINVAL
BRACKET_C
PP_ENDIF
PP_IFNDEF

SET_FPEXC_CTL
PP_DEFINE

SET_FPEXC_CTL
BRACKET_O

a
COMMA

b
BRACKET_C
BRACKET_O
MINUS

EINVAL
BRACKET_C
PP_ENDIF
PP_IFNDEF

GET_FPEXC_CTL
PP_DEFINE

GET_FPEXC_CTL
BRACKET_O

a
COMMA

b
BRACKET_C
BRACKET_O
MINUS

EINVAL
BRACKET_C
PP_ENDIF
PP_IFNDEF

GET_ENDIAN
PP_DEFINE

GET_ENDIAN
BRACKET_O

a
COMMA

b
BRACKET_C
BRACKET_O
MINUS

EINVAL
BRACKET_C
PP_ENDIF
PP_IFNDEF

SET_ENDIAN
PP_DEFINE

SET_ENDIAN
BRACKET_O

a
COMMA

b
BRACKET_C
BRACKET_O
MINUS

EINVAL
BRACKET_C
PP_ENDIF
TYPE_INT

overflowuid
OP_ASSIGNMENT

DEFAULT_OVERFLOWUID
SEMICOLON
TYPE_INT

overflowgid
OP_ASSIGNMENT

DEFAULT_OVERFLOWGID
SEMICOLON
PP_IFDEF

CONFIG_UID16

EXPORT_SYMBOL
BRACKET_O

overflowuid
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

overflowgid
BRACKET_C
SEMICOLON
PP_ENDIF
TYPE_INT

fs_overflowuid
OP_ASSIGNMENT

DEFAULT_FS_OVERFLOWUID
SEMICOLON
TYPE_INT

fs_overflowgid
OP_ASSIGNMENT

DEFAULT_FS_OVERFLOWUID
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

fs_overflowuid
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

fs_overflowgid
BRACKET_C
SEMICOLON
TYPE_INT

C_A_D
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

pid
MULT

cad_pid
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

cad_pid
BRACKET_C
SEMICOLON

static

BLOCKING_NOTIFIER_HEAD
BRACKET_O

reboot_notifier_list
BRACKET_C
SEMICOLON

static
TYPE_INT

notifier_chain_register
BRACKET_O
STRUCT

notifier_block
MULT
MULT

nl
COMMA
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O
BRACKET_O
MULT

nl
BRACKET_C
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

n
MINUS
GREATER

priority
GREATER
BRACKET_O
MULT

nl
BRACKET_C
MINUS
GREATER

priority
BRACKET_C
BREAK
SEMICOLON

nl
OP_ASSIGNMENT
AMPERSANT
BRACKET_O
BRACKET_O
MULT

nl
BRACKET_C
MINUS
GREATER

next
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

n
MINUS
GREATER

next
OP_ASSIGNMENT
MULT

nl
SEMICOLON

rcu_assign_pointer
BRACKET_O
MULT

nl
COMMA

n
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

notifier_chain_unregister
BRACKET_O
STRUCT

notifier_block
MULT
MULT

nl
COMMA
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O
BRACKET_O
MULT

nl
BRACKET_C
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O
MULT

nl
BRACKET_C
EQ

n
BRACKET_C
CURLY_BRACKET_O

rcu_assign_pointer
BRACKET_O
MULT

nl
COMMA

n
MINUS
GREATER

next
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

nl
OP_ASSIGNMENT
AMPERSANT
BRACKET_O
BRACKET_O
MULT

nl
BRACKET_C
MINUS
GREATER

next
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
MINUS

ENOENT
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__kprobes

notifier_call_chain
BRACKET_O
STRUCT

notifier_block
MULT
MULT

nl
COMMA
TYPE_UNSIGNED
TYPE_LONG

val
COMMA

void
MULT

v
COMMA
TYPE_INT

nr_to_call
COMMA
TYPE_INT
MULT

nr_calls
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT

NOTIFY_DONE
SEMICOLON
STRUCT

notifier_block
MULT

nb
COMMA
MULT

next_nb
SEMICOLON

nb
OP_ASSIGNMENT

rcu_dereference
BRACKET_O
MULT

nl
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

nb
AND

nr_to_call
BRACKET_C
CURLY_BRACKET_O

next_nb
OP_ASSIGNMENT

rcu_dereference
BRACKET_O

nb
MINUS
GREATER

next
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

nb
MINUS
GREATER

notifier_call
BRACKET_O

nb
COMMA

val
COMMA

v
BRACKET_C
SEMICOLON
IF
BRACKET_O

nr_calls
BRACKET_C
BRACKET_O
MULT

nr_calls
BRACKET_C
PLUS
PLUS
SEMICOLON
IF
BRACKET_O
BRACKET_O

ret
AMPERSANT

NOTIFY_STOP_MASK
BRACKET_C
EQ

NOTIFY_STOP_MASK
BRACKET_C
BREAK
SEMICOLON

nb
OP_ASSIGNMENT

next_nb
SEMICOLON

nr_to_call
MINUS
MINUS
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

atomic_notifier_chain_register
BRACKET_O
STRUCT

atomic_notifier_head
MULT

nh
COMMA
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

ret
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

notifier_chain_register
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

n
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

atomic_notifier_chain_register
BRACKET_C
SEMICOLON
TYPE_INT

atomic_notifier_chain_unregister
BRACKET_O
STRUCT

atomic_notifier_head
MULT

nh
COMMA
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

ret
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

notifier_chain_unregister
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

n
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

synchronize_rcu
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

atomic_notifier_chain_unregister
BRACKET_C
SEMICOLON
TYPE_INT

__kprobes

__atomic_notifier_call_chain
BRACKET_O
STRUCT

atomic_notifier_head
MULT

nh
COMMA
TYPE_UNSIGNED
TYPE_LONG

val
COMMA

void
MULT

v
COMMA
TYPE_INT

nr_to_call
COMMA
TYPE_INT
MULT

nr_calls
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

notifier_call_chain
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

val
COMMA

v
COMMA

nr_to_call
COMMA

nr_calls
BRACKET_C
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

__atomic_notifier_call_chain
BRACKET_C
SEMICOLON
TYPE_INT

__kprobes

atomic_notifier_call_chain
BRACKET_O
STRUCT

atomic_notifier_head
MULT

nh
COMMA
TYPE_UNSIGNED
TYPE_LONG

val
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O

return

__atomic_notifier_call_chain
BRACKET_O

nh
COMMA

val
COMMA

v
COMMA
MINUS
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

atomic_notifier_call_chain
BRACKET_C
SEMICOLON
TYPE_INT

blocking_notifier_chain_register
BRACKET_O
STRUCT

blocking_notifier_head
MULT

nh
COMMA
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

system_state
EQ

SYSTEM_BOOTING
BRACKET_C
BRACKET_C

return

notifier_chain_register
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

n
BRACKET_C
SEMICOLON

down_write
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

rwsem
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

notifier_chain_register
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

n
BRACKET_C
SEMICOLON

up_write
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

rwsem
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

blocking_notifier_chain_register
BRACKET_C
SEMICOLON
TYPE_INT

blocking_notifier_chain_unregister
BRACKET_O
STRUCT

blocking_notifier_head
MULT

nh
COMMA
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

system_state
EQ

SYSTEM_BOOTING
BRACKET_C
BRACKET_C

return

notifier_chain_unregister
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

n
BRACKET_C
SEMICOLON

down_write
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

rwsem
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

notifier_chain_unregister
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

n
BRACKET_C
SEMICOLON

up_write
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

rwsem
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

blocking_notifier_chain_unregister
BRACKET_C
SEMICOLON
TYPE_INT

__blocking_notifier_call_chain
BRACKET_O
STRUCT

blocking_notifier_head
MULT

nh
COMMA
TYPE_UNSIGNED
TYPE_LONG

val
COMMA

void
MULT

v
COMMA
TYPE_INT

nr_to_call
COMMA
TYPE_INT
MULT

nr_calls
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT

NOTIFY_DONE
SEMICOLON
IF
BRACKET_O

rcu_dereference
BRACKET_O

nh
MINUS
GREATER

head
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

down_read
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

rwsem
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

notifier_call_chain
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

val
COMMA

v
COMMA

nr_to_call
COMMA

nr_calls
BRACKET_C
SEMICOLON

up_read
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

rwsem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

__blocking_notifier_call_chain
BRACKET_C
SEMICOLON
TYPE_INT

blocking_notifier_call_chain
BRACKET_O
STRUCT

blocking_notifier_head
MULT

nh
COMMA
TYPE_UNSIGNED
TYPE_LONG

val
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O

return

__blocking_notifier_call_chain
BRACKET_O

nh
COMMA

val
COMMA

v
COMMA
MINUS
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

blocking_notifier_call_chain
BRACKET_C
SEMICOLON
TYPE_INT

raw_notifier_chain_register
BRACKET_O
STRUCT

raw_notifier_head
MULT

nh
COMMA
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O

return

notifier_chain_register
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

n
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

raw_notifier_chain_register
BRACKET_C
SEMICOLON
TYPE_INT

raw_notifier_chain_unregister
BRACKET_O
STRUCT

raw_notifier_head
MULT

nh
COMMA
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O

return

notifier_chain_unregister
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

n
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

raw_notifier_chain_unregister
BRACKET_C
SEMICOLON
TYPE_INT

__raw_notifier_call_chain
BRACKET_O
STRUCT

raw_notifier_head
MULT

nh
COMMA
TYPE_UNSIGNED
TYPE_LONG

val
COMMA

void
MULT

v
COMMA
TYPE_INT

nr_to_call
COMMA
TYPE_INT
MULT

nr_calls
BRACKET_C
CURLY_BRACKET_O

return

notifier_call_chain
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

val
COMMA

v
COMMA

nr_to_call
COMMA

nr_calls
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

__raw_notifier_call_chain
BRACKET_C
SEMICOLON
TYPE_INT

raw_notifier_call_chain
BRACKET_O
STRUCT

raw_notifier_head
MULT

nh
COMMA
TYPE_UNSIGNED
TYPE_LONG

val
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O

return

__raw_notifier_call_chain
BRACKET_O

nh
COMMA

val
COMMA

v
COMMA
MINUS
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

raw_notifier_call_chain
BRACKET_C
SEMICOLON
TYPE_INT

srcu_notifier_chain_register
BRACKET_O
STRUCT

srcu_notifier_head
MULT

nh
COMMA
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

system_state
EQ

SYSTEM_BOOTING
BRACKET_C
BRACKET_C

return

notifier_chain_register
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

n
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

mutex
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

notifier_chain_register
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

n
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

mutex
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

srcu_notifier_chain_register
BRACKET_C
SEMICOLON
TYPE_INT

srcu_notifier_chain_unregister
BRACKET_O
STRUCT

srcu_notifier_head
MULT

nh
COMMA
STRUCT

notifier_block
MULT

n
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

system_state
EQ

SYSTEM_BOOTING
BRACKET_C
BRACKET_C

return

notifier_chain_unregister
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

n
BRACKET_C
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

mutex
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

notifier_chain_unregister
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

n
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

mutex
BRACKET_C
SEMICOLON

synchronize_srcu
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

srcu
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

srcu_notifier_chain_unregister
BRACKET_C
SEMICOLON
TYPE_INT

__srcu_notifier_call_chain
BRACKET_O
STRUCT

srcu_notifier_head
MULT

nh
COMMA
TYPE_UNSIGNED
TYPE_LONG

val
COMMA

void
MULT

v
COMMA
TYPE_INT

nr_to_call
COMMA
TYPE_INT
MULT

nr_calls
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
SEMICOLON
TYPE_INT

idx
SEMICOLON

idx
OP_ASSIGNMENT

srcu_read_lock
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

srcu
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

notifier_call_chain
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

head
COMMA

val
COMMA

v
COMMA

nr_to_call
COMMA

nr_calls
BRACKET_C
SEMICOLON

srcu_read_unlock
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

srcu
COMMA

idx
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

__srcu_notifier_call_chain
BRACKET_C
SEMICOLON
TYPE_INT

srcu_notifier_call_chain
BRACKET_O
STRUCT

srcu_notifier_head
MULT

nh
COMMA
TYPE_UNSIGNED
TYPE_LONG

val
COMMA

void
MULT

v
BRACKET_C
CURLY_BRACKET_O

return

__srcu_notifier_call_chain
BRACKET_O

nh
COMMA

val
COMMA

v
COMMA
MINUS
NUMBER
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

srcu_notifier_call_chain
BRACKET_C
SEMICOLON

void

srcu_init_notifier_head
BRACKET_O
STRUCT

srcu_notifier_head
MULT

nh
BRACKET_C
CURLY_BRACKET_O

mutex_init
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

mutex
BRACKET_C
SEMICOLON
IF
BRACKET_O

init_srcu_struct
BRACKET_O
AMPERSANT

nh
MINUS
GREATER

srcu
BRACKET_C
LESS
NUMBER
BRACKET_C

BUG
BRACKET_O
BRACKET_C
SEMICOLON

nh
MINUS
GREATER

head
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

srcu_init_notifier_head
BRACKET_C
SEMICOLON
TYPE_INT

register_reboot_notifier
BRACKET_O
STRUCT

notifier_block
MULT

nb
BRACKET_C
CURLY_BRACKET_O

return

blocking_notifier_chain_register
BRACKET_O
AMPERSANT

reboot_notifier_list
COMMA

nb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

register_reboot_notifier
BRACKET_C
SEMICOLON
TYPE_INT

unregister_reboot_notifier
BRACKET_O
STRUCT

notifier_block
MULT

nb
BRACKET_C
CURLY_BRACKET_O

return

blocking_notifier_chain_unregister
BRACKET_O
AMPERSANT

reboot_notifier_list
COMMA

nb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

unregister_reboot_notifier
BRACKET_C
SEMICOLON

static
TYPE_INT

set_one_prio
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

niceval
COMMA
TYPE_INT

error
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

no_nice
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

uid
NOT_EQ

current
MINUS
GREATER

euid
AND

p
MINUS
GREATER

euid
NOT_EQ

current
MINUS
GREATER

euid
AND
NOT

capable
BRACKET_O

CAP_SYS_NICE
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

niceval
LESS

task_nice
BRACKET_O

p
BRACKET_C
AND
NOT

can_nice
BRACKET_O

p
COMMA

niceval
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EACCES
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C

no_nice
OP_ASSIGNMENT

security_task_setnice
BRACKET_O

p
COMMA

niceval
BRACKET_C
SEMICOLON
IF
BRACKET_O

no_nice
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT

no_nice
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

error
EQ
MINUS

ESRCH
BRACKET_C

error
OP_ASSIGNMENT
NUMBER
SEMICOLON

set_user_nice
BRACKET_O

p
COMMA

niceval
BRACKET_C
SEMICOLON

out
COLON

return

error
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setpriority
BRACKET_O
TYPE_INT

which
COMMA
TYPE_INT

who
COMMA
TYPE_INT

niceval
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

g
COMMA
MULT

p
SEMICOLON
STRUCT

user_struct
MULT

user
SEMICOLON
TYPE_INT

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
STRUCT

pid
MULT

pgrp
SEMICOLON
IF
BRACKET_O

which
GREATER

PRIO_USER
OR

which
LESS

PRIO_PROCESS
BRACKET_C

goto

out
SEMICOLON

error
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON
IF
BRACKET_O

niceval
LESS
MINUS
NUMBER
BRACKET_C

niceval
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

niceval
GREATER
NUMBER
BRACKET_C

niceval
OP_ASSIGNMENT
NUMBER
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
SWITCH
BRACKET_O

which
BRACKET_C
CURLY_BRACKET_O

case

PRIO_PROCESS
COLON
IF
BRACKET_O

who
BRACKET_C

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

who
BRACKET_C
SEMICOLON
ELSE

p
OP_ASSIGNMENT

current
SEMICOLON
IF
BRACKET_O

p
BRACKET_C

error
OP_ASSIGNMENT

set_one_prio
BRACKET_O

p
COMMA

niceval
COMMA

error
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PRIO_PGRP
COLON
IF
BRACKET_O

who
BRACKET_C

pgrp
OP_ASSIGNMENT

find_pid
BRACKET_O

who
BRACKET_C
SEMICOLON
ELSE

pgrp
OP_ASSIGNMENT

task_pgrp
BRACKET_O

current
BRACKET_C
SEMICOLON

do_each_pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
COMMA

p
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT

set_one_prio
BRACKET_O

p
COMMA

niceval
COMMA

error
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

while_each_pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
COMMA

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PRIO_USER
COLON

user
OP_ASSIGNMENT

current
MINUS
GREATER

user
SEMICOLON
IF
BRACKET_O
NOT

who
BRACKET_C

who
OP_ASSIGNMENT

current
MINUS
GREATER

uid
SEMICOLON
ELSE
IF
BRACKET_O
BRACKET_O

who
NOT_EQ

current
MINUS
GREATER

uid
BRACKET_C
AND
NOT
BRACKET_O

user
OP_ASSIGNMENT

find_user
BRACKET_O

who
BRACKET_C
BRACKET_C
BRACKET_C

goto

out_unlock
SEMICOLON

do_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
IF
BRACKET_O

p
MINUS
GREATER

uid
EQ

who
BRACKET_C

error
OP_ASSIGNMENT

set_one_prio
BRACKET_O

p
COMMA

niceval
COMMA

error
BRACKET_C
SEMICOLON

while_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

who
NOT_EQ

current
MINUS
GREATER

uid
BRACKET_C

free_uid
BRACKET_O

user
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

out_unlock
COLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

out
COLON

return

error
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getpriority
BRACKET_O
TYPE_INT

which
COMMA
TYPE_INT

who
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

g
COMMA
MULT

p
SEMICOLON
STRUCT

user_struct
MULT

user
SEMICOLON
TYPE_LONG

niceval
COMMA

retval
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON
STRUCT

pid
MULT

pgrp
SEMICOLON
IF
BRACKET_O

which
GREATER

PRIO_USER
OR

which
LESS

PRIO_PROCESS
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
SWITCH
BRACKET_O

which
BRACKET_C
CURLY_BRACKET_O

case

PRIO_PROCESS
COLON
IF
BRACKET_O

who
BRACKET_C

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

who
BRACKET_C
SEMICOLON
ELSE

p
OP_ASSIGNMENT

current
SEMICOLON
IF
BRACKET_O

p
BRACKET_C
CURLY_BRACKET_O

niceval
OP_ASSIGNMENT
NUMBER
MINUS

task_nice
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

niceval
GREATER

retval
BRACKET_C

retval
OP_ASSIGNMENT

niceval
SEMICOLON
CURLY_BRACKET_C
BREAK
SEMICOLON

case

PRIO_PGRP
COLON
IF
BRACKET_O

who
BRACKET_C

pgrp
OP_ASSIGNMENT

find_pid
BRACKET_O

who
BRACKET_C
SEMICOLON
ELSE

pgrp
OP_ASSIGNMENT

task_pgrp
BRACKET_O

current
BRACKET_C
SEMICOLON

do_each_pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
COMMA

p
BRACKET_C
CURLY_BRACKET_O

niceval
OP_ASSIGNMENT
NUMBER
MINUS

task_nice
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

niceval
GREATER

retval
BRACKET_C

retval
OP_ASSIGNMENT

niceval
SEMICOLON
CURLY_BRACKET_C

while_each_pid_task
BRACKET_O

pgrp
COMMA

PIDTYPE_PGID
COMMA

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PRIO_USER
COLON

user
OP_ASSIGNMENT

current
MINUS
GREATER

user
SEMICOLON
IF
BRACKET_O
NOT

who
BRACKET_C

who
OP_ASSIGNMENT

current
MINUS
GREATER

uid
SEMICOLON
ELSE
IF
BRACKET_O
BRACKET_O

who
NOT_EQ

current
MINUS
GREATER

uid
BRACKET_C
AND
NOT
BRACKET_O

user
OP_ASSIGNMENT

find_user
BRACKET_O

who
BRACKET_C
BRACKET_C
BRACKET_C

goto

out_unlock
SEMICOLON

do_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
IF
BRACKET_O

p
MINUS
GREATER

uid
EQ

who
BRACKET_C
CURLY_BRACKET_O

niceval
OP_ASSIGNMENT
NUMBER
MINUS

task_nice
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

niceval
GREATER

retval
BRACKET_C

retval
OP_ASSIGNMENT

niceval
SEMICOLON
CURLY_BRACKET_C

while_each_thread
BRACKET_O

g
COMMA

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

who
NOT_EQ

current
MINUS
GREATER

uid
BRACKET_C

free_uid
BRACKET_O

user
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

out_unlock
COLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

void

emergency_restart
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

machine_emergency_restart
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

emergency_restart
BRACKET_C
SEMICOLON

static

void

kernel_restart_prepare
BRACKET_O
TYPE_CHAR
MULT

cmd
BRACKET_C
CURLY_BRACKET_O

blocking_notifier_call_chain
BRACKET_O
AMPERSANT

reboot_notifier_list
COMMA

SYS_RESTART
COMMA

cmd
BRACKET_C
SEMICOLON

system_state
OP_ASSIGNMENT

SYSTEM_RESTART
SEMICOLON

device_shutdown
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

kernel_restart
BRACKET_O
TYPE_CHAR
MULT

cmd
BRACKET_C
CURLY_BRACKET_O

kernel_restart_prepare
BRACKET_O

cmd
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cmd
BRACKET_C

printk
BRACKET_O

KERN_EMERG
STRING
BRACKET_C
SEMICOLON
ELSE

printk
BRACKET_O

KERN_EMERG
STRING
COMMA

cmd
BRACKET_C
SEMICOLON

machine_restart
BRACKET_O

cmd
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

kernel_restart
BRACKET_C
SEMICOLON

static

void

kernel_kexec
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_KEXEC
STRUCT

kimage
MULT

image
SEMICOLON

image
OP_ASSIGNMENT

xchg
BRACKET_O
AMPERSANT

kexec_image
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

image
BRACKET_C

return
SEMICOLON

kernel_restart_prepare
BRACKET_O

NULL
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_EMERG
STRING
BRACKET_C
SEMICOLON

machine_shutdown
BRACKET_O
BRACKET_C
SEMICOLON

machine_kexec
BRACKET_O

image
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

void

kernel_shutdown_prepare
BRACKET_O

enum

system_states

state
BRACKET_C
CURLY_BRACKET_O

blocking_notifier_call_chain
BRACKET_O
AMPERSANT

reboot_notifier_list
COMMA
BRACKET_O

state
EQ

SYSTEM_HALT
BRACKET_C
QUESTION_MARK

SYS_HALT
COLON

SYS_POWER_OFF
COMMA

NULL
BRACKET_C
SEMICOLON

system_state
OP_ASSIGNMENT

state
SEMICOLON

device_shutdown
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

kernel_halt
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

kernel_shutdown_prepare
BRACKET_O

SYSTEM_HALT
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_EMERG
STRING
BRACKET_C
SEMICOLON

machine_halt
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

kernel_halt
BRACKET_C
SEMICOLON

void

kernel_power_off
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

kernel_shutdown_prepare
BRACKET_O

SYSTEM_POWER_OFF
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_EMERG
STRING
BRACKET_C
SEMICOLON

machine_power_off
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

kernel_power_off
BRACKET_C
SEMICOLON

asmlinkage
TYPE_LONG

sys_reboot
BRACKET_O
TYPE_INT

magic1
COMMA
TYPE_INT

magic2
COMMA
TYPE_UNSIGNED
TYPE_INT

cmd
COMMA

void

__user
MULT

arg
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

buffer
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SYS_BOOT
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

magic1
NOT_EQ

LINUX_REBOOT_MAGIC1
OR
BRACKET_O

magic2
NOT_EQ

LINUX_REBOOT_MAGIC2
AND

magic2
NOT_EQ

LINUX_REBOOT_MAGIC2A
AND

magic2
NOT_EQ

LINUX_REBOOT_MAGIC2B
AND

magic2
NOT_EQ

LINUX_REBOOT_MAGIC2C
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
BRACKET_O

cmd
EQ

LINUX_REBOOT_CMD_POWER_OFF
BRACKET_C
AND
NOT

pm_power_off
BRACKET_C

cmd
OP_ASSIGNMENT

LINUX_REBOOT_CMD_HALT
SEMICOLON

lock_kernel
BRACKET_O
BRACKET_C
SEMICOLON
SWITCH
BRACKET_O

cmd
BRACKET_C
CURLY_BRACKET_O

case

LINUX_REBOOT_CMD_RESTART
COLON

kernel_restart
BRACKET_O

NULL
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

LINUX_REBOOT_CMD_CAD_ON
COLON

C_A_D
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

LINUX_REBOOT_CMD_CAD_OFF
COLON

C_A_D
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

LINUX_REBOOT_CMD_HALT
COLON

kernel_halt
BRACKET_O
BRACKET_C
SEMICOLON

unlock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

do_exit
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

LINUX_REBOOT_CMD_POWER_OFF
COLON

kernel_power_off
BRACKET_O
BRACKET_C
SEMICOLON

unlock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

do_exit
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

LINUX_REBOOT_CMD_RESTART2
COLON
IF
BRACKET_O

strncpy_from_user
BRACKET_O
AMPERSANT

buffer
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

arg
COMMA

sizeof
BRACKET_O

buffer
BRACKET_C
MINUS
NUMBER
BRACKET_C
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

unlock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

buffer
CORNER_BRACKET_O

sizeof
BRACKET_O

buffer
BRACKET_C
MINUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

kernel_restart
BRACKET_O

buffer
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

LINUX_REBOOT_CMD_KEXEC
COLON

kernel_kexec
BRACKET_O
BRACKET_C
SEMICOLON

unlock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

return
MINUS

EINVAL
SEMICOLON
PP_IFDEF

CONFIG_SOFTWARE_SUSPEND

case

LINUX_REBOOT_CMD_SW_SUSPEND
COLON
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT

hibernate
BRACKET_O
BRACKET_C
SEMICOLON

unlock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

default
COLON

unlock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C

unlock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

deferred_cad
BRACKET_O
STRUCT

work_struct
MULT

dummy
BRACKET_C
CURLY_BRACKET_O

kernel_restart
BRACKET_O

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

ctrl_alt_del
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

static

DECLARE_WORK
BRACKET_O

cad_work
COMMA

deferred_cad
BRACKET_C
SEMICOLON
IF
BRACKET_O

C_A_D
BRACKET_C

schedule_work
BRACKET_O
AMPERSANT

cad_work
BRACKET_C
SEMICOLON
ELSE

kill_cad_pid
BRACKET_O

SIGINT
COMMA
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setregid
BRACKET_O

gid_t

rgid
COMMA

gid_t

egid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

old_rgid
OP_ASSIGNMENT

current
MINUS
GREATER

gid
SEMICOLON
TYPE_INT

old_egid
OP_ASSIGNMENT

current
MINUS
GREATER

egid
SEMICOLON
TYPE_INT

new_rgid
OP_ASSIGNMENT

old_rgid
SEMICOLON
TYPE_INT

new_egid
OP_ASSIGNMENT

old_egid
SEMICOLON
TYPE_INT

retval
SEMICOLON

retval
OP_ASSIGNMENT

security_task_setgid
BRACKET_O

rgid
COMMA

egid
COMMA
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
COMMA

LSM_SETID_RE
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON
IF
BRACKET_O

rgid
NOT_EQ
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

old_rgid
EQ

rgid
BRACKET_C
OR
BRACKET_O

current
MINUS
GREATER

egid
EQ

rgid
BRACKET_C
OR

capable
BRACKET_O

CAP_SETGID
BRACKET_C
BRACKET_C

new_rgid
OP_ASSIGNMENT

rgid
SEMICOLON
ELSE

return
MINUS

EPERM
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

egid
NOT_EQ
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

old_rgid
EQ

egid
BRACKET_C
OR
BRACKET_O

current
MINUS
GREATER

egid
EQ

egid
BRACKET_C
OR
BRACKET_O

current
MINUS
GREATER

sgid
EQ

egid
BRACKET_C
OR

capable
BRACKET_O

CAP_SETGID
BRACKET_C
BRACKET_C

new_egid
OP_ASSIGNMENT

egid
SEMICOLON
ELSE

return
MINUS

EPERM
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

new_egid
NOT_EQ

old_egid
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

mm
MINUS
GREATER

dumpable
OP_ASSIGNMENT

suid_dumpable
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

rgid
NOT_EQ
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
OR
BRACKET_O

egid
NOT_EQ
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
AND

egid
NOT_EQ

old_rgid
BRACKET_C
BRACKET_C

current
MINUS
GREATER

sgid
OP_ASSIGNMENT

new_egid
SEMICOLON

current
MINUS
GREATER

fsgid
OP_ASSIGNMENT

new_egid
SEMICOLON

current
MINUS
GREATER

egid
OP_ASSIGNMENT

new_egid
SEMICOLON

current
MINUS
GREATER

gid
OP_ASSIGNMENT

new_rgid
SEMICOLON

key_fsgid_changed
BRACKET_O

current
BRACKET_C
SEMICOLON

proc_id_connector
BRACKET_O

current
COMMA

PROC_EVENT_GID
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setgid
BRACKET_O

gid_t

gid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

old_egid
OP_ASSIGNMENT

current
MINUS
GREATER

egid
SEMICOLON
TYPE_INT

retval
SEMICOLON

retval
OP_ASSIGNMENT

security_task_setgid
BRACKET_O

gid
COMMA
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
COMMA
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
COMMA

LSM_SETID_ID
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON
IF
BRACKET_O

capable
BRACKET_O

CAP_SETGID
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

old_egid
NOT_EQ

gid
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

mm
MINUS
GREATER

dumpable
OP_ASSIGNMENT

suid_dumpable
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

gid
OP_ASSIGNMENT

current
MINUS
GREATER

egid
OP_ASSIGNMENT

current
MINUS
GREATER

sgid
OP_ASSIGNMENT

current
MINUS
GREATER

fsgid
OP_ASSIGNMENT

gid
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
BRACKET_O

gid
EQ

current
MINUS
GREATER

gid
BRACKET_C
OR
BRACKET_O

gid
EQ

current
MINUS
GREATER

sgid
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

old_egid
NOT_EQ

gid
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

mm
MINUS
GREATER

dumpable
OP_ASSIGNMENT

suid_dumpable
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

egid
OP_ASSIGNMENT

current
MINUS
GREATER

fsgid
OP_ASSIGNMENT

gid
SEMICOLON
CURLY_BRACKET_C
ELSE

return
MINUS

EPERM
SEMICOLON

key_fsgid_changed
BRACKET_O

current
BRACKET_C
SEMICOLON

proc_id_connector
BRACKET_O

current
COMMA

PROC_EVENT_GID
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

set_user
BRACKET_O

uid_t

new_ruid
COMMA
TYPE_INT

dumpclear
BRACKET_C
CURLY_BRACKET_O
STRUCT

user_struct
MULT

new_user
SEMICOLON

new_user
OP_ASSIGNMENT

alloc_uid
BRACKET_O

new_ruid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

new_user
BRACKET_C

return
MINUS

EAGAIN
SEMICOLON
IF
BRACKET_O

atomic_read
BRACKET_O
AMPERSANT

new_user
MINUS
GREATER

processes
BRACKET_C
GR_EQ

current
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

RLIMIT_NPROC
CORNER_BRACKET_C
DOT

rlim_cur
AND

new_user
NOT_EQ
AMPERSANT

root_user
BRACKET_C
CURLY_BRACKET_O

free_uid
BRACKET_O

new_user
BRACKET_C
SEMICOLON

return
MINUS

EAGAIN
SEMICOLON
CURLY_BRACKET_C

switch_uid
BRACKET_O

new_user
BRACKET_C
SEMICOLON
IF
BRACKET_O

dumpclear
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

mm
MINUS
GREATER

dumpable
OP_ASSIGNMENT

suid_dumpable
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

uid
OP_ASSIGNMENT

new_ruid
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setreuid
BRACKET_O

uid_t

ruid
COMMA

uid_t

euid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

old_ruid
COMMA

old_euid
COMMA

old_suid
COMMA

new_ruid
COMMA

new_euid
SEMICOLON
TYPE_INT

retval
SEMICOLON

retval
OP_ASSIGNMENT

security_task_setuid
BRACKET_O

ruid
COMMA

euid
COMMA
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
COMMA

LSM_SETID_RE
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON

new_ruid
OP_ASSIGNMENT

old_ruid
OP_ASSIGNMENT

current
MINUS
GREATER

uid
SEMICOLON

new_euid
OP_ASSIGNMENT

old_euid
OP_ASSIGNMENT

current
MINUS
GREATER

euid
SEMICOLON

old_suid
OP_ASSIGNMENT

current
MINUS
GREATER

suid
SEMICOLON
IF
BRACKET_O

ruid
NOT_EQ
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O

new_ruid
OP_ASSIGNMENT

ruid
SEMICOLON
IF
BRACKET_O
BRACKET_O

old_ruid
NOT_EQ

ruid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

ruid
BRACKET_C
AND
NOT

capable
BRACKET_O

CAP_SETUID
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

euid
NOT_EQ
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O

new_euid
OP_ASSIGNMENT

euid
SEMICOLON
IF
BRACKET_O
BRACKET_O

old_ruid
NOT_EQ

euid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

euid
NOT_EQ

euid
BRACKET_C
AND
BRACKET_O

current
MINUS
GREATER

suid
NOT_EQ

euid
BRACKET_C
AND
NOT

capable
BRACKET_O

CAP_SETUID
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

new_ruid
NOT_EQ

old_ruid
AND

set_user
BRACKET_O

new_ruid
COMMA

new_euid
NOT_EQ

old_euid
BRACKET_C
LESS
NUMBER
BRACKET_C

return
MINUS

EAGAIN
SEMICOLON
IF
BRACKET_O

new_euid
NOT_EQ

old_euid
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

mm
MINUS
GREATER

dumpable
OP_ASSIGNMENT

suid_dumpable
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

fsuid
OP_ASSIGNMENT

current
MINUS
GREATER

euid
OP_ASSIGNMENT

new_euid
SEMICOLON
IF
BRACKET_O

ruid
NOT_EQ
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
OR
BRACKET_O

euid
NOT_EQ
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
AND

euid
NOT_EQ

old_ruid
BRACKET_C
BRACKET_C

current
MINUS
GREATER

suid
OP_ASSIGNMENT

current
MINUS
GREATER

euid
SEMICOLON

current
MINUS
GREATER

fsuid
OP_ASSIGNMENT

current
MINUS
GREATER

euid
SEMICOLON

key_fsuid_changed
BRACKET_O

current
BRACKET_C
SEMICOLON

proc_id_connector
BRACKET_O

current
COMMA

PROC_EVENT_UID
BRACKET_C
SEMICOLON

return

security_task_post_setuid
BRACKET_O

old_ruid
COMMA

old_euid
COMMA

old_suid
COMMA

LSM_SETID_RE
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setuid
BRACKET_O

uid_t

uid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

old_euid
OP_ASSIGNMENT

current
MINUS
GREATER

euid
SEMICOLON
TYPE_INT

old_ruid
COMMA

old_suid
COMMA

new_suid
SEMICOLON
TYPE_INT

retval
SEMICOLON

retval
OP_ASSIGNMENT

security_task_setuid
BRACKET_O

uid
COMMA
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
COMMA
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
COMMA

LSM_SETID_ID
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON

old_ruid
OP_ASSIGNMENT

current
MINUS
GREATER

uid
SEMICOLON

old_suid
OP_ASSIGNMENT

current
MINUS
GREATER

suid
SEMICOLON

new_suid
OP_ASSIGNMENT

old_suid
SEMICOLON
IF
BRACKET_O

capable
BRACKET_O

CAP_SETUID
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

uid
NOT_EQ

old_ruid
AND

set_user
BRACKET_O

uid
COMMA

old_euid
NOT_EQ

uid
BRACKET_C
LESS
NUMBER
BRACKET_C

return
MINUS

EAGAIN
SEMICOLON

new_suid
OP_ASSIGNMENT

uid
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
BRACKET_O

uid
NOT_EQ

current
MINUS
GREATER

uid
BRACKET_C
AND
BRACKET_O

uid
NOT_EQ

new_suid
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

old_euid
NOT_EQ

uid
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

mm
MINUS
GREATER

dumpable
OP_ASSIGNMENT

suid_dumpable
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

fsuid
OP_ASSIGNMENT

current
MINUS
GREATER

euid
OP_ASSIGNMENT

uid
SEMICOLON

current
MINUS
GREATER

suid
OP_ASSIGNMENT

new_suid
SEMICOLON

key_fsuid_changed
BRACKET_O

current
BRACKET_C
SEMICOLON

proc_id_connector
BRACKET_O

current
COMMA

PROC_EVENT_UID
BRACKET_C
SEMICOLON

return

security_task_post_setuid
BRACKET_O

old_ruid
COMMA

old_euid
COMMA

old_suid
COMMA

LSM_SETID_ID
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setresuid
BRACKET_O

uid_t

ruid
COMMA

uid_t

euid
COMMA

uid_t

suid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

old_ruid
OP_ASSIGNMENT

current
MINUS
GREATER

uid
SEMICOLON
TYPE_INT

old_euid
OP_ASSIGNMENT

current
MINUS
GREATER

euid
SEMICOLON
TYPE_INT

old_suid
OP_ASSIGNMENT

current
MINUS
GREATER

suid
SEMICOLON
TYPE_INT

retval
SEMICOLON

retval
OP_ASSIGNMENT

security_task_setuid
BRACKET_O

ruid
COMMA

euid
COMMA

suid
COMMA

LSM_SETID_RES
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SETUID
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

ruid
NOT_EQ
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
AND
BRACKET_O

ruid
NOT_EQ

current
MINUS
GREATER

uid
BRACKET_C
AND
BRACKET_O

ruid
NOT_EQ

current
MINUS
GREATER

euid
BRACKET_C
AND
BRACKET_O

ruid
NOT_EQ

current
MINUS
GREATER

suid
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O
BRACKET_O

euid
NOT_EQ
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
AND
BRACKET_O

euid
NOT_EQ

current
MINUS
GREATER

uid
BRACKET_C
AND
BRACKET_O

euid
NOT_EQ

current
MINUS
GREATER

euid
BRACKET_C
AND
BRACKET_O

euid
NOT_EQ

current
MINUS
GREATER

suid
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O
BRACKET_O

suid
NOT_EQ
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
AND
BRACKET_O

suid
NOT_EQ

current
MINUS
GREATER

uid
BRACKET_C
AND
BRACKET_O

suid
NOT_EQ

current
MINUS
GREATER

euid
BRACKET_C
AND
BRACKET_O

suid
NOT_EQ

current
MINUS
GREATER

suid
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

ruid
NOT_EQ
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

ruid
NOT_EQ

current
MINUS
GREATER

uid
AND

set_user
BRACKET_O

ruid
COMMA

euid
NOT_EQ

current
MINUS
GREATER

euid
BRACKET_C
LESS
NUMBER
BRACKET_C

return
MINUS

EAGAIN
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

euid
NOT_EQ
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

euid
NOT_EQ

current
MINUS
GREATER

euid
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

mm
MINUS
GREATER

dumpable
OP_ASSIGNMENT

suid_dumpable
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

euid
OP_ASSIGNMENT

euid
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

fsuid
OP_ASSIGNMENT

current
MINUS
GREATER

euid
SEMICOLON
IF
BRACKET_O

suid
NOT_EQ
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C

current
MINUS
GREATER

suid
OP_ASSIGNMENT

suid
SEMICOLON

key_fsuid_changed
BRACKET_O

current
BRACKET_C
SEMICOLON

proc_id_connector
BRACKET_O

current
COMMA

PROC_EVENT_UID
BRACKET_C
SEMICOLON

return

security_task_post_setuid
BRACKET_O

old_ruid
COMMA

old_euid
COMMA

old_suid
COMMA

LSM_SETID_RES
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getresuid
BRACKET_O

uid_t

__user
MULT

ruid
COMMA

uid_t

__user
MULT

euid
COMMA

uid_t

__user
MULT

suid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

retval
OP_ASSIGNMENT

put_user
BRACKET_O

current
MINUS
GREATER

uid
COMMA

ruid
BRACKET_C
BRACKET_C
AND
NOT
BRACKET_O

retval
OP_ASSIGNMENT

put_user
BRACKET_O

current
MINUS
GREATER

euid
COMMA

euid
BRACKET_C
BRACKET_C
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

current
MINUS
GREATER

suid
COMMA

suid
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setresgid
BRACKET_O

gid_t

rgid
COMMA

gid_t

egid
COMMA

gid_t

sgid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON

retval
OP_ASSIGNMENT

security_task_setgid
BRACKET_O

rgid
COMMA

egid
COMMA

sgid
COMMA

LSM_SETID_RES
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SETGID
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

rgid
NOT_EQ
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
AND
BRACKET_O

rgid
NOT_EQ

current
MINUS
GREATER

gid
BRACKET_C
AND
BRACKET_O

rgid
NOT_EQ

current
MINUS
GREATER

egid
BRACKET_C
AND
BRACKET_O

rgid
NOT_EQ

current
MINUS
GREATER

sgid
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O
BRACKET_O

egid
NOT_EQ
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
AND
BRACKET_O

egid
NOT_EQ

current
MINUS
GREATER

gid
BRACKET_C
AND
BRACKET_O

egid
NOT_EQ

current
MINUS
GREATER

egid
BRACKET_C
AND
BRACKET_O

egid
NOT_EQ

current
MINUS
GREATER

sgid
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O
BRACKET_O

sgid
NOT_EQ
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
AND
BRACKET_O

sgid
NOT_EQ

current
MINUS
GREATER

gid
BRACKET_C
AND
BRACKET_O

sgid
NOT_EQ

current
MINUS
GREATER

egid
BRACKET_C
AND
BRACKET_O

sgid
NOT_EQ

current
MINUS
GREATER

sgid
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

egid
NOT_EQ
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

egid
NOT_EQ

current
MINUS
GREATER

egid
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

mm
MINUS
GREATER

dumpable
OP_ASSIGNMENT

suid_dumpable
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

egid
OP_ASSIGNMENT

egid
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

fsgid
OP_ASSIGNMENT

current
MINUS
GREATER

egid
SEMICOLON
IF
BRACKET_O

rgid
NOT_EQ
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C

current
MINUS
GREATER

gid
OP_ASSIGNMENT

rgid
SEMICOLON
IF
BRACKET_O

sgid
NOT_EQ
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
BRACKET_C

current
MINUS
GREATER

sgid
OP_ASSIGNMENT

sgid
SEMICOLON

key_fsgid_changed
BRACKET_O

current
BRACKET_C
SEMICOLON

proc_id_connector
BRACKET_O

current
COMMA

PROC_EVENT_GID
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getresgid
BRACKET_O

gid_t

__user
MULT

rgid
COMMA

gid_t

__user
MULT

egid
COMMA

gid_t

__user
MULT

sgid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

retval
OP_ASSIGNMENT

put_user
BRACKET_O

current
MINUS
GREATER

gid
COMMA

rgid
BRACKET_C
BRACKET_C
AND
NOT
BRACKET_O

retval
OP_ASSIGNMENT

put_user
BRACKET_O

current
MINUS
GREATER

egid
COMMA

egid
BRACKET_C
BRACKET_C
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

current
MINUS
GREATER

sgid
COMMA

sgid
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setfsuid
BRACKET_O

uid_t

uid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

old_fsuid
SEMICOLON

old_fsuid
OP_ASSIGNMENT

current
MINUS
GREATER

fsuid
SEMICOLON
IF
BRACKET_O

security_task_setuid
BRACKET_O

uid
COMMA
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
COMMA
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
COMMA

LSM_SETID_FS
BRACKET_C
BRACKET_C

return

old_fsuid
SEMICOLON
IF
BRACKET_O

uid
EQ

current
MINUS
GREATER

uid
OR

uid
EQ

current
MINUS
GREATER

euid
OR

uid
EQ

current
MINUS
GREATER

suid
OR

uid
EQ

current
MINUS
GREATER

fsuid
OR

capable
BRACKET_O

CAP_SETUID
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

uid
NOT_EQ

old_fsuid
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

mm
MINUS
GREATER

dumpable
OP_ASSIGNMENT

suid_dumpable
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

fsuid
OP_ASSIGNMENT

uid
SEMICOLON
CURLY_BRACKET_C

key_fsuid_changed
BRACKET_O

current
BRACKET_C
SEMICOLON

proc_id_connector
BRACKET_O

current
COMMA

PROC_EVENT_UID
BRACKET_C
SEMICOLON

security_task_post_setuid
BRACKET_O

old_fsuid
COMMA
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
COMMA
BRACKET_O

uid_t
BRACKET_C
MINUS
NUMBER
COMMA

LSM_SETID_FS
BRACKET_C
SEMICOLON

return

old_fsuid
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setfsgid
BRACKET_O

gid_t

gid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

old_fsgid
SEMICOLON

old_fsgid
OP_ASSIGNMENT

current
MINUS
GREATER

fsgid
SEMICOLON
IF
BRACKET_O

security_task_setgid
BRACKET_O

gid
COMMA
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
COMMA
BRACKET_O

gid_t
BRACKET_C
MINUS
NUMBER
COMMA

LSM_SETID_FS
BRACKET_C
BRACKET_C

return

old_fsgid
SEMICOLON
IF
BRACKET_O

gid
EQ

current
MINUS
GREATER

gid
OR

gid
EQ

current
MINUS
GREATER

egid
OR

gid
EQ

current
MINUS
GREATER

sgid
OR

gid
EQ

current
MINUS
GREATER

fsgid
OR

capable
BRACKET_O

CAP_SETGID
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

gid
NOT_EQ

old_fsgid
BRACKET_C
CURLY_BRACKET_O

current
MINUS
GREATER

mm
MINUS
GREATER

dumpable
OP_ASSIGNMENT

suid_dumpable
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

fsgid
OP_ASSIGNMENT

gid
SEMICOLON

key_fsgid_changed
BRACKET_O

current
BRACKET_C
SEMICOLON

proc_id_connector
BRACKET_O

current
COMMA

PROC_EVENT_GID
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

old_fsgid
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_times
BRACKET_O
STRUCT

tms

__user
MULT

tbuf
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

tbuf
BRACKET_C
CURLY_BRACKET_O
STRUCT

tms

tmp
SEMICOLON
STRUCT

task_struct
MULT

tsk
OP_ASSIGNMENT

current
SEMICOLON
STRUCT

task_struct
MULT

t
SEMICOLON

cputime_t

utime
COMMA

stime
COMMA

cutime
COMMA

cstime
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

utime
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

utime
SEMICOLON

stime
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

stime
SEMICOLON

t
OP_ASSIGNMENT

tsk
SEMICOLON
DO
CURLY_BRACKET_O

utime
OP_ASSIGNMENT

cputime_add
BRACKET_O

utime
COMMA

t
MINUS
GREATER

utime
BRACKET_C
SEMICOLON

stime
OP_ASSIGNMENT

cputime_add
BRACKET_O

stime
COMMA

t
MINUS
GREATER

stime
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

tsk
BRACKET_C
SEMICOLON

cutime
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

cutime
SEMICOLON

cstime
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
MINUS
GREATER

cstime
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

tmp
DOT

tms_utime
OP_ASSIGNMENT

cputime_to_clock_t
BRACKET_O

utime
BRACKET_C
SEMICOLON

tmp
DOT

tms_stime
OP_ASSIGNMENT

cputime_to_clock_t
BRACKET_O

stime
BRACKET_C
SEMICOLON

tmp
DOT

tms_cutime
OP_ASSIGNMENT

cputime_to_clock_t
BRACKET_O

cutime
BRACKET_C
SEMICOLON

tmp
DOT

tms_cstime
OP_ASSIGNMENT

cputime_to_clock_t
BRACKET_O

cstime
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

tbuf
COMMA
AMPERSANT

tmp
COMMA

sizeof
BRACKET_O
STRUCT

tms
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return
BRACKET_O
TYPE_LONG
BRACKET_C

jiffies_64_to_clock_t
BRACKET_O

get_jiffies_64
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setpgid
BRACKET_O

pid_t

pid
COMMA

pid_t

pgid
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
SEMICOLON
STRUCT

task_struct
MULT

group_leader
OP_ASSIGNMENT

current
MINUS
GREATER

group_leader
SEMICOLON
TYPE_INT

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
NOT

pid
BRACKET_C

pid
OP_ASSIGNMENT

group_leader
MINUS
GREATER

pid
SEMICOLON
IF
BRACKET_O
NOT

pgid
BRACKET_C

pgid
OP_ASSIGNMENT

pid
SEMICOLON
IF
BRACKET_O

pgid
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

p
BRACKET_C

goto

out
SEMICOLON

err
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
NOT

thread_group_leader
BRACKET_O

p
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

real_parent
MINUS
GREATER

tgid
EQ

group_leader
MINUS
GREATER

tgid
BRACKET_C
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

task_session
BRACKET_O

p
BRACKET_C
NOT_EQ

task_session
BRACKET_O

group_leader
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

err
OP_ASSIGNMENT
MINUS

EACCES
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

did_exec
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

err
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON
IF
BRACKET_O

p
NOT_EQ

group_leader
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

err
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

p
MINUS
GREATER

signal
MINUS
GREATER

leader
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

pgid
NOT_EQ

pid
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

g
OP_ASSIGNMENT

find_task_by_pid_type
BRACKET_O

PIDTYPE_PGID
COMMA

pgid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

g
OR

task_session
BRACKET_O

g
BRACKET_C
NOT_EQ

task_session
BRACKET_O

group_leader
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

err
OP_ASSIGNMENT

security_task_setpgid
BRACKET_O

p
COMMA

pgid
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

process_group
BRACKET_O

p
BRACKET_C
NOT_EQ

pgid
BRACKET_C
CURLY_BRACKET_O

detach_pid
BRACKET_O

p
COMMA

PIDTYPE_PGID
BRACKET_C
SEMICOLON

p
MINUS
GREATER

signal
MINUS
GREATER

pgrp
OP_ASSIGNMENT

pgid
SEMICOLON

attach_pid
BRACKET_O

p
COMMA

PIDTYPE_PGID
COMMA

find_pid
BRACKET_O

pgid
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

err
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getpgid
BRACKET_O

pid_t

pid
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

pid
BRACKET_C

return

process_group
BRACKET_O

current
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON
IF
BRACKET_O

p
BRACKET_C
CURLY_BRACKET_O

retval
OP_ASSIGNMENT

security_task_getpgid
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

process_group
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_IFDEF

__ARCH_WANT_SYS_GETPGRP

asmlinkage
TYPE_LONG

sys_getpgrp
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

process_group
BRACKET_O

current
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

asmlinkage
TYPE_LONG

sys_getsid
BRACKET_O

pid_t

pid
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

pid
BRACKET_C

return

process_session
BRACKET_O

current
BRACKET_C
SEMICOLON
ELSE
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

p
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON

retval
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON
IF
BRACKET_O

p
BRACKET_C
CURLY_BRACKET_O

retval
OP_ASSIGNMENT

security_task_getsid
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

retval
BRACKET_C

retval
OP_ASSIGNMENT

process_session
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setsid
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

group_leader
OP_ASSIGNMENT

current
MINUS
GREATER

group_leader
SEMICOLON

pid_t

session
SEMICOLON
TYPE_INT

err
OP_ASSIGNMENT
MINUS

EPERM
SEMICOLON

write_lock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

group_leader
MINUS
GREATER

signal
MINUS
GREATER

leader
BRACKET_C

goto

out
SEMICOLON

session
OP_ASSIGNMENT

group_leader
MINUS
GREATER

pid
SEMICOLON
IF
BRACKET_O

session
GREATER
NUMBER
AND

find_task_by_pid_type
BRACKET_O

PIDTYPE_PGID
COMMA

session
BRACKET_C
BRACKET_C

goto

out
SEMICOLON

group_leader
MINUS
GREATER

signal
MINUS
GREATER

leader
OP_ASSIGNMENT
NUMBER
SEMICOLON

__set_special_pids
BRACKET_O

session
COMMA

session
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

group_leader
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

group_leader
MINUS
GREATER

signal
MINUS
GREATER

tty
OP_ASSIGNMENT

NULL
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

group_leader
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

process_group
BRACKET_O

group_leader
BRACKET_C
SEMICOLON

out
COLON

write_unlock_irq
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

return

err
SEMICOLON
CURLY_BRACKET_C
STRUCT

group_info

init_groups
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

usage
OP_ASSIGNMENT

ATOMIC_INIT
BRACKET_O
NUMBER
BRACKET_C
CURLY_BRACKET_C
SEMICOLON
STRUCT

group_info
MULT

groups_alloc
BRACKET_O
TYPE_INT

gidsetsize
BRACKET_C
CURLY_BRACKET_O
STRUCT

group_info
MULT

group_info
SEMICOLON
TYPE_INT

nblocks
SEMICOLON
TYPE_INT

i
SEMICOLON

nblocks
OP_ASSIGNMENT
BRACKET_O

gidsetsize
PLUS

NGROUPS_PER_BLOCK
MINUS
NUMBER
BRACKET_C
DIV

NGROUPS_PER_BLOCK
SEMICOLON

nblocks
OP_ASSIGNMENT

nblocks
QUESTION_MARK
COLON
NUMBER
SEMICOLON

group_info
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
MULT

group_info
BRACKET_C
PLUS

nblocks
MULT

sizeof
BRACKET_O

gid_t
MULT
BRACKET_C
COMMA

GFP_USER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

group_info
BRACKET_C

return

NULL
SEMICOLON

group_info
MINUS
GREATER

ngroups
OP_ASSIGNMENT

gidsetsize
SEMICOLON

group_info
MINUS
GREATER

nblocks
OP_ASSIGNMENT

nblocks
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

group_info
MINUS
GREATER

usage
COMMA
NUMBER
BRACKET_C
SEMICOLON
IF
BRACKET_O

gidsetsize
LE_EQ

NGROUPS_SMALL
BRACKET_C

group_info
MINUS
GREATER

blocks
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

group_info
MINUS
GREATER

small_block
SEMICOLON
ELSE
CURLY_BRACKET_O
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

nblocks
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

gid_t
MULT

b
SEMICOLON

b
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C

__get_free_page
BRACKET_O

GFP_USER
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

b
BRACKET_C

goto

out_undo_partial_alloc
SEMICOLON

group_info
MINUS
GREATER

blocks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
OP_ASSIGNMENT

b
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

group_info
SEMICOLON

out_undo_partial_alloc
COLON
WHILE
BRACKET_O
MINUS
MINUS

i
GR_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

free_page
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

group_info
MINUS
GREATER

blocks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

kfree
BRACKET_O

group_info
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

groups_alloc
BRACKET_C
SEMICOLON

void

groups_free
BRACKET_O
STRUCT

group_info
MULT

group_info
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

group_info
MINUS
GREATER

blocks
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
NOT_EQ

group_info
MINUS
GREATER

small_block
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

group_info
MINUS
GREATER

nblocks
SEMICOLON

i
PLUS
PLUS
BRACKET_C

free_page
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

group_info
MINUS
GREATER

blocks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

kfree
BRACKET_O

group_info
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

groups_free
BRACKET_C
SEMICOLON

static
TYPE_INT

groups_to_user
BRACKET_O

gid_t

__user
MULT

grouplist
COMMA
STRUCT

group_info
MULT

group_info
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
TYPE_INT

count
OP_ASSIGNMENT

group_info
MINUS
GREATER

ngroups
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

group_info
MINUS
GREATER

nblocks
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cp_count
OP_ASSIGNMENT

min
BRACKET_O

NGROUPS_PER_BLOCK
COMMA

count
BRACKET_C
SEMICOLON
TYPE_INT

off
OP_ASSIGNMENT

i
MULT

NGROUPS_PER_BLOCK
SEMICOLON
TYPE_INT

len
OP_ASSIGNMENT

cp_count
MULT

sizeof
BRACKET_O
MULT

grouplist
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

grouplist
PLUS

off
COMMA

group_info
MINUS
GREATER

blocks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

count
ASSIGN_MINUS

cp_count
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

groups_from_user
BRACKET_O
STRUCT

group_info
MULT

group_info
COMMA

gid_t

__user
MULT

grouplist
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
TYPE_INT

count
OP_ASSIGNMENT

group_info
MINUS
GREATER

ngroups
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

group_info
MINUS
GREATER

nblocks
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cp_count
OP_ASSIGNMENT

min
BRACKET_O

NGROUPS_PER_BLOCK
COMMA

count
BRACKET_C
SEMICOLON
TYPE_INT

off
OP_ASSIGNMENT

i
MULT

NGROUPS_PER_BLOCK
SEMICOLON
TYPE_INT

len
OP_ASSIGNMENT

cp_count
MULT

sizeof
BRACKET_O
MULT

grouplist
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O

group_info
MINUS
GREATER

blocks
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

grouplist
PLUS

off
COMMA

len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

count
ASSIGN_MINUS

cp_count
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

groups_sort
BRACKET_O
STRUCT

group_info
MULT

group_info
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

base
COMMA

max
COMMA

stride
SEMICOLON
TYPE_INT

gidsetsize
OP_ASSIGNMENT

group_info
MINUS
GREATER

ngroups
SEMICOLON
FOR
BRACKET_O

stride
OP_ASSIGNMENT
NUMBER
SEMICOLON

stride
LESS

gidsetsize
SEMICOLON

stride
OP_ASSIGNMENT
NUMBER
MULT

stride
PLUS
NUMBER
BRACKET_C
SEMICOLON

stride
ASSIGN_DIV
NUMBER
SEMICOLON
WHILE
BRACKET_O

stride
BRACKET_C
CURLY_BRACKET_O

max
OP_ASSIGNMENT

gidsetsize
MINUS

stride
SEMICOLON
FOR
BRACKET_O

base
OP_ASSIGNMENT
NUMBER
SEMICOLON

base
LESS

max
SEMICOLON

base
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

left
OP_ASSIGNMENT

base
SEMICOLON
TYPE_INT

right
OP_ASSIGNMENT

left
PLUS

stride
SEMICOLON

gid_t

tmp
OP_ASSIGNMENT

GROUP_AT
BRACKET_O

group_info
COMMA

right
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

left
GR_EQ
NUMBER
AND

GROUP_AT
BRACKET_O

group_info
COMMA

left
BRACKET_C
GREATER

tmp
BRACKET_C
CURLY_BRACKET_O

GROUP_AT
BRACKET_O

group_info
COMMA

right
BRACKET_C
OP_ASSIGNMENT

GROUP_AT
BRACKET_O

group_info
COMMA

left
BRACKET_C
SEMICOLON

right
OP_ASSIGNMENT

left
SEMICOLON

left
ASSIGN_MINUS

stride
SEMICOLON
CURLY_BRACKET_C

GROUP_AT
BRACKET_O

group_info
COMMA

right
BRACKET_C
OP_ASSIGNMENT

tmp
SEMICOLON
CURLY_BRACKET_C

stride
ASSIGN_DIV
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
TYPE_INT

groups_search
BRACKET_O
STRUCT

group_info
MULT

group_info
COMMA

gid_t

grp
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

left
COMMA

right
SEMICOLON
IF
BRACKET_O
NOT

group_info
BRACKET_C

return
NUMBER
SEMICOLON

left
OP_ASSIGNMENT
NUMBER
SEMICOLON

right
OP_ASSIGNMENT

group_info
MINUS
GREATER

ngroups
SEMICOLON
WHILE
BRACKET_O

left
LESS

right
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

mid
OP_ASSIGNMENT
BRACKET_O

left
PLUS

right
BRACKET_C
DIV
NUMBER
SEMICOLON
TYPE_INT

cmp
OP_ASSIGNMENT

grp
MINUS

GROUP_AT
BRACKET_O

group_info
COMMA

mid
BRACKET_C
SEMICOLON
IF
BRACKET_O

cmp
GREATER
NUMBER
BRACKET_C

left
OP_ASSIGNMENT

mid
PLUS
NUMBER
SEMICOLON
ELSE
IF
BRACKET_O

cmp
LESS
NUMBER
BRACKET_C

right
OP_ASSIGNMENT

mid
SEMICOLON
ELSE

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

set_current_groups
BRACKET_O
STRUCT

group_info
MULT

group_info
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON
STRUCT

group_info
MULT

old_info
SEMICOLON

retval
OP_ASSIGNMENT

security_task_setgroups
BRACKET_O

group_info
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON

groups_sort
BRACKET_O

group_info
BRACKET_C
SEMICOLON

get_group_info
BRACKET_O

group_info
BRACKET_C
SEMICOLON

task_lock
BRACKET_O

current
BRACKET_C
SEMICOLON

old_info
OP_ASSIGNMENT

current
MINUS
GREATER

group_info
SEMICOLON

current
MINUS
GREATER

group_info
OP_ASSIGNMENT

group_info
SEMICOLON

task_unlock
BRACKET_O

current
BRACKET_C
SEMICOLON

put_group_info
BRACKET_O

old_info
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

set_current_groups
BRACKET_C
SEMICOLON

asmlinkage
TYPE_LONG

sys_getgroups
BRACKET_O
TYPE_INT

gidsetsize
COMMA

gid_t

__user
MULT

grouplist
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

gidsetsize
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

i
OP_ASSIGNMENT

current
MINUS
GREATER

group_info
MINUS
GREATER

ngroups
SEMICOLON
IF
BRACKET_O

gidsetsize
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

i
GREATER

gidsetsize
BRACKET_C
CURLY_BRACKET_O

i
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

groups_to_user
BRACKET_O

grouplist
COMMA

current
MINUS
GREATER

group_info
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

i
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

out
COLON

return

i
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setgroups
BRACKET_O
TYPE_INT

gidsetsize
COMMA

gid_t

__user
MULT

grouplist
BRACKET_C
CURLY_BRACKET_O
STRUCT

group_info
MULT

group_info
SEMICOLON
TYPE_INT

retval
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SETGID
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
BRACKET_C

gidsetsize
GREATER

NGROUPS_MAX
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

group_info
OP_ASSIGNMENT

groups_alloc
BRACKET_O

gidsetsize
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

group_info
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

retval
OP_ASSIGNMENT

groups_from_user
BRACKET_O

group_info
COMMA

grouplist
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C
CURLY_BRACKET_O

put_group_info
BRACKET_O

group_info
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

retval
OP_ASSIGNMENT

set_current_groups
BRACKET_O

group_info
BRACKET_C
SEMICOLON

put_group_info
BRACKET_O

group_info
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

in_group_p
BRACKET_O

gid_t

grp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

grp
NOT_EQ

current
MINUS
GREATER

fsgid
BRACKET_C

retval
OP_ASSIGNMENT

groups_search
BRACKET_O

current
MINUS
GREATER

group_info
COMMA

grp
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

in_group_p
BRACKET_C
SEMICOLON
TYPE_INT

in_egroup_p
BRACKET_O

gid_t

grp
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

grp
NOT_EQ

current
MINUS
GREATER

egid
BRACKET_C

retval
OP_ASSIGNMENT

groups_search
BRACKET_O

current
MINUS
GREATER

group_info
COMMA

grp
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

in_egroup_p
BRACKET_C
SEMICOLON

DECLARE_RWSEM
BRACKET_O

uts_sem
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

uts_sem
BRACKET_C
SEMICOLON

asmlinkage
TYPE_LONG

sys_newuname
BRACKET_O
STRUCT

new_utsname

__user
MULT

name
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

errno
OP_ASSIGNMENT
NUMBER
SEMICOLON

down_read
BRACKET_O
AMPERSANT

uts_sem
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

name
COMMA

utsname
BRACKET_O
BRACKET_C
COMMA

sizeof
MULT

name
BRACKET_C
BRACKET_C

errno
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

up_read
BRACKET_O
AMPERSANT

uts_sem
BRACKET_C
SEMICOLON

return

errno
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sethostname
BRACKET_O
TYPE_CHAR

__user
MULT

name
COMMA
TYPE_INT

len
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

errno
SEMICOLON
TYPE_CHAR

tmp
CORNER_BRACKET_O

__NEW_UTS_LEN
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SYS_ADMIN
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

len
LESS
NUMBER
OR

len
GREATER

__NEW_UTS_LEN
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

down_write
BRACKET_O
AMPERSANT

uts_sem
BRACKET_C
SEMICOLON

errno
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

copy_from_user
BRACKET_O

tmp
COMMA

name
COMMA

len
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

memcpy
BRACKET_O

utsname
BRACKET_O
BRACKET_C
MINUS
GREATER

nodename
COMMA

tmp
COMMA

len
BRACKET_C
SEMICOLON

utsname
BRACKET_O
BRACKET_C
MINUS
GREATER

nodename
CORNER_BRACKET_O

len
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

errno
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

up_write
BRACKET_O
AMPERSANT

uts_sem
BRACKET_C
SEMICOLON

return

errno
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

__ARCH_WANT_SYS_GETHOSTNAME

asmlinkage
TYPE_LONG

sys_gethostname
BRACKET_O
TYPE_CHAR

__user
MULT

name
COMMA
TYPE_INT

len
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
COMMA

errno
SEMICOLON
IF
BRACKET_O

len
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

down_read
BRACKET_O
AMPERSANT

uts_sem
BRACKET_C
SEMICOLON

i
OP_ASSIGNMENT
NUMBER
PLUS

strlen
BRACKET_O

utsname
BRACKET_O
BRACKET_C
MINUS
GREATER

nodename
BRACKET_C
SEMICOLON
IF
BRACKET_O

i
GREATER

len
BRACKET_C

i
OP_ASSIGNMENT

len
SEMICOLON

errno
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

name
COMMA

utsname
BRACKET_O
BRACKET_C
MINUS
GREATER

nodename
COMMA

i
BRACKET_C
BRACKET_C

errno
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

up_read
BRACKET_O
AMPERSANT

uts_sem
BRACKET_C
SEMICOLON

return

errno
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

asmlinkage
TYPE_LONG

sys_setdomainname
BRACKET_O
TYPE_CHAR

__user
MULT

name
COMMA
TYPE_INT

len
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

errno
SEMICOLON
TYPE_CHAR

tmp
CORNER_BRACKET_O

__NEW_UTS_LEN
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SYS_ADMIN
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

len
LESS
NUMBER
OR

len
GREATER

__NEW_UTS_LEN
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

down_write
BRACKET_O
AMPERSANT

uts_sem
BRACKET_C
SEMICOLON

errno
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

copy_from_user
BRACKET_O

tmp
COMMA

name
COMMA

len
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

memcpy
BRACKET_O

utsname
BRACKET_O
BRACKET_C
MINUS
GREATER

domainname
COMMA

tmp
COMMA

len
BRACKET_C
SEMICOLON

utsname
BRACKET_O
BRACKET_C
MINUS
GREATER

domainname
CORNER_BRACKET_O

len
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

errno
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

up_write
BRACKET_O
AMPERSANT

uts_sem
BRACKET_C
SEMICOLON

return

errno
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getrlimit
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

resource
COMMA
STRUCT

rlimit

__user
MULT

rlim
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

resource
GR_EQ

RLIM_NLIMITS
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
ELSE
CURLY_BRACKET_O
STRUCT

rlimit

value
SEMICOLON

task_lock
BRACKET_O

current
MINUS
GREATER

group_leader
BRACKET_C
SEMICOLON

value
OP_ASSIGNMENT

current
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

resource
CORNER_BRACKET_C
SEMICOLON

task_unlock
BRACKET_O

current
MINUS
GREATER

group_leader
BRACKET_C
SEMICOLON

return

copy_to_user
BRACKET_O

rlim
COMMA
AMPERSANT

value
COMMA

sizeof
BRACKET_O
MULT

rlim
BRACKET_C
BRACKET_C
QUESTION_MARK
MINUS

EFAULT
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
PP_IFDEF

__ARCH_WANT_SYS_OLD_GETRLIMIT

asmlinkage
TYPE_LONG

sys_old_getrlimit
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

resource
COMMA
STRUCT

rlimit

__user
MULT

rlim
BRACKET_C
CURLY_BRACKET_O
STRUCT

rlimit

x
SEMICOLON
IF
BRACKET_O

resource
GR_EQ

RLIM_NLIMITS
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

task_lock
BRACKET_O

current
MINUS
GREATER

group_leader
BRACKET_C
SEMICOLON

x
OP_ASSIGNMENT

current
MINUS
GREATER

signal
MINUS
GREATER

rlim
CORNER_BRACKET_O

resource
CORNER_BRACKET_C
SEMICOLON

task_unlock
BRACKET_O

current
MINUS
GREATER

group_leader
BRACKET_C
SEMICOLON
IF
BRACKET_O

x
DOT

rlim_cur
GREATER
NUMBER

x7FFFFFFF
BRACKET_C

x
DOT

rlim_cur
OP_ASSIGNMENT
NUMBER

x7FFFFFFF
SEMICOLON
IF
BRACKET_O

x
DOT

rlim_max
GREATER
NUMBER

x7FFFFFFF
BRACKET_C

x
DOT

rlim_max
OP_ASSIGNMENT
NUMBER

x7FFFFFFF
SEMICOLON

return

copy_to_user
BRACKET_O

rlim
COMMA
AMPERSANT

x
COMMA

sizeof
BRACKET_O

x
BRACKET_C
BRACKET_C
QUESTION_MARK
MINUS

EFAULT
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

asmlinkage
TYPE_LONG

sys_setrlimit
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

resource
COMMA
STRUCT

rlimit

__user
MULT

rlim
BRACKET_C
CURLY_BRACKET_O
STRUCT

rlimit

new_rlim
COMMA
MULT

old_rlim
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

it_prof_secs
SEMICOLON
TYPE_INT

retval
SEMICOLON
IF
BRACKET_O

resource
GR_EQ

RLIM_NLIMITS
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

new_rlim
COMMA

rlim
COMMA

sizeof
BRACKET_O
MULT

rlim
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

new_rlim
DOT

rlim_cur
GREATER

new_rlim
DOT

rlim_max
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

old_rlim
OP_ASSIGNMENT

current
MINUS
GREATER

signal
MINUS
GREATER

rlim
PLUS

resource
SEMICOLON
IF
BRACKET_O
BRACKET_O

new_rlim
DOT

rlim_max
GREATER

old_rlim
MINUS
GREATER

rlim_max
BRACKET_C
AND
NOT

capable
BRACKET_O

CAP_SYS_RESOURCE
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

resource
EQ

RLIMIT_NOFILE
AND

new_rlim
DOT

rlim_max
GREATER

NR_OPEN
BRACKET_C

return
MINUS

EPERM
SEMICOLON

retval
OP_ASSIGNMENT

security_task_setrlimit
BRACKET_O

resource
COMMA
AMPERSANT

new_rlim
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C

return

retval
SEMICOLON
IF
BRACKET_O

resource
EQ

RLIMIT_CPU
AND

new_rlim
DOT

rlim_cur
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

new_rlim
DOT

rlim_cur
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

task_lock
BRACKET_O

current
MINUS
GREATER

group_leader
BRACKET_C
SEMICOLON
MULT

old_rlim
OP_ASSIGNMENT

new_rlim
SEMICOLON

task_unlock
BRACKET_O

current
MINUS
GREATER

group_leader
BRACKET_C
SEMICOLON
IF
BRACKET_O

resource
NOT_EQ

RLIMIT_CPU
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

new_rlim
DOT

rlim_cur
EQ

RLIM_INFINITY
BRACKET_C

goto

out
SEMICOLON

it_prof_secs
OP_ASSIGNMENT

cputime_to_secs
BRACKET_O

current
MINUS
GREATER

signal
MINUS
GREATER

it_prof_expires
BRACKET_C
SEMICOLON
IF
BRACKET_O

it_prof_secs
EQ
NUMBER
OR

new_rlim
DOT

rlim_cur
LE_EQ

it_prof_secs
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

rlim_cur
OP_ASSIGNMENT

new_rlim
DOT

rlim_cur
SEMICOLON

cputime_t

cputime
SEMICOLON

cputime
OP_ASSIGNMENT

secs_to_cputime
BRACKET_O

rlim_cur
BRACKET_C
SEMICOLON

read_lock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

set_process_cpu_timer
BRACKET_O

current
COMMA

CPUCLOCK_PROF
COMMA
AMPERSANT

cputime
COMMA

NULL
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

read_unlock
BRACKET_O
AMPERSANT

tasklist_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

out
COLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

k_getrusage
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

who
COMMA
STRUCT

rusage
MULT

r
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

t
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

cputime_t

utime
COMMA

stime
SEMICOLON

memset
BRACKET_O
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

r
COMMA
NUMBER
COMMA

sizeof
MULT

r
BRACKET_C
SEMICOLON

utime
OP_ASSIGNMENT

stime
OP_ASSIGNMENT

cputime_zero
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

lock_task_sighand
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C
SWITCH
BRACKET_O

who
BRACKET_C
CURLY_BRACKET_O

case

RUSAGE_BOTH
COLON

case

RUSAGE_CHILDREN
COLON

utime
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

cutime
SEMICOLON

stime
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

cstime
SEMICOLON

r
MINUS
GREATER

ru_nvcsw
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

cnvcsw
SEMICOLON

r
MINUS
GREATER

ru_nivcsw
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

cnivcsw
SEMICOLON

r
MINUS
GREATER

ru_minflt
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

cmin_flt
SEMICOLON

r
MINUS
GREATER

ru_majflt
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

cmaj_flt
SEMICOLON

r
MINUS
GREATER

ru_inblock
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

cinblock
SEMICOLON

r
MINUS
GREATER

ru_oublock
OP_ASSIGNMENT

p
MINUS
GREATER

signal
MINUS
GREATER

coublock
SEMICOLON
IF
BRACKET_O

who
EQ

RUSAGE_CHILDREN
BRACKET_C
BREAK
SEMICOLON

case

RUSAGE_SELF
COLON

utime
OP_ASSIGNMENT

cputime_add
BRACKET_O

utime
COMMA

p
MINUS
GREATER

signal
MINUS
GREATER

utime
BRACKET_C
SEMICOLON

stime
OP_ASSIGNMENT

cputime_add
BRACKET_O

stime
COMMA

p
MINUS
GREATER

signal
MINUS
GREATER

stime
BRACKET_C
SEMICOLON

r
MINUS
GREATER

ru_nvcsw
ASSIGN_PLUS

p
MINUS
GREATER

signal
MINUS
GREATER

nvcsw
SEMICOLON

r
MINUS
GREATER

ru_nivcsw
ASSIGN_PLUS

p
MINUS
GREATER

signal
MINUS
GREATER

nivcsw
SEMICOLON

r
MINUS
GREATER

ru_minflt
ASSIGN_PLUS

p
MINUS
GREATER

signal
MINUS
GREATER

min_flt
SEMICOLON

r
MINUS
GREATER

ru_majflt
ASSIGN_PLUS

p
MINUS
GREATER

signal
MINUS
GREATER

maj_flt
SEMICOLON

r
MINUS
GREATER

ru_inblock
ASSIGN_PLUS

p
MINUS
GREATER

signal
MINUS
GREATER

inblock
SEMICOLON

r
MINUS
GREATER

ru_oublock
ASSIGN_PLUS

p
MINUS
GREATER

signal
MINUS
GREATER

oublock
SEMICOLON

t
OP_ASSIGNMENT

p
SEMICOLON
DO
CURLY_BRACKET_O

utime
OP_ASSIGNMENT

cputime_add
BRACKET_O

utime
COMMA

t
MINUS
GREATER

utime
BRACKET_C
SEMICOLON

stime
OP_ASSIGNMENT

cputime_add
BRACKET_O

stime
COMMA

t
MINUS
GREATER

stime
BRACKET_C
SEMICOLON

r
MINUS
GREATER

ru_nvcsw
ASSIGN_PLUS

t
MINUS
GREATER

nvcsw
SEMICOLON

r
MINUS
GREATER

ru_nivcsw
ASSIGN_PLUS

t
MINUS
GREATER

nivcsw
SEMICOLON

r
MINUS
GREATER

ru_minflt
ASSIGN_PLUS

t
MINUS
GREATER

min_flt
SEMICOLON

r
MINUS
GREATER

ru_majflt
ASSIGN_PLUS

t
MINUS
GREATER

maj_flt
SEMICOLON

r
MINUS
GREATER

ru_inblock
ASSIGN_PLUS

task_io_get_inblock
BRACKET_O

t
BRACKET_C
SEMICOLON

r
MINUS
GREATER

ru_oublock
ASSIGN_PLUS

task_io_get_oublock
BRACKET_O

t
BRACKET_C
SEMICOLON

t
OP_ASSIGNMENT

next_thread
BRACKET_O

t
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

t
NOT_EQ

p
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON

BUG
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

unlock_task_sighand
BRACKET_O

p
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

cputime_to_timeval
BRACKET_O

utime
COMMA
AMPERSANT

r
MINUS
GREATER

ru_utime
BRACKET_C
SEMICOLON

cputime_to_timeval
BRACKET_O

stime
COMMA
AMPERSANT

r
MINUS
GREATER

ru_stime
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

getrusage
BRACKET_O
STRUCT

task_struct
MULT

p
COMMA
TYPE_INT

who
COMMA
STRUCT

rusage

__user
MULT

ru
BRACKET_C
CURLY_BRACKET_O
STRUCT

rusage

r
SEMICOLON

k_getrusage
BRACKET_O

p
COMMA

who
COMMA
AMPERSANT

r
BRACKET_C
SEMICOLON

return

copy_to_user
BRACKET_O

ru
COMMA
AMPERSANT

r
COMMA

sizeof
BRACKET_O

r
BRACKET_C
BRACKET_C
QUESTION_MARK
MINUS

EFAULT
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getrusage
BRACKET_O
TYPE_INT

who
COMMA
STRUCT

rusage

__user
MULT

ru
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

who
NOT_EQ

RUSAGE_SELF
AND

who
NOT_EQ

RUSAGE_CHILDREN
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

return

getrusage
BRACKET_O

current
COMMA

who
COMMA

ru
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_umask
BRACKET_O
TYPE_INT

mask
BRACKET_C
CURLY_BRACKET_O

mask
OP_ASSIGNMENT

xchg
BRACKET_O
AMPERSANT

current
MINUS
GREATER

fs
MINUS
GREATER

umask
COMMA

mask
AMPERSANT

S_IRWXUGO
BRACKET_C
SEMICOLON

return

mask
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_prctl
BRACKET_O
TYPE_INT

option
COMMA
TYPE_UNSIGNED
TYPE_LONG

arg2
COMMA
TYPE_UNSIGNED
TYPE_LONG

arg3
COMMA
TYPE_UNSIGNED
TYPE_LONG

arg4
COMMA
TYPE_UNSIGNED
TYPE_LONG

arg5
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

error
SEMICOLON

error
OP_ASSIGNMENT

security_task_prctl
BRACKET_O

option
COMMA

arg2
COMMA

arg3
COMMA

arg4
COMMA

arg5
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C

return

error
SEMICOLON
SWITCH
BRACKET_O

option
BRACKET_C
CURLY_BRACKET_O

case

PR_SET_PDEATHSIG
COLON
IF
BRACKET_O
NOT

valid_signal
BRACKET_O

arg2
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

pdeath_signal
OP_ASSIGNMENT

arg2
SEMICOLON
BREAK
SEMICOLON

case

PR_GET_PDEATHSIG
COLON

error
OP_ASSIGNMENT

put_user
BRACKET_O

current
MINUS
GREATER

pdeath_signal
COMMA
BRACKET_O
TYPE_INT

__user
MULT
BRACKET_C

arg2
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PR_GET_DUMPABLE
COLON

error
OP_ASSIGNMENT

current
MINUS
GREATER

mm
MINUS
GREATER

dumpable
SEMICOLON
BREAK
SEMICOLON

case

PR_SET_DUMPABLE
COLON
IF
BRACKET_O

arg2
LESS
NUMBER
OR

arg2
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

mm
MINUS
GREATER

dumpable
OP_ASSIGNMENT

arg2
SEMICOLON
BREAK
SEMICOLON

case

PR_SET_UNALIGN
COLON

error
OP_ASSIGNMENT

SET_UNALIGN_CTL
BRACKET_O

current
COMMA

arg2
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PR_GET_UNALIGN
COLON

error
OP_ASSIGNMENT

GET_UNALIGN_CTL
BRACKET_O

current
COMMA

arg2
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PR_SET_FPEMU
COLON

error
OP_ASSIGNMENT

SET_FPEMU_CTL
BRACKET_O

current
COMMA

arg2
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PR_GET_FPEMU
COLON

error
OP_ASSIGNMENT

GET_FPEMU_CTL
BRACKET_O

current
COMMA

arg2
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PR_SET_FPEXC
COLON

error
OP_ASSIGNMENT

SET_FPEXC_CTL
BRACKET_O

current
COMMA

arg2
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PR_GET_FPEXC
COLON

error
OP_ASSIGNMENT

GET_FPEXC_CTL
BRACKET_O

current
COMMA

arg2
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PR_GET_TIMING
COLON

error
OP_ASSIGNMENT

PR_TIMING_STATISTICAL
SEMICOLON
BREAK
SEMICOLON

case

PR_SET_TIMING
COLON
IF
BRACKET_O

arg2
EQ

PR_TIMING_STATISTICAL
BRACKET_C

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
ELSE

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
BREAK
SEMICOLON

case

PR_GET_KEEPCAPS
COLON
IF
BRACKET_O

current
MINUS
GREATER

keep_capabilities
BRACKET_C

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
BREAK
SEMICOLON

case

PR_SET_KEEPCAPS
COLON
IF
BRACKET_O

arg2
NOT_EQ
NUMBER
AND

arg2
NOT_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

current
MINUS
GREATER

keep_capabilities
OP_ASSIGNMENT

arg2
SEMICOLON
BREAK
SEMICOLON

case

PR_SET_NAME
COLON
CURLY_BRACKET_O
STRUCT

task_struct
MULT

me
OP_ASSIGNMENT

current
SEMICOLON
TYPE_UNSIGNED
TYPE_CHAR

ncomm
CORNER_BRACKET_O

sizeof
BRACKET_O

me
MINUS
GREATER

comm
BRACKET_C
CORNER_BRACKET_C
SEMICOLON

ncomm
CORNER_BRACKET_O

sizeof
BRACKET_O

me
MINUS
GREATER

comm
BRACKET_C
MINUS
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

strncpy_from_user
BRACKET_O

ncomm
COMMA
BRACKET_O
TYPE_CHAR

__user
MULT
BRACKET_C

arg2
COMMA

sizeof
BRACKET_O

me
MINUS
GREATER

comm
BRACKET_C
MINUS
NUMBER
BRACKET_C
LESS
NUMBER
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

set_task_comm
BRACKET_O

me
COMMA

ncomm
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

case

PR_GET_NAME
COLON
CURLY_BRACKET_O
STRUCT

task_struct
MULT

me
OP_ASSIGNMENT

current
SEMICOLON
TYPE_UNSIGNED
TYPE_CHAR

tcomm
CORNER_BRACKET_O

sizeof
BRACKET_O

me
MINUS
GREATER

comm
BRACKET_C
CORNER_BRACKET_C
SEMICOLON

get_task_comm
BRACKET_O

tcomm
COMMA

me
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O
BRACKET_O
TYPE_CHAR

__user
MULT
BRACKET_C

arg2
COMMA

tcomm
COMMA

sizeof
BRACKET_O

tcomm
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

case

PR_GET_ENDIAN
COLON

error
OP_ASSIGNMENT

GET_ENDIAN
BRACKET_O

current
COMMA

arg2
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

PR_SET_ENDIAN
COLON

error
OP_ASSIGNMENT

SET_ENDIAN
BRACKET_O

current
COMMA

arg2
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

default
COLON

error
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

error
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getcpu
BRACKET_O
TYPE_UNSIGNED

__user
MULT

cpup
COMMA
TYPE_UNSIGNED

__user
MULT

nodep
COMMA
STRUCT

getcpu_cache

__user
MULT

cache
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

cpu
OP_ASSIGNMENT

raw_smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

cpup
BRACKET_C

err
LOGICAL_OR
OP_ASSIGNMENT

put_user
BRACKET_O

cpu
COMMA

cpup
BRACKET_C
SEMICOLON
IF
BRACKET_O

nodep
BRACKET_C

err
LOGICAL_OR
OP_ASSIGNMENT

put_user
BRACKET_O

cpu_to_node
BRACKET_O

cpu
BRACKET_C
COMMA

nodep
BRACKET_C
SEMICOLON
IF
BRACKET_O

cache
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

t0
COMMA

t1
SEMICOLON

get_user
BRACKET_O

t0
COMMA
AMPERSANT

cache
MINUS
GREATER

blob
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

get_user
BRACKET_O

t1
COMMA
AMPERSANT

cache
MINUS
GREATER

blob
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

t0
PLUS
PLUS
SEMICOLON

t1
PLUS
PLUS
SEMICOLON

put_user
BRACKET_O

t0
COMMA
AMPERSANT

cache
MINUS
GREATER

blob
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

put_user
BRACKET_O

t1
COMMA
AMPERSANT

cache
MINUS
GREATER

blob
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

err
QUESTION_MARK
MINUS

EFAULT
COLON
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

extern
TYPE_INT

proc_nr_files
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_X86
PP_INCLUDE
PP_INCLUDE
PP_ENDIF
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_SYSCTL
BRACKET_C

extern
TYPE_INT

C_A_D
SEMICOLON

extern
TYPE_INT

sysctl_overcommit_memory
SEMICOLON

extern
TYPE_INT

sysctl_overcommit_ratio
SEMICOLON

extern
TYPE_INT

sysctl_panic_on_oom
SEMICOLON

extern
TYPE_INT

max_threads
SEMICOLON

extern
TYPE_INT

core_uses_pid
SEMICOLON

extern
TYPE_INT

suid_dumpable
SEMICOLON

extern
TYPE_CHAR

core_pattern
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
TYPE_INT

pid_max
SEMICOLON

extern
TYPE_INT

min_free_kbytes
SEMICOLON

extern
TYPE_INT

printk_ratelimit_jiffies
SEMICOLON

extern
TYPE_INT

printk_ratelimit_burst
SEMICOLON

extern
TYPE_INT

pid_max_min
COMMA

pid_max_max
SEMICOLON

extern
TYPE_INT

sysctl_drop_caches
SEMICOLON

extern
TYPE_INT

percpu_pagelist_fraction
SEMICOLON

extern
TYPE_INT

compat_log
SEMICOLON

extern
TYPE_INT

maps_protect
SEMICOLON

extern
TYPE_INT

sysctl_stat_interval
SEMICOLON

static
TYPE_INT

maxolduid
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
TYPE_INT

minolduid
SEMICOLON

static
TYPE_INT

min_percpu_pagelist_fract
OP_ASSIGNMENT
NUMBER
SEMICOLON

static
TYPE_INT

ngroups_max
OP_ASSIGNMENT

NGROUPS_MAX
SEMICOLON
PP_IFDEF

CONFIG_KMOD

extern
TYPE_CHAR

modprobe_path
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_CHR_DEV_SG

extern
TYPE_INT

sg_big_buff
SEMICOLON
PP_ENDIF
PP_IFDEF

__sparc__

extern
TYPE_CHAR

reboot_command
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern
TYPE_INT

stop_a_enabled
SEMICOLON

extern
TYPE_INT

scons_pwroff
SEMICOLON
PP_ENDIF
PP_IFDEF

__hppa__

extern
TYPE_INT

pwrsw_enabled
SEMICOLON

extern
TYPE_INT

unaligned_enabled
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_S390
PP_IFDEF

CONFIG_MATHEMU

extern
TYPE_INT

sysctl_ieee_emulation_warnings
SEMICOLON
PP_ENDIF

extern
TYPE_INT

sysctl_userprocess_debug
SEMICOLON

extern
TYPE_INT

spin_retry
SEMICOLON
PP_ENDIF

extern
TYPE_INT

sysctl_hz_timer
SEMICOLON
PP_IFDEF

CONFIG_BSD_PROCESS_ACCT

extern
TYPE_INT

acct_parm
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_IA64

extern
TYPE_INT

no_unaligned_warning
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_RT_MUTEXES

extern
TYPE_INT

max_lock_depth
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_SYSCTL_SYSCALL

static
TYPE_INT

parse_table
BRACKET_O
TYPE_INT

__user
MULT
COMMA
TYPE_INT
COMMA

void

__user
MULT
COMMA

size_t

__user
MULT
COMMA

void

__user
MULT
COMMA

size_t
COMMA

ctl_table
MULT
BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_PROC_SYSCTL

static
TYPE_INT

proc_do_cad_pid
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
SEMICOLON

static
TYPE_INT

proc_dointvec_taint
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
SEMICOLON
PP_ENDIF

static

ctl_table

root_table
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

static
STRUCT

ctl_table_header

root_table_header
OP_ASSIGNMENT
CURLY_BRACKET_O

root_table
COMMA

LIST_HEAD_INIT
BRACKET_O

root_table_header
DOT

ctl_entry
BRACKET_C
CURLY_BRACKET_C
SEMICOLON

static

ctl_table

kern_table
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

static

ctl_table

vm_table
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

static

ctl_table

fs_table
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

static

ctl_table

debug_table
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

static

ctl_table

dev_table
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON

extern

ctl_table

random_table
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_UNIX98_PTYS

extern

ctl_table

pty_table
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

CONFIG_INOTIFY_USER

extern

ctl_table

inotify_table
CORNER_BRACKET_O
CORNER_BRACKET_C
SEMICOLON
PP_ENDIF
PP_IFDEF

HAVE_ARCH_PICK_MMAP_LAYOUT
TYPE_INT

sysctl_legacy_va_layout
SEMICOLON
PP_ENDIF

static

ctl_table

root_table
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

CTL_KERN
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

child
OP_ASSIGNMENT

kern_table
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

CTL_VM
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

child
OP_ASSIGNMENT

vm_table
COMMA
CURLY_BRACKET_C
COMMA
PP_IFDEF

CONFIG_NET
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

CTL_NET
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

child
OP_ASSIGNMENT

net_table
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

CTL_FS
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

child
OP_ASSIGNMENT

fs_table
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

CTL_DEBUG
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

child
OP_ASSIGNMENT

debug_table
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

CTL_DEV
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

child
OP_ASSIGNMENT

dev_table
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT
NUMBER
CURLY_BRACKET_C
CURLY_BRACKET_C
SEMICOLON

extern
TYPE_INT

affinity_load_balancing
SEMICOLON

static

ctl_table

kern_table
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_PANIC
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

panic_timeout
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_CORE_USES_PID
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

core_uses_pid
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_CORE_PATTERN
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT

core_pattern
COMMA
DOT

maxlen
OP_ASSIGNMENT

CORENAME_MAX_SIZE
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dostring
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_string
COMMA
CURLY_BRACKET_C
COMMA
PP_IFDEF

CONFIG_PROC_SYSCTL
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_TAINTED
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

tainted
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_taint
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_CAP_BSET
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

cap_bset
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

kernel_cap_t
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_bset
COMMA
CURLY_BRACKET_C
COMMA
PP_IFDEF

CONFIG_BLK_DEV_INITRD
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_REALROOTDEV
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

real_root_dev
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

__sparc__
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_SPARC_REBOOT
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT

reboot_command
COMMA
DOT

maxlen
OP_ASSIGNMENT
NUMBER
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dostring
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_string
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_SPARC_STOP_A
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

stop_a_enabled
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_SPARC_SCONS_PWROFF
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

scons_pwroff
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

__hppa__
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_HPPA_PWRSW
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

pwrsw_enabled
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_HPPA_UNALIGNED
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

unaligned_enabled
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_CTLALTDEL
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

C_A_D
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_PRINTK
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

console_loglevel
COMMA
DOT

maxlen
OP_ASSIGNMENT
NUMBER
MULT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_IFDEF

CONFIG_KMOD
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_MODPROBE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

modprobe_path
COMMA
DOT

maxlen
OP_ASSIGNMENT

KMOD_PATH_LEN
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dostring
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_string
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_HOTPLUG
BRACKET_C
AND
PP_DEFINED
BRACKET_O

CONFIG_NET
BRACKET_C
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_HOTPLUG
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

uevent_helper
COMMA
DOT

maxlen
OP_ASSIGNMENT

UEVENT_HELPER_PATH_LEN
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dostring
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_string
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_CHR_DEV_SG
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_SG_BIG_BUFF
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sg_big_buff
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_BSD_PROCESS_ACCT
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_ACCT
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

acct_parm
COMMA
DOT

maxlen
OP_ASSIGNMENT
NUMBER
MULT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_MAGIC_SYSRQ
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_SYSRQ
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

__sysrq_enabled
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_PROC_SYSCTL
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_CADPID
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT

NULL
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_do_cad_pid
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_MAX_THREADS
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

max_threads
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_IFDEF

CONFIG_MODULES
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_UNSUPPORTED
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

unsupported
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_RANDOM
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

child
OP_ASSIGNMENT

random_table
COMMA
CURLY_BRACKET_C
COMMA
PP_IFDEF

CONFIG_UNIX98_PTYS
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_PTY
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

child
OP_ASSIGNMENT

pty_table
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_OVERFLOWUID
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

overflowuid
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_minmax
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

minolduid
COMMA
DOT

extra2
OP_ASSIGNMENT
AMPERSANT

maxolduid
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_OVERFLOWGID
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

overflowgid
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_minmax
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

minolduid
COMMA
DOT

extra2
OP_ASSIGNMENT
AMPERSANT

maxolduid
COMMA
CURLY_BRACKET_C
COMMA
PP_IFDEF

CONFIG_S390
PP_IFDEF

CONFIG_MATHEMU
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_IEEE_EMULATION_WARNINGS
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_ieee_emulation_warnings
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_NO_IDLE_HZ
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_HZ_TIMER
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_hz_timer
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_S390_USER_DEBUG_LOGGING
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_userprocess_debug
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_PIDMAX
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

pid_max
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_minmax
COMMA
DOT

strategy
OP_ASSIGNMENT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

pid_max_min
COMMA
DOT

extra2
OP_ASSIGNMENT
AMPERSANT

pid_max_max
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_PANIC_ON_OOPS
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

panic_on_oops
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_PRINTK_RATELIMIT
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

printk_ratelimit_jiffies
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_jiffies
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_jiffies
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_PRINTK_RATELIMIT_BURST
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

printk_ratelimit_burst
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_NGROUPS_MAX
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

ngroups_max
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_X86_LOCAL_APIC
BRACKET_C
AND
PP_DEFINED
BRACKET_O

CONFIG_X86
BRACKET_C
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_UNKNOWN_NMI_PANIC
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

unknown_nmi_panic
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_IFNDEF

CONFIG_XEN
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_NMI_WATCHDOG
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

nmi_watchdog_enabled
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_nmi_enabled
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_ENDIF
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_X86
BRACKET_C
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_PANIC_ON_NMI
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

panic_on_unrecovered_nmi
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_BOOTLOADER_TYPE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

bootloader_type
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

CTL_UNNUMBERED
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

kstack_depth_to_print
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_MMU
BRACKET_C
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_RANDOMIZE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

randomize_va_space
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_SETUID_DUMPABLE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

suid_dumpable
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_S390
BRACKET_C
AND
PP_DEFINED
BRACKET_O

CONFIG_SMP
BRACKET_C
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_SPIN_RETRY
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

spin_retry
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_ACPI_SLEEP
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_ACPI_VIDEO_FLAGS
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

acpi_video_flags
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_doulongvec_minmax
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_IA64
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_IA64_UNALIGNED
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

no_unaligned_warning
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_COMPAT
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_COMPAT_LOG
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

compat_log
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_RT_MUTEXES
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_MAX_LOCK_DEPTH
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

max_lock_depth
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_PROC_FS
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

CTL_UNNUMBERED
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

maps_protect
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT
NUMBER
CURLY_BRACKET_C
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

zero
SEMICOLON

static
TYPE_INT

one_hundred
OP_ASSIGNMENT
NUMBER
SEMICOLON

static

ctl_table

vm_table
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_OVERCOMMIT_MEMORY
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_overcommit_memory
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

sysctl_overcommit_memory
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_PANIC_ON_OOM
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_panic_on_oom
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

sysctl_panic_on_oom
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_OVERCOMMIT_RATIO
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_overcommit_ratio
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

sysctl_overcommit_ratio
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_PAGE_CLUSTER
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

page_cluster
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_DIRTY_BACKGROUND
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

dirty_background_ratio
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

dirty_background_ratio
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_minmax
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

zero
COMMA
DOT

extra2
OP_ASSIGNMENT
AMPERSANT

one_hundred
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_DIRTY_RATIO
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

vm_dirty_ratio
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

vm_dirty_ratio
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_minmax
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

zero
COMMA
DOT

extra2
OP_ASSIGNMENT
AMPERSANT

one_hundred
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_DIRTY_WB_CS
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

dirty_writeback_interval
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

dirty_writeback_interval
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

dirty_writeback_centisecs_handler
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_DIRTY_EXPIRE_CS
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

dirty_expire_interval
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

dirty_expire_interval
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_userhz_jiffies
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_NR_PDFLUSH_THREADS
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

nr_pdflush_threads
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof

nr_pdflush_threads
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_SWAPPINESS
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

vm_swappiness
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

vm_swappiness
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_minmax
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

zero
COMMA
DOT

extra2
OP_ASSIGNMENT
AMPERSANT

one_hundred
COMMA
CURLY_BRACKET_C
COMMA
PP_IFDEF

CONFIG_HUGETLB_PAGE
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_HUGETLB_PAGES
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

max_huge_pages
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

hugetlb_sysctl_handler
COMMA
DOT

extra1
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C
AMPERSANT

hugetlb_zero
COMMA
DOT

extra2
OP_ASSIGNMENT
BRACKET_O

void
MULT
BRACKET_C
AMPERSANT

hugetlb_infinity
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_HUGETLB_GROUP
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_hugetlb_shm_group
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

gid_t
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_LOWMEM_RESERVE_RATIO
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_lowmem_reserve_ratio
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

sysctl_lowmem_reserve_ratio
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

lowmem_reserve_ratio_sysctl_handler
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_DROP_PAGECACHE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_drop_caches
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT

drop_caches_sysctl_handler
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_MIN_FREE_KBYTES
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

min_free_kbytes
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

min_free_kbytes
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

min_free_kbytes_sysctl_handler
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

zero
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_PERCPU_PAGELIST_FRACTION
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

percpu_pagelist_fraction
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

percpu_pagelist_fraction
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

percpu_pagelist_fraction_sysctl_handler
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

min_percpu_pagelist_fract
COMMA
CURLY_BRACKET_C
COMMA
PP_IFDEF

CONFIG_MMU
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_MAX_MAP_COUNT
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_max_map_count
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

sysctl_max_map_count
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_LAPTOP_MODE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

laptop_mode
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

laptop_mode
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_jiffies
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_jiffies
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_BLOCK_DUMP
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

block_dump
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

block_dump
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

zero
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_VFS_CACHE_PRESSURE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_vfs_cache_pressure
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

sysctl_vfs_cache_pressure
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

zero
COMMA
CURLY_BRACKET_C
COMMA
PP_IFDEF

HAVE_ARCH_PICK_MMAP_LAYOUT
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_LEGACY_VA_LAYOUT
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_legacy_va_layout
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

sysctl_legacy_va_layout
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

zero
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_NUMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_ZONE_RECLAIM_MODE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

zone_reclaim_mode
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

zone_reclaim_mode
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

zero
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_MIN_UNMAPPED
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_min_unmapped_ratio
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

sysctl_min_unmapped_ratio
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

sysctl_min_unmapped_ratio_sysctl_handler
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

zero
COMMA
DOT

extra2
OP_ASSIGNMENT
AMPERSANT

one_hundred
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_MIN_SLAB
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_min_slab_ratio
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

sysctl_min_slab_ratio
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

sysctl_min_slab_ratio_sysctl_handler
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

zero
COMMA
DOT

extra2
OP_ASSIGNMENT
AMPERSANT

one_hundred
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_SMP
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

CTL_UNNUMBERED
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

sysctl_stat_interval
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

sysctl_stat_interval
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_jiffies
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_jiffies
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_X86_32
BRACKET_C
OR
BACKLASHED_NEWLINE
BRACKET_O
PP_DEFINED
BRACKET_O

CONFIG_SUPERH
BRACKET_C
AND
PP_DEFINED
BRACKET_O

CONFIG_VSYSCALL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

VM_VDSO_ENABLED
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

vdso_enabled
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

vdso_enabled
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

zero
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_SMP
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT
MINUS
NUMBER
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

affinity_load_balancing
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

affinity_load_balancing
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT
NUMBER
CURLY_BRACKET_C
CURLY_BRACKET_C
SEMICOLON
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_BINFMT_MISC
BRACKET_C
OR
PP_DEFINED
BRACKET_O

CONFIG_BINFMT_MISC_MODULE
BRACKET_C

static

ctl_table

binfmt_misc_table
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT
NUMBER
CURLY_BRACKET_C
CURLY_BRACKET_C
SEMICOLON
PP_ENDIF

static

ctl_table

fs_table
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_NRINODE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

inodes_stat
COMMA
DOT

maxlen
OP_ASSIGNMENT
NUMBER
MULT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_STATINODE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

inodes_stat
COMMA
DOT

maxlen
OP_ASSIGNMENT
NUMBER
MULT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_NRFILE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

files_stat
COMMA
DOT

maxlen
OP_ASSIGNMENT
NUMBER
MULT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_nr_files
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_MAXFILE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

files_stat
DOT

max_files
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_DENTRY
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

dentry_stat
COMMA
DOT

maxlen
OP_ASSIGNMENT
NUMBER
MULT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_OVERFLOWUID
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

fs_overflowuid
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_minmax
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

minolduid
COMMA
DOT

extra2
OP_ASSIGNMENT
AMPERSANT

maxolduid
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_OVERFLOWGID
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

fs_overflowgid
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec_minmax
COMMA
DOT

strategy
OP_ASSIGNMENT
AMPERSANT

sysctl_intvec
COMMA
DOT

extra1
OP_ASSIGNMENT
AMPERSANT

minolduid
COMMA
DOT

extra2
OP_ASSIGNMENT
AMPERSANT

maxolduid
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_LEASES
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

leases_enable
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_IFDEF

CONFIG_DNOTIFY
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_DIR_NOTIFY
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

dir_notify_enable
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_IFDEF

CONFIG_MMU
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_LEASE_TIME
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

lease_break_time
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_AIO_NR
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

aio_nr
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

aio_nr
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_doulongvec_minmax
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_AIO_MAX_NR
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

aio_max_nr
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

aio_max_nr
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_doulongvec_minmax
COMMA
CURLY_BRACKET_C
COMMA
PP_IFDEF

CONFIG_INOTIFY_USER
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

FS_INOTIFY
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

child
OP_ASSIGNMENT

inotify_table
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_SETUID_DUMPABLE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT
AMPERSANT

suid_dumpable
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT
AMPERSANT

proc_dointvec
COMMA
CURLY_BRACKET_C
COMMA
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_BINFMT_MISC
BRACKET_C
OR
PP_DEFINED
BRACKET_O

CONFIG_BINFMT_MISC_MODULE
BRACKET_C
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

CTL_UNNUMBERED
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

child
OP_ASSIGNMENT

binfmt_misc_table
COMMA
CURLY_BRACKET_C
COMMA
PP_ENDIF
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT
NUMBER
CURLY_BRACKET_C
CURLY_BRACKET_C
SEMICOLON

static

ctl_table

debug_table
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT
NUMBER
CURLY_BRACKET_C
CURLY_BRACKET_C
SEMICOLON

static

ctl_table

dev_table
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT
NUMBER
CURLY_BRACKET_C
CURLY_BRACKET_C
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

sysctl_lock
BRACKET_C
SEMICOLON

static
TYPE_INT

use_table
BRACKET_O
STRUCT

ctl_table_header
MULT

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

unregistering
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

p
MINUS
GREATER

used
PLUS
PLUS
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

unuse_table
BRACKET_O
STRUCT

ctl_table_header
MULT

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT
MINUS
MINUS

p
MINUS
GREATER

used
BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

unregistering
BRACKET_C
BRACKET_C

complete
BRACKET_O

p
MINUS
GREATER

unregistering
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

start_unregistering
BRACKET_O
STRUCT

ctl_table_header
MULT

p
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

p
MINUS
GREATER

used
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

completion

wait
SEMICOLON

init_completion
BRACKET_O
AMPERSANT

wait
BRACKET_C
SEMICOLON

p
MINUS
GREATER

unregistering
OP_ASSIGNMENT
AMPERSANT

wait
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

sysctl_lock
BRACKET_C
SEMICOLON

wait_for_completion
BRACKET_O
AMPERSANT

wait
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

sysctl_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

list_del_init
BRACKET_O
AMPERSANT

p
MINUS
GREATER

ctl_entry
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

sysctl_head_finish
BRACKET_O
STRUCT

ctl_table_header
MULT

head
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

head
BRACKET_C

return
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

sysctl_lock
BRACKET_C
SEMICOLON

unuse_table
BRACKET_O

head
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

sysctl_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

ctl_table_header
MULT

sysctl_head_next
BRACKET_O
STRUCT

ctl_table_header
MULT

prev
BRACKET_C
CURLY_BRACKET_O
STRUCT

ctl_table_header
MULT

head
SEMICOLON
STRUCT

list_head
MULT

tmp
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

sysctl_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

prev
BRACKET_C
CURLY_BRACKET_O

tmp
OP_ASSIGNMENT
AMPERSANT

prev
MINUS
GREATER

ctl_entry
SEMICOLON

unuse_table
BRACKET_O

prev
BRACKET_C
SEMICOLON

goto

next
SEMICOLON
CURLY_BRACKET_C

tmp
OP_ASSIGNMENT
AMPERSANT

root_table_header
DOT

ctl_entry
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

head
OP_ASSIGNMENT

list_entry
BRACKET_O

tmp
COMMA
STRUCT

ctl_table_header
COMMA

ctl_entry
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

use_table
BRACKET_O

head
BRACKET_C
BRACKET_C

goto

next
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

sysctl_lock
BRACKET_C
SEMICOLON

return

head
SEMICOLON

next
COLON

tmp
OP_ASSIGNMENT

tmp
MINUS
GREATER

next
SEMICOLON
IF
BRACKET_O

tmp
EQ
AMPERSANT

root_table_header
DOT

ctl_entry
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

spin_unlock
BRACKET_O
AMPERSANT

sysctl_lock
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C
TYPE_CHAR
MULT

sysctl_pathname
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_CHAR
MULT

buffer
COMMA
TYPE_INT

buflen
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

buflen
LESS
NUMBER
BRACKET_C

return

NULL
SEMICOLON

buffer
ASSIGN_PLUS
MINUS
MINUS

buflen
SEMICOLON
MULT

buffer
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
WHILE
BRACKET_O

table
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

namelen
OP_ASSIGNMENT

strlen
BRACKET_O

table
MINUS
GREATER

procname
BRACKET_C
SEMICOLON
IF
BRACKET_O

buflen
LESS

namelen
PLUS
NUMBER
BRACKET_C

return

NULL
SEMICOLON

buflen
ASSIGN_MINUS

namelen
PLUS
NUMBER
SEMICOLON

buffer
ASSIGN_MINUS

namelen
SEMICOLON

memcpy
BRACKET_O

buffer
COMMA

table
MINUS
GREATER

procname
COMMA

namelen
BRACKET_C
SEMICOLON
MULT
MINUS
MINUS

buffer
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

table
OP_ASSIGNMENT

table
MINUS
GREATER

parent
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

buflen
LESS
NUMBER
BRACKET_C

return

NULL
SEMICOLON

buffer
ASSIGN_MINUS
NUMBER
SEMICOLON

memcpy
BRACKET_O

buffer
COMMA
STRING
COMMA
NUMBER
BRACKET_C
SEMICOLON

return

buffer
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

sysctl_pathname
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SYSCTL_SYSCALL
TYPE_INT

do_sysctl
BRACKET_O
TYPE_INT

__user
MULT

name
COMMA
TYPE_INT

nlen
COMMA

void

__user
MULT

oldval
COMMA

size_t

__user
MULT

oldlenp
COMMA

void

__user
MULT

newval
COMMA

size_t

newlen
BRACKET_C
CURLY_BRACKET_O
STRUCT

ctl_table_header
MULT

head
SEMICOLON
TYPE_INT

error
OP_ASSIGNMENT
MINUS

ENOTDIR
SEMICOLON
IF
BRACKET_O

nlen
LE_EQ
NUMBER
OR

nlen
GR_EQ

CTL_MAXNAME
BRACKET_C

return
MINUS

ENOTDIR
SEMICOLON
IF
BRACKET_O

oldval
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

old_len
SEMICOLON
IF
BRACKET_O
NOT

oldlenp
OR

get_user
BRACKET_O

old_len
COMMA

oldlenp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
FOR
BRACKET_O

head
OP_ASSIGNMENT

sysctl_head_next
BRACKET_O

NULL
BRACKET_C
SEMICOLON

head
SEMICOLON

head
OP_ASSIGNMENT

sysctl_head_next
BRACKET_O

head
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

error
OP_ASSIGNMENT

parse_table
BRACKET_O

name
COMMA

nlen
COMMA

oldval
COMMA

oldlenp
COMMA

newval
COMMA

newlen
COMMA

head
MINUS
GREATER

ctl_table
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
NOT_EQ
MINUS

ENOTDIR
BRACKET_C
CURLY_BRACKET_O

sysctl_head_finish
BRACKET_O

head
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

error
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sysctl
BRACKET_O
STRUCT

__sysctl_args

__user
MULT

args
BRACKET_C
CURLY_BRACKET_O
STRUCT

__sysctl_args

tmp
SEMICOLON
TYPE_INT

error
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

tmp
COMMA

args
COMMA

sizeof
BRACKET_O

tmp
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

lock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

error
OP_ASSIGNMENT

do_sysctl
BRACKET_O

tmp
DOT

name
COMMA

tmp
DOT

nlen
COMMA

tmp
DOT

oldval
COMMA

tmp
DOT

oldlenp
COMMA

tmp
DOT

newval
COMMA

tmp
DOT

newlen
BRACKET_C
SEMICOLON

unlock_kernel
BRACKET_O
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

test_perm
BRACKET_O
TYPE_INT

mode
COMMA
TYPE_INT

op
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

current
MINUS
GREATER

euid
BRACKET_C

mode
GREATER
GR_EQ
NUMBER
SEMICOLON
ELSE
IF
BRACKET_O

in_egroup_p
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C

mode
GREATER
GR_EQ
NUMBER
SEMICOLON
IF
BRACKET_O
BRACKET_O

mode
AMPERSANT

op
AMPERSANT
NUMBER
BRACKET_C
EQ

op
BRACKET_C

return
NUMBER
SEMICOLON

return
MINUS

EACCES
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

sysctl_perm
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

op
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
SEMICOLON

error
OP_ASSIGNMENT

security_sysctl
BRACKET_O

table
COMMA

op
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C

return

error
SEMICOLON

return

test_perm
BRACKET_O

table
MINUS
GREATER

mode
COMMA

op
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_SYSCTL_SYSCALL

static
TYPE_INT

parse_table
BRACKET_O
TYPE_INT

__user
MULT

name
COMMA
TYPE_INT

nlen
COMMA

void

__user
MULT

oldval
COMMA

size_t

__user
MULT

oldlenp
COMMA

void

__user
MULT

newval
COMMA

size_t

newlen
COMMA

ctl_table
MULT

table
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

n
SEMICOLON

repeat
COLON
IF
BRACKET_O
NOT

nlen
BRACKET_C

return
MINUS

ENOTDIR
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

n
COMMA

name
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
FOR
BRACKET_O
SEMICOLON

table
MINUS
GREATER

ctl_name
OR

table
MINUS
GREATER

procname
SEMICOLON

table
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

table
MINUS
GREATER

ctl_name
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O

n
EQ

table
MINUS
GREATER

ctl_name
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

error
SEMICOLON
IF
BRACKET_O

table
MINUS
GREATER

child
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

sysctl_perm
BRACKET_O

table
COMMA
NUMBER
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON

name
PLUS
PLUS
SEMICOLON

nlen
MINUS
MINUS
SEMICOLON

table
OP_ASSIGNMENT

table
MINUS
GREATER

child
SEMICOLON

goto

repeat
SEMICOLON
CURLY_BRACKET_C

error
OP_ASSIGNMENT

do_sysctl_strategy
BRACKET_O

table
COMMA

name
COMMA

nlen
COMMA

oldval
COMMA

oldlenp
COMMA

newval
COMMA

newlen
BRACKET_C
SEMICOLON

return

error
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
MINUS

ENOTDIR
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

do_sysctl_strategy
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

__user
MULT

name
COMMA
TYPE_INT

nlen
COMMA

void

__user
MULT

oldval
COMMA

size_t

__user
MULT

oldlenp
COMMA

void

__user
MULT

newval
COMMA

size_t

newlen
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

op
OP_ASSIGNMENT
NUMBER
COMMA

rc
SEMICOLON

size_t

len
SEMICOLON
IF
BRACKET_O

oldval
BRACKET_C

op
LOGICAL_OR
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

newval
BRACKET_C

op
LOGICAL_OR
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

sysctl_perm
BRACKET_O

table
COMMA

op
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O

table
MINUS
GREATER

strategy
BRACKET_C
CURLY_BRACKET_O

rc
OP_ASSIGNMENT

table
MINUS
GREATER

strategy
BRACKET_O

table
COMMA

name
COMMA

nlen
COMMA

oldval
COMMA

oldlenp
COMMA

newval
COMMA

newlen
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
LESS
NUMBER
BRACKET_C

return

rc
SEMICOLON
IF
BRACKET_O

rc
GREATER
NUMBER
BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

table
MINUS
GREATER

data
AND

table
MINUS
GREATER

maxlen
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

oldval
AND

oldlenp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

get_user
BRACKET_O

len
COMMA

oldlenp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

len
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

len
GREATER

table
MINUS
GREATER

maxlen
BRACKET_C

len
OP_ASSIGNMENT

table
MINUS
GREATER

maxlen
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

oldval
COMMA

table
MINUS
GREATER

data
COMMA

len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

put_user
BRACKET_O

len
COMMA

oldlenp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

newval
AND

newlen
BRACKET_C
CURLY_BRACKET_O

len
OP_ASSIGNMENT

newlen
SEMICOLON
IF
BRACKET_O

len
GREATER

table
MINUS
GREATER

maxlen
BRACKET_C

len
OP_ASSIGNMENT

table
MINUS
GREATER

maxlen
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O

table
MINUS
GREATER

data
COMMA

newval
COMMA

len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static

void

sysctl_set_parent
BRACKET_O
STRUCT

ctl_table
MULT

parent
COMMA
STRUCT

ctl_table
MULT

table
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O
SEMICOLON

table
MINUS
GREATER

ctl_name
OR

table
MINUS
GREATER

procname
SEMICOLON

table
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

table
MINUS
GREATER

parent
OP_ASSIGNMENT

parent
SEMICOLON
IF
BRACKET_O

table
MINUS
GREATER

child
BRACKET_C

sysctl_set_parent
BRACKET_O

table
COMMA

table
MINUS
GREATER

child
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

__init
TYPE_INT

sysctl_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

sysctl_set_parent
BRACKET_O

NULL
COMMA

root_table
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

core_initcall
BRACKET_O

sysctl_init
BRACKET_C
SEMICOLON
STRUCT

ctl_table_header
MULT

register_sysctl_table
BRACKET_O

ctl_table
MULT

table
BRACKET_C
CURLY_BRACKET_O
STRUCT

ctl_table_header
MULT

tmp
SEMICOLON

tmp
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

ctl_table_header
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tmp
BRACKET_C

return

NULL
SEMICOLON

tmp
MINUS
GREATER

ctl_table
OP_ASSIGNMENT

table
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

tmp
MINUS
GREATER

ctl_entry
BRACKET_C
SEMICOLON

tmp
MINUS
GREATER

used
OP_ASSIGNMENT
NUMBER
SEMICOLON

tmp
MINUS
GREATER

unregistering
OP_ASSIGNMENT

NULL
SEMICOLON

sysctl_set_parent
BRACKET_O

NULL
COMMA

table
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

sysctl_lock
BRACKET_C
SEMICOLON

list_add_tail
BRACKET_O
AMPERSANT

tmp
MINUS
GREATER

ctl_entry
COMMA
AMPERSANT

root_table_header
DOT

ctl_entry
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

sysctl_lock
BRACKET_C
SEMICOLON

return

tmp
SEMICOLON
CURLY_BRACKET_C

void

unregister_sysctl_table
BRACKET_O
STRUCT

ctl_table_header
MULT

header
BRACKET_C
CURLY_BRACKET_O

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

sysctl_lock
BRACKET_C
SEMICOLON

start_unregistering
BRACKET_O

header
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

sysctl_lock
BRACKET_C
SEMICOLON

kfree
BRACKET_O

header
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ELSE
STRUCT

ctl_table_header
MULT

register_sysctl_table
BRACKET_O

ctl_table
MULT

table
BRACKET_C
CURLY_BRACKET_O

return

NULL
SEMICOLON
CURLY_BRACKET_C

void

unregister_sysctl_table
BRACKET_O
STRUCT

ctl_table_header
MULT

table
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_PROC_SYSCTL

static
TYPE_INT

_proc_do_string
BRACKET_O

void
MULT

data
COMMA
TYPE_INT

maxlen
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

size_t

len
SEMICOLON
TYPE_CHAR

__user
MULT

p
SEMICOLON
TYPE_CHAR

c
SEMICOLON
IF
BRACKET_O
NOT

data
OR
NOT

maxlen
OR
NOT
MULT

lenp
BRACKET_C
CURLY_BRACKET_O
MULT

lenp
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

write
BRACKET_C
CURLY_BRACKET_O

len
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
OP_ASSIGNMENT

buffer
SEMICOLON
WHILE
BRACKET_O

len
LESS
MULT

lenp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

get_user
BRACKET_O

c
COMMA

p
PLUS
PLUS
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

c
EQ
NUMBER
OR

c
EQ
QUOTED_CHAR
BRACKET_C
BREAK
SEMICOLON

len
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

len
GR_EQ

maxlen
BRACKET_C

len
OP_ASSIGNMENT

maxlen
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O

data
COMMA

buffer
COMMA

len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
BRACKET_O
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

data
BRACKET_C
CORNER_BRACKET_O

len
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
MULT

ppos
ASSIGN_PLUS
MULT

lenp
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

len
OP_ASSIGNMENT

strlen
BRACKET_O

data
BRACKET_C
SEMICOLON
IF
BRACKET_O

len
GREATER

maxlen
BRACKET_C

len
OP_ASSIGNMENT

maxlen
SEMICOLON
IF
BRACKET_O
MULT

ppos
GREATER

len
BRACKET_C
CURLY_BRACKET_O
MULT

lenp
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

data
ASSIGN_PLUS
MULT

ppos
SEMICOLON

len
ASSIGN_MINUS
MULT

ppos
SEMICOLON
IF
BRACKET_O

len
GREATER
MULT

lenp
BRACKET_C

len
OP_ASSIGNMENT
MULT

lenp
SEMICOLON
IF
BRACKET_O

len
BRACKET_C
IF
BRACKET_O

copy_to_user
BRACKET_O

buffer
COMMA

data
COMMA

len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

len
LESS
MULT

lenp
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

put_user
BRACKET_O
QUOTED_CHAR
COMMA
BRACKET_O
BRACKET_O
TYPE_CHAR

__user
MULT
BRACKET_C

buffer
BRACKET_C
PLUS

len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

len
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
MULT

lenp
OP_ASSIGNMENT

len
SEMICOLON
MULT

ppos
ASSIGN_PLUS

len
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dostring
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return

_proc_do_string
BRACKET_O

table
MINUS
GREATER

data
COMMA

table
MINUS
GREATER

maxlen
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

do_proc_dointvec_conv
BRACKET_O
TYPE_INT
MULT

negp
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

lvalp
COMMA
TYPE_INT
MULT

valp
COMMA
TYPE_INT

write
COMMA

void
MULT

data
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

write
BRACKET_C
CURLY_BRACKET_O
MULT

valp
OP_ASSIGNMENT
MULT

negp
QUESTION_MARK
MINUS
MULT

lvalp
COLON
MULT

lvalp
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
TYPE_INT

val
OP_ASSIGNMENT
MULT

valp
SEMICOLON
IF
BRACKET_O

val
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O
MULT

negp
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
MULT

lvalp
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS

val
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
MULT

negp
OP_ASSIGNMENT
NUMBER
SEMICOLON
MULT

lvalp
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

val
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__do_proc_dointvec
BRACKET_O

void
MULT

tbl_data
COMMA

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
COMMA
TYPE_INT
BRACKET_O
MULT

conv
BRACKET_C
BRACKET_O
TYPE_INT
MULT

negp
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

lvalp
COMMA
TYPE_INT
MULT

valp
COMMA
TYPE_INT

write
COMMA

void
MULT

data
BRACKET_C
COMMA

void
MULT

data
BRACKET_C
CURLY_BRACKET_O
PP_DEFINE

TMPBUFLEN
NUMBER
TYPE_INT
MULT

i
COMMA

vleft
COMMA

first
OP_ASSIGNMENT
NUMBER
COMMA

neg
COMMA

val
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

lval
SEMICOLON

size_t

left
COMMA

len
SEMICOLON
TYPE_CHAR

buf
CORNER_BRACKET_O

TMPBUFLEN
CORNER_BRACKET_C
COMMA
MULT

p
SEMICOLON
TYPE_CHAR

__user
MULT

s
OP_ASSIGNMENT

buffer
SEMICOLON
IF
BRACKET_O
NOT

tbl_data
OR
NOT

table
MINUS
GREATER

maxlen
OR
NOT
MULT

lenp
OR
BRACKET_O
MULT

ppos
AND
NOT

write
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
MULT

lenp
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

i
OP_ASSIGNMENT
BRACKET_O
TYPE_INT
MULT
BRACKET_C

tbl_data
SEMICOLON

vleft
OP_ASSIGNMENT

table
MINUS
GREATER

maxlen
DIV

sizeof
BRACKET_O
MULT

i
BRACKET_C
SEMICOLON

left
OP_ASSIGNMENT
MULT

lenp
SEMICOLON
IF
BRACKET_O
NOT

conv
BRACKET_C

conv
OP_ASSIGNMENT

do_proc_dointvec_conv
SEMICOLON
FOR
BRACKET_O
SEMICOLON

left
AND

vleft
MINUS
MINUS
SEMICOLON

i
PLUS
PLUS
COMMA

first
OP_ASSIGNMENT
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

write
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O

left
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

c
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

c
COMMA

s
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

isspace
BRACKET_O

c
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

left
MINUS
MINUS
SEMICOLON

s
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

left
BRACKET_C
BREAK
SEMICOLON

neg
OP_ASSIGNMENT
NUMBER
SEMICOLON

len
OP_ASSIGNMENT

left
SEMICOLON
IF
BRACKET_O

len
GREATER

sizeof
BRACKET_O

buf
BRACKET_C
MINUS
NUMBER
BRACKET_C

len
OP_ASSIGNMENT

sizeof
BRACKET_O

buf
BRACKET_C
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O

buf
COMMA

s
COMMA

len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

buf
CORNER_BRACKET_O

len
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
OP_ASSIGNMENT

buf
SEMICOLON
IF
BRACKET_O
MULT

p
EQ
QUOTED_CHAR
AND

left
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

neg
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
MULT

p
LESS
QUOTED_CHAR
OR
MULT

p
GREATER
QUOTED_CHAR
BRACKET_C
BREAK
SEMICOLON

lval
OP_ASSIGNMENT

simple_strtoul
BRACKET_O

p
COMMA
AMPERSANT

p
COMMA
NUMBER
BRACKET_C
SEMICOLON

len
OP_ASSIGNMENT

p
MINUS

buf
SEMICOLON
IF
BRACKET_O
BRACKET_O

len
LESS

left
BRACKET_C
AND
MULT

p
AND
NOT

isspace
BRACKET_O
MULT

p
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

neg
BRACKET_C

val
OP_ASSIGNMENT
MINUS

val
SEMICOLON

s
ASSIGN_PLUS

len
SEMICOLON

left
ASSIGN_MINUS

len
SEMICOLON
IF
BRACKET_O

conv
BRACKET_O
AMPERSANT

neg
COMMA
AMPERSANT

lval
COMMA

i
COMMA
NUMBER
COMMA

data
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

p
OP_ASSIGNMENT

buf
SEMICOLON
IF
BRACKET_O
NOT

first
BRACKET_C
MULT

p
PLUS
PLUS
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON
IF
BRACKET_O

conv
BRACKET_O
AMPERSANT

neg
COMMA
AMPERSANT

lval
COMMA

i
COMMA
NUMBER
COMMA

data
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

sprintf
BRACKET_O

p
COMMA
STRING
COMMA

neg
QUESTION_MARK
STRING
COLON
STRING
COMMA

lval
BRACKET_C
SEMICOLON

len
OP_ASSIGNMENT

strlen
BRACKET_O

buf
BRACKET_C
SEMICOLON
IF
BRACKET_O

len
GREATER

left
BRACKET_C

len
OP_ASSIGNMENT

left
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

s
COMMA

buf
COMMA

len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

left
ASSIGN_MINUS

len
SEMICOLON

s
ASSIGN_PLUS

len
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

write
AND
NOT

first
AND

left
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

put_user
BRACKET_O
QUOTED_CHAR
COMMA

s
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

left
MINUS
MINUS
COMMA

s
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

write
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O

left
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

c
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

c
COMMA

s
PLUS
PLUS
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

isspace
BRACKET_O

c
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

left
MINUS
MINUS
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

write
AND

first
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
MULT

lenp
ASSIGN_MINUS

left
SEMICOLON
MULT

ppos
ASSIGN_PLUS
MULT

lenp
SEMICOLON

return
NUMBER
SEMICOLON
HASH

undef

TMPBUFLEN
CURLY_BRACKET_C

static
TYPE_INT

do_proc_dointvec
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
COMMA
TYPE_INT
BRACKET_O
MULT

conv
BRACKET_C
BRACKET_O
TYPE_INT
MULT

negp
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

lvalp
COMMA
TYPE_INT
MULT

valp
COMMA
TYPE_INT

write
COMMA

void
MULT

data
BRACKET_C
COMMA

void
MULT

data
BRACKET_C
CURLY_BRACKET_O

return

__do_proc_dointvec
BRACKET_O

table
MINUS
GREATER

data
COMMA

table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
COMMA

conv
COMMA

data
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dointvec
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return

do_proc_dointvec
BRACKET_O

table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

OP_SET
NUMBER
PP_DEFINE

OP_AND
NUMBER
PP_DEFINE

OP_OR
NUMBER

static
TYPE_INT

do_proc_dointvec_bset_conv
BRACKET_O
TYPE_INT
MULT

negp
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

lvalp
COMMA
TYPE_INT
MULT

valp
COMMA
TYPE_INT

write
COMMA

void
MULT

data
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

op
OP_ASSIGNMENT
MULT
BRACKET_O
TYPE_INT
MULT
BRACKET_C

data
SEMICOLON
IF
BRACKET_O

write
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

val
OP_ASSIGNMENT
MULT

negp
QUESTION_MARK
MINUS
MULT

lvalp
COLON
MULT

lvalp
SEMICOLON
SWITCH
BRACKET_O

op
BRACKET_C
CURLY_BRACKET_O

case

OP_SET
COLON
MULT

valp
OP_ASSIGNMENT

val
SEMICOLON
BREAK
SEMICOLON

case

OP_AND
COLON
MULT

valp
AMPERSANT
OP_ASSIGNMENT

val
SEMICOLON
BREAK
SEMICOLON

case

OP_OR
COLON
MULT

valp
LOGICAL_OR
OP_ASSIGNMENT

val
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
TYPE_INT

val
OP_ASSIGNMENT
MULT

valp
SEMICOLON
IF
BRACKET_O

val
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O
MULT

negp
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
MULT

lvalp
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS

val
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
MULT

negp
OP_ASSIGNMENT
NUMBER
SEMICOLON
MULT

lvalp
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

val
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dointvec_bset
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

op
SEMICOLON
IF
BRACKET_O

write
AND
NOT

capable
BRACKET_O

CAP_SYS_MODULE
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

return
MINUS

EPERM
SEMICOLON
CURLY_BRACKET_C

op
OP_ASSIGNMENT

is_init
BRACKET_O

current
BRACKET_C
QUESTION_MARK

OP_SET
COLON

OP_AND
SEMICOLON

return

do_proc_dointvec
BRACKET_O

table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
COMMA

do_proc_dointvec_bset_conv
COMMA
AMPERSANT

op
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

proc_dointvec_taint
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

op
SEMICOLON
IF
BRACKET_O

write
AND
NOT

capable
BRACKET_O

CAP_SYS_ADMIN
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON

op
OP_ASSIGNMENT

OP_OR
SEMICOLON

return

do_proc_dointvec
BRACKET_O

table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
COMMA

do_proc_dointvec_bset_conv
COMMA
AMPERSANT

op
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
STRUCT

do_proc_dointvec_minmax_conv_param
CURLY_BRACKET_O
TYPE_INT
MULT

min
SEMICOLON
TYPE_INT
MULT

max
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

do_proc_dointvec_minmax_conv
BRACKET_O
TYPE_INT
MULT

negp
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

lvalp
COMMA
TYPE_INT
MULT

valp
COMMA
TYPE_INT

write
COMMA

void
MULT

data
BRACKET_C
CURLY_BRACKET_O
STRUCT

do_proc_dointvec_minmax_conv_param
MULT

param
OP_ASSIGNMENT

data
SEMICOLON
IF
BRACKET_O

write
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

val
OP_ASSIGNMENT
MULT

negp
QUESTION_MARK
MINUS
MULT

lvalp
COLON
MULT

lvalp
SEMICOLON
IF
BRACKET_O
BRACKET_O

param
MINUS
GREATER

min
AND
MULT

param
MINUS
GREATER

min
GREATER

val
BRACKET_C
OR
BRACKET_O

param
MINUS
GREATER

max
AND
MULT

param
MINUS
GREATER

max
LESS

val
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
MULT

valp
OP_ASSIGNMENT

val
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
TYPE_INT

val
OP_ASSIGNMENT
MULT

valp
SEMICOLON
IF
BRACKET_O

val
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O
MULT

negp
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON
MULT

lvalp
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS

val
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
MULT

negp
OP_ASSIGNMENT
NUMBER
SEMICOLON
MULT

lvalp
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

val
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dointvec_minmax
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O
STRUCT

do_proc_dointvec_minmax_conv_param

param
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

min
OP_ASSIGNMENT
BRACKET_O
TYPE_INT
MULT
BRACKET_C

table
MINUS
GREATER

extra1
COMMA
DOT

max
OP_ASSIGNMENT
BRACKET_O
TYPE_INT
MULT
BRACKET_C

table
MINUS
GREATER

extra2
COMMA
CURLY_BRACKET_C
SEMICOLON

return

do_proc_dointvec
BRACKET_O

table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
COMMA

do_proc_dointvec_minmax_conv
COMMA
AMPERSANT

param
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__do_proc_doulongvec_minmax
BRACKET_O

void
MULT

data
COMMA

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
COMMA
TYPE_UNSIGNED
TYPE_LONG

convmul
COMMA
TYPE_UNSIGNED
TYPE_LONG

convdiv
BRACKET_C
CURLY_BRACKET_O
PP_DEFINE

TMPBUFLEN
NUMBER
TYPE_UNSIGNED
TYPE_LONG
MULT

i
COMMA
MULT

min
COMMA
MULT

max
COMMA

val
SEMICOLON
TYPE_INT

vleft
COMMA

first
OP_ASSIGNMENT
NUMBER
COMMA

neg
SEMICOLON

size_t

len
COMMA

left
SEMICOLON
TYPE_CHAR

buf
CORNER_BRACKET_O

TMPBUFLEN
CORNER_BRACKET_C
COMMA
MULT

p
SEMICOLON
TYPE_CHAR

__user
MULT

s
OP_ASSIGNMENT

buffer
SEMICOLON
IF
BRACKET_O
NOT

data
OR
NOT

table
MINUS
GREATER

maxlen
OR
NOT
MULT

lenp
OR
BRACKET_O
MULT

ppos
AND
NOT

write
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
MULT

lenp
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

i
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
MULT
BRACKET_C

data
SEMICOLON

min
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
MULT
BRACKET_C

table
MINUS
GREATER

extra1
SEMICOLON

max
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
MULT
BRACKET_C

table
MINUS
GREATER

extra2
SEMICOLON

vleft
OP_ASSIGNMENT

table
MINUS
GREATER

maxlen
DIV

sizeof
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
SEMICOLON

left
OP_ASSIGNMENT
MULT

lenp
SEMICOLON
FOR
BRACKET_O
SEMICOLON

left
AND

vleft
MINUS
MINUS
SEMICOLON

i
PLUS
PLUS
COMMA

min
PLUS
PLUS
COMMA

max
PLUS
PLUS
COMMA

first
OP_ASSIGNMENT
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

write
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O

left
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

c
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

c
COMMA

s
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

isspace
BRACKET_O

c
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

left
MINUS
MINUS
SEMICOLON

s
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
NOT

left
BRACKET_C
BREAK
SEMICOLON

neg
OP_ASSIGNMENT
NUMBER
SEMICOLON

len
OP_ASSIGNMENT

left
SEMICOLON
IF
BRACKET_O

len
GREATER

TMPBUFLEN
MINUS
NUMBER
BRACKET_C

len
OP_ASSIGNMENT

TMPBUFLEN
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O

buf
COMMA

s
COMMA

len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

buf
CORNER_BRACKET_O

len
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
OP_ASSIGNMENT

buf
SEMICOLON
IF
BRACKET_O
MULT

p
EQ
QUOTED_CHAR
AND

left
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

neg
OP_ASSIGNMENT
NUMBER
SEMICOLON

p
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
MULT

p
LESS
QUOTED_CHAR
OR
MULT

p
GREATER
QUOTED_CHAR
BRACKET_C
BREAK
SEMICOLON

val
OP_ASSIGNMENT

simple_strtoul
BRACKET_O

p
COMMA
AMPERSANT

p
COMMA
NUMBER
BRACKET_C
MULT

convmul
DIV

convdiv
SEMICOLON

len
OP_ASSIGNMENT

p
MINUS

buf
SEMICOLON
IF
BRACKET_O
BRACKET_O

len
LESS

left
BRACKET_C
AND
MULT

p
AND
NOT

isspace
BRACKET_O
MULT

p
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
IF
BRACKET_O

neg
BRACKET_C

val
OP_ASSIGNMENT
MINUS

val
SEMICOLON

s
ASSIGN_PLUS

len
SEMICOLON

left
ASSIGN_MINUS

len
SEMICOLON
IF
BRACKET_O

neg
BRACKET_C
CONTINUE
SEMICOLON
IF
BRACKET_O
BRACKET_O

min
AND

val
LESS
MULT

min
BRACKET_C
OR
BRACKET_O

max
AND

val
GREATER
MULT

max
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON
MULT

i
OP_ASSIGNMENT

val
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

p
OP_ASSIGNMENT

buf
SEMICOLON
IF
BRACKET_O
NOT

first
BRACKET_C
MULT

p
PLUS
PLUS
OP_ASSIGNMENT
QUOTED_CHAR
SEMICOLON

sprintf
BRACKET_O

p
COMMA
STRING
COMMA

convdiv
MULT
BRACKET_O
MULT

i
BRACKET_C
DIV

convmul
BRACKET_C
SEMICOLON

len
OP_ASSIGNMENT

strlen
BRACKET_O

buf
BRACKET_C
SEMICOLON
IF
BRACKET_O

len
GREATER

left
BRACKET_C

len
OP_ASSIGNMENT

left
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

s
COMMA

buf
COMMA

len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

left
ASSIGN_MINUS

len
SEMICOLON

s
ASSIGN_PLUS

len
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O
NOT

write
AND
NOT

first
AND

left
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

put_user
BRACKET_O
QUOTED_CHAR
COMMA

s
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

left
MINUS
MINUS
COMMA

s
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

write
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O

left
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR

c
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

c
COMMA

s
PLUS
PLUS
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
NOT

isspace
BRACKET_O

c
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

left
MINUS
MINUS
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

write
AND

first
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
MULT

lenp
ASSIGN_MINUS

left
SEMICOLON
MULT

ppos
ASSIGN_PLUS
MULT

lenp
SEMICOLON

return
NUMBER
SEMICOLON
HASH

undef

TMPBUFLEN
CURLY_BRACKET_C

static
TYPE_INT

do_proc_doulongvec_minmax
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
COMMA
TYPE_UNSIGNED
TYPE_LONG

convmul
COMMA
TYPE_UNSIGNED
TYPE_LONG

convdiv
BRACKET_C
CURLY_BRACKET_O

return

__do_proc_doulongvec_minmax
BRACKET_O

table
MINUS
GREATER

data
COMMA

table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
COMMA

convmul
COMMA

convdiv
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_doulongvec_minmax
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return

do_proc_doulongvec_minmax
BRACKET_O

table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
COMMA
NUMBER

l
COMMA
NUMBER

l
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_doulongvec_ms_jiffies_minmax
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return

do_proc_doulongvec_minmax
BRACKET_O

table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
COMMA

HZ
COMMA
NUMBER

l
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

do_proc_dointvec_jiffies_conv
BRACKET_O
TYPE_INT
MULT

negp
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

lvalp
COMMA
TYPE_INT
MULT

valp
COMMA
TYPE_INT

write
COMMA

void
MULT

data
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

write
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
MULT

lvalp
GREATER

LONG_MAX
DIV

HZ
BRACKET_C

return
NUMBER
SEMICOLON
MULT

valp
OP_ASSIGNMENT
MULT

negp
QUESTION_MARK
MINUS
BRACKET_O
MULT

lvalp
MULT

HZ
BRACKET_C
COLON
BRACKET_O
MULT

lvalp
MULT

HZ
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
TYPE_INT

val
OP_ASSIGNMENT
MULT

valp
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

lval
SEMICOLON
IF
BRACKET_O

val
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O
MULT

negp
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

lval
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS

val
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
MULT

negp
OP_ASSIGNMENT
NUMBER
SEMICOLON

lval
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

val
SEMICOLON
CURLY_BRACKET_C
MULT

lvalp
OP_ASSIGNMENT

lval
DIV

HZ
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

do_proc_dointvec_userhz_jiffies_conv
BRACKET_O
TYPE_INT
MULT

negp
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

lvalp
COMMA
TYPE_INT
MULT

valp
COMMA
TYPE_INT

write
COMMA

void
MULT

data
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

write
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

USER_HZ
LESS

HZ
AND
MULT

lvalp
GREATER
BRACKET_O

LONG_MAX
DIV

HZ
BRACKET_C
MULT

USER_HZ
BRACKET_C

return
NUMBER
SEMICOLON
MULT

valp
OP_ASSIGNMENT

clock_t_to_jiffies
BRACKET_O
MULT

negp
QUESTION_MARK
MINUS
MULT

lvalp
COLON
MULT

lvalp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
TYPE_INT

val
OP_ASSIGNMENT
MULT

valp
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

lval
SEMICOLON
IF
BRACKET_O

val
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O
MULT

negp
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

lval
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS

val
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
MULT

negp
OP_ASSIGNMENT
NUMBER
SEMICOLON

lval
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

val
SEMICOLON
CURLY_BRACKET_C
MULT

lvalp
OP_ASSIGNMENT

jiffies_to_clock_t
BRACKET_O

lval
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

do_proc_dointvec_ms_jiffies_conv
BRACKET_O
TYPE_INT
MULT

negp
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

lvalp
COMMA
TYPE_INT
MULT

valp
COMMA
TYPE_INT

write
COMMA

void
MULT

data
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

write
BRACKET_C
CURLY_BRACKET_O
MULT

valp
OP_ASSIGNMENT

msecs_to_jiffies
BRACKET_O
MULT

negp
QUESTION_MARK
MINUS
MULT

lvalp
COLON
MULT

lvalp
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
TYPE_INT

val
OP_ASSIGNMENT
MULT

valp
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

lval
SEMICOLON
IF
BRACKET_O

val
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O
MULT

negp
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

lval
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
MINUS

val
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
MULT

negp
OP_ASSIGNMENT
NUMBER
SEMICOLON

lval
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

val
SEMICOLON
CURLY_BRACKET_C
MULT

lvalp
OP_ASSIGNMENT

jiffies_to_msecs
BRACKET_O

lval
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dointvec_jiffies
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return

do_proc_dointvec
BRACKET_O

table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
COMMA

do_proc_dointvec_jiffies_conv
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dointvec_userhz_jiffies
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return

do_proc_dointvec
BRACKET_O

table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
COMMA

do_proc_dointvec_userhz_jiffies_conv
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dointvec_ms_jiffies
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return

do_proc_dointvec
BRACKET_O

table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
COMMA

do_proc_dointvec_ms_jiffies_conv
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

proc_do_cad_pid
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O
STRUCT

pid
MULT

new_pid
SEMICOLON

pid_t

tmp
SEMICOLON
TYPE_INT

r
SEMICOLON

tmp
OP_ASSIGNMENT

pid_nr
BRACKET_O

cad_pid
BRACKET_C
SEMICOLON

r
OP_ASSIGNMENT

__do_proc_dointvec
BRACKET_O
AMPERSANT

tmp
COMMA

table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

r
OR
NOT

write
BRACKET_C

return

r
SEMICOLON

new_pid
OP_ASSIGNMENT

find_get_pid
BRACKET_O

tmp
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

new_pid
BRACKET_C

return
MINUS

ESRCH
SEMICOLON

put_pid
BRACKET_O

xchg
BRACKET_O
AMPERSANT

cad_pid
COMMA

new_pid
BRACKET_C
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ELSE
TYPE_INT

proc_dostring
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dointvec
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dointvec_bset
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dointvec_minmax
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dointvec_jiffies
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dointvec_userhz_jiffies
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_dointvec_ms_jiffies
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_doulongvec_minmax
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

proc_doulongvec_ms_jiffies_minmax
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFDEF

CONFIG_SYSCTL_SYSCALL
TYPE_INT

sysctl_string
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

__user
MULT

name
COMMA
TYPE_INT

nlen
COMMA

void

__user
MULT

oldval
COMMA

size_t

__user
MULT

oldlenp
COMMA

void

__user
MULT

newval
COMMA

size_t

newlen
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

table
MINUS
GREATER

data
OR
NOT

table
MINUS
GREATER

maxlen
BRACKET_C

return
MINUS

ENOTDIR
SEMICOLON
IF
BRACKET_O

oldval
AND

oldlenp
BRACKET_C
CURLY_BRACKET_O

size_t

bufsize
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

bufsize
COMMA

oldlenp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

bufsize
BRACKET_C
CURLY_BRACKET_O

size_t

len
OP_ASSIGNMENT

strlen
BRACKET_O

table
MINUS
GREATER

data
BRACKET_C
COMMA

copied
SEMICOLON
IF
BRACKET_O

len
GREATER

table
MINUS
GREATER

maxlen
BRACKET_C

len
OP_ASSIGNMENT

table
MINUS
GREATER

maxlen
SEMICOLON

copied
OP_ASSIGNMENT
BRACKET_O

len
GR_EQ

bufsize
BRACKET_C
QUESTION_MARK

bufsize
MINUS
NUMBER
COLON

len
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

oldval
COMMA

table
MINUS
GREATER

data
COMMA

copied
BRACKET_C
OR

put_user
BRACKET_O
NUMBER
COMMA
BRACKET_O
TYPE_CHAR

__user
MULT
BRACKET_C
BRACKET_O

oldval
PLUS

copied
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

put_user
BRACKET_O

len
COMMA

oldlenp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

newval
AND

newlen
BRACKET_C
CURLY_BRACKET_O

size_t

len
OP_ASSIGNMENT

newlen
SEMICOLON
IF
BRACKET_O

len
GREATER

table
MINUS
GREATER

maxlen
BRACKET_C

len
OP_ASSIGNMENT

table
MINUS
GREATER

maxlen
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O

table
MINUS
GREATER

data
COMMA

newval
COMMA

len
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

len
EQ

table
MINUS
GREATER

maxlen
BRACKET_C

len
MINUS
MINUS
SEMICOLON
BRACKET_O
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

table
MINUS
GREATER

data
BRACKET_C
CORNER_BRACKET_O

len
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

sysctl_intvec
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

__user
MULT

name
COMMA
TYPE_INT

nlen
COMMA

void

__user
MULT

oldval
COMMA

size_t

__user
MULT

oldlenp
COMMA

void

__user
MULT

newval
COMMA

size_t

newlen
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

newval
AND

newlen
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

__user
MULT

vec
OP_ASSIGNMENT
BRACKET_O
TYPE_INT

__user
MULT
BRACKET_C

newval
SEMICOLON
TYPE_INT
MULT

min
OP_ASSIGNMENT
BRACKET_O
TYPE_INT
MULT
BRACKET_C

table
MINUS
GREATER

extra1
SEMICOLON
TYPE_INT
MULT

max
OP_ASSIGNMENT
BRACKET_O
TYPE_INT
MULT
BRACKET_C

table
MINUS
GREATER

extra2
SEMICOLON

size_t

length
SEMICOLON
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

newlen
MODULO

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
NOT_EQ
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O
NOT

table
MINUS
GREATER

extra1
AND
NOT

table
MINUS
GREATER

extra2
BRACKET_C

return
NUMBER
SEMICOLON
IF
BRACKET_O

newlen
GREATER

table
MINUS
GREATER

maxlen
BRACKET_C

newlen
OP_ASSIGNMENT

table
MINUS
GREATER

maxlen
SEMICOLON

length
OP_ASSIGNMENT

newlen
DIV

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

length
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

value
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

value
COMMA

vec
PLUS

i
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

min
AND

value
LESS

min
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

max
AND

value
GREATER

max
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

sysctl_jiffies
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

__user
MULT

name
COMMA
TYPE_INT

nlen
COMMA

void

__user
MULT

oldval
COMMA

size_t

__user
MULT

oldlenp
COMMA

void

__user
MULT

newval
COMMA

size_t

newlen
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

oldval
AND

oldlenp
BRACKET_C
CURLY_BRACKET_O

size_t

olen
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

olen
COMMA

oldlenp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

olen
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

val
SEMICOLON
IF
BRACKET_O

olen
LESS

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

val
OP_ASSIGNMENT
MULT
BRACKET_O
TYPE_INT
MULT
BRACKET_C
BRACKET_O

table
MINUS
GREATER

data
BRACKET_C
DIV

HZ
SEMICOLON
IF
BRACKET_O

put_user
BRACKET_O

val
COMMA
BRACKET_O
TYPE_INT

__user
MULT
BRACKET_C

oldval
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

put_user
BRACKET_O

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA

oldlenp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

newval
AND

newlen
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

new
SEMICOLON
IF
BRACKET_O

newlen
NOT_EQ

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

new
COMMA
BRACKET_O
TYPE_INT

__user
MULT
BRACKET_C

newval
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
MULT
BRACKET_O
TYPE_INT
MULT
BRACKET_C
BRACKET_O

table
MINUS
GREATER

data
BRACKET_C
OP_ASSIGNMENT

new
MULT

HZ
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

sysctl_ms_jiffies
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

__user
MULT

name
COMMA
TYPE_INT

nlen
COMMA

void

__user
MULT

oldval
COMMA

size_t

__user
MULT

oldlenp
COMMA

void

__user
MULT

newval
COMMA

size_t

newlen
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

oldval
AND

oldlenp
BRACKET_C
CURLY_BRACKET_O

size_t

olen
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

olen
COMMA

oldlenp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

olen
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

val
SEMICOLON
IF
BRACKET_O

olen
LESS

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

val
OP_ASSIGNMENT

jiffies_to_msecs
BRACKET_O
MULT
BRACKET_O
TYPE_INT
MULT
BRACKET_C
BRACKET_O

table
MINUS
GREATER

data
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

put_user
BRACKET_O

val
COMMA
BRACKET_O
TYPE_INT

__user
MULT
BRACKET_C

oldval
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

put_user
BRACKET_O

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
COMMA

oldlenp
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

newval
AND

newlen
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

new
SEMICOLON
IF
BRACKET_O

newlen
NOT_EQ

sizeof
BRACKET_O
TYPE_INT
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

new
COMMA
BRACKET_O
TYPE_INT

__user
MULT
BRACKET_C

newval
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
MULT
BRACKET_O
TYPE_INT
MULT
BRACKET_C
BRACKET_O

table
MINUS
GREATER

data
BRACKET_C
OP_ASSIGNMENT

msecs_to_jiffies
BRACKET_O

new
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ELSE

asmlinkage
TYPE_LONG

sys_sysctl
BRACKET_O
STRUCT

__sysctl_args

__user
MULT

args
BRACKET_C
CURLY_BRACKET_O

static
TYPE_INT

msg_count
SEMICOLON
STRUCT

__sysctl_args

tmp
SEMICOLON
TYPE_INT

name
CORNER_BRACKET_O

CTL_MAXNAME
CORNER_BRACKET_C
SEMICOLON
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

tmp
COMMA

args
COMMA

sizeof
BRACKET_O

tmp
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O

tmp
DOT

nlen
LE_EQ
NUMBER
OR

tmp
DOT

nlen
GR_EQ

CTL_MAXNAME
BRACKET_C

return
MINUS

ENOTDIR
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

tmp
DOT

nlen
SEMICOLON

i
PLUS
PLUS
BRACKET_C
IF
BRACKET_O

get_user
BRACKET_O

name
CORNER_BRACKET_O

i
CORNER_BRACKET_C
COMMA

tmp
DOT

name
PLUS

i
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
IF
BRACKET_O
BRACKET_O

tmp
DOT

nlen
EQ
NUMBER
BRACKET_C
AND
BRACKET_O

name
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ

CTL_KERN
BRACKET_C
AND
BRACKET_O

name
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
EQ

KERN_VERSION
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

msg_count
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

msg_count
PLUS
PLUS
SEMICOLON

printk
BRACKET_O

KERN_INFO
STRING
STRING
COMMA

current
MINUS
GREATER

comm
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

tmp
DOT

nlen
SEMICOLON

i
PLUS
PLUS
BRACKET_C

printk
BRACKET_O
STRING
COMMA

name
CORNER_BRACKET_O

i
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

printk
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

out
COLON

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

sysctl_string
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

__user
MULT

name
COMMA
TYPE_INT

nlen
COMMA

void

__user
MULT

oldval
COMMA

size_t

__user
MULT

oldlenp
COMMA

void

__user
MULT

newval
COMMA

size_t

newlen
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

sysctl_intvec
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

__user
MULT

name
COMMA
TYPE_INT

nlen
COMMA

void

__user
MULT

oldval
COMMA

size_t

__user
MULT

oldlenp
COMMA

void

__user
MULT

newval
COMMA

size_t

newlen
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

sysctl_jiffies
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

__user
MULT

name
COMMA
TYPE_INT

nlen
COMMA

void

__user
MULT

oldval
COMMA

size_t

__user
MULT

oldlenp
COMMA

void

__user
MULT

newval
COMMA

size_t

newlen
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

sysctl_ms_jiffies
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

__user
MULT

name
COMMA
TYPE_INT

nlen
COMMA

void

__user
MULT

oldval
COMMA

size_t

__user
MULT

oldlenp
COMMA

void

__user
MULT

newval
COMMA

size_t

newlen
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

EXPORT_SYMBOL
BRACKET_O

proc_dointvec
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

proc_dointvec_jiffies
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

proc_dointvec_minmax
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

proc_dointvec_userhz_jiffies
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

proc_dointvec_ms_jiffies
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

proc_dostring
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

proc_doulongvec_minmax
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

proc_doulongvec_ms_jiffies_minmax
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

register_sysctl_table
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

sysctl_intvec
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

sysctl_jiffies
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

sysctl_ms_jiffies
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

sysctl_string
BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

unregister_sysctl_table
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

asmlinkage
TYPE_LONG

sys_ni_syscall
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return
MINUS

ENOSYS
SEMICOLON
CURLY_BRACKET_C

cond_syscall
BRACKET_O

sys_nfsservctl
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_quotactl
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_acct
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_lookup_dcookie
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_swapon
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_swapoff
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_kexec_load
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_kexec_load
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_init_module
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_delete_module
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_socketpair
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_bind
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_listen
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_accept
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_connect
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_getsockname
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_getpeername
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_sendto
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_send
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_recvfrom
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_recv
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_socket
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_setsockopt
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_getsockopt
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_shutdown
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_sendmsg
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_recvmsg
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_socketcall
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_futex
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_futex
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_set_robust_list
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_set_robust_list
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_get_robust_list
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_get_robust_list
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_epoll_create
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_epoll_ctl
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_epoll_wait
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_epoll_pwait
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_semget
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_semop
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_semtimedop
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_semctl
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_msgget
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_msgsnd
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_msgrcv
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_msgctl
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_shmget
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_shmat
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_shmdt
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_shmctl
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_mq_open
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_mq_unlink
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_mq_timedsend
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_mq_timedreceive
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_mq_notify
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_mq_getsetattr
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_mq_open
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_mq_timedsend
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_mq_timedreceive
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_mq_notify
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_mq_getsetattr
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_mbind
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_get_mempolicy
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_set_mempolicy
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_mbind
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_get_mempolicy
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_set_mempolicy
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_add_key
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_request_key
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_keyctl
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_keyctl
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_socketcall
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_inotify_init
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_inotify_add_watch
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_inotify_rm_watch
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_migrate_pages
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_move_pages
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_chown16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_fchown16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_getegid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_geteuid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_getgid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_getgroups16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_getresgid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_getresuid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_getuid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_lchown16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_setfsgid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_setfsuid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_setgid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_setgroups16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_setregid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_setresgid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_setresuid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_setreuid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_setuid16
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_vm86old
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_vm86
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_ipc
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_sysctl
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_pciconfig_read
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_pciconfig_write
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_pciconfig_iobase
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys32_ipc
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys32_sysctl
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

ppc_rtas
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_spu_run
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_spu_create
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_mprotect
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_msync
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_mlock
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_munlock
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_mlockall
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_munlockall
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_mincore
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_madvise
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_mremap
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_remap_file_pages
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_move_pages
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_migrate_pages
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_bdflush
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_ioprio_set
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_ioprio_get
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_signalfd
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_timerfd
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_signalfd
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

compat_sys_timerfd
BRACKET_C
SEMICOLON

cond_syscall
BRACKET_O

sys_eventfd
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_DEFINE

TASKSTATS_CPUMASK_MAXLEN
BRACKET_O
NUMBER
PLUS
NUMBER
MULT

NR_CPUS
BRACKET_C

static

DEFINE_PER_CPU
BRACKET_O

__u32
COMMA

taskstats_seqnum
BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
NUMBER
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

family_registered
SEMICOLON
STRUCT

kmem_cache
MULT

taskstats_cache
SEMICOLON

static
STRUCT

genl_family

family
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

id
OP_ASSIGNMENT

GENL_ID_GENERATE
COMMA
DOT

name
OP_ASSIGNMENT

TASKSTATS_GENL_NAME
COMMA
DOT

version
OP_ASSIGNMENT

TASKSTATS_GENL_VERSION
COMMA
DOT

maxattr
OP_ASSIGNMENT

TASKSTATS_CMD_ATTR_MAX
COMMA
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

nla_policy

taskstats_cmd_get_policy
CORNER_BRACKET_O

TASKSTATS_CMD_ATTR_MAX
PLUS
NUMBER
CORNER_BRACKET_C

__read_mostly
OP_ASSIGNMENT
CURLY_BRACKET_O
CORNER_BRACKET_O

TASKSTATS_CMD_ATTR_PID
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

type
OP_ASSIGNMENT

NLA_U32
CURLY_BRACKET_C
COMMA
CORNER_BRACKET_O

TASKSTATS_CMD_ATTR_TGID
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

type
OP_ASSIGNMENT

NLA_U32
CURLY_BRACKET_C
COMMA
CORNER_BRACKET_O

TASKSTATS_CMD_ATTR_REGISTER_CPUMASK
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

type
OP_ASSIGNMENT

NLA_STRING
CURLY_BRACKET_C
COMMA
CORNER_BRACKET_O

TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

type
OP_ASSIGNMENT

NLA_STRING
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_C
SEMICOLON
STRUCT

listener
CURLY_BRACKET_O
STRUCT

list_head

list
SEMICOLON

pid_t

pid
SEMICOLON
TYPE_CHAR

valid
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
STRUCT

listener_list
CURLY_BRACKET_O
STRUCT

rw_semaphore

sem
SEMICOLON
STRUCT

list_head

list
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O
STRUCT

listener_list
COMMA

listener_array
BRACKET_C
SEMICOLON

enum

actions
CURLY_BRACKET_O

REGISTER
COMMA

DEREGISTER
COMMA

CPU_DONT_CARE
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

prepare_reply
BRACKET_O
STRUCT

genl_info
MULT

info
COMMA

u8

cmd
COMMA
STRUCT

sk_buff
MULT
MULT

skbp
COMMA

size_t

size
BRACKET_C
CURLY_BRACKET_O
STRUCT

sk_buff
MULT

skb
SEMICOLON

void
MULT

reply
SEMICOLON

skb
OP_ASSIGNMENT

genlmsg_new
BRACKET_O

size
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

skb
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON
IF
BRACKET_O
NOT

info
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

seq
OP_ASSIGNMENT

get_cpu_var
BRACKET_O

taskstats_seqnum
BRACKET_C
PLUS
PLUS
SEMICOLON

put_cpu_var
BRACKET_O

taskstats_seqnum
BRACKET_C
SEMICOLON

reply
OP_ASSIGNMENT

genlmsg_put
BRACKET_O

skb
COMMA
NUMBER
COMMA

seq
COMMA
AMPERSANT

family
COMMA
NUMBER
COMMA

cmd
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE

reply
OP_ASSIGNMENT

genlmsg_put_reply
BRACKET_O

skb
COMMA

info
COMMA
AMPERSANT

family
COMMA
NUMBER
COMMA

cmd
BRACKET_C
SEMICOLON
IF
BRACKET_O

reply
EQ

NULL
BRACKET_C
CURLY_BRACKET_O

nlmsg_free
BRACKET_O

skb
BRACKET_C
SEMICOLON

return
MINUS

EINVAL
SEMICOLON
CURLY_BRACKET_C
MULT

skbp
OP_ASSIGNMENT

skb
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

send_reply
BRACKET_O
STRUCT

sk_buff
MULT

skb
COMMA

pid_t

pid
BRACKET_C
CURLY_BRACKET_O
STRUCT

genlmsghdr
MULT

genlhdr
OP_ASSIGNMENT

nlmsg_data
BRACKET_O

nlmsg_hdr
BRACKET_O

skb
BRACKET_C
BRACKET_C
SEMICOLON

void
MULT

reply
OP_ASSIGNMENT

genlmsg_data
BRACKET_O

genlhdr
BRACKET_C
SEMICOLON
TYPE_INT

rc
SEMICOLON

rc
OP_ASSIGNMENT

genlmsg_end
BRACKET_O

skb
COMMA

reply
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

nlmsg_free
BRACKET_O

skb
BRACKET_C
SEMICOLON

return

rc
SEMICOLON
CURLY_BRACKET_C

return

genlmsg_unicast
BRACKET_O

skb
COMMA

pid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

send_cpu_listeners
BRACKET_O
STRUCT

sk_buff
MULT

skb
COMMA
STRUCT

listener_list
MULT

listeners
BRACKET_C
CURLY_BRACKET_O
STRUCT

genlmsghdr
MULT

genlhdr
OP_ASSIGNMENT

nlmsg_data
BRACKET_O

nlmsg_hdr
BRACKET_O

skb
BRACKET_C
BRACKET_C
SEMICOLON
STRUCT

listener
MULT

s
COMMA
MULT

tmp
SEMICOLON
STRUCT

sk_buff
MULT

skb_next
COMMA
MULT

skb_cur
OP_ASSIGNMENT

skb
SEMICOLON

void
MULT

reply
OP_ASSIGNMENT

genlmsg_data
BRACKET_O

genlhdr
BRACKET_C
SEMICOLON
TYPE_INT

rc
COMMA

delcount
OP_ASSIGNMENT
NUMBER
SEMICOLON

rc
OP_ASSIGNMENT

genlmsg_end
BRACKET_O

skb
COMMA

reply
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

nlmsg_free
BRACKET_O

skb
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

rc
OP_ASSIGNMENT
NUMBER
SEMICOLON

down_read
BRACKET_O
AMPERSANT

listeners
MINUS
GREATER

sem
BRACKET_C
SEMICOLON

list_for_each_entry
BRACKET_O

s
COMMA
AMPERSANT

listeners
MINUS
GREATER

list
COMMA

list
BRACKET_C
CURLY_BRACKET_O

skb_next
OP_ASSIGNMENT

NULL
SEMICOLON
IF
BRACKET_O
NOT

list_is_last
BRACKET_O
AMPERSANT

s
MINUS
GREATER

list
COMMA
AMPERSANT

listeners
MINUS
GREATER

list
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

skb_next
OP_ASSIGNMENT

skb_clone
BRACKET_O

skb_cur
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

skb_next
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C

rc
OP_ASSIGNMENT

genlmsg_unicast
BRACKET_O

skb_cur
COMMA

s
MINUS
GREATER

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
EQ
MINUS

ECONNREFUSED
BRACKET_C
CURLY_BRACKET_O

s
MINUS
GREATER

valid
OP_ASSIGNMENT
NUMBER
SEMICOLON

delcount
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

skb_cur
OP_ASSIGNMENT

skb_next
SEMICOLON
CURLY_BRACKET_C

up_read
BRACKET_O
AMPERSANT

listeners
MINUS
GREATER

sem
BRACKET_C
SEMICOLON
IF
BRACKET_O

skb_cur
BRACKET_C

nlmsg_free
BRACKET_O

skb_cur
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

delcount
BRACKET_C

return
SEMICOLON

down_write
BRACKET_O
AMPERSANT

listeners
MINUS
GREATER

sem
BRACKET_C
SEMICOLON

list_for_each_entry_safe
BRACKET_O

s
COMMA

tmp
COMMA
AMPERSANT

listeners
MINUS
GREATER

list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

s
MINUS
GREATER

valid
BRACKET_C
CURLY_BRACKET_O

list_del
BRACKET_O
AMPERSANT

s
MINUS
GREATER

list
BRACKET_C
SEMICOLON

kfree
BRACKET_O

s
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

up_write
BRACKET_O
AMPERSANT

listeners
MINUS
GREATER

sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

fill_pid
BRACKET_O

pid_t

pid
COMMA
STRUCT

task_struct
MULT

tsk
COMMA
STRUCT

taskstats
MULT

stats
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

rc
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

tsk
BRACKET_C
CURLY_BRACKET_O

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

tsk
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O

tsk
BRACKET_C

get_task_struct
BRACKET_O

tsk
BRACKET_C
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tsk
BRACKET_C

return
MINUS

ESRCH
SEMICOLON
CURLY_BRACKET_C
ELSE

get_task_struct
BRACKET_O

tsk
BRACKET_C
SEMICOLON

memset
BRACKET_O

stats
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
MULT

stats
BRACKET_C
BRACKET_C
SEMICOLON

delayacct_add_tsk
BRACKET_O

stats
COMMA

tsk
BRACKET_C
SEMICOLON

stats
MINUS
GREATER

version
OP_ASSIGNMENT

TASKSTATS_VERSION
SEMICOLON

bacct_add_tsk
BRACKET_O

stats
COMMA

tsk
BRACKET_C
SEMICOLON

xacct_add_tsk
BRACKET_O

stats
COMMA

tsk
BRACKET_C
SEMICOLON

put_task_struct
BRACKET_O

tsk
BRACKET_C
SEMICOLON

return

rc
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

fill_tgid
BRACKET_O

pid_t

tgid
COMMA
STRUCT

task_struct
MULT

first
COMMA
STRUCT

taskstats
MULT

stats
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

tsk
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

rc
OP_ASSIGNMENT
MINUS

ESRCH
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

first
BRACKET_C

first
OP_ASSIGNMENT

find_task_by_pid
BRACKET_O

tgid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

first
OR
NOT

lock_task_sighand
BRACKET_O

first
COMMA
AMPERSANT

flags
BRACKET_C
BRACKET_C

goto

out
SEMICOLON
IF
BRACKET_O

first
MINUS
GREATER

signal
MINUS
GREATER

stats
BRACKET_C

memcpy
BRACKET_O

stats
COMMA

first
MINUS
GREATER

signal
MINUS
GREATER

stats
COMMA

sizeof
BRACKET_O
MULT

stats
BRACKET_C
BRACKET_C
SEMICOLON
ELSE

memset
BRACKET_O

stats
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
MULT

stats
BRACKET_C
BRACKET_C
SEMICOLON

tsk
OP_ASSIGNMENT

first
SEMICOLON
DO
CURLY_BRACKET_O
IF
BRACKET_O

tsk
MINUS
GREATER

exit_state
BRACKET_C
CONTINUE
SEMICOLON

delayacct_add_tsk
BRACKET_O

stats
COMMA

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

while_each_thread
BRACKET_O

first
COMMA

tsk
BRACKET_C
SEMICOLON

unlock_task_sighand
BRACKET_O

first
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON

rc
OP_ASSIGNMENT
NUMBER
SEMICOLON

out
COLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

stats
MINUS
GREATER

version
OP_ASSIGNMENT

TASKSTATS_VERSION
SEMICOLON

return

rc
SEMICOLON
CURLY_BRACKET_C

static

void

fill_tgid_exit
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tsk
MINUS
GREATER

signal
MINUS
GREATER

stats
BRACKET_C

goto

ret
SEMICOLON

delayacct_add_tsk
BRACKET_O

tsk
MINUS
GREATER

signal
MINUS
GREATER

stats
COMMA

tsk
BRACKET_C
SEMICOLON

ret
COLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
COMMA

flags
BRACKET_C
SEMICOLON

return
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

add_del_listener
BRACKET_O

pid_t

pid
COMMA

cpumask_t
MULT

maskp
COMMA
TYPE_INT

isadd
BRACKET_C
CURLY_BRACKET_O
STRUCT

listener_list
MULT

listeners
SEMICOLON
STRUCT

listener
MULT

s
COMMA
MULT

tmp
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

cpu
SEMICOLON

cpumask_t

mask
OP_ASSIGNMENT
MULT

maskp
SEMICOLON
IF
BRACKET_O
NOT

cpus_subset
BRACKET_O

mask
COMMA

cpu_possible_map
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

isadd
EQ

REGISTER
BRACKET_C
CURLY_BRACKET_O

for_each_cpu_mask
BRACKET_O

cpu
COMMA

mask
BRACKET_C
CURLY_BRACKET_O

s
OP_ASSIGNMENT

kmalloc_node
BRACKET_O

sizeof
BRACKET_O
STRUCT

listener
BRACKET_C
COMMA

GFP_KERNEL
COMMA

cpu_to_node
BRACKET_O

cpu
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

s
BRACKET_C

goto

cleanup
SEMICOLON

s
MINUS
GREATER

pid
OP_ASSIGNMENT

pid
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

s
MINUS
GREATER

list
BRACKET_C
SEMICOLON

s
MINUS
GREATER

valid
OP_ASSIGNMENT
NUMBER
SEMICOLON

listeners
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

listener_array
COMMA

cpu
BRACKET_C
SEMICOLON

down_write
BRACKET_O
AMPERSANT

listeners
MINUS
GREATER

sem
BRACKET_C
SEMICOLON

list_add
BRACKET_O
AMPERSANT

s
MINUS
GREATER

list
COMMA
AMPERSANT

listeners
MINUS
GREATER

list
BRACKET_C
SEMICOLON

up_write
BRACKET_O
AMPERSANT

listeners
MINUS
GREATER

sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

cleanup
COLON

for_each_cpu_mask
BRACKET_O

cpu
COMMA

mask
BRACKET_C
CURLY_BRACKET_O

listeners
OP_ASSIGNMENT
AMPERSANT

per_cpu
BRACKET_O

listener_array
COMMA

cpu
BRACKET_C
SEMICOLON

down_write
BRACKET_O
AMPERSANT

listeners
MINUS
GREATER

sem
BRACKET_C
SEMICOLON

list_for_each_entry_safe
BRACKET_O

s
COMMA

tmp
COMMA
AMPERSANT

listeners
MINUS
GREATER

list
COMMA

list
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

s
MINUS
GREATER

pid
EQ

pid
BRACKET_C
CURLY_BRACKET_O

list_del
BRACKET_O
AMPERSANT

s
MINUS
GREATER

list
BRACKET_C
SEMICOLON

kfree
BRACKET_O

s
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

up_write
BRACKET_O
AMPERSANT

listeners
MINUS
GREATER

sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

parse
BRACKET_O
STRUCT

nlattr
MULT

na
COMMA

cpumask_t
MULT

mask
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

data
SEMICOLON
TYPE_INT

len
SEMICOLON
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O

na
EQ

NULL
BRACKET_C

return
NUMBER
SEMICOLON

len
OP_ASSIGNMENT

nla_len
BRACKET_O

na
BRACKET_C
SEMICOLON
IF
BRACKET_O

len
GREATER

TASKSTATS_CPUMASK_MAXLEN
BRACKET_C

return
MINUS

E2BIG
SEMICOLON
IF
BRACKET_O

len
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

data
OP_ASSIGNMENT

kmalloc
BRACKET_O

len
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

data
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

nla_strlcpy
BRACKET_O

data
COMMA

na
COMMA

len
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

cpulist_parse
BRACKET_O

data
COMMA
MULT

mask
BRACKET_C
SEMICOLON

kfree
BRACKET_O

data
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

taskstats
MULT

mk_reply
BRACKET_O
STRUCT

sk_buff
MULT

skb
COMMA
TYPE_INT

type
COMMA

u32

pid
BRACKET_C
CURLY_BRACKET_O
STRUCT

nlattr
MULT

na
COMMA
MULT

ret
SEMICOLON
TYPE_INT

aggr
SEMICOLON

aggr
OP_ASSIGNMENT
BRACKET_O

type
EQ

TASKSTATS_TYPE_PID
BRACKET_C
QUESTION_MARK

TASKSTATS_TYPE_AGGR_PID
COLON

TASKSTATS_TYPE_AGGR_TGID
SEMICOLON

na
OP_ASSIGNMENT

nla_nest_start
BRACKET_O

skb
COMMA

aggr
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

na
BRACKET_C

goto

err
SEMICOLON
IF
BRACKET_O

nla_put
BRACKET_O

skb
COMMA

type
COMMA

sizeof
BRACKET_O

pid
BRACKET_C
COMMA
AMPERSANT

pid
BRACKET_C
LESS
NUMBER
BRACKET_C

goto

err
SEMICOLON

ret
OP_ASSIGNMENT

nla_reserve
BRACKET_O

skb
COMMA

TASKSTATS_TYPE_STATS
COMMA

sizeof
BRACKET_O
STRUCT

taskstats
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

ret
BRACKET_C

goto

err
SEMICOLON

nla_nest_end
BRACKET_O

skb
COMMA

na
BRACKET_C
SEMICOLON

return

nla_data
BRACKET_O

ret
BRACKET_C
SEMICOLON

err
COLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

taskstats_user_cmd
BRACKET_O
STRUCT

sk_buff
MULT

skb
COMMA
STRUCT

genl_info
MULT

info
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

rc
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

sk_buff
MULT

rep_skb
SEMICOLON
STRUCT

taskstats
MULT

stats
SEMICOLON

size_t

size
SEMICOLON

cpumask_t

mask
SEMICOLON

rc
OP_ASSIGNMENT

parse
BRACKET_O

info
MINUS
GREATER

attrs
CORNER_BRACKET_O

TASKSTATS_CMD_ATTR_REGISTER_CPUMASK
CORNER_BRACKET_C
COMMA
AMPERSANT

mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
LESS
NUMBER
BRACKET_C

return

rc
SEMICOLON
IF
BRACKET_O

rc
EQ
NUMBER
BRACKET_C

return

add_del_listener
BRACKET_O

info
MINUS
GREATER

snd_pid
COMMA
AMPERSANT

mask
COMMA

REGISTER
BRACKET_C
SEMICOLON

rc
OP_ASSIGNMENT

parse
BRACKET_O

info
MINUS
GREATER

attrs
CORNER_BRACKET_O

TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK
CORNER_BRACKET_C
COMMA
AMPERSANT

mask
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
LESS
NUMBER
BRACKET_C

return

rc
SEMICOLON
IF
BRACKET_O

rc
EQ
NUMBER
BRACKET_C

return

add_del_listener
BRACKET_O

info
MINUS
GREATER

snd_pid
COMMA
AMPERSANT

mask
COMMA

DEREGISTER
BRACKET_C
SEMICOLON

size
OP_ASSIGNMENT

nla_total_size
BRACKET_O

sizeof
BRACKET_O

u32
BRACKET_C
BRACKET_C
PLUS

nla_total_size
BRACKET_O

sizeof
BRACKET_O
STRUCT

taskstats
BRACKET_C
BRACKET_C
PLUS

nla_total_size
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

rc
OP_ASSIGNMENT

prepare_reply
BRACKET_O

info
COMMA

TASKSTATS_CMD_NEW
COMMA
AMPERSANT

rep_skb
COMMA

size
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
LESS
NUMBER
BRACKET_C

return

rc
SEMICOLON

rc
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON
IF
BRACKET_O

info
MINUS
GREATER

attrs
CORNER_BRACKET_O

TASKSTATS_CMD_ATTR_PID
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

u32

pid
OP_ASSIGNMENT

nla_get_u32
BRACKET_O

info
MINUS
GREATER

attrs
CORNER_BRACKET_O

TASKSTATS_CMD_ATTR_PID
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

stats
OP_ASSIGNMENT

mk_reply
BRACKET_O

rep_skb
COMMA

TASKSTATS_TYPE_PID
COMMA

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

stats
BRACKET_C

goto

err
SEMICOLON

rc
OP_ASSIGNMENT

fill_pid
BRACKET_O

pid
COMMA

NULL
COMMA

stats
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
LESS
NUMBER
BRACKET_C

goto

err
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

info
MINUS
GREATER

attrs
CORNER_BRACKET_O

TASKSTATS_CMD_ATTR_TGID
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

u32

tgid
OP_ASSIGNMENT

nla_get_u32
BRACKET_O

info
MINUS
GREATER

attrs
CORNER_BRACKET_O

TASKSTATS_CMD_ATTR_TGID
CORNER_BRACKET_C
BRACKET_C
SEMICOLON

stats
OP_ASSIGNMENT

mk_reply
BRACKET_O

rep_skb
COMMA

TASKSTATS_TYPE_TGID
COMMA

tgid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

stats
BRACKET_C

goto

err
SEMICOLON

rc
OP_ASSIGNMENT

fill_tgid
BRACKET_O

tgid
COMMA

NULL
COMMA

stats
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
LESS
NUMBER
BRACKET_C

goto

err
SEMICOLON
CURLY_BRACKET_C
ELSE

goto

err
SEMICOLON

return

send_reply
BRACKET_O

rep_skb
COMMA

info
MINUS
GREATER

snd_pid
BRACKET_C
SEMICOLON

err
COLON

nlmsg_free
BRACKET_O

rep_skb
BRACKET_C
SEMICOLON

return

rc
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

taskstats
MULT

taskstats_tgid_alloc
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

signal_struct
MULT

sig
OP_ASSIGNMENT

tsk
MINUS
GREATER

signal
SEMICOLON
STRUCT

taskstats
MULT

stats
SEMICOLON
IF
BRACKET_O

sig
MINUS
GREATER

stats
OR

thread_group_empty
BRACKET_O

tsk
BRACKET_C
BRACKET_C

goto

ret
SEMICOLON

stats
OP_ASSIGNMENT

kmem_cache_zalloc
BRACKET_O

taskstats_cache
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

sig
MINUS
GREATER

stats
BRACKET_C
CURLY_BRACKET_O

sig
MINUS
GREATER

stats
OP_ASSIGNMENT

stats
SEMICOLON

stats
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

tsk
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON
IF
BRACKET_O

stats
BRACKET_C

kmem_cache_free
BRACKET_O

taskstats_cache
COMMA

stats
BRACKET_C
SEMICOLON

ret
COLON

return

sig
MINUS
GREATER

stats
SEMICOLON
CURLY_BRACKET_C

void

taskstats_exit
BRACKET_O
STRUCT

task_struct
MULT

tsk
COMMA
TYPE_INT

group_dead
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

rc
SEMICOLON
STRUCT

listener_list
MULT

listeners
SEMICOLON
STRUCT

taskstats
MULT

stats
SEMICOLON
STRUCT

sk_buff
MULT

rep_skb
SEMICOLON

size_t

size
SEMICOLON
TYPE_INT

is_thread_group
SEMICOLON
IF
BRACKET_O
NOT

family_registered
BRACKET_C

return
SEMICOLON

size
OP_ASSIGNMENT

nla_total_size
BRACKET_O

sizeof
BRACKET_O

u32
BRACKET_C
BRACKET_C
PLUS

nla_total_size
BRACKET_O

sizeof
BRACKET_O
STRUCT

taskstats
BRACKET_C
BRACKET_C
PLUS

nla_total_size
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

is_thread_group
OP_ASSIGNMENT
NOT
NOT

taskstats_tgid_alloc
BRACKET_O

tsk
BRACKET_C
SEMICOLON
IF
BRACKET_O

is_thread_group
BRACKET_C
CURLY_BRACKET_O

size
OP_ASSIGNMENT
NUMBER
MULT

size
SEMICOLON

fill_tgid_exit
BRACKET_O

tsk
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

listeners
OP_ASSIGNMENT
AMPERSANT

__raw_get_cpu_var
BRACKET_O

listener_array
BRACKET_C
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

listeners
MINUS
GREATER

list
BRACKET_C
BRACKET_C

return
SEMICOLON

rc
OP_ASSIGNMENT

prepare_reply
BRACKET_O

NULL
COMMA

TASKSTATS_CMD_NEW
COMMA
AMPERSANT

rep_skb
COMMA

size
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
LESS
NUMBER
BRACKET_C

return
SEMICOLON

stats
OP_ASSIGNMENT

mk_reply
BRACKET_O

rep_skb
COMMA

TASKSTATS_TYPE_PID
COMMA

tsk
MINUS
GREATER

pid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

stats
BRACKET_C

goto

err
SEMICOLON

rc
OP_ASSIGNMENT

fill_pid
BRACKET_O

tsk
MINUS
GREATER

pid
COMMA

tsk
COMMA

stats
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
LESS
NUMBER
BRACKET_C

goto

err
SEMICOLON
IF
BRACKET_O
NOT

is_thread_group
OR
NOT

group_dead
BRACKET_C

goto

send
SEMICOLON

stats
OP_ASSIGNMENT

mk_reply
BRACKET_O

rep_skb
COMMA

TASKSTATS_TYPE_TGID
COMMA

tsk
MINUS
GREATER

tgid
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

stats
BRACKET_C

goto

err
SEMICOLON

memcpy
BRACKET_O

stats
COMMA

tsk
MINUS
GREATER

signal
MINUS
GREATER

stats
COMMA

sizeof
BRACKET_O
MULT

stats
BRACKET_C
BRACKET_C
SEMICOLON

send
COLON

send_cpu_listeners
BRACKET_O

rep_skb
COMMA

listeners
BRACKET_C
SEMICOLON

return
SEMICOLON

err
COLON

nlmsg_free
BRACKET_O

rep_skb
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

genl_ops

taskstats_ops
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

cmd
OP_ASSIGNMENT

TASKSTATS_CMD_GET
COMMA
DOT

doit
OP_ASSIGNMENT

taskstats_user_cmd
COMMA
DOT

policy
OP_ASSIGNMENT

taskstats_cmd_get_policy
COMMA
CURLY_BRACKET_C
SEMICOLON

void

__init

taskstats_init_early
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

i
SEMICOLON

taskstats_cache
OP_ASSIGNMENT

KMEM_CACHE
BRACKET_O

taskstats
COMMA

SLAB_PANIC
BRACKET_C
SEMICOLON

for_each_possible_cpu
BRACKET_O

i
BRACKET_C
CURLY_BRACKET_O

INIT_LIST_HEAD
BRACKET_O
AMPERSANT
BRACKET_O

per_cpu
BRACKET_O

listener_array
COMMA

i
BRACKET_C
DOT

list
BRACKET_C
BRACKET_C
SEMICOLON

init_rwsem
BRACKET_O
AMPERSANT
BRACKET_O

per_cpu
BRACKET_O

listener_array
COMMA

i
BRACKET_C
DOT

sem
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static
TYPE_INT

__init

taskstats_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

rc
SEMICOLON

rc
OP_ASSIGNMENT

genl_register_family
BRACKET_O
AMPERSANT

family
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
BRACKET_C

return

rc
SEMICOLON

rc
OP_ASSIGNMENT

genl_register_ops
BRACKET_O
AMPERSANT

family
COMMA
AMPERSANT

taskstats_ops
BRACKET_C
SEMICOLON
IF
BRACKET_O

rc
LESS
NUMBER
BRACKET_C

goto

err
SEMICOLON

family_registered
OP_ASSIGNMENT
NUMBER
SEMICOLON

return
NUMBER
SEMICOLON

err
COLON

genl_unregister_family
BRACKET_O
AMPERSANT

family
BRACKET_C
SEMICOLON

return

rc
SEMICOLON
CURLY_BRACKET_C

late_initcall
BRACKET_O

taskstats_init
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
STRUCT

timezone

sys_tz
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

sys_tz
BRACKET_C
SEMICOLON
PP_IFDEF

__ARCH_WANT_SYS_TIME

asmlinkage
TYPE_LONG

sys_time
BRACKET_O

time_t

__user
MULT

tloc
BRACKET_C
CURLY_BRACKET_O

time_t

i
SEMICOLON
STRUCT

timeval

tv
SEMICOLON

do_gettimeofday
BRACKET_O
AMPERSANT

tv
BRACKET_C
SEMICOLON

i
OP_ASSIGNMENT

tv
DOT

tv_sec
SEMICOLON
IF
BRACKET_O

tloc
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

put_user
BRACKET_O

i
COMMA

tloc
BRACKET_C
BRACKET_C

i
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

i
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_stime
BRACKET_O

time_t

__user
MULT

tptr
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

tv
SEMICOLON
TYPE_INT

err
SEMICOLON
IF
BRACKET_O

get_user
BRACKET_O

tv
DOT

tv_sec
COMMA

tptr
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

tv
DOT

tv_nsec
OP_ASSIGNMENT
NUMBER
SEMICOLON

err
OP_ASSIGNMENT

security_settime
BRACKET_O
AMPERSANT

tv
COMMA

NULL
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
BRACKET_C

return

err
SEMICOLON

do_settimeofday
BRACKET_O
AMPERSANT

tv
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

asmlinkage
TYPE_LONG

sys_gettimeofday
BRACKET_O
STRUCT

timeval

__user
MULT

tv
COMMA
STRUCT

timezone

__user
MULT

tz
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

likely
BRACKET_O

tv
NOT_EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

timeval

ktv
SEMICOLON

do_gettimeofday
BRACKET_O
AMPERSANT

ktv
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

tv
COMMA
AMPERSANT

ktv
COMMA

sizeof
BRACKET_O

ktv
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

unlikely
BRACKET_O

tz
NOT_EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_to_user
BRACKET_O

tz
COMMA
AMPERSANT

sys_tz
COMMA

sizeof
BRACKET_O

sys_tz
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

inline

void

warp_clock
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

write_seqlock_irq
BRACKET_O
AMPERSANT

xtime_lock
BRACKET_C
SEMICOLON

wall_to_monotonic
DOT

tv_sec
ASSIGN_MINUS

sys_tz
DOT

tz_minuteswest
MULT
NUMBER
SEMICOLON

xtime
DOT

tv_sec
ASSIGN_PLUS

sys_tz
DOT

tz_minuteswest
MULT
NUMBER
SEMICOLON

time_interpolator_reset
BRACKET_O
BRACKET_C
SEMICOLON

write_sequnlock_irq
BRACKET_O
AMPERSANT

xtime_lock
BRACKET_C
SEMICOLON

clock_was_set
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

do_sys_settimeofday
BRACKET_O
STRUCT

timespec
MULT

tv
COMMA
STRUCT

timezone
MULT

tz
BRACKET_C
CURLY_BRACKET_O

static
TYPE_INT

firsttime
OP_ASSIGNMENT
NUMBER
SEMICOLON
TYPE_INT

error
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

tv
AND
NOT

timespec_valid
BRACKET_O

tv
BRACKET_C
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

error
OP_ASSIGNMENT

security_settime
BRACKET_O

tv
COMMA

tz
BRACKET_C
SEMICOLON
IF
BRACKET_O

error
BRACKET_C

return

error
SEMICOLON
IF
BRACKET_O

tz
BRACKET_C
CURLY_BRACKET_O

sys_tz
OP_ASSIGNMENT
MULT

tz
SEMICOLON
IF
BRACKET_O

firsttime
BRACKET_C
CURLY_BRACKET_O

firsttime
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

tv
BRACKET_C

warp_clock
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
IF
BRACKET_O

tv
BRACKET_C
CURLY_BRACKET_O

return

do_settimeofday
BRACKET_O

tv
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_settimeofday
BRACKET_O
STRUCT

timeval

__user
MULT

tv
COMMA
STRUCT

timezone

__user
MULT

tz
BRACKET_C
CURLY_BRACKET_O
STRUCT

timeval

user_tv
SEMICOLON
STRUCT

timespec

new_ts
SEMICOLON
STRUCT

timezone

new_tz
SEMICOLON
IF
BRACKET_O

tv
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

user_tv
COMMA

tv
COMMA

sizeof
BRACKET_O
MULT

tv
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

new_ts
DOT

tv_sec
OP_ASSIGNMENT

user_tv
DOT

tv_sec
SEMICOLON

new_ts
DOT

tv_nsec
OP_ASSIGNMENT

user_tv
DOT

tv_usec
MULT

NSEC_PER_USEC
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

tz
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

new_tz
COMMA

tz
COMMA

sizeof
BRACKET_O
MULT

tz
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return

do_sys_settimeofday
BRACKET_O

tv
QUESTION_MARK
AMPERSANT

new_ts
COLON

NULL
COMMA

tz
QUESTION_MARK
AMPERSANT

new_tz
COLON

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_adjtimex
BRACKET_O
STRUCT

timex

__user
MULT

txc_p
BRACKET_C
CURLY_BRACKET_O
STRUCT

timex

txc
SEMICOLON
TYPE_INT

ret
SEMICOLON
IF
BRACKET_O

copy_from_user
BRACKET_O
AMPERSANT

txc
COMMA

txc_p
COMMA

sizeof
BRACKET_O
STRUCT

timex
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

ret
OP_ASSIGNMENT

do_adjtimex
BRACKET_O
AMPERSANT

txc
BRACKET_C
SEMICOLON

return

copy_to_user
BRACKET_O

txc_p
COMMA
AMPERSANT

txc
COMMA

sizeof
BRACKET_O
STRUCT

timex
BRACKET_C
BRACKET_C
QUESTION_MARK
MINUS

EFAULT
COLON

ret
SEMICOLON
CURLY_BRACKET_C

inline
STRUCT

timespec

current_kernel_time
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

now
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

seq
SEMICOLON
DO
CURLY_BRACKET_O

seq
OP_ASSIGNMENT

read_seqbegin
BRACKET_O
AMPERSANT

xtime_lock
BRACKET_C
SEMICOLON

now
OP_ASSIGNMENT

xtime
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

read_seqretry
BRACKET_O
AMPERSANT

xtime_lock
COMMA

seq
BRACKET_C
BRACKET_C
SEMICOLON

return

now
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

current_kernel_time
BRACKET_C
SEMICOLON
STRUCT

timespec

current_fs_time
BRACKET_O
STRUCT

super_block
MULT

sb
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

now
OP_ASSIGNMENT

current_kernel_time
BRACKET_O
BRACKET_C
SEMICOLON

return

timespec_trunc
BRACKET_O

now
COMMA

sb
MINUS
GREATER

s_time_gran
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

current_fs_time
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

inline

jiffies_to_msecs
BRACKET_O
CONST
TYPE_UNSIGNED
TYPE_LONG

j
BRACKET_C
CURLY_BRACKET_O
PP_IF

HZ
LE_EQ

MSEC_PER_SEC
AND
NOT
BRACKET_O

MSEC_PER_SEC
MODULO

HZ
BRACKET_C

return
BRACKET_O

MSEC_PER_SEC
DIV

HZ
BRACKET_C
MULT

j
SEMICOLON
PP_ELIF

HZ
GREATER

MSEC_PER_SEC
AND
NOT
BRACKET_O

HZ
MODULO

MSEC_PER_SEC
BRACKET_C

return
BRACKET_O

j
PLUS
BRACKET_O

HZ
DIV

MSEC_PER_SEC
BRACKET_C
MINUS
NUMBER
BRACKET_C
DIV
BRACKET_O

HZ
DIV

MSEC_PER_SEC
BRACKET_C
SEMICOLON
PP_ELSE

return
BRACKET_O

j
MULT

MSEC_PER_SEC
BRACKET_C
DIV

HZ
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

jiffies_to_msecs
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

inline

jiffies_to_usecs
BRACKET_O
CONST
TYPE_UNSIGNED
TYPE_LONG

j
BRACKET_C
CURLY_BRACKET_O
PP_IF

HZ
LE_EQ

USEC_PER_SEC
AND
NOT
BRACKET_O

USEC_PER_SEC
MODULO

HZ
BRACKET_C

return
BRACKET_O

USEC_PER_SEC
DIV

HZ
BRACKET_C
MULT

j
SEMICOLON
PP_ELIF

HZ
GREATER

USEC_PER_SEC
AND
NOT
BRACKET_O

HZ
MODULO

USEC_PER_SEC
BRACKET_C

return
BRACKET_O

j
PLUS
BRACKET_O

HZ
DIV

USEC_PER_SEC
BRACKET_C
MINUS
NUMBER
BRACKET_C
DIV
BRACKET_O

HZ
DIV

USEC_PER_SEC
BRACKET_C
SEMICOLON
PP_ELSE

return
BRACKET_O

j
MULT

USEC_PER_SEC
BRACKET_C
DIV

HZ
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

jiffies_to_usecs
BRACKET_C
SEMICOLON
STRUCT

timespec

timespec_trunc
BRACKET_O
STRUCT

timespec

t
COMMA
TYPE_UNSIGNED

gran
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

gran
LE_EQ

jiffies_to_usecs
BRACKET_O
NUMBER
BRACKET_C
MULT
NUMBER
BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

gran
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

t
DOT

tv_nsec
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

t
DOT

tv_nsec
ASSIGN_MINUS

t
DOT

tv_nsec
MODULO

gran
SEMICOLON
CURLY_BRACKET_C

return

t
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

timespec_trunc
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_TIME_INTERPOLATION

void

getnstimeofday
BRACKET_O
STRUCT

timespec
MULT

tv
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

seq
COMMA

sec
COMMA

nsec
SEMICOLON
DO
CURLY_BRACKET_O

seq
OP_ASSIGNMENT

read_seqbegin
BRACKET_O
AMPERSANT

xtime_lock
BRACKET_C
SEMICOLON

sec
OP_ASSIGNMENT

xtime
DOT

tv_sec
SEMICOLON

nsec
OP_ASSIGNMENT

xtime
DOT

tv_nsec
PLUS

time_interpolator_get_offset
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

unlikely
BRACKET_O

read_seqretry
BRACKET_O
AMPERSANT

xtime_lock
COMMA

seq
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

unlikely
BRACKET_O

nsec
GR_EQ

NSEC_PER_SEC
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

nsec
ASSIGN_MINUS

NSEC_PER_SEC
SEMICOLON
PLUS
PLUS

sec
SEMICOLON
CURLY_BRACKET_C

tv
MINUS
GREATER

tv_sec
OP_ASSIGNMENT

sec
SEMICOLON

tv
MINUS
GREATER

tv_nsec
OP_ASSIGNMENT

nsec
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

getnstimeofday
BRACKET_C
SEMICOLON
TYPE_INT

do_settimeofday
BRACKET_O
STRUCT

timespec
MULT

tv
BRACKET_C
CURLY_BRACKET_O

time_t

wtm_sec
COMMA

sec
OP_ASSIGNMENT

tv
MINUS
GREATER

tv_sec
SEMICOLON
TYPE_LONG

wtm_nsec
COMMA

nsec
OP_ASSIGNMENT

tv
MINUS
GREATER

tv_nsec
SEMICOLON
IF
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

tv
MINUS
GREATER

tv_nsec
GR_EQ

NSEC_PER_SEC
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

write_seqlock_irq
BRACKET_O
AMPERSANT

xtime_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_O

wtm_sec
OP_ASSIGNMENT

wall_to_monotonic
DOT

tv_sec
PLUS
BRACKET_O

xtime
DOT

tv_sec
MINUS

sec
BRACKET_C
SEMICOLON

wtm_nsec
OP_ASSIGNMENT

wall_to_monotonic
DOT

tv_nsec
PLUS
BRACKET_O

xtime
DOT

tv_nsec
MINUS

nsec
BRACKET_C
SEMICOLON

set_normalized_timespec
BRACKET_O
AMPERSANT

xtime
COMMA

sec
COMMA

nsec
BRACKET_C
SEMICOLON

set_normalized_timespec
BRACKET_O
AMPERSANT

wall_to_monotonic
COMMA

wtm_sec
COMMA

wtm_nsec
BRACKET_C
SEMICOLON

time_adjust
OP_ASSIGNMENT
NUMBER
SEMICOLON

time_status
LOGICAL_OR
OP_ASSIGNMENT

STA_UNSYNC
SEMICOLON

time_maxerror
OP_ASSIGNMENT

NTP_PHASE_LIMIT
SEMICOLON

time_esterror
OP_ASSIGNMENT

NTP_PHASE_LIMIT
SEMICOLON

time_interpolator_reset
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

write_sequnlock_irq
BRACKET_O
AMPERSANT

xtime_lock
BRACKET_C
SEMICOLON

clock_was_set
BRACKET_O
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

do_settimeofday
BRACKET_C
SEMICOLON

void

do_gettimeofday
BRACKET_O
STRUCT

timeval
MULT

tv
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

seq
COMMA

nsec
COMMA

usec
COMMA

sec
COMMA

offset
SEMICOLON
DO
CURLY_BRACKET_O

seq
OP_ASSIGNMENT

read_seqbegin
BRACKET_O
AMPERSANT

xtime_lock
BRACKET_C
SEMICOLON

offset
OP_ASSIGNMENT

time_interpolator_get_offset
BRACKET_O
BRACKET_C
SEMICOLON

sec
OP_ASSIGNMENT

xtime
DOT

tv_sec
SEMICOLON

nsec
OP_ASSIGNMENT

xtime
DOT

tv_nsec
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

unlikely
BRACKET_O

read_seqretry
BRACKET_O
AMPERSANT

xtime_lock
COMMA

seq
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

usec
OP_ASSIGNMENT
BRACKET_O

nsec
PLUS

offset
BRACKET_C
DIV
NUMBER
SEMICOLON
WHILE
BRACKET_O

unlikely
BRACKET_O

usec
GR_EQ

USEC_PER_SEC
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

usec
ASSIGN_MINUS

USEC_PER_SEC
SEMICOLON
PLUS
PLUS

sec
SEMICOLON
CURLY_BRACKET_C

tv
MINUS
GREATER

tv_sec
OP_ASSIGNMENT

sec
SEMICOLON

tv
MINUS
GREATER

tv_usec
OP_ASSIGNMENT

usec
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

do_gettimeofday
BRACKET_C
SEMICOLON
PP_ELSE
PP_IFNDEF

CONFIG_GENERIC_TIME

void

getnstimeofday
BRACKET_O
STRUCT

timespec
MULT

tv
BRACKET_C
CURLY_BRACKET_O
STRUCT

timeval

x
SEMICOLON

do_gettimeofday
BRACKET_O
AMPERSANT

x
BRACKET_C
SEMICOLON

tv
MINUS
GREATER

tv_sec
OP_ASSIGNMENT

x
DOT

tv_sec
SEMICOLON

tv
MINUS
GREATER

tv_nsec
OP_ASSIGNMENT

x
DOT

tv_usec
MULT

NSEC_PER_USEC
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

getnstimeofday
BRACKET_C
SEMICOLON
PP_ENDIF
PP_ENDIF
TYPE_UNSIGNED
TYPE_LONG

mktime
BRACKET_O
CONST
TYPE_UNSIGNED
TYPE_INT

year0
COMMA
CONST
TYPE_UNSIGNED
TYPE_INT

mon0
COMMA
CONST
TYPE_UNSIGNED
TYPE_INT

day
COMMA
CONST
TYPE_UNSIGNED
TYPE_INT

hour
COMMA
CONST
TYPE_UNSIGNED
TYPE_INT

min
COMMA
CONST
TYPE_UNSIGNED
TYPE_INT

sec
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

mon
OP_ASSIGNMENT

mon0
COMMA

year
OP_ASSIGNMENT

year0
SEMICOLON
IF
BRACKET_O
NUMBER
GR_EQ
BRACKET_O
TYPE_INT
BRACKET_C
BRACKET_O

mon
ASSIGN_MINUS
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

mon
ASSIGN_PLUS
NUMBER
SEMICOLON

year
ASSIGN_MINUS
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
BRACKET_O
BRACKET_O
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
BRACKET_O

year
DIV
NUMBER
MINUS

year
DIV
NUMBER
PLUS

year
DIV
NUMBER
PLUS
NUMBER
MULT

mon
DIV
NUMBER
PLUS

day
BRACKET_C
PLUS

year
MULT
NUMBER
MINUS
NUMBER
BRACKET_C
MULT
NUMBER
PLUS

hour
BRACKET_C
MULT
NUMBER
PLUS

min
BRACKET_C
MULT
NUMBER
PLUS

sec
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

mktime
BRACKET_C
SEMICOLON

void

set_normalized_timespec
BRACKET_O
STRUCT

timespec
MULT

ts
COMMA

time_t

sec
COMMA
TYPE_LONG

nsec
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O

nsec
GR_EQ

NSEC_PER_SEC
BRACKET_C
CURLY_BRACKET_O

nsec
ASSIGN_MINUS

NSEC_PER_SEC
SEMICOLON
PLUS
PLUS

sec
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

nsec
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

nsec
ASSIGN_PLUS

NSEC_PER_SEC
SEMICOLON
MINUS
MINUS

sec
SEMICOLON
CURLY_BRACKET_C

ts
MINUS
GREATER

tv_sec
OP_ASSIGNMENT

sec
SEMICOLON

ts
MINUS
GREATER

tv_nsec
OP_ASSIGNMENT

nsec
SEMICOLON
CURLY_BRACKET_C
STRUCT

timespec

ns_to_timespec
BRACKET_O
CONST

s64

nsec
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

ts
SEMICOLON
IF
BRACKET_O
NOT

nsec
BRACKET_C

return
BRACKET_O
STRUCT

timespec
BRACKET_C
CURLY_BRACKET_O
NUMBER
COMMA
NUMBER
CURLY_BRACKET_C
SEMICOLON

ts
DOT

tv_sec
OP_ASSIGNMENT

div_long_long_rem_signed
BRACKET_O

nsec
COMMA

NSEC_PER_SEC
COMMA
AMPERSANT

ts
DOT

tv_nsec
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

nsec
LESS
NUMBER
BRACKET_C
BRACKET_C

set_normalized_timespec
BRACKET_O
AMPERSANT

ts
COMMA

ts
DOT

tv_sec
COMMA

ts
DOT

tv_nsec
BRACKET_C
SEMICOLON

return

ts
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

ns_to_timespec
BRACKET_C
SEMICOLON
STRUCT

timeval

ns_to_timeval
BRACKET_O
CONST

s64

nsec
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

ts
OP_ASSIGNMENT

ns_to_timespec
BRACKET_O

nsec
BRACKET_C
SEMICOLON
STRUCT

timeval

tv
SEMICOLON

tv
DOT

tv_sec
OP_ASSIGNMENT

ts
DOT

tv_sec
SEMICOLON

tv
DOT

tv_usec
OP_ASSIGNMENT
BRACKET_O

suseconds_t
BRACKET_C

ts
DOT

tv_nsec
DIV
NUMBER
SEMICOLON

return

tv
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

ns_to_timeval
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

msecs_to_jiffies
BRACKET_O
CONST
TYPE_UNSIGNED
TYPE_INT

m
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O
TYPE_INT
BRACKET_C

m
LESS
NUMBER
BRACKET_C

return

MAX_JIFFY_OFFSET
SEMICOLON
PP_IF

HZ
LE_EQ

MSEC_PER_SEC
AND
NOT
BRACKET_O

MSEC_PER_SEC
MODULO

HZ
BRACKET_C

return
BRACKET_O

m
PLUS
BRACKET_O

MSEC_PER_SEC
DIV

HZ
BRACKET_C
MINUS
NUMBER
BRACKET_C
DIV
BRACKET_O

MSEC_PER_SEC
DIV

HZ
BRACKET_C
SEMICOLON
PP_ELIF

HZ
GREATER

MSEC_PER_SEC
AND
NOT
BRACKET_O

HZ
MODULO

MSEC_PER_SEC
BRACKET_C
IF
BRACKET_O

m
GREATER

jiffies_to_msecs
BRACKET_O

MAX_JIFFY_OFFSET
BRACKET_C
BRACKET_C

return

MAX_JIFFY_OFFSET
SEMICOLON

return

m
MULT
BRACKET_O

HZ
DIV

MSEC_PER_SEC
BRACKET_C
SEMICOLON
PP_ELSE
IF
BRACKET_O

HZ
GREATER

MSEC_PER_SEC
AND

m
GREATER

jiffies_to_msecs
BRACKET_O

MAX_JIFFY_OFFSET
BRACKET_C
BRACKET_C

return

MAX_JIFFY_OFFSET
SEMICOLON

return
BRACKET_O

m
MULT

HZ
PLUS

MSEC_PER_SEC
MINUS
NUMBER
BRACKET_C
DIV

MSEC_PER_SEC
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

msecs_to_jiffies
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

usecs_to_jiffies
BRACKET_O
CONST
TYPE_UNSIGNED
TYPE_INT

u
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

u
GREATER

jiffies_to_usecs
BRACKET_O

MAX_JIFFY_OFFSET
BRACKET_C
BRACKET_C

return

MAX_JIFFY_OFFSET
SEMICOLON
PP_IF

HZ
LE_EQ

USEC_PER_SEC
AND
NOT
BRACKET_O

USEC_PER_SEC
MODULO

HZ
BRACKET_C

return
BRACKET_O

u
PLUS
BRACKET_O

USEC_PER_SEC
DIV

HZ
BRACKET_C
MINUS
NUMBER
BRACKET_C
DIV
BRACKET_O

USEC_PER_SEC
DIV

HZ
BRACKET_C
SEMICOLON
PP_ELIF

HZ
GREATER

USEC_PER_SEC
AND
NOT
BRACKET_O

HZ
MODULO

USEC_PER_SEC
BRACKET_C

return

u
MULT
BRACKET_O

HZ
DIV

USEC_PER_SEC
BRACKET_C
SEMICOLON
PP_ELSE

return
BRACKET_O

u
MULT

HZ
PLUS

USEC_PER_SEC
MINUS
NUMBER
BRACKET_C
DIV

USEC_PER_SEC
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

usecs_to_jiffies
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

timespec_to_jiffies
BRACKET_O
CONST
STRUCT

timespec
MULT

value
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

sec
OP_ASSIGNMENT

value
MINUS
GREATER

tv_sec
SEMICOLON
TYPE_LONG

nsec
OP_ASSIGNMENT

value
MINUS
GREATER

tv_nsec
PLUS

TICK_NSEC
MINUS
NUMBER
SEMICOLON
IF
BRACKET_O

sec
GR_EQ

MAX_SEC_IN_JIFFIES
BRACKET_C
CURLY_BRACKET_O

sec
OP_ASSIGNMENT

MAX_SEC_IN_JIFFIES
SEMICOLON

nsec
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
BRACKET_O
BRACKET_O
BRACKET_O

u64
BRACKET_C

sec
MULT

SEC_CONVERSION
BRACKET_C
PLUS
BRACKET_O
BRACKET_O
BRACKET_O

u64
BRACKET_C

nsec
MULT

NSEC_CONVERSION
BRACKET_C
GREATER
GREATER
BRACKET_O

NSEC_JIFFIE_SC
MINUS

SEC_JIFFIE_SC
BRACKET_C
BRACKET_C
BRACKET_C
GREATER
GREATER

SEC_JIFFIE_SC
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

timespec_to_jiffies
BRACKET_C
SEMICOLON

void

jiffies_to_timespec
BRACKET_O
CONST
TYPE_UNSIGNED
TYPE_LONG

jiffies
COMMA
STRUCT

timespec
MULT

value
BRACKET_C
CURLY_BRACKET_O

u64

nsec
OP_ASSIGNMENT
BRACKET_O

u64
BRACKET_C

jiffies
MULT

TICK_NSEC
SEMICOLON

value
MINUS
GREATER

tv_sec
OP_ASSIGNMENT

div_long_long_rem
BRACKET_O

nsec
COMMA

NSEC_PER_SEC
COMMA
AMPERSANT

value
MINUS
GREATER

tv_nsec
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

jiffies_to_timespec
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

timeval_to_jiffies
BRACKET_O
CONST
STRUCT

timeval
MULT

value
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

sec
OP_ASSIGNMENT

value
MINUS
GREATER

tv_sec
SEMICOLON
TYPE_LONG

usec
OP_ASSIGNMENT

value
MINUS
GREATER

tv_usec
SEMICOLON
IF
BRACKET_O

sec
GR_EQ

MAX_SEC_IN_JIFFIES
BRACKET_C
CURLY_BRACKET_O

sec
OP_ASSIGNMENT

MAX_SEC_IN_JIFFIES
SEMICOLON

usec
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

return
BRACKET_O
BRACKET_O
BRACKET_O

u64
BRACKET_C

sec
MULT

SEC_CONVERSION
BRACKET_C
PLUS
BRACKET_O
BRACKET_O
BRACKET_O

u64
BRACKET_C

usec
MULT

USEC_CONVERSION
PLUS

USEC_ROUND
BRACKET_C
GREATER
GREATER
BRACKET_O

USEC_JIFFIE_SC
MINUS

SEC_JIFFIE_SC
BRACKET_C
BRACKET_C
BRACKET_C
GREATER
GREATER

SEC_JIFFIE_SC
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

timeval_to_jiffies
BRACKET_C
SEMICOLON

void

jiffies_to_timeval
BRACKET_O
CONST
TYPE_UNSIGNED
TYPE_LONG

jiffies
COMMA
STRUCT

timeval
MULT

value
BRACKET_C
CURLY_BRACKET_O

u64

nsec
OP_ASSIGNMENT
BRACKET_O

u64
BRACKET_C

jiffies
MULT

TICK_NSEC
SEMICOLON
TYPE_LONG

tv_usec
SEMICOLON

value
MINUS
GREATER

tv_sec
OP_ASSIGNMENT

div_long_long_rem
BRACKET_O

nsec
COMMA

NSEC_PER_SEC
COMMA
AMPERSANT

tv_usec
BRACKET_C
SEMICOLON

tv_usec
ASSIGN_DIV

NSEC_PER_USEC
SEMICOLON

value
MINUS
GREATER

tv_usec
OP_ASSIGNMENT

tv_usec
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

jiffies_to_timeval
BRACKET_C
SEMICOLON

clock_t

jiffies_to_clock_t
BRACKET_O
TYPE_LONG

x
BRACKET_C
CURLY_BRACKET_O
PP_IF
BRACKET_O

TICK_NSEC
MODULO
BRACKET_O

NSEC_PER_SEC
DIV

USER_HZ
BRACKET_C
BRACKET_C
EQ
NUMBER

return

x
DIV
BRACKET_O

HZ
DIV

USER_HZ
BRACKET_C
SEMICOLON
PP_ELSE

u64

tmp
OP_ASSIGNMENT
BRACKET_O

u64
BRACKET_C

x
MULT

TICK_NSEC
SEMICOLON

do_div
BRACKET_O

tmp
COMMA
BRACKET_O

NSEC_PER_SEC
DIV

USER_HZ
BRACKET_C
BRACKET_C
SEMICOLON

return
BRACKET_O
TYPE_LONG
BRACKET_C

tmp
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

jiffies_to_clock_t
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

clock_t_to_jiffies
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

x
BRACKET_C
CURLY_BRACKET_O
PP_IF
BRACKET_O

HZ
MODULO

USER_HZ
BRACKET_C
EQ
NUMBER
IF
BRACKET_O

x
GR_EQ
TILDE
NUMBER

UL
DIV
BRACKET_O

HZ
DIV

USER_HZ
BRACKET_C
BRACKET_C

return
TILDE
NUMBER

UL
SEMICOLON

return

x
MULT
BRACKET_O

HZ
DIV

USER_HZ
BRACKET_C
SEMICOLON
PP_ELSE

u64

jif
SEMICOLON
IF
BRACKET_O

x
GR_EQ
TILDE
NUMBER

UL
DIV

HZ
MULT

USER_HZ
BRACKET_C

return
TILDE
NUMBER

UL
SEMICOLON

jif
OP_ASSIGNMENT

x
MULT
BRACKET_O

u64
BRACKET_C

HZ
SEMICOLON

do_div
BRACKET_O

jif
COMMA

USER_HZ
BRACKET_C
SEMICOLON

return

jif
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

clock_t_to_jiffies
BRACKET_C
SEMICOLON

u64

jiffies_64_to_clock_t
BRACKET_O

u64

x
BRACKET_C
CURLY_BRACKET_O
PP_IF
BRACKET_O

TICK_NSEC
MODULO
BRACKET_O

NSEC_PER_SEC
DIV

USER_HZ
BRACKET_C
BRACKET_C
EQ
NUMBER

do_div
BRACKET_O

x
COMMA

HZ
DIV

USER_HZ
BRACKET_C
SEMICOLON
PP_ELSE

x
ASSIGN_MULT

TICK_NSEC
SEMICOLON

do_div
BRACKET_O

x
COMMA
BRACKET_O

NSEC_PER_SEC
DIV

USER_HZ
BRACKET_C
BRACKET_C
SEMICOLON
PP_ENDIF

return

x
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

jiffies_64_to_clock_t
BRACKET_C
SEMICOLON

u64

nsec_to_clock_t
BRACKET_O

u64

x
BRACKET_C
CURLY_BRACKET_O
PP_IF
BRACKET_O

NSEC_PER_SEC
MODULO

USER_HZ
BRACKET_C
EQ
NUMBER

do_div
BRACKET_O

x
COMMA
BRACKET_O

NSEC_PER_SEC
DIV

USER_HZ
BRACKET_C
BRACKET_C
SEMICOLON
PP_ELIF
BRACKET_O

USER_HZ
MODULO
NUMBER
BRACKET_C
EQ
NUMBER

x
ASSIGN_MULT

USER_HZ
DIV
NUMBER
SEMICOLON

do_div
BRACKET_O

x
COMMA
BRACKET_O

NSEC_PER_SEC
DIV
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON
PP_ELSE

x
ASSIGN_MULT
NUMBER
SEMICOLON

do_div
BRACKET_O

x
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
BRACKET_O
BRACKET_O
NUMBER

ull
MULT

NSEC_PER_SEC
PLUS
BRACKET_O

USER_HZ
DIV
NUMBER
BRACKET_C
BRACKET_C
DIV

USER_HZ
BRACKET_C
BRACKET_C
SEMICOLON
PP_ENDIF

return

x
SEMICOLON
CURLY_BRACKET_C
PP_IF
BRACKET_O

BITS_PER_LONG
LESS
NUMBER
BRACKET_C

u64

get_jiffies_64
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

seq
SEMICOLON

u64

ret
SEMICOLON
DO
CURLY_BRACKET_O

seq
OP_ASSIGNMENT

read_seqbegin
BRACKET_O
AMPERSANT

xtime_lock
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

jiffies_64
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

read_seqretry
BRACKET_O
AMPERSANT

xtime_lock
COMMA

seq
BRACKET_C
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

get_jiffies_64
BRACKET_C
SEMICOLON
PP_ENDIF

EXPORT_SYMBOL
BRACKET_O

jiffies
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

u64

jiffies_64

__cacheline_aligned_in_smp
OP_ASSIGNMENT

INITIAL_JIFFIES
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

jiffies_64
BRACKET_C
SEMICOLON
PP_DEFINE

TVN_BITS
BRACKET_O

CONFIG_BASE_SMALL
QUESTION_MARK
NUMBER
COLON
NUMBER
BRACKET_C
PP_DEFINE

TVR_BITS
BRACKET_O

CONFIG_BASE_SMALL
QUESTION_MARK
NUMBER
COLON
NUMBER
BRACKET_C
PP_DEFINE

TVN_SIZE
BRACKET_O
NUMBER
LESS
LESS

TVN_BITS
BRACKET_C
PP_DEFINE

TVR_SIZE
BRACKET_O
NUMBER
LESS
LESS

TVR_BITS
BRACKET_C
PP_DEFINE

TVN_MASK
BRACKET_O

TVN_SIZE
MINUS
NUMBER
BRACKET_C
PP_DEFINE

TVR_MASK
BRACKET_O

TVR_SIZE
MINUS
NUMBER
BRACKET_C

typedef
STRUCT

tvec_s
CURLY_BRACKET_O
STRUCT

list_head

vec
CORNER_BRACKET_O

TVN_SIZE
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

tvec_t
SEMICOLON

typedef
STRUCT

tvec_root_s
CURLY_BRACKET_O
STRUCT

list_head

vec
CORNER_BRACKET_O

TVR_SIZE
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

tvec_root_t
SEMICOLON
STRUCT

tvec_t_base_s
CURLY_BRACKET_O

spinlock_t

lock
SEMICOLON
STRUCT

timer_list
MULT

running_timer
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

timer_jiffies
SEMICOLON

tvec_root_t

tv1
SEMICOLON

tvec_t

tv2
SEMICOLON

tvec_t

tv3
SEMICOLON

tvec_t

tv4
SEMICOLON

tvec_t

tv5
SEMICOLON
CURLY_BRACKET_C

____cacheline_aligned
SEMICOLON

typedef
STRUCT

tvec_t_base_s

tvec_base_t
SEMICOLON

tvec_base_t

boot_tvec_bases
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

boot_tvec_bases
BRACKET_C
SEMICOLON

static

DEFINE_PER_CPU
BRACKET_O

tvec_base_t
MULT
COMMA

tvec_bases
BRACKET_C
OP_ASSIGNMENT
AMPERSANT

boot_tvec_bases
SEMICOLON
PP_DEFINE

TBASE_DEFERRABLE_FLAG
BRACKET_O
NUMBER

x1
BRACKET_C

static

inline
TYPE_UNSIGNED
TYPE_INT

tbase_get_deferrable
BRACKET_O

tvec_base_t
MULT

base
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_INT
BRACKET_C
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

base
AMPERSANT

TBASE_DEFERRABLE_FLAG
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

tvec_base_t
MULT

tbase_get_base
BRACKET_O

tvec_base_t
MULT

base
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O
BRACKET_O

tvec_base_t
MULT
BRACKET_C
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

base
AMPERSANT
TILDE

TBASE_DEFERRABLE_FLAG
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

timer_set_deferrable
BRACKET_O
STRUCT

timer_list
MULT

timer
BRACKET_C
CURLY_BRACKET_O

timer
MINUS
GREATER

base
OP_ASSIGNMENT
BRACKET_O
BRACKET_O

tvec_base_t
MULT
BRACKET_C
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
BRACKET_O

timer
MINUS
GREATER

base
BRACKET_C
LOGICAL_OR

TBASE_DEFERRABLE_FLAG
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

timer_set_base
BRACKET_O
STRUCT

timer_list
MULT

timer
COMMA

tvec_base_t
MULT

new_base
BRACKET_C
CURLY_BRACKET_O

timer
MINUS
GREATER

base
OP_ASSIGNMENT
BRACKET_O

tvec_base_t
MULT
BRACKET_C
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
BRACKET_O

new_base
BRACKET_C
LOGICAL_OR

tbase_get_deferrable
BRACKET_O

timer
MINUS
GREATER

base
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

__round_jiffies
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

j
COMMA
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

rem
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

original
OP_ASSIGNMENT

j
SEMICOLON

j
ASSIGN_PLUS

cpu
MULT
NUMBER
SEMICOLON

rem
OP_ASSIGNMENT

j
MODULO

HZ
SEMICOLON
IF
BRACKET_O

rem
LESS

HZ
DIV
NUMBER
BRACKET_C

j
OP_ASSIGNMENT

j
MINUS

rem
SEMICOLON
ELSE

j
OP_ASSIGNMENT

j
MINUS

rem
PLUS

HZ
SEMICOLON

j
ASSIGN_MINUS

cpu
MULT
NUMBER
SEMICOLON
IF
BRACKET_O

j
LE_EQ

jiffies
BRACKET_C

return

original
SEMICOLON

return

j
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

__round_jiffies
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

__round_jiffies_relative
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

j
COMMA
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O

return

__round_jiffies
BRACKET_O

j
PLUS

jiffies
COMMA

cpu
BRACKET_C
MINUS

jiffies
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

__round_jiffies_relative
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

round_jiffies
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

j
BRACKET_C
CURLY_BRACKET_O

return

__round_jiffies
BRACKET_O

j
COMMA

raw_smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

round_jiffies
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

round_jiffies_relative
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

j
BRACKET_C
CURLY_BRACKET_O

return

__round_jiffies_relative
BRACKET_O

j
COMMA

raw_smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

round_jiffies_relative
BRACKET_C
SEMICOLON

static

inline

void

set_running_timer
BRACKET_O

tvec_base_t
MULT

base
COMMA
STRUCT

timer_list
MULT

timer
BRACKET_C
CURLY_BRACKET_O
PP_IFDEF

CONFIG_SMP

base
MINUS
GREATER

running_timer
OP_ASSIGNMENT

timer
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

static

void

internal_add_timer
BRACKET_O

tvec_base_t
MULT

base
COMMA
STRUCT

timer_list
MULT

timer
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

expires
OP_ASSIGNMENT

timer
MINUS
GREATER

expires
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

idx
OP_ASSIGNMENT

expires
MINUS

base
MINUS
GREATER

timer_jiffies
SEMICOLON
STRUCT

list_head
MULT

vec
SEMICOLON
IF
BRACKET_O

idx
LESS

TVR_SIZE
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
OP_ASSIGNMENT

expires
AMPERSANT

TVR_MASK
SEMICOLON

vec
OP_ASSIGNMENT

base
MINUS
GREATER

tv1
DOT

vec
PLUS

i
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

idx
LESS
NUMBER
LESS
LESS
BRACKET_O

TVR_BITS
PLUS

TVN_BITS
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
OP_ASSIGNMENT
BRACKET_O

expires
GREATER
GREATER

TVR_BITS
BRACKET_C
AMPERSANT

TVN_MASK
SEMICOLON

vec
OP_ASSIGNMENT

base
MINUS
GREATER

tv2
DOT

vec
PLUS

i
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

idx
LESS
NUMBER
LESS
LESS
BRACKET_O

TVR_BITS
PLUS
NUMBER
MULT

TVN_BITS
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
OP_ASSIGNMENT
BRACKET_O

expires
GREATER
GREATER
BRACKET_O

TVR_BITS
PLUS

TVN_BITS
BRACKET_C
BRACKET_C
AMPERSANT

TVN_MASK
SEMICOLON

vec
OP_ASSIGNMENT

base
MINUS
GREATER

tv3
DOT

vec
PLUS

i
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O

idx
LESS
NUMBER
LESS
LESS
BRACKET_O

TVR_BITS
PLUS
NUMBER
MULT

TVN_BITS
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
OP_ASSIGNMENT
BRACKET_O

expires
GREATER
GREATER
BRACKET_O

TVR_BITS
PLUS
NUMBER
MULT

TVN_BITS
BRACKET_C
BRACKET_C
AMPERSANT

TVN_MASK
SEMICOLON

vec
OP_ASSIGNMENT

base
MINUS
GREATER

tv4
DOT

vec
PLUS

i
SEMICOLON
CURLY_BRACKET_C
ELSE
IF
BRACKET_O
BRACKET_O

signed
TYPE_LONG
BRACKET_C

idx
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

vec
OP_ASSIGNMENT

base
MINUS
GREATER

tv1
DOT

vec
PLUS
BRACKET_O

base
MINUS
GREATER

timer_jiffies
AMPERSANT

TVR_MASK
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON
IF
BRACKET_O

idx
GREATER
NUMBER

xffffffffUL
BRACKET_C
CURLY_BRACKET_O

idx
OP_ASSIGNMENT
NUMBER

xffffffffUL
SEMICOLON

expires
OP_ASSIGNMENT

idx
PLUS

base
MINUS
GREATER

timer_jiffies
SEMICOLON
CURLY_BRACKET_C

i
OP_ASSIGNMENT
BRACKET_O

expires
GREATER
GREATER
BRACKET_O

TVR_BITS
PLUS
NUMBER
MULT

TVN_BITS
BRACKET_C
BRACKET_C
AMPERSANT

TVN_MASK
SEMICOLON

vec
OP_ASSIGNMENT

base
MINUS
GREATER

tv5
DOT

vec
PLUS

i
SEMICOLON
CURLY_BRACKET_C

list_add_tail
BRACKET_O
AMPERSANT

timer
MINUS
GREATER

entry
COMMA

vec
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_TIMER_STATS

void

__timer_stats_timer_set_start_info
BRACKET_O
STRUCT

timer_list
MULT

timer
COMMA

void
MULT

addr
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

timer
MINUS
GREATER

start_site
BRACKET_C

return
SEMICOLON

timer
MINUS
GREATER

start_site
OP_ASSIGNMENT

addr
SEMICOLON

memcpy
BRACKET_O

timer
MINUS
GREATER

start_comm
COMMA

current
MINUS
GREATER

comm
COMMA

TASK_COMM_LEN
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

start_pid
OP_ASSIGNMENT

current
MINUS
GREATER

pid
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

void

fastcall

init_timer
BRACKET_O
STRUCT

timer_list
MULT

timer
BRACKET_C
CURLY_BRACKET_O

timer
MINUS
GREATER

entry
DOT

next
OP_ASSIGNMENT

NULL
SEMICOLON

timer
MINUS
GREATER

base
OP_ASSIGNMENT

__raw_get_cpu_var
BRACKET_O

tvec_bases
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_TIMER_STATS

timer
MINUS
GREATER

start_site
OP_ASSIGNMENT

NULL
SEMICOLON

timer
MINUS
GREATER

start_pid
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

memset
BRACKET_O

timer
MINUS
GREATER

start_comm
COMMA
NUMBER
COMMA

TASK_COMM_LEN
BRACKET_C
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

init_timer
BRACKET_C
SEMICOLON

void

fastcall

init_timer_deferrable
BRACKET_O
STRUCT

timer_list
MULT

timer
BRACKET_C
CURLY_BRACKET_O

init_timer
BRACKET_O

timer
BRACKET_C
SEMICOLON

timer_set_deferrable
BRACKET_O

timer
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

init_timer_deferrable
BRACKET_C
SEMICOLON

static

inline

void

detach_timer
BRACKET_O
STRUCT

timer_list
MULT

timer
COMMA
TYPE_INT

clear_pending
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head
MULT

entry
OP_ASSIGNMENT
AMPERSANT

timer
MINUS
GREATER

entry
SEMICOLON

__list_del
BRACKET_O

entry
MINUS
GREATER

prev
COMMA

entry
MINUS
GREATER

next
BRACKET_C
SEMICOLON
IF
BRACKET_O

clear_pending
BRACKET_C

entry
MINUS
GREATER

next
OP_ASSIGNMENT

NULL
SEMICOLON

entry
MINUS
GREATER

prev
OP_ASSIGNMENT

LIST_POISON2
SEMICOLON
CURLY_BRACKET_C

static

tvec_base_t
MULT

lock_timer_base
BRACKET_O
STRUCT

timer_list
MULT

timer
COMMA
TYPE_UNSIGNED
TYPE_LONG
MULT

flags
BRACKET_C

__acquires
BRACKET_O

timer
MINUS
GREATER

base
MINUS
GREATER

lock
BRACKET_C
CURLY_BRACKET_O

tvec_base_t
MULT

base
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

tvec_base_t
MULT

prelock_base
OP_ASSIGNMENT

timer
MINUS
GREATER

base
SEMICOLON

base
OP_ASSIGNMENT

tbase_get_base
BRACKET_O

prelock_base
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

base
NOT_EQ

NULL
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_lock_irqsave
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
COMMA
MULT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

likely
BRACKET_O

prelock_base
EQ

timer
MINUS
GREATER

base
BRACKET_C
BRACKET_C

return

base
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
COMMA
MULT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
TYPE_INT

__mod_timer
BRACKET_O
STRUCT

timer_list
MULT

timer
COMMA
TYPE_UNSIGNED
TYPE_LONG

expires
BRACKET_C
CURLY_BRACKET_O

tvec_base_t
MULT

base
COMMA
MULT

new_base
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

timer_stats_timer_set_start_info
BRACKET_O

timer
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

timer
MINUS
GREATER

function
BRACKET_C
SEMICOLON

base
OP_ASSIGNMENT

lock_timer_base
BRACKET_O

timer
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer_pending
BRACKET_O

timer
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

detach_timer
BRACKET_O

timer
COMMA
NUMBER
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

new_base
OP_ASSIGNMENT

__get_cpu_var
BRACKET_O

tvec_bases
BRACKET_C
SEMICOLON
IF
BRACKET_O

base
NOT_EQ

new_base
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

likely
BRACKET_O

base
MINUS
GREATER

running_timer
NOT_EQ

timer
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

timer_set_base
BRACKET_O

timer
COMMA

NULL
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

base
OP_ASSIGNMENT

new_base
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

timer_set_base
BRACKET_O

timer
COMMA

base
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

timer
MINUS
GREATER

expires
OP_ASSIGNMENT

expires
SEMICOLON

internal_add_timer
BRACKET_O

base
COMMA

timer
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__mod_timer
BRACKET_C
SEMICOLON

void

add_timer_on
BRACKET_O
STRUCT

timer_list
MULT

timer
COMMA
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O

tvec_base_t
MULT

base
OP_ASSIGNMENT

per_cpu
BRACKET_O

tvec_bases
COMMA

cpu
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

timer_stats_timer_set_start_info
BRACKET_O

timer
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

timer_pending
BRACKET_O

timer
BRACKET_C
OR
NOT

timer
MINUS
GREATER

function
BRACKET_C
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

timer_set_base
BRACKET_O

timer
COMMA

base
BRACKET_C
SEMICOLON

internal_add_timer
BRACKET_O

base
COMMA

timer
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

mod_timer
BRACKET_O
STRUCT

timer_list
MULT

timer
COMMA
TYPE_UNSIGNED
TYPE_LONG

expires
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O
NOT

timer
MINUS
GREATER

function
BRACKET_C
SEMICOLON

timer_stats_timer_set_start_info
BRACKET_O

timer
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer
MINUS
GREATER

expires
EQ

expires
AND

timer_pending
BRACKET_O

timer
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

return

__mod_timer
BRACKET_O

timer
COMMA

expires
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

mod_timer
BRACKET_C
SEMICOLON
TYPE_INT

del_timer
BRACKET_O
STRUCT

timer_list
MULT

timer
BRACKET_C
CURLY_BRACKET_O

tvec_base_t
MULT

base
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

timer_stats_timer_clear_start_info
BRACKET_O

timer
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer_pending
BRACKET_O

timer
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

base
OP_ASSIGNMENT

lock_timer_base
BRACKET_O

timer
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

timer_pending
BRACKET_O

timer
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

detach_timer
BRACKET_O

timer
COMMA
NUMBER
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

del_timer
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_SMP
TYPE_INT

try_to_del_timer_sync
BRACKET_O
STRUCT

timer_list
MULT

timer
BRACKET_C
CURLY_BRACKET_O

tvec_base_t
MULT

base
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
MINUS
NUMBER
SEMICOLON

base
OP_ASSIGNMENT

lock_timer_base
BRACKET_O

timer
COMMA
AMPERSANT

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

base
MINUS
GREATER

running_timer
EQ

timer
BRACKET_C

goto

out
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

timer_pending
BRACKET_O

timer
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

detach_timer
BRACKET_O

timer
COMMA
NUMBER
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

out
COLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

try_to_del_timer_sync
BRACKET_C
SEMICOLON
TYPE_INT

del_timer_sync
BRACKET_O
STRUCT

timer_list
MULT

timer
BRACKET_C
CURLY_BRACKET_O
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT

try_to_del_timer_sync
BRACKET_O

timer
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
GR_EQ
NUMBER
BRACKET_C

return

ret
SEMICOLON

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

del_timer_sync
BRACKET_C
SEMICOLON
PP_ENDIF

static
TYPE_INT

cascade
BRACKET_O

tvec_base_t
MULT

base
COMMA

tvec_t
MULT

tv
COMMA
TYPE_INT

index
BRACKET_C
CURLY_BRACKET_O
STRUCT

timer_list
MULT

timer
COMMA
MULT

tmp
SEMICOLON
STRUCT

list_head

tv_list
SEMICOLON

list_replace_init
BRACKET_O

tv
MINUS
GREATER

vec
PLUS

index
COMMA
AMPERSANT

tv_list
BRACKET_C
SEMICOLON

list_for_each_entry_safe
BRACKET_O

timer
COMMA

tmp
COMMA
AMPERSANT

tv_list
COMMA

entry
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

tbase_get_base
BRACKET_O

timer
MINUS
GREATER

base
BRACKET_C
NOT_EQ

base
BRACKET_C
SEMICOLON

internal_add_timer
BRACKET_O

base
COMMA

timer
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

index
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

INDEX
BRACKET_O

N
BRACKET_C
BRACKET_O
BRACKET_O

base
MINUS
GREATER

timer_jiffies
GREATER
GREATER
BRACKET_O

TVR_BITS
PLUS
BRACKET_O

N
BRACKET_C
MULT

TVN_BITS
BRACKET_C
BRACKET_C
AMPERSANT

TVN_MASK
BRACKET_C

static

inline

void

__run_timers
BRACKET_O

tvec_base_t
MULT

base
BRACKET_C
CURLY_BRACKET_O
STRUCT

timer_list
MULT

timer
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
WHILE
BRACKET_O

time_after_eq
BRACKET_O

jiffies
COMMA

base
MINUS
GREATER

timer_jiffies
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head

work_list
SEMICOLON
STRUCT

list_head
MULT

head
OP_ASSIGNMENT
AMPERSANT

work_list
SEMICOLON
TYPE_INT

index
OP_ASSIGNMENT

base
MINUS
GREATER

timer_jiffies
AMPERSANT

TVR_MASK
SEMICOLON
IF
BRACKET_O
NOT

index
AND
BRACKET_O
NOT

cascade
BRACKET_O

base
COMMA
AMPERSANT

base
MINUS
GREATER

tv2
COMMA

INDEX
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
BRACKET_C
AND
BRACKET_O
NOT

cascade
BRACKET_O

base
COMMA
AMPERSANT

base
MINUS
GREATER

tv3
COMMA

INDEX
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
BRACKET_C
AND
NOT

cascade
BRACKET_O

base
COMMA
AMPERSANT

base
MINUS
GREATER

tv4
COMMA

INDEX
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
BRACKET_C

cascade
BRACKET_O

base
COMMA
AMPERSANT

base
MINUS
GREATER

tv5
COMMA

INDEX
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON
PLUS
PLUS

base
MINUS
GREATER

timer_jiffies
SEMICOLON

list_replace_init
BRACKET_O

base
MINUS
GREATER

tv1
DOT

vec
PLUS

index
COMMA
AMPERSANT

work_list
BRACKET_C
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O

head
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

void
BRACKET_O
MULT

fn
BRACKET_C
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

data
SEMICOLON

timer
OP_ASSIGNMENT

list_first_entry
BRACKET_O

head
COMMA
STRUCT

timer_list
COMMA

entry
BRACKET_C
SEMICOLON

fn
OP_ASSIGNMENT

timer
MINUS
GREATER

function
SEMICOLON

data
OP_ASSIGNMENT

timer
MINUS
GREATER

data
SEMICOLON

timer_stats_account_timer
BRACKET_O

timer
BRACKET_C
SEMICOLON

set_running_timer
BRACKET_O

base
COMMA

timer
BRACKET_C
SEMICOLON

detach_timer
BRACKET_O

timer
COMMA
NUMBER
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_O
TYPE_INT

preempt_count
OP_ASSIGNMENT

preempt_count
BRACKET_O
BRACKET_C
SEMICOLON

fn
BRACKET_O

data
BRACKET_C
SEMICOLON
IF
BRACKET_O

preempt_count
NOT_EQ

preempt_count
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_WARNING
STRING
STRING
STRING
COMMA

fn
COMMA

preempt_count
COMMA

preempt_count
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

BUG
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_lock_irq
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

set_running_timer
BRACKET_O

base
COMMA

NULL
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IF
PP_DEFINED
BRACKET_O

CONFIG_NO_IDLE_HZ
BRACKET_C
OR
PP_DEFINED
BRACKET_O

CONFIG_NO_HZ
BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG

__next_timer_interrupt
BRACKET_O

tvec_base_t
MULT

base
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

timer_jiffies
OP_ASSIGNMENT

base
MINUS
GREATER

timer_jiffies
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

expires
OP_ASSIGNMENT

timer_jiffies
PLUS

NEXT_TIMER_MAX_DELTA
SEMICOLON
TYPE_INT

index
COMMA

slot
COMMA

array
COMMA

found
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

timer_list
MULT

nte
SEMICOLON

tvec_t
MULT

varray
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

index
OP_ASSIGNMENT

slot
OP_ASSIGNMENT

timer_jiffies
AMPERSANT

TVR_MASK
SEMICOLON
DO
CURLY_BRACKET_O

list_for_each_entry
BRACKET_O

nte
COMMA

base
MINUS
GREATER

tv1
DOT

vec
PLUS

slot
COMMA

entry
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

tbase_get_deferrable
BRACKET_O

nte
MINUS
GREATER

base
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

found
OP_ASSIGNMENT
NUMBER
SEMICOLON

expires
OP_ASSIGNMENT

nte
MINUS
GREATER

expires
SEMICOLON
IF
BRACKET_O
NOT

index
OR

slot
LESS

index
BRACKET_C

goto

cascade
SEMICOLON

return

expires
SEMICOLON
CURLY_BRACKET_C

slot
OP_ASSIGNMENT
BRACKET_O

slot
PLUS
NUMBER
BRACKET_C
AMPERSANT

TVR_MASK
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

slot
NOT_EQ

index
BRACKET_C
SEMICOLON

cascade
COLON
IF
BRACKET_O

index
BRACKET_C

timer_jiffies
ASSIGN_PLUS

TVR_SIZE
MINUS

index
SEMICOLON

timer_jiffies
GREATER
GR_EQ

TVR_BITS
SEMICOLON

varray
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
AMPERSANT

base
MINUS
GREATER

tv2
SEMICOLON

varray
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
AMPERSANT

base
MINUS
GREATER

tv3
SEMICOLON

varray
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
AMPERSANT

base
MINUS
GREATER

tv4
SEMICOLON

varray
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT
AMPERSANT

base
MINUS
GREATER

tv5
SEMICOLON
FOR
BRACKET_O

array
OP_ASSIGNMENT
NUMBER
SEMICOLON

array
LESS
NUMBER
SEMICOLON

array
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

tvec_t
MULT

varp
OP_ASSIGNMENT

varray
CORNER_BRACKET_O

array
CORNER_BRACKET_C
SEMICOLON

index
OP_ASSIGNMENT

slot
OP_ASSIGNMENT

timer_jiffies
AMPERSANT

TVN_MASK
SEMICOLON
DO
CURLY_BRACKET_O

list_for_each_entry
BRACKET_O

nte
COMMA

varp
MINUS
GREATER

vec
PLUS

slot
COMMA

entry
BRACKET_C
CURLY_BRACKET_O

found
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

time_before
BRACKET_O

nte
MINUS
GREATER

expires
COMMA

expires
BRACKET_C
BRACKET_C

expires
OP_ASSIGNMENT

nte
MINUS
GREATER

expires
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

found
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

index
OR

slot
LESS

index
BRACKET_C
BREAK
SEMICOLON

return

expires
SEMICOLON
CURLY_BRACKET_C

slot
OP_ASSIGNMENT
BRACKET_O

slot
PLUS
NUMBER
BRACKET_C
AMPERSANT

TVN_MASK
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

slot
NOT_EQ

index
BRACKET_C
SEMICOLON
IF
BRACKET_O

index
BRACKET_C

timer_jiffies
ASSIGN_PLUS

TVN_SIZE
MINUS

index
SEMICOLON

timer_jiffies
GREATER
GR_EQ

TVN_BITS
SEMICOLON
CURLY_BRACKET_C

return

expires
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG

cmp_next_hrtimer_event
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

now
COMMA
TYPE_UNSIGNED
TYPE_LONG

expires
BRACKET_C
CURLY_BRACKET_O

ktime_t

hr_delta
OP_ASSIGNMENT

hrtimer_get_next_event
BRACKET_O
BRACKET_C
SEMICOLON
STRUCT

timespec

tsdelta
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

delta
SEMICOLON
IF
BRACKET_O

hr_delta
DOT

tv64
EQ

KTIME_MAX
BRACKET_C

return

expires
SEMICOLON
IF
BRACKET_O

hr_delta
DOT

tv64
LE_EQ
NUMBER
BRACKET_C

return

now
PLUS
NUMBER
SEMICOLON

tsdelta
OP_ASSIGNMENT

ktime_to_timespec
BRACKET_O

hr_delta
BRACKET_C
SEMICOLON

delta
OP_ASSIGNMENT

timespec_to_jiffies
BRACKET_O
AMPERSANT

tsdelta
BRACKET_C
SEMICOLON
IF
BRACKET_O

delta
GREATER

NEXT_TIMER_MAX_DELTA
BRACKET_C

delta
OP_ASSIGNMENT

NEXT_TIMER_MAX_DELTA
SEMICOLON
IF
BRACKET_O

delta
LESS
NUMBER
BRACKET_C

delta
OP_ASSIGNMENT
NUMBER
SEMICOLON

now
ASSIGN_PLUS

delta
SEMICOLON
IF
BRACKET_O

time_before
BRACKET_O

now
COMMA

expires
BRACKET_C
BRACKET_C

return

now
SEMICOLON

return

expires
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

get_next_timer_interrupt
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

now
BRACKET_C
CURLY_BRACKET_O

tvec_base_t
MULT

base
OP_ASSIGNMENT

__get_cpu_var
BRACKET_O

tvec_bases
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

expires
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

expires
OP_ASSIGNMENT

__next_timer_interrupt
BRACKET_O

base
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

time_before_eq
BRACKET_O

expires
COMMA

now
BRACKET_C
BRACKET_C

return

now
SEMICOLON
PP_IFNDEF

CONFIG_XEN

return

cmp_next_hrtimer_event
BRACKET_O

now
COMMA

expires
BRACKET_C
SEMICOLON
PP_ELSE

expires
OP_ASSIGNMENT

cmp_next_hrtimer_event
BRACKET_O

now
COMMA

expires
BRACKET_C
SEMICOLON
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

sl_next
OP_ASSIGNMENT

softlockup_get_next_event
BRACKET_O
BRACKET_C
SEMICOLON

return

expires
LE_EQ

now
OR

expires
MINUS

now
LESS

sl_next
QUESTION_MARK

expires
COLON

now
PLUS

sl_next
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
CURLY_BRACKET_C
PP_IFDEF

CONFIG_NO_IDLE_HZ
TYPE_UNSIGNED
TYPE_LONG

next_timer_interrupt
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

get_next_timer_interrupt
BRACKET_O

jiffies
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_ENDIF

void

update_process_times
BRACKET_O
TYPE_INT

user_tick
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
OP_ASSIGNMENT

current
SEMICOLON
TYPE_INT

cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

user_tick
BRACKET_C

account_user_time
BRACKET_O

p
COMMA

jiffies_to_cputime
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON
ELSE

account_system_time
BRACKET_O

p
COMMA

HARDIRQ_OFFSET
COMMA

jiffies_to_cputime
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

run_local_timers
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

rcu_pending
BRACKET_O

cpu
BRACKET_C
BRACKET_C

rcu_check_callbacks
BRACKET_O

cpu
COMMA

user_tick
BRACKET_C
SEMICOLON

scheduler_tick
BRACKET_O
BRACKET_C
SEMICOLON

run_posix_cpu_timers
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_UNSIGNED
TYPE_LONG

count_active_tasks
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

nr_active
BRACKET_O
BRACKET_C
MULT

FIXED_1
SEMICOLON
CURLY_BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

avenrun
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON

EXPORT_SYMBOL
BRACKET_O

avenrun
BRACKET_C
SEMICOLON

static

inline

void

calc_load
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

ticks
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

active_tasks
SEMICOLON

static
TYPE_INT

count
OP_ASSIGNMENT

LOAD_FREQ
SEMICOLON

count
ASSIGN_MINUS

ticks
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

count
LESS
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

active_tasks
OP_ASSIGNMENT

count_active_tasks
BRACKET_O
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O

CALC_LOAD
BRACKET_O

avenrun
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

EXP_1
COMMA

active_tasks
BRACKET_C
SEMICOLON

CALC_LOAD
BRACKET_O

avenrun
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

EXP_5
COMMA

active_tasks
BRACKET_C
SEMICOLON

CALC_LOAD
BRACKET_O

avenrun
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
COMMA

EXP_15
COMMA

active_tasks
BRACKET_C
SEMICOLON

count
ASSIGN_PLUS

LOAD_FREQ
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

count
LESS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

run_timer_softirq
BRACKET_O
STRUCT

softirq_action
MULT

h
BRACKET_C
CURLY_BRACKET_O

tvec_base_t
MULT

base
OP_ASSIGNMENT

__get_cpu_var
BRACKET_O

tvec_bases
BRACKET_C
SEMICOLON

hrtimer_run_queues
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

time_after_eq
BRACKET_O

jiffies
COMMA

base
MINUS
GREATER

timer_jiffies
BRACKET_C
BRACKET_C

__run_timers
BRACKET_O

base
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

run_local_timers
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

raise_softirq
BRACKET_O

TIMER_SOFTIRQ
BRACKET_C
SEMICOLON

softlockup_tick
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

update_times
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

ticks
BRACKET_C
CURLY_BRACKET_O

update_wall_time
BRACKET_O
BRACKET_C
SEMICOLON

calc_load
BRACKET_O

ticks
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

do_timer
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

ticks
BRACKET_C
CURLY_BRACKET_O

jiffies_64
ASSIGN_PLUS

ticks
SEMICOLON

update_times
BRACKET_O

ticks
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

__ARCH_WANT_SYS_ALARM

asmlinkage
TYPE_UNSIGNED
TYPE_LONG

sys_alarm
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

seconds
BRACKET_C
CURLY_BRACKET_O

return

alarm_setitimer
BRACKET_O

seconds
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_IFNDEF

__alpha__

asmlinkage
TYPE_LONG

sys_getpid
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

current
MINUS
GREATER

tgid
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getppid
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

pid
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

pid
OP_ASSIGNMENT

rcu_dereference
BRACKET_O

current
MINUS
GREATER

real_parent
BRACKET_C
MINUS
GREATER

tgid
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

return

pid
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getuid
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

current
MINUS
GREATER

uid
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_geteuid
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

current
MINUS
GREATER

euid
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getgid
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

current
MINUS
GREATER

gid
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getegid
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

current
MINUS
GREATER

egid
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static

void

process_timeout
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

__data
BRACKET_C
CURLY_BRACKET_O

wake_up_process
BRACKET_O
BRACKET_O
STRUCT

task_struct
MULT
BRACKET_C

__data
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

fastcall

signed
TYPE_LONG

__sched

schedule_timeout
BRACKET_O

signed
TYPE_LONG

timeout
BRACKET_C
CURLY_BRACKET_O
STRUCT

timer_list

timer
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

expire
SEMICOLON
SWITCH
BRACKET_O

timeout
BRACKET_C
CURLY_BRACKET_O

case

MAX_SCHEDULE_TIMEOUT
COLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

goto

out
SEMICOLON

default
COLON
IF
BRACKET_O

timeout
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
STRING
COMMA

timeout
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON

current
MINUS
GREATER

state
OP_ASSIGNMENT

TASK_RUNNING
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

expire
OP_ASSIGNMENT

timeout
PLUS

jiffies
SEMICOLON

setup_timer
BRACKET_O
AMPERSANT

timer
COMMA

process_timeout
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

current
BRACKET_C
SEMICOLON

__mod_timer
BRACKET_O
AMPERSANT

timer
COMMA

expire
BRACKET_C
SEMICOLON

schedule
BRACKET_O
BRACKET_C
SEMICOLON

del_singleshot_timer_sync
BRACKET_O
AMPERSANT

timer
BRACKET_C
SEMICOLON

timeout
OP_ASSIGNMENT

expire
MINUS

jiffies
SEMICOLON

out
COLON

return

timeout
LESS
NUMBER
QUESTION_MARK
NUMBER
COLON

timeout
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

schedule_timeout
BRACKET_C
SEMICOLON

signed
TYPE_LONG

__sched

schedule_timeout_interruptible
BRACKET_O

signed
TYPE_LONG

timeout
BRACKET_C
CURLY_BRACKET_O

__set_current_state
BRACKET_O

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON

return

schedule_timeout
BRACKET_O

timeout
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

schedule_timeout_interruptible
BRACKET_C
SEMICOLON

signed
TYPE_LONG

__sched

schedule_timeout_uninterruptible
BRACKET_O

signed
TYPE_LONG

timeout
BRACKET_C
CURLY_BRACKET_O

__set_current_state
BRACKET_O

TASK_UNINTERRUPTIBLE
BRACKET_C
SEMICOLON

return

schedule_timeout
BRACKET_O

timeout
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

schedule_timeout_uninterruptible
BRACKET_C
SEMICOLON

asmlinkage
TYPE_LONG

sys_gettid
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

current
MINUS
GREATER

pid
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

do_sysinfo
BRACKET_O
STRUCT

sysinfo
MULT

info
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

mem_total
COMMA

sav_total
SEMICOLON
TYPE_UNSIGNED
TYPE_INT

mem_unit
COMMA

bitcount
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

seq
SEMICOLON

memset
BRACKET_O

info
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
STRUCT

sysinfo
BRACKET_C
BRACKET_C
SEMICOLON
DO
CURLY_BRACKET_O
STRUCT

timespec

tp
SEMICOLON

seq
OP_ASSIGNMENT

read_seqbegin
BRACKET_O
AMPERSANT

xtime_lock
BRACKET_C
SEMICOLON

getnstimeofday
BRACKET_O
AMPERSANT

tp
BRACKET_C
SEMICOLON

tp
DOT

tv_sec
ASSIGN_PLUS

wall_to_monotonic
DOT

tv_sec
SEMICOLON

tp
DOT

tv_nsec
ASSIGN_PLUS

wall_to_monotonic
DOT

tv_nsec
SEMICOLON
IF
BRACKET_O

tp
DOT

tv_nsec
MINUS

NSEC_PER_SEC
GR_EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O

tp
DOT

tv_nsec
OP_ASSIGNMENT

tp
DOT

tv_nsec
MINUS

NSEC_PER_SEC
SEMICOLON

tp
DOT

tv_sec
PLUS
PLUS
SEMICOLON
CURLY_BRACKET_C

info
MINUS
GREATER

uptime
OP_ASSIGNMENT

tp
DOT

tv_sec
PLUS
BRACKET_O

tp
DOT

tv_nsec
QUESTION_MARK
NUMBER
COLON
NUMBER
BRACKET_C
SEMICOLON

info
MINUS
GREATER

loads
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

avenrun
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
LESS
LESS
BRACKET_O

SI_LOAD_SHIFT
MINUS

FSHIFT
BRACKET_C
SEMICOLON

info
MINUS
GREATER

loads
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

avenrun
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
LESS
LESS
BRACKET_O

SI_LOAD_SHIFT
MINUS

FSHIFT
BRACKET_C
SEMICOLON

info
MINUS
GREATER

loads
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
OP_ASSIGNMENT

avenrun
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
LESS
LESS
BRACKET_O

SI_LOAD_SHIFT
MINUS

FSHIFT
BRACKET_C
SEMICOLON

info
MINUS
GREATER

procs
OP_ASSIGNMENT

nr_threads
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

read_seqretry
BRACKET_O
AMPERSANT

xtime_lock
COMMA

seq
BRACKET_C
BRACKET_C
SEMICOLON

si_meminfo
BRACKET_O

info
BRACKET_C
SEMICOLON

si_swapinfo
BRACKET_O

info
BRACKET_C
SEMICOLON

mem_total
OP_ASSIGNMENT

info
MINUS
GREATER

totalram
PLUS

info
MINUS
GREATER

totalswap
SEMICOLON
IF
BRACKET_O

mem_total
LESS

info
MINUS
GREATER

totalram
OR

mem_total
LESS

info
MINUS
GREATER

totalswap
BRACKET_C

goto

out
SEMICOLON

bitcount
OP_ASSIGNMENT
NUMBER
SEMICOLON

mem_unit
OP_ASSIGNMENT

info
MINUS
GREATER

mem_unit
SEMICOLON
WHILE
BRACKET_O

mem_unit
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

bitcount
PLUS
PLUS
SEMICOLON

mem_unit
GREATER
GR_EQ
NUMBER
SEMICOLON

sav_total
OP_ASSIGNMENT

mem_total
SEMICOLON

mem_total
LESS
LE_EQ
NUMBER
SEMICOLON
IF
BRACKET_O

mem_total
LESS

sav_total
BRACKET_C

goto

out
SEMICOLON
CURLY_BRACKET_C

info
MINUS
GREATER

mem_unit
OP_ASSIGNMENT
NUMBER
SEMICOLON

info
MINUS
GREATER

totalram
LESS
LE_EQ

bitcount
SEMICOLON

info
MINUS
GREATER

freeram
LESS
LE_EQ

bitcount
SEMICOLON

info
MINUS
GREATER

sharedram
LESS
LE_EQ

bitcount
SEMICOLON

info
MINUS
GREATER

bufferram
LESS
LE_EQ

bitcount
SEMICOLON

info
MINUS
GREATER

totalswap
LESS
LE_EQ

bitcount
SEMICOLON

info
MINUS
GREATER

freeswap
LESS
LE_EQ

bitcount
SEMICOLON

info
MINUS
GREATER

totalhigh
LESS
LE_EQ

bitcount
SEMICOLON

info
MINUS
GREATER

freehigh
LESS
LE_EQ

bitcount
SEMICOLON

out
COLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_sysinfo
BRACKET_O
STRUCT

sysinfo

__user
MULT

info
BRACKET_C
CURLY_BRACKET_O
STRUCT

sysinfo

val
SEMICOLON

do_sysinfo
BRACKET_O
AMPERSANT

val
BRACKET_C
SEMICOLON
IF
BRACKET_O

copy_to_user
BRACKET_O

info
COMMA
AMPERSANT

val
COMMA

sizeof
BRACKET_O
STRUCT

sysinfo
BRACKET_C
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

lock_class_key

base_lock_keys
CORNER_BRACKET_O

NR_CPUS
CORNER_BRACKET_C
SEMICOLON

static
TYPE_INT

__devinit

init_timers_cpu
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

j
SEMICOLON

tvec_base_t
MULT

base
SEMICOLON

static
TYPE_CHAR

__devinitdata

tvec_base_done
CORNER_BRACKET_O

NR_CPUS
CORNER_BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

tvec_base_done
CORNER_BRACKET_O

cpu
CORNER_BRACKET_C
BRACKET_C
CURLY_BRACKET_O

static
TYPE_CHAR

boot_done
SEMICOLON
IF
BRACKET_O

boot_done
BRACKET_C
CURLY_BRACKET_O

base
OP_ASSIGNMENT

kmalloc_node
BRACKET_O

sizeof
BRACKET_O
MULT

base
BRACKET_C
COMMA

GFP_KERNEL
COMMA

cpu_to_node
BRACKET_O

cpu
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

base
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON
IF
BRACKET_O

tbase_get_deferrable
BRACKET_O

base
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

WARN_ON
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

kfree
BRACKET_O

base
BRACKET_C
SEMICOLON

return
MINUS

ENOMEM
SEMICOLON
CURLY_BRACKET_C

memset
BRACKET_O

base
COMMA
NUMBER
COMMA

sizeof
BRACKET_O
MULT

base
BRACKET_C
BRACKET_C
SEMICOLON

per_cpu
BRACKET_O

tvec_bases
COMMA

cpu
BRACKET_C
OP_ASSIGNMENT

base
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

boot_done
OP_ASSIGNMENT
NUMBER
SEMICOLON

base
OP_ASSIGNMENT
AMPERSANT

boot_tvec_bases
SEMICOLON
CURLY_BRACKET_C

tvec_base_done
CORNER_BRACKET_O

cpu
CORNER_BRACKET_C
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

base
OP_ASSIGNMENT

per_cpu
BRACKET_O

tvec_bases
COMMA

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_lock_init
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

lockdep_set_class
BRACKET_O
AMPERSANT

base
MINUS
GREATER

lock
COMMA

base_lock_keys
PLUS

cpu
BRACKET_C
SEMICOLON
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

TVN_SIZE
SEMICOLON

j
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

INIT_LIST_HEAD
BRACKET_O

base
MINUS
GREATER

tv5
DOT

vec
PLUS

j
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O

base
MINUS
GREATER

tv4
DOT

vec
PLUS

j
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O

base
MINUS
GREATER

tv3
DOT

vec
PLUS

j
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O

base
MINUS
GREATER

tv2
DOT

vec
PLUS

j
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
FOR
BRACKET_O

j
OP_ASSIGNMENT
NUMBER
SEMICOLON

j
LESS

TVR_SIZE
SEMICOLON

j
PLUS
PLUS
BRACKET_C

INIT_LIST_HEAD
BRACKET_O

base
MINUS
GREATER

tv1
DOT

vec
PLUS

j
BRACKET_C
SEMICOLON

base
MINUS
GREATER

timer_jiffies
OP_ASSIGNMENT

jiffies
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_HOTPLUG_CPU

static

void

migrate_timer_list
BRACKET_O

tvec_base_t
MULT

new_base
COMMA
STRUCT

list_head
MULT

head
BRACKET_C
CURLY_BRACKET_O
STRUCT

timer_list
MULT

timer
SEMICOLON
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O

head
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

timer
OP_ASSIGNMENT

list_first_entry
BRACKET_O

head
COMMA
STRUCT

timer_list
COMMA

entry
BRACKET_C
SEMICOLON

detach_timer
BRACKET_O

timer
COMMA
NUMBER
BRACKET_C
SEMICOLON

timer_set_base
BRACKET_O

timer
COMMA

new_base
BRACKET_C
SEMICOLON

internal_add_timer
BRACKET_O

new_base
COMMA

timer
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

void

__devinit

migrate_timers
BRACKET_O
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O

tvec_base_t
MULT

old_base
SEMICOLON

tvec_base_t
MULT

new_base
SEMICOLON
TYPE_INT

i
SEMICOLON

BUG_ON
BRACKET_O

cpu_online
BRACKET_O

cpu
BRACKET_C
BRACKET_C
SEMICOLON

old_base
OP_ASSIGNMENT

per_cpu
BRACKET_O

tvec_bases
COMMA

cpu
BRACKET_C
SEMICOLON

new_base
OP_ASSIGNMENT

get_cpu_var
BRACKET_O

tvec_bases
BRACKET_C
SEMICOLON

local_irq_disable
BRACKET_O
BRACKET_C
SEMICOLON

double_spin_lock
BRACKET_O
AMPERSANT

new_base
MINUS
GREATER

lock
COMMA
AMPERSANT

old_base
MINUS
GREATER

lock
COMMA

smp_processor_id
BRACKET_O
BRACKET_C
LESS

cpu
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

old_base
MINUS
GREATER

running_timer
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

TVR_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C

migrate_timer_list
BRACKET_O

new_base
COMMA

old_base
MINUS
GREATER

tv1
DOT

vec
PLUS

i
BRACKET_C
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

TVN_SIZE
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

migrate_timer_list
BRACKET_O

new_base
COMMA

old_base
MINUS
GREATER

tv2
DOT

vec
PLUS

i
BRACKET_C
SEMICOLON

migrate_timer_list
BRACKET_O

new_base
COMMA

old_base
MINUS
GREATER

tv3
DOT

vec
PLUS

i
BRACKET_C
SEMICOLON

migrate_timer_list
BRACKET_O

new_base
COMMA

old_base
MINUS
GREATER

tv4
DOT

vec
PLUS

i
BRACKET_C
SEMICOLON

migrate_timer_list
BRACKET_O

new_base
COMMA

old_base
MINUS
GREATER

tv5
DOT

vec
PLUS

i
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

double_spin_unlock
BRACKET_O
AMPERSANT

new_base
MINUS
GREATER

lock
COMMA
AMPERSANT

old_base
MINUS
GREATER

lock
COMMA

smp_processor_id
BRACKET_O
BRACKET_C
LESS

cpu
BRACKET_C
SEMICOLON

local_irq_enable
BRACKET_O
BRACKET_C
SEMICOLON

put_cpu_var
BRACKET_O

tvec_bases
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

static
TYPE_INT

__cpuinit

timer_cpu_notify
BRACKET_O
STRUCT

notifier_block
MULT

self
COMMA
TYPE_UNSIGNED
TYPE_LONG

action
COMMA

void
MULT

hcpu
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

cpu
OP_ASSIGNMENT
BRACKET_O
TYPE_LONG
BRACKET_C

hcpu
SEMICOLON
SWITCH
BRACKET_O

action
BRACKET_C
CURLY_BRACKET_O

case

CPU_UP_PREPARE
COLON

case

CPU_UP_PREPARE_FROZEN
COLON
IF
BRACKET_O

init_timers_cpu
BRACKET_O

cpu
BRACKET_C
LESS
NUMBER
BRACKET_C

return

NOTIFY_BAD
SEMICOLON
BREAK
SEMICOLON
PP_IFDEF

CONFIG_HOTPLUG_CPU

case

CPU_DEAD
COLON

case

CPU_DEAD_FROZEN
COLON

migrate_timers
BRACKET_O

cpu
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
PP_ENDIF

default
COLON
BREAK
SEMICOLON
CURLY_BRACKET_C

return

NOTIFY_OK
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

notifier_block

__cpuinitdata

timers_nb
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

notifier_call
OP_ASSIGNMENT

timer_cpu_notify
COMMA
CURLY_BRACKET_C
SEMICOLON

void

__init

init_timers
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

err
OP_ASSIGNMENT

timer_cpu_notify
BRACKET_O
AMPERSANT

timers_nb
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

CPU_UP_PREPARE
COMMA
BRACKET_O

void
MULT
BRACKET_C
BRACKET_O
TYPE_LONG
BRACKET_C

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
SEMICOLON

init_timer_stats
BRACKET_O
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

err
EQ

NOTIFY_BAD
BRACKET_C
SEMICOLON

register_cpu_notifier
BRACKET_O
AMPERSANT

timers_nb
BRACKET_C
SEMICOLON

open_softirq
BRACKET_O

TIMER_SOFTIRQ
COMMA

run_timer_softirq
COMMA

NULL
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_TIME_INTERPOLATION
STRUCT

time_interpolator
MULT

time_interpolator

__read_mostly
SEMICOLON

static
STRUCT

time_interpolator
MULT

time_interpolator_list

__read_mostly
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

time_interpolator_lock
BRACKET_C
SEMICOLON

static

inline

cycles_t

time_interpolator_get_cycles
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

src
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_O
MULT

x
BRACKET_C
BRACKET_O

void
BRACKET_C
SEMICOLON
SWITCH
BRACKET_O

src
BRACKET_C
CURLY_BRACKET_O

case

TIME_SOURCE_FUNCTION
COLON

x
OP_ASSIGNMENT

time_interpolator
MINUS
GREATER

addr
SEMICOLON

return

x
BRACKET_O
BRACKET_C
SEMICOLON

case

TIME_SOURCE_MMIO64
COLON

return

readq_relaxed
BRACKET_O
BRACKET_O

void

__iomem
MULT
BRACKET_C

time_interpolator
MINUS
GREATER

addr
BRACKET_C
SEMICOLON

case

TIME_SOURCE_MMIO32
COLON

return

readl_relaxed
BRACKET_O
BRACKET_O

void

__iomem
MULT
BRACKET_C

time_interpolator
MINUS
GREATER

addr
BRACKET_C
SEMICOLON

default
COLON

return

get_cycles
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline

u64

time_interpolator_get_counter
BRACKET_O
TYPE_INT

writelock
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

src
OP_ASSIGNMENT

time_interpolator
MINUS
GREATER

source
SEMICOLON
IF
BRACKET_O

time_interpolator
MINUS
GREATER

jitter
BRACKET_C
CURLY_BRACKET_O

cycles_t

lcycle
SEMICOLON

cycles_t

now
SEMICOLON
DO
CURLY_BRACKET_O

lcycle
OP_ASSIGNMENT

time_interpolator
MINUS
GREATER

last_cycle
SEMICOLON

now
OP_ASSIGNMENT

time_interpolator_get_cycles
BRACKET_O

src
BRACKET_C
SEMICOLON
IF
BRACKET_O

lcycle
AND

time_after
BRACKET_O

lcycle
COMMA

now
BRACKET_C
BRACKET_C

return

lcycle
SEMICOLON
IF
BRACKET_O

writelock
BRACKET_C
CURLY_BRACKET_O

time_interpolator
MINUS
GREATER

last_cycle
OP_ASSIGNMENT

now
SEMICOLON

return

now
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
WHILE
BRACKET_O

unlikely
BRACKET_O

cmpxchg
BRACKET_O
AMPERSANT

time_interpolator
MINUS
GREATER

last_cycle
COMMA

lcycle
COMMA

now
BRACKET_C
NOT_EQ

lcycle
BRACKET_C
BRACKET_C
SEMICOLON

return

now
SEMICOLON
CURLY_BRACKET_C
ELSE

return

time_interpolator_get_cycles
BRACKET_O

src
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

time_interpolator_reset
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

time_interpolator
MINUS
GREATER

offset
OP_ASSIGNMENT
NUMBER
SEMICOLON

time_interpolator
MINUS
GREATER

last_counter
OP_ASSIGNMENT

time_interpolator_get_counter
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

GET_TI_NSECS
BRACKET_O

count
COMMA

i
BRACKET_C
BRACKET_O
BRACKET_O
BRACKET_O
BRACKET_O
BRACKET_O

count
BRACKET_C
MINUS

i
MINUS
GREATER

last_counter
BRACKET_C
AMPERSANT
BRACKET_O

i
BRACKET_C
MINUS
GREATER

mask
BRACKET_C
MULT
BRACKET_O

i
BRACKET_C
MINUS
GREATER

nsec_per_cyc
BRACKET_C
GREATER
GREATER
BRACKET_O

i
BRACKET_C
MINUS
GREATER

shift
BRACKET_C
TYPE_UNSIGNED
TYPE_LONG

time_interpolator_get_offset
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

time_interpolator
BRACKET_C

return
NUMBER
SEMICOLON

return

time_interpolator
MINUS
GREATER

offset
PLUS

GET_TI_NSECS
BRACKET_O

time_interpolator_get_counter
BRACKET_O
NUMBER
BRACKET_C
COMMA

time_interpolator
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_DEFINE

INTERPOLATOR_ADJUST
NUMBER
PP_DEFINE

INTERPOLATOR_MAX_SKIP
NUMBER
MULT

INTERPOLATOR_ADJUST

void

time_interpolator_update
BRACKET_O
TYPE_LONG

delta_nsec
BRACKET_C
CURLY_BRACKET_O

u64

counter
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

offset
SEMICOLON
IF
BRACKET_O
NOT

time_interpolator
BRACKET_C

return
SEMICOLON

counter
OP_ASSIGNMENT

time_interpolator_get_counter
BRACKET_O
NUMBER
BRACKET_C
SEMICOLON

offset
OP_ASSIGNMENT

time_interpolator
MINUS
GREATER

offset
PLUS

GET_TI_NSECS
BRACKET_O

counter
COMMA

time_interpolator
BRACKET_C
SEMICOLON
IF
BRACKET_O

delta_nsec
LESS
NUMBER
OR
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

delta_nsec
LESS

offset
BRACKET_C

time_interpolator
MINUS
GREATER

offset
OP_ASSIGNMENT

offset
MINUS

delta_nsec
SEMICOLON
ELSE
CURLY_BRACKET_O

time_interpolator
MINUS
GREATER

skips
PLUS
PLUS
SEMICOLON

time_interpolator
MINUS
GREATER

ns_skipped
ASSIGN_PLUS

delta_nsec
MINUS

offset
SEMICOLON

time_interpolator
MINUS
GREATER

offset
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

time_interpolator
MINUS
GREATER

last_counter
OP_ASSIGNMENT

counter
SEMICOLON
IF
BRACKET_O

jiffies
MODULO

INTERPOLATOR_ADJUST
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

time_interpolator
MINUS
GREATER

skips
EQ
NUMBER
AND

time_interpolator
MINUS
GREATER

offset
GREATER

tick_nsec
BRACKET_C

time_interpolator
MINUS
GREATER

nsec_per_cyc
MINUS
MINUS
SEMICOLON
IF
BRACKET_O

time_interpolator
MINUS
GREATER

ns_skipped
GREATER

INTERPOLATOR_MAX_SKIP
AND

time_interpolator
MINUS
GREATER

offset
EQ
NUMBER
BRACKET_C

time_interpolator
MINUS
GREATER

nsec_per_cyc
PLUS
PLUS
SEMICOLON

time_interpolator
MINUS
GREATER

skips
OP_ASSIGNMENT
NUMBER
SEMICOLON

time_interpolator
MINUS
GREATER

ns_skipped
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

static

inline
TYPE_INT

is_better_time_interpolator
BRACKET_O
STRUCT

time_interpolator
MULT

new
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

time_interpolator
BRACKET_C

return
NUMBER
SEMICOLON

return

new
MINUS
GREATER

frequency
GREATER
NUMBER
MULT

time_interpolator
MINUS
GREATER

frequency
OR
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

new
MINUS
GREATER

drift
LESS
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

time_interpolator
MINUS
GREATER

drift
SEMICOLON
CURLY_BRACKET_C

void

register_time_interpolator
BRACKET_O
STRUCT

time_interpolator
MULT

ti
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

BUG_ON
BRACKET_O

ti
MINUS
GREATER

frequency
EQ
NUMBER
OR

ti
MINUS
GREATER

mask
EQ
NUMBER
BRACKET_C
SEMICOLON

ti
MINUS
GREATER

nsec_per_cyc
OP_ASSIGNMENT
BRACKET_O
BRACKET_O

u64
BRACKET_C

NSEC_PER_SEC
LESS
LESS

ti
MINUS
GREATER

shift
BRACKET_C
DIV

ti
MINUS
GREATER

frequency
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

time_interpolator_lock
BRACKET_C
SEMICOLON

write_seqlock_irqsave
BRACKET_O
AMPERSANT

xtime_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

is_better_time_interpolator
BRACKET_O

ti
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

time_interpolator
OP_ASSIGNMENT

ti
SEMICOLON

time_interpolator_reset
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

write_sequnlock_irqrestore
BRACKET_O
AMPERSANT

xtime_lock
COMMA

flags
BRACKET_C
SEMICOLON

ti
MINUS
GREATER

next
OP_ASSIGNMENT

time_interpolator_list
SEMICOLON

time_interpolator_list
OP_ASSIGNMENT

ti
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

time_interpolator_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

unregister_time_interpolator
BRACKET_O
STRUCT

time_interpolator
MULT

ti
BRACKET_C
CURLY_BRACKET_O
STRUCT

time_interpolator
MULT

curr
COMMA
MULT
MULT

prev
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock
BRACKET_O
AMPERSANT

time_interpolator_lock
BRACKET_C
SEMICOLON

prev
OP_ASSIGNMENT
AMPERSANT

time_interpolator_list
SEMICOLON
FOR
BRACKET_O

curr
OP_ASSIGNMENT
MULT

prev
SEMICOLON

curr
SEMICOLON

curr
OP_ASSIGNMENT

curr
MINUS
GREATER

next
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

curr
EQ

ti
BRACKET_C
CURLY_BRACKET_O
MULT

prev
OP_ASSIGNMENT

curr
MINUS
GREATER

next
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C

prev
OP_ASSIGNMENT
AMPERSANT

curr
MINUS
GREATER

next
SEMICOLON
CURLY_BRACKET_C

write_seqlock_irqsave
BRACKET_O
AMPERSANT

xtime_lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

ti
EQ

time_interpolator
BRACKET_C
CURLY_BRACKET_O

time_interpolator
OP_ASSIGNMENT

NULL
SEMICOLON
FOR
BRACKET_O

curr
OP_ASSIGNMENT

time_interpolator_list
SEMICOLON

curr
SEMICOLON

curr
OP_ASSIGNMENT

curr
MINUS
GREATER

next
BRACKET_C
IF
BRACKET_O

is_better_time_interpolator
BRACKET_O

curr
BRACKET_C
BRACKET_C

time_interpolator
OP_ASSIGNMENT

curr
SEMICOLON

time_interpolator_reset
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

write_sequnlock_irqrestore
BRACKET_O
AMPERSANT

xtime_lock
COMMA

flags
BRACKET_C
SEMICOLON

spin_unlock
BRACKET_O
AMPERSANT

time_interpolator_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF

void

msleep
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

msecs
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

timeout
OP_ASSIGNMENT

msecs_to_jiffies
BRACKET_O

msecs
BRACKET_C
PLUS
NUMBER
SEMICOLON
WHILE
BRACKET_O

timeout
BRACKET_C

timeout
OP_ASSIGNMENT

schedule_timeout_uninterruptible
BRACKET_O

timeout
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

msleep
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

msleep_interruptible
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

msecs
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

timeout
OP_ASSIGNMENT

msecs_to_jiffies
BRACKET_O

msecs
BRACKET_C
PLUS
NUMBER
SEMICOLON
WHILE
BRACKET_O

timeout
AND
NOT

signal_pending
BRACKET_O

current
BRACKET_C
BRACKET_C

timeout
OP_ASSIGNMENT

schedule_timeout_interruptible
BRACKET_O

timeout
BRACKET_C
SEMICOLON

return

jiffies_to_msecs
BRACKET_O

timeout
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

msleep_interruptible
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

void

bacct_add_tsk
BRACKET_O
STRUCT

taskstats
MULT

stats
COMMA
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
STRUCT

timespec

uptime
COMMA

ts
SEMICOLON

s64

ac_etime
SEMICOLON

BUILD_BUG_ON
BRACKET_O

TS_COMM_LEN
LESS

TASK_COMM_LEN
BRACKET_C
SEMICOLON

do_posix_clock_monotonic_gettime
BRACKET_O
AMPERSANT

uptime
BRACKET_C
SEMICOLON

ts
OP_ASSIGNMENT

timespec_sub
BRACKET_O

uptime
COMMA

tsk
MINUS
GREATER

start_time
BRACKET_C
SEMICOLON

ac_etime
OP_ASSIGNMENT

timespec_to_ns
BRACKET_O
AMPERSANT

ts
BRACKET_C
SEMICOLON

do_div
BRACKET_O

ac_etime
COMMA

NSEC_PER_USEC
BRACKET_C
SEMICOLON

stats
MINUS
GREATER

ac_etime
OP_ASSIGNMENT

ac_etime
SEMICOLON

stats
MINUS
GREATER

ac_btime
OP_ASSIGNMENT

xtime
DOT

tv_sec
MINUS

ts
DOT

tv_sec
SEMICOLON
IF
BRACKET_O

thread_group_leader
BRACKET_O

tsk
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

stats
MINUS
GREATER

ac_exitcode
OP_ASSIGNMENT

tsk
MINUS
GREATER

exit_code
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

flags
AMPERSANT

PF_FORKNOEXEC
BRACKET_C

stats
MINUS
GREATER

ac_flag
LOGICAL_OR
OP_ASSIGNMENT

AFORK
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

tsk
MINUS
GREATER

flags
AMPERSANT

PF_SUPERPRIV
BRACKET_C

stats
MINUS
GREATER

ac_flag
LOGICAL_OR
OP_ASSIGNMENT

ASU
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

flags
AMPERSANT

PF_DUMPCORE
BRACKET_C

stats
MINUS
GREATER

ac_flag
LOGICAL_OR
OP_ASSIGNMENT

ACORE
SEMICOLON
IF
BRACKET_O

tsk
MINUS
GREATER

flags
AMPERSANT

PF_SIGNALED
BRACKET_C

stats
MINUS
GREATER

ac_flag
LOGICAL_OR
OP_ASSIGNMENT

AXSIG
SEMICOLON

stats
MINUS
GREATER

ac_nice
OP_ASSIGNMENT

task_nice
BRACKET_O

tsk
BRACKET_C
SEMICOLON

stats
MINUS
GREATER

ac_sched
OP_ASSIGNMENT

tsk
MINUS
GREATER

policy
SEMICOLON

stats
MINUS
GREATER

ac_uid
OP_ASSIGNMENT

tsk
MINUS
GREATER

uid
SEMICOLON

stats
MINUS
GREATER

ac_gid
OP_ASSIGNMENT

tsk
MINUS
GREATER

gid
SEMICOLON

stats
MINUS
GREATER

ac_pid
OP_ASSIGNMENT

tsk
MINUS
GREATER

pid
SEMICOLON

rcu_read_lock
BRACKET_O
BRACKET_C
SEMICOLON

stats
MINUS
GREATER

ac_ppid
OP_ASSIGNMENT

pid_alive
BRACKET_O

tsk
BRACKET_C
QUESTION_MARK

rcu_dereference
BRACKET_O

tsk
MINUS
GREATER

real_parent
BRACKET_C
MINUS
GREATER

tgid
COLON
NUMBER
SEMICOLON

rcu_read_unlock
BRACKET_O
BRACKET_C
SEMICOLON

stats
MINUS
GREATER

ac_utime
OP_ASSIGNMENT

cputime_to_msecs
BRACKET_O

tsk
MINUS
GREATER

utime
BRACKET_C
MULT

USEC_PER_MSEC
SEMICOLON

stats
MINUS
GREATER

ac_stime
OP_ASSIGNMENT

cputime_to_msecs
BRACKET_O

tsk
MINUS
GREATER

stime
BRACKET_C
MULT

USEC_PER_MSEC
SEMICOLON

stats
MINUS
GREATER

ac_minflt
OP_ASSIGNMENT

tsk
MINUS
GREATER

min_flt
SEMICOLON

stats
MINUS
GREATER

ac_majflt
OP_ASSIGNMENT

tsk
MINUS
GREATER

maj_flt
SEMICOLON

strncpy
BRACKET_O

stats
MINUS
GREATER

ac_comm
COMMA

tsk
MINUS
GREATER

comm
COMMA

sizeof
BRACKET_O

stats
MINUS
GREATER

ac_comm
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_TASK_XACCT
PP_DEFINE

KB
NUMBER
PP_DEFINE

MB
BRACKET_O
NUMBER
MULT

KB
BRACKET_C

void

xacct_add_tsk
BRACKET_O
STRUCT

taskstats
MULT

stats
COMMA
STRUCT

task_struct
MULT

p
BRACKET_C
CURLY_BRACKET_O
STRUCT

mm_struct
MULT

mm
SEMICOLON

stats
MINUS
GREATER

coremem
OP_ASSIGNMENT

jiffies_to_usecs
BRACKET_O

p
MINUS
GREATER

acct_rss_mem1
BRACKET_C
MULT

PAGE_SIZE
DIV

MB
SEMICOLON

stats
MINUS
GREATER

virtmem
OP_ASSIGNMENT

jiffies_to_usecs
BRACKET_O

p
MINUS
GREATER

acct_vm_mem1
BRACKET_C
MULT

PAGE_SIZE
DIV

MB
SEMICOLON

mm
OP_ASSIGNMENT

get_task_mm
BRACKET_O

p
BRACKET_C
SEMICOLON
IF
BRACKET_O

mm
BRACKET_C
CURLY_BRACKET_O

stats
MINUS
GREATER

hiwater_rss
OP_ASSIGNMENT

mm
MINUS
GREATER

hiwater_rss
MULT

PAGE_SIZE
DIV

KB
SEMICOLON

stats
MINUS
GREATER

hiwater_vm
OP_ASSIGNMENT

mm
MINUS
GREATER

hiwater_vm
MULT

PAGE_SIZE
DIV

KB
SEMICOLON

mmput
BRACKET_O

mm
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

stats
MINUS
GREATER

read_char
OP_ASSIGNMENT

p
MINUS
GREATER

rchar
SEMICOLON

stats
MINUS
GREATER

write_char
OP_ASSIGNMENT

p
MINUS
GREATER

wchar
SEMICOLON

stats
MINUS
GREATER

read_syscalls
OP_ASSIGNMENT

p
MINUS
GREATER

syscr
SEMICOLON

stats
MINUS
GREATER

write_syscalls
OP_ASSIGNMENT

p
MINUS
GREATER

syscw
SEMICOLON
PP_IFDEF

CONFIG_TASK_IO_ACCOUNTING

stats
MINUS
GREATER

read_bytes
OP_ASSIGNMENT

p
MINUS
GREATER

ioac
DOT

read_bytes
SEMICOLON

stats
MINUS
GREATER

write_bytes
OP_ASSIGNMENT

p
MINUS
GREATER

ioac
DOT

write_bytes
SEMICOLON

stats
MINUS
GREATER

cancelled_write_bytes
OP_ASSIGNMENT

p
MINUS
GREATER

ioac
DOT

cancelled_write_bytes
SEMICOLON
PP_ELSE

stats
MINUS
GREATER

read_bytes
OP_ASSIGNMENT
NUMBER
SEMICOLON

stats
MINUS
GREATER

write_bytes
OP_ASSIGNMENT
NUMBER
SEMICOLON

stats
MINUS
GREATER

cancelled_write_bytes
OP_ASSIGNMENT
NUMBER
SEMICOLON
PP_ENDIF
CURLY_BRACKET_C
HASH

undef

KB
HASH

undef

MB

void

acct_update_integrals
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

likely
BRACKET_O

tsk
MINUS
GREATER

mm
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

delta
OP_ASSIGNMENT

cputime_to_jiffies
BRACKET_O

cputime_sub
BRACKET_O

tsk
MINUS
GREATER

stime
COMMA

tsk
MINUS
GREATER

acct_stimexpd
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

delta
EQ
NUMBER
BRACKET_C

return
SEMICOLON

tsk
MINUS
GREATER

acct_stimexpd
OP_ASSIGNMENT

tsk
MINUS
GREATER

stime
SEMICOLON

tsk
MINUS
GREATER

acct_rss_mem1
ASSIGN_PLUS

delta
MULT

get_mm_rss
BRACKET_O

tsk
MINUS
GREATER

mm
BRACKET_C
SEMICOLON

tsk
MINUS
GREATER

acct_vm_mem1
ASSIGN_PLUS

delta
MULT

tsk
MINUS
GREATER

mm
MINUS
GREATER

total_vm
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

void

acct_clear_integrals
BRACKET_O
STRUCT

task_struct
MULT

tsk
BRACKET_C
CURLY_BRACKET_O

tsk
MINUS
GREATER

acct_stimexpd
OP_ASSIGNMENT
NUMBER
SEMICOLON

tsk
MINUS
GREATER

acct_rss_mem1
OP_ASSIGNMENT
NUMBER
SEMICOLON

tsk
MINUS
GREATER

acct_vm_mem1
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
PP_ENDIF
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

asmlinkage
TYPE_LONG

sys_chown16
BRACKET_O
CONST
TYPE_CHAR

__user
MULT

filename
COMMA

old_uid_t

user
COMMA

old_gid_t

group
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
OP_ASSIGNMENT

sys_chown
BRACKET_O

filename
COMMA

low2highuid
BRACKET_O

user
BRACKET_C
COMMA

low2highgid
BRACKET_O

group
BRACKET_C
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_lchown16
BRACKET_O
CONST
TYPE_CHAR

__user
MULT

filename
COMMA

old_uid_t

user
COMMA

old_gid_t

group
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
OP_ASSIGNMENT

sys_lchown
BRACKET_O

filename
COMMA

low2highuid
BRACKET_O

user
BRACKET_C
COMMA

low2highgid
BRACKET_O

group
BRACKET_C
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_fchown16
BRACKET_O
TYPE_UNSIGNED
TYPE_INT

fd
COMMA

old_uid_t

user
COMMA

old_gid_t

group
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
OP_ASSIGNMENT

sys_fchown
BRACKET_O

fd
COMMA

low2highuid
BRACKET_O

user
BRACKET_C
COMMA

low2highgid
BRACKET_O

group
BRACKET_C
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setregid16
BRACKET_O

old_gid_t

rgid
COMMA

old_gid_t

egid
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
OP_ASSIGNMENT

sys_setregid
BRACKET_O

low2highgid
BRACKET_O

rgid
BRACKET_C
COMMA

low2highgid
BRACKET_O

egid
BRACKET_C
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setgid16
BRACKET_O

old_gid_t

gid
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
OP_ASSIGNMENT

sys_setgid
BRACKET_O

low2highgid
BRACKET_O

gid
BRACKET_C
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setreuid16
BRACKET_O

old_uid_t

ruid
COMMA

old_uid_t

euid
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
OP_ASSIGNMENT

sys_setreuid
BRACKET_O

low2highuid
BRACKET_O

ruid
BRACKET_C
COMMA

low2highuid
BRACKET_O

euid
BRACKET_C
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setuid16
BRACKET_O

old_uid_t

uid
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
OP_ASSIGNMENT

sys_setuid
BRACKET_O

low2highuid
BRACKET_O

uid
BRACKET_C
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setresuid16
BRACKET_O

old_uid_t

ruid
COMMA

old_uid_t

euid
COMMA

old_uid_t

suid
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
OP_ASSIGNMENT

sys_setresuid
BRACKET_O

low2highuid
BRACKET_O

ruid
BRACKET_C
COMMA

low2highuid
BRACKET_O

euid
BRACKET_C
COMMA

low2highuid
BRACKET_O

suid
BRACKET_C
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getresuid16
BRACKET_O

old_uid_t

__user
MULT

ruid
COMMA

old_uid_t

__user
MULT

euid
COMMA

old_uid_t

__user
MULT

suid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

retval
OP_ASSIGNMENT

put_user
BRACKET_O

high2lowuid
BRACKET_O

current
MINUS
GREATER

uid
BRACKET_C
COMMA

ruid
BRACKET_C
BRACKET_C
AND
NOT
BRACKET_O

retval
OP_ASSIGNMENT

put_user
BRACKET_O

high2lowuid
BRACKET_O

current
MINUS
GREATER

euid
BRACKET_C
COMMA

euid
BRACKET_C
BRACKET_C
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

high2lowuid
BRACKET_O

current
MINUS
GREATER

suid
BRACKET_C
COMMA

suid
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setresgid16
BRACKET_O

old_gid_t

rgid
COMMA

old_gid_t

egid
COMMA

old_gid_t

sgid
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
OP_ASSIGNMENT

sys_setresgid
BRACKET_O

low2highgid
BRACKET_O

rgid
BRACKET_C
COMMA

low2highgid
BRACKET_O

egid
BRACKET_C
COMMA

low2highgid
BRACKET_O

sgid
BRACKET_C
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getresgid16
BRACKET_O

old_gid_t

__user
MULT

rgid
COMMA

old_gid_t

__user
MULT

egid
COMMA

old_gid_t

__user
MULT

sgid
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

retval
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

retval
OP_ASSIGNMENT

put_user
BRACKET_O

high2lowgid
BRACKET_O

current
MINUS
GREATER

gid
BRACKET_C
COMMA

rgid
BRACKET_C
BRACKET_C
AND
NOT
BRACKET_O

retval
OP_ASSIGNMENT

put_user
BRACKET_O

high2lowgid
BRACKET_O

current
MINUS
GREATER

egid
BRACKET_C
COMMA

egid
BRACKET_C
BRACKET_C
BRACKET_C

retval
OP_ASSIGNMENT

put_user
BRACKET_O

high2lowgid
BRACKET_O

current
MINUS
GREATER

sgid
BRACKET_C
COMMA

sgid
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setfsuid16
BRACKET_O

old_uid_t

uid
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
OP_ASSIGNMENT

sys_setfsuid
BRACKET_O

low2highuid
BRACKET_O

uid
BRACKET_C
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setfsgid16
BRACKET_O

old_gid_t

gid
BRACKET_C
CURLY_BRACKET_O
TYPE_LONG

ret
OP_ASSIGNMENT

sys_setfsgid
BRACKET_O

low2highgid
BRACKET_O

gid
BRACKET_C
BRACKET_C
SEMICOLON

prevent_tail_call
BRACKET_O

ret
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

groups16_to_user
BRACKET_O

old_gid_t

__user
MULT

grouplist
COMMA
STRUCT

group_info
MULT

group_info
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON

old_gid_t

group
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

group_info
MINUS
GREATER

ngroups
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O

group
OP_ASSIGNMENT

high2lowgid
BRACKET_O

GROUP_AT
BRACKET_O

group_info
COMMA

i
BRACKET_C
BRACKET_C
SEMICOLON
IF
BRACKET_O

put_user
BRACKET_O

group
COMMA

grouplist
PLUS

i
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

groups16_from_user
BRACKET_O
STRUCT

group_info
MULT

group_info
COMMA

old_gid_t

__user
MULT

grouplist
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
SEMICOLON

old_gid_t

group
SEMICOLON
FOR
BRACKET_O

i
OP_ASSIGNMENT
NUMBER
SEMICOLON

i
LESS

group_info
MINUS
GREATER

ngroups
SEMICOLON

i
PLUS
PLUS
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

get_user
BRACKET_O

group
COMMA

grouplist
PLUS

i
BRACKET_C
BRACKET_C

return
MINUS

EFAULT
SEMICOLON

GROUP_AT
BRACKET_O

group_info
COMMA

i
BRACKET_C
OP_ASSIGNMENT

low2highgid
BRACKET_O

group
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getgroups16
BRACKET_O
TYPE_INT

gidsetsize
COMMA

old_gid_t

__user
MULT

grouplist
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

i
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

gidsetsize
LESS
NUMBER
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

get_group_info
BRACKET_O

current
MINUS
GREATER

group_info
BRACKET_C
SEMICOLON

i
OP_ASSIGNMENT

current
MINUS
GREATER

group_info
MINUS
GREATER

ngroups
SEMICOLON
IF
BRACKET_O

gidsetsize
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

i
GREATER

gidsetsize
BRACKET_C
CURLY_BRACKET_O

i
OP_ASSIGNMENT
MINUS

EINVAL
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

groups16_to_user
BRACKET_O

grouplist
COMMA

current
MINUS
GREATER

group_info
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

i
OP_ASSIGNMENT
MINUS

EFAULT
SEMICOLON

goto

out
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

out
COLON

put_group_info
BRACKET_O

current
MINUS
GREATER

group_info
BRACKET_C
SEMICOLON

return

i
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_setgroups16
BRACKET_O
TYPE_INT

gidsetsize
COMMA

old_gid_t

__user
MULT

grouplist
BRACKET_C
CURLY_BRACKET_O
STRUCT

group_info
MULT

group_info
SEMICOLON
TYPE_INT

retval
SEMICOLON
IF
BRACKET_O
NOT

capable
BRACKET_O

CAP_SETGID
BRACKET_C
BRACKET_C

return
MINUS

EPERM
SEMICOLON
IF
BRACKET_O
BRACKET_O
TYPE_UNSIGNED
BRACKET_C

gidsetsize
GREATER

NGROUPS_MAX
BRACKET_C

return
MINUS

EINVAL
SEMICOLON

group_info
OP_ASSIGNMENT

groups_alloc
BRACKET_O

gidsetsize
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

group_info
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

retval
OP_ASSIGNMENT

groups16_from_user
BRACKET_O

group_info
COMMA

grouplist
BRACKET_C
SEMICOLON
IF
BRACKET_O

retval
BRACKET_C
CURLY_BRACKET_O

put_group_info
BRACKET_O

group_info
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

retval
OP_ASSIGNMENT

set_current_groups
BRACKET_O

group_info
BRACKET_C
SEMICOLON

put_group_info
BRACKET_O

group_info
BRACKET_C
SEMICOLON

return

retval
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getuid16
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

high2lowuid
BRACKET_O

current
MINUS
GREATER

uid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_geteuid16
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

high2lowuid
BRACKET_O

current
MINUS
GREATER

euid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getgid16
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

high2lowgid
BRACKET_O

current
MINUS
GREATER

gid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

asmlinkage
TYPE_LONG

sys_getegid16
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

high2lowgid
BRACKET_O

current
MINUS
GREATER

egid
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_DEFINE

UIDHASH_BITS
BRACKET_O

CONFIG_BASE_SMALL
QUESTION_MARK
NUMBER
COLON
NUMBER
BRACKET_C
PP_DEFINE

UIDHASH_SZ
BRACKET_O
NUMBER
LESS
LESS

UIDHASH_BITS
BRACKET_C
PP_DEFINE

UIDHASH_MASK
BRACKET_O

UIDHASH_SZ
MINUS
NUMBER
BRACKET_C
PP_DEFINE

__uidhashfn
BRACKET_O

uid
BRACKET_C
BRACKET_O
BRACKET_O
BRACKET_O

uid
GREATER
GREATER

UIDHASH_BITS
BRACKET_C
PLUS

uid
BRACKET_C
AMPERSANT

UIDHASH_MASK
BRACKET_C
PP_DEFINE

uidhashentry
BRACKET_O

uid
BRACKET_C
BRACKET_O

uidhash_table
PLUS

__uidhashfn
BRACKET_O
BRACKET_O

uid
BRACKET_C
BRACKET_C
BRACKET_C

static
STRUCT

kmem_cache
MULT

uid_cachep
SEMICOLON

static
STRUCT

list_head

uidhash_table
CORNER_BRACKET_O

UIDHASH_SZ
CORNER_BRACKET_C
SEMICOLON

static

DEFINE_SPINLOCK
BRACKET_O

uidhash_lock
BRACKET_C
SEMICOLON
STRUCT

user_struct

root_user
OP_ASSIGNMENT
CURLY_BRACKET_O
DOT

__count
OP_ASSIGNMENT

ATOMIC_INIT
BRACKET_O
NUMBER
BRACKET_C
COMMA
DOT

processes
OP_ASSIGNMENT

ATOMIC_INIT
BRACKET_O
NUMBER
BRACKET_C
COMMA
DOT

files
OP_ASSIGNMENT

ATOMIC_INIT
BRACKET_O
NUMBER
BRACKET_C
COMMA
DOT

sigpending
OP_ASSIGNMENT

ATOMIC_INIT
BRACKET_O
NUMBER
BRACKET_C
COMMA
DOT

mq_bytes
OP_ASSIGNMENT
NUMBER
COMMA
DOT

locked_shm
OP_ASSIGNMENT
NUMBER
COMMA
PP_IFDEF

CONFIG_KEYS
DOT

uid_keyring
OP_ASSIGNMENT
AMPERSANT

root_user_keyring
COMMA
DOT

session_keyring
OP_ASSIGNMENT
AMPERSANT

root_session_keyring
COMMA
PP_ENDIF
CURLY_BRACKET_C
SEMICOLON

static

inline

void

uid_hash_insert
BRACKET_O
STRUCT

user_struct
MULT

up
COMMA
STRUCT

list_head
MULT

hashent
BRACKET_C
CURLY_BRACKET_O

list_add
BRACKET_O
AMPERSANT

up
MINUS
GREATER

uidhash_list
COMMA

hashent
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

uid_hash_remove
BRACKET_O
STRUCT

user_struct
MULT

up
BRACKET_C
CURLY_BRACKET_O

list_del
BRACKET_O
AMPERSANT

up
MINUS
GREATER

uidhash_list
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
STRUCT

user_struct
MULT

uid_hash_find
BRACKET_O

uid_t

uid
COMMA
STRUCT

list_head
MULT

hashent
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head
MULT

up
SEMICOLON

list_for_each
BRACKET_O

up
COMMA

hashent
BRACKET_C
CURLY_BRACKET_O
STRUCT

user_struct
MULT

user
SEMICOLON

user
OP_ASSIGNMENT

list_entry
BRACKET_O

up
COMMA
STRUCT

user_struct
COMMA

uidhash_list
BRACKET_C
SEMICOLON
IF
BRACKET_O

user
MINUS
GREATER

uid
EQ

uid
BRACKET_C
CURLY_BRACKET_O

atomic_inc
BRACKET_O
AMPERSANT

user
MINUS
GREATER

__count
BRACKET_C
SEMICOLON

return

user
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

NULL
SEMICOLON
CURLY_BRACKET_C
STRUCT

user_struct
MULT

find_user
BRACKET_O

uid_t

uid
BRACKET_C
CURLY_BRACKET_O
STRUCT

user_struct
MULT

ret
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

uidhash_lock
COMMA

flags
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT

uid_hash_find
BRACKET_O

uid
COMMA

uidhashentry
BRACKET_O

uid
BRACKET_C
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

uidhash_lock
COMMA

flags
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

void

free_uid
BRACKET_O
STRUCT

user_struct
MULT

up
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON
IF
BRACKET_O
NOT

up
BRACKET_C

return
SEMICOLON

local_irq_save
BRACKET_O

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

atomic_dec_and_lock
BRACKET_O
AMPERSANT

up
MINUS
GREATER

__count
COMMA
AMPERSANT

uidhash_lock
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

uid_hash_remove
BRACKET_O

up
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

uidhash_lock
COMMA

flags
BRACKET_C
SEMICOLON

key_put
BRACKET_O

up
MINUS
GREATER

uid_keyring
BRACKET_C
SEMICOLON

key_put
BRACKET_O

up
MINUS
GREATER

session_keyring
BRACKET_C
SEMICOLON

kmem_cache_free
BRACKET_O

uid_cachep
COMMA

up
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

local_irq_restore
BRACKET_O

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
STRUCT

user_struct
MULT

alloc_uid
BRACKET_O

uid_t

uid
BRACKET_C
CURLY_BRACKET_O
STRUCT

list_head
MULT

hashent
OP_ASSIGNMENT

uidhashentry
BRACKET_O

uid
BRACKET_C
SEMICOLON
STRUCT

user_struct
MULT

up
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

uidhash_lock
BRACKET_C
SEMICOLON

up
OP_ASSIGNMENT

uid_hash_find
BRACKET_O

uid
COMMA

hashent
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

uidhash_lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

up
BRACKET_C
CURLY_BRACKET_O
STRUCT

user_struct
MULT

new
SEMICOLON

new
OP_ASSIGNMENT

kmem_cache_alloc
BRACKET_O

uid_cachep
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

new
BRACKET_C

return

NULL
SEMICOLON

new
MINUS
GREATER

uid
OP_ASSIGNMENT

uid
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

new
MINUS
GREATER

__count
COMMA
NUMBER
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

new
MINUS
GREATER

processes
COMMA
NUMBER
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

new
MINUS
GREATER

files
COMMA
NUMBER
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

new
MINUS
GREATER

sigpending
COMMA
NUMBER
BRACKET_C
SEMICOLON
PP_IFDEF

CONFIG_INOTIFY_USER

atomic_set
BRACKET_O
AMPERSANT

new
MINUS
GREATER

inotify_watches
COMMA
NUMBER
BRACKET_C
SEMICOLON

atomic_set
BRACKET_O
AMPERSANT

new
MINUS
GREATER

inotify_devs
COMMA
NUMBER
BRACKET_C
SEMICOLON
PP_ENDIF

new
MINUS
GREATER

mq_bytes
OP_ASSIGNMENT
NUMBER
SEMICOLON

new
MINUS
GREATER

locked_shm
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O

alloc_uid_keyring
BRACKET_O

new
COMMA

current
BRACKET_C
LESS
NUMBER
BRACKET_C
CURLY_BRACKET_O

kmem_cache_free
BRACKET_O

uid_cachep
COMMA

new
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

spin_lock_irq
BRACKET_O
AMPERSANT

uidhash_lock
BRACKET_C
SEMICOLON

up
OP_ASSIGNMENT

uid_hash_find
BRACKET_O

uid
COMMA

hashent
BRACKET_C
SEMICOLON
IF
BRACKET_O

up
BRACKET_C
CURLY_BRACKET_O

key_put
BRACKET_O

new
MINUS
GREATER

uid_keyring
BRACKET_C
SEMICOLON

key_put
BRACKET_O

new
MINUS
GREATER

session_keyring
BRACKET_C
SEMICOLON

kmem_cache_free
BRACKET_O

uid_cachep
COMMA

new
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

uid_hash_insert
BRACKET_O

new
COMMA

hashent
BRACKET_C
SEMICOLON

up
OP_ASSIGNMENT

new
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

uidhash_lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

up
SEMICOLON
CURLY_BRACKET_C

void

switch_uid
BRACKET_O
STRUCT

user_struct
MULT

new_user
BRACKET_C
CURLY_BRACKET_O
STRUCT

user_struct
MULT

old_user
SEMICOLON

old_user
OP_ASSIGNMENT

current
MINUS
GREATER

user
SEMICOLON

atomic_inc
BRACKET_O
AMPERSANT

new_user
MINUS
GREATER

processes
BRACKET_C
SEMICOLON

atomic_dec
BRACKET_O
AMPERSANT

old_user
MINUS
GREATER

processes
BRACKET_C
SEMICOLON

switch_uid_keyring
BRACKET_O

new_user
BRACKET_C
SEMICOLON

current
MINUS
GREATER

user
OP_ASSIGNMENT

new_user
SEMICOLON

smp_mb
BRACKET_O
BRACKET_C
SEMICOLON

spin_unlock_wait
BRACKET_O
AMPERSANT

current
MINUS
GREATER

sighand
MINUS
GREATER

siglock
BRACKET_C
SEMICOLON

free_uid
BRACKET_O

old_user
BRACKET_C
SEMICOLON

suid_keys
BRACKET_O

current
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

__init

uid_cache_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

n
SEMICOLON

uid_cachep
OP_ASSIGNMENT

kmem_cache_create
BRACKET_O
STRING
COMMA

sizeof
BRACKET_O
STRUCT

user_struct
BRACKET_C
COMMA
NUMBER
COMMA

SLAB_HWCACHE_ALIGN
LOGICAL_OR

SLAB_PANIC
COMMA

NULL
COMMA

NULL
BRACKET_C
SEMICOLON
FOR
BRACKET_O

n
OP_ASSIGNMENT
NUMBER
SEMICOLON

n
LESS

UIDHASH_SZ
SEMICOLON
PLUS
PLUS

n
BRACKET_C

INIT_LIST_HEAD
BRACKET_O

uidhash_table
PLUS

n
BRACKET_C
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

uidhash_lock
BRACKET_C
SEMICOLON

uid_hash_insert
BRACKET_O
AMPERSANT

root_user
COMMA

uidhashentry
BRACKET_O
NUMBER
BRACKET_C
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

uidhash_lock
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

module_init
BRACKET_O

uid_cache_init
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static
STRUCT

uts_namespace
MULT

clone_uts_ns
BRACKET_O
STRUCT

uts_namespace
MULT

old_ns
BRACKET_C
CURLY_BRACKET_O
STRUCT

uts_namespace
MULT

ns
SEMICOLON

ns
OP_ASSIGNMENT

kmalloc
BRACKET_O

sizeof
BRACKET_O
STRUCT

uts_namespace
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O

ns
BRACKET_C
CURLY_BRACKET_O

memcpy
BRACKET_O
AMPERSANT

ns
MINUS
GREATER

name
COMMA
AMPERSANT

old_ns
MINUS
GREATER

name
COMMA

sizeof
BRACKET_O

ns
MINUS
GREATER

name
BRACKET_C
BRACKET_C
SEMICOLON

kref_init
BRACKET_O
AMPERSANT

ns
MINUS
GREATER

kref
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

ns
SEMICOLON
CURLY_BRACKET_C
STRUCT

uts_namespace
MULT

copy_utsname
BRACKET_O
TYPE_INT

flags
COMMA
STRUCT

uts_namespace
MULT

old_ns
BRACKET_C
CURLY_BRACKET_O
STRUCT

uts_namespace
MULT

new_ns
SEMICOLON

BUG_ON
BRACKET_O
NOT

old_ns
BRACKET_C
SEMICOLON

get_uts_ns
BRACKET_O

old_ns
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT
BRACKET_O

flags
AMPERSANT

CLONE_NEWUTS
BRACKET_C
BRACKET_C

return

old_ns
SEMICOLON

new_ns
OP_ASSIGNMENT

clone_uts_ns
BRACKET_O

old_ns
BRACKET_C
SEMICOLON

put_uts_ns
BRACKET_O

old_ns
BRACKET_C
SEMICOLON

return

new_ns
SEMICOLON
CURLY_BRACKET_C

void

free_uts_ns
BRACKET_O
STRUCT

kref
MULT

kref
BRACKET_C
CURLY_BRACKET_O
STRUCT

uts_namespace
MULT

ns
SEMICOLON

ns
OP_ASSIGNMENT

container_of
BRACKET_O

kref
COMMA
STRUCT

uts_namespace
COMMA

kref
BRACKET_C
SEMICOLON

kfree
BRACKET_O

ns
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

static

void
MULT

get_uts
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
BRACKET_C
CURLY_BRACKET_O
TYPE_CHAR
MULT

which
OP_ASSIGNMENT

table
MINUS
GREATER

data
SEMICOLON
PP_IFDEF

CONFIG_UTS_NS
STRUCT

uts_namespace
MULT

uts_ns
OP_ASSIGNMENT

current
MINUS
GREATER

nsproxy
MINUS
GREATER

uts_ns
SEMICOLON

which
OP_ASSIGNMENT
BRACKET_O

which
MINUS
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C
AMPERSANT

init_uts_ns
BRACKET_C
PLUS
BRACKET_O
TYPE_CHAR
MULT
BRACKET_C

uts_ns
SEMICOLON
PP_ENDIF
IF
BRACKET_O
NOT

write
BRACKET_C

down_read
BRACKET_O
AMPERSANT

uts_sem
BRACKET_C
SEMICOLON
ELSE

down_write
BRACKET_O
AMPERSANT

uts_sem
BRACKET_C
SEMICOLON

return

which
SEMICOLON
CURLY_BRACKET_C

static

void

put_uts
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA

void
MULT

which
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

write
BRACKET_C

up_read
BRACKET_O
AMPERSANT

uts_sem
BRACKET_C
SEMICOLON
ELSE

up_write
BRACKET_O
AMPERSANT

uts_sem
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
PP_IFDEF

CONFIG_PROC_FS

static
TYPE_INT

proc_do_uts_string
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

write
COMMA
STRUCT

file
MULT

filp
COMMA

void

__user
MULT

buffer
COMMA

size_t
MULT

lenp
COMMA

loff_t
MULT

ppos
BRACKET_C
CURLY_BRACKET_O
STRUCT

ctl_table

uts_table
SEMICOLON
TYPE_INT

r
SEMICOLON

memcpy
BRACKET_O
AMPERSANT

uts_table
COMMA

table
COMMA

sizeof
BRACKET_O

uts_table
BRACKET_C
BRACKET_C
SEMICOLON

uts_table
DOT

data
OP_ASSIGNMENT

get_uts
BRACKET_O

table
COMMA

write
BRACKET_C
SEMICOLON

r
OP_ASSIGNMENT

proc_dostring
BRACKET_O
AMPERSANT

uts_table
COMMA

write
COMMA

filp
COMMA

buffer
COMMA

lenp
COMMA

ppos
BRACKET_C
SEMICOLON

put_uts
BRACKET_O

table
COMMA

write
COMMA

uts_table
DOT

data
BRACKET_C
SEMICOLON

return

r
SEMICOLON
CURLY_BRACKET_C
PP_ELSE
PP_DEFINE

proc_do_uts_string

NULL
PP_ENDIF
PP_IFDEF

CONFIG_SYSCTL_SYSCALL

static
TYPE_INT

sysctl_uts_string
BRACKET_O

ctl_table
MULT

table
COMMA
TYPE_INT

__user
MULT

name
COMMA
TYPE_INT

nlen
COMMA

void

__user
MULT

oldval
COMMA

size_t

__user
MULT

oldlenp
COMMA

void

__user
MULT

newval
COMMA

size_t

newlen
BRACKET_C
CURLY_BRACKET_O
STRUCT

ctl_table

uts_table
SEMICOLON
TYPE_INT

r
COMMA

write
SEMICOLON

write
OP_ASSIGNMENT

newval
AND

newlen
SEMICOLON

memcpy
BRACKET_O
AMPERSANT

uts_table
COMMA

table
COMMA

sizeof
BRACKET_O

uts_table
BRACKET_C
BRACKET_C
SEMICOLON

uts_table
DOT

data
OP_ASSIGNMENT

get_uts
BRACKET_O

table
COMMA

write
BRACKET_C
SEMICOLON

r
OP_ASSIGNMENT

sysctl_string
BRACKET_O
AMPERSANT

uts_table
COMMA

name
COMMA

nlen
COMMA

oldval
COMMA

oldlenp
COMMA

newval
COMMA

newlen
BRACKET_C
SEMICOLON

put_uts
BRACKET_O

table
COMMA

write
COMMA

uts_table
DOT

data
BRACKET_C
SEMICOLON

return

r
SEMICOLON
CURLY_BRACKET_C
PP_ELSE
PP_DEFINE

sysctl_uts_string

NULL
PP_ENDIF

static
STRUCT

ctl_table

uts_kern_table
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_OSTYPE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT

init_uts_ns
DOT

name
DOT

sysname
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

init_uts_ns
DOT

name
DOT

sysname
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT

proc_do_uts_string
COMMA
DOT

strategy
OP_ASSIGNMENT

sysctl_uts_string
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_OSRELEASE
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT

init_uts_ns
DOT

name
DOT

release
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

init_uts_ns
DOT

name
DOT

release
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT

proc_do_uts_string
COMMA
DOT

strategy
OP_ASSIGNMENT

sysctl_uts_string
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_VERSION
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT

init_uts_ns
DOT

name
DOT

version
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

init_uts_ns
DOT

name
DOT

version
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT

proc_do_uts_string
COMMA
DOT

strategy
OP_ASSIGNMENT

sysctl_uts_string
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_NODENAME
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT

init_uts_ns
DOT

name
DOT

nodename
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

init_uts_ns
DOT

name
DOT

nodename
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT

proc_do_uts_string
COMMA
DOT

strategy
OP_ASSIGNMENT

sysctl_uts_string
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

KERN_DOMAINNAME
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

data
OP_ASSIGNMENT

init_uts_ns
DOT

name
DOT

domainname
COMMA
DOT

maxlen
OP_ASSIGNMENT

sizeof
BRACKET_O

init_uts_ns
DOT

name
DOT

domainname
BRACKET_C
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

proc_handler
OP_ASSIGNMENT

proc_do_uts_string
COMMA
DOT

strategy
OP_ASSIGNMENT

sysctl_uts_string
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
CURLY_BRACKET_C
CURLY_BRACKET_C
SEMICOLON

static
STRUCT

ctl_table

uts_root_table
CORNER_BRACKET_O
CORNER_BRACKET_C
OP_ASSIGNMENT
CURLY_BRACKET_O
CURLY_BRACKET_O
DOT

ctl_name
OP_ASSIGNMENT

CTL_KERN
COMMA
DOT

procname
OP_ASSIGNMENT
STRING
COMMA
DOT

mode
OP_ASSIGNMENT
NUMBER
COMMA
DOT

child
OP_ASSIGNMENT

uts_kern_table
COMMA
CURLY_BRACKET_C
COMMA
CURLY_BRACKET_O
CURLY_BRACKET_C
CURLY_BRACKET_C
SEMICOLON

static
TYPE_INT

__init

utsname_sysctl_init
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

register_sysctl_table
BRACKET_O

uts_root_table
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

__initcall
BRACKET_O

utsname_sysctl_init
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE

void

init_waitqueue_head
BRACKET_O

wait_queue_head_t
MULT

q
BRACKET_C
CURLY_BRACKET_O

spin_lock_init
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

q
MINUS
GREATER

task_list
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

init_waitqueue_head
BRACKET_C
SEMICOLON

void

fastcall

add_wait_queue
BRACKET_O

wait_queue_head_t
MULT

q
COMMA

wait_queue_t
MULT

wait
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

wait
MINUS
GREATER

flags
AMPERSANT
OP_ASSIGNMENT
TILDE

WQ_FLAG_EXCLUSIVE
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

__add_wait_queue
BRACKET_O

q
COMMA

wait
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

add_wait_queue
BRACKET_C
SEMICOLON

void

fastcall

add_wait_queue_exclusive
BRACKET_O

wait_queue_head_t
MULT

q
COMMA

wait_queue_t
MULT

wait
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

wait
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

WQ_FLAG_EXCLUSIVE
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

__add_wait_queue_tail
BRACKET_O

q
COMMA

wait
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

add_wait_queue_exclusive
BRACKET_C
SEMICOLON

void

fastcall

remove_wait_queue
BRACKET_O

wait_queue_head_t
MULT

q
COMMA

wait_queue_t
MULT

wait
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

__remove_wait_queue
BRACKET_O

q
COMMA

wait
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

remove_wait_queue
BRACKET_C
SEMICOLON

void

fastcall

prepare_to_wait
BRACKET_O

wait_queue_head_t
MULT

q
COMMA

wait_queue_t
MULT

wait
COMMA
TYPE_INT

state
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

wait
MINUS
GREATER

flags
AMPERSANT
OP_ASSIGNMENT
TILDE

WQ_FLAG_EXCLUSIVE
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

wait
MINUS
GREATER

task_list
BRACKET_C
BRACKET_C

__add_wait_queue
BRACKET_O

q
COMMA

wait
BRACKET_C
SEMICOLON
IF
BRACKET_O

is_sync_wait
BRACKET_O

wait
BRACKET_C
BRACKET_C

set_current_state
BRACKET_O

state
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

prepare_to_wait
BRACKET_C
SEMICOLON

void

fastcall

prepare_to_wait_exclusive
BRACKET_O

wait_queue_head_t
MULT

q
COMMA

wait_queue_t
MULT

wait
COMMA
TYPE_INT

state
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

wait
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

WQ_FLAG_EXCLUSIVE
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
IF
BRACKET_O

list_empty
BRACKET_O
AMPERSANT

wait
MINUS
GREATER

task_list
BRACKET_C
BRACKET_C

__add_wait_queue_tail
BRACKET_O

q
COMMA

wait
BRACKET_C
SEMICOLON
IF
BRACKET_O

is_sync_wait
BRACKET_O

wait
BRACKET_C
BRACKET_C

set_current_state
BRACKET_O

state
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

prepare_to_wait_exclusive
BRACKET_C
SEMICOLON

void

fastcall

finish_wait
BRACKET_O

wait_queue_head_t
MULT

q
COMMA

wait_queue_t
MULT

wait
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

__set_current_state
BRACKET_O

TASK_RUNNING
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

list_empty_careful
BRACKET_O
AMPERSANT

wait
MINUS
GREATER

task_list
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

spin_lock_irqsave
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

list_del_init
BRACKET_O
AMPERSANT

wait
MINUS
GREATER

task_list
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

q
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

finish_wait
BRACKET_C
SEMICOLON
TYPE_INT

autoremove_wake_function
BRACKET_O

wait_queue_t
MULT

wait
COMMA
TYPE_UNSIGNED

mode
COMMA
TYPE_INT

sync
COMMA

void
MULT

key
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT

default_wake_function
BRACKET_O

wait
COMMA

mode
COMMA

sync
COMMA

key
BRACKET_C
SEMICOLON
IF
BRACKET_O

ret
BRACKET_C

list_del_init
BRACKET_O
AMPERSANT

wait
MINUS
GREATER

task_list
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

autoremove_wake_function
BRACKET_C
SEMICOLON
TYPE_INT

wake_bit_function
BRACKET_O

wait_queue_t
MULT

wait
COMMA
TYPE_UNSIGNED

mode
COMMA
TYPE_INT

sync
COMMA

void
MULT

arg
BRACKET_C
CURLY_BRACKET_O
STRUCT

wait_bit_key
MULT

key
OP_ASSIGNMENT

arg
SEMICOLON
STRUCT

wait_bit_queue
MULT

wait_bit
OP_ASSIGNMENT

container_of
BRACKET_O

wait
COMMA
STRUCT

wait_bit_queue
COMMA

wait
BRACKET_C
SEMICOLON
IF
BRACKET_O

wait_bit
MINUS
GREATER

key
DOT

flags
NOT_EQ

key
MINUS
GREATER

flags
OR

wait_bit
MINUS
GREATER

key
DOT

bit_nr
NOT_EQ

key
MINUS
GREATER

bit_nr
OR

test_bit
BRACKET_O

key
MINUS
GREATER

bit_nr
COMMA

key
MINUS
GREATER

flags
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON
ELSE

return

autoremove_wake_function
BRACKET_O

wait
COMMA

mode
COMMA

sync
COMMA

key
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

wake_bit_function
BRACKET_C
SEMICOLON
TYPE_INT

__sched

fastcall

__wait_on_bit
BRACKET_O

wait_queue_head_t
MULT

wq
COMMA
STRUCT

wait_bit_queue
MULT

q
COMMA
TYPE_INT
BRACKET_O
MULT

action
BRACKET_C
BRACKET_O

void
MULT
BRACKET_C
COMMA
TYPE_UNSIGNED

mode
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
DO
CURLY_BRACKET_O

prepare_to_wait
BRACKET_O

wq
COMMA
AMPERSANT

q
MINUS
GREATER

wait
COMMA

mode
BRACKET_C
SEMICOLON
IF
BRACKET_O

test_bit
BRACKET_O

q
MINUS
GREATER

key
DOT

bit_nr
COMMA

q
MINUS
GREATER

key
DOT

flags
BRACKET_C
BRACKET_C

ret
OP_ASSIGNMENT
BRACKET_O
MULT

action
BRACKET_C
BRACKET_O

q
MINUS
GREATER

key
DOT

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O

test_bit
BRACKET_O

q
MINUS
GREATER

key
DOT

bit_nr
COMMA

q
MINUS
GREATER

key
DOT

flags
BRACKET_C
AND
NOT

ret
BRACKET_C
SEMICOLON

finish_wait
BRACKET_O

wq
COMMA
AMPERSANT

q
MINUS
GREATER

wait
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__wait_on_bit
BRACKET_C
SEMICOLON
TYPE_INT

__sched

fastcall

out_of_line_wait_on_bit
BRACKET_O

void
MULT

word
COMMA
TYPE_INT

bit
COMMA
TYPE_INT
BRACKET_O
MULT

action
BRACKET_C
BRACKET_O

void
MULT
BRACKET_C
COMMA
TYPE_UNSIGNED

mode
BRACKET_C
CURLY_BRACKET_O

wait_queue_head_t
MULT

wq
OP_ASSIGNMENT

bit_waitqueue
BRACKET_O

word
COMMA

bit
BRACKET_C
SEMICOLON

DEFINE_WAIT_BIT
BRACKET_O

wait
COMMA

word
COMMA

bit
BRACKET_C
SEMICOLON

return

__wait_on_bit
BRACKET_O

wq
COMMA
AMPERSANT

wait
COMMA

action
COMMA

mode
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

out_of_line_wait_on_bit
BRACKET_C
SEMICOLON
TYPE_INT

__sched

fastcall

__wait_on_bit_lock
BRACKET_O

wait_queue_head_t
MULT

wq
COMMA
STRUCT

wait_bit_queue
MULT

q
COMMA
TYPE_INT
BRACKET_O
MULT

action
BRACKET_C
BRACKET_O

void
MULT
BRACKET_C
COMMA
TYPE_UNSIGNED

mode
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
DO
CURLY_BRACKET_O

prepare_to_wait_exclusive
BRACKET_O

wq
COMMA
AMPERSANT

q
MINUS
GREATER

wait
COMMA

mode
BRACKET_C
SEMICOLON
IF
BRACKET_O

test_bit
BRACKET_O

q
MINUS
GREATER

key
DOT

bit_nr
COMMA

q
MINUS
GREATER

key
DOT

flags
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
BRACKET_O

ret
OP_ASSIGNMENT
BRACKET_O
MULT

action
BRACKET_C
BRACKET_O

q
MINUS
GREATER

key
DOT

flags
BRACKET_C
BRACKET_C
BRACKET_C
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
WHILE
BRACKET_O

test_and_set_bit
BRACKET_O

q
MINUS
GREATER

key
DOT

bit_nr
COMMA

q
MINUS
GREATER

key
DOT

flags
BRACKET_C
BRACKET_C
SEMICOLON

finish_wait
BRACKET_O

wq
COMMA
AMPERSANT

q
MINUS
GREATER

wait
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__wait_on_bit_lock
BRACKET_C
SEMICOLON
TYPE_INT

__sched

fastcall

out_of_line_wait_on_bit_lock
BRACKET_O

void
MULT

word
COMMA
TYPE_INT

bit
COMMA
TYPE_INT
BRACKET_O
MULT

action
BRACKET_C
BRACKET_O

void
MULT
BRACKET_C
COMMA
TYPE_UNSIGNED

mode
BRACKET_C
CURLY_BRACKET_O

wait_queue_head_t
MULT

wq
OP_ASSIGNMENT

bit_waitqueue
BRACKET_O

word
COMMA

bit
BRACKET_C
SEMICOLON

DEFINE_WAIT_BIT
BRACKET_O

wait
COMMA

word
COMMA

bit
BRACKET_C
SEMICOLON

return

__wait_on_bit_lock
BRACKET_O

wq
COMMA
AMPERSANT

wait
COMMA

action
COMMA

mode
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

out_of_line_wait_on_bit_lock
BRACKET_C
SEMICOLON

void

fastcall

__wake_up_bit
BRACKET_O

wait_queue_head_t
MULT

wq
COMMA

void
MULT

word
COMMA
TYPE_INT

bit
BRACKET_C
CURLY_BRACKET_O
STRUCT

wait_bit_key

key
OP_ASSIGNMENT

__WAIT_BIT_KEY_INITIALIZER
BRACKET_O

word
COMMA

bit
BRACKET_C
SEMICOLON
IF
BRACKET_O

waitqueue_active
BRACKET_O

wq
BRACKET_C
BRACKET_C

__wake_up
BRACKET_O

wq
COMMA

TASK_INTERRUPTIBLE
LOGICAL_OR

TASK_UNINTERRUPTIBLE
COMMA
NUMBER
COMMA
AMPERSANT

key
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

__wake_up_bit
BRACKET_C
SEMICOLON

void

fastcall

wake_up_bit
BRACKET_O

void
MULT

word
COMMA
TYPE_INT

bit
BRACKET_C
CURLY_BRACKET_O

__wake_up_bit
BRACKET_O

bit_waitqueue
BRACKET_O

word
COMMA

bit
BRACKET_C
COMMA

word
COMMA

bit
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

wake_up_bit
BRACKET_C
SEMICOLON

fastcall

wait_queue_head_t
MULT

bit_waitqueue
BRACKET_O

void
MULT

word
COMMA
TYPE_INT

bit
BRACKET_C
CURLY_BRACKET_O
CONST
TYPE_INT

shift
OP_ASSIGNMENT

BITS_PER_LONG
EQ
NUMBER
QUESTION_MARK
NUMBER
COLON
NUMBER
SEMICOLON
CONST
STRUCT

zone
MULT

zone
OP_ASSIGNMENT

page_zone
BRACKET_O

virt_to_page
BRACKET_O

word
BRACKET_C
BRACKET_C
SEMICOLON
TYPE_UNSIGNED
TYPE_LONG

val
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

word
LESS
LESS

shift
LOGICAL_OR

bit
SEMICOLON

return
AMPERSANT

zone
MINUS
GREATER

wait_table
CORNER_BRACKET_O

hash_long
BRACKET_O

val
COMMA

zone
MINUS
GREATER

wait_table_bits
BRACKET_C
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

bit_waitqueue
BRACKET_C
SEMICOLON
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
PP_INCLUDE
STRUCT

cpu_workqueue_struct
CURLY_BRACKET_O

spinlock_t

lock
SEMICOLON
STRUCT

list_head

worklist
SEMICOLON

wait_queue_head_t

more_work
SEMICOLON
STRUCT

work_struct
MULT

current_work
SEMICOLON
STRUCT

workqueue_struct
MULT

wq
SEMICOLON
STRUCT

task_struct
MULT

thread
SEMICOLON
TYPE_INT

run_depth
SEMICOLON
CURLY_BRACKET_C

____cacheline_aligned
SEMICOLON
STRUCT

workqueue_struct
CURLY_BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cpu_wq
SEMICOLON
STRUCT

list_head

list
SEMICOLON
CONST
TYPE_CHAR
MULT

name
SEMICOLON
TYPE_INT

singlethread
SEMICOLON
TYPE_INT

freezeable
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static

DEFINE_MUTEX
BRACKET_O

workqueue_mutex
BRACKET_C
SEMICOLON

static

LIST_HEAD
BRACKET_O

workqueues
BRACKET_C
SEMICOLON

static
TYPE_INT

singlethread_cpu

__read_mostly
SEMICOLON

static

cpumask_t

cpu_singlethread_map

__read_mostly
SEMICOLON

static

cpumask_t

cpu_populated_map

__read_mostly
SEMICOLON

static

inline
TYPE_INT

is_single_threaded
BRACKET_O
STRUCT

workqueue_struct
MULT

wq
BRACKET_C
CURLY_BRACKET_O

return

wq
MINUS
GREATER

singlethread
SEMICOLON
CURLY_BRACKET_C

static
CONST

cpumask_t
MULT

wq_cpu_map
BRACKET_O
STRUCT

workqueue_struct
MULT

wq
BRACKET_C
CURLY_BRACKET_O

return

is_single_threaded
BRACKET_O

wq
BRACKET_C
QUESTION_MARK
AMPERSANT

cpu_singlethread_map
COLON
AMPERSANT

cpu_populated_map
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

cpu_workqueue_struct
MULT

wq_per_cpu
BRACKET_O
STRUCT

workqueue_struct
MULT

wq
COMMA
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

unlikely
BRACKET_O

is_single_threaded
BRACKET_O

wq
BRACKET_C
BRACKET_C
BRACKET_C

cpu
OP_ASSIGNMENT

singlethread_cpu
SEMICOLON

return

per_cpu_ptr
BRACKET_O

wq
MINUS
GREATER

cpu_wq
COMMA

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline

void

set_wq_data
BRACKET_O
STRUCT

work_struct
MULT

work
COMMA
STRUCT

cpu_workqueue_struct
MULT

cwq
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

new
SEMICOLON

BUG_ON
BRACKET_O
NOT

work_pending
BRACKET_O

work
BRACKET_C
BRACKET_C
SEMICOLON

new
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

cwq
LOGICAL_OR
BRACKET_O
NUMBER

UL
LESS
LESS

WORK_STRUCT_PENDING
BRACKET_C
SEMICOLON

new
LOGICAL_OR
OP_ASSIGNMENT

WORK_STRUCT_FLAG_MASK
AMPERSANT
MULT

work_data_bits
BRACKET_O

work
BRACKET_C
SEMICOLON

atomic_long_set
BRACKET_O
AMPERSANT

work
MINUS
GREATER

data
COMMA

new
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

inline
STRUCT

cpu_workqueue_struct
MULT

get_wq_data
BRACKET_O
STRUCT

work_struct
MULT

work
BRACKET_C
CURLY_BRACKET_O

return
BRACKET_O

void
MULT
BRACKET_C
BRACKET_O

atomic_long_read
BRACKET_O
AMPERSANT

work
MINUS
GREATER

data
BRACKET_C
AMPERSANT

WORK_STRUCT_WQ_DATA_MASK
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

insert_work
BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
COMMA
STRUCT

work_struct
MULT

work
COMMA
TYPE_INT

tail
BRACKET_C
CURLY_BRACKET_O

set_wq_data
BRACKET_O

work
COMMA

cwq
BRACKET_C
SEMICOLON

smp_wmb
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

tail
BRACKET_C

list_add_tail
BRACKET_O
AMPERSANT

work
MINUS
GREATER

entry
COMMA
AMPERSANT

cwq
MINUS
GREATER

worklist
BRACKET_C
SEMICOLON
ELSE

list_add
BRACKET_O
AMPERSANT

work
MINUS
GREATER

entry
COMMA
AMPERSANT

cwq
MINUS
GREATER

worklist
BRACKET_C
SEMICOLON

wake_up
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

more_work
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

__queue_work
BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
COMMA
STRUCT

work_struct
MULT

work
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

flags
SEMICOLON

spin_lock_irqsave
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON

insert_work
BRACKET_O

cwq
COMMA

work
COMMA
NUMBER
BRACKET_C
SEMICOLON

spin_unlock_irqrestore
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
COMMA

flags
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

fastcall

queue_work
BRACKET_O
STRUCT

workqueue_struct
MULT

wq
COMMA
STRUCT

work_struct
MULT

work
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

test_and_set_bit
BRACKET_O

WORK_STRUCT_PENDING
COMMA

work_data_bits
BRACKET_O

work
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

work
MINUS
GREATER

entry
BRACKET_C
BRACKET_C
SEMICOLON

__queue_work
BRACKET_O

wq_per_cpu
BRACKET_O

wq
COMMA

get_cpu
BRACKET_O
BRACKET_C
BRACKET_C
COMMA

work
BRACKET_C
SEMICOLON

put_cpu
BRACKET_O
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

queue_work
BRACKET_C
SEMICOLON

void

delayed_work_timer_fn
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG

__data
BRACKET_C
CURLY_BRACKET_O
STRUCT

delayed_work
MULT

dwork
OP_ASSIGNMENT
BRACKET_O
STRUCT

delayed_work
MULT
BRACKET_C

__data
SEMICOLON
STRUCT

cpu_workqueue_struct
MULT

cwq
OP_ASSIGNMENT

get_wq_data
BRACKET_O
AMPERSANT

dwork
MINUS
GREATER

work
BRACKET_C
SEMICOLON
STRUCT

workqueue_struct
MULT

wq
OP_ASSIGNMENT

cwq
MINUS
GREATER

wq
SEMICOLON

__queue_work
BRACKET_O

wq_per_cpu
BRACKET_O

wq
COMMA

smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
COMMA
AMPERSANT

dwork
MINUS
GREATER

work
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

fastcall

queue_delayed_work
BRACKET_O
STRUCT

workqueue_struct
MULT

wq
COMMA
STRUCT

delayed_work
MULT

dwork
COMMA
TYPE_UNSIGNED
TYPE_LONG

delay
BRACKET_C
CURLY_BRACKET_O

timer_stats_timer_set_start_info
BRACKET_O
AMPERSANT

dwork
MINUS
GREATER

timer
BRACKET_C
SEMICOLON
IF
BRACKET_O

delay
EQ
NUMBER
BRACKET_C

return

queue_work
BRACKET_O

wq
COMMA
AMPERSANT

dwork
MINUS
GREATER

work
BRACKET_C
SEMICOLON

return

queue_delayed_work_on
BRACKET_O
MINUS
NUMBER
COMMA

wq
COMMA

dwork
COMMA

delay
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

queue_delayed_work
BRACKET_C
SEMICOLON
TYPE_INT

queue_delayed_work_on
BRACKET_O
TYPE_INT

cpu
COMMA
STRUCT

workqueue_struct
MULT

wq
COMMA
STRUCT

delayed_work
MULT

dwork
COMMA
TYPE_UNSIGNED
TYPE_LONG

delay
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
STRUCT

timer_list
MULT

timer
OP_ASSIGNMENT
AMPERSANT

dwork
MINUS
GREATER

timer
SEMICOLON
STRUCT

work_struct
MULT

work
OP_ASSIGNMENT
AMPERSANT

dwork
MINUS
GREATER

work
SEMICOLON
IF
BRACKET_O
NOT

test_and_set_bit
BRACKET_O

WORK_STRUCT_PENDING
COMMA

work_data_bits
BRACKET_O

work
BRACKET_C
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

BUG_ON
BRACKET_O

timer_pending
BRACKET_O

timer
BRACKET_C
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

work
MINUS
GREATER

entry
BRACKET_C
BRACKET_C
SEMICOLON

set_wq_data
BRACKET_O

work
COMMA

wq_per_cpu
BRACKET_O

wq
COMMA

raw_smp_processor_id
BRACKET_O
BRACKET_C
BRACKET_C
BRACKET_C
SEMICOLON

timer
MINUS
GREATER

expires
OP_ASSIGNMENT

jiffies
PLUS

delay
SEMICOLON

timer
MINUS
GREATER

data
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

dwork
SEMICOLON

timer
MINUS
GREATER

function
OP_ASSIGNMENT

delayed_work_timer_fn
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

cpu
GR_EQ
NUMBER
BRACKET_C
BRACKET_C

add_timer_on
BRACKET_O

timer
COMMA

cpu
BRACKET_C
SEMICOLON
ELSE

add_timer
BRACKET_O

timer
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

return

ret
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

queue_delayed_work_on
BRACKET_C
SEMICOLON

static

void

run_workqueue
BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
BRACKET_C
CURLY_BRACKET_O

spin_lock_irq
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

cwq
MINUS
GREATER

run_depth
PLUS
PLUS
SEMICOLON
IF
BRACKET_O

cwq
MINUS
GREATER

run_depth
GREATER
NUMBER
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O
STRING
COMMA

__FUNCTION__
COMMA

cwq
MINUS
GREATER

run_depth
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

worklist
BRACKET_C
BRACKET_C
CURLY_BRACKET_O
STRUCT

work_struct
MULT

work
OP_ASSIGNMENT

list_entry
BRACKET_O

cwq
MINUS
GREATER

worklist
DOT

next
COMMA
STRUCT

work_struct
COMMA

entry
BRACKET_C
SEMICOLON

work_func_t

f
OP_ASSIGNMENT

work
MINUS
GREATER

func
SEMICOLON

cwq
MINUS
GREATER

current_work
OP_ASSIGNMENT

work
SEMICOLON

list_del_init
BRACKET_O

cwq
MINUS
GREATER

worklist
DOT

next
BRACKET_C
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O

get_wq_data
BRACKET_O

work
BRACKET_C
NOT_EQ

cwq
BRACKET_C
SEMICOLON

work_clear_pending
BRACKET_O

work
BRACKET_C
SEMICOLON

f
BRACKET_O

work
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

in_atomic
BRACKET_O
BRACKET_C
OR

lockdep_depth
BRACKET_O

current
BRACKET_C
GREATER
NUMBER
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

printk
BRACKET_O

KERN_ERR
STRING
STRING
COMMA

current
MINUS
GREATER

comm
COMMA

preempt_count
BRACKET_O
BRACKET_C
COMMA

current
MINUS
GREATER

pid
BRACKET_C
SEMICOLON

printk
BRACKET_O

KERN_ERR
STRING
BRACKET_C
SEMICOLON

print_symbol
BRACKET_O
STRING
COMMA
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

f
BRACKET_C
SEMICOLON

debug_show_held_locks
BRACKET_O

current
BRACKET_C
SEMICOLON

dump_stack
BRACKET_O
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

spin_lock_irq
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

cwq
MINUS
GREATER

current_work
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

cwq
MINUS
GREATER

run_depth
MINUS
MINUS
SEMICOLON

spin_unlock_irq
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

worker_thread
BRACKET_O

void
MULT

__cwq
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
OP_ASSIGNMENT

__cwq
SEMICOLON

DEFINE_WAIT
BRACKET_O

wait
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cwq
MINUS
GREATER

wq
MINUS
GREATER

freezeable
BRACKET_C

current
MINUS
GREATER

flags
LOGICAL_OR
OP_ASSIGNMENT

PF_NOFREEZE
SEMICOLON

set_user_nice
BRACKET_O

current
COMMA
MINUS
NUMBER
BRACKET_C
SEMICOLON
FOR
BRACKET_O
SEMICOLON
SEMICOLON
BRACKET_C
CURLY_BRACKET_O

prepare_to_wait
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

more_work
COMMA
AMPERSANT

wait
COMMA

TASK_INTERRUPTIBLE
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

freezing
BRACKET_O

current
BRACKET_C
AND
NOT

kthread_should_stop
BRACKET_O
BRACKET_C
AND

list_empty
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

worklist
BRACKET_C
BRACKET_C

schedule
BRACKET_O
BRACKET_C
SEMICOLON

finish_wait
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

more_work
COMMA
AMPERSANT

wait
BRACKET_C
SEMICOLON

try_to_freeze
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

kthread_should_stop
BRACKET_O
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

run_workqueue
BRACKET_O

cwq
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return
NUMBER
SEMICOLON
CURLY_BRACKET_C
STRUCT

wq_barrier
CURLY_BRACKET_O
STRUCT

work_struct

work
SEMICOLON
STRUCT

completion

done
SEMICOLON
CURLY_BRACKET_C
SEMICOLON

static

void

wq_barrier_func
BRACKET_O
STRUCT

work_struct
MULT

work
BRACKET_C
CURLY_BRACKET_O
STRUCT

wq_barrier
MULT

barr
OP_ASSIGNMENT

container_of
BRACKET_O

work
COMMA
STRUCT

wq_barrier
COMMA

work
BRACKET_C
SEMICOLON

complete
BRACKET_O
AMPERSANT

barr
MINUS
GREATER

done
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

insert_wq_barrier
BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
COMMA
STRUCT

wq_barrier
MULT

barr
COMMA
TYPE_INT

tail
BRACKET_C
CURLY_BRACKET_O

INIT_WORK
BRACKET_O
AMPERSANT

barr
MINUS
GREATER

work
COMMA

wq_barrier_func
BRACKET_C
SEMICOLON

__set_bit
BRACKET_O

WORK_STRUCT_PENDING
COMMA

work_data_bits
BRACKET_O
AMPERSANT

barr
MINUS
GREATER

work
BRACKET_C
BRACKET_C
SEMICOLON

init_completion
BRACKET_O
AMPERSANT

barr
MINUS
GREATER

done
BRACKET_C
SEMICOLON

insert_work
BRACKET_O

cwq
COMMA
AMPERSANT

barr
MINUS
GREATER

work
COMMA

tail
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

flush_cpu_workqueue
BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

active
SEMICOLON
IF
BRACKET_O

cwq
MINUS
GREATER

thread
EQ

current
BRACKET_C
CURLY_BRACKET_O

run_workqueue
BRACKET_O

cwq
BRACKET_C
SEMICOLON

active
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
STRUCT

wq_barrier

barr
SEMICOLON

active
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

worklist
BRACKET_C
OR

cwq
MINUS
GREATER

current_work
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O

insert_wq_barrier
BRACKET_O

cwq
COMMA
AMPERSANT

barr
COMMA
NUMBER
BRACKET_C
SEMICOLON

active
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

active
BRACKET_C

wait_for_completion
BRACKET_O
AMPERSANT

barr
DOT

done
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

return

active
SEMICOLON
CURLY_BRACKET_C

void

fastcall

flush_workqueue
BRACKET_O
STRUCT

workqueue_struct
MULT

wq
BRACKET_C
CURLY_BRACKET_O
CONST

cpumask_t
MULT

cpu_map
OP_ASSIGNMENT

wq_cpu_map
BRACKET_O

wq
BRACKET_C
SEMICOLON
TYPE_INT

cpu
SEMICOLON

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

for_each_cpu_mask
BRACKET_O

cpu
COMMA
MULT

cpu_map
BRACKET_C

flush_cpu_workqueue
BRACKET_O

per_cpu_ptr
BRACKET_O

wq
MINUS
GREATER

cpu_wq
COMMA

cpu
BRACKET_C
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

flush_workqueue
BRACKET_C
SEMICOLON

static
TYPE_INT

try_to_grab_pending
BRACKET_O
STRUCT

work_struct
MULT

work
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
IF
BRACKET_O
NOT

test_and_set_bit
BRACKET_O

WORK_STRUCT_PENDING
COMMA

work_data_bits
BRACKET_O

work
BRACKET_C
BRACKET_C
BRACKET_C

return
NUMBER
SEMICOLON

cwq
OP_ASSIGNMENT

get_wq_data
BRACKET_O

work
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cwq
BRACKET_C

return

ret
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

list_empty
BRACKET_O
AMPERSANT

work
MINUS
GREATER

entry
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

smp_rmb
BRACKET_O
BRACKET_C
SEMICOLON
IF
BRACKET_O

cwq
EQ

get_wq_data
BRACKET_O

work
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

list_del_init
BRACKET_O
AMPERSANT

work
MINUS
GREATER

entry
BRACKET_C
SEMICOLON

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static

void

wait_on_cpu_work
BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
COMMA
STRUCT

work_struct
MULT

work
BRACKET_C
CURLY_BRACKET_O
STRUCT

wq_barrier

barr
SEMICOLON
TYPE_INT

running
OP_ASSIGNMENT
NUMBER
SEMICOLON

spin_lock_irq
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

cwq
MINUS
GREATER

current_work
EQ

work
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

insert_wq_barrier
BRACKET_O

cwq
COMMA
AMPERSANT

barr
COMMA
NUMBER
BRACKET_C
SEMICOLON

running
OP_ASSIGNMENT
NUMBER
SEMICOLON
CURLY_BRACKET_C

spin_unlock_irq
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON
IF
BRACKET_O

unlikely
BRACKET_O

running
BRACKET_C
BRACKET_C

wait_for_completion
BRACKET_O
AMPERSANT

barr
DOT

done
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

static

void

wait_on_work
BRACKET_O
STRUCT

work_struct
MULT

work
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
SEMICOLON
STRUCT

workqueue_struct
MULT

wq
SEMICOLON
CONST

cpumask_t
MULT

cpu_map
SEMICOLON
TYPE_INT

cpu
SEMICOLON

might_sleep
BRACKET_O
BRACKET_C
SEMICOLON

cwq
OP_ASSIGNMENT

get_wq_data
BRACKET_O

work
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

cwq
BRACKET_C

return
SEMICOLON

wq
OP_ASSIGNMENT

cwq
MINUS
GREATER

wq
SEMICOLON

cpu_map
OP_ASSIGNMENT

wq_cpu_map
BRACKET_O

wq
BRACKET_C
SEMICOLON

for_each_cpu_mask
BRACKET_O

cpu
COMMA
MULT

cpu_map
BRACKET_C

wait_on_cpu_work
BRACKET_O

per_cpu_ptr
BRACKET_O

wq
MINUS
GREATER

cpu_wq
COMMA

cpu
BRACKET_C
COMMA

work
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

void

cancel_work_sync
BRACKET_O
STRUCT

work_struct
MULT

work
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O
NOT

try_to_grab_pending
BRACKET_O

work
BRACKET_C
BRACKET_C

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON

wait_on_work
BRACKET_O

work
BRACKET_C
SEMICOLON

work_clear_pending
BRACKET_O

work
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

cancel_work_sync
BRACKET_C
SEMICOLON

void

cancel_rearming_delayed_work
BRACKET_O
STRUCT

delayed_work
MULT

dwork
BRACKET_C
CURLY_BRACKET_O
WHILE
BRACKET_O
NOT

del_timer
BRACKET_O
AMPERSANT

dwork
MINUS
GREATER

timer
BRACKET_C
AND
NOT

try_to_grab_pending
BRACKET_O
AMPERSANT

dwork
MINUS
GREATER

work
BRACKET_C
BRACKET_C

cpu_relax
BRACKET_O
BRACKET_C
SEMICOLON

wait_on_work
BRACKET_O
AMPERSANT

dwork
MINUS
GREATER

work
BRACKET_C
SEMICOLON

work_clear_pending
BRACKET_O
AMPERSANT

dwork
MINUS
GREATER

work
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

cancel_rearming_delayed_work
BRACKET_C
SEMICOLON

static
STRUCT

workqueue_struct
MULT

keventd_wq

__read_mostly
SEMICOLON
TYPE_INT

fastcall

schedule_work
BRACKET_O
STRUCT

work_struct
MULT

work
BRACKET_C
CURLY_BRACKET_O

return

queue_work
BRACKET_O

keventd_wq
COMMA

work
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

schedule_work
BRACKET_C
SEMICOLON
TYPE_INT

fastcall

schedule_delayed_work
BRACKET_O
STRUCT

delayed_work
MULT

dwork
COMMA
TYPE_UNSIGNED
TYPE_LONG

delay
BRACKET_C
CURLY_BRACKET_O

timer_stats_timer_set_start_info
BRACKET_O
AMPERSANT

dwork
MINUS
GREATER

timer
BRACKET_C
SEMICOLON

return

queue_delayed_work
BRACKET_O

keventd_wq
COMMA

dwork
COMMA

delay
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

schedule_delayed_work
BRACKET_C
SEMICOLON
TYPE_INT

schedule_delayed_work_on
BRACKET_O
TYPE_INT

cpu
COMMA
STRUCT

delayed_work
MULT

dwork
COMMA
TYPE_UNSIGNED
TYPE_LONG

delay
BRACKET_C
CURLY_BRACKET_O

return

queue_delayed_work_on
BRACKET_O

cpu
COMMA

keventd_wq
COMMA

dwork
COMMA

delay
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

schedule_delayed_work_on
BRACKET_C
SEMICOLON
TYPE_INT

schedule_on_each_cpu
BRACKET_O

work_func_t

func
BRACKET_C
CURLY_BRACKET_O
TYPE_INT

cpu
SEMICOLON
STRUCT

work_struct
MULT

works
SEMICOLON

works
OP_ASSIGNMENT

alloc_percpu
BRACKET_O
STRUCT

work_struct
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

works
BRACKET_C

return
MINUS

ENOMEM
SEMICOLON

preempt_disable
BRACKET_O
BRACKET_C
SEMICOLON

for_each_online_cpu
BRACKET_O

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

work_struct
MULT

work
OP_ASSIGNMENT

per_cpu_ptr
BRACKET_O

works
COMMA

cpu
BRACKET_C
SEMICOLON

INIT_WORK
BRACKET_O

work
COMMA

func
BRACKET_C
SEMICOLON

set_bit
BRACKET_O

WORK_STRUCT_PENDING
COMMA

work_data_bits
BRACKET_O

work
BRACKET_C
BRACKET_C
SEMICOLON

__queue_work
BRACKET_O

per_cpu_ptr
BRACKET_O

keventd_wq
MINUS
GREATER

cpu_wq
COMMA

cpu
BRACKET_C
COMMA

work
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

preempt_enable
BRACKET_O
BRACKET_C
SEMICOLON

flush_workqueue
BRACKET_O

keventd_wq
BRACKET_C
SEMICOLON

free_percpu
BRACKET_O

works
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

void

flush_scheduled_work
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

flush_workqueue
BRACKET_O

keventd_wq
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL
BRACKET_O

flush_scheduled_work
BRACKET_C
SEMICOLON
TYPE_INT

execute_in_process_context
BRACKET_O

work_func_t

fn
COMMA
STRUCT

execute_work
MULT

ew
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O
NOT

in_interrupt
BRACKET_O
BRACKET_C
BRACKET_C
CURLY_BRACKET_O

fn
BRACKET_O
AMPERSANT

ew
MINUS
GREATER

work
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

INIT_WORK
BRACKET_O
AMPERSANT

ew
MINUS
GREATER

work
COMMA

fn
BRACKET_C
SEMICOLON

schedule_work
BRACKET_O
AMPERSANT

ew
MINUS
GREATER

work
BRACKET_C
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

execute_in_process_context
BRACKET_C
SEMICOLON
TYPE_INT

keventd_up
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

return

keventd_wq
NOT_EQ

NULL
SEMICOLON
CURLY_BRACKET_C
TYPE_INT

current_is_keventd
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
SEMICOLON
TYPE_INT

cpu
OP_ASSIGNMENT

smp_processor_id
BRACKET_O
BRACKET_C
SEMICOLON
TYPE_INT

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

BUG_ON
BRACKET_O
NOT

keventd_wq
BRACKET_C
SEMICOLON

cwq
OP_ASSIGNMENT

per_cpu_ptr
BRACKET_O

keventd_wq
MINUS
GREATER

cpu_wq
COMMA

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

current
EQ

cwq
MINUS
GREATER

thread
BRACKET_C

ret
OP_ASSIGNMENT
NUMBER
SEMICOLON

return

ret
SEMICOLON
CURLY_BRACKET_C

static
STRUCT

cpu_workqueue_struct
MULT

init_cpu_workqueue
BRACKET_O
STRUCT

workqueue_struct
MULT

wq
COMMA
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
OP_ASSIGNMENT

per_cpu_ptr
BRACKET_O

wq
MINUS
GREATER

cpu_wq
COMMA

cpu
BRACKET_C
SEMICOLON

cwq
MINUS
GREATER

wq
OP_ASSIGNMENT

wq
SEMICOLON

spin_lock_init
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

lock
BRACKET_C
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

worklist
BRACKET_C
SEMICOLON

init_waitqueue_head
BRACKET_O
AMPERSANT

cwq
MINUS
GREATER

more_work
BRACKET_C
SEMICOLON

return

cwq
SEMICOLON
CURLY_BRACKET_C

static
TYPE_INT

create_workqueue_thread
BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
COMMA
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

workqueue_struct
MULT

wq
OP_ASSIGNMENT

cwq
MINUS
GREATER

wq
SEMICOLON
CONST
TYPE_CHAR
MULT

fmt
OP_ASSIGNMENT

is_single_threaded
BRACKET_O

wq
BRACKET_C
QUESTION_MARK
STRING
COLON
STRING
SEMICOLON
STRUCT

task_struct
MULT

p
SEMICOLON

p
OP_ASSIGNMENT

kthread_create
BRACKET_O

worker_thread
COMMA

cwq
COMMA

fmt
COMMA

wq
MINUS
GREATER

name
COMMA

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

IS_ERR
BRACKET_O

p
BRACKET_C
BRACKET_C

return

PTR_ERR
BRACKET_O

p
BRACKET_C
SEMICOLON

cwq
MINUS
GREATER

thread
OP_ASSIGNMENT

p
SEMICOLON

return
NUMBER
SEMICOLON
CURLY_BRACKET_C

static

void

start_workqueue_thread
BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
COMMA
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
STRUCT

task_struct
MULT

p
OP_ASSIGNMENT

cwq
MINUS
GREATER

thread
SEMICOLON
IF
BRACKET_O

p
NOT_EQ

NULL
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cpu
GR_EQ
NUMBER
BRACKET_C

kthread_bind
BRACKET_O

p
COMMA

cpu
BRACKET_C
SEMICOLON

wake_up_process
BRACKET_O

p
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C
STRUCT

workqueue_struct
MULT

__create_workqueue
BRACKET_O
CONST
TYPE_CHAR
MULT

name
COMMA
TYPE_INT

singlethread
COMMA
TYPE_INT

freezeable
BRACKET_C
CURLY_BRACKET_O
STRUCT

workqueue_struct
MULT

wq
SEMICOLON
STRUCT

cpu_workqueue_struct
MULT

cwq
SEMICOLON
TYPE_INT

err
OP_ASSIGNMENT
NUMBER
COMMA

cpu
SEMICOLON

wq
OP_ASSIGNMENT

kzalloc
BRACKET_O

sizeof
BRACKET_O
MULT

wq
BRACKET_C
COMMA

GFP_KERNEL
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

wq
BRACKET_C

return

NULL
SEMICOLON

wq
MINUS
GREATER

cpu_wq
OP_ASSIGNMENT

alloc_percpu
BRACKET_O
STRUCT

cpu_workqueue_struct
BRACKET_C
SEMICOLON
IF
BRACKET_O
NOT

wq
MINUS
GREATER

cpu_wq
BRACKET_C
CURLY_BRACKET_O

kfree
BRACKET_O

wq
BRACKET_C
SEMICOLON

return

NULL
SEMICOLON
CURLY_BRACKET_C

wq
MINUS
GREATER

name
OP_ASSIGNMENT

name
SEMICOLON

wq
MINUS
GREATER

singlethread
OP_ASSIGNMENT

singlethread
SEMICOLON

wq
MINUS
GREATER

freezeable
OP_ASSIGNMENT

freezeable
SEMICOLON

INIT_LIST_HEAD
BRACKET_O
AMPERSANT

wq
MINUS
GREATER

list
BRACKET_C
SEMICOLON
IF
BRACKET_O

singlethread
BRACKET_C
CURLY_BRACKET_O

cwq
OP_ASSIGNMENT

init_cpu_workqueue
BRACKET_O

wq
COMMA

singlethread_cpu
BRACKET_C
SEMICOLON

err
OP_ASSIGNMENT

create_workqueue_thread
BRACKET_O

cwq
COMMA

singlethread_cpu
BRACKET_C
SEMICOLON

start_workqueue_thread
BRACKET_O

cwq
COMMA
MINUS
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O

mutex_lock
BRACKET_O
AMPERSANT

workqueue_mutex
BRACKET_C
SEMICOLON

list_add
BRACKET_O
AMPERSANT

wq
MINUS
GREATER

list
COMMA
AMPERSANT

workqueues
BRACKET_C
SEMICOLON

for_each_possible_cpu
BRACKET_O

cpu
BRACKET_C
CURLY_BRACKET_O

cwq
OP_ASSIGNMENT

init_cpu_workqueue
BRACKET_O

wq
COMMA

cpu
BRACKET_C
SEMICOLON
IF
BRACKET_O

err
OR
NOT

cpu_online
BRACKET_O

cpu
BRACKET_C
BRACKET_C
CONTINUE
SEMICOLON

err
OP_ASSIGNMENT

create_workqueue_thread
BRACKET_O

cwq
COMMA

cpu
BRACKET_C
SEMICOLON

start_workqueue_thread
BRACKET_O

cwq
COMMA

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

mutex_unlock
BRACKET_O
AMPERSANT

workqueue_mutex
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O

err
BRACKET_C
CURLY_BRACKET_O

destroy_workqueue
BRACKET_O

wq
BRACKET_C
SEMICOLON

wq
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

return

wq
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

__create_workqueue
BRACKET_C
SEMICOLON

static

void

cleanup_workqueue_thread
BRACKET_O
STRUCT

cpu_workqueue_struct
MULT

cwq
COMMA
TYPE_INT

cpu
BRACKET_C
CURLY_BRACKET_O
IF
BRACKET_O

cwq
MINUS
GREATER

thread
EQ

NULL
BRACKET_C

return
SEMICOLON

flush_cpu_workqueue
BRACKET_O

cwq
BRACKET_C
SEMICOLON

kthread_stop
BRACKET_O

cwq
MINUS
GREATER

thread
BRACKET_C
SEMICOLON

cwq
MINUS
GREATER

thread
OP_ASSIGNMENT

NULL
SEMICOLON
CURLY_BRACKET_C

void

destroy_workqueue
BRACKET_O
STRUCT

workqueue_struct
MULT

wq
BRACKET_C
CURLY_BRACKET_O
CONST

cpumask_t
MULT

cpu_map
OP_ASSIGNMENT

wq_cpu_map
BRACKET_O

wq
BRACKET_C
SEMICOLON
STRUCT

cpu_workqueue_struct
MULT

cwq
SEMICOLON
TYPE_INT

cpu
SEMICOLON

mutex_lock
BRACKET_O
AMPERSANT

workqueue_mutex
BRACKET_C
SEMICOLON

list_del
BRACKET_O
AMPERSANT

wq
MINUS
GREATER

list
BRACKET_C
SEMICOLON

mutex_unlock
BRACKET_O
AMPERSANT

workqueue_mutex
BRACKET_C
SEMICOLON

for_each_cpu_mask
BRACKET_O

cpu
COMMA
MULT

cpu_map
BRACKET_C
CURLY_BRACKET_O

cwq
OP_ASSIGNMENT

per_cpu_ptr
BRACKET_O

wq
MINUS
GREATER

cpu_wq
COMMA

cpu
BRACKET_C
SEMICOLON

cleanup_workqueue_thread
BRACKET_O

cwq
COMMA

cpu
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

free_percpu
BRACKET_O

wq
MINUS
GREATER

cpu_wq
BRACKET_C
SEMICOLON

kfree
BRACKET_O

wq
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

EXPORT_SYMBOL_GPL
BRACKET_O

destroy_workqueue
BRACKET_C
SEMICOLON

static
TYPE_INT

__devinit

workqueue_cpu_callback
BRACKET_O
STRUCT

notifier_block
MULT

nfb
COMMA
TYPE_UNSIGNED
TYPE_LONG

action
COMMA

void
MULT

hcpu
BRACKET_C
CURLY_BRACKET_O
TYPE_UNSIGNED
TYPE_INT

cpu
OP_ASSIGNMENT
BRACKET_O
TYPE_UNSIGNED
TYPE_LONG
BRACKET_C

hcpu
SEMICOLON
STRUCT

cpu_workqueue_struct
MULT

cwq
SEMICOLON
STRUCT

workqueue_struct
MULT

wq
SEMICOLON

action
AMPERSANT
OP_ASSIGNMENT
TILDE

CPU_TASKS_FROZEN
SEMICOLON
SWITCH
BRACKET_O

action
BRACKET_C
CURLY_BRACKET_O

case

CPU_LOCK_ACQUIRE
COLON

mutex_lock
BRACKET_O
AMPERSANT

workqueue_mutex
BRACKET_C
SEMICOLON

return

NOTIFY_OK
SEMICOLON

case

CPU_LOCK_RELEASE
COLON

mutex_unlock
BRACKET_O
AMPERSANT

workqueue_mutex
BRACKET_C
SEMICOLON

return

NOTIFY_OK
SEMICOLON

case

CPU_UP_PREPARE
COLON

cpu_set
BRACKET_O

cpu
COMMA

cpu_populated_map
BRACKET_C
SEMICOLON
CURLY_BRACKET_C

list_for_each_entry
BRACKET_O

wq
COMMA
AMPERSANT

workqueues
COMMA

list
BRACKET_C
CURLY_BRACKET_O

cwq
OP_ASSIGNMENT

per_cpu_ptr
BRACKET_O

wq
MINUS
GREATER

cpu_wq
COMMA

cpu
BRACKET_C
SEMICOLON
SWITCH
BRACKET_O

action
BRACKET_C
CURLY_BRACKET_O

case

CPU_UP_PREPARE
COLON
IF
BRACKET_O
NOT

create_workqueue_thread
BRACKET_O

cwq
COMMA

cpu
BRACKET_C
BRACKET_C
BREAK
SEMICOLON

printk
BRACKET_O

KERN_ERR
STRING
COMMA

cpu
BRACKET_C
SEMICOLON

return

NOTIFY_BAD
SEMICOLON

case

CPU_ONLINE
COLON

start_workqueue_thread
BRACKET_O

cwq
COMMA

cpu
BRACKET_C
SEMICOLON
BREAK
SEMICOLON

case

CPU_UP_CANCELED
COLON

start_workqueue_thread
BRACKET_O

cwq
COMMA
MINUS
NUMBER
BRACKET_C
SEMICOLON

case

CPU_DEAD
COLON

cleanup_workqueue_thread
BRACKET_O

cwq
COMMA

cpu
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
CURLY_BRACKET_C
CURLY_BRACKET_C

return

NOTIFY_OK
SEMICOLON
CURLY_BRACKET_C

void

__init

init_workqueues
BRACKET_O

void
BRACKET_C
CURLY_BRACKET_O

cpu_populated_map
OP_ASSIGNMENT

cpu_online_map
SEMICOLON

singlethread_cpu
OP_ASSIGNMENT

first_cpu
BRACKET_O

cpu_possible_map
BRACKET_C
SEMICOLON

cpu_singlethread_map
OP_ASSIGNMENT

cpumask_of_cpu
BRACKET_O

singlethread_cpu
BRACKET_C
SEMICOLON

hotcpu_notifier
BRACKET_O

workqueue_cpu_callback
COMMA
NUMBER
BRACKET_C
SEMICOLON

keventd_wq
OP_ASSIGNMENT

create_workqueue
BRACKET_O
STRING
BRACKET_C
SEMICOLON

BUG_ON
BRACKET_O
NOT

keventd_wq
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
CONTINUE
CONTINUE
CONTINUE
<TERMINATION>
| [END] 
`------------------------------------------------------------------------------------
//Benchmark (including overhead)
//    TokenN: 158588
//    Total Time:  0.65 [sec]
//    Runs:        1 [1]
//    TimePerRun:  0.65 [sec]
//    Time / Char:         4.10007e-07
//    Clock Cycles / Char: 751.544
// Overhead:
//     Checksum (meaningless): 585001 [1]
//    Total Time:  0 [sec]
//    Runs:        1 [1]
//    TimePerRun:  0 [sec]
//    Time / Char:         0
//    Clock Cycles / Char: 0
//Result:
//   Time / Run:          0.65
//   Time / Char:         4.10007e-07
//   Clock Cycles / Char: 751.544
{
   quex_version    = {0.33.1}, 
   cpu_name        = {IntelCoreDuo}, 
   cpu_code        = {T2400}, 
   cpu_freq_mhz    = {1833}, 
   cc_name         = {g++    }, 
   cc_version      = {4.3.1  }, 
   cc_opt_flags    = {-O3 }, 
   executable_size = {82057}, 
   os_name         = {linux-2}, 
   tester_email    = {fschaef@users.sourceforge.net}, 
   year         = {2008},
   month        = {10},
   day          = {30},
   file_name    = {linux-2.6.22.17-kernel-dir.c}, 
   file_size    = {1585337}, 
   char_size    = {1}, 
   buffer_size  = {65536}, 
   line_count   = {true},
   column_count = {true},
   note         = {}, 
   repetition_n               = {1}, 
   time_per_repetition        = {0.65},
   token_n                    = {158588}, 
   clock_cycles_per_character = {751.544}, 
   clock_cycles_per_token     = {7512.86}, 
}

