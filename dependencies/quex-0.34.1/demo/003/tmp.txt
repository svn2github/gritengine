

  0.009    0.000    0.009    0.000 {len}
  0.179    0.000    1.551    0.000 copy.py:250(_deepcopy_dict)
  0.207    0.000    1.925    0.000 copy.py:276(_deepcopy_inst)
  0.000    0.000    0.000    0.000 DEFINITIONS.py:20(<module>)
  0.000    0.000    0.000    0.000 DEFINITIONS.py:44(check)
  0.000    0.000    0.000    0.000 GetPot.py:124(__parse_argument_vector)
  0.000    0.000    0.000    0.000 GetPot.py:345(__get_remaining_string)
  0.000    0.000    0.000    0.000 GetPot.py:353(__deal_propperly_with_array_arguments)
  0.000    0.000    0.000    0.000 GetPot.py:374(check_match)
  0.000    0.000    0.000    0.000 GetPot.py:459(nominus_followers)
  0.000    0.000    0.000    0.000 GetPot.py:677(DBE_expand_string)
  0.000    0.000    0.000    0.000 GetPot.py:71(<module>)
  0.000    0.000    0.000    0.000 GetPot.py:75(GetPot_variable)
  0.000    0.000    0.000    0.000 GetPot.py:85(GetPot)
  0.000    0.000    0.000    0.000 GetPot.py:86(__init__)
  0.000    0.000    0.000    0.000 GetPot.py:938(unidentified_options)
  0.000    0.000    0.000    0.000 StringIO.py:114(tell)
  0.000    0.000    0.000    0.000 StringIO.py:30(<module>)
  0.000    0.000    0.000    0.000 StringIO.py:38(_complain_ifclosed)
  0.000    0.000    0.000    0.000 StringIO.py:42(StringIO)
  0.000    0.000    0.000    0.000 StringIO.py:54(__init__)
  0.000    0.000    0.000    0.000 UserDict.py:17(__getitem__)
  0.000    0.000    0.000    0.000 __init__.py:1(<module>)
  0.000    0.000    0.000    0.000 action_code_formatter.py:1(<module>)
  0.000    0.000    0.000    0.000 action_info.py:2(<module>)
  0.000    0.000    0.000    0.000 action_info.py:2(ActionInfo)
  0.000    0.000    0.000    0.000 ambiguous_post_condition.py:15(<module>)
  0.000    0.000    0.000    0.000 auxiliary.py:48(__debug_exit)
  0.000    0.000    0.000    0.000 auxiliary.py:60(__debug_entry)
  0.000    0.000    0.000    0.000 auxiliary.py:7(__snap_until)
  0.000    0.000    0.000    0.000 character_counter.py:1(<module>)
  0.000    0.000    0.000    0.000 code_fragment.py:1(<module>)
  0.000    0.000    0.000    0.000 combined_pre_condition_state_machine.py:1(<module>)
  0.000    0.000    0.000    0.000 consistency_check.py:1(<module>)
  0.000    0.000    0.000    0.000 copy.py:112(_copy_with_constructor)
  0.000    0.000    0.000    0.000 core.py:11(Generator)
  0.000    0.000    0.000    0.000 core.py:114(StateOriginInfo)
  0.000    0.000    0.000    0.000 core.py:1293(__criteria)
  0.000    0.000    0.000    0.000 core.py:1310(sorter_dict_add)
  0.000    0.000    0.000    0.000 core.py:1358(<lambda>)
  0.000    0.000    0.000    0.000 core.py:1402(<lambda>)
  0.000    0.000    0.000    0.000 core.py:145(__init__)
  0.000    0.000    0.000    0.000 core.py:1513(<lambda>)
  0.000    0.000    0.000    0.000 core.py:1519(<lambda>)
  0.000    0.000    0.000    0.000 core.py:1520(<lambda>)
  0.000    0.000    0.000    0.000 core.py:1724(is_empty)
  0.000    0.000    0.000    0.000 core.py:1787(delete_state_origins)
  0.000    0.000    0.000    0.000 core.py:1883(add_epsilon_transition)
  0.000    0.000    0.000    0.000 core.py:1920(mount_to_initial_state)
  0.000    0.000    0.000    0.000 core.py:1981(__get_state_index_normalization)
  0.000    0.000    0.000    0.000 core.py:2(<module>)
  0.000    0.000    0.000    0.000 core.py:23(Transition)
  0.000    0.000    0.000    0.000 core.py:304(StateInfo)
  0.000    0.000    0.000    0.000 core.py:333(get_transitions)
  0.000    0.000    0.000    0.000 core.py:455(history_item)
  0.000    0.000    0.000    0.000 core.py:573(is_empty)
  0.000    0.000    0.000    0.000 core.py:58(something)
  0.000    0.000    0.000    0.000 core.py:66(EpsilonTransition)
  0.000    0.000    0.000    0.000 core.py:670(set_origin_list)
  0.000    0.000    0.000    0.000 core.py:744(add_origin_list)
  0.000    0.000    0.000    0.000 core.py:756(add_epsilon_target_state)
  0.000    0.000    0.000    0.000 core.py:84(get_string)
  0.000    0.000    0.000    0.000 core.py:965(<lambda>)
  0.000    0.000    0.000    0.000 core.py:990(StateMachine)
  0.000    0.000    0.000    0.000 cpp.py:1(<module>)
  0.000    0.000    0.000    0.000 exception.py:1(<module>)
  0.000    0.000    0.000    0.000 exception.py:1(RegularExpressionException)
  0.000    0.000    0.000    0.000 file_in.py:130(<lambda>)
  0.000    0.000    0.000    0.000 file_in.py:17(<module>)
  0.000    0.000    0.000    0.000 file_in.py:22(EndOfStreamException)
  0.000    0.000    0.000    0.000 file_in.py:221(read_until_letter)
  0.000    0.000    0.000    0.000 file_in.py:234(read_until_non_letter)
  0.000    0.000    0.000    0.000 file_in.py:279(open_file_or_die)
  0.000    0.000    0.000    0.000 file_in.py:29(__skip_until_newline)
  0.000    0.000    0.000    0.000 file_in.py:342(verify_next_word)
  0.000    0.000    0.000    0.000 fnmatch.py:11(<module>)
  0.000    0.000    0.000    0.000 index.py:2(<module>)
  0.000    0.000    0.000    0.000 input_position_backward_detector.py:11(<module>)
  0.000    0.000    0.000    0.000 interval_handling.py:213(NumberSet)
  0.000    0.000    0.000    0.000 interval_handling.py:24(Interval)
  0.000    0.000    0.000    0.000 label.py:2(<module>)
  0.000    0.000    0.000    0.000 lexer_mode.py:129(Match)
  0.000    0.000    0.000    0.000 lexer_mode.py:130(__init__)
  0.000    0.000    0.000    0.000 lexer_mode.py:166(LexMode)
  0.000    0.000    0.000    0.000 lexer_mode.py:167(__init__)
  0.000    0.000    0.000    0.000 lexer_mode.py:20(<module>)
  0.000    0.000    0.000    0.000 lexer_mode.py:374(add_option)
  0.000    0.000    0.000    0.000 lexer_mode.py:47(OptionInfo)
  0.000    0.000    0.000    0.000 lexer_mode.py:496(PatternShorthand)
  0.000    0.000    0.000    0.000 lexer_mode.py:50(__init__)
  0.000    0.000    0.000    0.000 lexer_mode.py:83(ReferencedCodeFragment)
  0.000    0.000    0.000    0.000 lexer_mode.py:84(__init__)
  0.000    0.000    0.000    0.000 mode_classes.py:1(<module>)
  0.000    0.000    0.000    0.000 mode_definition.py:1(<module>)
  0.000    0.000    0.000    0.000 mode_definition.py:215(check_for_event_specification)
  0.000    0.000    0.000    0.000 mode_definition.py:45(parse_mode_option_list)
  0.000    0.000    0.000    0.000 os.py:724(urandom)
  0.000    0.000    0.000    0.000 parallelize.py:2(<module>)
  0.000    0.000    0.000    0.000 property.py:84(<lambda>)
  0.000    0.000    0.000    0.000 python.py:1(<module>)
  0.000    0.000    0.000    0.000 query.py:21(do)
  0.000    0.000    0.000    0.000 quex_file_parser.py:160(__closing_bracket)
  0.000    0.000    0.000    0.000 quex_file_parser.py:268(parse_initial_mode_definition)
  0.000    0.000    0.000    0.000 random.py:609(WichmannHill)
  0.000    0.000    0.000    0.000 random.py:69(Random)
  0.000    0.000    0.000    0.000 random.py:759(SystemRandom)
  0.000    0.000    0.000    0.000 random.py:88(__init__)
  0.000    0.000    0.000    0.000 random.py:97(seed)
  0.000    0.000    0.000    0.000 re.py:178(compile)
  0.000    0.000    0.000    0.000 re.py:219(_compile)
  0.000    0.000    0.000    0.000 regular_expression.py:1(<module>)
  0.000    0.000    0.000    0.000 repeat.py:5(<module>)
  0.000    0.000    0.000    0.000 sequentialize.py:2(<module>)
  0.000    0.000    0.000    0.000 sequentialize.py:24(<lambda>)
  0.000    0.000    0.000    0.000 sequentialize.py:28(<lambda>)
  0.000    0.000    0.000    0.000 setup.py:12(something)
  0.000    0.000    0.000    0.000 setup.py:147(validate)
  0.000    0.000    0.000    0.000 setup.py:224(__check_identifier)
  0.000    0.000    0.000    0.000 setup.py:233(__get_integer)
  0.000    0.000    0.000    0.000 setup_border_conditions.py:1(<module>)
  0.000    0.000    0.000    0.000 setup_border_conditions.py:4(do)
  0.000    0.000    0.000    0.000 setup_post_condition.py:2(<module>)
  0.000    0.000    0.000    0.000 setup_pre_condition.py:2(<module>)
  0.000    0.000    0.000    0.000 snap_backslashed_character.py:1(<module>)
  0.000    0.000    0.000    0.000 snap_backslashed_character.py:63(__parse_hex_number)
  0.000    0.000    0.000    0.000 snap_backslashed_character.py:69(__parse_base_number)
  0.000    0.000    0.000    0.000 snap_character_string.py:1(<module>)
  0.000    0.000    0.000    0.000 sre_compile.py:360(_simple)
  0.000    0.000    0.000    0.000 sre_compile.py:367(_compile_info)
  0.000    0.000    0.000    0.000 sre_compile.py:38(_compile)
  0.000    0.000    0.000    0.000 sre_compile.py:480(isstring)
  0.000    0.000    0.000    0.000 sre_compile.py:486(_code)
  0.000    0.000    0.000    0.000 sre_compile.py:501(compile)
  0.000    0.000    0.000    0.000 sre_parse.py:132(__len__)
  0.000    0.000    0.000    0.000 sre_parse.py:136(__getitem__)
  0.000    0.000    0.000    0.000 sre_parse.py:138(__setitem__)
  0.000    0.000    0.000    0.000 sre_parse.py:140(__getslice__)
  0.000    0.000    0.000    0.000 sre_parse.py:144(append)
  0.000    0.000    0.000    0.000 sre_parse.py:146(getwidth)
  0.000    0.000    0.000    0.000 sre_parse.py:184(__init__)
  0.000    0.000    0.000    0.000 sre_parse.py:188(__next)
  0.000    0.000    0.000    0.000 sre_parse.py:201(match)
  0.000    0.000    0.000    0.000 sre_parse.py:207(get)
  0.000    0.000    0.000    0.000 sre_parse.py:307(_parse_sub)
  0.000    0.000    0.000    0.000 sre_parse.py:385(_parse)
  0.000    0.000    0.000    0.000 sre_parse.py:669(parse)
  0.000    0.000    0.000    0.000 sre_parse.py:73(__init__)
  0.000    0.000    0.000    0.000 sre_parse.py:96(__init__)
  0.000    0.000    0.000    0.000 state_machine_coder.py:1(<module>)
  0.000    0.000    0.000    0.000 state_transition_coder.py:1(<module>)
  0.000    0.000    0.000    0.000 string.py:279(split)
  0.000    0.000    0.000    0.000 string_handling.py:1(<module>)
  0.000    0.000    0.000    0.000 tempfile.py:107(_RandomNameSequence)
  0.000    0.000    0.000    0.000 tempfile.py:367(_TemporaryFileWrapper)
  0.000    0.000    0.000    0.000 token_id_maker.py:12(TokenInfo)
  0.000    0.000    0.000    0.000 token_id_maker.py:13(__init__)
  0.000    0.000    0.000    0.000 token_id_maker.py:22(Setup)
  0.000    0.000    0.000    0.000 traditional_character_set.py:1(<module>)
  0.000    0.000    0.000    0.000 traditional_character_set.py:10(Tracker)
  0.000    0.000    0.000    0.000 traditional_character_set.py:11(__init__)
  0.000    0.000    0.000    0.000 ucs_db_parser.py:133(PropertyInfo)
  0.000    0.000    0.000    0.000 ucs_db_parser.py:134(__init__)
  0.000    0.000    0.000    0.000 ucs_db_parser.py:16(open_data_base_file)
  0.000    0.000    0.000    0.000 ucs_db_parser.py:317(PropertyInfoDB)
  0.000    0.000    0.000    0.000 ucs_db_parser.py:318(__init__)
  0.000    0.000    0.000    0.000 ucs_db_parser.py:322(__getitem__)
  0.000    0.000    0.000    0.000 ucs_db_parser.py:404(<lambda>)
  0.000    0.000    0.000    0.000 utf8.py:1(<module>)
  0.000    0.000    0.000    0.000 utf8.py:189(<lambda>)
  0.000    0.000    0.000    0.000 {_sre.compile}
  0.000    0.000    0.000    0.000 {binascii.hexlify}
  0.000    0.000    0.000    0.000 {function seed at 0x812941c}
  0.000    0.000    0.000    0.000 {isinstance}
  0.000    0.000    0.000    0.000 {math.exp}
  0.000    0.000    0.000    0.000 {math.log}
  0.000    0.000    0.000    0.000 {math.sqrt}
  0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
  0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
  0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
  0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
  0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
  0.000    0.000    0.000    0.000 {method 'isalpha' of 'str' objects}
  0.000    0.000    0.000    0.000 {method 'isdigit' of 'str' objects}
  0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
  0.000    0.000    0.000    0.000 {method 'readline' of 'file' objects}
  0.000    0.000    0.000    0.000 {open}
  0.000    0.000    0.000    0.000 {posix.access}
  0.000    0.000    0.000    0.000 {posix.close}
  0.000    0.000    0.000    0.000 {posix.open}
  0.000    0.000    0.000    0.000 {posix.read}
  0.000    0.000    0.000    0.000 {sys.exit}
  0.000    0.000    0.000    0.000 {thread.allocate_lock}
  0.000    0.000    0.001    0.000 GetPot.py:361(search)
  0.000    0.000    0.001    0.000 GetPot.py:450(follow)
  0.000    0.000    0.001    0.000 StringIO.py:119(read)
  0.000    0.000    0.001    0.000 core.py:1(<module>)
  0.000    0.000    0.001    0.000 core.py:1743(assert_consistency)
  0.000    0.000    0.001    0.000 core.py:1901(mount_to_acceptance_states)
  0.000    0.000    0.001    0.000 file_in.py:319(read_next_word)
  0.000    0.000    0.001    0.000 file_in.py:75(is_identifier)
  0.000    0.000    0.001    0.000 lexer_mode.py:497(__init__)
  0.000    0.000    0.001    0.000 property.py:50(__parse_property_expression)
  0.000    0.000    0.001    0.000 snap_backslashed_character.py:17(do)
  0.000    0.000    0.001    0.000 traditional_character_set.py:37(consider_interval)
  0.000    0.000    0.001    0.000 {filter}
  0.000    0.000    0.001    0.001 core.py:15(<module>)
  0.000    0.000    0.001    0.001 interval_handling.py:17(<module>)
  0.000    0.000    0.001    0.001 property.py:1(<module>)
  0.000    0.000    0.002    0.000 auxiliary.py:76(__check_for_EOF_or_FAIL_pattern)
  0.000    0.000    0.002    0.000 core.py:1782(has_origins)
  0.000    0.000    0.002    0.000 core.py:1816(mark_state_origins)
  0.000    0.000    0.002    0.000 core.py:1841(create_new_init_state)
  0.000    0.000    0.002    0.000 core.py:464(__construct)
  0.000    0.000    0.002    0.000 traditional_character_set.py:43(consider_letter)
  0.000    0.000    0.002    0.002 auxiliary.py:70(create_EOF_detecting_state_machine)
  0.000    0.000    0.002    0.002 setup.py:78(do)
  0.000    0.000    0.003    0.003 code_fragment.py:17(parse_unique)
  0.000    0.000    0.003    0.003 code_fragment.py:4(parse)
  0.000    0.000    0.004    0.000 core.py:356(snap_replacement)
  0.000    0.000    0.004    0.004 quex_file_parser.py:43(__parse_domain_of_whitespace_separated_elements)
  0.000    0.000    0.007    0.001 traditional_character_set.py:57(do_string)
  0.000    0.000    0.007    0.007 quex_file_parser.py:202(parse_token_id_definitions)
  0.000    0.000    0.009    0.002 file_in.py:348(error_msg)
  0.000    0.000    0.009    0.009 character_set_expression.py:27(<module>)
  0.000    0.000    0.013    0.000 core.py:1846(create_new_state)
  0.000    0.000    0.016    0.016 ucs_db_parser.py:381(init_db)
  0.000    0.000    0.034    0.002 snap_character_string.py:7(do)
  0.000    0.000    0.036    0.003 repeat.py:57(kleene_closure)
  0.000    0.000    0.048    0.002 mode_definition.py:120(parse_action_code)
  0.000    0.000    0.062    0.001 core.py:1466(split_state_set)
  0.000    0.000    0.096    0.002 core.py:384(__snap_repetition_range)
  0.000    0.000    0.096    0.006 repeat.py:12(do)
  0.000    0.000    0.105    0.002 core.py:1978(__repr__)
  0.000    0.000    0.111    0.003 sequentialize.py:38(<lambda>)
  0.000    0.000    0.326    0.109 ucs_db_parser.py:115(load_db)
  0.000    0.000    0.345    0.031 property.py:7(do)
  0.000    0.000    0.506    0.006 core.py:1508(<lambda>)
  0.000    0.000    1.508    0.066 mode_definition.py:73(parse_mode_element)
  0.000    0.000    1.509    0.754 mode_definition.py:10(parse)
  0.000    0.000    2.342    0.781 property.py:30(do_shortcut)
  0.000    0.000    2.670    0.191 ucs_db_parser.py:160(get_character_set)
  0.000    0.000    2.686    0.192 ucs_db_parser.py:350(get_character_set)
  0.000    0.000    2.688    0.084 character_set_expression.py:105(snap_property_set)
  0.000    0.000    2.692    0.385 character_set_expression.py:182(snap_set_list)
  0.000    0.000    2.828    0.354 character_set_expression.py:121(snap_set_term)
  0.000    0.000    2.829    0.283 character_set_expression.py:71(snap_set_expression)
  0.000    0.000    3.049    0.305 character_set_expression.py:55(do)
  0.000    0.000    8.558    8.558 quex_file_parser.py:144(parse_pattern_name_definitions)
  0.000    0.000    9.980    0.294 core.py:166(snap_expression)
  0.000    0.000    9.989    0.294 regular_expression.py:6(parse)
  0.000    0.000   10.077    1.120 quex_file_parser.py:88(parse_section)
  0.000    0.000   10.077   10.077 core.py:177(__get_mode_db)
  0.000    0.000   10.077   10.077 core.py:25(do)
  0.000    0.000   10.077   10.077 quex_file_parser.py:27(do)
  0.000    0.000   10.112   10.112 <string>:1(<module>)
  0.000    0.000   10.112   10.112 {execfile}
  0.001    0.000    0.001    0.000 copy.py:100(_copy_immutable)
  0.001    0.000    0.001    0.000 core.py:1430(get_state_set_containing_state_index)
  0.001    0.000    0.001    0.000 core.py:1549(get_new_state_index)
  0.001    0.000    0.001    0.000 core.py:1731(is_acceptance)
  0.001    0.000    0.001    0.000 core.py:33(__init__)
  0.001    0.000    0.001    0.000 core.py:342(get_normal_target_states)
  0.001    0.000    0.001    0.000 core.py:576(is_acceptance)
  0.001    0.000    0.001    0.000 core.py:688(set_store_input_position_f)
  0.001    0.000    0.001    0.000 core.py:721(__set_origin)
  0.001    0.000    0.001    0.000 core.py:803(replace_target_index)
  0.001    0.000    0.001    0.000 file_in.py:95(read_until_whitespace)
  0.001    0.000    0.001    0.000 index.py:24(get)
  0.001    0.000    0.001    0.000 {method 'extend' of 'list' objects}
  0.001    0.000    0.001    0.000 {method 'items' of 'dict' objects}
  0.001    0.000    0.001    0.000 {method 'reverse' of 'list' objects}
  0.001    0.000    0.001    0.000 {method 'tell' of 'file' objects}
  0.001    0.000    0.001    0.000 {method 'values' of 'dict' objects}
  0.001    0.000    0.002    0.000 core.py:1928(set_acceptance)
  0.001    0.000    0.002    0.000 core.py:675(set_acceptance)
  0.001    0.000    0.002    0.000 core.py:712(add_origin)
  0.001    0.000    0.002    0.000 utf8.py:143(__read_one_utf8_code_from_stream)
  0.001    0.000    0.003    0.000 core.py:348(get_target_state_indices)
  0.001    0.000    0.003    0.000 traditional_character_set.py:20(__consider_interval)
  0.001    0.000    0.005    0.000 core.py:1277(get_acceptance_state_list)
  0.001    0.000    0.011    0.000 traditional_character_set.py:60(do)
  0.001    0.000    0.013    0.000 core.py:330(get_origin_list)
  0.001    0.000    0.041    0.002 mode_definition.py:160(parse_brief_token_sender)
  0.001    0.000    0.061    0.001 core.py:626(has_only_one_target_for_trigger_set)
  0.001    0.000    0.067    0.000 interval_handling.py:353(get_intervals)
  0.001    0.000    0.069    0.000 core.py:412(consider)
  0.001    0.000    0.070    0.000 core.py:409(get_trigger_dictionary)
  0.001    0.000    0.100    0.001 interval_handling.py:486(get_utf8_string)
  0.001    0.000    0.101    0.001 core.py:42(get_string)
  0.001    0.000    0.103    0.001 core.py:952(get_string)
  0.001    0.000    0.107    0.001 auxiliary.py:40(__debug_print)
  0.001    0.000    0.143    0.003 core.py:1016(clone)
  0.001    0.000    0.152    0.004 sequentialize.py:9(do)
  0.001    0.000    6.593    0.103 core.py:459(__beautify)
  0.001    0.000    8.019    0.106 core.py:216(snap_primary)
  0.001    0.000    9.980    0.294 core.py:194(snap_term)
  0.001    0.000    9.990    0.285 core.py:63(do)
  0.001    0.001    0.001    0.001 auxiliary.py:1(<module>)
  0.001    0.001    0.001    0.001 core.py:30(<module>)
  0.001    0.001    0.001    0.001 quex_file_parser.py:18(<module>)
  0.001    0.001    0.001    0.001 random.py:39(<module>)
  0.001    0.001    0.001    0.001 token_id_maker.py:2(<module>)
  0.001    0.001    0.002    0.002 tempfile.py:18(<module>)
  0.001    0.001    0.003    0.003 ucs_db_parser.py:385(__parse_property_name_alias_and_type)
  0.001    0.001    0.005    0.005 core.py:4(<module>)
  0.001    0.001    0.022    0.022 query.py:1(<module>)
  0.001    0.001    0.024    0.024 setup.py:2(<module>)
  0.001    0.001    0.238    0.238 ucs_db_parser.py:426(load_binary_properties)
  0.001    0.001   10.112   10.112 quex-exe.py:19(<module>)
  0.002    0.000    0.002    0.000 core.py:456(__init__)
  0.002    0.000    0.002    0.000 interval_handling.py:333(is_empty)
  0.002    0.000    0.002    0.000 {chr}
  0.002    0.000    0.002    0.000 {method 'keys' of 'dict' objects}
  0.002    0.000    0.002    0.000 {method 'seek' of 'file' objects}
  0.002    0.000    0.002    0.000 {range}
  0.002    0.000    0.003    0.000 core.py:1221(<lambda>)
  0.002    0.000    0.003    0.000 core.py:483(<lambda>)
  0.002    0.000    0.006    0.000 file_in.py:70(is_identifier_continue)
  0.002    0.000    0.008    0.000 file_in.py:86(read_identifier)
  0.002    0.000    0.009    0.000 index.py:31(map_state_combination_to_index)
  0.002    0.000    0.105    0.001 core.py:923(clone)
  0.002    0.000    0.105    0.002 core.py:1996(get_string)
  0.002    0.000    0.170    0.001 core.py:992(__init__)
  0.002    0.002    0.013    0.013 ucs_db_parser.py:411(__parse_property_value_and_value_aliases)
  0.003    0.000    0.004    0.000 copy.py:65(copy)
  0.003    0.000    0.004    0.000 file_in.py:64(is_identifier_start)
  0.003    0.000    0.005    0.000 file_in.py:28(skip_whitespace)
  0.003    0.000    0.008    0.000 core.py:1771(has_state_index)
  0.003    0.000    0.013    0.001 file_in.py:109(read_until_closing_bracket)
  0.003    0.000    0.035    0.000 core.py:339(get_epsilon_target_state_indices)
  0.003    0.000    0.099    0.000 interval_handling.py:188(get_utf8_string)
  0.003    0.000    0.104    0.000 core.py:317(__init__)
  0.003    0.000    1.544    0.006 core.py:1440(get_aux_state)
  0.003    0.000    2.493    0.008 core.py:1855(add_transition)
  0.004    0.000    0.004    0.000 {ord}
  0.004    0.000    0.005    0.000 core.py:1768(has_start_state_index)
  0.004    0.000    0.049    0.000 core.py:1096(get_epsilon_closure_of_state_set)
  0.004    0.000    9.987    0.294 core.py:119(snap_conditional_expression)
  0.005    0.000    0.101    0.000 core.py:76(__init__)
  0.005    0.000    0.110    0.000 {repr}
  0.005    0.000    2.706    0.042 core.py:1410(get_hopcroft_optimization)
  0.005    0.000    3.886    0.061 core.py:1330(get_DFA)
  0.006    0.000    0.009    0.000 file_in.py:134(match_against_cache)
  0.006    0.002    2.670    0.668 ucs_db_parser.py:194(init_code_point_db)
  0.007    0.000    0.047    0.000 core.py:1110(get_epsilon_closure)
  0.007    0.000    0.096    0.000 interval_handling.py:165(__utf8_char)
  0.007    0.000    0.151    0.001 core.py:428(get_trigger_set_line_up)
  0.008    0.000    0.008    0.000 utf8.py:132(<lambda>)
  0.009    0.002    0.009    0.002 {method 'readlines' of 'file' objects}
  0.010    0.000    0.010    0.000 ucs_db_parser.py:75(__enter_string)
  0.010    0.010    0.012    0.012 ucs_db_parser.py:1(<module>)
  0.011    0.000    0.016    0.000 utf8.py:107(__int_to_bit_string)
  0.012    0.000    0.012    0.000 {method 'isspace' of 'str' objects}
  0.012    0.000    3.979    0.007 core.py:760(add_transition)
  0.014    0.000    0.087    0.000 utf8.py:62(map_unicode_to_utf8)
  0.015    0.000    0.015    0.000 {method 'iteritems' of 'dict' objects}
  0.019    0.000    0.056    0.000 utf8.py:124(__bit_string_to_int)
  0.020    0.020    0.020    0.020 ucs_db_parser.py:38(convert_column_to_number)
  0.022    0.000    0.033    0.000 interval_handling.py:149(inverse)
  0.022    0.000    2.557    0.015 core.py:1157(get_elementary_trigger_sets)
  0.024    0.000    0.024    0.000 ucs_db_parser.py:78(__enter_number)
  0.027    0.000    0.027    0.000 {min}
  0.028    0.000    0.028    0.000 {method 'read' of 'file' objects}
  0.030    0.000    3.493    0.006 interval_handling.py:409(inverse)
  0.031    0.000    2.557    0.002 interval_handling.py:356(union)
  0.032    0.001    0.057    0.001 file_in.py:263(get_current_line_info_number)
  0.033    0.000    0.033    0.000 copy.py:197(_deepcopy_atomic)
  0.033    0.000    0.033    0.000 {method 'update' of 'dict' objects}
  0.036    0.000    0.036    0.000 {max}
  0.037    0.037    2.336    2.336 ucs_db_parser.py:454(load_UnicodeData)
  0.040    0.000    1.204    0.000 copy.py:223(_deepcopy_list)
  0.044    0.000    0.044    0.000 interval_handling.py:56(is_empty)
  0.046    0.000    0.046    0.000 {method 'has_key' of 'dict' objects}
  0.050    0.000    0.066    0.000 ucs_db_parser.py:474(convert)
  0.052    0.000    0.052    0.000 {method 'split' of 'str' objects}
  0.053    0.018    0.076    0.025 ucs_db_parser.py:47(convert_column_to_interval)
  0.058    0.000    0.058    0.000 {built-in method sub}
  0.059    0.000    1.205    0.000 interval_handling.py:220(__init__)
  0.079    0.000    0.108    0.000 interval_handling.py:428(<lambda>)
  0.093    0.000    0.093    0.000 {method 'replace' of 'str' objects}
  0.096    0.000    0.254    0.001 interval_handling.py:421(clean)
  0.111    0.000    0.138    0.000 interval_handling.py:245(quick_append_interval)
  0.140    0.001    0.141    0.001 index.py:51(register_state_machine)
  0.144    0.000    0.144    0.000 {id}
  0.148    0.000    0.148    0.000 {method 'get' of 'dict' objects}
  0.148    0.030    0.989    0.198 ucs_db_parser.py:25(parse_table)
  0.149    0.000    0.149    0.000 {method 'append' of 'list' objects}
  0.164    0.000    0.164    0.000 {hasattr}
  0.168    0.000    0.168    0.000 interval_handling.py:70(check_overlap)
  0.188    0.000    0.188    0.000 {method 'strip' of 'str' objects}
  0.215    0.000    0.215    0.000 interval_handling.py:28(__init__)
  0.295    0.000    1.344    0.000 {map}
  0.305    0.000    0.424    0.000 ucs_db_parser.py:34(<lambda>)
  0.321    0.036    1.484    0.165 ucs_db_parser.py:81(convert_table_to_associative_map)
  0.326    0.000    2.936    0.001 interval_handling.py:371(intersection)
  0.330    0.000    0.444    0.000 copy.py:260(_keep_alive)
  0.356    0.000    0.356    0.000 {cmp}
  0.416    0.000    0.732    0.000 ucs_db_parser.py:66(__enter_number_set)
  0.606    0.000    1.913    0.000 {method 'sort' of 'list' objects}
  0.867    0.000    1.193    0.000 interval_handling.py:295(<lambda>)
  1.002    0.000    3.998    0.000 interval_handling.py:256(add_interval)
  1.152    0.000    1.152    0.000 interval_handling.py:76(check_touch)
  0.795    0.000    2.154    0.000 copy.py:144(deepcopy)
