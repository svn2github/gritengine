<?xml version="1.0" encoding="UTF-8"?>

<section title="Game Objects" id="gameobject">

    <image src="example_image.png" title="Energy Ball">
    Objects glue together the various subsystems.
    </image>

    As a trivial example, a ball of energy that floats up and down could be
    implemented with an object.  The game designer writes a class with an
    initialisation callback that creates a graphics body in the graphics world,
    and stores a pointer to it in a field of the new object.  The class also
    has a destruction callback that can be used to clean up the graphics body
    when the object is removed from the scene.  Finally, there is a per-step
    callback to move the ball around, presumably using a sin function or
    similar.  If a light source is desired, then a light body would be created
    in the graphics world as well, and e.g. its intensity can be modified in
    the step callback.  Similarly, other graphics bodies, particles, and
    physical behaviour can be added if desired.  Audio bodies can be added in
    the audio world.  All of these "bodies", which manifest in independent
    subsystems, are created and controlled by the object in question.

</section>
