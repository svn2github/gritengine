{\rtf1\ansi\ansicpg1252\deff0\deflang1046{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset0 Consolas;}{\f2\fnil\fcharset2 Symbol;}}
{\colortbl ;\red255\green0\blue0;\red75\green172\blue198;\red0\green0\blue255;\red0\green77\blue187;\red247\green150\blue70;}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\b\f0\fs28 If you can read this file, it means that this editor is not stable and may not work properly yet.\b0\fs22\par
_______________________________________________________________________________\par
First of all, any suggestions, ideas or contributions are welcome! :D\par
I'm not a professional programmer yet, and I do all this currently stuff in only a few weeks, so don't expect so much, and,\par
maybe you can find many wrong terms inside code/documents, and also many absurd errors everywhere.. (also my native language is not english, so you can understand..)\par
There is a lot of things not fully functional and many ideas that can be changed or removed on the future.\par
So,\par
\b\i "GRIT EDITOR"\b0\i0  is a level editor for Grit Engine, that includes some extra stuff like game modes and assets, runs on specific behaviors and can not be run on all default Grit versions. (but can be modified on future)\par
\b It comprises:\b0\par
\b "Level Event Editor"\b0 : (needs splines on hud system, [mygui reference: UnitTest_Spline]) \cf1 (TODO)\cf0\par
Script generator based on node conections to generate in-level events. (what happens when level starts, what happens when a trigger is touched..)\par
Specifications:\par
\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 You can program all level behaviors without touching the code\par
{\pntext\f2\'B7\tab}If you select a object in the viewport, you can add his variable on editor and do what you want with this object\par
{\pntext\f2\'B7\tab}The engine have many pre-created "nodes", but you can create your own. In technicaly level, nodes that don't have a "in" connection are saved as a new function on level script and can be called by the game system, and nodes with "in" connectors are concatenated inside his parents (example: the "level_events.start()" function is called by the game system for initiate all nodes connected on node "Level Start", triggers works on similar way [touched/untouched])\b\par
\pard\sa200\sl276\slmult1 Material editor\b0 :\cf1  (TODO)\cf0\par
Basic material editor using nodes too.\par
\b Play\b0 :\cf2\par
\cf0 Play in editor, simulated play (you still editing), new window (opens another instance of Grit on game mode)\par
\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Uses a lua script that defines the gameplay, so, in the editor you can select what kind of gameplay you want to run when you hit play (like FPS, TPS, racing game..)\par
\pard\sa200\sl276\slmult1\b Object editor\b0 : \cf1 (TODO)\par
\cf0 A complete window that you can set object materials, test animation blending, modify the object script and test it on realtime\par
\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Also something like this: {\field{\*\fldinst{HYPERLINK "http://img27.imageshack.us/img27/4770/myguigraph.png"}}{\fldrslt{\ul\cf3 http://img27.imageshack.us/img27/4770/myguigraph.png}}}\f0\fs22\par
\pard\sa200\sl276\slmult1\b Content browser\b0 :\cf1  (TODO)\par
\cf0 A window that contains thumbnails auto generated of materials, objects, textures.. Browsing by folder, also another tab with classes (like triggers, cameras, volumes [maybe not, I don't know how Grit will works on the  future]..)\par
\b Cinematic Editor:\cf1  \b0 (TODO)\par
\cf0 A editor with timeline, keyframes.. (also splines with path editing)\par
\b Gizmo\b0 : (not on this current release because I have problems with grit nodes :/, but I'm working on it)\par
transform/rotate/scale (e.g. {\field{\*\fldinst{HYPERLINK "http://wiki.blender.org/uploads/a/a3/FAQ-Transform_widget-2.jpg"}}{\fldrslt{\ul\cf3 http://wiki.blender.org/uploads/a/a3/FAQ-Transform_widget-2.jpg}}}\f0\fs22 )\par
\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Needs to cast a mesh ray to select objects without physics\par
\pard\sa200\sl276\slmult1\b Undo/Redo history\cf1  \b0 (TODO)\par
\cf0\b Properties editor \cf2\b0 (W.I.P)\par
\cf0 Shows position, rotation, scale, and all object properties of the selected object in viewport (save these modifications on level)\par
\b Editor save interface \cf2\b0 (W.I.P)\par
\cf0 (themes, window positions..)\par
\b Outliner \cf1\b0 (TODO)\par
\cf0 Shows a list of all objects in scene\par
\b Additional notes: \b0\par
The toolbar will be moved below the menu bar.\par
\b\fs28 Roadmap:\b0\fs22\par
All above features\par
+\par
\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Editor needs to control what objects can save or not (if you can play on viewport, it means that you can create objects during the gameplay, but you don't want to save them, right? [if you want to save objects when playing you can use  "Simulate mode"]).\par
{\pntext\f2\'B7\tab}Windows - resizeable, draggable, with scroll bar\par
{\pntext\f2\'B7\tab}Level Options: Contains all level global settings (like level name, clock rate, env cube map..)\par
{\pntext\f2\'B7\tab}Radio buttons, selects, lists, trees, combobox, tabs, rounded colour pick, grids, status bar\par
{\pntext\f2\'B7\tab}Loading bars [hud almost done](PROBLEM: Grit freezes when loading objects/textures, also a problem during gameplay :( )\par
{\pntext\f2\'B7\tab}Cross platform Open file dialog (probably will costs a custom build of Grit, because Linux version will needs a GUI library like wxLua)\par
\pard\sa200\sl276\slmult1\b\fs28 Basic usage:\b0\fs22\par
\b Loads the editor:\b0\par
\cf4 include\cf0  \cf5 "/editor/init.lua"\par
\cf0\b Create a new level and save it:\par
\b0 You can create a new level and include a normal Grit lua level file, like \cf2 include\cf0  \cf5 "/playground/init.lua"\cf0  and then save it to playground.lvl\par
\b\fs28 Working buttons:(toolbar, menus)\b0\fs22\par
\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 New\par
{\pntext\f2\'B7\tab}Open (you can open a "Grit Level (*.lvl)" or simple create a blank level and import a .lua file)\par
{\pntext\f2\'B7\tab}Save/Save-as\par
{\pntext\f2\'B7\tab}Postprocess\par
{\pntext\f2\'B7\tab}Wireframe/Solid/Wireframe_Solid\par
{\pntext\f2\'B7\tab}Play/Play in-game\cf2 (W.I.P)\cf0 /Simulate\cf1 (TODO)\par
\cf0{\pntext\f2\'B7\tab}Toggle physics\par
{\pntext\f2\'B7\tab}Physics debug\par
\pard\sa200\sl240\slmult1\b\fs24 Hotkeys:\b0\fs22\par
\b Editing:\b0\par
\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl240\slmult1 Alt+g - Play in viewport\par
{\pntext\f2\'B7\tab}(Right click + drag) -> Enter Movable camera mode\par
{\pntext\f2\'B7\tab}(Right click + drag) + Shift -> Move camera fast\par
{\pntext\f2\'B7\tab}(Right click + drag) + E -> Select Object\par
{\pntext\f2\'B7\tab}(Right click + drag) + Ctrl+D -> Duplicate selected object\par
{\pntext\f2\'B7\tab}(Right click + drag) + Delete -> Delete selected object\par
{\pntext\f2\'B7\tab}(Right click + drag) + arrow keys, I and K -> Move/Rotate selected object\par
{\pntext\f2\'B7\tab}Tab - hide/show console\par
\pard\sa200\sl240\slmult1\b Playing:\b0\par
\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl240\slmult1 Esc/Tab/Alt+g - Return to editor\par
\pard\sa200\sl240\slmult1 Currently no in-game console. TODO: a subtle and tiny console on bottom side of screen\par
\b\fs24 Commands:\fs22\par
\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl240\slmult1\b0\f1 set_spawn_point() -> \f0 Set the level spawn point where are you pointing on, or you can specify a vector3() position\par
\pard\sa200\sl276\slmult1 ...\par
}
 